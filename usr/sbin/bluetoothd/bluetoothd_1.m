void sub_100067778(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000677D4(uint64_t a1)
{
  if (qword_1008D6798 != -1) {
    dispatch_once(&qword_1008D6798, &stru_100881168);
  }
  sub_1001F780C(qword_1008D6790);
  if (dword_1008D66A0 <= 90 && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 90LL))) {
    LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack setLowPowerModeWithReason:error:]_block_invoke",  90LL,  "### LPM entry timeout");
  }
  v9[0] = @"errorCode";
  v9[1] = @"errorCount";
  v10[0] = &off_1008C2900;
  v10[1] = &off_1008C2918;
  v9[2] = @"timeToEnter";
  v2 = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  sub_1000B05D8() - *(void *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v10[2] = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v10,  v9,  3LL));

  uint64_t v5 = sub_1002E6E00();
  sub_10002418C(__p, "LPM entry timeout");
  sub_1004FC14C(v5, (uint64_t *)__p, 3172327085LL);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v6 = sub_1002E8D94();
  (*(void (**)(uint64_t, void *))(*(void *)v6 + 216LL))(v6, v4);
}

void sub_100067980( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_100067A68(uint64_t a1)
{
  if (qword_1008D6798 != -1) {
    dispatch_once(&qword_1008D6798, &stru_100881168);
  }
  uint64_t result = sub_1001FC1FC(qword_1008D6790, *(void **)(a1 + 32));
  if ((_DWORD)result)
  {
    if (dword_1008D66A0 <= 90)
    {
      if (dword_1008D66A0 != -1) {
        return LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack setOfflineAdvertisingParams:]_block_invoke",  90LL,  "setOfflineAdvertisingParams failed with error %d",  result);
      }
      uint64_t v3 = result;
      int v4 = _LogCategory_Initialize(&dword_1008D66A0, 90LL);
      uint64_t result = v3;
      if (v4) {
        return LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack setOfflineAdvertisingParams:]_block_invoke",  90LL,  "setOfflineAdvertisingParams failed with error %d",  result);
      }
    }
  }

  return result;
}

void sub_1000680D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17)
{
  v18 = v17;

  _Unwind_Resume(a1);
}

void sub_100068458( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_100068480(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = *(void **)(a1 + 40);
  id v7 = v3;
  if (!v4)
  {
    uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
    uint64_t v6 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = v5;

    int v4 = *(void **)(a1 + 40);
    id v3 = v7;
  }

  [v4 addObject:v3];
  if (!*(_BYTE *)(a1 + 48))
  {
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      LogPrintF_safe( &dword_1008D66A0,  "void CBStackControllerCPP::addController(CBStackControllerBTStack * _Nonnull __strong)",  30LL,  "Add listeners");
    }

    if (qword_1008D5F40 != -1) {
      dispatch_once(&qword_1008D5F40, &stru_100881288);
    }
    sub_1003AE390(off_1008D5F38, a1);
    if (qword_1008D67E8 != -1) {
      dispatch_once(&qword_1008D67E8, &stru_100881308);
    }
    sub_1000762CC((uint64_t)off_1008D67E0 + 24, a1 + 8);
    if (qword_1008D5F10 != -1) {
      dispatch_once(&qword_1008D5F10, &stru_100881208);
    }
    sub_100594810((uint64_t)off_1008D5F08, a1 + 16, 0);
    if (qword_1008D5F00 != -1) {
      dispatch_once(&qword_1008D5F00, &stru_100881128);
    }
    sub_100008BE0((uint64_t)off_1008D5EF8 + 64, a1 + 24);
    if (qword_1008D60D0 != -1) {
      dispatch_once(&qword_1008D60D0, &stru_100881108);
    }
    sub_1004229CC(off_1008D60C8, a1 + 32);
    *(_BYTE *)(a1 + 48) = 1;
  }
}

void sub_100068668( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100068B18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100068B7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_msgSend(*(id *)(a1 + 40), "removeObject:");
  if (*(_BYTE *)(a1 + 48) && ![*(id *)(a1 + 40) count])
  {
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      LogPrintF_safe( &dword_1008D66A0,  "void CBStackControllerCPP::removeController(CBStackControllerBTStack * _Nonnull __strong)",  30LL,  "Remove listeners");
    }

    if (qword_1008D5F40 != -1) {
      dispatch_once(&qword_1008D5F40, &stru_100881288);
    }
    sub_1003AE4C8((uint64_t)off_1008D5F38, a1);
    if (qword_1008D67E8 != -1) {
      dispatch_once(&qword_1008D67E8, &stru_100881308);
    }
    sub_100009168((uint64_t)off_1008D67E0 + 24, a1 + 8);
    if (qword_1008D5F00 != -1) {
      dispatch_once(&qword_1008D5F00, &stru_100881128);
    }
    sub_100009168((uint64_t)off_1008D5EF8 + 64, a1 + 24);
    if (qword_1008D60D0 != -1) {
      dispatch_once(&qword_1008D60D0, &stru_100881108);
    }
    sub_100422AD4((uint64_t)off_1008D60C8, a1 + 32);
    *(_BYTE *)(a1 + 48) = 0;
  }
}

void sub_100068D08( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100068EB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100068F8C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100069218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100069400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006969C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_100069C54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void (**a12)(void), uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, void *a35)
{
  a12[2]();
  _Block_object_dispose((const void *)(v37 - 152), 8);

  _Unwind_Resume(a1);
}

uint64_t sub_100069D3C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100069D4C(uint64_t a1)
{
}

uint64_t sub_100069D54(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
  if (result)
  {
    if (dword_1008D66A0 <= 90)
    {
      if (dword_1008D66A0 == -1)
      {
        uint64_t result = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
      }

      uint64_t v3 = CUPrintNSError(result);
      int v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
      LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack connectWithCBConnection:completionHandler:]_block_invoke",  90LL,  "### ConnectDevice start failed: %@",  v4);
    }

    return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  return result;
}

void sub_100069E20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100069E30(uint64_t a1)
{
  v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) timer]);

  if (v2 == v3)
  {
    uint64_t v6 = a1 + 40;
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = *(void **)(v6 + 8);
    uint64_t v7 = CBErrorF(4294960574LL, "Timed out");
    id v8 = (id)objc_claimAutoreleasedReturnValue(v7);
    objc_msgSend(v5, "_connectDeviceCompleteRequest:error:", v4);
  }

void sub_100069EBC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10006A028( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_10006A23C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_10006A9C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006ABCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006AFF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10006B498(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006B638(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006BACC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, void *__p, uint64_t a40)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10006BB5C(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 231) < 0)
  {
    sub_100024238(&v4, *(void **)(a2 + 208), *(void *)(a2 + 216));
  }

  else
  {
    __int128 v4 = *(_OWORD *)(a2 + 208);
    uint64_t v5 = *(void *)(a2 + 224);
  }

  if (SHIBYTE(v5) < 0)
  {
    uint64_t v3 = (void *)v4;
    *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = *((void *)&v4 + 1) != 0LL;
    operator delete(v3);
  }

  else
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = SHIBYTE(v5) != 0;
  }

void sub_10006BBEC(uint64_t a1)
{
  if (qword_1008D5F20 != -1) {
    dispatch_once(&qword_1008D5F20, &stru_100881248);
  }
  sub_100625C0C(qword_1008D5F18, *(void **)(a1 + 32));
}

void sub_10006BF30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006BF74(uint64_t a1)
{
  if (qword_1008D5F20 != -1) {
    dispatch_once(&qword_1008D5F20, &stru_100881248);
  }
  sub_100625C0C(qword_1008D5F18, *(void **)(a1 + 32));
}

void sub_10006C920( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, void *__p, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, void *a46, uint64_t a47, int a48, __int16 a49, char a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10006CB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (!v3) {
    uint64_t v3 = *(void *)(a2 + 16);
  }
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = v3;
  if (*(char *)(a2 + 127) < 0)
  {
    sub_100024238(__p, *(void **)(a2 + 104), *(void *)(a2 + 112));
  }

  else
  {
    *(_OWORD *)__p = *(_OWORD *)(a2 + 104);
    uint64_t v9 = *(void *)(a2 + 120);
  }

  if (v9 >= 0) {
    __int128 v4 = __p;
  }
  else {
    __int128 v4 = (void **)__p[0];
  }
  uint64_t v5 = objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v4, __p[0], __p[1], v9));
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10006CBD4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10006CF88( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
}

void sub_10006D0A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006D598( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void (**a12)(void), void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, void *a37, uint64_t a38, char a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, id a44)
{
  a12[2](a12);
  _Block_object_dispose(&a39, 8);

  _Unwind_Resume(a1);
}

uint64_t sub_10006D688(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
  if (result)
  {
    if (dword_1008D66A0 <= 90)
    {
      if (dword_1008D66A0 == -1)
      {
        uint64_t result = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
      }

      uint64_t v3 = CUPrintNSError(result);
      __int128 v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
      LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack modifyDevice:connectionPriorityDevices:timeoutSeconds:completionHandler:]_block_invoke",  90LL,  "### ModifyDevice CnxPri failed: %@",  v4);
    }

    return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  return result;
}

void sub_10006D754(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006D764(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) timer]);

  if (v2 == v3)
  {
    uint64_t v6 = a1 + 40;
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = *(void **)(v6 + 8);
    uint64_t v7 = CBErrorF(4294960574LL, "Timed out");
    id v8 = (id)objc_claimAutoreleasedReturnValue(v7);
    objc_msgSend(v5, "_modifyDeviceCompleteRequest:error:", v4);
  }

void sub_10006D7F0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10006D9AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006DDE0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v5 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_10006DE8C()
{
}

void sub_10006DE94(void *a1, uint64_t a2)
{
  uint64_t v3 = (void *)a1[4];
  uint64_t v2 = a1[5];
  uint64_t v4 = a1[6];
  uint64_t v5 = *(void *)(a1[7] + 8LL);
  id obj = *(id *)(v5 + 40);
  [v3 modifyDevice:v2 leDevice:a2 settings:v4 error:&obj];
  objc_storeStrong((id *)(v5 + 40), obj);
}

void sub_10006DEE4(void *a1, uint64_t a2)
{
  uint64_t v3 = (void *)a1[4];
  uint64_t v2 = a1[5];
  uint64_t v4 = a1[6];
  uint64_t v5 = *(void *)(a1[7] + 8LL);
  id obj = *(id *)(v5 + 40);
  [v3 modifyDevice:v2 leDevice:a2 settings:v4 error:&obj];
  objc_storeStrong((id *)(v5 + 40), obj);
}

LABEL_158:
  v79 = [v10 listeningMode];
  if ((_DWORD)v79 && (_DWORD)v79 != sub_1003DFA38((uint64_t)a4))
  {
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      else {
        v80 = off_100881428[(int)v79 - 1];
      }
      LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack modifyDevice:btDevice:settings:error:]",  30LL,  "setListeningMode: device %@, %s",  v11,  v80);
    }

    if (qword_1008D60E0 != -1) {
      dispatch_once(&qword_1008D60E0, &stru_1008811C8);
    }
    v81 = sub_100215778((uint64_t)off_1008D60D8, (uint64_t)a4, 13LL, (uint64_t)v79, 2u);
    if (v81)
    {
      v82 = (v81 + 310000);
      if ((_DWORD)v82)
      {
        if (!a6) {
          goto LABEL_328;
        }
        v145 = CBErrorF(v82, "set setListeningMode failed");
        v128 = (void *)objc_claimAutoreleasedReturnValue(v145);
        goto LABEL_327;
      }
    }
  }

  v83 = [v10 listeningModeConfigs];
  if ((_DWORD)v83)
  {
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      v84 = CUPrintFlags32(v83, &unk_1006BB490);
      v85 = (void *)objc_claimAutoreleasedReturnValue(v84);
      LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack modifyDevice:btDevice:settings:error:]",  30LL,  "setListeningModeConfigs: device %@, %@",  v11,  v85);
    }

    if (qword_1008D60E0 != -1) {
      dispatch_once(&qword_1008D60E0, &stru_1008811C8);
    }
    v86 = sub_100215778((uint64_t)off_1008D60D8, (uint64_t)a4, 26LL, (uint64_t)v83, 2u);
    if (v86)
    {
      v87 = (v86 + 310000);
      if ((_DWORD)v87)
      {
        if (!a6) {
          goto LABEL_328;
        }
        v137 = CBErrorF(v87, "set listeningModeConfigs failed");
        v128 = (void *)objc_claimAutoreleasedReturnValue(v137);
        goto LABEL_327;
      }
    }
  }

  v88 = [v10 microphoneMode];
  v89 = v88;
  if (v88)
  {
    v90 = v88 == 3 ? 1LL : 2 * (v88 == 2);
    if ((_DWORD)v90 != sub_1003DF900((uint64_t)a4))
    {
      if (dword_1008D66A0 <= 30
        && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
      {
        if (v89 > 3) {
          v91 = "?";
        }
        else {
          v91 = off_100881448[v89];
        }
        LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack modifyDevice:btDevice:settings:error:]",  30LL,  "setMicMode: device %@, %d (%s)",  v11,  v90,  v91);
      }

      v92 = sub_1003B2740((uint64_t)v150, (uint64_t)a4, v90);
      if (v92)
      {
        v93 = (v92 + 310000);
        if ((_DWORD)v93)
        {
          if (a6)
          {
            v146 = CBErrorF(v93, "setMicMode failed");
            v128 = (void *)objc_claimAutoreleasedReturnValue(v146);
            goto LABEL_327;
          }

      if ((_DWORD)v24 == 3304)
      {
        v98 = (unint64_t)&(*v10)[v45 * (unint64_t)(unsigned __int16)v39];
        *((_WORD *)v10 + 8) += v39;
        void *v10 = (char *)v98;
        v10[1] = 0LL;
      }

  v187 = v83;
  v87 = sub_1002E6BF0();
  if ((*(unsigned int (**)(uint64_t))(*(void *)v87 + 160LL))(v87) && (v88 = *(_DWORD *)(a2 + 60)) != 0)
  {
    v155 = vcvtas_u32_f32((float)((float)v88 * 100.0) / (float)(*(_DWORD *)(a2 + 36) + v88 + *(_DWORD *)(a2 + 40)));
    if (!v43) {
      goto LABEL_171;
    }
  }

  else
  {
    v155 = 0;
    if (!v43)
    {
LABEL_171:
      v90 = @"Unknown";
      goto LABEL_172;
    }
  }

  if (!sub_1003D2B2C(v43, 12))
  {
    v43 = 0LL;
    goto LABEL_171;
  }

  sub_1003D930C(v43, 0xAu, &__str);
  if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_str = &__str;
  }
  else {
    p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
  }
  v90 = (const __CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", p_str));
  v43 = 1LL;
LABEL_172:
  v91 = *(_DWORD *)(a2 + 440);
  if (v91 < 0x15180)
  {
    if (v91 - 1 < 0x3B)
    {
      v92 = 1;
LABEL_177:
      v151 = v92;
      goto LABEL_179;
    }

    if (v91)
    {
      v92 = vcvtad_u64_f64((double)v91 / 60.0);
      goto LABEL_177;
    }
  }

  v151 = 0;
LABEL_179:
  else {
    v93 = *(void *)(a2 + 448);
  }
  v191 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v93));
  v94 = *(char *)(a2 + 495);
  v185 = (__CFString *)v90;
  if (v94 < 0)
  {
    v95 = *(_DWORD **)(a2 + 472);
    if (*(void *)(a2 + 480) != 7LL)
    {
LABEL_190:
      v97 = objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v95));

      v191 = (void *)v97;
      goto LABEL_191;
    }
  }

  else
  {
    v95 = (_DWORD *)(a2 + 472);
    if (v94 != 7) {
      goto LABEL_190;
    }
  }

    LOBYTE(__p[0]) = 0;
    sub_100242CA4(__p);
    v77 = sub_1000EF578(*(unsigned __int16 *)(a2 + 4), 2701LL);
    sub_100242CD0(__p);
LABEL_210:
    sub_100242CD8(__p);
    if (!v77) {
      return;
    }
    goto LABEL_221;
  }

  if (v8 == 27)
  {
    if (*(_DWORD *)(a2 + 8) == 2)
    {
      uint64_t v6 = sub_10020748C(v5);
      if ((_DWORD)v6)
      {
        v32 = sub_1002E6BF0();
        uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v32 + 792LL))(v32, 6LL);
        if ((_DWORD)v6)
        {
          v33 = sub_1002E6E9C();
          uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v33 + 288LL))( v33,  v7,  1LL,  1LL);
        }
      }
    }

    sub_100460F58(v6, *(_WORD *)(a2 + 4), 0, 0);
  }

  else
  {
    if (v8 != 28) {
      goto LABEL_54;
    }
    LOBYTE(v118) = 0;
    sub_100242CA4(&v118);
    *(_WORD *)buf = *(_WORD *)(a2 + 4);
    v16 = *(unsigned __int16 *)buf;
    v17 = sub_1000EF4FC(*(unsigned __int16 *)buf);
    sub_100242CD0(&v118);
    v18 = (os_log_s *)qword_1008F7598;
    if (os_log_type_enabled((os_log_t)qword_1008F7598, OS_LOG_TYPE_DEFAULT))
    {
      v19 = *(_DWORD *)(a2 + 8);
      LODWORD(__p[0]) = 67109632;
      HIDWORD(__p[0]) = v19;
      LOWORD(__p[1]) = 1024;
      *(_DWORD *)((char *)&__p[1] + 2) = v16;
      HIWORD(__p[1]) = 1024;
      LODWORD(v125[0]) = (unsigned __int16)v17;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Got new list of available codecs 0x%x for handle %d, customCodecMask 0x%x",  (uint8_t *)__p,  0x14u);
    }

    __p[0] = buf;
    v20 = sub_1002550B8((uint64_t **)(a1 + 824), (unsigned __int16 *)buf, (uint64_t)&unk_1006C2518, (_WORD **)__p);
    sub_1002074C4((uint64_t)(v20[5] + 50), (v17 & 4) != 0);
    sub_100502164((uint64_t)v4, (v17 >> 2) & 1);
    __p[0] = buf;
    v21 = sub_1002550B8((uint64_t **)(a1 + 824), (unsigned __int16 *)buf, (uint64_t)&unk_1006C2518, (_WORD **)__p);
    sub_1002074F4((uint64_t)(v21[5] + 50), (v17 & 8) != 0);
    sub_1005020D4((uint64_t)v4, (v17 >> 3) & 1);
    __p[0] = buf;
    v22 = sub_1002550B8((uint64_t **)(a1 + 824), (unsigned __int16 *)buf, (uint64_t)&unk_1006C2518, (_WORD **)__p);
    sub_100207504((uint64_t)(v22[5] + 50), (v17 & 0x10) != 0);
    sub_1005020E4((uint64_t)v4, (v17 >> 4) & 1);
    __p[0] = buf;
    v23 = sub_1002550B8((uint64_t **)(a1 + 824), (unsigned __int16 *)buf, (uint64_t)&unk_1006C2518, (_WORD **)__p);
    sub_1002074D4((uint64_t)(v23[5] + 50), (v17 & 0x20) != 0);
    sub_1005020F4((uint64_t)v4, (v17 >> 5) & 1);
    __p[0] = buf;
    v24 = sub_1002550B8((uint64_t **)(a1 + 824), (unsigned __int16 *)buf, (uint64_t)&unk_1006C2518, (_WORD **)__p);
    sub_1002074E4((uint64_t)(v24[5] + 50), (v17 & 0x40) != 0);
    sub_100502104((uint64_t)v4, (v17 >> 6) & 1);
    __p[0] = buf;
    v25 = sub_1002550B8((uint64_t **)(a1 + 824), (unsigned __int16 *)buf, (uint64_t)&unk_1006C2518, (_WORD **)__p);
    sub_1002074B4((uint64_t)(v25[5] + 50), v17 & 1);
    sub_100502154((uint64_t)v4, v17 & 1);
    __p[0] = buf;
    v26 = sub_1002550B8((uint64_t **)(a1 + 824), (unsigned __int16 *)buf, (uint64_t)&unk_1006C2518, (_WORD **)__p);
    sub_100207494((uint64_t)(v26[5] + 50), (v17 & 2) != 0);
    sub_100502134((uint64_t)v4, (v17 >> 1) & 1);
    v27 = (void **)&v118;
LABEL_30:
    sub_100242CD8(v27);
  }

LABEL_328:
          v122 = 0;
          goto LABEL_290;
        }
      }
    }
  }

  v94 = (void *)objc_claimAutoreleasedReturnValue([v10 name]);
  if (![v94 length]) {
    goto LABEL_215;
  }
  sub_1003D0100((uint64_t)a4, (uint64_t)&__p);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  v96 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", p_p));
  v97 = v94;
  v98 = v96;
  v99 = v98;
  if (v97 != v98)
  {
    if ((v97 == 0LL) != (v98 != 0LL))
    {
      v100 = [v97 isEqual:v98];

      if ((v100 & 1) != 0) {
        goto LABEL_214;
      }
    }

    else
    {
    }

    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack modifyDevice:btDevice:settings:error:]",  30LL,  "setName: device %@, '%@' -> '%@'",  v11,  v99,  v97);
    }

    sub_10002418C(&__p, (char *)[v97 UTF8String]);
    sub_1003D17B0((uint64_t)a4, &__p, 1);
    goto LABEL_214;
  }

LABEL_214:
LABEL_215:
  v101 = [v10 placementMode];
  if (v101 && (v101 == 1) != sub_1003DF944((uint64_t)a4))
  {
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      v102 = "no";
      if (v101 == 1) {
        v102 = "yes";
      }
      LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack modifyDevice:btDevice:settings:error:]",  30LL,  "enableInEarDetection: device %@, enabled %s",  v11,  v102);
    }

    v103 = sub_1003B3534((uint64_t)v150, (uint64_t)a4, v101 == 1);
    if (v103)
    {
      v104 = (v103 + 310000);
      if ((_DWORD)v104)
      {
        if (a6)
        {
          v147 = CBErrorF(v104, "enableInEarDetection failed");
          v139 = (void *)objc_claimAutoreleasedReturnValue(v147);
          goto LABEL_331;
        }

        goto LABEL_334;
      }
    }
  }

  v105 = [v10 relinquishAudioRoute];
  if (v105)
  {
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      if (v105 > 2) {
        v106 = "?";
      }
      else {
        v106 = off_100881480[v105];
      }
      v107 = "true";
      if (v105 == 1) {
        v107 = "false";
      }
      LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack modifyDevice:btDevice:settings:error:]",  30LL,  "relinquishAudioRoute: device %@, hijack %s ownership %s",  v11,  v106,  v107);
    }

    if (qword_1008D60E0 != -1) {
      dispatch_once(&qword_1008D60E0, &stru_1008811C8);
    }
    v108 = sub_10022B1FC((uint64_t)off_1008D60D8, (uint64_t)a4, v105 == 1);
    if (v108)
    {
      v109 = (v108 + 310000);
      if ((_DWORD)v109)
      {
        if (!a6) {
          goto LABEL_334;
        }
        v138 = CBErrorF(v109, "setHijackAudioRoute failed");
        v139 = (void *)objc_claimAutoreleasedReturnValue(v138);
LABEL_331:
        v122 = 0;
        *a6 = v139;
        goto LABEL_289;
      }
    }
  }

  v110 = [v10 selectiveSpeechListeningConfig];
  if ((_DWORD)v110)
  {
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      v111 = (void *)objc_claimAutoreleasedReturnValue([v9 name]);
      LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack modifyDevice:btDevice:settings:error:]",  30LL,  "selectiveSpeechListeningConfig sendControlCommand for %@: device %@, value 0x%04X",  v111,  v11,  v110);
    }

    if (qword_1008D60E0 != -1) {
      dispatch_once(&qword_1008D60E0, &stru_1008811C8);
    }
    v112 = sub_100215778((uint64_t)off_1008D60D8, (uint64_t)a4, 41LL, (uint64_t)v110, 2u);
    if (v112)
    {
      v113 = (v112 + 310000);
      if ((_DWORD)v113)
      {
        if (!a6) {
          goto LABEL_334;
        }
        v140 = CBErrorF(v113, "set selectiveSpeechListeningConfig failed");
        v139 = (void *)objc_claimAutoreleasedReturnValue(v140);
        goto LABEL_331;
      }
    }
  }

  v114 = [v10 smartRoutingMode];
  if (v114 == 1) {
    v115 = 1LL;
  }
  else {
    v115 = 2 * (v114 == 2);
  }
  if ((_DWORD)v115 && (_DWORD)v115 != sub_1003DF988((uint64_t)a4))
  {
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      if (v114 > 2) {
        v116 = "?";
      }
      else {
        v116 = off_100881468[v114];
      }
      LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack modifyDevice:btDevice:settings:error:]",  30LL,  "setSmartRouteMode: device %@, %d (%s)",  v11,  v115,  v116);
    }

    sub_1003DD65C((uint64_t)a4, v115);
  }

  v117 = (uint64_t)[v10 spatialAudioAllowed];
  if ((_DWORD)v117)
  {
    LODWORD(__p.__r_.__value_.__l.__data_) = 0;
    if (qword_1008D5F50 != -1) {
      dispatch_once(&qword_1008D5F50, &stru_1008811A8);
    }
    sub_100400F20((uint64_t)off_1008D5F48, (uint64_t)a4, &__p);
    if (__p.__r_.__value_.__s.__data_[0] != (_DWORD)v117)
    {
      if (dword_1008D66A0 <= 30
        && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
      {
        else {
          v118 = off_100881480[(int)v117];
        }
        LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack modifyDevice:btDevice:settings:error:]",  30LL,  "setSpatialAudioAllowed: device %@, %s",  v11,  v118);
      }

      v119 = sub_1003B2CAC((uint64_t)v150, (uint64_t)a4, v117);
      if (v119)
      {
        v120 = (v119 + 310000);
        if ((_DWORD)v120)
        {
          if (a6)
          {
            v148 = CBErrorF(v120, "setSpatialAudioAllowed failed");
            *a6 = (id)objc_claimAutoreleasedReturnValue(v148);
          }

          goto LABEL_334;
        }
      }
    }
  }

  v121 = (uint64_t)[v10 spatialAudioMode];
  if ((_DWORD)v121 != 255)
  {
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      else {
        v123 = off_100881498[(int)v121];
      }
      LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack modifyDevice:btDevice:settings:error:]",  30LL,  "setSpatialAudioMode: device %@, %s",  v11,  v123);
    }

    v124 = sub_1003B3260((uint64_t)v150, (uint64_t)a4, @"global", v121, -1);
    v122 = 1;
    if (!v124) {
      goto LABEL_289;
    }
    v125 = (v124 + 310000);
    if (!(_DWORD)v125) {
      goto LABEL_289;
    }
    if (a6)
    {
      v144 = CBErrorF(v125, "setSpatialAudioMode failed");
      v139 = (void *)objc_claimAutoreleasedReturnValue(v144);
      goto LABEL_331;
    }

                  if (sub_1000A86F0())
                  {
                    sub_1001EE134( (uint64_t)"Unhandled Vendor Specific Event: 0x%x",  v174,  v175,  v176,  v177,  v178,  v179,  v180,  v7);
                    v181 = (os_log_s *)sub_100086554(0x54u);
                    if (os_log_type_enabled(v181, OS_LOG_TYPE_ERROR)) {
                      sub_100657858();
                    }
                  }

                  goto LABEL_331;
                }

                v184 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_346:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  281,  v184);
              }
            }

            v184 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
            goto LABEL_346;
          }

          v183 = "(*pBs).__RWFlag == BYTESTREAM_READ";
        }

        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 278, v183);
      case 65428:
        if (!off_1008DFB18) {
          goto LABEL_331;
        }
        v56 = v5 - v8;
        if (v56 > 3)
        {
          if (v56 < 0x43)
          {
            v164 = v6 + v8;
            if (v56 - 4 >= *(unsigned __int8 *)(v164 + 1))
            {
              off_1008DFB18(v164);
              goto LABEL_331;
            }

            sub_1001EE134( (uint64_t)"HCI_VSE_ACI_BTC2AOP_MESSAGE - Invalid SPMI payload length %zd exceed expected %zd",  v165,  v166,  v167,  v168,  v169,  v170,  v171,  *(unsigned __int8 *)(v164 + 1));
            v172 = (os_log_s *)sub_100086554(0x54u);
            if (!os_log_type_enabled(v172, OS_LOG_TYPE_ERROR)) {
              goto LABEL_331;
            }
          }

          else
          {
            sub_1001EE134( (uint64_t)"HCI_VSE_ACI_BTC2AOP_MESSAGE - Invalid SPMI data size %zd exceeds %zd",  v141,  v142,  v143,  v144,  v145,  v146,  v147,  v56);
            v148 = (os_log_s *)sub_100086554(0x54u);
            if (!os_log_type_enabled(v148, OS_LOG_TYPE_ERROR)) {
              goto LABEL_331;
            }
          }
        }

        else
        {
          sub_1001EE134( (uint64_t)"HCI_VSE_ACI_BTC2AOP_MESSAGE - Invalid SPMI data size %zd less then %zd",  v57,  v58,  v59,  v60,  v61,  v62,  v63,  v56);
          v64 = (os_log_s *)sub_100086554(0x54u);
          if (!os_log_type_enabled(v64, OS_LOG_TYPE_ERROR)) {
            goto LABEL_331;
          }
        }

        goto LABEL_321;
      case 65430:
        v200 = 0uLL;
        if ((int)(v5 - v8) <= 1)
        {
          v185 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
        }

        else
        {
          if (*((_BYTE *)a1 + 14) == 1)
          {
            v65 = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 2));
            *((_WORD *)a1 + 6) = v3 + 4;
            v66 = sub_10012D6D8(v65);
            if (*((_BYTE *)a1 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else
            {
              v67 = *((unsigned __int16 *)a1 + 5);
              v68 = *((unsigned __int16 *)a1 + 6);
              if ((int)(v67 - v68) > 3)
              {
                if (*((_BYTE *)a1 + 14) == 1)
                {
                  v69 = *a1;
                  *((_WORD *)a1 + 6) = v68 + 4;
                  if ((int)(v67 - (unsigned __int16)(v68 + 4)) <= 3) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  331,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
                  }
                  void *v4 = v68 + 8;
                  if ((int)(v67 - (unsigned __int16)(v68 + 8)) <= 3) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  332,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
                  }
                  void *v4 = v68 + 12;
                  if ((int)(v67 - (unsigned __int16)(v68 + 12)) <= 3) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  333,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
                  }
                  v70 = 0LL;
                  v71 = v68 + 16;
                  void *v4 = v68 + 16;
                  v72 = v67 >= (unsigned __int16)(v68 + 16);
                  v73 = v67 - (unsigned __int16)(v68 + 16);
                  if (v72) {
                    v74 = v73;
                  }
                  else {
                    v74 = 0LL;
                  }
                  do
                  {
                    if (v74 == v70) {
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  336,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
                    }
                    v75 = v71;
                    v76 = v71++;
                    void *v4 = v71;
                    *((_BYTE *)&v201[-1] + v70++) = *(_BYTE *)(v69 + v76);
                  }

                  while (v70 != 16);
                  if (v67 <= v71) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  338,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
                  }
                  void *v4 = v75 + 2;
                  if (v67 <= (unsigned __int16)(v75 + 2)) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  339,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
                  }
                  void *v4 = v75 + 3;
                  if (v67 <= (unsigned __int16)(v75 + 3)) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  340,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
                  }
                  void *v4 = v75 + 4;
                  if ((int)(v67 - (unsigned __int16)(v75 + 4)) <= 1)
                  {
                    *((_BYTE *)a1 + 15) = 1;
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else
                  {
                    void *v4 = v75 + 6;
                    if (v67 > (unsigned __int16)(v75 + 6))
                    {
                      void *v4 = v75 + 7;
                      if (!v66)
                      {
                        if (sub_1000A86F0())
                        {
                          sub_1001EE134( (uint64_t)"updateBTControllerClockCB size is zero",  v133,  v134,  v135,  v136,  v137,  v138,  v139,  v198);
                          v140 = (os_log_s *)sub_100086554(0x54u);
                          if (os_log_type_enabled(v140, OS_LOG_TYPE_ERROR)) {
                            sub_100657858();
                          }
                        }

                        goto LABEL_328;
                      }

                      if (off_1008DFB40) {
                        off_1008DFB40(v66);
                      }
                      goto LABEL_331;
                    }
                  }

                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  342,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
                }

                v186 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_356:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  330,  v186);
              }
            }

            v186 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
            goto LABEL_356;
          }

          v185 = "(*pBs).__RWFlag == BYTESTREAM_READ";
        }

        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 328, v185);
      case 65432:
        v77 = (unsigned __int16)(v5 - v8);
        if (v77 >= 8)
        {
          if (!off_1008DFB68) {
            goto LABEL_331;
          }
          WORD2(v200) = 0;
          LODWORD(v200) = 0;
          if ((int)(v5 - v8) <= 5)
          {
            v196 = "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE";
          }

          else
          {
            if (*((_BYTE *)a1 + 14) == 1)
            {
              sub_1001F0050((uint64_t)&v200, v6 + v8, 6uLL);
              v78 = *((_WORD *)a1 + 6);
              *((_WORD *)a1 + 6) = v78 + 6;
              if (*((_BYTE *)a1 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else
              {
                v79 = *((unsigned __int16 *)a1 + 5);
                if (v79 > (unsigned __int16)(v78 + 6))
                {
                  if (*((_BYTE *)a1 + 14) == 1)
                  {
                    v80 = *a1;
                    *((_WORD *)a1 + 6) = v78 + 7;
                    if (v79 <= (unsigned __int16)(v78 + 7)) {
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  368,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
                    }
                    v81 = *(unsigned __int8 *)(v80 + (unsigned __int16)(v78 + 6));
                    void *v4 = v78 + 8;
                    off_1008DFB68( v200 | ((unint64_t)WORD2(v200) << 32),  v81,  *(unsigned __int8 *)(v80 + (unsigned __int16)(v78 + 7)),  v13);
                    goto LABEL_331;
                  }

                  v197 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_496:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  367,  v197);
                }
              }

              v197 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              goto LABEL_496;
            }

            v196 = "(*pBs).__RWFlag == BYTESTREAM_READ";
          }

          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 366, v196);
        }

        sub_1001EE134( (uint64_t)"Sensor state report event returned invalid length %d of data",  v109,  v110,  v111,  v112,  v113,  v114,  v115,  v77);
        v116 = (os_log_s *)sub_100086554(0x54u);
        if (!os_log_type_enabled(v116, OS_LOG_TYPE_ERROR)) {
          goto LABEL_328;
        }
        break;
      default:
        if ((_DWORD)v7 != 65441)
        {
          if ((_DWORD)v7 != 65445) {
            goto LABEL_328;
          }
          v14 = (void (*)(uint64_t, uint64_t))qword_1008DFB78;
          if (qword_1008DFB78)
          {
            v31 = v5 - v8;
            if (v31 > 0x26)
            {
LABEL_294:
              v96 = v6 + v8;
              goto LABEL_295;
            }

            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"HID_LATENCY_STATISTICS - Invalid data size %lu",  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v31);
              v39 = (os_log_s *)sub_100086554(0x54u);
              if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
LABEL_321:
              }
                sub_100657858();
            }
          }

          goto LABEL_331;
        }

        if (!off_1008DFA58) {
          goto LABEL_328;
        }
        v104 = (v5 - v8);
        v105 = (char *)(v6 + v8);
        v106 = *v105;
        if ((v106 & 0x60) != 0) {
          v107 = -73;
        }
        else {
          v107 = -77;
        }
        if (v106 < 0) {
          v107 += 16;
        }
        v108 = v107;
        if (v104 == v107)
        {
          if ((int)(v5 - v8) >= v104)
          {
            void *v4 = v8 + v104;
          }

          else
          {
            *((_BYTE *)a1 + 15) = 1;
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          off_1008DFA58(v105, v108);
          goto LABEL_331;
        }

        if (sub_1000A86F0())
        {
          if (*((_BYTE *)a1 + 15)) {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          sub_1001EE134( (uint64_t)" HCI_VSE_ENHANCED_LINK_QUALITY_STATS: Mode(%2x), INVALID length(%d), expected(%d), bytes (%d)",  v149,  v150,  v151,  v152,  v153,  v154,  v155,  v106);
          v173 = (os_log_s *)sub_100086554(0x54u);
          if (os_log_type_enabled(v173, OS_LOG_TYPE_ERROR)) {
            break;
          }
        }

        goto LABEL_328;
    }

                    ++v210;
                  }

                  while (v210 != (void)v480);
                  *(void *)&v480 = [(id)v478 countByEnumeratingWithState:&v503 objects:v546 count:16];
                  if (!(void)v480)
                  {
LABEL_330:

                    break;
                  }
                }
              }
            }
          }

          goto LABEL_110;
        }

        v17 = (id)_CFXPCCreateCFObjectFromXPCMessage(v9);
        v161 = (os_log_s *)(id)qword_1008F7600;
        if (os_log_type_enabled(v161, OS_LOG_TYPE_DEFAULT))
        {
          v162 = objc_claimAutoreleasedReturnValue([v17 debugDescription]);
          v163 = [v162 UTF8String];
          LODWORD(v544[0].__r_.__value_.__l.__data_) = 141558275;
          *(std::string::size_type *)((char *)v544[0].__r_.__value_.__r.__words + 4) = 1752392040LL;
          WORD2(v544[0].__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v544[0].__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v163;
          _os_log_impl( (void *)&_mh_execute_header,  v161,  OS_LOG_TYPE_DEFAULT,  "Devices nickname info updated from cloudkit = %{private, mask.hash}s",  (uint8_t *)v544,  0x16u);
        }

        if (!sub_1002E9258() || !v17) {
          goto LABEL_110;
        }
        *(void *)&v474 = objc_claimAutoreleasedReturnValue([v17 objectForKeyedSubscript:@"devices"]);
        v164 = objc_opt_class(&OBJC_CLASS___NSData);
        if ((objc_opt_isKindOfClass(v474, v164) & 1) != 0)
        {
          v553[0] = objc_opt_class(&OBJC_CLASS___NSArray);
          v553[1] = objc_opt_class(&OBJC_CLASS___NSString);
          v553[2] = objc_opt_class(&OBJC_CLASS___BTCloudDevice);
          v165 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  v553,  3LL));
          v166 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v165));
          *(void *)&v471 = objc_claimAutoreleasedReturnValue( +[NSKeyedUnarchiver unarchivedObjectOfClasses:fromData:error:]( &OBJC_CLASS___NSKeyedUnarchiver,  "unarchivedObjectOfClasses:fromData:error:",  v166,  (void)v474,  0LL));

          if ((void)v471)
          {
            v167 = objc_opt_class(&OBJC_CLASS___NSArray);
            if ((objc_opt_isKindOfClass(v471, v167) & 1) != 0)
            {
              v517 = 0u;
              v518 = 0u;
              v515 = 0u;
              v516 = 0u;
              v477 = (std::string *)(id)v471;
              *(void *)&v480 = unk_1008FB910(v477, "countByEnumeratingWithState:objects:count:", &v515, v552, 16LL);
              if (!(void)v480) {
                goto LABEL_272;
              }
              *(void *)&v479 = *(void *)v516;
              *(void *)&v168 = 136315138LL;
              v472 = v168;
              *(void *)&v168 = 67110146LL;
              v475 = v168;
              *(void *)&v168 = 67109890LL;
              v473 = v168;
              *(void *)&v168 = 136446210LL;
              v470 = v168;
              while (1)
              {
                v169 = 0LL;
                do
                {
                  if (*(void *)v516 != (void)v479) {
                    objc_enumerationMutation(v477);
                  }
                  v170 = *(void **)(*((void *)&v515 + 1) + 8 * v169);
                  v171 = objc_opt_class(&OBJC_CLASS___BTCloudDevice);
                  if ((objc_opt_isKindOfClass(v170, v171) & 1) != 0)
                  {
                    WORD2(v538) = 0;
                    LODWORD(v538) = 0;
                    memset(v551, 0, sizeof(v551));
                    v172 = objc_claimAutoreleasedReturnValue([v170 bluetoothAddress]);
                    sub_10002418C(v551, (char *)[v172 UTF8String]);

                    if (SHIBYTE(v551[2]) >= 0) {
                      v173 = (unsigned __int8 *)v551;
                    }
                    else {
                      v173 = (unsigned __int8 *)v551[0];
                    }
                    if (sub_1003FE1A4((uint64_t)&v538, v173))
                    {
                      if ((_BYTE)v538)
                      {
LABEL_214:
                        if (qword_1008D5F50 != -1) {
                          dispatch_once(&qword_1008D5F50, &stru_10089A4B8);
                        }
                        *(void *)&v478 = sub_1003FFEB0(off_1008D5F48, (uint64_t)&v538, 0);
                        if ((void)v478)
                        {
                          v174 = sub_1002E9258();
                          v175 = objc_claimAutoreleasedReturnValue([v170 bluetoothAddress]);
                          sub_10002418C(v513, (char *)[v175 UTF8String]);
                          v176 = objc_claimAutoreleasedReturnValue([v170 nickname]);
                          sub_10002418C(v511, (char *)[v176 UTF8String]);
                          (*(void (**)(uint64_t, void **, void **))(*(void *)v174 + 176LL))( v174,  v513,  v511);
                          if (v512 < 0) {
                            operator delete(v511[0]);
                          }

                          if (v514 < 0) {
                            operator delete(v513[0]);
                          }

                          v537.n128_u32[0] = 1;
                          LODWORD(v536) = 0;
                          v534 = 0;
                          v490 = 0;
                          sub_1003D55EC(v478, &v490, &v536, &v534, &v537);
                          *(void *)&v476 = (id)qword_1008F7600;
                          if (os_log_type_enabled((os_log_t)v476, OS_LOG_TYPE_DEFAULT))
                          {
                            v177 = v536;
                            v178 = v534;
                            v179 = v490;
                            v180 = v537.n128_u32[0];
                            sub_1003CF00C(v478, &v550);
                            v181 = &v550;
                            if ((v550.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                              v181 = (std::string *)v550.__r_.__value_.__r.__words[0];
                            }
                            v544[0].__r_.__value_.__r.__words[0] = __PAIR64__(v177, v475);
                            LOWORD(v544[0].__r_.__value_.__r.__words[1]) = 1024;
                            *(_DWORD *)((char *)&v544[0].__r_.__value_.__r.__words[1] + 2) = v178;
                            HIWORD(v544[0].__r_.__value_.__r.__words[1]) = 1024;
                            LODWORD(v544[0].__r_.__value_.__r.__words[2]) = v179;
                            WORD2(v544[0].__r_.__value_.__r.__words[2]) = 1024;
                            *(_DWORD *)((char *)&v544[0].__r_.__value_.__r.__words[2] + 6) = v180;
                            *(_WORD *)&v544[1].__r_.__value_.__s.__data_[2] = 2082;
                            *(std::string::size_type *)((char *)v544[1].__r_.__value_.__r.__words + 4) = (std::string::size_type)v181;
                            _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v476,  OS_LOG_TYPE_DEFAULT,  "Local Device ID; vid: %x, pid: %x, vidSrc: %d, version: %d for device: %{public}s",
                              (uint8_t *)v544,
                              0x24u);
                          }

                          v182 = (void *)objc_claimAutoreleasedReturnValue([v170 vendorID]);
                          v183 = [v182 integerValue];

                          v184 = (void *)objc_claimAutoreleasedReturnValue([v170 productID]);
                          v185 = [v184 integerValue];

                          if (v183 && (_DWORD)v185)
                          {
                            if (v490 <= 1) {
                              v186 = 1;
                            }
                            else {
                              v186 = v490;
                            }
                            v187 = (os_log_s *)(id)qword_1008F7600;
                            if (os_log_type_enabled(v187, OS_LOG_TYPE_DEFAULT))
                            {
                              sub_1003CF00C(v478, &v550);
                              v188 = &v550;
                              if ((v550.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                                v188 = (std::string *)v550.__r_.__value_.__r.__words[0];
                              }
                              v544[0].__r_.__value_.__r.__words[0] = __PAIR64__(v183, v473);
                              LOWORD(v544[0].__r_.__value_.__r.__words[1]) = 1024;
                              *(_DWORD *)((char *)&v544[0].__r_.__value_.__r.__words[1] + 2) = (_DWORD)v185;
                              HIWORD(v544[0].__r_.__value_.__r.__words[1]) = 1024;
                              LODWORD(v544[0].__r_.__value_.__r.__words[2]) = v186;
                              WORD2(v544[0].__r_.__value_.__r.__words[2]) = 2082;
                              *(std::string::size_type *)((char *)&v544[0].__r_.__value_.__r.__words[2] + 6) = (std::string::size_type)v188;
                              _os_log_impl( (void *)&_mh_execute_header,  v187,  OS_LOG_TYPE_DEFAULT,  "Updating Device ID from cloud; vid: %x, cloud pid: %x, vidSrc: %x for device: %{public}s",
                                (uint8_t *)v544,
                                0x1Eu);
                            }

                            sub_1003D6538(v478, v186, v183, (int)v185, v537.n128_i32[0]);
                            sub_1003D70B0(v478);
                          }

                          v189 = (void *)objc_claimAutoreleasedReturnValue( +[CBProductInfo productInfoWithProductID:]( &OBJC_CLASS___CBProductInfo,  "productInfoWithProductID:",  v185));
                          v190 = (void *)objc_claimAutoreleasedReturnValue([v189 productName]);

                          if (v190
                            && ([v190 isEqualToString:@"Unknown"] & 1) == 0
                            && [v190 length])
                          {
                            sub_1003D0100(v478, (uint64_t)v544);
                            v191 = v544[0].__r_.__value_.__s.__size_;
                            v192 = v544[0].__r_.__value_.__s.__size_;
                            if ((v544[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
                              v191 = v544[0].__r_.__value_.__l.__size_;
                            }
                            if (v191)
                            {
                              sub_1003D0100(v478, (uint64_t)&v550);
                              v193 = std::string::compare( &v550, (const std::string::value_type *)[v190 UTF8String]) != 0;
                              v192 = v544[0].__r_.__value_.__s.__size_;
                            }

                            else
                            {
                              v193 = 1;
                            }

                            if ((v192 & 0x80) != 0) {
                              operator delete(v544[0].__r_.__value_.__l.__data_);
                            }
                            if (v193)
                            {
                              sub_10002418C(v544, (char *)[v190 utf8ValueSafe]);
                              *(void *)&v539 = 0LL;
                              *(_OWORD *)&v550.__r_.__value_.__l.__data_ = 0uLL;
                              sub_1000B0400((uint64_t)&v539);
                              v550.__r_.__value_.__r.__words[0] = (int)v539;
                              v550.__r_.__value_.__l.__size_ = SWORD2(v539);
                              sub_1003D0F60((std::string *)v478, v544, &v550);
                              v200 = (os_log_s *)(id)qword_1008F7600;
                              if (os_log_type_enabled(v200, OS_LOG_TYPE_DEFAULT))
                              {
                                sub_1003CF00C(v478, v544);
                                v201 = v544;
                                if ((v544[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
                                  v201 = (std::string *)v544[0].__r_.__value_.__r.__words[0];
                                }
                                LODWORD(v550.__r_.__value_.__l.__data_) = v470;
                                *(std::string::size_type *)((char *)v550.__r_.__value_.__r.__words + 4) = (std::string::size_type)v201;
                                _os_log_impl( (void *)&_mh_execute_header,  v200,  OS_LOG_TYPE_DEFAULT,  "Cloud: Magic Settings updated productname %{public}s",  (uint8_t *)&v550,  0xCu);
                              }
                            }
                          }

                          goto LABEL_268;
                        }

                        v199 = qword_1008F7600;
                        if (os_log_type_enabled((os_log_t)qword_1008F7600, OS_LOG_TYPE_ERROR))
                        {
                          LODWORD(v544[0].__r_.__value_.__l.__data_) = v472;
                          *(std::string::size_type *)((char *)v544[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v173;
                          v197 = (os_log_s *)v199;
                          v198 = "[DeviceRecord] No device record for device address: %s";
LABEL_252:
                          _os_log_error_impl( (void *)&_mh_execute_header,  v197,  OS_LOG_TYPE_ERROR,  v198,  (uint8_t *)v544,  0xCu);
                        }

                        goto LABEL_268;
                      }

                      v194 = 1LL;
                      while (v194 != 6)
                      {
                        if (*((unsigned __int8 *)&v538 + v194++))
                        {
                          break;
                        }
                      }
                    }

                    v196 = qword_1008F7600;
                    if (os_log_type_enabled((os_log_t)qword_1008F7600, OS_LOG_TYPE_ERROR))
                    {
                      LODWORD(v544[0].__r_.__value_.__l.__data_) = v472;
                      *(std::string::size_type *)((char *)v544[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v173;
                      v197 = (os_log_s *)v196;
                      v198 = "Received invalid device address for device record: %s";
                      goto LABEL_252;
                    }

LABEL_334:
    v122 = 0;
    goto LABEL_289;
  }

  v122 = 1;
LABEL_289:

LABEL_290:
  return v122;
}

void sub_10006F4D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  _Unwind_Resume(a1);
}

void sub_10006FB80( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _Unwind_Exception *exception_object, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30)
{
  _Unwind_Resume(a1);
}

void sub_10006FCC8(uint64_t a1)
{
  uint64_t v2 = (char *)[*(id *)(a1 + 32) UTF8String];
  if (qword_1008D5F30 != -1) {
    dispatch_once(&qword_1008D5F30, &stru_100881188);
  }
  uint64_t v3 = off_1008D5F28;
  sub_100241F90(v9, *(void *)(a1 + 40));
  sub_10002418C(__p, v2);
  sub_1005C9550((uint64_t)v3, (unsigned __int8 *)v9, (uint64_t)__p, 3);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if (qword_1008D5F60 != -1) {
    dispatch_once(&qword_1008D5F60, &stru_1008812A8);
  }
  sub_10055AAA8((os_unfair_lock_s *)qword_1008D5F58, *(void **)(a1 + 40));
  if (qword_1008D5F60 != -1) {
    dispatch_once(&qword_1008D5F60, &stru_1008812A8);
  }
  uint64_t v4 = qword_1008D5F58;
  if (qword_1008D67C8 != -1) {
    dispatch_once(&qword_1008D67C8, &stru_1008812C8);
  }
  if (off_1008D67C0) {
    uint64_t v5 = (char *)off_1008D67C0 + 48;
  }
  else {
    uint64_t v5 = 0LL;
  }
  uint64_t v6 = *(void *)(a1 + 48);
  sub_100241F90(v11, *(void *)(a1 + 40));
  sub_10002418C(v9, v2);
  sub_100558A38(v4, (uint64_t)v5, v6, v11, (uint64_t)v9, 0LL);
  if (v10 < 0) {
    operator delete(v9[0]);
  }
}

void sub_10006FE84( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10006FEBC(uint64_t a1)
{
  if (qword_1008D5F30 != -1) {
    dispatch_once(&qword_1008D5F30, &stru_100881188);
  }
  sub_1005D9384((uint64_t)off_1008D5F28, *(void **)(a1 + 32), *(unsigned __int8 *)(a1 + 56), *(void **)(a1 + 40), 2);
  if (qword_1008D5F30 != -1) {
    dispatch_once(&qword_1008D5F30, &stru_100881188);
  }
  uint64_t v2 = off_1008D5F28;
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) controllerInfo]);
  sub_1005D9664((uint64_t)v2, v3, (int)[v4 fastLEConnectionAllowed]);
}

void sub_10006FF7C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10006FF90(uint64_t a1)
{
  if (qword_1008D5F30 != -1) {
    dispatch_once(&qword_1008D5F30, &stru_100881188);
  }
  sub_1005D9700((uint64_t)off_1008D5F28, *(void **)(a1 + 32), *(void **)(a1 + 40));
}

void sub_100070114( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_100070D98( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, void *a48, uint64_t a49, char a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,id a55)
{
  v58[2](v58);
  _Block_object_dispose(&a50, 8);

  _Unwind_Resume(a1);
}

uint64_t sub_100070F30(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
  if (result)
  {
    if (dword_1008D66A0 <= 20)
    {
      if (dword_1008D66A0 == -1)
      {
        uint64_t result = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
      }

      uint64_t v3 = CUPrintNSError(result);
      id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
      LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack performDeviceRequest:device:completionHandler:]_block_invoke",  20LL,  "### PerformDeviceRequest start failed: %@",  v4);
    }

    return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  return result;
}

void sub_100071000(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100071010(uint64_t result, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = *(void *)(a2 + 16);
  return result;
}

void sub_100071024(int a1, uint64_t a2, char a3)
{
  id v6 = (id)qword_1008D9ED0;
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 dispatchQueue]);
  char v8 = v7;
  if (v7)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100076200;
    block[3] = &unk_100881010;
    block[4] = v6;
    block[5] = a2;
    int v10 = a1;
    char v11 = a3;
    dispatch_async(v7, block);
  }
}

void sub_1000710CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000710DC(int a1, uint64_t a2, char a3)
{
  id v6 = (id)qword_1008D9ED0;
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 dispatchQueue]);
  char v8 = v7;
  if (v7)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100076214;
    block[3] = &unk_100881010;
    int v10 = a1;
    block[4] = v6;
    block[5] = a2;
    char v11 = a3;
    dispatch_async(v7, block);
  }
}

void sub_100071184(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100071194(int a1, uint64_t a2, char a3)
{
  id v6 = (id)qword_1008D9ED0;
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 dispatchQueue]);
  char v8 = v7;
  if (v7)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10007622C;
    block[3] = &unk_100881010;
    int v10 = a1;
    block[4] = v6;
    block[5] = a2;
    char v11 = a3;
    dispatch_async(v7, block);
  }
}

void sub_10007123C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10007124C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) timer]);

  if (v2 == v3)
  {
    uint64_t v6 = a1 + 40;
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = *(void **)(v6 + 8);
    uint64_t v7 = CBErrorF(4294960574LL, "Timed out");
    id v8 = (id)objc_claimAutoreleasedReturnValue(v7);
    objc_msgSend(v5, "_completePerformDeviceRequest:error:", v4);
  }

void sub_1000712D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100071468( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_100071708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000719D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100071C40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100071E54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100072050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100072790( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_100072B84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100072C44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100072D68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100072F80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100073288(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v3 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1000732D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  if (v2)
  {
    if (dword_1008D66A0 > 90) {
      goto LABEL_6;
    }
    if (dword_1008D66A0 == -1)
    {
      if (!_LogCategory_Initialize(&dword_1008D66A0, 90LL))
      {
LABEL_6:
        if (*(void *)(a1 + 40)) {
          **(void **)(a1 + 40) = *(id *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
        }
        return;
      }

      uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
    }

    uint64_t v3 = CUPrintNSError(v2);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    LogPrintF_safe( &dword_1008D66A0,  "-[CBStackControllerBTStack addPairingClient:error:]_block_invoke",  90LL,  "### AddPairingClient failed: %@",  v4);

    goto LABEL_6;
  }

void sub_1000733A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000733B0(uint64_t a1, unsigned int a2, unint64_t a3, int a4)
{
  unint64_t v5 = a3;
  if (a3)
  {
    if (qword_1008D5F50 != -1) {
      dispatch_once(&qword_1008D5F50, &stru_1008811A8);
    }
    unint64_t v5 = sub_1003FEF18((uint64_t)off_1008D5F48, v5);
  }

  if (a4) {
    uint64_t v7 = (a4 + 310000);
  }
  else {
    uint64_t v7 = 0LL;
  }
  if (a2 > 3)
  {
    id v8 = "?";
    if (v5)
    {
LABEL_12:
      sub_1003CF00C(v5, __p);
      if (v18 >= 0) {
        uint64_t v9 = __p;
      }
      else {
        uint64_t v9 = (void **)__p[0];
      }
      goto LABEL_19;
    }
  }

  else
  {
    id v8 = off_1008814F0[a2];
    if (v5) {
      goto LABEL_12;
    }
  }

  uint64_t v9 = (void **)"NULL";
LABEL_19:
  uint64_t v10 = CUPrintErrorCode(v7);
  char v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  LogPrintF_safe( &dword_1008D66A0,  "void _pairingStatusCallback(BTPairingAgent _Nonnull, BTPairingEvent, BTDevice _Nonnull, BTResult, void * _Nonnull)",  30LL,  "Pairing agent event: %s, device %s, result %@",  v8,  v9,  v11);

  if (!v5)
  {
    if (a2 != 3) {
      return;
    }
    goto LABEL_29;
  }

  if (v18 < 0) {
    operator delete(__p[0]);
  }
LABEL_22:
  if (a2 != 3) {
    return;
  }
  if (v5)
  {
    id v12 = (id)qword_1008D9ED0;
    v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 dispatchQueue]);
    v14 = v13;
    if (v13)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100076298;
      block[3] = &unk_100881060;
      block[4] = v12;
      block[5] = v5;
      int v16 = v7;
      dispatch_async(v13, block);
    }

    return;
  }

void sub_1000735E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  if (v12) {
    sub_10065783C((uint64_t)va);
  }
  _Unwind_Resume(a1);
}

void sub_100073610(uint64_t a1, unint64_t a2, int a3)
{
  LODWORD(v3) = a3;
  unint64_t v4 = a2;
  if (a2)
  {
    if (qword_1008D5F50 != -1) {
      dispatch_once(&qword_1008D5F50, &stru_1008811A8);
    }
    unint64_t v4 = sub_1003FEF18((uint64_t)off_1008D5F48, v4);
  }

  if (dword_1008D66A0 > 30 || dword_1008D66A0 == -1 && !_LogCategory_Initialize(&dword_1008D66A0, 30LL))
  {
    if (v4) {
      goto LABEL_13;
    }
LABEL_40:
    if (dword_1008D66A0 <= 90
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 90LL)))
    {
      LogPrintF_safe( &dword_1008D66A0,  "void _pairingPincodeCallback(BTPairingAgent _Nonnull, BTDevice _Nonnull, uint8_t, void * _Nonnull)",  90LL,  "### No device for pincode request");
    }

    return;
  }

  if (v4)
  {
    sub_1003CF00C(v4, __p);
    if ((SBYTE7(v27) & 0x80u) == 0) {
      uint64_t v6 = (const char *)__p;
    }
    else {
      uint64_t v6 = (const char *)__p[0];
    }
  }

  else
  {
    uint64_t v6 = "NULL";
  }

  LogPrintF_safe( &dword_1008D66A0,  "void _pairingPincodeCallback(BTPairingAgent _Nonnull, BTDevice _Nonnull, uint8_t, void * _Nonnull)",  30LL,  "Pairing agent pincode callback: device %s, minLen %d",  v6,  v3);
  if (!v4) {
    goto LABEL_40;
  }
  if (SBYTE7(v27) < 0) {
    operator delete(__p[0]);
  }
LABEL_13:
  if (qword_1008D67A8 != -1) {
    dispatch_once(&qword_1008D67A8, &stru_100881228);
  }
  uint64_t v7 = sub_1005297C0(off_1008D67A0, a1);
  if (!v7)
  {
    if (dword_1008D66A0 <= 90
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 90LL)))
    {
      LogPrintF_safe( &dword_1008D66A0,  "void _pairingPincodeCallback(BTPairingAgent _Nonnull, BTDevice _Nonnull, uint8_t, void * _Nonnull)",  90LL,  "### No pairing agent for pincode request");
    }

    return;
  }

  unsigned int v8 = sub_1003D0268(v4);
  if (v8 <= 0x18 && (char v9 = 1, ((1 << v8) & 0x1001980) != 0)) {
    LODWORD(v3) = 6;
  }
  else {
    char v9 = 0;
  }
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  else {
    uint64_t v3 = v3;
  }
  __int128 v38 = 0uLL;
  __int128 v39 = 0uLL;
  __int128 v36 = 0uLL;
  __int128 v37 = 0uLL;
  __int128 v34 = 0uLL;
  __int128 v35 = 0uLL;
  __int128 v32 = 0uLL;
  __int128 v33 = 0uLL;
  __int128 v30 = 0uLL;
  __int128 v31 = 0uLL;
  __int128 v28 = 0uLL;
  __int128 v29 = 0uLL;
  *(_OWORD *)__p = 0uLL;
  __int128 v27 = 0uLL;
  int v24 = 0;
  uint64_t v23 = 0LL;
  int v22 = 0;
  sub_1003D55EC(v4, &v24, (_DWORD *)&v23 + 1, &v23, &v22);
  if (HIDWORD(v23) != 1452 && HIDWORD(v23) != 76 || (v23 - 780) > 2)
  {
    if ((v9 & 1) != 0)
    {
      RandomString("0123456789", 10LL, v3, v3, __p);
      sub_100532E28((char *)&v25, (char *)__p);
      int v10 = sub_100526EC0(v7, v4, &v25);
      nullsub_63(&v25, v11);
      if (v10)
      {
        uint64_t v12 = (v10 + 310000);
        if ((_DWORD)v12)
        {
          if (dword_1008D66A0 <= 90
            && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 90LL)))
          {
            goto LABEL_33;
          }

          return;
        }
      }
    }

    else
    {
      strcpy((char *)__p, "0000");
    }

void sub_100073B2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100073B8C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = a2;
  if (a2)
  {
    if (qword_1008D5F50 != -1) {
      dispatch_once(&qword_1008D5F50, &stru_1008811A8);
    }
    unint64_t v4 = sub_1003FEF18((uint64_t)off_1008D5F48, v4);
  }

  if (dword_1008D66A0 <= 30 && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
  {
    if (v4)
    {
      unint64_t v5 = (const char *)v12;
      sub_1003CF00C(v4, v12);
      if (v13 < 0) {
        unint64_t v5 = (const char *)v12[0];
      }
    }

    else
    {
      unint64_t v5 = "NULL";
    }

    uint64_t v9 = CUPrintFlags32(a3, &unk_1006BB52A);
    int v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    LogPrintF_safe( &dword_1008D66A0,  "void _pairingAuthCallback(BTPairingAgent _Nonnull, BTDevice _Nonnull, BTServiceMask, void * _Nonnull)",  30LL,  "Pairing agent auth callback: device %s, services %@",  v5,  v10);

    if (v4)
    {
      if (v13 < 0) {
        operator delete(v12[0]);
      }
      goto LABEL_13;
    }
  }

  else if (v4)
  {
LABEL_13:
    id v6 = (id)qword_1008D9ED0;
    uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 dispatchQueue]);
    unsigned int v8 = v7;
    if (v7)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100076244;
      block[3] = &unk_1008800B8;
      block[4] = v6;
      block[5] = v4;
      dispatch_async(v7, block);
    }

    return;
  }

  if (dword_1008D66A0 <= 90 && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 90LL))) {
    LogPrintF_safe( &dword_1008D66A0,  "void _pairingAuthCallback(BTPairingAgent _Nonnull, BTDevice _Nonnull, BTServiceMask, void * _Nonnull)",  90LL,  "### No device for auth callback");
  }
}

void sub_100073D68(_Unwind_Exception *a1)
{
  if (v1) {
    sub_10065783C(v3 - 56);
  }
  _Unwind_Resume(a1);
}

void sub_100073D98(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
  unint64_t v6 = a2;
  if (a2)
  {
    if (qword_1008D5F50 != -1) {
      dispatch_once(&qword_1008D5F50, &stru_1008811A8);
    }
    unint64_t v6 = sub_1003FEF18((uint64_t)off_1008D5F48, v6);
  }

  if (dword_1008D66A0 <= 30 && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
  {
    if (v6)
    {
      sub_1003CF00C(v6, v15);
      if (v16 >= 0) {
        uint64_t v7 = (const char *)v15;
      }
      else {
        uint64_t v7 = (const char *)v15[0];
      }
    }

    else
    {
      uint64_t v7 = "NULL";
    }

    uint64_t v12 = "yes";
    if (!a4) {
      uint64_t v12 = "no";
    }
    LogPrintF_safe( &dword_1008D66A0,  "void _pairingUserConfirmCallback(BTPairingAgent _Nonnull, BTDevice _Nonnull, uint32_t, BTBool, void * _Nonnull)",  30LL,  "Pairing agent user confirm callback: device %s, value %u, mitm %s",  v7,  a3,  v12);
    if (v6)
    {
      if (v16 < 0) {
        operator delete(v15[0]);
      }
      goto LABEL_13;
    }
  }

  else if (v6)
  {
LABEL_13:
    unsigned int v8 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"%06d", a3);
    id v9 = (id)qword_1008D9ED0;
    int v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 dispatchQueue]);
    uint64_t v11 = v10;
    if (v10)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000762A8;
      block[3] = &unk_100881088;
      int v14 = a4;
      block[5] = v8;
      void block[6] = v6;
      block[4] = v9;
      dispatch_async(v10, block);
    }

    return;
  }

  if (dword_1008D66A0 <= 90 && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 90LL))) {
    LogPrintF_safe( &dword_1008D66A0,  "void _pairingUserConfirmCallback(BTPairingAgent _Nonnull, BTDevice _Nonnull, uint32_t, BTBool, void * _Nonnull)",  90LL,  "### No device for user confirm");
  }
}

void sub_100073FAC(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_10065783C(v2 - 72);
  }
  _Unwind_Resume(exception_object);
}

void sub_100073FD4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = a2;
  if (a2)
  {
    if (qword_1008D5F50 != -1) {
      dispatch_once(&qword_1008D5F50, &stru_1008811A8);
    }
    unint64_t v4 = sub_1003FEF18((uint64_t)off_1008D5F48, v4);
  }

  if (dword_1008D66A0 <= 30 && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
  {
    if (v4)
    {
      sub_1003CF00C(v4, v11);
      if (v12 >= 0) {
        unint64_t v5 = (const char *)v11;
      }
      else {
        unint64_t v5 = (const char *)v11[0];
      }
    }

    else
    {
      unint64_t v5 = "NULL";
    }

    LogPrintF_safe( &dword_1008D66A0,  "void _pairingPassKeyDisplayCallback(BTPairingAgent _Nonnull, BTDevice _Nonnull, uint32_t, void * _Nonnull)",  30LL,  "Pairing agent pass key display callback: device %s, value %u",  v5,  a3);
    if (v4)
    {
      if (v12 < 0) {
        operator delete(v11[0]);
      }
      goto LABEL_13;
    }
  }

  else if (v4)
  {
LABEL_13:
    unint64_t v6 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"%u", a3);
    id v7 = (id)qword_1008D9ED0;
    unsigned int v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 dispatchQueue]);
    id v9 = v8;
    if (v8)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10007625C;
      block[3] = &unk_100880D48;
      block[5] = v6;
      void block[6] = v4;
      block[4] = v7;
      dispatch_async(v8, block);
    }

    return;
  }

  if (dword_1008D66A0 <= 90 && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 90LL))) {
    LogPrintF_safe( &dword_1008D66A0,  "void _pairingPassKeyDisplayCallback(BTPairingAgent _Nonnull, BTDevice _Nonnull, uint32_t, void * _Nonnull)",  90LL,  "### No device for passkey callback");
  }
}

void sub_1000741BC(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_10065783C(v2 - 56);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000741E4()
{
  if (dword_1008D66A0 <= 30 && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL))) {
    LogPrintF_safe( &dword_1008D66A0,  "void _pairingOOBDataReadyCallback(BTPairingAgent _Nonnull, BTData _Nonnull, BTData _Nonnull, BTData _Nonnull, BTDa ta _Nonnull, void * _Nonnull)",  30LL,  "Pairing agent local OOB data ready callback");
  }
}

void sub_1000742F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000745DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000748BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  _Unwind_Resume(a1);
}

void sub_100074BD8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  _Unwind_Resume(a1);
}

void sub_100074DCC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5)
{
  id v18 = 0LL;
  id v9 = -[CBDevice initWithBTStackDevice:error:]( objc_alloc(&OBJC_CLASS___CBDevice),  "initWithBTStackDevice:error:",  a2,  &v18);
  id v10 = v18;
  if (v9)
  {
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      LogPrintF_safe( &dword_1008D66A0,  "virtual void CBStackControllerCPP::accessoryCommandStatus(BT::Device * _Nonnull, BTAccessoryCmdReqType, uint16_t, uint16_t)",  30LL,  "AccessoryCommandStatus: %@, type %d, result %u, reason %u",  v9,  a3,  a4,  a5);
    }

    uint64_t v13 = sub_100404FE8();
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_100074F78;
    v14[3] = &unk_10087FBF0;
    v14[4] = v9;
    v14[5] = a1;
    int v15 = a3;
    __int16 v16 = a4;
    __int16 v17 = a5;
    sub_100405384(v13, v14);
  }

  else if (dword_1008D66A0 <= 90 {
         && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 90LL)))
  }
  {
    uint64_t v11 = CUPrintNSError(v10);
    char v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    LogPrintF_safe( &dword_1008D66A0,  "virtual void CBStackControllerCPP::accessoryCommandStatus(BT::Device * _Nonnull, BTAccessoryCmdReqType, uint16_t, uint16_t)",  90LL,  "### AccessoryCommandStatus init device failed: %@",  v12);
  }
}

void sub_100074F54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100074F78(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)&unk_1008D9ED8);
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id v3 = *(id *)(v2 + 40);
  id v4 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v15;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v15 != v5) {
          objc_enumerationMutation(v3);
        }
        id v7 = *(void **)(*((void *)&v14 + 1) + 8LL * (void)i);
        unsigned int v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 dispatchQueue]);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_10007510C;
        block[3] = &unk_100880D48;
        uint64_t v9 = *(void *)(a1 + 32);
        block[4] = v7;
        block[5] = v9;
        int v10 = *(_DWORD *)(a1 + 52);
        int v12 = *(_DWORD *)(a1 + 48);
        int v13 = v10;
        dispatch_async(v8, block);
      }

      id v4 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }

    while (v4);
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9ED8);
}

void sub_1000750EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10007510C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _accessoryCommandStatusWithDevice:*(void *)(a1 + 40) type:*(unsigned int *)(a1 + 48) result:*(unsigned __int16 *)(a1 + 52) reason:*(unsigned __int16 *)(a1 + 54)];
}

void sub_100075124(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, unsigned int a5, uint64_t a6)
{
  int v28 = a3;
  __int16 v29 = WORD2(a3);
  id v27 = 0LL;
  int v10 = -[CBDevice initWithBTStackDevice:error:]( objc_alloc(&OBJC_CLASS___CBDevice),  "initWithBTStackDevice:error:",  a2,  &v27);
  id v11 = v27;
  if (v10)
  {
    int v12 = objc_alloc_init(&OBJC_CLASS___CBDevice);
    int v13 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", &v28, 6LL);
    -[CBDevice setBtAddressData:](v12, "setBtAddressData:", v13);

    uint64_t v14 = CUPrintAddress(&v28, 6LL, 0LL);
    __int128 v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    -[CBDevice setIdentifier:](v12, "setIdentifier:", v15);

    __int128 v16 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a6, a5);
    int v17 = a4;
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      id v18 = (void *)objc_claimAutoreleasedReturnValue(-[CBDevice identifier](v12, "identifier"));
      uint64_t v19 = CUPrintNSDataHex(v16, 300LL, 0LL);
      uint64_t v20 = objc_claimAutoreleasedReturnValue(v19);
      char v21 = (void *)v20;
      int v22 = "?";
      if (v17 == 1) {
        int v22 = "AudioArbitration";
      }
      if (!v17) {
        int v22 = "Invalid";
      }
      LogPrintF_safe( &dword_1008D66A0,  "virtual void CBStackControllerCPP::accessoryRelayMsgReceived(BT::Device * _Nonnull, BTDeviceAddress, BTAccessory RelayMsgType, uint16_t, const uint8_t * _Nonnull)",  30LL,  "Relay message received: conduit %@, source %@, type %s, data <%@>",  v10,  v18,  v22,  v20);
    }

    uint64_t v23 = sub_100404FE8();
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472LL;
    v25[2] = sub_100075400;
    v25[3] = &unk_100880DF0;
    char v26 = v17;
    v25[4] = v16;
    v25[5] = v10;
    v25[6] = v12;
    v25[7] = a1;
    sub_100405384(v23, v25);

    goto LABEL_11;
  }

  if (dword_1008D66A0 <= 90 && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 90LL)))
  {
    uint64_t v24 = CUPrintNSError(v11);
    int v12 = (CBDevice *)objc_claimAutoreleasedReturnValue(v24);
    LogPrintF_safe( &dword_1008D66A0,  "virtual void CBStackControllerCPP::accessoryRelayMsgReceived(BT::Device * _Nonnull, BTDeviceAddress, BTAccessoryRe layMsgType, uint16_t, const uint8_t * _Nonnull)",  90LL,  "### AccessoryCommandStatus init device failed: %@",  v12);
LABEL_11:
  }
}

void sub_10007539C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100075400(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  os_unfair_lock_lock((os_unfair_lock_t)&unk_1008D9ED8);
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  id v3 = *(id *)(v2 + 40);
  id v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v14;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v14 != v5) {
          objc_enumerationMutation(v3);
        }
        id v7 = *(void **)(*((void *)&v13 + 1) + 8LL * (void)i);
        unsigned int v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 dispatchQueue]);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_1000755A0;
        block[3] = &unk_100880DC8;
        block[4] = v7;
        char v12 = *(_BYTE *)(a1 + 64);
        __int128 v10 = *(_OWORD *)(a1 + 32);
        uint64_t v11 = *(void *)(a1 + 48);
        dispatch_async(v8, block);
      }

      id v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }

    while (v4);
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9ED8);
}

void sub_100075580(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000755A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _accessoryReceivedRelayMessageType:*(unsigned __int8 *)(a1 + 64) messageData:*(void *)(a1 + 40) conduitDevice:*(void *)(a1 + 48) sourceDevice:*(void *)(a1 + 56)];
}

void sub_1000755B4(uint64_t a1, uint64_t a2, int a3)
{
  id v26 = 0LL;
  uint64_t v19 = -[CBDevice initWithBTStackDevice:error:]( objc_alloc(&OBJC_CLASS___CBDevice),  "initWithBTStackDevice:error:",  a2,  &v26);
  id v18 = v26;
  if (v19)
  {
    if (qword_1008D60D0 != -1) {
      dispatch_once(&qword_1008D60D0, &stru_100881108);
    }
    unint64_t v6 = off_1008D60C8;
    -[CBDevice setConnectedServices:](v19, "setConnectedServices:", sub_100425684((uint64_t)off_1008D60C8, a2));
    if (sub_1003D518C(a2)) {
      uint64_t v7 = sub_1004272C4((uint64_t)v6, a2);
    }
    else {
      uint64_t v7 = 0xFFFFFFFFLL;
    }
    -[CBDevice setSupportedServices:](v19, "setSupportedServices:", v7);
    -[CBDevice setSupportedServices:]( v19,  "setSupportedServices:",  (unint64_t)-[CBDevice supportedServices](v19, "supportedServices") & 0xFFEFFFFF);
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      uint64_t v8 = CUPrintErrorCode((a3 + 310000));
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      LogPrintF_safe( &dword_1008D66A0,  "virtual void CBStackControllerCPP::deviceConnected(BT::Device * _Nonnull, BTResult)",  30LL,  "DeviceConnected: %@, result %@",  v19,  v9);
    }

    os_unfair_lock_lock((os_unfair_lock_t)&unk_1008D9ED8);
    __int128 v24 = 0u;
    __int128 v25 = 0u;
    __int128 v22 = 0u;
    __int128 v23 = 0u;
    id v10 = *(id *)(a1 + 40);
    id v11 = [v10 countByEnumeratingWithState:&v22 objects:v27 count:16];
    if (v11)
    {
      uint64_t v12 = *(void *)v23;
      do
      {
        for (i = 0LL; i != v11; i = (char *)i + 1)
        {
          if (*(void *)v23 != v12) {
            objc_enumerationMutation(v10);
          }
          __int128 v14 = *(void **)(*((void *)&v22 + 1) + 8LL * (void)i);
          __int128 v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 dispatchQueue]);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_100075924;
          block[3] = &unk_100880E18;
          block[4] = v14;
          void block[5] = v19;
          int v21 = a3;
          dispatch_async(v15, block);
        }

        id v11 = [v10 countByEnumeratingWithState:&v22 objects:v27 count:16];
      }

      while (v11);
    }

    os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9ED8);
  }

  else if (dword_1008D66A0 <= 90 {
         && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 90LL)))
  }
  {
    uint64_t v16 = CUPrintNSError(v18);
    int v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    LogPrintF_safe( &dword_1008D66A0,  "virtual void CBStackControllerCPP::deviceConnected(BT::Device * _Nonnull, BTResult)",  90LL,  "### DeviceConnected init device failed: %@",  v17);
  }
}

void sub_1000758D0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

id sub_100075924(uint64_t a1)
{
  return [*(id *)(a1 + 32) _connectDeviceUpdateRequests:*(void *)(a1 + 40) btResult:*(unsigned int *)(a1 + 48)];
}

void sub_100075934(uint64_t a1, uint64_t a2, int a3)
{
}

void sub_10007593C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  os_unfair_lock_lock((os_unfair_lock_t)&unk_1008D9ED8);
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  id obj = *(id *)(a1 + 40);
  id v6 = [obj countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v6)
  {
    uint64_t v7 = *(void *)v16;
    do
    {
      for (i = 0LL; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v16 != v7) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void **)(*((void *)&v15 + 1) + 8LL * (void)i);
        id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 dispatchQueue]);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_100075AFC;
        block[3] = &unk_100880E40;
        block[4] = v9;
        id v13 = v5;
        char v14 = a2;
        dispatch_async(v10, block);
      }

      id v6 = [obj countByEnumeratingWithState:&v15 objects:v19 count:16];
    }

    while (v6);
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9ED8);
}

void sub_100075AD4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_100075AFC(uint64_t a1)
{
  if (dword_1008D66A0 <= 30 && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL))) {
    LogPrintF_safe( &dword_1008D66A0,  "virtual void CBStackControllerCPP::leFastControllerDataAvailble(CBFastLEConnectionInfoVersion, NSData * _Nonnull _ _strong)_block_invoke",  30LL,  "Fast LE connection v%d available",  *(unsigned __int8 *)(a1 + 48));
  }
  uint64_t v2 = (void (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) controllerDataChangedHandler]);
  if (v2) {
    v2[2]();
  }
}

void sub_100075BB0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100075BC4(uint64_t a1, char a2, void *a3)
{
}

void sub_100075BCC(uint64_t a1, int a2)
{
  uint64_t v4 = sub_100404FE8();
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100075C34;
  v5[3] = &unk_10087EB68;
  v5[4] = a1;
  int v6 = a2;
  sub_100405384(v4, v5);
}

void sub_100075C34(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)&unk_1008D9ED8);
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  id v3 = *(id *)(v2 + 40);
  id v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v12;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v12 != v5) {
          objc_enumerationMutation(v3);
        }
        uint64_t v7 = *(void **)(*((void *)&v11 + 1) + 8LL * (void)i);
        uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 dispatchQueue]);
        v9[0] = _NSConcreteStackBlock;
        v9[1] = 3221225472LL;
        v9[2] = sub_100075DC4;
        void v9[3] = &unk_10087EB48;
        v9[4] = v7;
        int v10 = *(_DWORD *)(a1 + 40);
        dispatch_async(v8, v9);
      }

      id v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }

    while (v4);
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9ED8);
}

void sub_100075DA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100075DC4(uint64_t a1)
{
  return [*(id *)(a1 + 32) localDeviceEvent:*(unsigned int *)(a1 + 40)];
}

void sub_100075DD4(uint64_t a1, int a2)
{
  uint64_t v3 = a1 - 24;
  uint64_t v4 = sub_100404FE8();
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100075C34;
  v5[3] = &unk_10087EB68;
  v5[4] = v3;
  int v6 = a2;
  sub_100405384(v4, v5);
}

void sub_100075E3C(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  if (a4 == 11 && (a3 + 1) <= 1 && a5)
  {
    os_unfair_lock_lock((os_unfair_lock_t)&unk_1008D9ED8);
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    id obj = *(id *)(a1 + 40);
    id v9 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v9)
    {
      uint64_t v10 = *(void *)v19;
      do
      {
        for (i = 0LL; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v19 != v10) {
            objc_enumerationMutation(obj);
          }
          __int128 v12 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
          __int128 v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 dispatchQueue]);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_100075FF0;
          block[3] = &unk_10087FBF0;
          int v16 = a3;
          int v17 = a5;
          block[4] = v12;
          void block[5] = a2;
          dispatch_async(v13, block);
        }

        id v9 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
      }

      while (v9);
    }

    os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9ED8);
  }

void sub_100075FCC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_100075FF0(uint64_t a1)
{
  uint64_t v2 = objc_alloc(&OBJC_CLASS___CBDevice);
  uint64_t v3 = *(void *)(a1 + 40);
  id v11 = 0LL;
  uint64_t v4 = -[CBDevice initWithBTStackDevice:error:](v2, "initWithBTStackDevice:error:", v3, &v11);
  id v5 = v11;
  if (v4)
  {
    int v6 = (void *)objc_claimAutoreleasedReturnValue(-[CBDevice btAddressData](v4, "btAddressData"));
    if (dword_1008D66A0 <= 30
      && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 30LL)))
    {
      uint64_t v7 = *(unsigned int *)(a1 + 48);
      uint64_t v8 = CUPrintErrorCode((*(_DWORD *)(a1 + 52) + 310000));
      id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      LogPrintF_safe( &dword_1008D66A0,  "virtual void CBStackControllerCPP::serviceEvent(BT::Device * _Nonnull, BTServiceID, BTServiceSpecificEvent, BTRe sult)_block_invoke",  30LL,  "service event - service:%d, connection: %@, result %@",  v7,  v6,  v9);
    }

    [*(id *)(a1 + 32) _connectDeviceUpdateRequests:v4 btResult:*(unsigned int *)(a1 + 52)];
    goto LABEL_7;
  }

  if (dword_1008D66A0 <= 90 && (dword_1008D66A0 != -1 || _LogCategory_Initialize(&dword_1008D66A0, 90LL)))
  {
    uint64_t v10 = CUPrintNSError(v5);
    int v6 = (void *)objc_claimAutoreleasedReturnValue(v10);
    LogPrintF_safe( &dword_1008D66A0,  "virtual void CBStackControllerCPP::serviceEvent(BT::Device * _Nonnull, BTServiceID, BTServiceSpecificEvent, BTResu lt)_block_invoke",  90LL,  "### serviceEvent init device failed: %@",  v6);
LABEL_7:
  }
}

void sub_10007615C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100076190(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
}

uint64_t sub_100076198(uint64_t a1)
{
  return a1;
}

void sub_1000761C0(id *a1)
{
}

id sub_100076200(uint64_t a1)
{
  return [*(id *)(a1 + 32) _readRSSIWithConnectionHandle:*(void *)(a1 + 40) status:*(unsigned int *)(a1 + 48) rssi:*(char *)(a1 + 52)];
}

id sub_100076214(uint64_t a1)
{
  return [*(id *)(a1 + 32) _readTxPowerWithFlags:2 status:*(unsigned int *)(a1 + 48) connectionHandle:*(void *)(a1 + 40) txPowerLevel:*(char *)(a1 + 52)];
}

id sub_10007622C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _readTxPowerWithFlags:4 status:*(unsigned int *)(a1 + 48) connectionHandle:*(void *)(a1 + 40) txPowerLevel:*(char *)(a1 + 52)];
}

id sub_100076244(uint64_t a1)
{
  return [*(id *)(a1 + 32) _pairingPromptWithBTDevice:*(void *)(a1 + 40) pairingType:0 pinString:0 flags:0];
}

id sub_10007625C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _pairingPromptWithBTDevice:*(void *)(a1 + 48) pairingType:1 pinString:*(void *)(a1 + 40) flags:0];
}

id sub_100076274(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 56)) {
    uint64_t v1 = 1LL;
  }
  else {
    uint64_t v1 = 2LL;
  }
  return [*(id *)(a1 + 32) _pairingPromptWithBTDevice:*(void *)(a1 + 48) pairingType:v1 pinString:*(void *)(a1 + 40) flags:0];
}

id sub_100076298(uint64_t a1)
{
  return [*(id *)(a1 + 32) _pairingCompletedWithBTDevice:*(void *)(a1 + 40) result:*(unsigned int *)(a1 + 48)];
}

id sub_1000762A8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _pairingPromptWithBTDevice:*(void *)(a1 + 48) pairingType:4 * (*(_DWORD *)(a1 + 56) != 0) pinString:*(void *)(a1 + 40) flags:0];
}

void sub_1000762CC(uint64_t a1, uint64_t a2)
{
  id v5 = *(char **)(a1 + 8);
  uint64_t v4 = *(char **)(a1 + 16);
  if (v5 != v4)
  {
    while (*(void *)v5 != a2)
    {
      v5 += 8;
      if (v5 == v4)
      {
        id v5 = *(char **)(a1 + 16);
        break;
      }
    }
  }

  if (v5 == v4)
  {
    uint64_t v6 = a2;
    sub_100076354(a1 + 8, v4, (char *)&v6);
    sub_100008A30(a1 + 8);
  }

  os_unfair_lock_unlock((os_unfair_lock_t)a1);
}

char *sub_100076354(uint64_t a1, char *__src, char *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = __src;
  uint64_t v6 = *(char **)(a1 + 8);
  uint64_t v8 = a1 + 16;
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    __int128 v13 = *(char **)a1;
    unint64_t v14 = ((uint64_t)&v6[-*(void *)a1] >> 3) + 1;
    if (v14 >> 61) {
      abort();
    }
    uint64_t v15 = __src - v13;
    uint64_t v16 = (__src - v13) >> 3;
    uint64_t v17 = v7 - (void)v13;
    if (v17 >> 2 > v14) {
      unint64_t v14 = v17 >> 2;
    }
    else {
      unint64_t v18 = v14;
    }
    uint64_t v30 = a1 + 16;
    if (v18) {
      __int128 v19 = (char *)sub_100008BA0(a1 + 16, v18);
    }
    else {
      __int128 v19 = 0LL;
    }
    __int128 v20 = &v19[8 * v16];
    __p = v19;
    id v27 = v20;
    int v28 = v20;
    __int16 v29 = &v19[8 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4) {
          unint64_t v22 = 1LL;
        }
        else {
          unint64_t v22 = v15 >> 2;
        }
        __int128 v23 = (char *)sub_100008BA0(v8, v22);
        __int128 v20 = &v23[8 * (v22 >> 2)];
        __p = v23;
        id v27 = v20;
        __int16 v29 = &v23[8 * v24];
        if (v19) {
          operator delete(v19);
        }
      }

      else
      {
        unint64_t v21 = v16 + 2;
        if (v16 >= -1) {
          unint64_t v21 = v16 + 1;
        }
        v20 -= 8 * (v21 >> 1);
        id v27 = v20;
      }
    }

    *(void *)__int128 v20 = *(void *)v3;
    int v28 = v20 + 8;
    uint64_t v4 = sub_100008ADC((void **)a1, (uint64_t)&__p, v4);
    if (v28 != v27) {
      v28 += (v27 - v28 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    }
    if (__p) {
      operator delete(__p);
    }
  }

  else if (__src == v6)
  {
    *(void *)__src = *(void *)a3;
    *(void *)(a1 + 8) = __src + 8;
  }

  else
  {
    id v9 = __src + 8;
    uint64_t v10 = v6 - 8;
    id v11 = *(void **)(a1 + 8);
    while (v10 < v6)
    {
      uint64_t v12 = *(void *)v10;
      v10 += 8;
      *v11++ = v12;
    }

    *(void *)(a1 + 8) = v11;
    if (v6 != v9) {
      memmove(&v6[-8 * ((v6 - v9) >> 3)], __src, v6 - v9);
    }
    if (v4 <= v3) {
      v3 += 8 * (*(void *)(a1 + 8) > (unint64_t)v3);
    }
    *(void *)uint64_t v4 = *(void *)v3;
  }

  return v4;
}

void sub_100076558( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100076590(id a1)
{
  uint64_t v1 = operator new(0x120uLL);
  sub_100495250();
  qword_1008D61A0 = (uint64_t)v1;
}

void sub_1000765C0(_Unwind_Exception *a1)
{
}

void sub_1000765D4(id a1)
{
  uint64_t v1 = operator new(0x230uLL);
  sub_10042BC28();
  off_1008D60A8 = v1;
}

void sub_100076604(_Unwind_Exception *a1)
{
}

void sub_100076618(id a1)
{
  uint64_t v1 = operator new(0x58uLL);
  sub_100242DC4(v1);
  v1[10] = 0LL;
  v1[9] = 0LL;
  v1[8] = v1 + 9;
  qword_1008D6770 = (uint64_t)v1;
}

void sub_100076658(_Unwind_Exception *a1)
{
}

void sub_10007666C(id a1)
{
  uint64_t v1 = operator new(0x2C0uLL);
  sub_1004219F0();
  off_1008D60C8 = v1;
}

void sub_10007669C(_Unwind_Exception *a1)
{
}

void sub_1000766B0(id a1)
{
  uint64_t v1 = operator new(0x2B0uLL);
  sub_10040749C((uint64_t)v1);
  off_1008D5EF8 = v1;
}

void sub_1000766E0(_Unwind_Exception *a1)
{
}

void sub_1000766F4(id a1)
{
  uint64_t v1 = operator new(0xA8uLL);
  sub_10040D0A0((uint64_t)v1);
  off_1008D6780 = v1;
}

void sub_100076724(_Unwind_Exception *a1)
{
}

void sub_100076738(id a1)
{
  uint64_t v1 = operator new(0xF0uLL);
  sub_1001F78E8((uint64_t)v1);
  qword_1008D6790 = (uint64_t)v1;
}

void sub_100076768(_Unwind_Exception *a1)
{
}

void sub_10007677C(id a1)
{
  uint64_t v1 = operator new(0x128uLL);
  sub_1005C69F8();
  off_1008D5F28 = v1;
}

void sub_1000767AC(_Unwind_Exception *a1)
{
}

void sub_1000767C0(id a1)
{
  uint64_t v1 = operator new(0x138uLL);
  sub_1003FE3E0((uint64_t)v1);
  off_1008D5F48 = v1;
}

void sub_1000767F0(_Unwind_Exception *a1)
{
}

void sub_100076804(id a1)
{
  uint64_t v1 = operator new(0x2C8uLL);
  sub_100213DA8();
  off_1008D60D8 = v1;
}

void sub_100076834(_Unwind_Exception *a1)
{
}

void sub_100076848(id a1)
{
  uint64_t v1 = operator new(0xF8uLL);
  sub_1003EC784((uint64_t)v1);
  off_1008D60B8 = v1;
}

void sub_100076878(_Unwind_Exception *a1)
{
}

void sub_10007688C(id a1)
{
  uint64_t v1 = operator new(0x618uLL);
  sub_10058B0A4();
  off_1008D5F08 = v1;
}

void sub_1000768BC(_Unwind_Exception *a1)
{
}

void sub_1000768D0(id a1)
{
  uint64_t v1 = operator new(0x260uLL);
  sub_1005285C8((uint64_t)v1);
  off_1008D67A0 = v1;
}

void sub_100076900(_Unwind_Exception *a1)
{
}

void sub_100076914(id a1)
{
  uint64_t v1 = operator new(0xEB0uLL);
  sub_10061991C();
  qword_1008D5F18 = (uint64_t)v1;
}

void sub_100076944(_Unwind_Exception *a1)
{
}

void sub_100076958(id a1)
{
  uint64_t v1 = operator new(0x198uLL);
  sub_100534AB0();
  off_1008D67B0 = v1;
}

void sub_100076988(_Unwind_Exception *a1)
{
}

void sub_10007699C(id a1)
{
  uint64_t v1 = operator new(0x118uLL);
  sub_1003ADFF0((uint64_t)v1);
  off_1008D5F38 = v1;
}

void sub_1000769CC(_Unwind_Exception *a1)
{
}

void sub_1000769E0(id a1)
{
  uint64_t v1 = operator new(0x110uLL);
  sub_100551DD0();
  qword_1008D5F58 = (uint64_t)v1;
}

void sub_100076A10(_Unwind_Exception *a1)
{
}

void sub_100076A24(id a1)
{
  uint64_t v1 = operator new(0x1A0uLL);
  sub_1002769A4();
  off_1008D67C0 = v1;
}

void sub_100076A54(_Unwind_Exception *a1)
{
}

void sub_100076A68(id a1)
{
  uint64_t v1 = operator new(0x1C8uLL);
  sub_100352FF0();
  qword_1008D67D0 = (uint64_t)v1;
}

void sub_100076A98(_Unwind_Exception *a1)
{
}

void sub_100076AAC(id a1)
{
  uint64_t v1 = operator new(0x98uLL);
  sub_1003C97E4((uint64_t)v1);
  off_1008D67E0 = v1;
}

void sub_100076ADC(_Unwind_Exception *a1)
{
}

void sub_100076AF0(void **a1)
{
}

void sub_100076E3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100076E94()
{
  JUMPOUT(0x100076E84LL);
}

void sub_1000775F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100077624(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100077634(uint64_t a1)
{
}

void sub_10007763C(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL))
  {
    xpc_object_t v6 = xpc_array_create(0LL, 0LL);
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8LL);
    uint64_t v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 xpcObjectRepresentation]);
  xpc_array_append_value(*(xpc_object_t *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL), v9);
}

void sub_1000776DC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100077828(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 24);
  id v7 = v3;
  if (!v4)
  {
    id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
    xpc_object_t v6 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v5;

    uint64_t v4 = *(void **)(a1 + 24);
    id v3 = v7;
  }

  [v4 addObject:v3];
  if (!*(_BYTE *)(a1 + 32))
  {
    if (dword_1008D67F0 <= 30
      && (dword_1008D67F0 != -1 || _LogCategory_Initialize(&dword_1008D67F0, 30LL)))
    {
      LogPrintF_safe( &dword_1008D67F0,  "void CBStackAccessoryMonitorCPP::addMonitor(CBStackAccessoryMonitorBTStack * _Nonnull __strong)",  30LL,  "Add listeners");
    }

    if (qword_1008D5F40 != -1) {
      dispatch_once(&qword_1008D5F40, &stru_100881690);
    }
    sub_1003AE390(off_1008D5F38, a1);
    if (qword_1008D5F50 != -1) {
      dispatch_once(&qword_1008D5F50, &stru_1008816B0);
    }
    sub_10000876C((uint64_t)off_1008D5F48 + 240, a1 + 8);
    if (qword_1008D5F00 != -1) {
      dispatch_once(&qword_1008D5F00, &stru_100881670);
    }
    sub_100008BE0((uint64_t)off_1008D5EF8 + 64, a1 + 16);
    *(_BYTE *)(a1 + 32) = 1;
  }
}

void sub_10007799C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100077A7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_msgSend(*(id *)(a1 + 24), "removeObject:");
  if (*(_BYTE *)(a1 + 32) && ![*(id *)(a1 + 24) count])
  {
    if (dword_1008D67F0 <= 30
      && (dword_1008D67F0 != -1 || _LogCategory_Initialize(&dword_1008D67F0, 30LL)))
    {
      LogPrintF_safe( &dword_1008D67F0,  "void CBStackAccessoryMonitorCPP::removeMonitor(CBStackAccessoryMonitorBTStack * _Nonnull __strong)",  30LL,  "Remove listeners");
    }

    if (qword_1008D5F40 != -1) {
      dispatch_once(&qword_1008D5F40, &stru_100881690);
    }
    sub_1003AE4C8((uint64_t)off_1008D5F38, a1);
    if (qword_1008D5F50 != -1) {
      dispatch_once(&qword_1008D5F50, &stru_1008816B0);
    }
    sub_100009168((uint64_t)off_1008D5F48 + 240, a1 + 8);
    if (qword_1008D5F00 != -1) {
      dispatch_once(&qword_1008D5F00, &stru_100881670);
    }
    sub_100009168((uint64_t)off_1008D5EF8 + 64, a1 + 16);
    *(_BYTE *)(a1 + 32) = 0;
  }
}

void sub_100077BD0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100077CC0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100077DD4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100077E64( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100077EF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100078144(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000781C0(id a1, NSString *a2, AudioAccessoryDeviceInfo *a3, BOOL *a4)
{
  uint64_t v4 = a3;
  -[AudioAccessoryDeviceInfo setChangeFlags:](v4, "setChangeFlags:", 0LL);
  -[AudioAccessoryDeviceInfo setDiscoveryFlags:]( v4,  "setDiscoveryFlags:",  -[AudioAccessoryDeviceInfo discoveryFlags](v4, "discoveryFlags") & 0xFFFFFFFFFFDFFFFFLL);
}

void sub_100078208( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10007821C(uint64_t a1, uint64_t a2, void *a3)
{
  id v9 = a3;
  id v4 = [v9 changeFlags];
  id v5 = [v9 discoveryFlags];
  if (v4 && v5)
  {
    if (dword_1008D67F0 <= 30
      && (dword_1008D67F0 != -1 || _LogCategory_Initialize(&dword_1008D67F0, 30LL)))
    {
      xpc_object_t v6 = (void *)objc_claimAutoreleasedReturnValue([v9 identifier]);
      LogPrintF_safe( &dword_1008D67F0,  "-[CBStackAccessoryMonitorBTStack updateAccessoryInfo]_block_invoke_2",  30LL,  "Audio Accessory Device Info Changed: %@",  v6);
    }

    id v7 = (void (**)(id, void *))objc_retainBlock(*(id *)(*(void *)(a1 + 32) + 48LL));
    if (v7)
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v9 xpcObjectRepresentation]);
      v7[2](v7, v8);
    }

    goto LABEL_12;
  }

  if (dword_1008D67F0 <= 10 && (dword_1008D67F0 != -1 || _LogCategory_Initialize(&dword_1008D67F0, 10LL)))
  {
    id v7 = (void (**)(id, void *))objc_claimAutoreleasedReturnValue([v9 identifier]);
    LogPrintF_safe( &dword_1008D67F0,  "-[CBStackAccessoryMonitorBTStack updateAccessoryInfo]_block_invoke_2",  10LL,  "Audio Accessory Device: %@ unchanged",  v7);
LABEL_12:
  }
}

void sub_100078368( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000784CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1000786A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100078780(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  id v22 = 0LL;
  uint64_t v16 = -[CBDevice initWithBTStackDevice:error:]( objc_alloc(&OBJC_CLASS___CBDevice),  "initWithBTStackDevice:error:",  a2,  &v22);
  id v15 = v22;
  if (v16)
  {
    id v7 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a4, a3);
    if (dword_1008D67F0 <= 30
      && (dword_1008D67F0 != -1 || _LogCategory_Initialize(&dword_1008D67F0, 30LL)))
    {
      LogPrintF_safe( &dword_1008D67F0,  "virtual void CBStackAccessoryMonitorCPP::accessoryConversationDetectMsgReceived(BT::Device * _Nonnull, uint16_t, BTData _Nonnull)",  30LL,  "Conversation Detect message received for device %@",  v16,  v15);
    }

    os_unfair_lock_lock((os_unfair_lock_t)&unk_1008D9EE8);
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    id v8 = *(id *)(a1 + 24);
    id v9 = [v8 countByEnumeratingWithState:&v18 objects:v23 count:16];
    if (v9)
    {
      uint64_t v10 = *(void *)v19;
      do
      {
        for (i = 0LL; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v19 != v10) {
            objc_enumerationMutation(v8);
          }
          uint64_t v12 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
          __int128 v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 dispatchQueue]);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_100078A70;
          block[3] = &unk_100880CD0;
          block[4] = v12;
          void block[5] = v7;
          void block[6] = v16;
          dispatch_async(v13, block);
        }

        id v9 = [v8 countByEnumeratingWithState:&v18 objects:v23 count:16];
      }

      while (v9);
    }

    os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9EE8);
    goto LABEL_14;
  }

  if (dword_1008D67F0 <= 90 && (dword_1008D67F0 != -1 || _LogCategory_Initialize(&dword_1008D67F0, 90LL)))
  {
    uint64_t v14 = CUPrintNSError(v15);
    id v7 = (NSData *)objc_claimAutoreleasedReturnValue(v14);
    LogPrintF_safe( &dword_1008D67F0,  "virtual void CBStackAccessoryMonitorCPP::accessoryConversationDetectMsgReceived(BT::Device * _Nonnull, uint16_t, BTData _Nonnull)",  90LL,  "### AccessoryConversationDetectMsg init device failed: %@",  v7);
LABEL_14:
  }
}

void sub_100078A1C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

id sub_100078A70(uint64_t a1)
{
  return [*(id *)(a1 + 32) _accessoryConversationDetectMessageData:*(void *)(a1 + 40) device:*(void *)(a1 + 48)];
}

void sub_100078A80(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  id v22 = 0LL;
  uint64_t v16 = -[CBDevice initWithBTStackDevice:error:]( objc_alloc(&OBJC_CLASS___CBDevice),  "initWithBTStackDevice:error:",  a2,  &v22);
  id v15 = v22;
  if (v16)
  {
    id v7 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a4, a3);
    if (dword_1008D67F0 <= 30
      && (dword_1008D67F0 != -1 || _LogCategory_Initialize(&dword_1008D67F0, 30LL)))
    {
      LogPrintF_safe( &dword_1008D67F0,  "virtual void CBStackAccessoryMonitorCPP::accessoryContextMsgReceived(BT::Device * _Nonnull, uint16_t, BTData _Nonnull)",  30LL,  "Multimodal context message received for device %@",  v16,  v15);
    }

    os_unfair_lock_lock((os_unfair_lock_t)&unk_1008D9EE8);
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    id v8 = *(id *)(a1 + 24);
    id v9 = [v8 countByEnumeratingWithState:&v18 objects:v23 count:16];
    if (v9)
    {
      uint64_t v10 = *(void *)v19;
      do
      {
        for (i = 0LL; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v19 != v10) {
            objc_enumerationMutation(v8);
          }
          uint64_t v12 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
          __int128 v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 dispatchQueue]);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_100078D70;
          block[3] = &unk_100880CD0;
          block[4] = v12;
          void block[5] = v7;
          void block[6] = v16;
          dispatch_async(v13, block);
        }

        id v9 = [v8 countByEnumeratingWithState:&v18 objects:v23 count:16];
      }

      while (v9);
    }

    os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9EE8);
    goto LABEL_14;
  }

  if (dword_1008D67F0 <= 90 && (dword_1008D67F0 != -1 || _LogCategory_Initialize(&dword_1008D67F0, 90LL)))
  {
    uint64_t v14 = CUPrintNSError(v15);
    id v7 = (NSData *)objc_claimAutoreleasedReturnValue(v14);
    LogPrintF_safe( &dword_1008D67F0,  "virtual void CBStackAccessoryMonitorCPP::accessoryContextMsgReceived(BT::Device * _Nonnull, uint16_t, BTData _Nonnull)",  90LL,  "### AccessoryMultimodalContextMsg init device failed: %@",  v7);
LABEL_14:
  }
}

void sub_100078D1C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

id sub_100078D70(uint64_t a1)
{
  return [*(id *)(a1 + 32) _accessoryContextMessageData:*(void *)(a1 + 40) device:*(void *)(a1 + 48)];
}

void sub_100078D80(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  id v22 = 0LL;
  uint64_t v16 = -[CBDevice initWithBTStackDevice:error:]( objc_alloc(&OBJC_CLASS___CBDevice),  "initWithBTStackDevice:error:",  a2,  &v22);
  id v15 = v22;
  if (v16)
  {
    id v7 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a4, a3);
    if (dword_1008D67F0 <= 30
      && (dword_1008D67F0 != -1 || _LogCategory_Initialize(&dword_1008D67F0, 30LL)))
    {
      LogPrintF_safe( &dword_1008D67F0,  "virtual void CBStackAccessoryMonitorCPP::accessoryPMEConfigMsgReceived(BT::Device * _Nonnull, uint16_t, BTData _Nonnull)",  30LL,  "PME Config received for device %@",  v16,  v15);
    }

    os_unfair_lock_lock((os_unfair_lock_t)&unk_1008D9EE8);
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    id v8 = *(id *)(a1 + 24);
    id v9 = [v8 countByEnumeratingWithState:&v18 objects:v23 count:16];
    if (v9)
    {
      uint64_t v10 = *(void *)v19;
      do
      {
        for (i = 0LL; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v19 != v10) {
            objc_enumerationMutation(v8);
          }
          uint64_t v12 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
          __int128 v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 dispatchQueue]);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_100079070;
          block[3] = &unk_100880CD0;
          block[4] = v12;
          void block[5] = v7;
          void block[6] = v16;
          dispatch_async(v13, block);
        }

        id v9 = [v8 countByEnumeratingWithState:&v18 objects:v23 count:16];
      }

      while (v9);
    }

    os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9EE8);
    goto LABEL_14;
  }

  if (dword_1008D67F0 <= 90 && (dword_1008D67F0 != -1 || _LogCategory_Initialize(&dword_1008D67F0, 90LL)))
  {
    uint64_t v14 = CUPrintNSError(v15);
    id v7 = (NSData *)objc_claimAutoreleasedReturnValue(v14);
    LogPrintF_safe( &dword_1008D67F0,  "virtual void CBStackAccessoryMonitorCPP::accessoryPMEConfigMsgReceived(BT::Device * _Nonnull, uint16_t, BTData _Nonnull)",  90LL,  "### AccessoryPMEConfigMsg init device failed: %@",  v7);
LABEL_14:
  }
}

void sub_10007901C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

id sub_100079070(uint64_t a1)
{
  return [*(id *)(a1 + 32) _accessoryPMEConfigData:*(void *)(a1 + 40) device:*(void *)(a1 + 48)];
}

void sub_100079080(uint64_t a1, uint64_t a2, int a3)
{
  if (dword_1008D67F0 <= 30 && (dword_1008D67F0 != -1 || _LogCategory_Initialize(&dword_1008D67F0, 30LL))) {
    LogPrintF_safe( &dword_1008D67F0,  "virtual void CBStackAccessoryMonitorCPP::deviceInfoChanged(BT::Device * _Nonnull, BT::DEVICE_INFO_CHANGED_TYPE)",  30LL,  "Device info changed: 0x%X",  a3);
  }
  sub_100079100(a1);
}

void sub_100079100(uint64_t a1)
{
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  id v2 = *(id *)(a1 + 24);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v10;
    do
    {
      for (i = 0LL; i != v3; i = (char *)i + 1)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v2);
        }
        xpc_object_t v6 = *(void **)(*((void *)&v9 + 1) + 8LL * (void)i);
        id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 dispatchQueue]);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_100079430;
        block[3] = &unk_10087EA48;
        block[4] = v6;
        dispatch_async(v7, block);
      }

      id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }

    while (v3);
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9EE8);
}

void sub_100079264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100079284(uint64_t a1, uint64_t a2, int a3)
{
}

void sub_10007928C(uint64_t a1, int a2)
{
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  id v4 = *(id *)(a1 + 24);
  id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v13;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v4);
        }
        id v8 = *(void **)(*((void *)&v12 + 1) + 8LL * (void)i);
        __int128 v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 dispatchQueue]);
        v10[0] = _NSConcreteStackBlock;
        v10[1] = 3221225472LL;
        v10[2] = sub_100079418;
        void v10[3] = &unk_10087EB48;
        v10[4] = v8;
        int v11 = a2;
        dispatch_async(v9, v10);
      }

      id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v5);
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9EE8);
}

void sub_1000793F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100079418(uint64_t a1)
{
  return [*(id *)(a1 + 32) localDeviceEvent:*(unsigned int *)(a1 + 40)];
}

void sub_100079428(uint64_t a1, int a2)
{
}

id sub_100079430(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateAccessoryInfo];
}

uint64_t sub_100079438(uint64_t a1)
{
  return a1;
}

void sub_100079460(id *a1)
{
}

void sub_100079490(id a1)
{
  uint64_t v1 = operator new(0x2B0uLL);
  sub_10040749C((uint64_t)v1);
  off_1008D5EF8 = v1;
}

void sub_1000794C0(_Unwind_Exception *a1)
{
}

void sub_1000794D4(id a1)
{
  uint64_t v1 = operator new(0x118uLL);
  sub_1003ADFF0((uint64_t)v1);
  off_1008D5F38 = v1;
}

void sub_100079504(_Unwind_Exception *a1)
{
}

void sub_100079518(id a1)
{
  uint64_t v1 = operator new(0x138uLL);
  sub_1003FE3E0((uint64_t)v1);
  off_1008D5F48 = v1;
}

void sub_100079548(_Unwind_Exception *a1)
{
}

void sub_100079634(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_100079714(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 8);
  id v7 = v3;
  if (!v4)
  {
    id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
    uint64_t v6 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = v5;

    id v4 = *(void **)(a1 + 8);
    id v3 = v7;
  }

  [v4 addObject:v3];
  if (!*(_BYTE *)(a1 + 16))
  {
    if (qword_1008D5F10 != -1) {
      dispatch_once(&qword_1008D5F10, &stru_100881780);
    }
    sub_100594810((uint64_t)off_1008D5F08, a1, 0);
    *(_BYTE *)(a1 + 16) = 1;
  }
}

void sub_1000797C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100079878( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10007988C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_msgSend(*(id *)(a1 + 8), "removeObject:");
  if (*(_BYTE *)(a1 + 16) && ![*(id *)(a1 + 8) count])
  {
    if (qword_1008D5F10 != -1) {
      dispatch_once(&qword_1008D5F10, &stru_100881780);
    }
    sub_100594914((uint64_t)off_1008D5F08, a1);
    *(_BYTE *)(a1 + 16) = 0;
  }
}

void sub_100079918( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100079C18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100079E54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

unint64_t sub_100079E9C(uint64_t a1, unsigned __int8 a2)
{
  if (qword_1008D9F00)
  {
    *(_DWORD *)&v5[3] = 0;
    *(_DWORD *)id v5 = 0;
    sub_1001BDF5C(a2, (uint64_t)v5);
    unint64_t v3 = ((unint64_t)v5[1] << 40) | ((unint64_t)v5[2] << 32) | ((unint64_t)v5[3] << 24) | ((unint64_t)v5[4] << 16) | ((unint64_t)v5[5] << 8) | v5[6] | ((unint64_t)v5[0] << 48);
  }

  else
  {
    unint64_t v3 = 0LL;
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9EF8);
  return v3;
}

void sub_10007A064(uint64_t a1)
{
  uint64_t v2 = sub_100404FE8();
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_10007A0C4;
  v3[3] = &unk_10087EB20;
  v3[4] = a1;
  sub_100405384(v2, v3);
}

void sub_10007A0C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)&unk_1008D9EF8);
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  id v2 = *(id *)(v1 + 8);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v10;
    do
    {
      for (i = 0LL; i != v3; i = (char *)i + 1)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v2);
        }
        uint64_t v6 = *(void **)(*((void *)&v9 + 1) + 8LL * (void)i);
        id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 dispatchQueue]);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_10007A248;
        block[3] = &unk_10087EA48;
        block[4] = v6;
        dispatch_async(v7, block);
      }

      id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }

    while (v3);
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_1008D9EF8);
}

void sub_10007A228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10007A248(uint64_t a1)
{
  return [*(id *)(a1 + 32) addressChanged:0];
}

void sub_10007A258(id a1)
{
  uint64_t v1 = operator new(0x618uLL);
  sub_10058B0A4();
  off_1008D5F08 = v1;
}

void sub_10007A288(_Unwind_Exception *a1)
{
}

char *IOBTDebug::create(IOBTDebug *this)
{
  uint64_t v1 = (char *)operator new(0x58uLL);
  *(void *)uint64_t v1 = 850045863LL;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  if ((IOBTDebug::init((IOBTDebug *)v1) & 1) == 0)
  {
    IOBTDebug::~IOBTDebug((IOBTDebug *)v1);
    operator delete(v2);
    return 0LL;
  }

  return v1;
}

uint64_t IOBTDebug::init(IOBTDebug *this)
{
  kern_return_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v23;
  const char *v24;
  std::mutex::lock((std::mutex *)this);
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v23 = 136315138;
    uint64_t v24 = "init";
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "IOBTDebug::%s: \n",  (uint8_t *)&v23,  0xCu);
  }

  id v2 = IOServiceMatching("BTDebug");
  if (v2)
  {
    io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v2);
    *((_DWORD *)this + 16) = MatchingService;
    if (MatchingService)
    {
      uint64_t v4 = IOServiceOpen(MatchingService, mach_task_self_, 0, (io_connect_t *)this + 17);
      if (!v4)
      {
        __int128 v21 = 1LL;
        goto LABEL_13;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10007AD48(v4);
      }
    }

    else
    {
      __int128 v13 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
      if (v13) {
        sub_10007ACD4(v13, v14, v15, v16, v17, v18, v19, v20);
      }
    }
  }

  else
  {
    id v5 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
    if (v5) {
      sub_10007AC60(v5, v6, v7, v8, v9, v10, v11, v12);
    }
  }

  __int128 v21 = 0LL;
LABEL_13:
  std::mutex::unlock((std::mutex *)this);
  return v21;
}

void sub_10007A460(_Unwind_Exception *exception_object)
{
}

void IOBTDebug::~IOBTDebug(IOBTDebug *this)
{
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    __int128 v9 = "~IOBTDebug";
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "IOBTDebug::%s: \n",  buf,  0xCu);
  }

  io_connect_t v2 = *((_DWORD *)this + 17);
  if (v2)
  {
    IOServiceClose(v2);
    *((_DWORD *)this + 17) = 0;
  }

  io_object_t v3 = *((_DWORD *)this + 16);
  if (v3)
  {
    IOObjectRelease(v3);
    *((_DWORD *)this + 16) = 0;
  }

  uint64_t v4 = (dispatch_queue_s *)*((void *)this + 9);
  if (*((void *)this + 10))
  {
    if (v4)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 0x40000000LL;
      block[2] = sub_10007A640;
      block[3] = &unk_1008817A0;
      block[4] = this;
      dispatch_sync(v4, block);
      dispatch_release(*((dispatch_object_t *)this + 9));
      *((void *)this + 9) = 0LL;
      goto LABEL_11;
    }

    id v5 = "fQueue";
    int v6 = 65;
LABEL_16:
    __assert_rtn("~IOBTDebug", "IOBTDebug.cpp", v6, v5);
  }

  if (v4)
  {
    id v5 = "!fQueue";
    int v6 = 78;
    goto LABEL_16;
  }

void sub_10007A634(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100007A60(a1);
}

void sub_10007A640(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  std::mutex::lock((std::mutex *)v1);
  io_connect_t v2 = *(IONotificationPort **)(v1 + 80);
  if (v2)
  {
    IONotificationPortDestroy(v2);
    *(void *)(v1 + 80) = 0LL;
  }

  std::mutex::unlock((std::mutex *)v1);
}

void sub_10007A678(_Unwind_Exception *a1)
{
}

void IOBTDebug::setNotificationPort(IOBTDebug *this)
{
  if (!*((void *)this + 10))
  {
    if (*((void *)this + 9)) {
      sub_10007AE24();
    }
    io_connect_t v2 = dispatch_queue_attr_make_with_qos_class(0LL, QOS_CLASS_DEFAULT, 0);
    dispatch_queue_t v3 = dispatch_queue_create("com.apple.BTDebug.IOBTDebug", v2);
    *((void *)this + 9) = v3;
    if (!v3) {
      sub_10007ADD4();
    }
    uint64_t v4 = IONotificationPortCreate(kIOMainPortDefault);
    *((void *)this + 10) = v4;
    if (!v4) {
      sub_10007ADFC();
    }
    IONotificationPortSetDispatchQueue(v4, *((dispatch_queue_t *)this + 9));
  }

uint64_t IOBTDebug::coreDump( std::mutex *this, uint64_t a2, const char *a3, void (*a4)(void *, int), uint64_t a5)
{
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315394;
    __int128 v33 = "coreDump";
    __int16 v34 = 1024;
    int v35 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "IOBTDebug::%s: size %u\n",  buf,  0x12u);
  }

  if (!a4)
  {
    BOOL v10 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
    if (v10) {
      sub_10007AEC0(v10, v11, v12, v13, v14, v15, v16, v17);
    }
  }

  IOBTDebug::setNotificationPort((IOBTDebug *)this);
  __int128 v18 = *(IONotificationPort **)&this[1].__m_.__opaque[8];
  if (v18)
  {
    uint64_t input = a2;
    reference[1] = (uint64_t)a4;
    reference[2] = a5;
    mach_port_t sig_high = HIDWORD(this[1].__m_.__sig);
    mach_port_t MachPort = IONotificationPortGetMachPort(v18);
    size_t v21 = strlen(a3);
    uint64_t v22 = IOConnectCallAsyncMethod(sig_high, 0, MachPort, reference, 3u, &input, 1u, a3, v21 + 1, 0LL, 0LL, 0LL, 0LL);
  }

  else
  {
    uint64_t v22 = 3758097112LL;
    BOOL v23 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
    if (v23) {
      sub_10007AE4C(v23, v24, v25, v26, v27, v28, v29, v30);
    }
  }

  std::mutex::unlock(this);
  return v22;
}

void sub_10007A89C(_Unwind_Exception *exception_object)
{
}

uint64_t IOBTDebug::enableLogging( uint64_t a1, unsigned int a2, unsigned int a3, int *a4, int *a5, unsigned int a6)
{
  uint64_t v6 = 3758097090LL;
  if (a4)
  {
    id v7 = a5;
    if (a5)
    {
      if (a6 - 1 <= 2)
      {
        __int128 v9 = a4;
        uint64_t v13 = (std::mutex *)__chkstk_darwin();
        uint64_t v15 = &buf[-v14];
        std::mutex::lock(v13);
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315906;
          BOOL v23 = "enableLogging";
          __int16 v24 = 1024;
          unsigned int v25 = a2;
          __int16 v26 = 1024;
          unsigned int v27 = a3;
          __int16 v28 = 1024;
          unsigned int v29 = a6;
          _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "IOBTDebug::%s: bufferSize %u, numReads %u, numLogs %u\n",  buf,  0x1Eu);
        }

        input[0] = a2;
        input[1] = a3;
        uint64_t v16 = v15 + 4;
        uint64_t v17 = a6;
        do
        {
          int v19 = *v7++;
          int v18 = v19;
          int v20 = *v9++;
          *(v16 - 1) = v20;
          _DWORD *v16 = v18;
          v16 += 2;
          --v17;
        }

        while (v17);
        uint64_t v6 = IOConnectCallMethod(*(_DWORD *)(a1 + 68), 1u, input, 2u, v15, 8LL * a6, 0LL, 0LL, 0LL, 0LL);
        std::mutex::unlock((std::mutex *)a1);
      }
    }
  }

  return v6;
}

void sub_10007AA64(_Unwind_Exception *a1)
{
}

uint64_t IOBTDebug::disableLogging(IOBTDebug *this)
{
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 136315138;
    id v5 = "disableLogging";
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "IOBTDebug::%s: \n",  (uint8_t *)&v4,  0xCu);
  }

  uint64_t v2 = IOConnectCallScalarMethod(*((_DWORD *)this + 17), 2u, 0LL, 0, 0LL, 0LL);
  std::mutex::unlock((std::mutex *)this);
  return v2;
}

void sub_10007AB4C(_Unwind_Exception *a1)
{
}

uint64_t IOBTDebug::dumpLogs(IOBTDebug *this, const char *a2)
{
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 136315138;
    id v8 = "dumpLogs";
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "IOBTDebug::%s: \n",  (uint8_t *)&v7,  0xCu);
  }

  size_t v4 = strlen(a2);
  uint64_t v5 = IOConnectCallStructMethod(*((_DWORD *)this + 17), 3u, a2, v4 + 1, 0LL, 0LL);
  std::mutex::unlock((std::mutex *)this);
  return v5;
}

void sub_10007AC4C(_Unwind_Exception *a1)
{
}

void sub_10007AC60( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10007ACD4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10007AD48(int a1)
{
  int v1 = 136315394;
  uint64_t v2 = "init";
  __int16 v3 = 1024;
  int v4 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "IOBTDebug::%s: could not open service: 0x%x\n",  (uint8_t *)&v1,  0x12u);
  sub_10003BE20();
}

void sub_10007ADD4()
{
}

void sub_10007ADFC()
{
  __assert_rtn("setNotificationPort", "IOBTDebug.cpp", 135, "fNotificationPort != MACH_PORT_NULL");
}

void sub_10007AE24()
{
}

void sub_10007AE4C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10007AEC0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10007AF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_10007AF94(v5);
  sub_10007AF7C(v6, (uint64_t)&off_100881948, v7);
  sub_10007AF88();
}

void sub_10007AF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void sub_10007AF7C(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_10007BC38((uint64_t)va, a2, (uint64_t)va1);
}

  ;
}

uint64_t sub_10007AF94(uint64_t a1, ...)
{
  return sub_10007B510(v2, v1, (uint64_t *)va);
}

BOOL sub_10007AFA4(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = a2;
  a1[1] = a3;
  return sub_10007AFE4((uint64_t)a1);
}

BOOL sub_10007AFE4(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int16 *)(a1 + 16);
  uint64_t v2 = *(uint64_t **)a1;
  unsigned int v3 = *(unsigned __int16 *)(*(void *)a1 + 32LL);
  if (v1 < v3)
  {
    uint64_t v4 = *v2;
    uint64_t v5 = *(unsigned __int16 *)(a1 + 18);
    unsigned int v6 = *(_DWORD *)(*v2 + 4 * v5);
    *(_BYTE *)(a1 + 30) = BYTE1(v6);
    if ((v6 & 3) == 2)
    {
      LODWORD(v7) = *(_DWORD *)(v4 + 4LL * (v5 + 1));
      unsigned int v8 = *(_DWORD *)(v4 + 4LL * (v5 + 2));
      int v9 = *(_DWORD *)(v4 + 4LL * (v5 + 3));
      *(_WORD *)(a1 + 28) = HIWORD(v6);
      *(_WORD *)(a1 + 24) = (v7 >> 2) & 0xFFC0 | (v6 >> 2);
    }

    else if ((v6 & 3) == 1)
    {
      unsigned int v10 = *(_DWORD *)(v4 + 4 * v5 + 4);
      *(_WORD *)(a1 + 28) = HIWORD(v6) & 0xFFF;
      *(_WORD *)(a1 + 24) = (v10 >> 22) & 0x3C0 | (v6 >> 2);
      LODWORD(v7) = v6 >> 28;
      unsigned int v8 = (unsigned __int16)v10;
      int v9 = HIWORD(v10) & 0xFFF;
    }

    else if ((v6 & 3) != 0)
    {
      uint64_t v7 = (_DWORD *)(v4 + 4 * v5);
      unsigned int v11 = v7[1];
      unsigned int v8 = v7[2];
      int v9 = v7[3];
      *(_WORD *)(a1 + 28) = v7[4];
      *(_WORD *)(a1 + 24) = (v11 >> 2) & 0xFFC0 | (v6 >> 2);
      LOBYTE(v7) = v11;
    }

    else
    {
      *(_WORD *)(a1 + 28) = 1;
      *(_WORD *)(a1 + 24) = v6 >> 2;
      LODWORD(v7) = HIBYTE(v6) & 0xF;
      unsigned int v8 = BYTE2(v6);
      int v9 = v6 >> 28;
    }

    char v12 = BYTE1(v6);
    *(_WORD *)(a1 + 26) = v9;
    uint64_t v13 = *(void *)(a1 + 8);
    if (v13)
    {
      uint64_t v14 = (void *)(v13 + v8);
      int v15 = v6 & 0x3000;
      uint64_t v16 = (char *)(a1 + 28);
      if ((v12 & 0x40 | 0x80) != 0x80) {
        uint64_t v16 = 0LL;
      }
      *(void *)(a1 + 32) = v14;
      if (v15 == 0x2000) {
        uint64_t v17 = v16;
      }
      else {
        uint64_t v17 = 0LL;
      }
      if ((_BYTE)v7) {
        uint64_t v17 = (char *)v14 - (char)v7;
      }
      *(void *)(a1 + 48) = v17;
      if ((v12 & 0xC0) == 0x80) {
        *(void *)(a1 + 40) = *v14;
      }
      else {
        *(void *)(a1 + 40) = v14;
      }
    }

    else
    {
      *(void *)(a1 + 32) = 0LL;
      *(void *)(a1 + 48) = 0LL;
    }

    if ((v12 & 0xE) == 8) {
      uint64_t v18 = *(void *)(v2[1] + 8LL * *(unsigned __int16 *)(a1 + 22));
    }
    else {
      uint64_t v18 = 0LL;
    }
    *(void *)(a1 + 56) = v18;
  }

  return v1 < v3;
}

void sub_10007B16C(void *a1, void *a2)
{
  uint64_t v4 = a2 + 1;
  uint64_t v5 = *(_DWORD ***)(*a2 + 16LL);
  if ((**v5 & 0xC000) != 0x8000) {
    uint64_t v4 = (void *)*v4;
  }
  sub_10007AFA4(a1, (uint64_t)v5, (uint64_t)v4);
  a1[6] = a2 + 3;
  sub_10007B3CC();
}

void sub_10007B1BC(_WORD *a1)
{
}

double sub_10007B1E8(_WORD *a1)
{
  unsigned __int16 v1 = a1[8] + 1;
  a1[8] = v1;
  if (*(unsigned __int16 *)(*(void *)a1 + 32LL) <= v1)
  {
    double result = 0.0;
    *((void *)a1 + 2) = 0LL;
  }

  else
  {
    uint64_t v2 = (unsigned __int16)a1[9];
    int v3 = *(_DWORD *)(**(void **)a1 + 4 * v2);
    a1[9] = v2 + (1 << (v3 & 3));
    __int16 v4 = a1[10];
    if ((v3 & 0x3000) == 0) {
      ++v4;
    }
    a1[10] = v4;
    if ((v3 & 0xE00) == 0x800) {
      __int16 v5 = a1[11] + 1;
    }
    else {
      __int16 v5 = a1[11];
    }
    a1[11] = v5;
  }

  return result;
}

uint64_t sub_10007B258(unsigned __int16 *a1, unsigned int a2)
{
  unsigned int v2 = a1[12];
  if (v2 == a2) {
    return 1LL;
  }
  if (*(unsigned __int16 *)(*(void *)a1 + 36LL) >= a2)
  {
    int v6 = a1[8];
    if (v2 > a2) {
      a1[8] = *(_WORD *)(*(void *)a1 + 32LL);
    }
    while (1)
    {
      sub_10007B1E8(a1);
      sub_10007B3D4();
      if (((a2 ^ (v7 >> 2)) & 0x3F) == 0)
      {
        sub_10007B3C4();
        if (a1[12] == a2 && (a1[15] & 0xF) != 0xA) {
          break;
        }
      }

      if (a1[8] == v6)
      {
        sub_10007B3C4();
        return 0LL;
      }
    }

    return 1LL;
  }

  return 0LL;
}

void sub_10007B304(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 30) & 0xF) == 0xA)
  {
LABEL_6:
    sub_10007B3CC();
  }

  else
  {
    int v2 = *(unsigned __int16 *)(a1 + 16);
    while (1)
    {
      sub_10007B1E8((_WORD *)a1);
      sub_10007B3D4();
      if ((v3 & 0xF00) == 0xA00) {
        break;
      }
      if (*(unsigned __int16 *)(a1 + 16) == v2)
      {
        sub_10007B3C4();
        goto LABEL_6;
      }
    }

    sub_10007AFE4(a1);
  }

uint64_t sub_10007B374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_WORD *)(a3 + 26) == 16)
  {
    __int16 v3 = *(uint64_t (***)(uint64_t, uint64_t, void))(a3 + 40);
    if (v3)
    {
      if (a1)
      {
        __int16 v4 = *v3;
        if (*v3)
        {
          __int16 v5 = v3 + 1;
          return v4(a1, a3, v5);
        }
      }

      if (a2)
      {
        __int16 v4 = *v3;
        if (*v3)
        {
          __int16 v5 = v3 + 1;
          a1 = a2;
          return v4(a1, a3, v5);
        }
      }
    }
  }

  return 1LL;
}

BOOL sub_10007B3C4()
{
  return sub_10007AFE4(v0);
}

  ;
}

  ;
}

void sub_10007B3E8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3)
  {
    unint64_t v3 = a3;
    if (a2 || *(uint64_t (**)(uint64_t, _BYTE *, uint64_t))a1 == sub_10007B4E4)
    {
      if (*(void *)(a1 + 16) >= a3 && ((*(uint64_t (**)(uint64_t))a1)(a1) & 1) != 0)
      {
        *(void *)(a1 + 16) -= v3;
      }

      else
      {
        sub_10007C6A4();
        sub_10007C6B0();
        *(void *)(a1 + 24) = v5;
      }
    }

    else
    {
      while (v3 >= 0x11)
      {
        v3 -= 16LL;
      }

      sub_10007B3E8(a1, v6, v3);
    }
  }

uint64_t sub_10007B4E4(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  unint64_t v3 = *(char **)(a1 + 8);
  *(void *)(a1 + 8) = &v3[a3];
  if (a2 && a3)
  {
    do
    {
      char v4 = *v3++;
      *a2++ = v4;
      --a3;
    }

    while (a3);
  }

  return 1LL;
}

uint64_t sub_10007B510@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = sub_10007B4E4;
  a3[1] = result;
  a3[2] = a2;
  a3[3] = 0LL;
  return result;
}

void sub_10007B524(uint64_t a1, uint64_t a2)
{
}

void sub_10007B52C(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  if ((v7 & 1) != 0)
  {
    int v15 = v24;
    if ((char)v24 < 0)
    {
      int v15 = v24 & 0x7F;
      unsigned __int8 v16 = 7;
      while (1)
      {
        sub_10007C738(v7, v8, v9, v10, v11, v12, v13, v14, v22, *(int *)v23, *(__int16 *)&v23[4], v23[6], v24);
        if (!(_DWORD)v7) {
          break;
        }
        int v17 = v16;
        if (v16 < 0x20u)
        {
          v15 |= (v24 & 0x7F) << v16;
        }

        else
        {
          if (v16 >= 0x3Fu) {
            int v18 = 1;
          }
          else {
            int v18 = 255;
          }
          BOOL v20 = v15 < 0 && v18 == v24;
          if ((v24 & 0x7F) == 0) {
            BOOL v20 = 1;
          }
          if (v16 > 0x3Fu || !v20) {
            goto LABEL_28;
          }
        }

        v16 += 7;
        if ((v24 & 0x80) == 0)
        {
          if (v17 == 28 && (v24 & 0x70) != 0)
          {
LABEL_28:
            sub_10007C6A4();
            sub_10007C6B0();
            *(void *)(v3 + 24) = v21;
            return;
          }

          goto LABEL_3;
        }
      }
    }

    else
    {
LABEL_3:
      int *v4 = v15;
    }
  }

  else if (a3 && !*(void *)(v3 + 16))
  {
    *a3 = 1;
  }

void sub_10007B634()
{
  unsigned __int8 v10 = 0;
  uint64_t v11 = 0LL;
  while (1)
  {
    unsigned __int8 v12 = v10;
    if (v10 >= 0x40u) {
      break;
    }
    sub_10007C738(v2, v3, v4, v5, v6, v7, v8, v9, v14, v15, SWORD2(v15), SBYTE6(v15), SHIBYTE(v15));
    if (!(_DWORD)v2) {
      return;
    }
    v11 |= (unint64_t)(HIBYTE(v15) & 0x7F) << v12;
    unsigned __int8 v10 = v12 + 7;
    if ((v15 & 0x8000000000000000LL) == 0)
    {
      void *v1 = v11;
      return;
    }
  }

  sub_10007C6A4();
  sub_10007C6B0();
  *(void *)(v0 + 24) = v13;
}

void sub_10007B6B4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) && ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))a1)(a1, a2, 1LL) & 1) != 0)
  {
    --*(void *)(a1 + 16);
  }

  else
  {
    sub_10007C6A4();
    sub_10007C6B0();
    *(void *)(a1 + 24) = v3;
  }

void sub_10007B724(uint64_t a1, int *a2, unsigned int *a3, _BYTE *a4)
{
  *a4 = 0;
  *a2 = 0;
  *a3 = 0;
  sub_10007B52C(a1, (uint64_t)&v8, a4);
  if (v6)
  {
    char v7 = v8;
    *a3 = v8 >> 3;
    *a2 = v7 & 7;
  }

  sub_100029890();
}

void sub_10007B774(uint64_t a1, int a2)
{
  switch(a2)
  {
    case 0:
      do
        sub_10007C714(a1, (uint64_t)&v6);
      while ((_DWORD)a1 && v6 < 0);
      goto LABEL_9;
    case 1:
      unint64_t v3 = 8LL;
      goto LABEL_11;
    case 2:
      sub_10007B524(a1, (uint64_t)&v7);
      if (v4) {
        sub_10007B3E8(a1, 0LL, v7);
      }
      goto LABEL_9;
    case 5:
      unint64_t v3 = 4LL;
LABEL_11:
      sub_10007B3E8(a1, 0LL, v3);
      break;
    default:
      sub_10007C6A4();
      sub_10007C6B0();
      *(void *)(a1 + 24) = v5;
LABEL_9:
      sub_100029890();
      break;
  }

void sub_10007B830()
{
  if (v3)
  {
    __int128 v4 = *(_OWORD *)(v0 + 16);
    _OWORD *v1 = *(_OWORD *)v0;
    v1[1] = v4;
    uint64_t v5 = v7;
    if (*((void *)v1 + 2) >= (unint64_t)v7)
    {
      *((void *)v1 + 2) = v7;
      *(void *)(v0 + 16) -= v5;
    }

    else
    {
      sub_10007C6A4();
      sub_10007C6B0();
      *(void *)(v0 + 24) = v6;
    }
  }

  sub_100029890();
}

void sub_10007B89C()
{
  unint64_t v3 = *(void *)(v2 + 16);
  if (!v3 || (sub_10007B3E8(v1, 0LL, v3), v4))
  {
    *(void *)(v0 + 8) = *(void *)(v1 + 8);
    *(void *)(v0 + 24) = *(void *)(v1 + 24);
  }

void sub_10007B8E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned __int16 v55 = 0;
  uint64_t v54 = 0LL;
  BOOL v6 = sub_10007AFA4(v46, a2, a3);
  if ((a4 & 1) == 0 && v6)
  {
    sub_10007BD1C((uint64_t)v46, v7, v8, v9, v10, v11, v12, v13);
    if ((v14 & 1) == 0)
    {
      sub_10007C6A4();
LABEL_74:
      sub_10007C6B0();
      *(void *)(a1 + 24) = v41;
      return;
    }
  }

  int v42 = 0;
  uint64_t v15 = 0LL;
  unsigned int v16 = 0;
  int v17 = 0xFFFF;
  while (*(void *)(a1 + 16))
  {
    sub_10007B724(a1, (int *)&v44, &v45, &v43);
    if ((v18 & 1) == 0)
    {
      if (!v43) {
        return;
      }
      break;
    }

    uint64_t v19 = v45;
    if (!v45)
    {
      if ((a4 & 4) == 0)
      {
LABEL_55:
        sub_10007C6B0();
        *(void *)(a1 + 24) = v33;
        return;
      }

      break;
    }

    if (sub_10007B258(v46, v45) && (v51 & 0xF) != 0xA)
    {
      if ((v51 & 0x30) == 0x20 && v53 == &v50)
      {
        if (v17 != v47)
        {
          if (v17 != 0xFFFF && v55 != v42) {
            goto LABEL_55;
          }
          unsigned __int16 v55 = 0;
          int v42 = v50;
          int v17 = v47;
        }

        v53 = &v55;
      }

      if ((v51 & 0x30) == 0 && v48 <= 0x3Fu) {
        *(_DWORD *)((char *)&v54 + (((unint64_t)v48 >> 3) & 0x1FFC)) |= 1 << v48;
      }
      sub_10007BEB8(a1, v44, (unsigned __int8 *)v46);
      if ((v24 & 1) == 0) {
        return;
      }
    }

    else
    {
      if (!v16)
      {
        sub_10007B304((uint64_t)v46);
        if (v20)
        {
          uint64_t v15 = (void **)*v52;
          unsigned int v21 = v49;
        }

        else
        {
          unsigned int v21 = 0;
        }

        if (v15) {
          unsigned int v16 = v21;
        }
        else {
          unsigned int v16 = -1;
        }
      }

      uint64_t v25 = v44;
      uint64_t v27 = *(void *)(a1 + 16);
      uint64_t v28 = v27;
      unsigned int v29 = v15;
      if (v15)
      {
        while (v27 == v28)
        {
          uint64_t v30 = (uint64_t (*)(uint64_t, void **, uint64_t, uint64_t))**v29;
          if (v30)
          {
            if ((v30(a1, v29, v19, v25) & 1) == 0) {
              return;
            }
          }

          else
          {
            sub_10007B16C(v56, v29);
            if ((v31 & 1) == 0) {
              goto LABEL_55;
            }
            if ((_DWORD)v19 == v57)
            {
              if (v56[1])
              {
                *((_BYTE *)v29 + 24) = 1;
                sub_10007BEB8(a1, v25, (unsigned __int8 *)v56);
                if (!v32) {
                  return;
                }
              }
            }
          }

          unsigned int v29 = (void **)v29[2];
          uint64_t v28 = *(void *)(a1 + 16);
          if (!v29) {
            break;
          }
        }
      }

      if (v27 == v28)
      {
        LODWORD(v25) = v44;
LABEL_36:
        sub_10007B774(a1, v25);
        if ((v26 & 1) == 0) {
          return;
        }
      }
    }
  }

  if (v17 != 0xFFFF && v55 != v42) {
    goto LABEL_73;
  }
  if (*(_WORD *)(*(void *)v46 + 34LL))
  {
    unsigned int v35 = *(unsigned __int16 *)(*(void *)v46 + 34LL) >= 0x40u ? 64 : *(unsigned __int16 *)(*(void *)v46 + 34LL);
    uint64_t v36 = v35 >> 5;
    __int128 v37 = (int *)&v54;
    uint64_t v38 = v36;
    while (v38)
    {
      int v39 = *v37++;
      --v38;
      if (v39 != -1) {
        goto LABEL_73;
      }
    }

    int v40 = v35 & 0x1F;
    if (v40)
    {
      if (*((_DWORD *)&v54 + v36) != 0xFFFFFFFF >> -(char)v40)
      {
LABEL_73:
        sub_10007C6A4();
        goto LABEL_74;
      }
    }
  }

void sub_10007BC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10007BC40(uint64_t a1, BOOL *a2)
{
  if (v3) {
    *a2 = v4 != 0;
  }
  sub_100029890();
}

void sub_10007BC78(uint64_t a1, unint64_t *a2)
{
  if (v3) {
    *a2 = -(uint64_t)(v4 & 1) ^ (v4 >> 1);
  }
  sub_100029890();
}

void sub_10007BCB4(uint64_t a1, _DWORD *a2)
{
  if (v3) {
    *a2 = v4;
  }
  sub_100029890();
}

void sub_10007BCE8(uint64_t a1, void *a2)
{
  if (v3) {
    *a2 = v4;
  }
  sub_100029890();
}

void sub_10007BD1C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  uint64_t v28 = 0LL;
  if (*(void *)(*(void *)a1 + 16LL))
  {
    *((void *)&v29 + 1) = *(void *)(*(void *)a1 + 16LL);
    __int128 v30 = 0xFFFFFFFFFFFFFFFFLL;
    sub_10007C6E0( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v27,  SWORD2(v27),  SBYTE6(v27),  SHIBYTE(v27),  0,  0,  (char)sub_10007B4E4);
    if (!v9) {
      return;
    }
  }

  while (1)
  {
    char v10 = *(_BYTE *)(a1 + 30);
    if ((v10 & 0xF) == 0xA) {
      break;
    }
    if ((v10 & 0xC0) == 0x80)
    {
      **(void **)(a1 + 32) = 0LL;
      if ((v10 & 0x20) != 0) {
        goto LABEL_24;
      }
    }

    else if ((*(_BYTE *)(a1 + 30) & 0xC0) == 0)
    {
      int v13 = v10 & 0x30;
      if (v13 == 48 || v13 == 32)
      {
LABEL_24:
        **(_WORD **)(a1 + 48) = 0;
        goto LABEL_25;
      }

      if (v13 == 16)
      {
        char v14 = *(_BYTE **)(a1 + 48);
        if (v14) {
          _BYTE *v14 = 0;
        }
      }

      if ((v10 & 0xE) == 8
        && ((uint64_t v15 = *(void *)(a1 + 56), *(void *)(v15 + 16)) || *(void *)(v15 + 24) || **(void **)(v15 + 8)))
      {
      }

      else
      {
        memset(*(void **)(a1 + 40), 0, *(unsigned __int16 *)(a1 + 26));
      }
    }

void sub_10007BEB8(uint64_t a1, int a2, unsigned __int8 *a3)
{
  int v4 = a3[30];
  if ((v4 & 0xC0) == 0x80) {
    goto LABEL_17;
  }
  if ((v4 & 0xC0) != 0x40)
  {
    if ((v4 & 0xC0) == 0) {
      __asm { BR              X11 }
    }

    goto LABEL_17;
  }

  if (!*(void *)(*(void *)a3 + 24LL))
  {
    sub_10007B774(a1, a2);
    return;
  }

  switch(a2)
  {
    case 2:
      sub_10007C6FC();
      if (!(_DWORD)v5) {
        return;
      }
      unint64_t v6 = v11;
      while (1)
      {
        uint64_t v5 = sub_10007C6BC(v5);
        if ((v5 & 1) == 0) {
          break;
        }
        if (v11) {
          BOOL v7 = v11 >= v6;
        }
        else {
          BOOL v7 = 1;
        }
        unint64_t v6 = v11;
        if (v7)
        {
          sub_10007C6F4();
          return;
        }
      }

      goto LABEL_17;
    case 5:
      sub_10007B3E8(a1, (uint64_t)v12, 4uLL);
      if ((a1 & 1) != 0) {
        goto LABEL_33;
      }
      break;
    case 1:
      sub_10007B3E8(a1, (uint64_t)v12, 8uLL);
      if ((_DWORD)a1) {
LABEL_33:
      }
        sub_10007C6BC(a1);
      break;
    case 0:
      uint64_t v9 = 0LL;
      while (v9 != 10)
      {
        sub_10007C714(a1, (uint64_t)&v12[v9]);
        if (!(_DWORD)a1) {
          return;
        }
        int v10 = (char)v12[v9++];
        if ((v10 & 0x80000000) == 0) {
          goto LABEL_33;
        }
      }

      sub_10007C6A4();
      goto LABEL_18;
    default:
LABEL_17:
      sub_10007C6A4();
LABEL_18:
      sub_10007C6B0();
      *(void *)(a1 + 24) = v8;
      return;
  }

void sub_10007C26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = *(_BYTE *)(a3 + 30) & 0xF;
  switch(*(_BYTE *)(a3 + 30) & 0xF)
  {
    case 0:
      if ((_DWORD)a2 && (_DWORD)a2 != 255) {
        goto LABEL_38;
      }
      sub_10007BC40(a1, *(BOOL **)(a3 + 40));
      return;
    case 1:
    case 2:
    case 3:
      if ((_DWORD)a2 && (_DWORD)a2 != 255) {
        goto LABEL_38;
      }
      if (v4 != 2)
      {
        if (v4 == 3)
        {
          sub_10007BC78(a1, &v36);
          if (!v22) {
            return;
          }
          int v23 = *(unsigned __int16 *)(a3 + 26);
        }

        else
        {
          sub_10007C72C();
          if (!v24) {
            return;
          }
          int v23 = *(unsigned __int16 *)(a3 + 26);
          unint64_t v25 = v37[0];
          if (v23 == 8)
          {
LABEL_78:
            **(void **)(a3 + 40) = v25;
            return;
          }

          unint64_t v36 = SLODWORD(v37[0]);
        }

        switch(v23)
        {
          case 1:
            unint64_t v7 = v36;
            **(_BYTE **)(a3 + 40) = v36;
            uint64_t v9 = (char)v7;
            goto LABEL_75;
          case 2:
            unint64_t v7 = v36;
            **(_WORD **)(a3 + 40) = v36;
            uint64_t v9 = (__int16)v7;
            goto LABEL_75;
          case 4:
            unint64_t v7 = v36;
            **(_DWORD **)(a3 + 40) = v36;
            uint64_t v9 = (int)v7;
LABEL_75:
            if (v9 != v7) {
              goto LABEL_76;
            }
            return;
          case 8:
            unint64_t v25 = v36;
            goto LABEL_78;
          default:
LABEL_76:
            sub_10007C6A4();
            break;
        }

        goto LABEL_39;
      }

      sub_10007C72C();
      if (v6)
      {
        switch(*(_WORD *)(a3 + 26))
        {
          case 1:
            sub_10007C720();
            *uint64_t v8 = v7;
            uint64_t v9 = v7;
            goto LABEL_75;
          case 2:
            sub_10007C720();
            *int v32 = v7;
            uint64_t v9 = (unsigned __int16)v7;
            goto LABEL_75;
          case 4:
            sub_10007C720();
            *uint64_t v33 = v7;
            uint64_t v9 = v7;
            goto LABEL_75;
          case 8:
            sub_10007C720();
            void *v35 = v34;
            break;
          default:
            goto LABEL_76;
        }
      }

      return;
    case 4:
      if ((_DWORD)a2 != 5 && (_DWORD)a2 != 255) {
        goto LABEL_38;
      }
      sub_10007BCB4(a1, *(_DWORD **)(a3 + 40));
      return;
    case 5:
      if ((_DWORD)a2 != 1 && (_DWORD)a2 != 255) {
        goto LABEL_38;
      }
      sub_10007BCE8(a1, *(void **)(a3 + 40));
      return;
    case 6:
      if ((_DWORD)a2 != 2) {
        goto LABEL_38;
      }
      sub_10007C6D4(a1, a2);
      if (!v14) {
        return;
      }
      unint64_t v15 = LODWORD(v37[0]);
      if (LODWORD(v37[0]) >= 0x10000
        || (*(_BYTE *)(a3 + 30) & 0xC0) == 0x80
        || (unint64_t)LODWORD(v37[0]) + 2 > *(unsigned __int16 *)(a3 + 26))
      {
        goto LABEL_38;
      }

      uint64_t v16 = *(_WORD **)(a3 + 40);
      _WORD *v16 = v37[0];
      uint64_t v17 = (uint64_t)(v16 + 1);
      goto LABEL_65;
    case 7:
      if ((_DWORD)a2 != 2) {
        goto LABEL_38;
      }
      uint64_t v18 = *(void *)(a3 + 40);
      sub_10007C6D4(a1, a2);
      if (!v19) {
        return;
      }
      unint64_t v15 = LODWORD(v37[0]);
      if (LODWORD(v37[0]) == -1
        || (*(_BYTE *)(a3 + 30) & 0xC0) == 0x80
        || LODWORD(v37[0]) >= *(unsigned __int16 *)(a3 + 26))
      {
        goto LABEL_38;
      }

      *(_BYTE *)(v18 + LODWORD(v37[0])) = 0;
      uint64_t v31 = a1;
      uint64_t v17 = v18;
      goto LABEL_72;
    case 8:
    case 9:
      if ((_DWORD)a2 != 2) {
        goto LABEL_38;
      }
      sub_10007C6FC();
      if (!v10) {
        return;
      }
      if (!*(void *)(a3 + 56)) {
        goto LABEL_38;
      }
      if ((*(_BYTE *)(a3 + 30) & 0xF) == 9 && (uint64_t v11 = *(void *)(a3 + 48)) != 0)
      {
        int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 - 16);
        if (v12)
        {
          int v13 = v12(v37, a3, v11 - 8);
          LOBYTE(v12) = v37[2] == 0LL;
          goto LABEL_51;
        }
      }

      else
      {
        LOBYTE(v12) = 0;
      }

      int v13 = 1;
LABEL_51:
      if ((v12 & 1) == 0 && v13)
      {
        unsigned int v26 = *(unsigned __int8 *)(a3 + 30);
        BOOL v27 = v26 >= 0x40;
        int v28 = v26 & 0x30;
        uint64_t v30 = !v27 && v28 != 32;
        sub_10007B8E4(v37, *(void *)(a3 + 56), *(void *)(a3 + 40), v30);
      }

      sub_10007C6F4();
      return;
    case 0xB:
      if ((_DWORD)a2 != 2) {
        goto LABEL_38;
      }
      sub_10007C6D4(a1, a2);
      if (!v20) {
        return;
      }
      if (LODWORD(v37[0]) >= 0x10000) {
        goto LABEL_38;
      }
      if (LODWORD(v37[0]))
      {
        unint64_t v15 = *(unsigned __int16 *)(a3 + 26);
        if (LODWORD(v37[0]) == (_DWORD)v15)
        {
          uint64_t v17 = *(void *)(a3 + 40);
LABEL_65:
          uint64_t v31 = a1;
LABEL_72:
          sub_10007B3E8(v31, v17, v15);
        }

        else
        {
LABEL_38:
          sub_10007C6A4();
LABEL_39:
          sub_10007C6B0();
          *(void *)(a1 + 24) = v21;
        }
      }

      else
      {
        sub_10007C704();
      }

      return;
    default:
      goto LABEL_38;
  }

uint64_t sub_10007C6A4()
{
  return 0LL;
}

  ;
}

uint64_t sub_10007C6BC(uint64_t a1, ...)
{
  return (*(uint64_t (**)(char *, void, uint64_t))(*(void *)v1 + 24LL))(va, 0LL, v1);
}

void sub_10007C6D4(uint64_t a1, uint64_t a2, ...)
{
}

void sub_10007C6E0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12, int a13, unsigned int a14, char a15)
{
}

void sub_10007C6F4()
{
}

void sub_10007C6FC()
{
}

void *sub_10007C704()
{
  return memset(*(void **)(v0 + 40), 0, *(unsigned __int16 *)(v0 + 26));
}

void sub_10007C714(uint64_t a1, uint64_t a2)
{
}

  ;
}

void sub_10007C72C()
{
}

void sub_10007C738( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
}

  ;
}

uint64_t sub_10007C750()
{
  if (qword_1008D9F08)
  {
    sub_1001EE0E4("HCI/SCO Pool Info:");
    sub_10012C740(qword_1008D9F08);
  }

  if (qword_1008D9F10)
  {
    sub_1001EE0E4("ACL Pool Info:");
    sub_10012C740(qword_1008D9F10);
  }

  return sub_1001EE0E4("%s: [END]", "pcie_dump_state");
}

uint64_t sub_10007C7D8(int a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  *(void *)a4 = mach_continuous_time();
  *(_BYTE *)(a4 + 8) = 0;
  uint64_t v8 = sub_10012F6A8(a1, a2, a3);
  if (a3 > v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 + 8 == (_DWORD)a3)
    {
      int v10 = &a2[v8];
      signed __int8 v11 = v10[2];
      if (v11 < 0)
      {
        *(_BYTE *)(a4 + 8) = 1;
        if ((v11 & 0x40) == 0) {
          goto LABEL_5;
        }
      }

      else if ((v10[2] & 0x40) == 0)
      {
LABEL_5:
        if ((v11 & 0x80) == 0 && (v11 & 0x60) == 0x20)
        {
          *(_BYTE *)(a4 + 9) = 1;
          *(_DWORD *)(a4 + 12) = *(_DWORD *)&a2[(unsigned __int16)(v8 + 3)];
        }

        goto LABEL_11;
      }

      uint64_t v12 = mach_continuous_time();
      *(void *)a4 = v12
                    - MillisecondsToUpTicks((v10[6] << 24) | ((unint64_t)v10[5] << 16) | ((unint64_t)v10[4] << 8) | v10[3]);
LABEL_11:
      sub_1000BA78C();
      return v9;
    }

    sub_1001EE0E4("%s: invalid packet length received\n", "pcie_transport_decode_hci_packet_attrs_from_footer");
  }

  return a3;
}

uint64_t sub_10007C904(uint64_t *a1)
{
  int v20 = 0;
  if (a1 && *a1 && *((_DWORD *)a1 + 3) != -1)
  {
    uint64_t v2 = strncpy(__dst, (const char *)a1 + 17, 3uLL);
    __strcat_chk(v2, "_rx", 7LL);
    sub_1001EE0E4("launching %s\n", __dst);
    sub_1000BC2E0(__dst);
    uint64_t v3 = *a1;
    int v4 = *((_DWORD *)a1 + 3);
    uint64_t v5 = os_channel_ring_id(*a1, 2LL);
    uint64_t v6 = os_channel_rx_ring(v3, v5);
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    memset(&eventlist, 0, sizeof(eventlist));
    if (kevent(v4, 0LL, 0, &eventlist, 1, 0LL) == -1 || (unsigned __int16)eventlist.filter != 0xFFFF)
    {
LABEL_24:
      sub_1001EE0E4("%s: kevent error on sw_kq_read\n", "skywalk_read_loop");
    }

    else
    {
      while (1)
      {
        if ((byte_1008D9F18 & 1) == 0) {
          sub_1000A85A0();
        }
        if (!*a1) {
          break;
        }
        unsigned int v7 = os_channel_available_slot_count(v6);
        uint64_t next_slot = os_channel_get_next_slot(v6, 0LL, &v15);
        if (v7 && next_slot)
        {
          unsigned int v9 = 1;
          do
          {
            uint64_t v10 = next_slot;
            if (!byte_1008D9F19)
            {
              if ((byte_1008D9F18 & 1) != 0)
              {
                sub_1000BA78C();
              }

              else
              {
                v13[0] = 0LL;
                v13[1] = 0LL;
                uint64_t v11 = sub_10007C7D8(*((unsigned __int8 *)a1 + 16), (unsigned __int8 *)v16, WORD1(v15), (uint64_t)v13);
                sub_10012F73C(*((unsigned __int8 *)a1 + 16), (unsigned __int8 *)v16, v11, (uint64_t)v13);
              }
            }

            uint64_t next_slot = os_channel_get_next_slot(v6, v10, &v15);
            if (v9 >= v7) {
              break;
            }
            ++v9;
          }

          while (next_slot);
          if (os_channel_advance_slot(v6, v10))
          {
            sub_1001EE0E4("%s: failed to advance slot - %d\n");
            break;
          }

          if (os_channel_sync(v3, 1LL))
          {
            sub_1001EE0E4("%s: os_channel_sync rx failed - %d\n");
            break;
          }
        }

        if ((byte_1008D9F18 & 1) == 0) {
          sub_1000A8688();
        }
        __int128 v17 = 0u;
        __int128 v18 = 0u;
        __int128 v15 = 0u;
        __int128 v16 = 0u;
        memset(&eventlist, 0, sizeof(eventlist));
      }

      sub_1000A8688();
    }

    sub_1001EE0E4("exiting skywalk_read_loop for %s\n");
  }

  else
  {
    sub_1001EE0E4("%s: invalid input parameter\n");
  }

  return 0LL;
}

uint64_t sub_10007CBB4()
{
  if (qword_1008D9F30 != -1) {
    dispatch_once(&qword_1008D9F30, &stru_1008819D0);
  }
  if (qword_1008D9F28) {
    return 0LL;
  }
  else {
    return 114LL;
  }
}

uint64_t sub_10007CC00(int a1, __int16 a2, unsigned int a3)
{
  if (a1 > 2)
  {
    if (a1 == 3)
    {
      uint64_t v6 = sub_10007DCB4;
      unsigned int v7 = 3;
    }

    else
    {
      if (a1 != 243) {
        goto LABEL_25;
      }
      uint64_t v6 = sub_10007DCB4;
      unsigned int v7 = 4;
    }

    uint64_t v8 = &qword_1008D9F08;
    unsigned int v9 = &qword_1008D9F48;
  }

  else
  {
    if (a1 != 1)
    {
      if (a1 == 2)
      {
        uint64_t v6 = sub_10007DCC4;
        unsigned int v7 = 4;
        uint64_t v8 = &qword_1008D9F10;
        unsigned int v9 = &qword_1008D9F40;
        goto LABEL_11;
      }

uint64_t sub_10007CE14()
{
  kern_return_t v3;
  io_connect_t connect;
  sub_1001EE0E4("PCIe FLR\n");
  uint64_t v0 = IOServiceMatching("AppleBluetoothModule");
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v0);
  if (MatchingService)
  {
    connect = 0;
    if (IOServiceOpen(MatchingService, mach_task_self_, 0, &connect))
    {
      sub_1001EE0E4("PCIe could not open AppleBluetoothModule service: %#x\n");
    }

    else
    {
      uint64_t v3 = IOConnectCallScalarMethod(connect, 5u, 0LL, 0, 0LL, 0LL);
      if (!v3)
      {
        IOServiceClose(connect);
        return 0LL;
      }

      sub_1001EE0E4("PCIe FLR failed: %#x\n", v3);
      IOServiceClose(connect);
    }
  }

  else
  {
    sub_1001EE0E4("PCIe could not find AppleBluetoothModule service\n");
  }

  return 1205LL;
}

uint64_t sub_10007CEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = 0LL;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v11 = 0u;
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  sub_1001EE0E4("PCIe Download Firmware, size = %d\n", a1);
  AppleConvergedTransportInitParameters(&v11);
  LODWORD(v11) = 1;
  DWORD2(v12) = 5000;
  LODWORD(v16) = 25;
  *(void *)&__int128 v12 = &stru_100881C50;
  uint64_t v4 = 1205LL;
  if (AppleConvergedTransportCreate(&v11, &v10))
  {
    int v5 = AppleConvergedTransportSendImage(v10, a2, a1, (char *)&v9 + 4, 2000LL, &v9, 0LL);
    BOOL v6 = v5 == 0;
    if (v5) {
      unsigned int v7 = "PCIe Download Firmware -- Done\n";
    }
    else {
      unsigned int v7 = "PCIe failed to send image\n";
    }
    if (v6) {
      uint64_t v4 = 1205LL;
    }
    else {
      uint64_t v4 = 0LL;
    }
  }

  else
  {
    unsigned int v7 = "PCIe failed to create BTI transport\n";
  }

  sub_1001EE0E4(v7);
  return v4;
}

uint64_t sub_10007D000(int a1, __int16 a2, unsigned int a3)
{
  if (a1 > 2)
  {
    if (a1 != 3)
    {
      if (a1 == 243)
      {
        int v5 = &qword_1008D9F80;
        byte_1008D9F90 = -13;
        goto LABEL_8;
      }

uint64_t sub_10007D33C( uint64_t (*a1)(void, void), uint64_t a2, uint64_t (*a3)(void, void))
{
  if (a1 && a2 && a3)
  {
    if (qword_1008D9F30 != -1) {
      dispatch_once(&qword_1008D9F30, &stru_1008819D0);
    }
    if (qword_1008D9F28)
    {
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 0x40000000LL;
      v7[2] = sub_10007D464;
      v7[3] = &unk_100881970;
      v7[4] = a1;
      v7[5] = a2;
      off_1008D9F20 = a1;
      if (!AppleConvergedTransportRegisterEventBlockQ(v7))
      {
        sub_1001EE0E4("PCIe failed to register event listener\n");
        uint64_t result = 0LL;
        off_1008D9F20 = 0LL;
        return result;
      }

      sub_1001EE0E4("PCIe registered event listener successfully\n");
      if ((sub_1001F5FC8((dispatch_queue_s *)qword_1008D9F28, a3) & 1) != 0)
      {
        sub_1001EE0E4("Registered ABTM listener successfully\n");
        return 1LL;
      }

      sub_1001EE0E4("Failed to register ABTM listener\n");
    }

    else
    {
      sub_1001EE0E4("Initialization failed\n");
    }
  }

  else
  {
    sub_1001EE0E4("Bad argument\n");
  }

  return 0LL;
}

uint64_t sub_10007D464(uint64_t a1, int a2, const char *a3, int a4)
{
  if (a2 == 2)
  {
    sub_1001EE0E4("PCIe detected controller is resetting");
    return (*(uint64_t (**)(const char *, char *))(a1 + 40))(a3, &byte_1008D9F19);
  }

  else
  {
    if (a2)
    {
      sub_1001EE0E4("Non-fatal event: %s\n", a3);
      unsigned int v7 = *(uint64_t (**)(const char *, uint64_t))(a1 + 32);
      uint64_t v8 = a3;
      uint64_t v9 = 0LL;
    }

    else
    {
      byte_1008D9F19 = 1;
      sub_1001EE0E4("Fatal event: %s\n", a3);
      usleep(1000 * a4);
      unsigned int v7 = *(uint64_t (**)(const char *, uint64_t))(a1 + 32);
      uint64_t v8 = a3;
      uint64_t v9 = 1LL;
    }

    return v7(v8, v9);
  }

uint64_t sub_10007D528(uint64_t a1)
{
  if (a1)
  {
    if (qword_1008D9F30 != -1) {
      dispatch_once(&qword_1008D9F30, &stru_1008819D0);
    }
    if (qword_1008D9F28)
    {
      v3[0] = _NSConcreteStackBlock;
      v3[1] = 0x40000000LL;
      v3[2] = sub_10007D5FC;
      v3[3] = &unk_100881990;
      v3[4] = a1;
      if (AppleConvergedTransportRegisterTimeSyncEventBlockQ(v3))
      {
        sub_1001EE0E4("PCIe registered time sync listener successfully\n");
        return 1LL;
      }

      sub_1001EE0E4("PCIe failed to register time sync listener\n");
    }

    else
    {
      sub_1001EE0E4("Initialization failed\n");
    }
  }

  else
  {
    sub_1001EE0E4("Bad argument\n");
  }

  return 0LL;
}

uint64_t sub_10007D5FC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2);
}

void sub_10007D608(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_qos_class(0LL, QOS_CLASS_DEFAULT, 0);
  qword_1008D9F28 = (uint64_t)dispatch_queue_create("com.apple.bluetoothd.pcie-event", v1);
}

uint64_t sub_10007D640()
{
  return 0LL;
}

uint64_t sub_10007D648()
{
  qword_1008D9F08 = (uint64_t)sub_10012C96C(0x10u, 0x200uLL);
  if (qword_1008D9F08)
  {
    qword_1008D9F10 = (uint64_t)sub_10012C96C(0x10u, 0x1000uLL);
    if (qword_1008D9F10)
    {
      if ((AppleConvergedTransportIsValid(qword_1008D9F38) & 1) != 0
        || (AppleConvergedTransportIsValid(qword_1008D9F40) & 1) != 0
        || AppleConvergedTransportIsValid(qword_1008D9F48))
      {
        sub_1001EE2A0();
      }

      uint64_t v6 = 0LL;
      __int128 v4 = 0u;
      __int128 v5 = 0u;
      __int128 v2 = 0u;
      __int128 v3 = 0u;
      __int128 v1 = 0u;
      byte_1008D9F19 = 0;
      AppleConvergedTransportInitParameters(&v1);
      LODWORD(v1) = 2;
      DWORD2(v2) = 5000;
      LODWORD(v3) = v3 | 0xC;
      *(void *)((char *)&v3 + 4) = 0x10200000020LL;
      LODWORD(v6) = 25;
      *(void *)&__int128 v2 = &stru_100881A10;
      *(void *)&__int128 v4 = &stru_100881A50;
      *((void *)&v4 + 1) = &stru_100881A90;
      if (AppleConvergedTransportCreate(&v1, &qword_1008D9F38))
      {
        AppleConvergedTransportInitParameters(&v1);
        LODWORD(v1) = 3;
        DWORD2(v2) = 5000;
        LODWORD(v3) = v3 | 4;
        *(void *)((char *)&v3 + 4) = 0xA2200000020LL;
        LODWORD(v6) = 33;
        *(void *)&__int128 v2 = &stru_100881AD0;
        *(void *)&__int128 v4 = &stru_100881B10;
        *((void *)&v4 + 1) = &stru_100881B50;
        if (AppleConvergedTransportCreate(&v1, &qword_1008D9F40))
        {
          AppleConvergedTransportInitParameters(&v1);
          LODWORD(v1) = 4;
          DWORD2(v2) = 5000;
          LODWORD(v3) = v3 | 4;
          *(void *)((char *)&v3 + 4) = 0x10200000020LL;
          LODWORD(v6) = 33;
          *(void *)&__int128 v2 = &stru_100881B90;
          *(void *)&__int128 v4 = &stru_100881BD0;
          *((void *)&v4 + 1) = &stru_100881C10;
          if ((AppleConvergedTransportCreate(&v1, &qword_1008D9F48) & 1) != 0) {
            return 0LL;
          }
          sub_1001EE0E4("PCIe failed to create SCO transport\n");
        }

        else
        {
          sub_1001EE0E4("PCIe failed to create ACL transport\n");
        }
      }

      else
      {
        sub_1001EE0E4("PCIe failed to create HCI transport\n");
      }

      sub_10007DB50();
      sub_10007DC30();
      off_1008D9F20("PCIe transport creation failed", 1LL);
    }

    else
    {
      sub_10012C8E4((pthread_mutex_t *)qword_1008D9F08);
      off_1008D9F20("acl mempool allocation failure", 1LL);
    }
  }

  else
  {
    off_1008D9F20("hci-sco mempool allocation failure", 1LL);
  }

  return 633LL;
}

void sub_10007D8A4(id a1, int a2, void *a3, void *a4)
{
}

void sub_10007D8D0(id a1, int a2, void *a3, unsigned int a4)
{
}

void sub_10007D8D8(uint64_t a1, int a2, unsigned __int8 *a3, unsigned __int16 a4)
{
  if (!a2)
  {
    if (!byte_1008D9F19)
    {
      if ((byte_1008D9F18 & 1) == 0)
      {
        sub_1000A85A0();
        v8[0] = 0LL;
        v8[1] = 0LL;
        uint64_t v7 = sub_10007C7D8(a1, a3, a4, (uint64_t)v8);
        sub_10012F73C(a1, a3, v7, (uint64_t)v8);
        sub_1000A8688();
        if (!a3) {
          return;
        }
LABEL_8:
        free(a3);
        return;
      }

      sub_1000BA78C();
    }

    if (!a3) {
      return;
    }
    goto LABEL_8;
  }

  if (!byte_1008D9F19)
  {
    sub_1001EE0E4("PCIe read failed: type %u, status 0x%x\n", a1, a2);
    sleep(0xC8u);
    off_1008D9F20("PCIe read failed", 1LL);
  }

void sub_10007D9C8(id a1, int a2, void *a3, unsigned int a4)
{
  if (a2)
  {
    if (!byte_1008D9F19)
    {
      sub_1001EE0E4("PCIe HCI write failed: 0x%x\n", a2);
      sleep(0xC8u);
      off_1008D9F20("PCIe HCI write failed", 1LL);
    }
  }

void sub_10007DA28(id a1, int a2, void *a3, void *a4)
{
}

void sub_10007DA54(id a1, int a2, void *a3, unsigned int a4)
{
}

void sub_10007DA5C(id a1, int a2, void *a3, unsigned int a4)
{
  if (a2)
  {
    if (!byte_1008D9F19)
    {
      sub_1001EE0E4("PCIe ACL write failed: 0x%x\n", a2);
      sleep(0xC8u);
      off_1008D9F20("PCIe ACL write failed", 1LL);
    }
  }

void sub_10007DABC(id a1, int a2, void *a3, void *a4)
{
}

void sub_10007DAE8(id a1, int a2, void *a3, unsigned int a4)
{
}

void sub_10007DAF0(id a1, int a2, void *a3, unsigned int a4)
{
  if (a2)
  {
    if (!byte_1008D9F19)
    {
      sub_1001EE0E4("PCIe SCO write failed: 0x%x\n", a2);
      sleep(0xC8u);
      off_1008D9F20("PCIe SCO write failed", 1LL);
    }
  }

uint64_t sub_10007DB50()
{
  if (AppleConvergedTransportIsValid(qword_1008D9F38)
    && (AppleConvergedTransportFree(&qword_1008D9F38) & 1) == 0)
  {
    sub_1001EE0E4("PCIe free HCI transport failed\n");
    off_1008D9F20("PCIe free HCI transport failed", 1LL);
  }

  if (AppleConvergedTransportIsValid(qword_1008D9F40)
    && (AppleConvergedTransportFree(&qword_1008D9F40) & 1) == 0)
  {
    sub_1001EE0E4("PCIe free ACL transport failed\n");
    off_1008D9F20("PCIe free ACL transport failed", 1LL);
  }

  uint64_t result = AppleConvergedTransportIsValid(qword_1008D9F48);
  if ((_DWORD)result)
  {
    uint64_t result = AppleConvergedTransportFree(&qword_1008D9F48);
    if ((result & 1) == 0)
    {
      sub_1001EE0E4("PCIe free SCO transport failed\n");
      return off_1008D9F20("PCIe free SCO transport failed", 1LL);
    }
  }

  return result;
}

void sub_10007DC30()
{
  if (qword_1008D9F08)
  {
    sub_10012CAD8(qword_1008D9F08);
    sub_10012C8E4((pthread_mutex_t *)qword_1008D9F08);
    qword_1008D9F08 = 0LL;
  }

  if (qword_1008D9F10)
  {
    sub_10012CAD8(qword_1008D9F10);
    sub_10012C8E4((pthread_mutex_t *)qword_1008D9F10);
    qword_1008D9F10 = 0LL;
  }

uint64_t sub_10007DC80()
{
  return 0LL;
}

uint64_t sub_10007DC88()
{
  return 0LL;
}

uint64_t sub_10007DCAC()
{
  return 2594LL;
}

uint64_t sub_10007DCB4(unint64_t a1)
{
  return sub_10012CC24(qword_1008D9F08, a1);
}

uint64_t sub_10007DCC4(unint64_t a1)
{
  return sub_10012CC24(qword_1008D9F10, a1);
}

uint64_t sub_10007DCD8()
{
  return 0LL;
}

uint64_t sub_10007DCE0()
{
  return 0LL;
}

void sub_10007DCE8()
{
  byte_1008D9F19 = 1;
}

void sub_10007DCF8()
{
  byte_1008D9F18 = 1;
}

uint64_t sub_10007DD08()
{
  kern_return_t v3;
  io_connect_t connect;
  sub_1001EE0E4("pcie_force_doorbell_flush AppleConvergedIPCOLYBTControl\n");
  uint64_t v0 = IOServiceMatching("AppleConvergedIPCOLYBTControl");
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v0);
  if (MatchingService)
  {
    connect = 0;
    if (IOServiceOpen(MatchingService, mach_task_self_, 0, &connect))
    {
      sub_1001EE0E4("PCIe could not open AppleConvergedIPCOLYBTControl service: %#x\n");
    }

    else
    {
      __int128 v3 = IOConnectCallScalarMethod(connect, 4u, 0LL, 0, 0LL, 0LL);
      if (!v3)
      {
        IOServiceClose(connect);
        sub_1001EE0E4("pcie_force_doorbell_flush completed successfully\n");
        return 0LL;
      }

      sub_1001EE0E4("PCIe doorbell flush failed: %#x\n", v3);
      IOServiceClose(connect);
    }
  }

  else
  {
    sub_1001EE0E4("PCIe could not find AppleConvergedIPCOLYBTControl service\n");
  }

  return 1205LL;
}

void sub_10007DE04(id a1, int a2, void *a3, void *a4)
{
}

uint64_t sub_10007DE30()
{
  qword_1008D9F50 = 0LL;
  qword_1008D9F58 = -1LL;
  qword_1008D9F68 = 0LL;
  qword_1008D9F70 = -1LL;
  unk_1008D9F79 = 0;
  unk_1008D9F61 = 0;
  qword_1008D9F80 = 0LL;
  qword_1008D9F88 = -1LL;
  unk_1008D9F91 = 0;
  byte_1008D9F19 = 0;
  if ((sub_10007E02C("hci", (uint64_t)&qword_1008D9F50) & 0x80000000) != 0)
  {
    sub_1001EE0E4("PCIe Skywalk failed to create HCI transport\n");
    goto LABEL_5;
  }

  byte_1008D9F60 = 4;
  unk_1008D9F61 = 25448;
  byte_1008D9F63 = 105;
  if (pthread_create((pthread_t *)&qword_1008F1F58, 0LL, (void *(__cdecl *)(void *))sub_10007C904, &qword_1008D9F50))
  {
    sub_1001EE0E4("failed to create hci rx thread\n");
LABEL_5:
    sub_10007E620();
    off_1008D9F20("PCIe Skywalk transport creation failed", 1LL);
    return 633LL;
  }

  sub_1000BC20C((_opaque_pthread_t *)qword_1008F1F58, 63);
  if ((sub_10007E02C("acl", (uint64_t)&qword_1008D9F68) & 0x80000000) != 0)
  {
    sub_1001EE0E4("PCIe Skywalk failed to create ACL transport\n");
    goto LABEL_5;
  }

  byte_1008D9F78 = 2;
  unk_1008D9F79 = 25441;
  byte_1008D9F7B = 108;
  if (pthread_create((pthread_t *)&qword_1008F1F60, 0LL, (void *(__cdecl *)(void *))sub_10007C904, &qword_1008D9F68))
  {
    sub_1001EE0E4("failed to create acl rx thread\n");
    goto LABEL_5;
  }

  sub_1000BC20C((_opaque_pthread_t *)qword_1008F1F60, 63);
  if ((sub_10007E02C("sco", (uint64_t)&qword_1008D9F80) & 0x80000000) != 0)
  {
    sub_1001EE0E4("PCIe Skywalk failed to create SCO transport\n");
    goto LABEL_5;
  }

  byte_1008D9F90 = 3;
  unk_1008D9F91 = 25459;
  byte_1008D9F93 = 111;
  if (pthread_create((pthread_t *)&qword_1008F1F68, 0LL, (void *(__cdecl *)(void *))sub_10007C904, &qword_1008D9F80))
  {
    sub_1001EE0E4("failed to create sco rx thread\n");
    goto LABEL_5;
  }

  sub_1000BC20C((_opaque_pthread_t *)qword_1008F1F68, 63);
  uint64_t result = 0LL;
  byte_1008DAF98 = 0;
  return result;
}

uint64_t sub_10007E02C(const char *a1, uint64_t a2)
{
  kern_return_t v11;
  io_object_t v12;
  io_registry_entry_t v13;
  BOOL v14;
  CFRunLoopRunResult v15;
  io_object_t v16;
  BOOL v17;
  CFStringRef v18;
  CFStringRef v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unint64_t v28;
  int v30;
  CFStringRef v31;
  CFStringRef v32;
  io_iterator_t notification[2];
  kevent changelist;
  uuid_t uu;
  char buffer[8];
  uint64_t v37;
  char in[16];
  _BYTE v39[21];
  if (!a1 || !a2)
  {
    sub_1001EE0E4("%s: invalid input. protocol/channel_data null\n");
    return 0xFFFFFFFFLL;
  }

  memset(&changelist, 0, sizeof(changelist));
  memset(uu, 0, sizeof(uu));
  sub_1001EE0E4("retrieving uuid for %s\n", a1);
  notification[0] = 0;
  *(_OWORD *)in = 0u;
  memset(v39, 0, sizeof(v39));
  __int128 v4 = IONotificationPortCreate(kIOMainPortDefault);
  RunLoopSource = IONotificationPortGetRunLoopSource(v4);
  Current = CFRunLoopGetCurrent();
  CFRunLoopAddSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  CFMutableDictionaryRef v7 = IOServiceMatching("AppleConvergedIPCInterface");
  if (!v7)
  {
    sub_1001EE0E4("%s: could not create matching dictionary", "get_uuid");
    goto LABEL_28;
  }

  CFMutableDictionaryRef v8 = v7;
  CFStringRef v9 = CFStringCreateWithCString(kCFAllocatorDefault, a1, 0x600u);
  if (!v9)
  {
    sub_1001EE0E4("%s: failed to create stringRef", "get_uuid");
    CFRelease(v8);
    goto LABEL_28;
  }

  CFStringRef v10 = v9;
  CFDictionarySetValue(v8, @"ACIPCInterfaceProtocol", v9);
  CFRelease(v10);
  uint64_t v11 = IOServiceAddMatchingNotification( v4,  "IOServiceFirstMatch",  v8,  (IOServiceMatchingCallback)sub_10007E5F4,  Current,  notification);
  if (!v11)
  {
    uint64_t v12 = IOIteratorNext(notification[0]);
    if (v12)
    {
      __int128 v13 = v12;
      uint64_t v14 = 0;
      size_t v15 = 0xFFFF;
    }

    else
    {
      do
      {
        sub_1001EE0E4("ACIPCInterface not found, waiting for it to appear");
        size_t v15 = CFRunLoopRunInMode(kCFRunLoopDefaultMode, 5.0, 0);
        uint64_t v16 = IOIteratorNext(notification[0]);
        uint64_t v14 = v16 == 0;
        if (v16) {
          __int128 v17 = 1;
        }
        else {
          __int128 v17 = v15 == kCFRunLoopRunTimedOut;
        }
      }

      while (!v17);
      __int128 v13 = v16;
    }

    CFRunLoopRemoveSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
    IONotificationPortDestroy(v4);
    IOObjectRelease(notification[0]);
    if (!v14 && (v15 == 0xFFFF || v15 == kCFRunLoopRunStopped))
    {
      __int128 v18 = (const __CFString *)IORegistryEntrySearchCFProperty( v13,  "IOService",  @"ACIPCInterfaceTransport",  kCFAllocatorDefault,  1u);
      if (v18)
      {
        __int128 v19 = v18;
        *(void *)buffer = 0LL;
        __int128 v37 = 0LL;
        if (CFStringGetCString(v18, buffer, 16LL, 0x600u))
        {
          sub_1001EE0E4("ACIPCInterfaceTransport %s\n", buffer);
          if (*(void *)buffer == 0x6B6C6177796B73LL)
          {
            uint64_t v30 = 0;
            while (1)
            {
              uint64_t v31 = (const __CFString *)IORegistryEntrySearchCFProperty( v13,  "IOService",  @"IOSkywalkNexusUUID",  kCFAllocatorDefault,  1u);
              if (v31) {
                break;
              }
              usleep(0x30D40u);
              sub_1001EE0E4("Retry: %d - trying to find ACIPCInterfaceTransport + IOSkywalkNexusUUID\n", v30++);
              if (v30 == 25) {
                goto LABEL_47;
              }
            }

            int v32 = v31;
            if (CFStringGetCString(v31, in, 37LL, 0x600u))
            {
              sub_1001EE0E4("protocol: %s, uuidstr: %s\n", a1, in);
              uuid_parse(in, uu);
            }

            else
            {
              sub_1001EE0E4("protocol: %s, failed to get uuid CString\n", a1);
            }

            sub_1001EE0E4("ACIPCInterfaceTransport + IOSkywalkNexusUUID found\n");
            CFRelease(v32);
          }

          else
          {
            sub_1001EE0E4("ACIPCInterfaceTransport is not skywalk\n");
          }
        }

        else
        {
          sub_1001EE0E4("failed to get cstring property");
        }

void sub_10007E5F4(__CFRunLoop *a1)
{
}

uint64_t sub_10007E620()
{
  return sub_10007E674((uint64_t)&qword_1008D9F80);
}

uint64_t sub_10007E674(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    int v2 = *(_DWORD *)(result + 8);
    if (v2 != -1)
    {
      close(v2);
      *(_DWORD *)(v1 + 8) = -1;
    }

    int v3 = *(_DWORD *)(v1 + 12);
    if (v3 != -1)
    {
      close(v3);
      *(_DWORD *)(v1 + 12) = -1;
    }

    uint64_t result = *(void *)v1;
    if (*(void *)v1)
    {
      uint64_t result = os_channel_destroy();
      *(void *)uint64_t v1 = 0LL;
    }
  }

  return result;
}

uint64_t sub_10007E6D4()
{
  return 0LL;
}

uint64_t sub_10007E6DC()
{
  int v0 = pthread_join((pthread_t)qword_1008F1F58, 0LL);
  if (v0) {
    sub_1001EE0E4("hci thread join failed: %d\n", v0);
  }
  sub_1001EE0E4("hci thread joined\n");
  int v1 = pthread_join((pthread_t)qword_1008F1F60, 0LL);
  if (v1) {
    sub_1001EE0E4("acl thread join failed: %d\n", v1);
  }
  sub_1001EE0E4("acl thread joined\n");
  int v2 = pthread_join((pthread_t)qword_1008F1F68, 0LL);
  if (v2) {
    sub_1001EE0E4("sco thread join failed: %d\n", v2);
  }
  sub_1001EE0E4("sco thread joined\n");
  sub_1000A85A0();
  return 0LL;
}

uint64_t sub_10007E794()
{
  return 2594LL;
}

uint64_t sub_10007E79C()
{
  return 0LL;
}

uint64_t sub_10007E7A4()
{
  return 0LL;
}

void sub_10007E7AC()
{
  byte_1008D9F19 = 1;
}

void sub_10007E7BC()
{
  byte_1008D9F18 = 1;
}

uint64_t sub_10007E7CC(uint64_t a1)
{
  if (a1)
  {
    if (*(void *)(a1 + 8) || (sub_1001EE2A0(), *(void *)(a1 + 8)))
    {
      if (*(void *)(a1 + 16) || (sub_1001EE2A0(), *(void *)(a1 + 16)))
      {
        qword_1008F1F70 = a1;
        v3[2] = 0LL;
        v3[1] = 0x200010004LL;
        v3[0] = off_100881C70;
        return sub_1000B2EEC((uint64_t)v3);
      }
    }
  }

  else
  {
    sub_1001EE2A0();
  }

  return 101LL;
}

uint64_t sub_10007E888(uint64_t a1, uint64_t a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AACP_CLIENT_Connect(addr=%:)", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(0x53u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 136446210;
      *(void *)((char *)&buf + 4) = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&buf, 0xCu);
    }
  }

  if (!a2)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  if (!*(void *)(a2 + 8))
  {
    sub_1001EE2A0();
    if (!*(void *)(a2 + 8)) {
      return 101LL;
    }
  }

  if (!*(void *)(a2 + 16))
  {
    sub_1001EE2A0();
    if (!*(void *)(a2 + 16)) {
      return 101LL;
    }
  }

  uint64_t v12 = (_BYTE *)qword_1008DAFA0;
  if (qword_1008DAFA0 || (uint64_t v12 = sub_1000B1814(0xF8uLL), (qword_1008DAFA0 = (uint64_t)v12) != 0))
  {
    __int128 v13 = (_BYTE *)sub_10007EBB8((unsigned __int8 *)a1);
    if (v13 && *v13)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Aready connected/connection in progress", v14, v15, v16, v17, v18, v19, v20, v61);
        uint64_t v21 = (os_log_s *)sub_100086554(0x53u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 133LL;
    }

    else
    {
      uint64_t v24 = 8LL;
      while (v12[v24] != 1)
      {
        v24 += 48LL;
        if (v24 == 248)
        {
          uint64_t v25 = sub_10007EC44();
          if (v25)
          {
            unsigned int v26 = (_OWORD *)v25;
            *(void *)(v25 + 24) = a2;
            *(void *)(v25 + 8) = 0LL;
            int v27 = *(_DWORD *)a1;
            *(_WORD *)(v25 + 5) = *(_WORD *)(a1 + 4);
            *(_DWORD *)(v25 + 1) = v27;
            *(_BYTE *)uint64_t v25 = 1;
            uint64_t v63 = 0LL;
            *((void *)&buf + 1) = 4LL;
            *(_DWORD *)(v25 + 32) = 0;
            *(void *)&__int128 buf = off_100881C70;
            *(_DWORD *)((char *)&buf + 10) = 131073;
            uint64_t v28 = sub_1000B3CAC(v25 + 1, (uint64_t)&buf);
            uint64_t v22 = v28;
            if ((_DWORD)v28 && (_DWORD)v28 != 133)
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134((uint64_t)"AAP Client Connect failure %u", v29, v30, v31, v32, v33, v34, v35, v22);
                unint64_t v36 = (os_log_s *)sub_100086554(0x53u);
                if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
                  sub_100657858();
                }
              }

              sub_10007EC9C(v26);
            }
          }

          else
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"No free AACP connection slot ", v53, v54, v55, v56, v57, v58, v59, v61);
              v60 = (os_log_s *)sub_100086554(0x53u);
              if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR)) {
                sub_100657858();
              }
            }

            return 104LL;
          }

          return v22;
        }
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Another AACP connection in progress", v37, v38, v39, v40, v41, v42, v43, v61);
        unsigned int v44 = (os_log_s *)sub_100086554(0x53u);
        if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 118LL;
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"init failed..!", v45, v46, v47, v48, v49, v50, v51, v61);
      v52 = (os_log_s *)sub_100086554(0x53u);
      if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 106LL;
  }

uint64_t sub_10007EBB8(unsigned __int8 *a1)
{
  uint64_t v1 = 0LL;
  if (a1 && qword_1008DAFA0)
  {
    uint64_t v2 = 0LL;
    int v5 = *a1;
    int v3 = a1 + 1;
    int v4 = v5;
    for (uint64_t i = qword_1008DAFA0 + 10; ; i += 48LL)
    {
      if (*(unsigned __int8 *)(qword_1008DAFA0 + 48 * v2 + 9) == v4)
      {
        unint64_t v7 = 0LL;
        do
        {
          unint64_t v8 = v7;
          if (v7 == 5) {
            break;
          }
          int v9 = *(unsigned __int8 *)(i + v7);
          int v10 = v3[v7++];
        }

        while (v9 == v10);
        if (v8 >= 5) {
          break;
        }
      }

      if (++v2 == 5) {
        return 0LL;
      }
    }

    return qword_1008DAFA0 + 48 * v2 + 8;
  }

  return v1;
}

uint64_t sub_10007EC44()
{
  int v0 = (char *)qword_1008DAFA0;
  if (!qword_1008DAFA0)
  {
    int v0 = (char *)sub_1000B1814(0xF8uLL);
    qword_1008DAFA0 = (uint64_t)v0;
  }

  uint64_t v1 = 0LL;
  while (*(void *)&v0[v1 + 32])
  {
    v1 += 48LL;
    if (v1 == 240) {
      return 0LL;
    }
  }

  return (uint64_t)&v0[v1 + 8];
}

void sub_10007EC9C(_OWORD *a1)
{
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  if (qword_1008DAFA0)
  {
    uint64_t v1 = 32LL;
    while (!*(void *)(qword_1008DAFA0 + v1))
    {
      v1 += 48LL;
      if (v1 == 272)
      {
        sub_1000B1838((void *)qword_1008DAFA0);
        qword_1008DAFA0 = 0LL;
        return;
      }
    }
  }

uint64_t sub_10007ECEC(unsigned __int8 *a1)
{
  uint64_t v1 = sub_10007EBB8(a1);
  if (v1 && *(_BYTE *)v1 == 2)
  {
    uint64_t result = *(unsigned int *)(v1 + 8);
    if ((_DWORD)result)
    {
      sub_1000B312C(result);
      return 0LL;
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"No active connection", v3, v4, v5, v6, v7, v8, v9, v11);
      int v10 = (os_log_s *)sub_100086554(0x53u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 408LL;
  }

  return result;
}

uint64_t sub_10007ED70(uint64_t a1, int a2, int a3)
{
  uint64_t v6 = sub_10007EBB8((unsigned __int8 *)a1);
  if (!v6) {
    return 122LL;
  }
  uint64_t v7 = (int *)v6;
  if (!*(_DWORD *)(v6 + 8)) {
    return 122LL;
  }
  v30[0] = 0LL;
  if (*(_BYTE *)v6 != 2) {
    return 408LL;
  }
  uint64_t v8 = malloc(0xAuLL);
  uint64_t v29 = v8;
  if (v8)
  {
    *uint64_t v8 = *(_DWORD *)a1;
    *((_WORD *)v8 + 2) = *(_WORD *)(a1 + 4);
    *((_BYTE *)v8 + 6) = a2;
    *((_WORD *)v8 + 4) = a3;
    v30[1] = &v29;
    LOWORD(v30[0]) = 8;
    switch(a2)
    {
      case 2:
        uint64_t v9 = v7 + 10;
        int v10 = sub_10007EFFC;
        goto LABEL_17;
      case 1:
        uint64_t v9 = v7 + 9;
        int v10 = sub_10007EF90;
        goto LABEL_17;
      case 0:
        uint64_t v9 = v7 + 8;
        int v10 = sub_10007EEF8;
LABEL_17:
        sub_1001EE6E8((uint64_t)v10, v30, a3, v9);
        return 0LL;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Invalid type for Request Periodically", v20, v21, v22, v23, v24, v25, v26, v28);
      int v27 = (os_log_s *)sub_100086554(0x53u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    free(v29);
    return 117LL;
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Memory allocation failure for AACP_PERIODICAL_REQUEST_ARG",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  v28);
      uint64_t v19 = (os_log_s *)sub_100086554(0x53u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 106LL;
  }

uint64_t sub_10007EEF8(uint64_t a1)
{
  v8.tv_sec = 0LL;
  *(void *)&v8.tv_usec = 0LL;
  uint64_t v6 = 0LL;
  gettimeofday(&v8, 0LL);
  v5[0] = v8.tv_sec;
  v5[1] = v8.tv_usec;
  uint64_t v7 = 0LL;
  uint64_t v2 = **(void **)(a1 + 8);
  uint64_t result = sub_10007FB34((unsigned __int8 *)v2, (uint64_t)v5);
  if (!(_DWORD)result)
  {
    uint64_t v4 = sub_10007EBB8((unsigned __int8 *)v2);
    return sub_1001EE6E8( (uint64_t)sub_10007EEF8,  (const void **)a1,  *(unsigned __int16 *)(v2 + 8),  (int *)(v4 + 4LL * *(unsigned __int8 *)(v2 + 6) + 32));
  }

  return result;
}

uint64_t sub_10007EF90(uint64_t a1)
{
  uint64_t v2 = **(void **)(a1 + 8);
  uint64_t result = sub_10007F92C((unsigned __int8 *)v2, 0x20u, 0, 0LL);
  if (!(_DWORD)result)
  {
    uint64_t v4 = sub_10007EBB8((unsigned __int8 *)v2);
    return sub_1001EE6E8( (uint64_t)sub_10007EF90,  (const void **)a1,  *(unsigned __int16 *)(v2 + 8),  (int *)(v4 + 4LL * *(unsigned __int8 *)(v2 + 6) + 32));
  }

  return result;
}

uint64_t sub_10007EFFC(uint64_t a1)
{
  *(_DWORD *)&v5[3] = 6;
  *(_DWORD *)uint64_t v5 = 100684801;
  uint64_t v2 = **(void **)(a1 + 8);
  uint64_t result = sub_10007F92C((unsigned __int8 *)v2, 4u, 7u, v5);
  if (!(_DWORD)result)
  {
    uint64_t v4 = sub_10007EBB8((unsigned __int8 *)v2);
    return sub_1001EE6E8( (uint64_t)sub_10007EFFC,  (const void **)a1,  *(unsigned __int16 *)(v2 + 8),  (int *)(v4 + 4LL * *(unsigned __int8 *)(v2 + 6) + 32));
  }

  return result;
}

uint64_t sub_10007F07C(unsigned __int8 *a1, unsigned int a2)
{
  uint64_t v3 = sub_10007EBB8(a1);
  if (!v3 || !*(_DWORD *)(v3 + 8)) {
    return 122LL;
  }
  if (*(_BYTE *)v3 != 2) {
    return 408LL;
  }
  if (a2 > 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Invalid type for Cancel Request Periodically", v6, v7, v8, v9, v10, v11, v12, v14);
      uint64_t v13 = (os_log_s *)sub_100086554(0x53u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 117LL;
  }

  else
  {
    uint64_t v4 = v3 + 4LL * a2;
    sub_1001EEB14(*(unsigned int *)(v4 + 32));
    uint64_t result = 0LL;
    *(_DWORD *)(v4 + 32) = 0;
  }

  return result;
}

uint64_t sub_10007F128(unsigned __int8 *a1, void *a2, size_t a3)
{
  uint64_t v6 = sub_10007EBB8(a1);
  if (v6 && (uint64_t v7 = v6, *(_DWORD *)(v6 + 8)))
  {
    if (*(_BYTE *)v6 == 2)
    {
      uint64_t v35 = 0LL;
      uint64_t v8 = sub_10010EEE0((uint64_t)a1, &v35);
      if ((_DWORD)v8)
      {
        uint64_t v9 = v8;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"BT_AACP_CLIENT_SendData: Unable to retrieve ACL handle, status: %u",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v9);
          uint64_t v17 = (os_log_s *)sub_100086554(0x53u);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        goto LABEL_22;
      }

      if (*(_BYTE *)(v35 + 278) && *(unsigned __int16 *)(v7 + 14) >= 0xA12u)
      {
        if (a3 >= 0xA13)
        {
          sub_1001EE134( (uint64_t)"BT_AACP_CLIENT_SendData: Attempting to send too much data, dataLen: %u, MTU: %u",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  a3);
          uint64_t v25 = (os_log_s *)sub_100086554(0x53u);
          if (!os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
            goto LABEL_20;
          }
          goto LABEL_19;
        }
      }

      else if (a3 >= 0x3F4)
      {
        sub_1001EE134( (uint64_t)"BT_AACP_CLIENT_SendData: Attempting to send too much data, dataLen: %u, MTU: %u",  v26,  v27,  v28,  v29,  v30,  v31,  v32,  a3);
        uint64_t v33 = (os_log_s *)sub_100086554(0x53u);
        if (!os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
          goto LABEL_20;
        }
LABEL_19:
        sub_100657858();
LABEL_20:
        uint64_t v9 = 142LL;
LABEL_22:
        sub_1000B1838(a2);
        return v9;
      }

      uint64_t v9 = sub_1000B444C(*(unsigned int *)(v7 + 8), (char *)a2, a3);
      if ((_DWORD)v9) {
        goto LABEL_22;
      }
    }

    else
    {
      sub_1000B1838(a2);
      return 408LL;
    }
  }

  else
  {
    sub_1000B1838(a2);
    return 122LL;
  }

  return v9;
}

uint64_t sub_10007F2DC(unsigned __int8 *a1, char a2)
{
  uint64_t v4 = sub_1000B17F4(4uLL);
  if (!v4) {
    return 106LL;
  }
  *(_WORD *)uint64_t v4 = 1;
  v4[2] = a2;
  return sub_10007F128(a1, v4, 3uLL);
}

uint64_t sub_10007F330(unsigned __int8 *a1, char a2)
{
  uint64_t v4 = sub_1000B17F4(3uLL);
  if (!v4) {
    return 106LL;
  }
  *(_WORD *)uint64_t v4 = 3;
  v4[2] = a2;
  return sub_10007F128(a1, v4, 3uLL);
}

uint64_t sub_10007F390(unsigned __int8 *a1)
{
  uint64_t v2 = sub_1000B17F4(2uLL);
  if (!v2) {
    return 106LL;
  }
  _WORD *v2 = 5;
  return sub_10007F128(a1, v2, 2uLL);
}

uint64_t sub_10007F3DC(unsigned __int8 *a1)
{
  uint64_t v2 = sub_1000B17F4(2uLL);
  if (!v2) {
    return 106LL;
  }
  _WORD *v2 = 7;
  return sub_10007F128(a1, v2, 2uLL);
}

uint64_t sub_10007F428(unsigned __int8 *a1, char a2, int a3)
{
  uint64_t v6 = (char *)sub_1000B17F4(7uLL);
  if (!v6) {
    return 106LL;
  }
  *(_WORD *)uint64_t v6 = 9;
  v6[2] = a2;
  *(_DWORD *)(v6 + 3) = a3;
  return sub_10007F128(a1, v6, 7uLL);
}

uint64_t sub_10007F4A8(unsigned __int8 *a1)
{
  uint64_t v2 = sub_1000B17F4(2uLL);
  if (!v2) {
    return 106LL;
  }
  _WORD *v2 = 13;
  return sub_10007F128(a1, v2, 2uLL);
}

uint64_t sub_10007F4F4(unsigned __int8 *a1, __int16 a2, __int16 a3)
{
  uint64_t v6 = sub_1000B17F4(6uLL);
  if (!v6) {
    return 106LL;
  }
  *uint64_t v6 = 15;
  v6[1] = a2;
  v6[2] = a3;
  return sub_10007F128(a1, v6, 6uLL);
}

uint64_t sub_10007F56C(unsigned __int8 *a1, uint64_t a2, unsigned int a3, const void *a4)
{
  unsigned __int16 v8 = a3 + 10;
  uint64_t v9 = sub_1000B17F4(a3 + 10);
  if (!v9) {
    return 106LL;
  }
  if (v8 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1910,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  if (!v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1908,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  uint64_t v10 = v9;
  *uint64_t v9 = 16;
  if (v8 <= 7u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1911,  "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE");
  }
  sub_1001F0050((uint64_t)(v9 + 1), a2, 6uLL);
  if (v8 <= 9u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1912,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  v10[4] = a3;
  if (v8 - 10 < a3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1913,  "ByteStream_NumReadBytesAvail(bs) >= (len)");
  }
  memmove(v10 + 5, a4, a3);
  return sub_10007F128(a1, v10, v8);
}

uint64_t sub_10007F6B8(unsigned __int8 *a1, uint64_t a2, unsigned int a3, const void *a4)
{
  size_t v8 = a3 + 9;
  uint64_t v9 = sub_1000B17F4(v8);
  if (!v9) {
    return 106LL;
  }
  uint64_t v10 = v9;
  *uint64_t v9 = 18;
  sub_1001F0050((uint64_t)(v9 + 1), a2, 6uLL);
  v10[8] = a3;
  if (a3) {
    memmove(v10 + 9, a4, a3);
  }
  else {
    size_t v8 = 9LL;
  }
  return sub_10007F128(a1, v10, v8);
}

uint64_t sub_10007F75C(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  int v6 = 6 * a2;
  uint64_t v7 = sub_1000B17F4(6 * a2 + 3);
  if (!v7) {
    return 106LL;
  }
  size_t v8 = v7;
  *uint64_t v7 = 20;
  *((_BYTE *)v7 + 2) = a2;
  if (a2)
  {
    uint64_t v9 = 0LL;
    uint64_t v10 = v6 - 2;
    uint64_t v11 = 6LL * a2;
    do
    {
      if (v9 + 3 >= v10) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1973,  "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE");
      }
      sub_1001F0050((uint64_t)v8 + v9 + 3, a3 + v9, 6uLL);
      v9 += 6LL;
    }

    while (v11 != v9);
    unsigned __int16 v12 = v9 + 3;
  }

  else
  {
    unsigned __int16 v12 = 3;
  }

  return sub_10007F128(a1, v8, v12);
}

uint64_t sub_10007F84C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B17F4(8uLL);
  if (!v4) {
    return 106LL;
  }
  uint64_t v5 = v4;
  _WORD *v4 = 21;
  sub_1001F0050((uint64_t)(v4 + 1), a2, 6uLL);
  return sub_10007F128(a1, v5, 8uLL);
}

uint64_t sub_10007F8B8(unsigned __int8 *a1, uint64_t a2, char a3)
{
  int v6 = sub_1000B17F4(9uLL);
  if (!v6) {
    return 106LL;
  }
  uint64_t v7 = v6;
  *int v6 = 22;
  sub_1001F0050((uint64_t)(v6 + 1), a2, 6uLL);
  v7[8] = a3;
  return sub_10007F128(a1, v7, 9uLL);
}

uint64_t sub_10007F92C(unsigned __int8 *a1, unsigned int a2, unsigned int a3, unsigned __int8 *a4)
{
  uint64_t v8 = sub_10007EBB8(a1);
  if (!v8) {
    return 122LL;
  }
  unsigned int v9 = *(_DWORD *)(v8 + 16);
  if (v9 >= 0x10002) {
    int v10 = 8;
  }
  else {
    int v10 = 6;
  }
  unsigned __int16 v11 = v10 + a3;
  unsigned __int16 v12 = sub_1000B17F4(v10 + a3);
  if (!v12) {
    return 106LL;
  }
  if (v11 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2070,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  if (!v11) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2068,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  uint64_t v13 = v12;
  _WORD *v12 = 23;
  if (v9 > 0x10001)
  {
    if (v11 <= 5u) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2074,  "ByteStream_NumReadBytesAvail(bs) >= 4");
    }
    unsigned int v18 = HIWORD(a2);
    v12[1] = a2;
    unsigned int v14 = 3;
    char v15 = 24;
    uint64_t v16 = 5LL;
    uint64_t v17 = 2LL;
  }

  else
  {
    if (v11 <= 3u) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2072,  "ByteStream_NumReadBytesAvail(bs) >= 2");
    }
    unsigned int v14 = 2;
    char v15 = 8;
    uint64_t v16 = 3LL;
    uint64_t v17 = 1LL;
    LOBYTE(v18) = a2;
  }

  LOBYTE(v12[v17]) = v18;
  *((_BYTE *)v12 + v16) = a2 >> v15;
  if ((int)(v11 - v14 * 2) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2076,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  v12[v14] = a3;
  unsigned int v20 = v14 * 2 + 2;
  if (a3)
  {
    if ((int)(v11 - v20) < (int)a3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2078,  "ByteStream_NumReadBytesAvail(bs) >= (len)");
    }
    memmove((char *)v12 + v20, a4, a3);
    LOWORD(v20) = v20 + a3;
  }

  return sub_10007F128(a1, v13, (unsigned __int16)v20);
}

uint64_t sub_10007FB34(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int16 v4 = *(_WORD *)(a2 + 8) + 12;
  uint64_t v5 = (char *)sub_1000B17F4(*(unsigned __int16 *)(a2 + 8) + 12LL);
  if (!v5) {
    return 106LL;
  }
  if (v4 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2103,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  if (!v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2101,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  int v6 = v5;
  *(_WORD *)uint64_t v5 = 27;
  if (v4 <= 5u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2104,  "ByteStream_NumReadBytesAvail(bs) >= 4");
  }
  *((_WORD *)v5 + 1) = *(_DWORD *)a2;
  v5[4] = *(_WORD *)(a2 + 2);
  void v5[5] = *(_BYTE *)(a2 + 3);
  if (v4 <= 9u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2105,  "ByteStream_NumReadBytesAvail(bs) >= 4");
  }
  *((_WORD *)v5 + 3) = *(_DWORD *)(a2 + 4);
  unsigned __int8 v5[8] = *(_WORD *)(a2 + 6);
  v5[9] = *(_BYTE *)(a2 + 7);
  if (v4 <= 0xBu) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2106,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  v5[10] = *(_BYTE *)(a2 + 8);
  v5[11] = *(_BYTE *)(a2 + 9);
  size_t v7 = *(unsigned __int16 *)(a2 + 8);
  if (v4 - 12 < v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2107,  "ByteStream_NumReadBytesAvail(bs) >= (timeStamp->strLen)");
  }
  memmove(v5 + 12, *(const void **)(a2 + 16), v7);
  return sub_10007F128(a1, v6, (unsigned __int16)(*(_WORD *)(a2 + 8) + 12));
}

uint64_t sub_10007FCD0(unsigned __int8 *a1, char a2, unsigned int a3, const void *a4)
{
  unsigned __int16 v8 = a3 + 5;
  unsigned int v9 = (char *)sub_1000B17F4(a3 + 5);
  if (!v9) {
    return 106LL;
  }
  if (v8 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2156,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  if (!v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2154,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  int v10 = v9;
  *(_WORD *)unsigned int v9 = 26;
  if (v8 <= 2u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2157,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  v9[2] = a2;
  if (v8 <= 4u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2158,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  *(_WORD *)(v9 + 3) = a3;
  if (a3)
  {
    if (v8 - 5 < a3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2160,  "ByteStream_NumReadBytesAvail(bs) >= (len)");
    }
    memmove(v9 + 5, a4, a3);
  }

  else
  {
    unsigned __int16 v8 = 5;
  }

  return sub_10007F128(a1, v10, v8);
}

uint64_t sub_10007FE10(unsigned __int8 *a1, unsigned int a2, char a3)
{
  if (a2 > 0x1F) {
    return 101LL;
  }
  char v5 = a2;
  size_t v7 = sub_1000B17F4(4uLL);
  if (!v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2186,  "stream");
  }
  *(_WORD *)size_t v7 = 30;
  v7[2] = a3;
  v7[3] = (4 * v5) | 0x80;
  return sub_10007F128(a1, v7, 4uLL);
}

uint64_t sub_10007FEA0(unsigned __int8 *a1, unsigned int a2, unsigned int a3, const void *a4)
{
  if (a2 > 0x1F || !a4) {
    return 101LL;
  }
  __int16 v6 = a2;
  unsigned __int16 v8 = a3 + 4;
  unsigned int v9 = (char *)sub_1000B17F4(a3 + 4);
  if (!v9) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2213,  "stream");
  }
  if (v8 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2215,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  if (!v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2214,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  int v10 = v9;
  *(_WORD *)unsigned int v9 = 30;
  if (v8 <= 3u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2216,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  v9[2] = a3;
  void v9[3] = (unsigned __int16)((v6 << 10) | a3) >> 8;
  if (v8 - 4 < a3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2217,  "ByteStream_NumReadBytesAvail(bs) >= (len)");
  }
  memmove(v9 + 4, a4, a3);
  return sub_10007F128(a1, v10, v8);
}

uint64_t sub_10007FFE4(unsigned __int8 *a1, char a2, int a3)
{
  __int16 v6 = (char *)sub_1000B17F4(7uLL);
  if (!v6) {
    return 106LL;
  }
  *(_WORD *)__int16 v6 = 31;
  v6[2] = a2;
  *(_DWORD *)(v6 + 3) = a3;
  return sub_10007F128(a1, v6, 7uLL);
}

uint64_t sub_100080064(unsigned __int8 *a1, unsigned int a2, const void *a3)
{
  if (!a2 || !a3) {
    return 101LL;
  }
  unsigned __int16 v6 = a2 + 4;
  size_t v7 = sub_1000B17F4(a2 + 4);
  if (!v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2262,  "stream");
  }
  if (v6 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2264,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  if (!v6) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2263,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v7;
  *size_t v7 = 32;
  if (v6 <= 3u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2265,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  v7[1] = a2;
  if (v6 - 4 < a2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2266,  "ByteStream_NumReadBytesAvail(bs) >= (len)");
  }
  memmove(v7 + 2, a3, a2);
  return sub_10007F128(a1, v8, v6);
}

uint64_t sub_100080190(unsigned __int8 *a1, char a2, char a3, unsigned int a4, const void *a5)
{
  unsigned __int16 v10 = a4 + 6;
  unsigned __int16 v11 = (char *)sub_1000B17F4(a4 + 6);
  if (!v11) {
    return 106LL;
  }
  if (v10 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2291,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  if (!v10) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2289,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  unsigned __int16 v12 = v11;
  *(_WORD *)unsigned __int16 v11 = 33;
  if (v10 <= 2u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2292,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  v11[2] = a2;
  if (v10 == 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2293,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  v11[3] = a3;
  if (v10 <= 5u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2294,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  *((_WORD *)v11 + 2) = a4;
  if (a4)
  {
    if (v10 - 6 < a4) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2296,  "ByteStream_NumReadBytesAvail(bs) >= (pldLen)");
    }
    memmove(v11 + 6, a5, a4);
  }

  else
  {
    unsigned __int16 v10 = 6;
  }

  return sub_10007F128(a1, v12, v10);
}

uint64_t sub_100080304(unsigned __int8 *a1)
{
  uint64_t v2 = sub_1000B17F4(2uLL);
  if (!v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2314,  "stream");
  }
  _WORD *v2 = 34;
  return sub_10007F128(a1, v2, 2uLL);
}

uint64_t sub_100080358(unsigned __int8 *a1, __int16 a2, unsigned int a3, const void *a4)
{
  unsigned __int16 v8 = a3 + 6;
  unsigned int v9 = sub_1000B17F4(a3 + 6);
  if (!v9) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2338,  "data");
  }
  if (v8 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2341,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  if (!v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2339,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  unsigned __int16 v10 = v9;
  *unsigned int v9 = 36;
  if (v8 <= 3u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2342,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  v9[1] = a2;
  if (v8 <= 5u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2343,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  v9[2] = a3;
  if (a3)
  {
    if (v8 - 6 < a3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2345,  "ByteStream_NumReadBytesAvail(bs) >= (pLen)");
    }
    memmove(v9 + 3, a4, a3);
  }

  else
  {
    unsigned __int16 v8 = 6;
  }

  return sub_10007F128(a1, v10, v8);
}

uint64_t sub_100080498(unsigned __int8 *a1, int a2)
{
  uint64_t result = 101LL;
  if (a1)
  {
    __int16 v4 = a2;
    if (a2)
    {
      char v5 = sub_1000B17F4(4uLL);
      if (v5)
      {
        *char v5 = 48;
        v5[1] = v4;
        return sub_10007F128(a1, v5, 4uLL);
      }

      else
      {
        return 106LL;
      }
    }
  }

  return result;
}

uint64_t sub_100080500(unsigned __int8 *a1, unsigned int a2, uint64_t a3, int a4)
{
  if (!a2) {
    return 101LL;
  }
  uint64_t v5 = a3;
  char v6 = a2;
  uint64_t v8 = a2;
  unsigned int v9 = (__int16 *)(a3 + 2);
  unsigned __int16 v10 = 3;
  uint64_t v11 = a2;
  do
  {
    __int16 v12 = *v9;
    v9 += 8;
    v10 += v12 + 4;
    --v11;
  }

  while (v11);
  if (!a1) {
    return 101LL;
  }
  uint64_t v13 = (char *)sub_1000B17F4(v10);
  if (!v13) {
    return 106LL;
  }
  if (v10 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2415,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  if (!v10) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2412,  "(msgLen) > 0");
  }
  unsigned int v14 = v13;
  if (a4) {
    char v15 = 49;
  }
  else {
    char v15 = 50;
  }
  char *v13 = v15;
  v13[1] = 0;
  if (v10 <= 2u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2416,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  void v13[2] = v6;
  int v16 = 3;
  do
  {
    if ((unsigned __int16)(v10 - 1) <= (unsigned __int16)v16) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2419,  "ByteStream_NumReadBytesAvail(bs) >= 2");
    }
    uint64_t v17 = &v14[(unsigned __int16)v16];
    char *v17 = *(_BYTE *)v5;
    v17[1] = *(_BYTE *)(v5 + 1);
    if ((unsigned __int16)(v10 - 1) <= (unsigned __int16)(v16 + 2)) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2420,  "ByteStream_NumReadBytesAvail(bs) >= 2");
    }
    unsigned int v18 = &v14[(unsigned __int16)(v16 + 2)];
    char *v18 = *(_BYTE *)(v5 + 2);
    v18[1] = *(_BYTE *)(v5 + 3);
    int v19 = v16 + 4;
    size_t v20 = *(unsigned __int16 *)(v5 + 2);
    if (v10 - (unsigned __int16)(v16 + 4) < (int)v20) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2423,  "ByteStream_NumReadBytesAvail(bs) >= (keys[i].keyLength)");
    }
    memmove(&v14[(unsigned __int16)v19], *(const void **)(v5 + 8), v20);
    int v16 = *(unsigned __int16 *)(v5 + 2) + v19;
    v5 += 16LL;
    --v8;
  }

  while (v8);
  return sub_10007F128(a1, v14, (unsigned __int16)v16);
}

uint64_t sub_1000806EC(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  return sub_100080500(a1, a2, a3, 1);
}

uint64_t sub_1000806F4(uint64_t a1, int a2, uint64_t a3, unsigned __int16 *a4)
{
  if (!a3)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  if (!*(void *)(a3 + 8))
  {
    sub_1001EE2A0();
    if (!*(void *)(a3 + 8)) {
      return 101LL;
    }
  }

  if (!*(void *)(a3 + 16))
  {
    sub_1001EE2A0();
    if (!*(void *)(a3 + 16)) {
      return 101LL;
    }
  }

  if (qword_1008DAFA0 || (qword_1008DAFA0 = (uint64_t)sub_1000B1814(0xF8uLL)) != 0)
  {
    uint64_t v8 = (_BYTE *)sub_10007EBB8((unsigned __int8 *)a1);
    if (v8 && *v8)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"BT_AACP_CLIENT_fastConnectCreateChannel Aready connected/connection in progress",  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v56[0]);
        int v16 = (os_log_s *)sub_100086554(0x53u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 133LL;
    }

    else
    {
      uint64_t v19 = sub_10007EC44();
      if (v19)
      {
        uint64_t v20 = v19;
        *(void *)(v19 + 24) = a3;
        *(void *)(v19 + 8) = 0LL;
        uint64_t v21 = (int *)(v19 + 8);
        __int16 v22 = *(_WORD *)(a1 + 4);
        *(_DWORD *)(v19 + 1) = *(_DWORD *)a1;
        uint64_t v23 = v19 + 1;
        *(_WORD *)(v23 + 4) = v22;
        *(_DWORD *)(v23 + 31) = 0;
        if (a2)
        {
          v56[2] = 0LL;
          v56[1] = 0x200010004LL;
          v56[0] = (uint64_t)off_100881C70;
          *(_WORD *)(v20 + 12) = a2;
          uint64_t v17 = sub_1000B4B70(v23, a2, (uint64_t)v56, a4, v21);
          if ((_DWORD)v17)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"BT_AACP_CLIENT_fastConnectCreateChannel: Error creating AAP",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  v56[0]);
              uint64_t v31 = (os_log_s *)sub_100086554(0x53u);
              if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
                sub_1006578C0();
              }
            }
          }

          else
          {
            *(_BYTE *)uint64_t v20 = 2;
          }
        }

        else
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"BT_AACP_CLIENT_fastConnectCreateChannel invalid PSM",  v48,  v49,  v50,  v51,  v52,  v53,  v54,  v56[0]);
            uint64_t v55 = (os_log_s *)sub_100086554(0x53u);
            if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          return 131LL;
        }
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"BT_AACP_CLIENT_fastConnectCreateChannel No free AACP connection slot ",  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v56[0]);
          uint64_t v39 = (os_log_s *)sub_100086554(0x53u);
          if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        return 104LL;
      }
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"init failed..!", v40, v41, v42, v43, v44, v45, v46, v56[0]);
      uint64_t v47 = (os_log_s *)sub_100086554(0x53u);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 106LL;
  }

  return v17;
}

void sub_1000809A8(unsigned __int8 *a1, unsigned int a2)
{
  __int16 v4 = (_OWORD *)sub_10007EBB8(a1);
  if (v4) {
    sub_10007EC9C(v4);
  }
  sub_1000B4F10((uint64_t)a1, a2);
}

uint64_t sub_1000809DC(int a1, int a2, __int16 a3, unsigned __int8 *a4)
{
  uint64_t v7 = sub_10007EBB8(a4);
  if (!v7) {
    return 114LL;
  }
  uint64_t v8 = v7;
  uint64_t result = 0LL;
  *(_WORD *)(v8 + 14) = a3;
  *(_DWORD *)(v8 + 16) = a1 | (a2 << 16);
  return result;
}

uint64_t sub_100080A30(unsigned __int8 *a1, const void *a2, unsigned int a3)
{
  if (!a2) {
    return 101LL;
  }
  size_t v6 = a3 + 2;
  uint64_t v7 = sub_1000B17F4(v6);
  if (!v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2605,  "stream");
  }
  uint64_t v8 = v7;
  *uint64_t v7 = 41;
  memmove(v7 + 1, a2, a3);
  return sub_10007F128(a1, v8, v6);
}

uint64_t sub_100080ACC(unsigned __int8 *a1)
{
  uint64_t v2 = sub_1000B17F4(2uLL);
  if (!v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2629,  "data");
  }
  _WORD *v2 = 38;
  return sub_10007F128(a1, v2, 2uLL);
}

uint64_t sub_100080B20(unsigned __int8 *a1)
{
  uint64_t v2 = sub_1000B17F4(2uLL);
  if (!v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2677,  "data");
  }
  _WORD *v2 = 45;
  return sub_10007F128(a1, v2, 2uLL);
}

uint64_t sub_100080B74(unsigned __int8 *a1, const void *a2, uint64_t a3, char a4)
{
  if (a2 && (_DWORD)a3)
  {
    unsigned __int16 v8 = a3 + 6;
    uint64_t v9 = (char *)sub_1000B17F4((a3 + 6));
    if (!v9) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2706,  "data");
    }
    if (v8 == 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2709,  "ByteStream_NumReadBytesAvail(bs) >= 2");
    }
    if (!v8) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2707,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
    }
    uint64_t v10 = v9;
    *(_WORD *)uint64_t v9 = 44;
    if (v8 <= 2u) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2710,  "ByteStream_NumReadBytesAvail(bs) >= 1");
    }
    v9[2] = a4;
    if (v8 == 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2711,  "ByteStream_NumReadBytesAvail(bs) >= 1");
    }
    void v9[3] = 1;
    if (v8 <= 5u) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2712,  "ByteStream_NumReadBytesAvail(bs) >= 2");
    }
    *((_WORD *)v9 + 2) = a3;
    if (v8 - 6 < a3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2713,  "ByteStream_NumReadBytesAvail(bs) >= (len)");
    }
    memmove(v9 + 6, a2, a3);
    return sub_10007F128(a1, v10, (unsigned __int16)(a3 + 6));
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"BT_AACP_CLIENT_GAPASendChallenge: Invalid data or len (%u)",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  a3);
      uint64_t v19 = (os_log_s *)sub_100086554(0x53u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 101LL;
  }

uint64_t sub_100080D44(unsigned __int8 *a1, const void *a2, unsigned int a3)
{
  if (!a1 || !a2 || !a3) {
    return 101LL;
  }
  unsigned __int16 v6 = a3 + 4;
  uint64_t v7 = sub_1000B17F4(a3 + 4);
  if (!v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2740,  "packet");
  }
  if (v6 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2743,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  if (!v6) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2741,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v7;
  *uint64_t v7 = 68;
  if (v6 <= 3u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2744,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  v7[1] = a3;
  if (v6 - 4 < a3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2745,  "ByteStream_NumReadBytesAvail(bs) >= (len)");
  }
  memmove(v7 + 2, a2, a3);
  return sub_10007F128(a1, v8, (unsigned __int16)(a3 + 4));
}

uint64_t sub_100080E78(unsigned __int8 *a1, const void *a2, unsigned int a3)
{
  if (!a1 || !a2 || !a3) {
    return 101LL;
  }
  unsigned __int16 v6 = a3 + 4;
  uint64_t v7 = sub_1000B17F4(a3 + 4);
  if (!v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2771,  "packet");
  }
  if (v6 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2774,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  if (!v6) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2772,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v7;
  *uint64_t v7 = 75;
  if (v6 <= 3u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2775,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  v7[1] = a3;
  if (v6 - 4 < a3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2776,  "ByteStream_NumReadBytesAvail(bs) >= (len)");
  }
  memmove(v7 + 2, a2, a3);
  return sub_10007F128(a1, v8, (unsigned __int16)(a3 + 4));
}

uint64_t sub_100080FAC(unsigned __int8 *a1)
{
  if (!a1) {
    return 101LL;
  }
  uint64_t v2 = sub_1000B17F4(2uLL);
  if (!v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2796,  "packet");
  }
  _WORD *v2 = 69;
  return sub_10007F128(a1, v2, 2uLL);
}

uint64_t sub_100081014(unsigned __int8 *a1, int a2)
{
  if (!a1) {
    return 101LL;
  }
  __int16 v4 = (char *)sub_1000B17F4(6uLL);
  if (!v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2819,  "packet");
  }
  uint64_t v5 = v4;
  *(_WORD *)__int16 v4 = 72;
  *(_DWORD *)(v4 + 2) = a2;
  uint64_t v6 = sub_10007EBB8(a1);
  if (v6 && (v7 = (_BYTE *)v6, uint64_t v8 = *(unsigned int *)(v6 + 8), (_DWORD)v8))
  {
    if (*v7 == 2)
    {
      uint64_t v9 = sub_1000B46E0(v8, v5, 6uLL);
      if (!(_DWORD)v9) {
        return v9;
      }
    }

    else
    {
      uint64_t v9 = 408LL;
    }
  }

  else
  {
    uint64_t v9 = 122LL;
  }

  sub_1000B1838(v5);
  return v9;
}

uint64_t sub_1000810E8(unsigned __int8 *a1)
{
  if (!a1) {
    return 101LL;
  }
  uint64_t v2 = sub_1000B17F4(2uLL);
  if (!v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2842,  "packet");
  }
  _WORD *v2 = 74;
  return sub_10007F128(a1, v2, 2uLL);
}

uint64_t sub_100081150(unsigned __int8 *a1, unsigned int a2, const void *a3)
{
  if (!a2 || !a1 || !a3) {
    return 101LL;
  }
  unsigned __int16 v6 = a2 + 5;
  uint64_t v7 = sub_1000B17F4(a2 + 5);
  if (!v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2871,  "packet");
  }
  if (v6 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2874,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  if (!v6) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2872,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  uint64_t v8 = v7;
  *uint64_t v7 = 76;
  if (v6 <= 3u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2875,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  v7[1] = a2;
  if (v6 - 4 < a2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2876,  "ByteStream_NumReadBytesAvail(bs) >= (avMsgLen)");
  }
  memmove(v7 + 2, a3, a2);
  return sub_10007F128(a1, v8, (unsigned __int16)(a2 + 4));
}

uint64_t sub_100081284(unsigned __int8 *a1, unsigned int a2, const void *a3)
{
  uint64_t result = 101LL;
  if (a2 && a1 && a3)
  {
    unsigned __int16 v7 = a2 + 4;
    uint64_t v8 = sub_1000B17F4(a2 + 4);
    if (v8)
    {
      if (v7 == 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2910,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      if (!v7) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2908,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
      }
      uint64_t v9 = v8;
      *uint64_t v8 = 79;
      if (v7 <= 3u) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2911,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      v8[1] = a2;
      if (v7 - 4 < a2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2912,  "ByteStream_NumReadBytesAvail(bs) >= (dataLen)");
      }
      memmove(v8 + 2, a3, a2);
      return sub_10007F128(a1, v9, (unsigned __int16)(a2 + 4));
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"BT_AACP_CLIENT_SendUARPData - failed to allocate memory",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v18);
        uint64_t v17 = (os_log_s *)sub_100086554(0x53u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 106LL;
    }
  }

  return result;
}

uint64_t sub_1000813E4(unsigned __int8 *a1, uint64_t a2)
{
  if (!a1) {
    return 101LL;
  }
  __int16 v4 = (char *)sub_1000B17F4(0xAuLL);
  if (!v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2933,  "packet");
  }
  *(_WORD *)__int16 v4 = 77;
  *(void *)(v4 + 2) = a2;
  return sub_10007F128(a1, v4, 0xAuLL);
}

uint64_t sub_10008148C(unsigned __int8 *a1, uint64_t a2)
{
  if (!a1) {
    return 101LL;
  }
  __int16 v4 = (char *)sub_1000B17F4(0xAuLL);
  if (!v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2957,  "packet");
  }
  *(_WORD *)__int16 v4 = 78;
  *(void *)(v4 + 2) = a2;
  return sub_10007F128(a1, v4, 0xAuLL);
}

uint64_t sub_100081534(unsigned __int8 *a1, unsigned int a2, const void *a3)
{
  uint64_t result = 101LL;
  if (a2 && a1 && a3)
  {
    unsigned __int16 v7 = a2 + 4;
    uint64_t v8 = sub_1000B17F4(a2 + 4);
    if (v8)
    {
      if (v7 == 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2994,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      if (!v7) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2992,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
      }
      uint64_t v9 = v8;
      *uint64_t v8 = 82;
      if (v7 <= 3u) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2995,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      v8[1] = a2;
      if (v7 - 4 < a2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  2996,  "ByteStream_NumReadBytesAvail(bs) >= (dataLen)");
      }
      memmove(v8 + 2, a3, a2);
      return sub_10007F128(a1, v9, (unsigned __int16)(a2 + 4));
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"BT_AACP_CLIENT_SendSourceContextMessage - failed to allocate memory",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v18);
        uint64_t v17 = (os_log_s *)sub_100086554(0x53u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 106LL;
    }
  }

  return result;
}

uint64_t sub_100081694(unsigned __int8 *a1, unsigned int a2, const void *a3)
{
  uint64_t result = 101LL;
  if (a2 && a1 && a3)
  {
    unsigned __int16 v7 = a2 + 4;
    uint64_t v8 = sub_1000B17F4(a2 + 4);
    if (v8)
    {
      if (v7 == 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  3030,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      if (!v7) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  3028,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
      }
      uint64_t v9 = v8;
      *uint64_t v8 = 83;
      if (v7 <= 3u) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  3031,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      v8[1] = a2;
      if (v7 - 4 < a2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  3032,  "ByteStream_NumReadBytesAvail(bs) >= (dataLen)");
      }
      memmove(v8 + 2, a3, a2);
      return sub_10007F128(a1, v9, (unsigned __int16)(a2 + 4));
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"BT_AACP_CLIENT_SendPMEConfig - failed to allocate memory",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v18);
        uint64_t v17 = (os_log_s *)sub_100086554(0x53u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 106LL;
    }
  }

  return result;
}

uint64_t sub_1000817F4(unsigned __int8 *a1, unsigned int a2)
{
  __int16 v4 = (_BYTE *)qword_1008DAFA0;
  if (!qword_1008DAFA0)
  {
    __int16 v4 = sub_1000B1814(0xF8uLL);
    qword_1008DAFA0 = (uint64_t)v4;
  }

  if (sub_10007EBB8(a1))
  {
    sub_1001EE134((uint64_t)"address already connected", v5, v6, v7, v8, v9, v10, v11, v33);
    uint64_t v12 = (os_log_s *)sub_100086554(0x53u);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      return sub_1001759FC(a2, 436LL);
    }
    goto LABEL_6;
  }

  if (v4)
  {
    uint64_t v14 = 8LL;
    while (v4[v14] != 1)
    {
      v14 += 48LL;
      if (v14 == 248) {
        goto LABEL_13;
      }
    }

    sub_1001EE134((uint64_t)"Another AACP connection in progress", v17, v18, v19, v20, v21, v22, v23, v33);
    uint64_t v24 = (os_log_s *)sub_100086554(0x53u);
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      return sub_1001759FC(a2, 436LL);
    }
LABEL_6:
    sub_100657858();
    return sub_1001759FC(a2, 436LL);
  }

void sub_10008197C(unsigned __int8 *a1, uint64_t a2, int a3, __int16 a4, int a5, int a6)
{
  uint64_t v11 = sub_10007EBB8(a1);
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AACP: aapConnectCb  uint64_t result = %d", v12, v13, v14, v15, v16, v17, v18, a2);
    uint64_t v19 = (os_log_s *)sub_100086554(0x53u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v33 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (v11)
  {
    int v20 = a6 | (a5 << 16);
    if ((_DWORD)a2) {
      __int16 v21 = 0;
    }
    else {
      __int16 v21 = a4;
    }
    if ((_DWORD)a2) {
      int v22 = 0;
    }
    else {
      int v22 = a3;
    }
    *(_WORD *)(v11 + 14) = v21;
    if ((_DWORD)a2) {
      int v20 = 0;
    }
    *(_DWORD *)(v11 + 8) = v22;
    *(_DWORD *)(v11 + 16) = v20;
    sub_1000846F4(a2, v22);
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"No connection associated with address", v23, v24, v25, v26, v27, v28, v29, v31);
    uint64_t v30 = (os_log_s *)sub_100086554(0x53u);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_100081ADC(uint64_t a1)
{
  uint64_t v2 = qword_1008DAFA0;
  if (qword_1008DAFA0)
  {
    uint64_t v3 = 0LL;
    while (*(_DWORD *)(qword_1008DAFA0 + v3 + 16) != (_DWORD)a1)
    {
      v3 += 48LL;
      if (v3 == 240)
      {
        uint64_t v4 = 8LL;
        while (*(_BYTE *)(qword_1008DAFA0 + v4) != 1)
        {
          v4 += 48LL;
          if (v4 == 248) {
            goto LABEL_8;
          }
        }

        goto LABEL_20;
      }
    }

    int v13 = *(unsigned __int8 *)(qword_1008DAFA0 + v3 + 8);
    if (v13 == 1)
    {
LABEL_20:
      sub_1000846F4(3570LL, a1);
      return;
    }

    if (v13 != 2) {
      return;
    }
    for (uint64_t i = 0LL; i != 240; i += 48LL)
    {
      uint64_t v15 = qword_1008DAFA0 + i;
      if (*(_DWORD *)(qword_1008DAFA0 + i + 16) == (_DWORD)a1)
      {
        (*(void (**)(uint64_t))(*(void *)(v15 + 32) + 16LL))(v15 + 9);
        uint64_t v24 = (_DWORD *)(v15 + 40);
        uint64_t v25 = 4LL;
        do
        {
          uint64_t v26 = *v24;
          if ((_DWORD)v26)
          {
            sub_1001EEB14(v26);
            _DWORD *v24 = 0;
          }

          ++v24;
          --v25;
        }

        while (v25);
        sub_10007EC9C((_OWORD *)(v2 + i + 8));
        return;
      }
    }

    sub_1001EE134((uint64_t)"AAP Handle %d is not valid!\n", v16, v17, v18, v19, v20, v21, v22, a1);
    uint64_t v23 = (os_log_s *)sub_100086554(0x53u);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_18;
  }

void sub_100081C78(uint64_t a1, void *ptr)
{
  if (qword_1008DAFA0)
  {
    uint64_t v4 = 0LL;
    while (*(_DWORD *)(qword_1008DAFA0 + v4 + 16) != (_DWORD)a1)
    {
      v4 += 48LL;
      if (v4 == 240) {
        goto LABEL_5;
      }
    }

    int v13 = *(void (**)(uint64_t, void *))(*(void *)(qword_1008DAFA0 + v4 + 32) + 24LL);
    if (v13) {
      v13(qword_1008DAFA0 + v4 + 9, ptr);
    }
    sub_1000B1838(ptr);
  }

  else
  {
LABEL_5:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"No connection associated with handle (%d)", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x53u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

void sub_100081D40(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v4 = qword_1008DAFA0;
  if (!qword_1008DAFA0)
  {
LABEL_5:
    sub_1001EE134((uint64_t)"No connection associated with handle (%d)", v8, v9, v10, v11, v12, v13, v14, a1);
    uint64_t v15 = (os_log_s *)sub_100086554(0x53u);
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_528:
    sub_100657858();
    return;
  }

  uint64_t v7 = 0LL;
  while (*(_DWORD *)(qword_1008DAFA0 + v7 + 16) != (_DWORD)a1)
  {
    v7 += 48LL;
    if (v7 == 240) {
      goto LABEL_5;
    }
  }

  if (!a2)
  {
    v400 = "data";
    goto LABEL_567;
  }

  if ((_DWORD)a3 == 1)
  {
    uint64_t v16 = 0LL;
LABEL_35:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Unknown AACP opcode: 0x%04x (AAP len %u)", v35, v36, v37, v38, v39, v40, v41, v16);
      uint64_t v42 = (os_log_s *)sub_100086554(0x53u);
      if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
      {
        buf[0] = 136446210;
        *(void *)&buf[1] = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)buf, 0xCu);
      }
    }

    return;
  }

  if (!(_DWORD)a3)
  {
    v400 = "(length) > 0";
LABEL_567:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  402,  v400);
  }

  uint64_t v16 = *a2;
  unsigned int v17 = 1;
  switch(*a2)
  {
    case 2u:
      unsigned int v52 = a3;
      if (a3 < 3)
      {
        uint64_t v54 = a2;
        unsigned int v55 = 0;
        int v53 = 1;
        int v56 = 2;
      }

      else
      {
        int v53 = 0;
        uint64_t v54 = a2;
        unsigned int v55 = *((unsigned __int8 *)a2 + 2);
        int v56 = 3;
      }

      v250 = (char *)sub_1000B1814(5LL * v55);
      if (v250)
      {
        v411 = v250;
        if (!v55)
        {
LABEL_366:
          v255 = *(void (**)(uint64_t, void, _BYTE *))(*(void *)(v4 + v7 + 32) + 32LL);
          if (v255) {
            v255(v4 + v7 + 9, v55, v411);
          }
          goto LABEL_368;
        }

        v251 = v250 + 1;
        uint64_t v252 = v55;
        while (!v53)
        {
          int v53 = 0;
          *((_BYTE *)v251 - 1) = *((_BYTE *)v54 + (unsigned __int16)v56);
          char v253 = 1;
          ++v56;
LABEL_272:
          unsigned int v254 = *((unsigned __int8 *)v251 - 1);
          if (v254 <= 0x4F)
          {
            switch(*((_BYTE *)v251 - 1))
            {
              case 1:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 2:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 3:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_346;
              case 4:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_346;
              case 5:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_346;
              case 6:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_346;
              case 7:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_346;
              case 8:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_346;
              case 9:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0xA:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0xB:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0xC:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0xD:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0xF:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0x10:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0x11:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0x12:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0x13:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0x14:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0x15:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0x16:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0x17:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0x18:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0x20:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              case 0x30:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
LABEL_346:
                int v53 = 0;
                _DWORD *v251 = *(_DWORD *)((char *)v54 + (unsigned __int16)v56);
                v56 += 4;
                break;
              case 0x40:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                goto LABEL_361;
              default:
                goto LABEL_365;
            }

            goto LABEL_365;
          }

          if (*((unsigned __int8 *)v251 - 1) > 0xAFu)
          {
            if (*((unsigned __int8 *)v251 - 1) <= 0xCFu)
            {
              if (v254 == 176)
              {
                if ((v253 & 1) == 0)
                {
LABEL_363:
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
LABEL_364:
                  int v53 = 1;
                  goto LABEL_365;
                }
              }

              else
              {
                if (v254 != 192) {
                  goto LABEL_365;
                }
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
              }
            }

            else
            {
              switch(v254)
              {
                case 0xD0u:
                  if ((v253 & 1) == 0) {
                    goto LABEL_363;
                  }
                  break;
                case 0xE0u:
                  if ((v253 & 1) == 0) {
                    goto LABEL_363;
                  }
                  break;
                case 0xF0u:
                  if ((v253 & 1) == 0) {
                    goto LABEL_363;
                  }
                  break;
                default:
                  goto LABEL_365;
              }
            }
          }

          else if (*((unsigned __int8 *)v251 - 1) <= 0x7Fu)
          {
            if (v254 == 80)
            {
              if ((v253 & 1) == 0) {
                goto LABEL_363;
              }
            }

            else
            {
              if (v254 != 96) {
                goto LABEL_365;
              }
              if ((v253 & 1) == 0) {
                goto LABEL_363;
              }
            }
          }

          else
          {
            switch(v254)
            {
              case 0x80u:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                break;
              case 0x90u:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                break;
              case 0xA0u:
                if ((v253 & 1) == 0) {
                  goto LABEL_363;
                }
                break;
              default:
                goto LABEL_365;
            }
          }

LABEL_361:
          int v53 = 0;
          *(_BYTE *)v251 = *((_BYTE *)v54 + (unsigned __int16)v56++);
LABEL_365:
          v251 = (_DWORD *)((char *)v251 + 5);
          if (!--v252) {
            goto LABEL_366;
          }
        }

        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
LABEL_271:
        char v253 = 0;
        int v53 = 1;
        goto LABEL_272;
      }

      sub_1001EE134( (uint64_t)"AACP_MSG_CAPABILITIES_RESP Could not allocate %d bytes",  v307,  v308,  v309,  v310,  v311,  v312,  v313,  5LL * v55);
      v314 = (os_log_s *)sub_100086554(0x53u);
      if (!os_log_type_enabled(v314, OS_LOG_TYPE_ERROR)) {
        return;
      }
      goto LABEL_528;
    case 4u:
      if (a3 >= 3 && (uint64_t v57 = *((unsigned __int8 *)a2 + 2), *((_BYTE *)a2 + 2)))
      {
        uint64_t v58 = 5 * v57;
        v411 = sub_1000B1814(5 * v57);
        if (v411)
        {
          uint64_t v407 = v57;
          unsigned int v59 = a3;
          uint64_t v60 = 0LL;
          int v61 = 0;
          uint64_t v62 = 3LL;
          while (!v61)
          {
            uint64_t v63 = (unsigned __int16)v62 + 1LL;
            v411[v60] = *((_BYTE *)a2 + (unsigned __int16)v62);
            uint64_t v64 = (unsigned __int16)v62 + 2LL;
            v411[v60 + 1] = *((_BYTE *)a2 + v63);
            uint64_t v63 = v64;
            uint64_t v65 = (unsigned __int16)v62 + 3LL;
            v411[v60 + 2] = *((_BYTE *)a2 + v64);
            uint64_t v63 = v65;
            if (v59 > (unsigned __int16)v65)
            {
              uint64_t v63 = (unsigned __int16)v62 + 4LL;
              v411[v60 + 3] = *((_BYTE *)a2 + v65);
              if (v59 <= (unsigned __int16)v63)
              {
                int v61 = 1;
              }

              else
              {
                int v61 = 0;
                v411[v60 + 4] = *((_BYTE *)a2 + v63);
                uint64_t v63 = (v62 + 5);
              }

              goto LABEL_61;
            }

LABEL_371:
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
          goto LABEL_372;
        }
      }

      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
      goto LABEL_371;
    case 9u:
      if (a3 <= 2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1124,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      if (a3 <= 6) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1125,  "ByteStream_NumReadBytesAvail(bs) >= 4");
      }
      v68 = *(void (**)(uint64_t, void, void))(*(void *)(qword_1008DAFA0 + v7 + 32) + 160LL);
      if (v68) {
        v68(qword_1008DAFA0 + v7 + 9, *((unsigned __int8 *)a2 + 2), *(unsigned int *)((char *)a2 + 3));
      }
      return;
    case 0xBu:
      if (a3 <= 2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  627,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      if ((_DWORD)a3 == 3) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  628,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      uint64_t v69 = *((unsigned __int8 *)a2 + 2);
      v405 = a2;
      uint64_t v70 = *((unsigned __int8 *)a2 + 3);
      if (v70)
      {
        unsigned int v408 = v69;
        v71 = (void **)sub_1000B1814(6 * v70);
        uint64_t v72 = 0LL;
        unsigned __int16 v73 = 4;
        while (1)
        {
          int v74 = v73;
          uint64_t v75 = -6 * v72;
          char v76 = 1;
          while (1)
          {
            if ((v76 & 1) == 0)
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
              goto LABEL_86;
            }

LABEL_422:
            uint64_t v282 = v4 + v7;
            v283 = *(void (**)(uint64_t, uint64_t, size_t, void *))(*(void *)(v4 + v7 + 32) + 120LL);
            if (v283) {
LABEL_434:
            }
              v283(v282 + 9, v93, v97, v99);
LABEL_435:
            sub_1000B1838(v99);
            return;
          }

LABEL_421:
          v99 = sub_1000B1814(0LL);
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
          size_t v97 = 0LL;
          goto LABEL_422;
        }
      }

      else if (a3 >= 4)
      {
        uint64_t v93 = a2[1];
        unsigned int v94 = 2;
        goto LABEL_376;
      }

      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
      uint64_t v93 = 0LL;
      goto LABEL_421;
    case 0x1Cu:
      else {
        uint64_t v95 = *(unsigned int *)(a2 + 1);
      }
      uint64_t v194 = qword_1008DAFA0 + v7;
      v195 = *(void (**)(uint64_t, uint64_t))(*(void *)(qword_1008DAFA0 + v7 + 32) + 152LL);
      if (v195) {
        goto LABEL_384;
      }
      return;
    case 0x1Du:
      if (a3 <= 2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  762,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      uint64_t v93 = *((unsigned __int8 *)a2 + 2);
      if (a3 <= 4)
      {
        v99 = sub_1000B1814(0LL);
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
        size_t v97 = 0LL;
      }

      else
      {
        size_t v97 = *(unsigned __int16 *)((char *)a2 + 3);
        v98 = (char *)sub_1000B1814(v97);
        v99 = v98;
        if ((int)a3 - 5 >= (int)v97 && (_DWORD)v97)
        {
          uint64_t v100 = 0LL;
          do
          {
            v98[v100] = *((_BYTE *)a2 + v100 + 5);
            ++v100;
          }

          while (&v98[v100] < &v98[v97]);
        }
      }

      uint64_t v282 = v4 + v7;
      v283 = *(void (**)(uint64_t, uint64_t, size_t, void *))(*(void *)(v4 + v7 + 32) + 168LL);
      if (v283) {
        goto LABEL_434;
      }
      goto LABEL_435;
    case 0x1Eu:
      if (a3 <= 3)
      {
        sub_1001EE134( (uint64_t)"AACP_MSG_EA_SESSION_DOWNLOAD, invalid PDU",  v261,  v262,  v263,  v264,  v265,  v266,  v267,  v401);
        v268 = (os_log_s *)sub_100086554(0x53u);
        if (!os_log_type_enabled(v268, OS_LOG_TYPE_ERROR)) {
          return;
        }
        goto LABEL_528;
      }

      unsigned int v101 = *((char *)a2 + 3);
      if ((v101 & 0x80000000) != 0)
      {
        sub_1001EE134( (uint64_t)"AACP_MSG_EA_SESSION_DOWNLOAD received unsupported control message",  v355,  v356,  v357,  v358,  v359,  v360,  v361,  v401);
        v362 = (os_log_s *)sub_100086554(0x53u);
        if (!os_log_type_enabled(v362, OS_LOG_TYPE_ERROR)) {
          return;
        }
        goto LABEL_528;
      }

      int v102 = a3;
      size_t v104 = (*((unsigned __int8 *)a2 + 2) | (unsigned __int16)(*((unsigned __int8 *)a2 + 3) << 8)) & 0x3FF;
      v105 = (void **)sub_1000B17F4(v104);
      v71 = v105;
      if (v102 - 4 >= (int)v104)
      {
        if ((_DWORD)v104)
        {
          v363 = (char *)(a2 + 2);
          v364 = (char *)v105;
          do
          {
            char v365 = *v363++;
            *v364++ = v365;
          }

          while (v364 < (char *)v105 + v104);
        }

        v190 = *(void (**)(uint64_t, uint64_t, size_t, void **))(*(void *)(v4 + v7 + 32) + 176LL);
        if (v190)
        {
          uint64_t v192 = (v101 >> 2) & 0x1F;
          uint64_t v191 = v4 + v7 + 9;
          goto LABEL_395;
        }

        goto LABEL_471;
      }

      sub_1001EE134( (uint64_t)"AACP_MSG_EA_SESSION_DOWNLOAD, invalid PDU",  v106,  v107,  v108,  v109,  v110,  v111,  v112,  v401);
      v113 = (os_log_s *)sub_100086554(0x53u);
      if (!os_log_type_enabled(v113, OS_LOG_TYPE_ERROR)) {
        goto LABEL_503;
      }
      goto LABEL_564;
    case 0x20u:
      if (a3 <= 3)
      {
        v71 = (void **)sub_1000B1814(0LL);
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
        size_t v115 = 0LL;
      }

      else
      {
        size_t v115 = a2[1];
        v116 = (void **)sub_1000B1814(v115);
        v71 = v116;
        if ((int)a3 - 4 >= (int)v115 && (_DWORD)v115)
        {
          uint64_t v117 = 0LL;
          do
          {
            *((_BYTE *)v116 + v117) = *((_BYTE *)a2 + v117 + 4);
            ++v117;
          }

          while ((char *)v116 + v117 < (char *)v116 + v115);
        }
      }

      v269 = *(void (**)(uint64_t, size_t, void **))(*(void *)(v4 + v7 + 32) + 184LL);
      if (v269) {
        v269(v4 + v7 + 9, v115, v71);
      }
      goto LABEL_471;
    case 0x21u:
      if (a3 <= 2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  824,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      if ((_DWORD)a3 == 3) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  825,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      uint64_t v118 = *((unsigned __int8 *)a2 + 2);
      uint64_t v119 = *((unsigned __int8 *)a2 + 3);
      if (a3 < 6)
      {
        uint64_t v120 = 0LL;
      }

      else
      {
        uint64_t v120 = a2[2];
        if (a2[2])
        {
          v122 = (char *)sub_1000B1814(a2[2]);
          v123 = v122;
          if ((int)a3 - 6 >= (int)v120)
          {
            uint64_t v124 = 0LL;
            do
            {
              v122[v124] = *((_BYTE *)a2 + v124 + 6);
              ++v124;
            }

            while (&v122[v124] < &v122[v120]);
          }

LABEL_438:
          v286 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(*(void *)(v4 + v7 + 32) + 192LL);
          if (v286) {
            v286(v4 + v7 + 9, v118, v119, v120, v123);
          }
          if (v123) {
            sub_1000B1838(v123);
          }
          return;
        }
      }

      v123 = 0LL;
      goto LABEL_438;
    case 0x23u:
      memset((char *)&buf[2] + 2, 0, 20);
      if (a3 <= 2)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
      }

      else
      {
        int v125 = a3;
        unsigned int v126 = *((unsigned __int8 *)a2 + 2);
        LOBYTE(buf[0]) = *((_BYTE *)a2 + 2);
        if (a3 > 4)
        {
          *(_WORD *)((char *)buf + 1) = *(unsigned __int16 *)((char *)a2 + 3);
          if (a3 > 8)
          {
            *(_DWORD *)((char *)buf + 3) = *(_DWORD *)((char *)a2 + 5);
            if (a3 > 0xA)
            {
              *(_WORD *)((char *)&buf[1] + 3) = *(unsigned __int16 *)((char *)a2 + 9);
              if ((_DWORD)a3 != 11)
              {
                BYTE1(buf[2]) = *((_BYTE *)a2 + 11);
                if (a3 <= 0xD)
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
                  uint64_t v127 = 0LL;
                }

                else
                {
                  uint64_t v127 = a2[6];
                  *(void *)((char *)&buf[2] + 2) = v127;
                  if ((_DWORD)a3 != 14)
                  {
                    uint64_t v128 = *((unsigned __int8 *)a2 + 14);
                    uint64_t v130 = v128 + 1;
                    v131 = (void **)sub_1000B1814(v128 + 1);
                    v71 = v131;
                    *(void *)((char *)&buf[5] + 2) = v131;
                    if (v125 - 15 > (int)v128)
                    {
                      uint64_t v132 = 0LL;
                      do
                      {
                        *((_BYTE *)v131 + v132) = *((_BYTE *)a2 + v132 + 15);
                        ++v132;
                      }

                      while ((char *)v131 + v132 < (char *)v131 + v130);
                      if (v126 <= 1)
                      {
LABEL_462:
                        v306 = *(void (**)(uint64_t, _DWORD *))(*(void *)(v4 + v7 + 32) + 200LL);
                        if (v306)
                        {
                          v306(v4 + v7 + 9, buf);
                          v71 = *(void ***)((char *)&buf[5] + 2);
                        }

LABEL_502:
                        if (!v71) {
                          return;
                        }
LABEL_503:
                        v305 = v71;
                        goto LABEL_504;
                      }

                      uint64_t v133 = v130 + 15LL;
                      if (v125 - (int)v133 > 1)
                      {
                        unint64_t v134 = ((unint64_t)*((unsigned __int8 *)a2 + v133) << 16) | ((unint64_t)*((unsigned __int8 *)a2 + v133 + 1) << 24);
                        if (v125 - ((int)v128 + 18) > 3)
                        {
                          uint64_t v135 = v130 + 21LL;
                          *(void *)((char *)&buf[2] + 2) = v127 | ((unint64_t)*(unsigned int *)((char *)a2 + v130 + 17) << 32) | v134;
                          goto LABEL_462;
                        }

                        goto LABEL_461;
                      }

LABEL_460:
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/a"
                                             "acp/aacp_client.c");
                      unint64_t v134 = 0LL;
LABEL_461:
                      *(void *)((char *)&buf[2] + 2) = v127 | v134;
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/a"
                                             "acp/aacp_client.c");
                      goto LABEL_462;
                    }

LABEL_458:
                    if (v126 <= 1) {
                      goto LABEL_462;
                    }
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
                    goto LABEL_460;
                  }
                }

                v71 = (void **)sub_1000B1814(1uLL);
                *(void *)((char *)&buf[5] + 2) = v71;
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
                goto LABEL_458;
              }

LABEL_589:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  854,  "ByteStream_NumReadBytesAvail(bs) >= 1");
            }

LABEL_588:
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
            goto LABEL_589;
          }

LABEL_587:
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
          goto LABEL_588;
        }
      }

      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
      goto LABEL_587;
    case 0x24u:
      if (a3 <= 3)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
        unsigned __int16 v136 = 0;
      }

      else
      {
        unsigned __int16 v136 = a2[1];
        if (a3 > 5)
        {
          int v137 = a3;
          size_t v104 = a2[2];
          v139 = (void **)sub_1000B1814(v104);
          v71 = v139;
          if (v137 - 6 >= (int)v104 && (_DWORD)v104)
          {
            uint64_t v140 = 0LL;
            do
            {
              *((_BYTE *)v139 + v140) = *((_BYTE *)a2 + v140 + 6);
              ++v140;
            }

            while ((char *)v139 + v140 < (char *)v139 + v104);
          }

LABEL_393:
          v190 = *(void (**)(uint64_t, uint64_t, size_t, void **))(*(void *)(v4 + v7 + 32) + 208LL);
          if (v190)
          {
            uint64_t v191 = v4 + v7 + 9;
            uint64_t v192 = v136;
LABEL_395:
            size_t v193 = v104;
LABEL_396:
            v190(v191, v192, v193, v71);
          }

LABEL_471:
          sub_1000B1838(v71);
          return;
        }
      }

      v71 = (void **)sub_1000B1814(0LL);
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
      size_t v104 = 0LL;
      goto LABEL_393;
    case 0x27u:
      if (a3 <= 2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  901,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      if ((_DWORD)a3 == 3) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  902,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      if (a3 <= 4) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  903,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      if ((_DWORD)a3 == 5) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  904,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      unsigned int v141 = *((unsigned __int8 *)a2 + 2);
      uint64_t v142 = *((unsigned __int8 *)a2 + 3);
      unsigned int v143 = *((unsigned __int8 *)a2 + 4);
      uint64_t v144 = *((unsigned __int8 *)a2 + 5);
      v145 = (void **)sub_1000B1814(v144 + 1);
      v71 = v145;
      if ((int)a3 - 6 < (int)v144)
      {
        sub_1001EE134( (uint64_t)"AACP_MSG_GET_CERTIFICATES_RESP error reading serialNumber",  v146,  v147,  v148,  v149,  v150,  v151,  v152,  v401);
        v153 = (os_log_s *)sub_100086554(0x53u);
        if (!os_log_type_enabled(v153, OS_LOG_TYPE_ERROR)) {
          goto LABEL_503;
        }
        goto LABEL_564;
      }

      if ((_DWORD)v144)
      {
        v291 = (char *)(a2 + 3);
        v292 = (char *)v145;
        do
        {
          char v293 = *v291++;
          *v292++ = v293;
        }

        while (v292 < (char *)v145 + v144);
      }

      unsigned int v409 = v143;
      if ((int)a3 - ((int)v144 + 6) <= 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  915,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      v294 = a2;
      size_t v295 = *(unsigned __int16 *)((char *)a2 + v144 + 6);
      v296 = (char *)sub_1000B1814(v295);
      v99 = v296;
      if ((int)a3 - ((int)v144 + 8) < (int)v295)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"AACP_MSG_GET_CERTIFICATES_RESP error reading certificateData",  v297,  v298,  v299,  v300,  v301,  v302,  v303,  v401);
          v304 = (os_log_s *)sub_100086554(0x53u);
          if (os_log_type_enabled(v304, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        sub_1000B1838(v71);
        v305 = (void **)v99;
        goto LABEL_504;
      }

      if ((_DWORD)v295)
      {
        v339 = (char *)v294 + v144 + 8;
        v340 = v296;
        do
        {
          char v341 = *v339++;
          *v340++ = v341;
        }

        while (v340 < &v296[v295]);
      }

      v342 = *(void (**)(uint64_t, void, uint64_t, void, uint64_t, void **, size_t, char *))(*(void *)(v4 + v7 + 32) + 216LL);
      if (v342) {
        v342(v4 + v7 + 9, v141, v142, v409, v144, v71, v295, v296);
      }
      sub_1000B1838(v71);
      goto LABEL_435;
    case 0x28u:
      if (a3 <= 2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  939,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      if (a3 <= 4) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  940,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      uint64_t v154 = *((unsigned __int8 *)a2 + 2);
      size_t v156 = *(unsigned __int16 *)((char *)a2 + 3);
      v157 = (void **)sub_1000B1814(v156);
      v71 = v157;
      if ((int)a3 - 5 >= (int)v156)
      {
        if ((_DWORD)v156)
        {
          v287 = (char *)a2 + 5;
          v288 = (char *)v157;
          do
          {
            char v289 = *v287++;
            *v288++ = v289;
          }

          while (v288 < (char *)v157 + v156);
        }

        v290 = *(void (**)(uint64_t, void **, size_t, uint64_t))(*(void *)(v4 + v7 + 32) + 224LL);
        if (v290) {
          v290(v4 + v7 + 9, v157, v156, v154);
        }
        goto LABEL_471;
      }

      sub_1001EE134((uint64_t)"AACP_MSG_GYRO_INFO, invalid gyroInfoData", v158, v159, v160, v161, v162, v163, v164, v401);
      v165 = (os_log_s *)sub_100086554(0x53u);
      if (!os_log_type_enabled(v165, OS_LOG_TYPE_ERROR)) {
        goto LABEL_503;
      }
      goto LABEL_564;
    case 0x2Bu:
      if (a3 <= 2)
      {
        v168 = a2;
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
        uint64_t v166 = 0LL;
        uint64_t v270 = 2LL;
      }

      else
      {
        uint64_t v166 = *((unsigned __int8 *)a2 + 2);
        if (a3 > 4)
        {
          int v167 = a3;
          v168 = a2;
          uint64_t v169 = *(unsigned __int16 *)((char *)a2 + 3);
          if (a3 > 8)
          {
            uint64_t v170 = *(unsigned int *)((char *)a2 + 5);
            if (a3 > 0xC)
            {
              v170 |= (unint64_t)*(unsigned int *)((char *)a2 + 9) << 32;
              v171 = (char *)calloc(*(unsigned __int16 *)((char *)a2 + 3), 1uLL);
              v172 = (char *)v168 + 13;
              v173 = &v171[v169];
              int v174 = v167 - 13;
              goto LABEL_487;
            }

            uint64_t v270 = 9LL;
LABEL_486:
            v171 = (char *)calloc(v169, 1uLL);
            v172 = (char *)v168 + v270;
            v173 = &v171[v169];
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
            int v174 = 0;
LABEL_487:
            if (v174 >= (int)v169 && (_DWORD)v169)
            {
              v318 = v171;
              do
              {
                char v319 = *v172++;
                *v318++ = v319;
              }

              while (v318 < v173);
            }

            v320 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(void *)(v4 + v7 + 32) + 232LL);
            if (v320) {
              v320(v4 + v7 + 9, v166, v170, v169, v171);
            }
            free(v171);
            return;
          }

          uint64_t v270 = 5LL;
LABEL_485:
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
          uint64_t v170 = 0LL;
          goto LABEL_486;
        }

        v168 = a2;
        uint64_t v270 = 3LL;
      }

      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
      uint64_t v169 = 0LL;
      goto LABEL_485;
    case 0x2Cu:
      if (a3 <= 5)
      {
        sub_1001EE134((uint64_t)"Invalid length=%d for GAPA message", v175, v176, v177, v178, v179, v180, v181, a3);
        v182 = (os_log_s *)sub_100086554(0x53u);
        if (!os_log_type_enabled(v182, OS_LOG_TYPE_ERROR)) {
          return;
        }
        goto LABEL_528;
      }

      if ((a3 & 0xFFFE) == 4)
      {
        v71 = (void **)sub_1000B1814(0LL);
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
LABEL_495:
        sub_1001EE134((uint64_t)"AACP_MSG_GAPA, invalid gapaData", v327, v328, v329, v330, v331, v332, v333, v401);
        v334 = (os_log_s *)sub_100086554(0x53u);
        if (!os_log_type_enabled(v334, OS_LOG_TYPE_ERROR)) {
          goto LABEL_503;
        }
        goto LABEL_564;
      }

      uint64_t v321 = *((unsigned __int8 *)a2 + 2);
      uint64_t v323 = *((unsigned __int8 *)a2 + 3);
      size_t v325 = a2[2];
      v326 = (void **)sub_1000B1814(v325);
      v71 = v326;
      if ((_DWORD)v325)
      {
        v369 = (char *)(a2 + 3);
        v370 = (char *)v326;
        do
        {
          char v371 = *v369++;
          *v370++ = v371;
        }

        while (v370 < (char *)v326 + v325);
        unsigned __int16 v372 = v325 + 6;
        unsigned int v373 = v325 + 7;
      }

      else
      {
        unsigned int v373 = 7;
        unsigned __int16 v372 = 6;
      }

      if ((_DWORD)v321 != 2) {
        goto LABEL_558;
      }
      if (v373 <= a3)
      {
        if (a3 > v372)
        {
          uint64_t v390 = *((unsigned __int8 *)a2 + v372);
LABEL_559:
          if ((_DWORD)v323 == 2)
          {
            v391 = *(void (**)(uint64_t, void **, size_t, uint64_t, uint64_t))(*(void *)(v4 + v7 + 32) + 248LL);
            if (v391) {
              v391(v4 + v7 + 9, v71, v325, v321, v390);
            }
            goto LABEL_503;
          }

          sub_1001EE134((uint64_t)"Unknown GAPA message type %d", v392, v393, v394, v395, v396, v397, v398, v323);
          v399 = (os_log_s *)sub_100086554(0x53u);
          if (!os_log_type_enabled(v399, OS_LOG_TYPE_ERROR)) {
            goto LABEL_503;
          }
LABEL_564:
          sub_100657858();
          goto LABEL_503;
        }
      }

      else if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Invalid length=%d for GAPA version=%d message",  v382,  v383,  v384,  v385,  v386,  v387,  v388,  a3);
        v389 = (os_log_s *)sub_100086554(0x53u);
        if (os_log_type_enabled(v389, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

LABEL_558:
      uint64_t v390 = 0LL;
      goto LABEL_559;
    case 0x2Eu:
      if (a3 <= 2)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
      }

      else if ((_DWORD)a3 != 3)
      {
        if (a3 > 4)
        {
          uint64_t v183 = *((unsigned __int8 *)a2 + 3);
          size_t v185 = *((unsigned __int8 *)a2 + 4);
          v186 = (void **)sub_1000B1814(8 * v185);
          v71 = v186;
          if ((int)a3 - 5 >= 8 * (int)v185)
          {
            if ((_DWORD)v185)
            {
              v187 = (char *)a2 + 5;
              v188 = (char *)v186;
              do
              {
                char v189 = *v187++;
                *v188++ = v189;
              }

              while (v188 < (char *)&v186[v185]);
            }

            v190 = *(void (**)(uint64_t, uint64_t, size_t, void **))(*(void *)(v4 + v7 + 32) + 240LL);
            if (v190)
            {
              uint64_t v191 = v4 + v7 + 9;
              uint64_t v192 = v183;
              size_t v193 = v185;
              goto LABEL_396;
            }

            goto LABEL_471;
          }

LABEL_403:
          sub_1001EE134( (uint64_t)"AACP_MSG_TIPI_TABLE, error initializing tipiTable",  v271,  v272,  v273,  v274,  v275,  v276,  v277,  v401);
          v278 = (os_log_s *)sub_100086554(0x53u);
          if (!os_log_type_enabled(v278, OS_LOG_TYPE_ERROR)) {
            goto LABEL_503;
          }
          goto LABEL_564;
        }

LABEL_402:
        v71 = (void **)sub_1000B1814(0LL);
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
        goto LABEL_403;
      }

      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
      goto LABEL_402;
    case 0x30u:
      if (a3 <= 3) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1020,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      uint64_t v194 = qword_1008DAFA0 + v7;
      v195 = *(void (**)(uint64_t, uint64_t))(*(void *)(qword_1008DAFA0 + v7 + 32) + 128LL);
      if (!v195) {
        return;
      }
      uint64_t v95 = a2[1];
LABEL_384:
      v195(v194 + 9, v95);
      return;
    case 0x31u:
    case 0x32u:
      if (a3 <= 2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1031,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      uint64_t v18 = *((unsigned __int8 *)a2 + 2);
      uint64_t v19 = (void **)sub_1000B1814(16 * v18);
      if (!v18)
      {
        uint64_t v43 = *(void (**)(uint64_t, uint64_t, void **, BOOL))(*(void *)(v4 + v7 + 32) + 136LL);
        if (!v43) {
          goto LABEL_482;
        }
        goto LABEL_478;
      }

      int v402 = v16;
      int v403 = a3;
      v404 = a2;
      uint64_t v20 = 0LL;
      int v21 = 0;
      int v406 = a3 - 1;
      int v22 = 3;
      break;
    case 0x40u:
      if (a3 <= 3) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1112,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      if (a3 <= 5) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1113,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      if (a3 <= 7) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1114,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      v196 = *(void (**)(uint64_t, void, void, void))(*(void *)(qword_1008DAFA0 + v7 + 32) + 144LL);
      if (v196 && a2[1]) {
        v196(qword_1008DAFA0 + v7 + 9, a2[1], a2[2], a2[3]);
      }
      return;
    case 0x47u:
      sub_1000AF5BC((unsigned __int8 *)(qword_1008DAFA0 + v7 + 9));
      return;
    case 0x49u:
      sub_1000AFBF0(qword_1008DAFA0 + v7 + 9);
      return;
    case 0x4Bu:
      if (!*(void *)(*(void *)(qword_1008DAFA0 + v7 + 32) + 256LL)) {
        return;
      }
      if (a3 >= 4)
      {
        uint64_t v197 = a2[1];
        if (v197 > 1)
        {
          int v366 = a3;
          v227 = (char *)malloc(a2[1]);
          if (!v227) {
            sub_1001EE2A0();
          }
          if (v366 - 4 >= (int)v197)
          {
            v368 = &v227[v197];
            if (&v227[v197] <= v227 + 1) {
              v368 = v227 + 1;
            }
            memcpy(v227, a2 + 2, v368 - v227);
          }

          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v4 + v7 + 32) + 256LL))( v4 + v7 + 9,  v227,  v197);
          goto LABEL_419;
        }
      }

      sub_1001EE134( (uint64_t)"CD message data length cannot be less than 2 bytes",  v198,  v199,  v200,  v201,  v202,  v203,  v204,  v401);
      v205 = (os_log_s *)sub_100086554(0x53u);
      if (!os_log_type_enabled(v205, OS_LOG_TYPE_ERROR)) {
        return;
      }
      goto LABEL_528;
    case 0x4Cu:
      if (a3 <= 3)
      {
        v209 = malloc(0LL);
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
        size_t v207 = 0LL;
      }

      else
      {
        size_t v207 = a2[1];
        v208 = (char *)malloc(v207);
        v209 = v208;
        if ((int)a3 - 4 >= (int)v207 && (_DWORD)v207)
        {
          v210 = &v208[v207];
          if (&v208[v207] <= v208 + 1) {
            v210 = v208 + 1;
          }
          memcpy(v208, a2 + 2, v210 - v208);
        }
      }

      uint64_t v279 = v4 + v7;
      v280 = *(void (**)(uint64_t, size_t, void *))(*(void *)(v4 + v7 + 32) + 264LL);
      if (!v280) {
        goto LABEL_476;
      }
      goto LABEL_475;
    case 0x4Eu:
      v211 = *(void (**)(uint64_t, void))(*(void *)(qword_1008DAFA0 + v7 + 32) + 272LL);
      if (!v211) {
        return;
      }
      if (a3 < 0xA)
      {
        v211(qword_1008DAFA0 + v7 + 9, 0LL);
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
      }

      else
      {
        v211(qword_1008DAFA0 + v7 + 9, *(void *)(a2 + 1));
        unsigned int v17 = 5;
LABEL_228:
        if ((int)(a3 - v17 * 2) > 1)
        {
          int v212 = a3;
          v213 = a2;
          size_t v207 = a2[v17];
          unsigned int v214 = v17 * 2 + 2;
          v215 = (char *)malloc(v207);
          v209 = v215;
          if ((int)(v212 - v214) >= (int)v207 && (_DWORD)v207)
          {
            v216 = &v215[v207];
            if (&v215[v207] <= v215 + 1) {
              v216 = v215 + 1;
            }
            memcpy(v215, (char *)v213 + v214, v216 - v215);
          }

LABEL_474:
          uint64_t v279 = v4 + v7;
          v280 = *(void (**)(uint64_t, size_t, void *))(*(void *)(v4 + v7 + 32) + 280LL);
          if (v280) {
LABEL_475:
          }
            v280(v279 + 9, v207, v209);
LABEL_476:
          free(v209);
          return;
        }
      }

      v209 = malloc(0LL);
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
      size_t v207 = 0LL;
      goto LABEL_474;
    case 0x4Fu:
      goto LABEL_228;
    case 0x50u:
      if (a3 <= 2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c",  1231,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      uint64_t v229 = *((unsigned __int8 *)a2 + 2);
      switch(*((_BYTE *)a2 + 2))
      {
        case 0:
          v351 = malloc(9uLL);
          v232 = v351;
          if ((a3 - 12) <= 0xFFFFFFF6)
          {
            void *v351 = *(void *)((char *)a2 + 3);
            *((_BYTE *)v351 + 8) = *((_BYTE *)a2 + 11);
          }

          break;
        case 1:
          v352 = (char *)malloc(0xBuLL);
          v232 = v352;
          if ((a3 - 14) <= 0xFFFFFFF4)
          {
            *(void *)v352 = *(void *)((char *)a2 + 3);
            *(_DWORD *)(v352 + 7) = *(_DWORD *)(a2 + 5);
          }

          break;
        case 2:
        case 3:
          v231 = malloc(8uLL);
          v232 = v231;
          break;
        default:
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"PerfStats: subtype %d not found", v343, v344, v345, v346, v347, v348, v349, v229);
            v350 = (os_log_s *)sub_100086554(0x53u);
            if (os_log_type_enabled(v350, OS_LOG_TYPE_DEFAULT))
            {
              buf[0] = 136446210;
              *(void *)&buf[1] = sub_1001EDDCC();
              _os_log_impl((void *)&_mh_execute_header, v350, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)buf, 0xCu);
            }
          }

          v232 = 0LL;
          break;
      }

      v353 = *(void (**)(uint64_t, uint64_t, void *))(*(void *)(v4 + v7 + 32) + 288LL);
      if (v353) {
        v353(v4 + v7 + 9, v229, v232);
      }
      free(v232);
      return;
    case 0x52u:
      if (a3 <= 3)
      {
        v209 = malloc(0LL);
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
        size_t v207 = 0LL;
      }

      else
      {
        size_t v207 = a2[1];
        v218 = (char *)malloc(v207);
        v209 = v218;
        if ((int)a3 - 4 >= (int)v207 && (_DWORD)v207)
        {
          v219 = &v218[v207];
          if (&v218[v207] <= v218 + 1) {
            v219 = v218 + 1;
          }
          memcpy(v218, a2 + 2, v219 - v218);
        }
      }

      uint64_t v279 = v4 + v7;
      v280 = *(void (**)(uint64_t, size_t, void *))(*(void *)(v4 + v7 + 32) + 296LL);
      if (!v280) {
        goto LABEL_476;
      }
      goto LABEL_475;
    case 0x53u:
      if (a3 <= 3)
      {
        v209 = malloc(0LL);
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
        size_t v207 = 0LL;
      }

      else
      {
        size_t v207 = a2[1];
        v221 = (char *)malloc(v207);
        v209 = v221;
        if ((int)a3 - 4 >= (int)v207 && (_DWORD)v207)
        {
          v222 = &v221[v207];
          if (&v221[v207] <= v221 + 1) {
            v222 = v221 + 1;
          }
          memcpy(v221, a2 + 2, v222 - v221);
        }
      }

      uint64_t v279 = v4 + v7;
      v280 = *(void (**)(uint64_t, size_t, void *))(*(void *)(v4 + v7 + 32) + 304LL);
      if (!v280) {
        goto LABEL_476;
      }
      goto LABEL_475;
    case 0x55u:
      if (a3 <= 2)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
        uint64_t v223 = 0LL;
      }

      else
      {
        uint64_t v223 = *((unsigned __int8 *)a2 + 2);
        if (a3 > 4)
        {
          size_t v225 = *(unsigned __int16 *)((char *)a2 + 3);
          v226 = (char *)malloc(v225);
          v227 = v226;
          if ((int)a3 - 5 >= (int)v225 && (_DWORD)v225)
          {
            v228 = &v226[v225];
            if (&v226[v225] <= v226 + 1) {
              v228 = v226 + 1;
            }
            memcpy(v226, (char *)a2 + 5, v228 - v226);
          }

LABEL_417:
          v281 = *(void (**)(uint64_t, uint64_t, size_t, char *))(*(void *)(v4 + v7 + 32) + 312LL);
          if (v281) {
            v281(v4 + v7 + 9, v223, v225, v227);
          }
LABEL_419:
          free(v227);
          return;
        }
      }

      v227 = (char *)malloc(0LL);
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
      size_t v225 = 0LL;
      goto LABEL_417;
    default:
      goto LABEL_35;
  }

  do
  {
    if (v21)
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
    }

    else if (v406 > (unsigned __int16)v22)
    {
      LOWORD(v19[2 * v20]) = *(unsigned __int16 *)((char *)v404 + (unsigned __int16)v22);
      if (v406 <= (unsigned __int16)(v22 + 2))
      {
        char v23 = 0;
        int v410 = 1;
        v22 += 2;
      }

      else
      {
        int v410 = 0;
        WORD1(v19[2 * v20]) = *(unsigned __int16 *)((char *)v404 + (unsigned __int16)(v22 + 2));
        v22 += 4;
        char v23 = 1;
      }

      goto LABEL_21;
    }

    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
    char v23 = 0;
    int v410 = 1;
LABEL_21:
    uint64_t v24 = v19;
    uint64_t v25 = (char *)&v19[2 * v20];
    unsigned int v27 = *((unsigned __int16 *)v25 + 1);
    uint64_t v26 = (unsigned __int16 *)(v25 + 2);
    uint64_t v28 = sub_1000B1814(v27);
    *(void *)(v26 + 3) = v28;
    uint64_t v29 = *v26;
    if ((v23 & 1) != 0)
    {
      int v30 = v403 - (unsigned __int16)v22;
    }

    else
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aacp/aacp_client.c");
      int v30 = 0;
    }

    int v31 = *v26;
    if (v30 >= v31)
    {
      if ((_DWORD)v29)
      {
        uint64_t v32 = (char *)v404 + (unsigned __int16)v22;
        uint64_t v33 = &v28[v29];
        do
        {
          char v34 = *v32++;
          *v28++ = v34;
        }

        while (v28 < v33);
        int v31 = *v26;
      }

      v22 += v31;
      int v21 = v410;
    }

    else
    {
      int v21 = 1;
    }

    ++v20;
    uint64_t v19 = v24;
  }

  while (v20 != v18);
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, void **, BOOL))(*(void *)(v4 + v7 + 32) + 136LL);
  if (!v43) {
    goto LABEL_479;
  }
  if (!v21)
  {
    LODWORD(v16) = v402;
LABEL_478:
    v43(v4 + v7 + 9, v18, v19, (_DWORD)v16 != 49);
    goto LABEL_479;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AACP_MSG_DELETE_KEYS, error getting keys", v44, v45, v46, v47, v48, v49, v50, v401);
    uint64_t v51 = (os_log_s *)sub_100086554(0x53u);
    if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

LABEL_479:
  if ((_DWORD)v18)
  {
    v316 = v19 + 1;
    do
    {
      v317 = *v316;
      v316 += 2;
      sub_1000B1838(v317);
      --v18;
    }

    while (v18);
  }

LABEL_482:
  v305 = v19;
LABEL_504:
  sub_1000B1838(v305);
}

      ++v274;
      v273 += 1668LL;
      uint64_t v277 = (void **)((char *)v277 + 1650);
      v278 += 1650;
    }

    while (1668LL * a4 != v273);
  }

  for (k = 0LL; k != -120; k -= 24LL)
  {
    v306 = *(void **)((char *)&v380[6] + k);
    if (v306)
    {
      *(void *)((char *)&v380[6] + k + 8) = v306;
      operator delete(v306);
    }
  }

  for (m = 0LL; m != -120; m -= 24LL)
  {
    uint64_t v308 = *(void **)((char *)&v382[6] + m);
    if (v308)
    {
      *(void *)((char *)&v382[6] + m + 8) = v308;
      operator delete(v308);
    }
  }

  for (n = 0LL; n != -120; n -= 24LL)
  {
    uint64_t v310 = *(void **)((char *)&v384[6] + n);
    if (v310)
    {
      *(void *)((char *)&v384[6] + n + 8) = v310;
      operator delete(v310);
    }
  }

  for (iuint64_t i = 0LL; ii != -120; ii -= 24LL)
  {
    uint64_t v312 = *(void **)((char *)&v387 + ii);
    if (v312)
    {
      *(void *)((char *)&v387 + ii + 8) = v312;
      operator delete(v312);
    }
  }

  for (jj = 0LL; jj != -120; jj -= 24LL)
  {
    v314 = *(void **)((char *)&v395 + jj);
    if (v314)
    {
      *(void *)((char *)&v395 + jj + 8) = v314;
      operator delete(v314);
    }
  }

  for (kk = 0LL; kk != -120; kk -= 24LL)
  {
    v316 = *(void **)((char *)&v403 + kk);
    if (v316)
    {
      *(void *)((char *)&v403 + kk + 8) = v316;
      operator delete(v316);
    }
  }

void sub_1000846F4(uint64_t a1, int a2)
{
  if (qword_1008DAFA0)
  {
    for (uint64_t i = 0LL; i != 240; i += 48LL)
    {
      if (*(_DWORD *)(qword_1008DAFA0 + i + 16) == a2)
      {
        uint64_t v13 = qword_1008DAFA0 + i + 8;
        goto LABEL_13;
      }
    }

    uint64_t v4 = 8LL;
    while (*(_BYTE *)(qword_1008DAFA0 + v4) != 1)
    {
      v4 += 48LL;
      if (v4 == 248) {
        goto LABEL_8;
      }
    }

    uint64_t v13 = qword_1008DAFA0 + v4;
LABEL_13:
    int v14 = *(_DWORD *)(v13 + 8);
    if ((_DWORD)a1)
    {
      if (v14)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"ConnectComplete result %d handle %u -- disconnecting AAP",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  a1);
          int v22 = (os_log_s *)sub_100086554(0x53u);
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        sub_1000B312C(*(unsigned int *)(v13 + 8));
      }

      else
      {
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 + 24) + 8LL))( v13 + 1,  *(unsigned __int16 *)(v13 + 14),  a1);
        sub_10007EC9C((_OWORD *)v13);
      }
    }

    else if (v14)
    {
      *(_BYTE *)uint64_t v13 = 2;
      (*(void (**)(uint64_t, void, void))(*(void *)(v13 + 24) + 8LL))( v13 + 1,  *(unsigned __int16 *)(v13 + 14),  0LL);
    }
  }

  else
  {
LABEL_8:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Not a valid Connection complete event!\n", v5, v6, v7, v8, v9, v10, v11, v23);
      uint64_t v12 = (os_log_s *)sub_100086554(0x53u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

void sub_100084894( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void *sub_1000848A8()
{
  return sub_1001EDDCC();
}

uint64_t sub_1000848B0(void *a1)
{
  off_1008DAFA8 = a1;
  return 0LL;
}

uint64_t sub_1000848C0(void *a1)
{
  off_1008DAFB0 = a1;
  return 0LL;
}

uint64_t sub_1000848D0(_BYTE *a1)
{
  BOOL v2 = sub_1000BC2E0("applebt_rx_main");
  if (!a1 || !a1[19])
  {
    sub_1001EE2A0();
    uint64_t v41 = (os_log_s *)sub_100086554(0x3Au);
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
      sub_100657968();
    }
    sub_1001EE2A0();
    uint64_t v42 = (os_log_s *)sub_100086554(0x3Au);
    if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
      sub_10065793C();
    }
    goto LABEL_111;
  }

  uint64_t v130 = v117;
  uint64_t v131 = (*(int *)(*(void *)a1 + 20LL) + 4LL) * *(int *)(*(void *)a1 + 64LL);
  __chkstk_darwin(v2, v131);
  uint64_t v133 = (uint64_t)v117 - v3;
  bzero((char *)v117 - v3, v4);
  uint64_t v132 = a1;
  uint64_t v5 = *(int **)a1;
  size_t v6 = (*(int *)(*(void *)a1 + 24LL) + 4LL) * *(int *)(*(void *)a1 + 68LL);
  __chkstk_darwin(v7, v8);
  unint64_t v134 = (unint64_t)v117 - v9;
  bzero((char *)v117 - v9, v6);
  size_t v10 = (v5[7] + 4LL) * v5[18];
  __chkstk_darwin(v11, v12);
  int v14 = (char *)v117 - v13;
  bzero((char *)v117 - v13, v10);
  size_t v15 = (v5[8] + 4LL) * v5[19];
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)v117 - v18;
  bzero((char *)v117 - v18, v15);
  size_t v20 = (v5[9] + 4LL) * v5[20];
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)v117 - v23;
  bzero((char *)v117 - v23, v20);
  size_t v25 = v5[10] + 4LL;
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)v117 - ((v28 + 19) & 0xFFFFFFFFFFFFFFF0LL);
  bzero(v29, v25);
  inputStruct[0] = 65285;
  int v148 = 65287;
  int v151 = 65289;
  int v154 = 65288;
  int v157 = 65286;
  inputStruct[1] = v131;
  uint64_t v147 = v133;
  int v149 = v10;
  uint64_t v150 = v14;
  int v152 = v20;
  v153 = v24;
  int v155 = v15;
  size_t v156 = v19;
  int v158 = v6;
  uint64_t v159 = (char *)v134;
  int v160 = 266;
  int v161 = v25;
  uint64_t v162 = v29;
  memset(outputStruct, 0, sizeof(outputStruct));
  int v30 = sub_100138554(6, inputStruct, outputStruct);
  if (!v30)
  {
    uint64_t v43 = 0LL;
    int v33 = 0;
    unint64_t v129 = (unint64_t)&v137;
    *(void *)&__int128 v31 = 67109376LL;
    __int128 v128 = v31;
    *(void *)&__int128 v31 = 67109632LL;
    __int128 v127 = v31;
    *(void *)&__int128 v31 = 67109634LL;
    __int128 v126 = v31;
    char v34 = v132;
    while (1)
    {
      do
      {
        uint64_t v44 = (int *)&outputStruct[v43];
        if (*v44 != -536870160 && *v44 != 0)
        {
          sub_1001EE2A0();
          uint64_t v46 = (os_log_s *)sub_100086554(0x3Au);
          int v33 = -536870167;
          if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
          {
            unsigned int v91 = LOBYTE(inputStruct[4 * v43]);
            int v92 = *v44;
            uint64_t v93 = sub_100137ADC(v92);
            *(void *)&v144[0] = __PAIR64__(v91, v126);
            WORD4(v144[0]) = 1024;
            *(_DWORD *)((char *)v144 + 10) = v92;
            HIWORD(v144[0]) = 2080;
            *(void *)&v144[1] = v93;
            _os_log_error_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_ERROR,  "applebt_rx_main: after applebt_hci_read, pipe %d returned status (0x%08X, %s)\n",  (uint8_t *)v144,  0x18u);
          }
        }

        ++v43;
      }

      while (v43 != 6);
      if (v33)
      {
        int v32 = 0;
        goto LABEL_5;
      }

      if (!v34[32]) {
        break;
      }
      uint64_t v47 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v144[0]) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "applebt_rx_main: rx route is suspended before terminate - dropping packets\n",  (uint8_t *)v144,  2u);
      }

LABEL_94:
      sub_10012F73C(v81, v82, v83, (uint64_t)v80);
      char v34 = v132;
LABEL_95:
      sub_1000A8688();
      unsigned int v55 = (unsigned __int16 *)((char *)v55 + *v55 + 4);
    }
  }

  int v32 = v30;
  int v33 = 0;
  char v34 = v132;
LABEL_5:
  sub_1001EE2A0();
  uint64_t v35 = (os_log_s *)sub_100086554(0x3Au);
  if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
    sub_100657C84(v32, v33, v35);
  }
  if (v32 != -536870195 && v34[19])
  {
    bzero(v144, 0x400uLL);
    sub_1000A85A0();
    sub_10011E7EC(1205LL);
    sub_1000A8688();
    sub_1001EE2A0();
    uint64_t v36 = (os_log_s *)sub_100086554(0x3Au);
    if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
      sub_100657C08();
    }
    if (v32 == -536870167)
    {
      size_t v135 = 2048LL;
      if (sub_1000EDCF0(&byte_1008F1F90, &v135))
      {
        sub_1001EE2A0();
        uint64_t v37 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
          sub_100657BA8();
        }
      }

      else if (v135 == 1024)
      {
        sub_1001EE2A0();
        v105 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v105, OS_LOG_TYPE_ERROR)) {
          sub_100657B44();
        }
        memcpy(v144, &byte_1008F1F90, sizeof(v144));
        uint64_t v106 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v106, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(v140) = 67109120;
          DWORD1(v140) = DWORD1(v144[12]);
          _os_log_impl( (void *)&_mh_execute_header,  v106,  OS_LOG_TYPE_DEFAULT,  "applebt_rx_main: ID !! applebt_read_crash_data succeeded.(ID %d)\n",  (uint8_t *)&v140,  8u);
        }

        uint64_t v107 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v107, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(v140) = 67109120;
          DWORD1(v140) = DWORD2(v144[13]);
          _os_log_impl( (void *)&_mh_execute_header,  v107,  OS_LOG_TYPE_DEFAULT,  "applebt_rx_main: PC !! applebt_read_crash_data succeeded.(PC 0x%08X)\n",  (uint8_t *)&v140,  8u);
        }

        uint64_t v108 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v108, OS_LOG_TYPE_DEFAULT))
        {
          *(void *)&__int128 v140 = __PAIR64__(HIDWORD(v144[13]), 67109888);
          WORD4(v140) = 1024;
          *(_DWORD *)((char *)&v140 + 10) = v144[14];
          HIWORD(v140) = 1024;
          int v141 = DWORD1(v144[14]);
          __int16 v142 = 1024;
          int v143 = DWORD2(v144[14]);
          _os_log_impl( (void *)&_mh_execute_header,  v108,  OS_LOG_TYPE_DEFAULT,  "applebt_rx_main: LR !! applebt_read_crash_data succeeded.(LR0 0x%08X, LR1 0x%08X, LR2 0x%08X, LR3 0x%08X)\n",  (uint8_t *)&v140,  0x1Au);
        }

        uint64_t v109 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v109, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(v140) = 136315138;
          *(void *)((char *)&v140 + 4) = &v144[32];
          _os_log_impl( (void *)&_mh_execute_header,  v109,  OS_LOG_TYPE_DEFAULT,  "applebt_rx_main: STR !! applebt_read_crash_data succeeded.(%s)\n",  (uint8_t *)&v140,  0xCu);
        }

        bzero(&byte_1008F1F90, 0x800uLL);
        dword_1008F1FB5[0] = DWORD1(v144[12]);
        *(_OWORD *)&word_1008F1FA5 = *(_OWORD *)((char *)&v144[12] + 8);
        *(_OWORD *)&dword_1008F1FC9 = *(_OWORD *)((char *)&v144[13] + 8);
        HIDWORD(qword_1008F1FCD[1]) = DWORD2(v144[14]);
      }

      else if (v135 == 2048)
      {
        sub_1001EE2A0();
        v98 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v98, OS_LOG_TYPE_ERROR)) {
          sub_100657AE0();
        }
        int v99 = dword_1008F1FB5[0];
        DWORD1(v144[12]) = dword_1008F1FB5[0];
        bzero(&v140, 0x400uLL);
        unint64_t v134 = byte_1008F1F90;
        uint64_t v133 = byte_1008F1F95;
        uint64_t v131 = byte_1008F1F96;
        unint64_t v129 = byte_1008F1F97;
        *(void *)&__int128 v128 = byte_1008F1F98;
        snprintf( (char *)&v140,  0x400uLL,  "abort %d;version=%d;bin_id=%u;uuid=%02X%02X%02X%02X-%02X%02X-%02X%02X-%02X%02X-%02X%02X%02X%02X%02X%02X;BT:%d."
          "%d.%d.%d;PHY:%u.%u.%u.%u;ID=%d;p1=0x%X;p2=0x%X; p3=0x%X;p4=0x%X;EOS",
          v99,
          byte_1008F1F90,
          unk_1008F1F91,
          byte_1008F1F95,
          byte_1008F1F96,
          byte_1008F1F97,
          byte_1008F1F98,
          byte_1008F1F99,
          byte_1008F1F9A,
          byte_1008F1F9B,
          byte_1008F1F9C,
          byte_1008F1F9D,
          byte_1008F1F9E,
          byte_1008F1F9F,
          byte_1008F1FA0,
          byte_1008F1FA1,
          byte_1008F1FA2,
          byte_1008F1FA3,
          byte_1008F1FA4,
          word_1008F1FA5,
          unk_1008F1FA7,
          unk_1008F1FA9,
          unk_1008F1FAB,
          unk_1008F1FAD,
          unk_1008F1FAF,
          unk_1008F1FB1,
          unk_1008F1FB3,
          v99,
          dword_1008F1FB5[1],
          dword_1008F1FB5[2],
          dword_1008F1FB5[3],
          dword_1008F1FB5[4]);
        uint64_t v100 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v100, OS_LOG_TYPE_DEFAULT))
        {
          int v138 = 136315138;
          v139 = &v140;
          _os_log_impl( (void *)&_mh_execute_header,  v100,  OS_LOG_TYPE_DEFAULT,  "applebt_rx_main: BT-MAC-ABORT-STR1!!(%s)\n",  (uint8_t *)&v138,  0xCu);
        }

        *(void *)&__int128 v127 = qword_1008F1FCD[11];
        uint64_t v122 = byte_1008F2049;
        uint64_t v120 = byte_1008F204A;
        uint64_t v118 = byte_1008F204B;
        v117[3] = byte_1008F2088;
        unint64_t v134 = dword_1008F1FB5[0];
        uint64_t v133 = dword_1008F1FC9;
        uint64_t v131 = LODWORD(qword_1008F1FCD[0]);
        unint64_t v129 = HIDWORD(qword_1008F1FCD[0]);
        *(void *)&__int128 v128 = LODWORD(qword_1008F1FCD[1]);
        uint64_t v125 = qword_1008F1FCD[12];
        *(void *)&__int128 v126 = HIDWORD(qword_1008F1FCD[1]);
        uint64_t v124 = LODWORD(qword_1008F1FCD[2]);
        uint64_t v123 = HIDWORD(qword_1008F1FCD[2]);
        uint64_t v121 = LODWORD(qword_1008F1FCD[3]);
        uint64_t v119 = HIDWORD(qword_1008F1FCD[3]);
        v117[9] = LODWORD(qword_1008F1FCD[4]);
        v117[8] = HIDWORD(qword_1008F1FCD[4]);
        v117[7] = LODWORD(qword_1008F1FCD[5]);
        v117[6] = HIDWORD(qword_1008F1FCD[5]);
        v117[5] = LODWORD(qword_1008F1FCD[6]);
        v117[4] = HIDWORD(qword_1008F1FCD[6]);
        v117[2] = LODWORD(qword_1008F1FCD[7]);
        v117[1] = HIDWORD(qword_1008F1FCD[7]);
        v117[0] = LODWORD(qword_1008F1FCD[8]);
        snprintf( (char *)&v140,  0x400uLL,  "abort %d;PC=0x%x;LR1=0x%x;LR2=0x%x;LR3=0x%x;LR4=0x%x;LR5=0x%x;cpsr=0x%x;dfar=0x%x;dfsr=0x%x;ifar=0x%x;ifsr=0x%"
          "x;vic0_vicrawintr=0x%X;vic1_vicrawintr=0x%X;vic2_vicrawintr=0x%X;irq_vic_0=0x%X;irq_vic_1=0x%X;irq_vic_2=0x%X;"
          "fiq_vic_0=0x%X;fiq_vic_1=0x%X;fiq_vic_2=0x%X;vic3_vicrawintr=0x%X;irq_vic_3=0x%X;fiq_vic_3=0x%X;raw_irq_status"
          "=0x%llx;prev_raw_irq_status=0x%llx;local_bt_clk=0x%X;coex_activity_bits=0x%X;coex_envelop_bits=0x%X;top_semaph"
          "ores_lock_status_hw=0x%X;top_semaphores_lock_status_fw=0x%X;context=0x%X;abort_counter=0x%X;unhandled_exceptio"
          "n_counter=0x%X;syndrome0=0x%X;far0=0x%X;pc0=0x%X;lr0=0x%X;psr0=0x%X;syndrome1=0x%X;far1=0x%X;pc1=0x%X;lr1=0x%X"
          ";psr1=0x%X;syndrome2=0x%X;far2=0x%X;pc2=0x%X;lr2=0x%X;psr2=0x%X;system_exit_status=0x%X;EOS",
          dword_1008F1FB5[0],
          dword_1008F1FC9,
          LODWORD(qword_1008F1FCD[0]),
          HIDWORD(qword_1008F1FCD[0]),
          LODWORD(qword_1008F1FCD[1]),
          HIDWORD(qword_1008F1FCD[1]),
          LODWORD(qword_1008F1FCD[2]),
          HIDWORD(qword_1008F1FCD[2]),
          LODWORD(qword_1008F1FCD[3]),
          HIDWORD(qword_1008F1FCD[3]),
          LODWORD(qword_1008F1FCD[4]),
          HIDWORD(qword_1008F1FCD[4]),
          LODWORD(qword_1008F1FCD[5]),
          HIDWORD(qword_1008F1FCD[5]),
          LODWORD(qword_1008F1FCD[6]),
          HIDWORD(qword_1008F1FCD[6]),
          LODWORD(qword_1008F1FCD[7]),
          HIDWORD(qword_1008F1FCD[7]),
          LODWORD(qword_1008F1FCD[8]),
          HIDWORD(qword_1008F1FCD[8]),
          LODWORD(qword_1008F1FCD[9]),
          HIDWORD(qword_1008F1FCD[9]),
          LODWORD(qword_1008F1FCD[10]),
          HIDWORD(qword_1008F1FCD[10]),
          qword_1008F1FCD[11],
          qword_1008F1FCD[12],
          LODWORD(qword_1008F1FCD[13]),
          HIDWORD(qword_1008F1FCD[13]),
          LODWORD(qword_1008F1FCD[14]),
          HIDWORD(qword_1008F1FCD[14]),
          unk_1008F2045,
          byte_1008F2049,
          byte_1008F204A,
          byte_1008F204B,
          dword_1008F204C,
          unk_1008F2050,
          dword_1008F2054,
          unk_1008F2058,
          dword_1008F205C,
          unk_1008F2060,
          dword_1008F2064,
          unk_1008F2068,
          dword_1008F206C,
          unk_1008F2070,
          dword_1008F2074,
          unk_1008F2078,
          dword_1008F207C,
          unk_1008F2080,
          dword_1008F2084,
          byte_1008F2088);
        unsigned int v101 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v101, OS_LOG_TYPE_DEFAULT))
        {
          int v138 = 136315138;
          v139 = &v140;
          _os_log_impl( (void *)&_mh_execute_header,  v101,  OS_LOG_TYPE_DEFAULT,  "applebt_rx_main: BT-MAC-ABORT-STR2!!(%s)\n",  (uint8_t *)&v138,  0xCu);
        }

        unint64_t v134 = unk_1008F208D;
        uint64_t v133 = byte_1008F208F;
        uint64_t v131 = byte_1008F2090;
        unint64_t v129 = byte_1008F2091;
        *(void *)&__int128 v128 = (unsigned __int16)word_1008F2092;
        *(void *)&__int128 v127 = byte_1008F2094;
        *(void *)&__int128 v126 = byte_1008F2095;
        uint64_t v125 = byte_1008F2096;
        uint64_t v124 = byte_1008F2097;
        uint64_t v123 = byte_1008F2098;
        uint64_t v122 = byte_1008F2099;
        uint64_t v121 = byte_1008F209A;
        uint64_t v120 = byte_1008F209B;
        uint64_t v119 = byte_1008F209C;
        uint64_t v118 = unk_1008F20B7;
        snprintf( (char *)&v140,  0x400uLL,  "abort %d;rx_header_status=0x%x;tx_header_status=0x%x;sync_valid=0x%x;hw_machine_sig=0x%x;general_status=0x%x;e"
          "sco_tx_en_state=0x%x;sch_current_mrl=0x%x;rx_data_type=0x%x;tx_data_type=0x%x;rx_packet_length=0x%x;tx_packet_"
          "length=0x%x;total_rx_tx_length=0x%X;rx_watchdog_timer_counter=0x%X;rx_watchdog_occured=0x%X;dbl_buf_index=0x%X"
          ";last_scheduled_btclk=0x%X;prev_scheduled_btclk=0x%X;prev_activity_type=0x%X;bt_clk_freeze0=0x%X;bt_clk_freeze"
          "1=0x%X;bt_clk_freeze2=0x%X;pt_freeze0=0x%X;pt_freeze1=0x%X;pt_freeze2=0x%X;sm_clk_freeze=0x%X;max_dram_wakeup_"
          "duration=0x%X;dram_protection_mode=0x%X;dram_access_allowed=0x%X;dram_is_enable=0x%X;force_dram_awake_bit=0x%X"
          ";etm_etb_enabled=0x%X;trx_timers_supported=0x%X;dart_error_occurred=0x%X;syncrhonous_external_abort_occured=0x"
          "%X;init_state=0x%X;recovery_state=0x%X;sleep_wakeup_state=0x%X;sleep_go_to_deep_sleep_state=0x%X;rtkit_assert_"
          "state=0x%X;rtkit_power_off_state=0x%X;EOS",
          dword_1008F1FB5[0],
          unk_1008F2089,
          unk_1008F208D,
          byte_1008F208F,
          byte_1008F2090,
          byte_1008F2091,
          (unsigned __int16)word_1008F2092,
          byte_1008F2094,
          byte_1008F2095,
          byte_1008F2096,
          byte_1008F2097,
          byte_1008F2098,
          byte_1008F2099,
          byte_1008F209A,
          byte_1008F209B,
          byte_1008F209C,
          unk_1008F20A1,
          unk_1008F20A5,
          byte_1008F20A9,
          unk_1008F20AB,
          unk_1008F20AF,
          unk_1008F20B3,
          unk_1008F20B7,
          unk_1008F20B9,
          unk_1008F20BB,
          unk_1008F20BD,
          unk_1008F20C1,
          byte_1008F20C3,
          byte_1008F20C4 & 1,
          (byte_1008F20C4 >> 1) & 1,
          (byte_1008F20C4 >> 2) & 1,
          (byte_1008F20C4 >> 3) & 1,
          (byte_1008F20C4 >> 4) & 1,
          (byte_1008F20C4 >> 5) & 1,
          (byte_1008F20C4 >> 6) & 1,
          byte_1008F20C5,
          byte_1008F20C6,
          byte_1008F20C7,
          byte_1008F20C8,
          byte_1008F20C9,
          byte_1008F20CA);
        int v102 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v102, OS_LOG_TYPE_DEFAULT))
        {
          int v138 = 136315138;
          v139 = &v140;
          _os_log_impl( (void *)&_mh_execute_header,  v102,  OS_LOG_TYPE_DEFAULT,  "applebt_rx_main: BT-MAC-ABORT-STR3!!(%s)\n",  (uint8_t *)&v138,  0xCu);
        }

        snprintf( (char *)&v144[32],  0x200uLL,  "abort %d p1=0x%X p2=0x%X p3=0x%X p4=0x%X;ID:%d;BT:%d.%d.%d.%d;PHY:%u.%u.%u.%u;PC:0x%x;LR1:0x%x;LR2:0x%x;LR3:0x%x;LR4:0x%x;EOS",
          dword_1008F1FB5[0],
          dword_1008F1FB5[1],
          dword_1008F1FB5[2],
          dword_1008F1FB5[3],
          dword_1008F1FB5[4],
          dword_1008F1FB5[0],
          word_1008F1FA5,
          unk_1008F1FA7,
          unk_1008F1FA9,
          unk_1008F1FAB,
          unk_1008F1FAD,
          unk_1008F1FAF,
          unk_1008F1FB1,
          unk_1008F1FB3,
          dword_1008F1FC9,
          LODWORD(qword_1008F1FCD[0]),
          HIDWORD(qword_1008F1FCD[0]),
          LODWORD(qword_1008F1FCD[1]),
          HIDWORD(qword_1008F1FCD[1]));
        memcpy(&unk_1008F2790, &v144[32], 0x200uLL);
        v103 = (os_log_s *)sub_100086554(0x3Au);
        BOOL v104 = os_log_type_enabled(v103, OS_LOG_TYPE_DEFAULT);
        char v34 = v132;
        if (v104)
        {
          int v138 = 136315138;
          v139 = &v144[32];
          _os_log_impl( (void *)&_mh_execute_header,  v103,  OS_LOG_TYPE_DEFAULT,  "applebt_rx_main: BT-MAC-ABORT-STR4!!(%s)\n",  (uint8_t *)&v138,  0xCu);
        }
      }

      else
      {
        sub_1001EE2A0();
        uint64_t v110 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v110, OS_LOG_TYPE_ERROR)) {
          sub_100657A78((uint64_t)&v135, v110, v111, v112, v113, v114, v115, v116);
        }
      }
    }

    if (sub_100137C88())
    {
      sub_1001EE2A0();
      uint64_t v38 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
        sub_100657A18();
      }
    }

    sub_1000A85A0();
    if (v32 == -536870167)
    {
      sub_1001EE2A0();
      uint64_t v39 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
        sub_100657994();
      }
      if (v34[33]) {
        sub_1001EE334();
      }
      if (off_1008DAFA8) {
        off_1008DAFA8(7LL, DWORD1(v144[12]) | ((unint64_t)dword_1008F1FC9 << 32), &v144[32]);
      }
      uint64_t v40 = 1214LL;
    }

    else
    {
      sub_1001EE2A0();
      unsigned int v94 = (os_log_s *)sub_100086554(0x3Au);
      BOOL v95 = os_log_type_enabled(v94, OS_LOG_TYPE_ERROR);
      if (v32 == -536870211)
      {
        if (v95) {
          sub_1006579C0();
        }
        if (off_1008DAFB0) {
          off_1008DAFB0(0LL);
        }
        uint64_t v40 = 1206LL;
      }

      else
      {
        if (v95) {
          sub_1006579EC();
        }
        if (off_1008DAFB0) {
          off_1008DAFB0(1LL);
        }
        uint64_t v40 = 1205LL;
      }
    }

    sync();
    sub_10011E854(v40);
LABEL_110:
    sub_1000A8688();
  }

          *((_BYTE *)a1 + 15) = 1;
LABEL_100:
          uint64_t v17 = v124;
          goto LABEL_116;
        }

        uint64_t v47 = 0;
        BOOL v95 = 129LL;
        uint64_t v17 = v124;
LABEL_125:
        if (*((_BYTE *)a1 + 15))
        {
LABEL_126:
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"ParseCaps: length error", v104, v105, v106, v107, v108, v109, v110, v121);
            uint64_t v111 = (os_log_s *)sub_100086554(3u);
            if (os_log_type_enabled(v111, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          BOOL v95 = 17LL;
LABEL_130:
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Caps not parsed correctly - good: %d error: 0x%2x",  v112,  v113,  v114,  v115,  v116,  v117,  v118,  v16);
            uint64_t v119 = (os_log_s *)sub_100086554(3u);
            if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          sub_1000D88A0(v17, v16);
        }

        else
        {
          if ((v47 & 1) == 0) {
            goto LABEL_130;
          }
          BOOL v95 = 0LL;
          *a3 = v14;
        }

        return v95;
      default:
        goto LABEL_81;
    }
  }

  *((_BYTE *)a1 + 15) = 1;
  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_42:
  uint64_t v54 = 0;
  *((_BYTE *)a1 + 15) = 1;
  goto LABEL_43;
}

  if (!*(_WORD *)(*(void *)(sub_10017AB4C(a1) + 112) + 144LL)
    || !*(_WORD *)(*(void *)(sub_10017AB4C(a1) + 112) + 144LL))
  {
    goto LABEL_114;
  }

  uint64_t v65 = 0;
  while (*(unsigned __int16 *)(*(void *)(sub_10017AB4C(a1) + 112) + 2LL * v65 + 18) != (_DWORD)v10)
  {
  }

  if (*(_WORD *)(*(void *)(sub_10017AB4C(a1) + 112) + 144LL)
    && *(unsigned __int16 *)(*(void *)(sub_10017AB4C(a1) + 112) + 18LL) == (_DWORD)v10)
  {
    goto LABEL_114;
  }

  uint64_t v66 = (a2 >> 8) & 0x3F;
  if (*(unsigned __int16 *)(*(void *)(sub_10017AB4C(a1) + 112) + 6LL) > v66
    || v66 > *(unsigned __int16 *)(*(void *)(sub_10017AB4C(a1) + 112) + 4LL))
  {
    v67 = *(unsigned __int16 *)(*(void *)(sub_10017AB4C(a1) + 112) + 6LL);
    __int16 v68 = *(unsigned __int16 *)(*(void *)(sub_10017AB4C(a1) + 112) + 6LL);
    if (v67 <= v66)
    {
      if (v66 - v68 > *(_DWORD *)(*(void *)(*(void *)(sub_10017AB4C(a1) + 112) + 176LL) + 32LL))
      {
LABEL_114:
        if (*(void *)(*(void *)(sub_10017AB4C(a1) + 112) + 8LL * v10 + 184))
        {
          unsigned __int16 v79 = (a2 >> 8) & 0x3F;
          if (*(unsigned __int16 *)(*(void *)(sub_10017AB4C(a1) + 112) + 6LL) <= v79
            && v79 <= *(unsigned __int16 *)(*(void *)(sub_10017AB4C(a1) + 112) + 4LL))
          {
            goto LABEL_121;
          }

          v80 = *(unsigned __int16 *)(*(void *)(sub_10017AB4C(a1) + 112) + 6LL);
          uint64_t v81 = *(unsigned __int16 *)(*(void *)(sub_10017AB4C(a1) + 112) + 6LL);
          if (v80 > v79)
          {
            if (((*(_DWORD *)(*(void *)(*(void *)(sub_10017AB4C(a1) + 112) + 176LL) + 32LL)
                 + (_BYTE)v81) & 0x3Fu) < v79)
              goto LABEL_123;
            goto LABEL_121;
          }

          if (v79 - v81 <= *(_DWORD *)(*(void *)(*(void *)(sub_10017AB4C(a1) + 112) + 176LL) + 32LL))
          {
LABEL_121:
            if (((a2 >> 7) & 1) != 0 && *(_BYTE *)(*(void *)(sub_10017AB4C(a1) + 112) + 2LL)) {
              goto LABEL_123;
            }
            int v48 = (a2 >> 7) & 1;
            uint64_t v46 = (uint64_t)a1;
            uint64_t v47 = (a2 >> 8) & 0x3F;
            goto LABEL_125;
          }
        }

        if (v6) {
          sub_1000B1838(v6);
        }
        if (*(_DWORD *)qword_1008EDC60 != 2 || v54 != 0)
        {
          (*(void (**)(uint64_t *, BOOL, uint64_t))(qword_1008EDC60 + 80))( &v55,  *(_DWORD *)qword_1008EDC60 == 2,  v7);
          sub_10010C410((unsigned __int8 *)&v55);
          return 0LL;
        }

        uint64_t v7 = sub_1001DFCA8();
        if (!(_DWORD)v7) {
          return v7;
        }
        goto LABEL_19;
      }

      LOWORD(v11) = v11 - v53;
      v5 += v53;
      int v14 = qword_1008EDC60;
      uint64_t v29 = *(unsigned __int16 *)(qword_1008EDC60 + 66);
    }

    if (v29 < (unsigned __int16)v11)
    {
LABEL_39:
      uint64_t v7 = 833LL;
      goto LABEL_9;
    }

    *(_WORD *)(v14 + 66) = v29 - v11;
    if (*(_BYTE *)(v14 + 32) == 7)
    {
      while (1)
      {
        uint64_t v52 = 0;
        int v32 = sub_10010B44C(a1, &v53, &v52);
        if ((_DWORD)v32) {
          break;
        }
        if (*(_BYTE *)(a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdp.c");
          int v33 = 0;
        }

        else
        {
          int v33 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
        }

        if (v33 < v52)
        {
          uint64_t v7 = 0LL;
          goto LABEL_62;
        }

        int v32 = sub_1001E0FB8(a1, v52, 0LL);
        if ((_DWORD)v32) {
          break;
        }
        ++v54;
      }

      uint64_t v7 = v32;
      if ((_DWORD)v32 != 843) {
        goto LABEL_9;
      }
    }

    else
    {
      if (*(_BYTE *)(a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdp.c");
        char v34 = 0;
      }

      else
      {
        char v34 = *(_WORD *)(a1 + 10) - *(_WORD *)(a1 + 12);
      }

      uint64_t v35 = sub_1001E0FB8(a1, v34, &v54);
      uint64_t v7 = v35;
      if ((_DWORD)v35 != 843 && (_DWORD)v35) {
        goto LABEL_9;
      }
    }

void sub_100085EB8(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = 2147483649LL;
  memset(v16, 0, 9);
  if (a1)
  {
    if (!a2) {
      return;
    }
    uint64_t v5 = a1;
    while (1)
    {
      unint64_t v6 = *v5;
      unint64_t v7 = v6;
      if ((_DWORD)v6 != 1)
      {
        if ((_DWORD)v6 != 2)
        {
          if (*v5)
          {
            uint64_t v3 = 2147483650LL;
            goto LABEL_16;
          }

          return;
        }

        unint64_t v7 = 9LL;
      }

      unsigned int v8 = a2;
      if (v7 > a2) {
        goto LABEL_16;
      }
      __memcpy_chk((char *)v16 + 1, v5 + 1, v7 - 1, 8LL);
      if ((_DWORD)v6 == 2) {
        *(void *)a3 = *(void *)((char *)v16 + 1);
      }
      else {
        *(_BYTE *)(a3 + 8) = 1;
      }
      v5 += v7;
      a2 = v8 - v7;
      if (v8 == (_DWORD)v7) {
        return;
      }
    }
  }

  uint64_t v3 = 2147483651LL;
LABEL_16:
  sub_1001EE2A0();
  uint64_t v9 = (os_log_s *)sub_100086554(0x3Au);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
    sub_100657D80(v3, v9, v10, v11, v12, v13, v14, v15);
  }
}

uint64_t sub_100085FCC()
{
  return 0LL;
}

uint64_t sub_100085FE4(int a1)
{
  int v1 = sub_1000ED97C(a1);
  if (v1 == -536870201) {
    unsigned int v2 = 102;
  }
  else {
    unsigned int v2 = 105;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_100086018(char a1)
{
  byte_1008DAFD9 = a1;
  return 0LL;
}

uint64_t sub_100086028(unsigned __int16 a1, const void *a2, unsigned int a3)
{
  return sub_1000EDAEC(a1, a2, a3);
}

uint64_t sub_100086030(int a1)
{
  if (a1) {
    *(void *)&v2[0] = 1LL;
  }
  return sub_1000ED4F4((uint64_t *)v2);
}

uint64_t sub_100086090(int a1, uint64_t a2, int a3)
{
  if (!byte_1008DAFCB) {
    return 1205LL;
  }
  __int16 v4 = a2;
  if (a1 == 1)
  {
    unsigned int v8 = 0;
  }

  else if (a1 == 3)
  {
    unsigned int v8 = &_mh_execute_header.magic + 2;
  }

  else
  {
    if (a1 != 2) {
      return 1214LL;
    }
    int v6 = sub_100134778(a2);
    if (v6 == 2) {
      int v7 = 4;
    }
    else {
      int v7 = 1;
    }
    if (v6 == 1) {
      unsigned int v8 = 3;
    }
    else {
      unsigned int v8 = v7;
    }
  }

  if (a1 == 2) {
    int v10 = 5;
  }
  else {
    int v10 = 4;
  }
  int v11 = v10 + a3;
  if (v10 + a3 > *(_DWORD *)(qword_1008DAFB8 + 4LL * v8))
  {
    sub_1001EE2A0();
    uint64_t v12 = (os_log_s *)sub_100086554(0x3Au);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v18 = *(_DWORD *)(qword_1008DAFB8 + 4LL * v8);
      *(_DWORD *)__int128 buf = 67109632;
      *(_DWORD *)&uint8_t buf[4] = v10 + a3;
      LOWORD(v20) = 1024;
      *(_DWORD *)((char *)&v20 + 2) = v8;
      HIWORD(v20) = 1024;
      int v21 = v18;
      _os_log_error_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "applebt_transport_send_request: headerBytes + length (%d) is greater than pipe[%d] size (%d)\n",  buf,  0x14u);
    }

    if (v11 > *(_DWORD *)(qword_1008DAFB8 + 4LL * v8)) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/applebt_transport.c",  949,  "headerBytes + length <= btdev->pipe_items_info->size[pipe_id]");
    }
  }

  __chkstk_darwin();
  uint64_t v14 = &buf[-v13];
  bzero(&buf[-v13], v15);
  v14[4] = a1;
  *(_WORD *)(v14 + 5) = v4;
  v14[7] = a3;
  if (a1 == 2) {
    v14[8] = BYTE1(a3);
  }
  if (a3) {
    sub_10011EF64((char *)&v14[v10 + 4]);
  }
  else {
    sub_1000BA1F0();
  }
  *(_WORD *)uint64_t v14 = v11;
  unsigned __int8 v16 = *((_BYTE *)&qword_1008DAFB8 + v8 + 8);
  *((_BYTE *)&qword_1008DAFB8 + v8 + 8) = v16 + 1;
  *((_WORD *)v14 + 1) = v16;
  size_t v20 = v14;
  *(_DWORD *)__int128 buf = v8;
  buf[1] = 1;
  *(_DWORD *)&uint8_t buf[4] = (unsigned __int16)v11 + 4;
  uint64_t v9 = 1205LL;
  sub_10011E7EC(1205LL);
  return v9;
}

uint64_t sub_100086320()
{
  return 0LL;
}

uint64_t sub_100086328()
{
  if (byte_1008DAFCB) {
    return 1205LL;
  }
  uint64_t v0 = sub_100137610();
  if (!(_DWORD)v0)
  {
    uint64_t v0 = sub_100137EE4();
    if ((_DWORD)v0)
    {
      sync();
      sub_10011E854(1205LL);
    }

    qword_1008DAFB8 = (uint64_t)sub_10009D598();
    if (!qword_1008DAFB8)
    {
      sync();
      sub_10011E854(1218LL);
    }

    byte_1008DAFD8 = 0;
    byte_1008DAFCB = 1;
    if (pthread_create((pthread_t *)&qword_1008DAFD0, 0LL, (void *(__cdecl *)(void *))sub_1000848D0, &qword_1008DAFB8))
    {
      sync();
      sub_10011E854(1218LL);
    }

    else
    {
      sub_1000BC20C((_opaque_pthread_t *)qword_1008DAFD0, 63);
    }
  }

  return v0;
}

uint64_t sub_1000863E4()
{
  return 0LL;
}

uint64_t sub_1000863EC()
{
  if (!byte_1008DAFCB) {
    return 1205LL;
  }
  byte_1008DAFCB = 0;
  if (sub_100137C88())
  {
    sub_1001EE2A0();
    uint64_t v0 = (os_log_s *)sub_100086554(0x3Au);
    if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR)) {
      sub_100657E44();
    }
  }

  sub_1000A8688();
  uint64_t v1 = pthread_join((pthread_t)qword_1008DAFD0, 0LL);
  sub_1000A85A0();
  if ((_DWORD)v1)
  {
    sub_1001EE2A0();
    unsigned int v2 = (os_log_s *)sub_100086554(0x3Au);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      sub_100657DE4();
    }
  }

  return v1;
}

uint64_t sub_1000864A0()
{
  if (!byte_1008DAFCB)
  {
    sync();
    sub_10011E854(1205LL);
  }

  return (unsigned __int16)(*(_WORD *)(qword_1008DAFB8 + 4) - 1);
}

uint64_t sub_1000864DC()
{
  return 0LL;
}

uint64_t sub_1000864E4()
{
  return 0LL;
}

void sub_1000864EC()
{
  byte_1008DAFD8 = 1;
}

uint64_t sub_1000864FC()
{
  uint64_t result = sub_1000863EC();
  if (!(_DWORD)result) {
    return sub_100086328();
  }
  return result;
}

void sub_10008651C( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_10008652C( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

uint64_t sub_100086554(unsigned int a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000LL;
  block[2] = sub_1000865E4;
  block[3] = &unk_100881C98;
  char v5 = a1;
  if (qword_1008DAFE0 != -1) {
    dispatch_once(&qword_1008DAFE0, block);
  }
  if (a1 >= 0x5C) {
    int v2 = 92;
  }
  else {
    int v2 = a1;
  }
  return qword_1008DAFE8[v2];
}

os_log_t sub_1000865E4(uint64_t a1)
{
  for (uint64_t i = 0LL; i != 93; ++i)
  {
    if (*(_BYTE *)(a1 + 32) == 91)
    {
      uint64_t v3 = "Stack.ALL";
    }

    else
    {
      __int128 v20 = 0u;
      __int128 v21 = 0u;
      __int128 v18 = 0u;
      __int128 v19 = 0u;
      __int128 v16 = 0u;
      __int128 v17 = 0u;
      __int128 v14 = 0u;
      __int128 v15 = 0u;
      __int128 v12 = 0u;
      __int128 v13 = 0u;
      __int128 v10 = 0u;
      __int128 v11 = 0u;
      __int128 v8 = 0u;
      __int128 v9 = 0u;
      *(_OWORD *)__str = 0u;
      __int128 v7 = 0u;
      __int16 v4 = sub_1001EDDD8(i);
      snprintf(__str, 0x100uLL, "Stack.%s", v4);
      uint64_t v3 = __str;
    }

    os_log_t result = os_log_create("com.apple.bluetooth", v3);
    qword_1008DAFE8[i] = result;
  }

  return result;
}

void sub_1000866E4()
{
  if (dword_1008D6C80 == -1)
  {
    dword_1008D6C80 = open("/dev/btwake", 0);
    if (dword_1008D6C80 == -1)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Unable to turn on BT)_WAKE signal", v0, v1, v2, v3, v4, v5, v6, v8);
        __int128 v7 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

uint64_t sub_100086768()
{
  uint64_t result = dword_1008D6C80;
  if (dword_1008D6C80 != -1)
  {
    uint64_t result = close(dword_1008D6C80);
    dword_1008D6C80 = -1;
  }

  return result;
}

uint64_t sub_10008679C(int a1, uint64_t a2)
{
  __int128 v129 = 0u;
  __int128 v130 = 0u;
  __int128 v127 = 0u;
  __int128 v128 = 0u;
  __int128 v125 = 0u;
  __int128 v126 = 0u;
  __int128 v123 = 0u;
  __int128 v124 = 0u;
  __int128 v121 = 0u;
  __int128 v122 = 0u;
  __int128 v119 = 0u;
  __int128 v120 = 0u;
  __int128 v117 = 0u;
  __int128 v118 = 0u;
  *(_OWORD *)__str = 0u;
  __int128 v116 = 0u;
  unsigned int v4 = sub_1000FCC28();
  if (v4) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 2400000;
  }
  if (a2 && (__strlcpy_chk(__str, a2, 256LL, 256LL), HIBYTE(v130) = 0, (uint64_t v6 = strtok(__str, ",")) != 0LL))
  {
    __int128 v7 = v6;
    uint64_t v8 = strtok(0LL, ",");
    if (v8) {
      unsigned int v5 = strtoul(v8, 0LL, 0);
    }
  }

  else
  {
    __int128 v7 = "com.apple.uart.sk.bluetooth";
  }

  memset(&v147, 0, sizeof(v147));
  sockaddr v113 = (sockaddr)0;
  __int128 v114 = 0u;
  int v146 = 0;
  __int128 v144 = 0u;
  __int128 v145 = 0u;
  __int128 v142 = 0u;
  __int128 v143 = 0u;
  __int128 v140 = 0u;
  __int128 v141 = 0u;
  socklen_t v112 = 0;
  dword_1008D6D08 = socket(32, 1, 2);
  if (dword_1008D6D08 < 0)
  {
    if (sub_1000A86F0())
    {
      __int128 v18 = __error();
      __int128 v19 = strerror(*v18);
      sub_1001EE134((uint64_t)"socket failed (error = %s)\n", v20, v21, v22, v23, v24, v25, v26, (uint64_t)v19);
      uint64_t v27 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 1201LL;
  }

  *(_DWORD *)&v113.sa_len = 139296;
  __int128 v140 = 0u;
  __int128 v141 = 0u;
  __int128 v142 = 0u;
  __int128 v143 = 0u;
  __int128 v144 = 0u;
  __int128 v145 = 0u;
  int v146 = 0;
  __strlcpy_chk((char *)&v140 + 4, v7, 96LL, 96LL);
  if (ioctl(dword_1008D6D08, 0xC0644E03uLL, &v140))
  {
    if (sub_1000A86F0())
    {
      __int128 v9 = __error();
      strerror(*v9);
      sub_1001EE134( (uint64_t)"ioctl(CTLIOCGINFO, %s) failed (error = %s)\n",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  (uint64_t)v7);
      __int128 v17 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    goto LABEL_14;
  }

  *(_DWORD *)&v113.sa_data[2] = v140;
  *(_DWORD *)&v113.sa_data[6] = 0;
  if (connect(dword_1008D6D08, &v113, 0x20u) == -1)
  {
    if (sub_1000A86F0())
    {
      __int128 v31 = __error();
      strerror(*v31);
      sub_1001EE134((uint64_t)"connect(%s) failed (error = %s)\n", v32, v33, v34, v35, v36, v37, v38, (uint64_t)v7);
      uint64_t v39 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    goto LABEL_14;
  }

  if (!strcmp(v7, "com.apple.uart.sk.bluetooth"))
  {
    *(void *)uu = 0LL;
    uint64_t v139 = 0LL;
    memset(out, 0, 37);
    int v111 = 63;
    uint64_t v110 = 0x3F00000400LL;
    if (setsockopt(dword_1008D6D08, 2, -2146675692, &v110, 0xCu) == -1)
    {
      int v61 = __error();
      strerror(*v61);
      sub_1001EE134( (uint64_t)"set IOAOSSKYSETCHANNELSPEC (on %s) failed (error = %s)\n",  v62,  v63,  v64,  v65,  v66,  v67,  v68,  (uint64_t)v7);
      unsigned __int16 v69 = (os_log_s *)sub_100086554(0x3Au);
      if (!os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
        goto LABEL_14;
      }
    }

    else
    {
      socklen_t v112 = 16;
      if (getsockopt(dword_1008D6D08, 2, 1074811922, uu, &v112) == -1)
      {
        uint64_t v70 = __error();
        strerror(*v70);
        sub_1001EE134( (uint64_t)"get IOAOSSKYGETCHANNELUUID (on %s) failed (error = %s)\n",  v71,  v72,  v73,  v74,  v75,  v76,  v77,  (uint64_t)v7);
        unsigned __int8 v78 = (os_log_s *)sub_100086554(0x3Au);
        if (!os_log_type_enabled(v78, OS_LOG_TYPE_ERROR)) {
          goto LABEL_14;
        }
      }

      else
      {
        uuid_unparse_upper(uu, out);
        qword_1008DC2D0 = os_channel_create(uu, 0LL);
        if (qword_1008DC2D0)
        {
          dword_1008D6D0C = kqueue();
          if (dword_1008D6D0C == -1)
          {
            if (sub_1000A86F0())
            {
              uint64_t v40 = __error();
              uint64_t v41 = strerror(*v40);
              sub_1001EE134( (uint64_t)"creating write kqueue failed (error = %s)\n",  v42,  v43,  v44,  v45,  v46,  v47,  v48,  (uint64_t)v41);
              uint64_t v49 = (os_log_s *)sub_100086554(0x3Au);
              if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
                sub_100657858();
              }
            }
          }

          changelist.ident = (int)os_channel_get_fd(qword_1008DC2D0);
          memset(&changelist.fflags, 0, 20);
          *(_DWORD *)&changelist.filter = 393214;
          uint64_t v132 = &dword_1008DC2D8;
          uint64_t v135 = 0LL;
          uint64_t v134 = 0LL;
          int v133 = 393206;
          int v136 = 0;
          if (kevent(dword_1008D6D0C, &changelist, 2, 0LL, 0, 0LL) == -1)
          {
            close(dword_1008D6D0C);
            dword_1008D6D0C = -1;
            os_channel_destroy(qword_1008DC2D0);
            qword_1008DC2D0 = 0LL;
            close(dword_1008D6D08);
            dword_1008D6D08 = -1;
            unsigned __int16 v88 = __error();
            strerror(*v88);
            sub_1001EE134( (uint64_t)"creating write kevent (on %s) failed (error = %s)\n",  v89,  v90,  v91,  v92,  v93,  v94,  v95,  (uint64_t)v7);
            v96 = (os_log_s *)sub_100086554(0x3Au);
            if (!os_log_type_enabled(v96, OS_LOG_TYPE_ERROR)) {
              return 1201LL;
            }
          }

          else
          {
            dword_1008D6D10 = kqueue();
            if (dword_1008D6D10 == -1)
            {
              if (sub_1000A86F0())
              {
                unint64_t v50 = __error();
                int v51 = strerror(*v50);
                sub_1001EE134( (uint64_t)"creating read kqueue failed (error = %s)\n",  v52,  v53,  v54,  v55,  v56,  v57,  v58,  (uint64_t)v51);
                uint64_t v106 = (os_log_s *)sub_100086554(0x3Au);
                if (os_log_type_enabled(v106, OS_LOG_TYPE_ERROR)) {
                  sub_100657858();
                }
              }
            }

            changelist.ident = (int)os_channel_get_fd(qword_1008DC2D0);
            *(_DWORD *)&changelist.filter = 393215;
            memset(&changelist.fflags, 0, 20);
            uint64_t v132 = &dword_1008DC2D8;
            int v133 = 393206;
            uint64_t v134 = 0LL;
            uint64_t v135 = 0LL;
            int v136 = 0;
            if (kevent(dword_1008D6D10, &changelist, 2, 0LL, 0, 0LL) != -1)
            {
              uint64_t v59 = os_channel_attr_create();
              if (v59)
              {
                uint64_t v60 = v59;
                if (!os_channel_read_attr(qword_1008DC2D0, v59))
                {
                  uint64_t v108 = 0LL;
                  uint64_t v109 = 0LL;
                  uint64_t v107 = 0LL;
                  os_channel_attr_get(v60, 4LL, &v109);
                  os_channel_attr_get(v60, 3LL, &v108);
                  os_channel_attr_get(v60, 2LL, &v107);
                }

                os_channel_attr_destroy(v60);
              }

              goto LABEL_21;
            }

            close(dword_1008D6D10);
            dword_1008D6D10 = -1;
            close(dword_1008D6D0C);
            dword_1008D6D0C = -1;
            os_channel_destroy(qword_1008DC2D0);
            qword_1008DC2D0 = 0LL;
            close(dword_1008D6D08);
            dword_1008D6D08 = -1;
            size_t v97 = __error();
            strerror(*v97);
            sub_1001EE134( (uint64_t)"creating read kevent (on %s) failed (error = %s)\n",  v98,  v99,  v100,  v101,  v102,  v103,  v104,  (uint64_t)v7);
            v105 = (os_log_s *)sub_100086554(0x3Au);
            if (!os_log_type_enabled(v105, OS_LOG_TYPE_ERROR)) {
              return 1201LL;
            }
          }

          sub_100657858();
          return 1201LL;
        }

        if (!sub_1000A86F0()
          || (unsigned __int16 v79 = __error(),
              strerror(*v79),
              sub_1001EE134( (uint64_t)"os_channel_create (on %s) failed (error = %s)\n",  v80,  v81,  v82,  v83,  v84,  v85,  v86,  (uint64_t)v7),  uint64_t v87 = (os_log_s *)sub_100086554(0x3Au),  !os_log_type_enabled(v87, OS_LOG_TYPE_ERROR)))
        {
LABEL_14:
          close(dword_1008D6D08);
          dword_1008D6D08 = -1;
          return 1201LL;
        }
      }
    }

    sub_100657858();
    goto LABEL_14;
  }

uint64_t sub_100087020()
{
  int v0 = dword_1008D6D08;
  if (dword_1008D6D08 != -1)
  {
    dword_1008DC2D8 = 1;
    if (dword_1008D6D0C != -1 || dword_1008D6D10 != -1)
    {
      v3.ident = (uintptr_t)&dword_1008DC2D8;
      *(void *)&v3.filter = 0x10000000000FFF6LL;
      v3.data = 0LL;
      v3.udata = 0LL;
      kevent(dword_1008D6D0C, &v3, 1, 0LL, 0, 0LL);
      kevent(dword_1008D6D10, &v3, 1, 0LL, 0, 0LL);
      int v0 = dword_1008D6D08;
    }

    close(v0);
    while (!dword_1008DC2DC)
      sub_1000A86C4(&stru_1008DC2E0);
    if (qword_1008DC2D0)
    {
      os_channel_destroy(qword_1008DC2D0);
      qword_1008DC2D0 = 0LL;
    }

    if (dword_1008D6D0C != -1)
    {
      close(dword_1008D6D0C);
      dword_1008D6D0C = -1;
    }

    if (dword_1008D6D10 != -1)
    {
      close(dword_1008D6D10);
      dword_1008D6D10 = -1;
    }

    sub_1000BC320(&stru_1008DC2E0);
    dword_1008D6D08 = -1;
  }

  return 0LL;
}

uint64_t sub_100087160(char *__buf, unsigned int a2)
{
  unsigned int v2 = a2;
  if (!qword_1008DC2D0)
  {
    if (a2)
    {
      while (1)
      {
        unsigned int v19 = write(dword_1008D6D08, __buf, (unsigned __int16)v2);
        if ((v19 & 0x80000000) != 0) {
          break;
        }
        __buf += v19;
        LOWORD(v2) = v2 - v19;
        if (!(_WORD)v2) {
          return 625LL;
        }
      }

      if (sub_1000A86F0())
      {
        uint64_t v24 = __error();
        uint64_t v25 = strerror(*v24);
        sub_1001EE134((uint64_t)"BM3UART write failed: %s", v26, v27, v28, v29, v30, v31, v32, (uint64_t)v25);
        uint64_t v33 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 1205LL;
    }

    return 625LL;
  }

  __int128 v48 = 0u;
  __int128 v49 = 0u;
  __int128 v46 = 0u;
  *(_OWORD *)__dst = 0u;
  uint64_t v4 = os_channel_ring_id(qword_1008DC2D0, 0LL);
  uint64_t v5 = os_channel_tx_ring(qword_1008DC2D0, v4);
  uint64_t next_slot = os_channel_get_next_slot(v5, 0LL, &v46);
  if (v2 > 0x1000)
  {
    sub_1001EE2A0();
  }

  else if (!v2)
  {
    uint64_t v7 = 0LL;
    unsigned __int16 v8 = 0;
LABEL_7:
    if (v2 != v8) {
      sub_1001EE2A0();
    }
    if (v7)
    {
      os_channel_advance_slot(v5, v7);
      if (os_channel_sync(qword_1008DC2D0, 0LL) == -1)
      {
        __int128 v9 = __error();
        uint64_t v10 = strerror(*v9);
        sub_1001EE134((uint64_t)"BM3UART os_channel_sync tx failed: %s", v11, v12, v13, v14, v15, v16, v17, (uint64_t)v10);
        __int128 v18 = (os_log_s *)sub_100086554(0x3Au);
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          return 1205LL;
        }
        goto LABEL_13;
      }
    }

    return 625LL;
  }

  unsigned __int16 v8 = 0;
  uint64_t v7 = 0LL;
  while (!v7 || next_slot)
  {
    if (!next_slot)
    {
LABEL_25:
      while (1)
      {
        memset(&eventlist, 0, sizeof(eventlist));
        uint64_t v22 = os_channel_get_next_slot(v5, 0LL, &v46);
        if (v22)
        {
          uint64_t next_slot = v22;
          break;
        }
      }
    }

    uint64_t v7 = next_slot;
    else {
      size_t v23 = WORD1(v46);
    }
    memmove(__dst[0], &__buf[v8], v23);
    WORD1(v46) = v23;
    os_channel_set_slot_properties(v5, v7, &v46);
    v8 += v23;
    uint64_t next_slot = os_channel_get_next_slot(v5, v7, &v46);
    if (v2 <= v8) {
      goto LABEL_7;
    }
  }

  os_channel_advance_slot(v5, v7);
  uint64_t v35 = __error();
  uint64_t v36 = strerror(*v35);
  sub_1001EE134( (uint64_t)"BM3UART os_channel_sync tx partial failed: %s",  v37,  v38,  v39,  v40,  v41,  v42,  v43,  (uint64_t)v36);
  uint64_t v44 = (os_log_s *)sub_100086554(0x3Au);
  if (!os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
    return 1205LL;
  }
LABEL_13:
  sub_100657858();
  return 1205LL;
}

uint64_t sub_100087458()
{
  int v0 = dword_1008D6D08;
  if (__darwin_check_fd_set_overflow(dword_1008D6D08, v27, 0)) {
    *(_DWORD *)((char *)v27 + (((unint64_t)v0 >> 3) & 0x1FFFFFFFFFFFFFFCLL)) |= 1 << v0;
  }
  if (qword_1008DC2D0)
  {
    uint64_t v1 = os_channel_ring_id(qword_1008DC2D0, 2LL);
    uint64_t v2 = os_channel_rx_ring(qword_1008DC2D0, v1);
    int v3 = 4096;
    do
    {
      memset(v26, 0, sizeof(v26));
      memset(&eventlist, 0, sizeof(eventlist));
      int v4 = kevent(dword_1008D6D10, 0LL, 0, &eventlist, 1, 0LL);
      if (eventlist.filter != -1) {
        break;
      }
      int v5 = v4;
      sub_1000A85A0();
      uint64_t next_slot = os_channel_get_next_slot(v2, 0LL, v26);
      if (next_slot)
      {
        do
        {
          uint64_t v7 = next_slot;
          int v8 = WORD1(v26[0]);
          if (WORD1(v26[0]))
          {
            unsigned int v9 = 0;
            do
            {
              int v10 = v8 - v9;
              if (v3 >= v10) {
                int v11 = v10;
              }
              else {
                int v11 = v3;
              }
              int v3 = sub_1000FC0C8();
              v9 += v11;
              int v8 = WORD1(v26[0]);
            }

            while (v9 < WORD1(v26[0]));
          }

          else
          {
            unsigned int v9 = 0;
          }

          if (v9 != v8) {
            sub_1001EE2A0();
          }
          uint64_t next_slot = os_channel_get_next_slot(v2, v7, v26);
        }

        while (next_slot);
        os_channel_advance_slot(v2, v7);
      }

      sub_1000A8688();
      if (v5 < 1) {
        break;
      }
    }

    while (!dword_1008DC2D8);
  }

  else
  {
    int v12 = 4096;
    do
    {
      if (v12 >= 4096) {
        int v13 = 4096;
      }
      else {
        int v13 = v12;
      }
      sub_1000A85A0();
      int v12 = sub_1000FC0C8();
      sub_1000A8688();
    }

    while (!dword_1008DC2D8);
  }

  if (dword_1008DC2D8)
  {
    sub_1000A85A0();
    dword_1008DC2DC = 1;
    j__pthread_cond_signal(&stru_1008DC2E0);
    sub_1000A8688();
  }

  else if (sub_1000A86F0())
  {
    uint64_t v14 = __error();
    uint64_t v15 = strerror(*v14);
    sub_1001EE134((uint64_t)"BM3UART read failed: %s\n", v16, v17, v18, v19, v20, v21, v22, (uint64_t)v15);
    size_t v23 = (os_log_s *)sub_100086554(0x3Au);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 0LL;
}

uint64_t sub_1000876E0(uint64_t result)
{
  byte_1008DD318 = result;
  return result;
}

void *sub_1000876EC()
{
  if (byte_1008DD318) {
    return &unk_1008D6D18;
  }
  else {
    return &unk_1008D6D38;
  }
}

void *sub_100087710()
{
  return &unk_1008D6D58;
}

uint64_t sub_10008771C(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"deInitChannelQueue channel %x cid=%d", v2, v3, v4, v5, v6, v7, v8, a1);
    unsigned int v9 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v21 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }

    goto LABEL_5;
  }

  if (a1)
  {
LABEL_5:
    sub_1001EC070(*(void **)(a1 + 8));
    *(void *)(a1 + 8) = 0LL;
    sub_1001EC070(*(void **)(a1 + 16));
    uint64_t result = 0LL;
    *(void *)(a1 + 16) = 0LL;
    return result;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"channel can not be null", v11, v12, v13, v14, v15, v16, v17, v19);
    uint64_t v18 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 101LL;
}

_OWORD *sub_10008784C(__int16 a1, __int16 a2, int *a3, int a4, __int16 a5)
{
  uint64_t result = sub_1000B17F4(0xA8uLL);
  *uint64_t result = 0u;
  result[1] = 0u;
  result[2] = 0u;
  result[3] = 0u;
  result[4] = 0u;
  result[5] = 0u;
  result[6] = 0u;
  result[7] = 0u;
  result[8] = 0u;
  result[9] = 0u;
  *((void *)result + 20) = 0LL;
  *((_WORD *)result + 1) = a1;
  *(_WORD *)uint64_t result = a2;
  int v11 = *a3;
  *((_WORD *)result + 4) = *((_WORD *)a3 + 2);
  *((_DWORD *)result + 1) = v11;
  *((_WORD *)result + 5) = a4;
  *((_WORD *)result + 64) = a5;
  *((_BYTE *)result + 144) = a4 != 4;
  return result;
}

void sub_1000878D8(void *a1)
{
  if (a1)
  {
    sub_1001EF5E4((uint64_t)a1 + 16);
    sub_1000B1838(a1);
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"cannot free a null pointer", v2, v3, v4, v5, v6, v7, v8, v10);
    unsigned int v9 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_100087950(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t)(a1 + 8);
  *((void *)a1 + 3) = a1;
  *((void *)a1 + 20) = a2;
  *((_DWORD *)a1 + 6) = 626;
  uint64_t v4 = (__int128 *)sub_10012D890((uint64_t)(a1 + 2));
  return sub_100172A98(0LL, *a1, v4, v3, 0);
}

uint64_t sub_10008799C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a1;
  *(void *)(a1 + 160) = a2;
  unsigned int v3 = *(unsigned __int8 *)(a1 + 144);
  if (v3 >= 3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Priority %d is out of range (max=%d). using default priority",  v4,  v5,  v6,  v7,  v8,  v9,  v10,  *(unsigned __int8 *)(a1 + 144));
      int v11 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    unsigned int v3 = 0;
    *(_BYTE *)(a1 + 144) = 0;
  }

  uint64_t v12 = *(void *)(a1 + 152);
  if (v12)
  {
    uint64_t v13 = v12 + 8;
    if (sub_1001EC434(*(void *)(v12 + 8 + 8LL * v3)) < 0x15)
    {
      sub_1001EC1DC(*(void *)(v13 + 8LL * *(unsigned __int8 *)(a1 + 144)), a1, 168LL);
      sub_100087B48(*(void *)(a1 + 152));
      return 0LL;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Queue size exceeded MAX(%d)", v14, v15, v16, v17, v18, v19, v20, 20LL);
      uint64_t v21 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v22 = 410LL;
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"channel can not be null", v23, v24, v25, v26, v27, v28, v29, v40);
      uint64_t v30 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v22 = 101LL;
  }

  sub_1000B1838((void *)a1);
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"pushPacketToChannelQueue failed with result %!", v31, v32, v33, v34, v35, v36, v37, v22);
    uint64_t v38 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return v22;
}

void sub_100087B48(uint64_t a1)
{
  if (a1)
  {
    if (*(_BYTE *)(a1 + 3))
    {
      uint64_t v1 = 0LL;
      uint64_t v2 = a1 + 8;
      char v3 = 1;
      do
      {
        uint64_t v4 = sub_1001EC324(*(void *)(v2 + 8 * v1), 0);
        uint64_t v5 = (unsigned __int16 *)v4;
        if ((v3 & 1) == 0) {
          break;
        }
        char v3 = 0;
        uint64_t v1 = 1LL;
      }

      while (!v4);
      if (v4)
      {
        uint64_t v6 = (__int128 *)sub_10012D890(v4 + 4);
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"sendNextPacket NULL channel", v7, v8, v9, v10, v11, v12, v13, v15);
    uint64_t v14 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_100087C18(unsigned __int16 *a1, unsigned int a2, unsigned __int16 a3, char a4)
{
  if (!a1) {
    return 101LL;
  }
  if (!a2)
  {
    unsigned int v5 = 0;
LABEL_12:
    uint64_t v10 = &a1[12 * v5];
    unsigned __int16 *v10 = a3;
    *((_BYTE *)v10 + 2) = a4;
    *((_BYTE *)v10 + 3) = 1;
    *((void *)v10 + 1) = sub_1001EC038(0LL, 0LL);
    uint64_t v11 = sub_1001EC038(0LL, 0LL);
    uint64_t result = 0LL;
    *((void *)v10 + 2) = v11;
    return result;
  }

  uint64_t v4 = 0LL;
  unsigned int v5 = a2;
  uint64_t v6 = a1;
  while (1)
  {
    int v8 = *v6;
    v6 += 12;
    int v7 = v8;
    if (a2 <= 0xFF && !v7) {
      break;
    }
    if (a2 == ++v4) {
      goto LABEL_11;
    }
  }

  unsigned int v5 = v4;
LABEL_11:
  if (v5 <= 0x1D) {
    goto LABEL_12;
  }
  return 0LL;
}

uint64_t sub_100087CCC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if ((sub_1000A86F0() & 1) != 0)
  {
    sub_1001EE134((uint64_t)"removeL2capConnection(%d)", v5, v6, v7, v8, v9, v10, v11, a3);
    uint64_t v12 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v16 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  for (uint64_t i = 0LL; i != 720; i += 24LL)
  {
    uint64_t result = a1 + i;
    if (*(unsigned __int16 *)(a1 + i) == a3)
    {
      *(_WORD *)uint64_t result = 0;
      *(_BYTE *)(result + 3) = 0;
      uint64_t result = sub_10008771C(result);
    }
  }

  return result;
}

uint64_t sub_100087DC8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0LL;
  while (*(unsigned __int16 *)(a1 + v3) != a3)
  {
    v3 += 24LL;
    if (v3 == 720) {
      return 0LL;
    }
  }

  return a1 + v3;
}

uint64_t sub_100087DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    sub_1001EE2A0();
  }
  uint64_t v8 = *(void **)(a2 + 8);
  if (!v8) {
    sub_1001EE2A0();
  }
  uint64_t v10 = v8[19];
  uint64_t v9 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8[20];
  *(_BYTE *)(v10 + 3) = 1;
  if (v9)
  {
    v9(a1, a2, a3, a4);
    uint64_t v10 = v8[19];
  }

  sub_1000878D8(v8);
  return sub_100087B48(v10);
}

void sub_100087E74(uint64_t a1, __int16 a2, int a3)
{
  qword_1008DD320 = a1;
  word_1008DD338 = a2;
  if (a3 != 1216)
  {
    if ((byte_1008DD344 & 1) == 0) {
      sub_1001EE2A0();
    }
    uint64_t v21 = 0LL;
    uint64_t v22 = 0LL;
    uint64_t v20 = 0LL;
    byte_1008DD344 = 0;
    if (!a3 && (unsigned int v4 = (unsigned __int16)word_1008DD340, word_1008DD340))
    {
LABEL_18:
      else {
        size_t v18 = v4;
      }
      uint64_t v19 = qword_1008DD330;
      memmove((void *)qword_1008DD320, (const void *)qword_1008DD330, v18);
      qword_1008DD330 = v19 + v18;
      word_1008DD340 -= v18;
      byte_1008DD344 = sub_1000FC0A8() == 0;
    }

    else
    {
      LODWORD(v22) = a3;
      BYTE4(v22) = byte_1008DD348;
      uint64_t v21 = &v22;
      LOWORD(v20) = 8;
      uint64_t v5 = sub_1001EE6DC((uint64_t)sub_10008803C, &v20, 0LL);
      if ((_DWORD)v5)
      {
        uint64_t v6 = v5;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_Dispatch_RegisterFunc failed %!", v7, v8, v9, v10, v11, v12, v13, v6);
          uint64_t v14 = (os_log_s *)sub_100086554(0x3Au);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }

      if (qword_1008DD328)
      {
        sub_1000B1838((void *)qword_1008DD328);
        qword_1008DD328 = 0LL;
        word_1008DD340 = 0;
      }

      uint64_t v15 = 0LL;
      LOBYTE(v4) = 1;
      do
      {
        char v16 = v4;
        unsigned int v4 = *((unsigned __int16 *)&dword_1008DD358 + v15);
        if (*((_WORD *)&dword_1008DD358 + v15))
        {
          uint64_t v17 = qword_1008DD360[v15];
          byte_1008DD348 = *((_BYTE *)&word_1008DD35C + v15);
          qword_1008DD328 = v17;
          qword_1008DD330 = v17;
          word_1008DD340 = v4;
          *((_WORD *)&dword_1008DD358 + v15) = 0;
          goto LABEL_18;
        }

        uint64_t v15 = &_mh_execute_header.magic + 1;
      }

      while ((v16 & 1) != 0);
      unsigned int v4 = (unsigned __int16)word_1008DD340;
      if (word_1008DD340) {
        goto LABEL_18;
      }
    }
  }

void sub_10008803C(uint64_t a1)
{
  if (!*(_BYTE *)(qword_1008DD350 + 2048)) {
    sub_10012F510(*(unsigned __int8 *)(*(void *)(a1 + 8) + 4LL), **(unsigned int **)(a1 + 8));
  }
}

uint64_t sub_100088060()
{
  qword_1008DD360[0] = 0LL;
  *(void *)algn_1008DD368 = 0LL;
  word_1008DD35C = 0;
  dword_1008DD358 = 0;
  uint64_t result = sub_1000FC040();
  if (!(_DWORD)result)
  {
    uint64_t v1 = sub_1000B1814(0x804uLL);
    qword_1008DD350 = (uint64_t)v1;
    v1[511] = 4;
    *((_BYTE *)v1 + 2048) = 0;
    sub_100088870(5);
    return 109LL;
  }

  return result;
}

uint64_t sub_1000880C0()
{
  if (*(_DWORD *)(qword_1008DD350 + 2044) == 4) {
    return 109LL;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000880E0()
{
  return 2032LL;
}

uint64_t sub_1000880E8(int a1, __int16 a2, int a3)
{
  if (*(_BYTE *)(qword_1008DD350 + 2048)) {
    return 129LL;
  }
  if (a1 == 2) {
    unsigned __int16 v7 = 5;
  }
  else {
    unsigned __int16 v7 = 4;
  }
  if (byte_1008DD344 == 1)
  {
    uint64_t v8 = 0LL;
    char v9 = 1;
    while (1)
    {
      char v10 = v9;
      if (!*((_WORD *)&dword_1008DD358 + v8)) {
        break;
      }
      char v9 = 0;
      uint64_t v8 = &_mh_execute_header.magic + 1;
      if ((v10 & 1) == 0) {
        goto LABEL_24;
      }
    }

    if (byte_1008DD348 == a1)
    {
LABEL_24:
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCIIfc_Send_Req, busy fail", v15, v16, v17, v18, v19, v20, v21, v34);
        uint64_t v22 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1001EE2A0();
      return 118LL;
    }

    __int16 v23 = a3 + v7;
    uint64_t v24 = (char *)sub_1000B17F4(a3 + v7);
    uint64_t v25 = (uint64_t)v24;
    char *v24 = a1;
    *(_WORD *)(v24 + 1) = a2;
    v24[3] = a3;
    if (a1 == 2) {
      v24[4] = BYTE1(a3);
    }
    if (a3) {
      sub_10011EF64(&v24[v7]);
    }
    uint64_t result = 0LL;
    *((_BYTE *)&word_1008DD35C + v8) = a1;
    *((_WORD *)&dword_1008DD358 + v8) = v23;
    qword_1008DD360[v8] = v25;
  }

  else
  {
    if (!qword_1008DD320) {
      sub_1001EE2A0();
    }
    unsigned int v11 = (unsigned __int16)word_1008DD338;
    if (!word_1008DD338)
    {
      sub_1001EE2A0();
      unsigned int v11 = (unsigned __int16)word_1008DD338;
    }

    uint64_t v12 = qword_1008DD320;
    uint64_t result = 105LL;
    if (qword_1008DD320 && v11)
    {
      if (a3 + v7 <= v11)
      {
        *(_BYTE *)qword_1008DD320 = a1;
        *(_WORD *)(v12 + 1) = a2;
        *(_WORD *)(v12 + 3) = a3;
        if (a3) {
          sub_10011EF64((char *)(v12 + v7));
        }
        qword_1008DD330 = 0LL;
        word_1008DD340 = 0;
      }

      else
      {
        unsigned __int16 v13 = v7 - 1;
        word_1008DD340 = v13 + a3;
        *(_BYTE *)qword_1008DD320 = a1;
        uint64_t v14 = (char *)sub_1000B17F4((unsigned __int16)(v13 + a3));
        qword_1008DD328 = (uint64_t)v14;
        if (!v14)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"OI_Malloc failed, unable to segment packet", v26, v27, v28, v29, v30, v31, v32, v34);
            uint64_t v33 = (os_log_s *)sub_100086554(0x3Au);
            if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          return 106LL;
        }

        qword_1008DD330 = (uint64_t)v14;
        *(_WORD *)uint64_t v14 = a2;
        *((_WORD *)v14 + 1) = a3;
        if (a3) {
          sub_10011EF64(&v14[v13]);
        }
      }

      byte_1008DD348 = a1;
      byte_1008DD344 = 1;
      uint64_t result = sub_1000FC0A8();
      if ((_DWORD)result) {
        byte_1008DD344 = 0;
      }
    }
  }

  return result;
}

uint64_t sub_100088384(char *__src, int a2)
{
  if (a2)
  {
    int v2 = a2;
    do
    {
      uint64_t v4 = qword_1008DD350;
      switch(*(_DWORD *)(qword_1008DD350 + 2044))
      {
        case 0:
        case 4:
          goto LABEL_50;
        case 1:
          uint64_t v5 = *__src;
          if ((v5 - 1) >= 4u)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"unknown packet type received %d", v27, v28, v29, v30, v31, v32, v33, v5);
              uint64_t v34 = (os_log_s *)sub_100086554(0x3Au);
              if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
              {
                uint64_t v56 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446466;
                uint64_t v63 = v56;
                __int16 v64 = 1024;
                int v65 = 0xFFFF;
                _os_log_error_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
              }
            }

            uint64_t v35 = qword_1008DD350;
            *(_DWORD *)(qword_1008DD350 + 2044) = 4;
            *(_BYTE *)(v35 + 2048) = 1;
            int v6 = 5;
          }

          else
          {
            *(_WORD *)(qword_1008DD350 + 4) = 0x2000300040003uLL >> (16 * (v5 - 1));
            *(_BYTE *)(v4 + 2042) = v5;
            *(_WORD *)(v4 + 6) = 0;
            *(_DWORD *)(v4 + 2044) = 2;
            int v6 = 10;
          }

          sub_100088870(v6);
          if (*(_DWORD *)(qword_1008DD350 + 2044) == 2)
          {
            ++__src;
            --v2;
          }

          continue;
        case 2:
          int v16 = 0;
          unsigned int v17 = *(unsigned __int16 *)(qword_1008DD350 + 4);
          else {
            int v18 = *(unsigned __int16 *)(qword_1008DD350 + 4);
          }
          int v19 = v18 + 1;
          uint64_t v20 = __src;
          break;
        case 3:
          else {
            size_t v23 = (unsigned __int16)v2;
          }
          memmove((void *)(qword_1008DD350 + *(unsigned __int16 *)(qword_1008DD350 + 6) + 10), __src, v23);
          uint64_t v24 = qword_1008DD350;
          int v25 = *(unsigned __int16 *)(qword_1008DD350 + 4);
          v2 -= v23;
          *(_WORD *)(qword_1008DD350 + 6) += v23;
          __src += v23;
          int v26 = v25 - v23;
          *(_WORD *)(v24 + 4) = v26;
          if (v26) {
            continue;
          }
          goto LABEL_46;
        default:
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Invalid receive state %d",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  *(unsigned int *)(qword_1008DD350 + 2044));
            uint64_t v14 = (os_log_s *)sub_100086554(0x3Au);
            if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
              sub_100657EA4(v60, &v61, v14);
            }
          }

          uint64_t v15 = qword_1008DD350;
          *(_DWORD *)(qword_1008DD350 + 2044) = 4;
          *(_BYTE *)(v15 + 2048) = 1;
          sub_100088870(5);
          sub_1001EE2A0();
          continue;
      }

      while ((_WORD)v17)
      {
        char v21 = *v20++;
        uint64_t v22 = *(unsigned __int16 *)(v4 + 6);
        *(_WORD *)(v4 + 6) = v22 + 1;
        *(_BYTE *)(v4 + v22 + 10) = v21;
        LOWORD(v17) = v17 - 1;
        *(_WORD *)(v4 + 4) = v17;
        if ((unsigned __int16)++v16 >= (unsigned __int16)v2)
        {
          if ((_WORD)v17)
          {
            int v18 = v2;
            if ((unsigned __int16)v19 != (unsigned __int16)v2)
            {
              sub_1001EE2A0();
              int v18 = v19;
            }

            goto LABEL_45;
          }

          ++v18;
          break;
        }
      }

      *(_DWORD *)(v4 + 2044) = 3;
      switch(*(_BYTE *)(v4 + 2042))
      {
        case 1:
        case 3:
          __int16 v36 = *(unsigned __int8 *)(v4 + 12);
          goto LABEL_40;
        case 2:
          __int16 v36 = *(_WORD *)(v4 + 12);
          goto LABEL_40;
        case 4:
          __int16 v36 = *(unsigned __int8 *)(v4 + 11);
LABEL_40:
          *(_WORD *)(v4 + 4) = v36;
          unsigned __int16 v46 = *(_WORD *)(v4 + 6) + v36;
          *(_WORD *)(v4 + 8) = v46;
          if (v46 >= 0x7F1u)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"RxPacketHeader - bogus packet length (%d)",  v47,  v48,  v49,  v50,  v51,  v52,  v53,  *(unsigned __int16 *)(qword_1008DD350 + 8));
              uint64_t v54 = (os_log_s *)sub_100086554(0x3Au);
              if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR))
              {
                uint64_t v57 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446466;
                uint64_t v63 = v57;
                __int16 v64 = 1024;
                int v65 = 0xFFFF;
                _os_log_error_impl( (void *)&_mh_execute_header,  v54,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
              }
            }

            uint64_t v55 = qword_1008DD350;
            *(_DWORD *)(qword_1008DD350 + 2044) = 4;
            *(_BYTE *)(v55 + 2048) = 1;
            sub_100088870(5);
          }

          break;
        default:
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Invalid packet type %d",  v37,  v38,  v39,  v40,  v41,  v42,  v43,  *(unsigned __int8 *)(qword_1008DD350 + 2042));
            uint64_t v44 = (os_log_s *)sub_100086554(0x3Au);
            if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
            {
              uint64_t v58 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446466;
              uint64_t v63 = v58;
              __int16 v64 = 1024;
              int v65 = 0xFFFF;
              _os_log_error_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
            }
          }

          uint64_t v45 = qword_1008DD350;
          *(_DWORD *)(qword_1008DD350 + 2044) = 4;
          *(_BYTE *)(v45 + 2048) = 1;
          sub_100088870(5);
          sub_1001EE2A0();
          int v18 = 0;
          break;
      }

uint64_t sub_100088870(int a1)
{
  if (sub_1001EE9D8(*(_DWORD *)qword_1008DD350)) {
    return sub_1001EE978(*(_DWORD *)qword_1008DD350, a1);
  }
  else {
    return sub_1001EE6E8((uint64_t)sub_1000888C8, 0LL, a1, (int *)qword_1008DD350);
  }
}

void sub_1000888C8()
{
  uint64_t v0 = qword_1008DD350;
  unsigned int v1 = *(_DWORD *)(qword_1008DD350 + 2044);
  if (v1 < 2)
  {
    if (*(_BYTE *)(qword_1008DD350 + 2048))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"timed out waiting for reset response", v11, v12, v13, v14, v15, v16, v17, v28);
        int v18 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      goto LABEL_14;
    }

uint64_t sub_100088A64()
{
  *(_BYTE *)(qword_1008DD350 + 2048) = 0;
  uint64_t v0 = sub_1000FC2F0();
  uint64_t v1 = qword_1008DD350;
  *(_BYTE *)(qword_1008DD350 + 2048) = 1;
  if ((_DWORD)v0 && (uint64_t v2 = v0, (_DWORD)v0 != 625))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"startResynchronize, OI_HCIIfc_Send failed %!", v4, v5, v6, v7, v8, v9, v10, v2);
      uint64_t v11 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return sub_100088870(5LL);
  }

  else
  {
    *(_DWORD *)(v1 + 2044) = 1;
    *(_WORD *)(v1 + 4) = 5;
    return sub_100088870(20LL);
  }

void sub_100088B34()
{
  uint64_t v0 = qword_1008DD350;
  if (*(_BYTE *)(qword_1008DD350 + 2042) != 4 || *(_WORD *)(qword_1008DD350 + 8) != 6) {
    goto LABEL_8;
  }
  uint64_t v1 = 0LL;
  char v2 = 1;
  uint64_t v3 = &byte_1006BB8D7;
  do
  {
    int v4 = (*(v3 - 1) & *(_BYTE *)(qword_1008DD350 + 10 + v1));
    int v5 = *v3;
    v3 += 2;
    if (v4 != v5) {
      char v2 = 0;
    }
    ++v1;
  }

  while (v1 != 6);
  if ((v2 & 1) != 0)
  {
    *(_BYTE *)(qword_1008DD350 + 2048) = 0;
    *(_DWORD *)(v0 + 2044) = 1;
    *(_WORD *)(v0 + 4) = 5;
    sub_100088870(0x7FFF);
    sub_10011E468();
  }

  else
  {
LABEL_8:
    sub_100088870(5);
    *(_DWORD *)(qword_1008DD350 + 2044) = 4;
  }

uint64_t sub_100088BE4()
{
  v2[1] = 0LL;
  v2[0] = mach_continuous_time();
  sub_10012F73C( *(unsigned __int8 *)(qword_1008DD350 + 2042),  (unsigned __int8 *)(qword_1008DD350 + 10),  *(unsigned __int16 *)(qword_1008DD350 + 8),  (uint64_t)v2);
  uint64_t v0 = qword_1008DD350;
  *(_DWORD *)(qword_1008DD350 + 2044) = 1;
  *(_WORD *)(v0 + 4) = 5;
  return sub_100088870(0x7FFF);
}

uint64_t sub_100088C60()
{
  return 0LL;
}

void sub_100088C68(uint64_t a1, __int16 a2, int a3)
{
  qword_1008DD370 = a1;
  word_1008DD378 = a2;
  if (a3 != 1216)
  {
    if ((byte_1008DD37C & 1) == 0) {
      sub_1001EE2A0();
    }
    v14[0] = (const void *)8;
    byte_1008DD37C = 0;
    sub_1000B0400((uint64_t)&unk_1008DD384);
    v15[0] = a3;
    v15[1] = byte_1008DD380;
    v14[1] = v15;
    uint64_t v4 = sub_1001EE6DC((uint64_t)sub_100088D4C, v14, 0LL);
    if ((_DWORD)v4)
    {
      uint64_t v5 = v4;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_Dispatch_RegisterFunc failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
        uint64_t v13 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

void sub_100088D4C(uint64_t a1)
{
}

uint64_t sub_100088D5C()
{
  uint64_t result = sub_1000FC040();
  if (!(_DWORD)result)
  {
    uint64_t v1 = sub_1000B1814(0x810uLL);
    qword_1008DD390 = (uint64_t)v1;
    v1[509] = 4;
    *((_BYTE *)v1 + 2060) = 0;
    if (*((_BYTE *)v1 + 2040)) {
      *((_BYTE *)v1 + 2040) = 0;
    }
    qword_1008DD3A0 = 0LL;
    byte_1008DD398 = 0;
    sub_1000B0400((uint64_t)&unk_1008DD384);
    byte_1008DD39C = 0;
    *(_BYTE *)(qword_1008DD390 + 2049) = 0;
    sub_100089774(5);
    sub_1000866E4();
    return 109LL;
  }

  return result;
}

uint64_t sub_100088DE8()
{
  if (*(_DWORD *)(qword_1008DD390 + 2036) == 4) {
    return 109LL;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_100088E04()
{
  if (dword_1008DD3B0)
  {
    sub_1001EEB14(dword_1008DD3B0);
    dword_1008DD3B0 = 0;
  }

  return sub_1000FC098();
}

uint64_t sub_100088E34()
{
  return 2032LL;
}

uint64_t sub_100088E3C(int a1, __int16 a2, int a3)
{
  char v5 = a1;
  if (a1 != 1 && *(_BYTE *)(qword_1008DD390 + 2040)) {
    return 129LL;
  }
  if (a1 == 2) {
    __int16 v7 = 5;
  }
  else {
    __int16 v7 = 4;
  }
  if (a1 == 7) {
    unsigned __int16 v8 = 3;
  }
  else {
    unsigned __int16 v8 = v7;
  }
  if (byte_1008DD37C == 1)
  {
    sub_1001EE2A0();
    return 118LL;
  }

  else
  {
    if (!qword_1008DD370) {
      sub_1001EE2A0();
    }
    unsigned int v10 = (unsigned __int16)word_1008DD378;
    if (!word_1008DD378)
    {
      sub_1001EE2A0();
      unsigned int v10 = (unsigned __int16)word_1008DD378;
    }

    uint64_t v11 = qword_1008DD370;
    uint64_t v6 = 105LL;
    if (qword_1008DD370 && v10)
    {
      if (a3 + v8 <= v10)
      {
        *(_BYTE *)qword_1008DD370 = v5;
        *(_WORD *)(v11 + 1) = a2;
        *(_WORD *)(v11 + 3) = a3;
        if (a3) {
          sub_10011EF64((char *)(v11 + v8));
        }
        else {
          sub_1000BA1F0();
        }
        byte_1008DD380 = v5;
        byte_1008DD37C = 1;
        char v12 = byte_1008DD398;
        sub_100089AF8();
        if ((v12 & 1) == 0) {
          j__usleep(0x32u);
        }
        uint64_t v6 = sub_1000FC0A8();
        if ((_DWORD)v6)
        {
          sub_1000B0400((uint64_t)dword_1008DD384);
          byte_1008DD37C = 0;
        }

        uint64_t v13 = qword_1008DD390;
        if (*(_BYTE *)(qword_1008DD390 + 2040) && *(_DWORD *)(qword_1008DD390 + 2036) == 4)
        {
          *(_BYTE *)(qword_1008DD390 + 2049) = 0;
          *(_DWORD *)(v13 + 2036) = 1;
          *(_WORD *)(v13 + 2042) = 5;
          sub_100089774(0x7FFF);
        }
      }

      else
      {
        sub_1001EE2A0();
        return 105LL;
      }
    }
  }

  return v6;
}

uint64_t sub_100088FD8(char *__src, int a2)
{
  if (a2)
  {
    int v2 = a2;
    do
    {
      uint64_t v4 = qword_1008DD390;
      if (*(_BYTE *)(qword_1008DD390 + 2040))
      {
        *(void *)__int128 buf = 0LL;
        uint64_t v68 = 0LL;
        sub_1000B08C0(&v68);
        sub_1000B0920(v68, qword_1008DD3A0, &stru_1008DD3A8, buf, v5, v6, v7);
        if ((_DWORD)v8)
        {
          uint64_t v9 = v8;
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"OI_AbsoluteTime_Diff returned %!", v10, v11, v12, v13, v14, v15, v16, v9);
            uint64_t v17 = (os_log_s *)sub_100086554(0x3Au);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
              sub_100657EA4(v69, &v70, v17);
            }
          }
        }

        j__usleep(0);
        uint64_t v4 = qword_1008DD390;
      }

      switch(*(_DWORD *)(v4 + 2036))
      {
        case 0:
        case 4:
          goto LABEL_57;
        case 1:
          uint64_t v18 = *__src;
          char v19 = v18 - 1;
          if ((v18 - 1) < 7 && ((0x4Fu >> v19) & 1) != 0)
          {
            *(_WORD *)(v4 + 2042) = word_1006BB900[v19];
            *(_BYTE *)(v4 + 2048) = v18;
            *(_WORD *)(v4 + 2044) = 0;
            *(_DWORD *)(v4 + 2036) = 2;
            sub_100089774(20);
          }

          else
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"unknown packet type received %d", v20, v21, v22, v23, v24, v25, v26, v18);
              uint64_t v27 = (os_log_s *)sub_100086554(0x3Au);
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
              {
                __int16 v64 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446466;
                *(void *)&uint8_t buf[4] = v64;
                __int16 v72 = 1024;
                int v73 = 0xFFFF;
                _os_log_error_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
              }
            }

            sub_1001EE0E4("UART: unknown packet type received %d\n", v18);
            sub_100089974(0xF0u);
          }

          if (*(_DWORD *)(qword_1008DD390 + 2036) == 2)
          {
            ++__src;
            --v2;
          }

          continue;
        case 2:
          int v36 = 0;
          __int16 v37 = *(_WORD *)(v4 + 2042);
          uint64_t v38 = __src;
          break;
        case 3:
          else {
            size_t v42 = (unsigned __int16)v2;
          }
          memmove((void *)(v4 + *(unsigned __int16 *)(v4 + 2044) + 4), __src, v42);
          uint64_t v43 = qword_1008DD390;
          int v44 = *(unsigned __int16 *)(qword_1008DD390 + 2042);
          v2 -= v42;
          *(_WORD *)(qword_1008DD390 + 2044) += v42;
          __src += v42;
          int v45 = v44 - v42;
          *(_WORD *)(v43 + 2042) = v45;
          if (v45) {
            continue;
          }
          goto LABEL_51;
        default:
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Invalid receive state %d",  v28,  v29,  v30,  v31,  v32,  v33,  v34,  *(unsigned int *)(qword_1008DD390 + 2036));
            uint64_t v35 = (os_log_s *)sub_100086554(0x3Au);
            if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
            {
              uint64_t v63 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446466;
              *(void *)&uint8_t buf[4] = v63;
              __int16 v72 = 1024;
              int v73 = 0xFFFF;
              _os_log_error_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
            }
          }

          sub_1001EE0E4("UART: Invalid receive state %d\n", *(_DWORD *)(qword_1008DD390 + 2036));
          sub_100089974(0xF2u);
          sub_1001EE2A0();
          continue;
      }

      while (v37)
      {
        char v39 = *v38++;
        uint64_t v40 = *(unsigned __int16 *)(v4 + 2044);
        *(_WORD *)(v4 + 2044) = v40 + 1;
        *(_BYTE *)(v4 + v40 + 4) = v39;
        __int16 v37 = *(_WORD *)(v4 + 2042) - 1;
        *(_WORD *)(v4 + 2042) = v37;
        if ((unsigned __int16)++v36 >= (unsigned __int16)v2)
        {
          int v36 = v2;
          if (v37) {
            goto LABEL_50;
          }
          break;
        }
      }

      *(_DWORD *)(v4 + 2036) = 3;
      switch(*(_BYTE *)(v4 + 2048))
      {
        case 1:
        case 3:
          __int16 v41 = *(unsigned __int8 *)(v4 + 6);
          goto LABEL_45;
        case 2:
          __int16 v41 = *(_WORD *)(v4 + 6);
          goto LABEL_45;
        case 4:
          __int16 v41 = *(unsigned __int8 *)(v4 + 5);
          goto LABEL_45;
        case 7:
          if (*(_BYTE *)(v4 + 4) == 1) {
            *(_BYTE *)(v4 + 2048) = 8;
          }
          __int16 v41 = 62;
LABEL_45:
          *(_WORD *)(v4 + 2042) = v41;
          unsigned __int16 v54 = *(_WORD *)(v4 + 2044) + v41;
          *(_WORD *)(v4 + 2046) = v54;
          if (v54 >= 0x7F1u)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"RxPacketHeader - bogus packet length (%d)",  v55,  v56,  v57,  v58,  v59,  v60,  v61,  *(unsigned __int16 *)(qword_1008DD390 + 2046));
              uint64_t v62 = (os_log_s *)sub_100086554(0x3Au);
              if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
              {
                int v65 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446466;
                *(void *)&uint8_t buf[4] = v65;
                __int16 v72 = 1024;
                int v73 = 0xFFFF;
                _os_log_error_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
              }
            }

            sub_1001EE0E4( "UART: RxPacketHeader - bogus packet length (%d)\n",  *(unsigned __int16 *)(qword_1008DD390 + 2046));
            sub_100089974(0xF4u);
          }

          break;
        default:
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Invalid packet type %d",  v46,  v47,  v48,  v49,  v50,  v51,  v52,  *(unsigned __int8 *)(qword_1008DD390 + 2048));
            uint64_t v53 = (os_log_s *)sub_100086554(0x3Au);
            if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
            {
              uint64_t v66 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446466;
              *(void *)&uint8_t buf[4] = v66;
              __int16 v72 = 1024;
              int v73 = 0xFFFF;
              _os_log_error_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
            }
          }

          sub_1001EE0E4("UART: Invalid packet type %d\n", *(unsigned __int8 *)(qword_1008DD390 + 2048));
          sub_100089974(0xF0u);
          sub_1001EE2A0();
          int v36 = 0;
          break;
      }

uint64_t sub_1000895DC(int a1, __int16 a2, size_t __len, void *__src)
{
  char v4 = a1;
  if (a1 != 1 && *(_BYTE *)(qword_1008DD390 + 2040)) {
    return 129LL;
  }
  uint64_t v6 = 4LL;
  if (a1 == 2) {
    uint64_t v6 = 5LL;
  }
  if (byte_1008DD37C == 1)
  {
    sub_1001EE2A0();
    return 118LL;
  }

  else
  {
    uint64_t v7 = qword_1008DD370;
    if (qword_1008DD370) {
      BOOL v8 = word_1008DD378 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (v8)
    {
      return 105LL;
    }

    else
    {
      *(_BYTE *)qword_1008DD370 = a1;
      *(_WORD *)(v7 + 1) = a2;
      *(_WORD *)(v7 + 3) = __len;
      memmove((void *)(v7 + v6), __src, __len);
      byte_1008DD380 = v4;
      byte_1008DD37C = 1;
      sub_100089AF8();
      uint64_t v9 = sub_1000FC0A8();
      uint64_t v5 = v9;
      if ((_DWORD)v9)
      {
        sub_1000B0400((uint64_t)dword_1008DD384);
        byte_1008DD37C = 0;
      }

      uint64_t v10 = qword_1008DD390;
      if (*(_BYTE *)(qword_1008DD390 + 2040) && *(_DWORD *)(qword_1008DD390 + 2036) == 4)
      {
        *(_BYTE *)(qword_1008DD390 + 2049) = 0;
        *(_DWORD *)(v10 + 2036) = 1;
        *(_WORD *)(v10 + 2042) = 5;
        sub_100089774(0x7FFF);
      }
    }
  }

  return v5;
}

void sub_100089718(int a1)
{
  if (a1)
  {
    if (!*(_BYTE *)(qword_1008DD390 + 2040))
    {
      *(_BYTE *)(qword_1008DD390 + 2040) = 1;
      sub_1000B08C0(&qword_1008DD3A0);
      sub_1000B08E8(&stru_1008DD3A8);
    }
  }

  else
  {
    if (*(_BYTE *)(qword_1008DD390 + 2040)) {
      *(_BYTE *)(qword_1008DD390 + 2040) = 0;
    }
    qword_1008DD3A0 = 0LL;
  }

uint64_t sub_100089774(int a1)
{
  if (sub_1001EE9D8(*(_DWORD *)qword_1008DD390)) {
    return sub_1001EE978(*(_DWORD *)qword_1008DD390, a1);
  }
  else {
    return sub_1001EE6E8((uint64_t)sub_1000897CC, 0LL, a1, (int *)qword_1008DD390);
  }
}

void sub_1000897CC()
{
  uint64_t v0 = qword_1008DD390;
  unsigned int v1 = *(_DWORD *)(qword_1008DD390 + 2036);
  if (v1 < 2)
  {
    if (!*(_BYTE *)(qword_1008DD390 + 2040))
    {
LABEL_14:
      sub_100089774(0x7FFFLL);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"timed out waiting for reset response %d",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  *(unsigned int *)(qword_1008DD390 + 2036));
      uint64_t v17 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657F08();
      }
    }
  }

  else
  {
    if (v1 - 2 < 2)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Timed out while receiving a packet. Current state:%d",  v2,  v3,  v4,  v5,  v6,  v7,  v8,  *(unsigned int *)(qword_1008DD390 + 2036));
        uint64_t v9 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_100657F08();
        }
      }

      sub_1001EE0E4("UART: Timed out while receiving a packet. Current state:%d\n", *(_DWORD *)(qword_1008DD390 + 2036));
      sub_100089974(0xF1u);
      return;
    }

    if (v1 == 4)
    {
      if (*(_BYTE *)(qword_1008DD390 + 2040)) {
        return;
      }
      *(_BYTE *)(qword_1008DD390 + 2049) = 0;
      *(_DWORD *)(v0 + 2036) = 1;
      *(_WORD *)(v0 + 2042) = 5;
      goto LABEL_14;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Invalid receive state %d",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  *(unsigned int *)(qword_1008DD390 + 2036));
      uint64_t v25 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EE0E4("UART: Invalid receive state %d\n", *(_DWORD *)(qword_1008DD390 + 2036));
    sub_100089974(0xF3u);
    sub_1001EE2A0();
  }

uint64_t sub_100089974(unsigned int a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"RxErrorDetected:%d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x3Au);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1006578C0();
    }
  }

  uint64_t v10 = qword_1008DD390;
  if (!*(_BYTE *)(qword_1008DD390 + 2040))
  {
    *(_WORD *)(qword_1008DD390 + 4) = 272;
    *(_BYTE *)(v10 + 6) = a1;
    *(_WORD *)(v10 + 2046) = 3;
    *(_BYTE *)(v10 + 2048) = 4;
    sub_100089A30();
    uint64_t v10 = qword_1008DD390;
  }

  *(_DWORD *)(v10 + 2036) = 4;
  sub_100089718(1);
  return sub_100089774(5LL);
}

void sub_100089A30()
{
  uint64_t v0 = qword_1008DD390;
  if (*(unsigned __int16 *)(qword_1008DD390 + 2046) >= 0x7F1u)
  {
    sub_1001EE2A0();
    uint64_t v0 = qword_1008DD390;
  }

  if ((*(_BYTE *)(v0 + 2048) - 7) > 1u)
  {
    *(_BYTE *)(v0 + 2049) = 0;
    *(_DWORD *)(v0 + 2036) = 1;
    *(_WORD *)(v0 + 2042) = 5;
    sub_100089774(0x7FFFLL);
    v2[1] = 0LL;
    v2[0] = mach_continuous_time();
    sub_10012F73C( *(unsigned __int8 *)(qword_1008DD390 + 2048),  (unsigned __int8 *)(qword_1008DD390 + 4),  *(unsigned __int16 *)(qword_1008DD390 + 2046),  (uint64_t)v2);
  }

  else
  {
    sub_1000BA78C();
    uint64_t v1 = qword_1008DD390;
    *(_BYTE *)(qword_1008DD390 + 2049) = 0;
    *(_DWORD *)(v1 + 2036) = 1;
    *(_WORD *)(v1 + 2042) = 5;
    sub_100089774(0x7FFFLL);
  }

void sub_100089AF8()
{
  if (byte_1008DD39C == 1)
  {
    do
      j__usleep(0);
    while ((byte_1008DD39C & 1) != 0);
  }

  if ((byte_1008DD398 & 1) == 0)
  {
    sub_1001EE6E8((uint64_t)sub_100089B70, 0LL, 2, &dword_1008DD3B0);
    sub_1000BA160("H4 wake");
    sub_1000866E4();
    byte_1008DD398 = 1;
  }

void sub_100089B70()
{
  uint64_t v0 = 0LL;
  sub_1000B0400((uint64_t)&v0);
  byte_1008DD39C = 1;
  byte_1008DD398 = 0;
  if (byte_1008DD37C == 1)
  {
    byte_1008DD398 = 1;
    byte_1008DD39C = 0;
LABEL_4:
    sub_1001EE6E8((uint64_t)sub_100089B70, 0LL, 2, &dword_1008DD3B0);
    return;
  }

  sub_100086768();
  sub_1000BA160("H4 sleep");
  byte_1008DD39C = 0;
}

void sub_100089C14()
{
  if (*(_BYTE *)(qword_1008DD390 + 2048) == 4 && *(_WORD *)(qword_1008DD390 + 2046) == 6)
  {
    uint64_t v0 = 0LL;
    char v1 = 1;
    uint64_t v2 = &byte_1006BB8F4;
    do
    {
      int v3 = (*(v2 - 1) & *(_BYTE *)(qword_1008DD390 + 4 + v0));
      int v4 = *v2;
      v2 += 2;
      if (v3 != v4) {
        char v1 = 0;
      }
      ++v0;
    }

    while (v0 != 6);
    if ((v1 & 1) != 0)
    {
      if (*(_BYTE *)(qword_1008DD390 + 2040)) {
        *(_BYTE *)(qword_1008DD390 + 2040) = 0;
      }
      qword_1008DD3A0 = 0LL;
      sub_100089A30();
    }
  }

void sub_100089C90()
{
  uint64_t v0 = qword_1008DD390;
  if (*(unsigned __int16 *)(qword_1008DD390 + 2046) >= 0x7F1u)
  {
    sub_1001EE2A0();
    uint64_t v0 = qword_1008DD390;
  }

  if (*(_BYTE *)(v0 + 2060)) {
    goto LABEL_6;
  }
  if ((*(_BYTE *)(v0 + 2048) - 7) <= 1u)
  {
    sub_1000BA78C();
    uint64_t v0 = qword_1008DD390;
LABEL_6:
    *(_BYTE *)(v0 + 2049) = 0;
    *(_DWORD *)(v0 + 2036) = 1;
    *(_WORD *)(v0 + 2042) = 5;
    sub_100089774(0x7FFF);
    return;
  }

  *(_BYTE *)(v0 + 2049) = 0;
  *(_DWORD *)(v0 + 2036) = 1;
  *(_WORD *)(v0 + 2042) = 5;
  sub_100089774(0x7FFF);
  v1[1] = 0LL;
  v1[0] = mach_continuous_time();
  sub_10012F73C( *(unsigned __int8 *)(qword_1008DD390 + 2048),  (unsigned __int8 *)(qword_1008DD390 + 4),  *(unsigned __int16 *)(qword_1008DD390 + 2046),  (uint64_t)v1);
}

uint64_t sub_100089D64()
{
  if (sub_1000B1DB8() && byte_1008DD398 == 1)
  {
    uint64_t v2 = 0LL;
    sub_1000B0400((uint64_t)&v2);
    unsigned int v0 = sub_1001F43D4(dword_1008DD384, (int *)&v2);
    if (v0 <= 0xC8) {
      j__usleep(1000 * (201 - v0));
    }
    byte_1008DD39C = 1;
    byte_1008DD398 = 0;
    sub_100086768();
    sub_1000BA160("H4/AP sleep");
    byte_1008DD39C = 0;
  }

  return 0LL;
}

void sub_100089DFC()
{
  if (byte_1008DD398 == 1)
  {
    if (dword_1008DD3B0)
    {
      sub_1001EEB14(dword_1008DD3B0);
      dword_1008DD3B0 = 0;
    }

    uint64_t v9 = 0LL;
    sub_1000B0400((uint64_t)&v9);
    if (byte_1008DD37C == 1)
    {
      while (1)
      {
        uint64_t v8 = 0LL;
        sub_1000B0400((uint64_t)&v8);
        j__usleep(1u);
        if ((byte_1008DD37C & 1) == 0) {
          goto LABEL_7;
        }
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"transportBusy for too long! (more than %dms)", v0, v1, v2, v3, v4, v5, v6, 1000LL);
        uint64_t v7 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1000AFE20(1217LL);
      sub_100089F08();
    }

    else
    {
LABEL_7:
      byte_1008DD39C = 1;
      byte_1008DD398 = 0;
      j__usleep(0x9C40u);
      sub_100086768();
      sub_1000BA160("H4/AP sleep now");
      byte_1008DD39C = 0;
    }
  }

void sub_100089F08()
{
  *(_BYTE *)(qword_1008DD390 + 2060) = 1;
}

void sub_100089F1C( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

uint64_t sub_100089F30(uint64_t a1, char a2)
{
  if (!dword_1008F29B4) {
    return 414LL;
  }
  uint64_t v2 = 0LL;
  for (uint64_t i = qword_1008F29F0; !a1 || *i != a1; i += 134)
  {
    if (dword_1008F29B4 == ++v2) {
      return 414LL;
    }
  }

  *((_BYTE *)i + 444) = a2;
  sub_100089F9C(4LL, 0, (unsigned __int16)v2);
  return 0LL;
}

void sub_100089F9C(uint64_t a1, unsigned int a2, unsigned int a3)
{
  unsigned __int16 v162 = a3;
  int v161 = 0;
  unsigned int v6 = a3;
  uint64_t v7 = (unsigned int *)&qword_1008F29F0[134 * a3];
  unint64_t v8 = 274877907LL * v7[55];
  unint64_t v9 = 274877907LL * v7[54];
  uint64_t v159 = 0LL;
  uint64_t v160 = 0LL;
  int v158 = 0LL;
  sub_1000B0400((uint64_t)&v160);
  unsigned int v10 = v7[57];
  if (!v10) {
    unsigned int v10 = 0x3E8u / LODWORD(qword_1008F29F0[134 * v6 + 28]);
  }
  unint64_t v11 = v8 >> 38;
  unint64_t v12 = v9 >> 38;
  if (BYTE2(qword_1008F29F0[134 * v6 + 1]) && (uint64_t v13 = LODWORD(qword_1008F29F0[134 * v6 + 9]), (_DWORD)v13))
  {
    unint64_t v14 = 0LL;
    uint64_t v15 = &qword_1008F29F0[134 * v6];
    uint64_t v16 = v15[8];
    int v17 = *((unsigned __int8 *)v15 + 76);
    uint64_t v18 = (unsigned __int8 *)(v16 + 1);
    while (1)
    {
      int v19 = *v18;
      v18 += 64;
      if (v19 == v17) {
        break;
      }
      if (v13 == ++v14) {
        goto LABEL_8;
      }
    }

    unint64_t v20 = v14;
  }

  else
  {
LABEL_8:
    unint64_t v20 = 0LL;
  }

  if ((a1 - 1) >= 3)
  {
    if (!(_DWORD)a1)
    {
      uint64_t v22 = &qword_1008F29F0[134 * v6];
      int v25 = *((_DWORD *)v22 + 25);
      uint64_t v23 = (unsigned int *)v22 + 25;
      int v24 = v25;
      if (v25) {
        unsigned int v26 = (5 * v24 + a2) / 6;
      }
      else {
        unsigned int v26 = a2;
      }
      unsigned int *v23 = v26;
      if (HIDWORD(qword_1008F29F0[134 * v6 + 13]))
      {
        int v35 = sub_1001F42A4((uint64_t)&v160);
        unsigned int v36 = v35 - sub_1001F42A4((uint64_t)&qword_1008F29F0[134 * v162 + 17]);
        unsigned int v6 = v162;
        __int16 v37 = &qword_1008F29F0[134 * v162];
        int v39 = *((_DWORD *)v37 + 26);
        uint64_t v38 = (unsigned int *)(v37 + 13);
        unsigned int v40 = (5 * v39 + v36) / 6;
        if (v39) {
          unsigned int v41 = v40;
        }
        else {
          unsigned int v41 = v36;
        }
        *uint64_t v38 = v41;
      }

      qword_1008F29F0[134 * v6 + 17] = v160;
      goto LABEL_31;
    }

    if ((_DWORD)a1 != 4)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"TS inputType %d", v27, v28, v29, v30, v31, v32, v33, a1);
        uint64_t v34 = (os_log_s *)sub_100086554(0x57u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      sub_1001EE2A0();
      unsigned int v6 = v162;
      goto LABEL_31;
    }

    if (BYTE4(qword_1008F29F0[134 * v6 + 55]))
    {
      unsigned int v21 = 1;
      goto LABEL_62;
    }
  }

  if (HIDWORD(qword_1008F29F0[134 * v6 + 13]) <= 0xA)
  {
    unsigned int v21 = sub_10008BDA8(a3, (int)v12 + (int)v11, v10, v10, v20, &v161);
    goto LABEL_62;
  }

LABEL_127:
    char v148 = 0;
    v153 = &qword_1008F29F0[134 * v162];
    *((_BYTE *)v153 + 78) = 0;
    *((_DWORD *)v153 + 30) = 0;
    goto LABEL_130;
  }

  int v136 = &qword_1008F29F0[134 * v162];
  int v138 = *((_DWORD *)v136 + 30);
  int v137 = v136 + 15;
  if (v138 == 2) {
    BYTE6(qword_1008F29F0[134 * v162 + 9]) = 0;
  }
  *int v137 = 1;
  unsigned int v139 = sub_10018BE60();
  unsigned int v133 = v162;
  if (v139 <= 0xE && !BYTE6(qword_1008F29F0[134 * v162 + 9]))
  {
    BOOL v140 = sub_10012D5EC(qword_1008F29F0[134 * v162]);
    unsigned int v133 = v162;
    if (v140)
    {
      sub_10011EA40((uint64_t)sub_10008C30C, qword_1008F29F0[134 * v162], v141, v142, v143, v144, v145, v146);
      unsigned int v133 = v162;
    }
  }

  termios v147 = &qword_1008F29F0[134 * v133];
  char v148 = *((_BYTE *)v147 + 78) + 1;
  *((_BYTE *)v147 + 78) = v148;
LABEL_130:
  if (!v161)
  {
    unsigned int v54 = v133;
LABEL_44:
    unsigned int v21 = v20;
    goto LABEL_57;
  }

  if ((v148 & 0xFC) == 0) {
    unsigned int v21 = v20;
  }
  unsigned int v54 = v133;
LABEL_57:
  if (!LOBYTE(qword_1008F29F0[134 * v54 + 133]))
  {
LABEL_62:
    if (v21 == (_DWORD)v20)
    {
LABEL_63:
      char v69 = 1;
      unsigned int v156 = v20;
      goto LABEL_76;
    }

    unsigned int v70 = v162;
    uint64_t v71 = &qword_1008F29F0[134 * v162];
    *((_BYTE *)v71 + 78) = 0;
    *((_DWORD *)v71 + 29) = v21;
    *((_DWORD *)v71 + 30) = 0;
    int v72 = v161;
    if ((_DWORD)a1 == 2) {
      int v72 = v161 | 0x40;
    }
    unsigned int v156 = v21;
    *((_DWORD *)v71 + 28) = v72;
    if (*((_DWORD *)v71 + 40) != *((_DWORD *)v71 + 48)
      && WORD2(qword_1008F29F0[134 * v70 + 20]) != WORD2(qword_1008F29F0[134 * v70 + 24]))
    {
      uint64_t v157 = 0LL;
      sub_1000B080C((uint64_t)&v157);
      uint64_t v73 = (1000 * (v157 - LODWORD(qword_1008F29F0[134 * v162 + 20]))
                         - SWORD2(qword_1008F29F0[134 * v162 + 20])
                         + SWORD2(v157));
      if (v73 >> 2 < 0x465)
      {
LABEL_74:
        char v69 = 0;
        goto LABEL_76;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"TS connection timeout detected %d mseconds ago, allowing transport switch",  v74,  v75,  v76,  v77,  v78,  v79,  v80,  v73);
        uint64_t v81 = (os_log_s *)sub_100086554(0x57u);
        if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v82 = sub_1001EDDCC();
          *(_DWORD *)__int128 buf = 136446210;
          uint64_t v164 = v82;
          _os_log_impl((void *)&_mh_execute_header, v81, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      uint64_t v83 = &qword_1008F29F0[134 * dword_1008F29B4];
      uint64_t v84 = &qword_1008F29F0[134 * v162];
      *((_DWORD *)v84 + 40) = *((_DWORD *)v83 + 48);
      *((_WORD *)v84 + 82) = *((_WORD *)v83 + 98);
    }

    sub_1001EE6DC((uint64_t)sub_10008B004, 0LL, 0LL);
    goto LABEL_74;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Disabling upgrade due to failed security authentication, we'll retry later",  v60,  v61,  v62,  v63,  v64,  v65,  v66,  v154);
    uint64_t v67 = (os_log_s *)sub_100086554(0x57u);
    if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v68 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v164 = v68;
      _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }

    char v69 = 1;
    unsigned int v156 = v20;
  }

  else
  {
    char v69 = 1;
    unsigned int v156 = v20;
  }

  *(_WORD *)(a1 + 53) = 257;
  *(_BYTE *)(a1 + 145) = v76 != *(unsigned __int8 *)(a1 + 69) || v76 == 1 || !*(_BYTE *)(a1 + 146);
LABEL_132:
  if ((sub_100259E6C(a1, a2) & 1) == 0) {
    sub_10025A020(a1);
  }
}

  return v19;
}

LABEL_76:
  int v85 = sub_1001F42A4((uint64_t)&v160);
  int v86 = sub_1001F42A4((uint64_t)&qword_1008F29F0[134 * v162 + 18]);
  unsigned int v87 = v162;
  if (!(_DWORD)a1)
  {
    ++LODWORD(qword_1008F29F0[134 * v162 + 23]);
    LODWORD(qword_1008F29F0[134 * v162 + 21]) += sub_100137114(0);
    int v88 = sub_100137114(2);
    unsigned int v87 = v162;
    uint64_t v89 = &qword_1008F29F0[134 * v162];
    unsigned int v90 = *((_DWORD *)v89 + 43) + v88;
    unsigned int v91 = *((_DWORD *)v89 + 46);
    int v92 = *((_DWORD *)v89 + 42) / v91;
    *((_DWORD *)v89 + 43) = v90;
    *((_DWORD *)v89 + 44) = v92;
    *((_DWORD *)v89 + 45) = v90 / v91;
  }

  unsigned int v93 = v87;
  uint64_t v94 = &qword_1008F29F0[134 * v87];
  if (!*((_DWORD *)v94 + 18) || !qword_1008F29F0[134 * v87 + 8])
  {
    sub_1001EE134( (uint64_t)"Caps is null while upgrade request: lTsPeers[peerIndex].caps=%d.  peerIndex=%d Handle=0x%s",  v96,  v97,  v98,  v99,  v100,  v101,  v102,  qword_1008F29F0[134 * v162 + 8]);
    uint64_t v103 = (os_log_s *)sub_100086554(0x57u);
    if (!os_log_type_enabled(v103, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_100;
    }
    goto LABEL_99;
  }

  unsigned int v95 = v85 - v86;
  if ((v69 & 1) != 0)
  {
    if ((_DWORD)a1) {
      goto LABEL_91;
    }
  }

  else
  {
    if (sub_10008D8B4(*v94)) {
      goto LABEL_91;
    }
    if ((_DWORD)a1) {
      goto LABEL_91;
    }
    unsigned int v93 = v162;
    if (LODWORD(qword_1008F29F0[134 * v162 + 10]) != *(unsigned __int8 *)(qword_1008F29F0[134 * v162 + 8]
                                                                         + ((unint64_t)v156 << 6)
                                                                         + 1))
      goto LABEL_91;
  }

  if (v95 <= 0xF9F && !byte_1008DD3C1) {
    goto LABEL_102;
  }
LABEL_91:
  if (sub_10018BE60() <= 0xE && v95 >= 0xFA0)
  {
    uint64_t v110 = sub_10011EA40((uint64_t)sub_10008C30C, qword_1008F29F0[134 * v162], v104, v105, v106, v107, v108, v109);
    if ((_DWORD)v110)
    {
      uint64_t v111 = v110;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Read RSSI failed with status %!", v112, v113, v114, v115, v116, v117, v118, v111);
        __int128 v119 = (os_log_s *)sub_100086554(0x57u);
        if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }
    }
  }

  sub_1000B0400((uint64_t)&qword_1008F29F0[134 * v162 + 18]);
  uint64_t v155 = HIDWORD(qword_1008F29F0[134 * v162 + 13]);
  sub_100100080(qword_1008F29F0[134 * v162 + 10]);
  sub_100100080(HIDWORD(qword_1008F29F0[134 * v162 + 10]));
  sub_1001728A0();
  sub_100172858();
  sub_100137114(0);
  sub_100137114(2);
  sub_1001EE134( (uint64_t)"TS Assess [%d]: t {%d->%d, %d}, in {%s, %d, %d}, ewma {g %d, l %d, t %d}, req {%d, %d, %d}, rsn 0x%2x, cfm {%d, %s}, preq {%s, %s}, B {Tx %d TxQ %d, Rx %d}, Cav {%d, %d}, r %d, f %d, p %d, s %d",  v120,  v121,  v122,  v123,  v124,  v125,  v126,  v155);
  uint64_t v103 = (os_log_s *)sub_100086554(0x57u);
  if (!os_log_type_enabled(v103, OS_LOG_TYPE_DEFAULT)) {
    goto LABEL_100;
  }
LABEL_99:
  __int128 v127 = sub_1001EDDCC();
  *(_DWORD *)__int128 buf = 136446210;
  uint64_t v164 = v127;
  _os_log_impl((void *)&_mh_execute_header, v103, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
LABEL_100:
  if ((_DWORD)a1) {
    return;
  }
  unsigned int v93 = v162;
LABEL_102:
  __int128 v128 = &qword_1008F29F0[134 * v93];
  int v129 = *((_DWORD *)v128 + 27);
  if (v129 == -2) {
    int v130 = 10;
  }
  else {
    int v130 = v129 + 1;
  }
  *((_DWORD *)v128 + 27) = v130;
}

    sub_1000E63A0(a1, 5, a3, 0, v16);
    LODWORD(v46) = v59;
LABEL_77:
    sub_1000D88A0((void **)&v60, v46);
    return v16;
  }

  if (a4 != 3)
  {
    if (a4 != 2) {
      return 0LL;
    }
    unsigned int v21 = sub_1000E4B00(a3, a1);
    uint64_t v22 = v21;
    uint64_t v23 = qword_1008DFDB0;
    if ((_DWORD)v21)
    {
      if (*(unsigned __int8 *)(qword_1008DFDB0 + 97) > (unsigned __int16)(v21 - 1)
        && (int v24 = *(void *)(qword_1008DFDB0 + 8)) != 0
        && (int v25 = *(unsigned __int8 *)(v24 + 144LL * (unsigned __int16)(v21 - 1) + 136), v25 != 255)
        && *(void *)qword_1008DFDB0)
      {
        unsigned int v26 = *(void *)qword_1008DFDB0 + 40LL * v25;
        sub_1000D88A0((void **)(v26 + 8), *(unsigned __int8 *)(v26 + 31));
        uint64_t v16 = 0LL;
        uint64_t v27 = *(void *)(v26 + 16);
        *(_BYTE *)(v26 + 31) = *(_BYTE *)(v26 + 32);
        *(void *)(v26 + 8) = v27;
        *(void *)(v26 + 16) = 0LL;
        *(_BYTE *)(v26 + 32) = 0;
        uint64_t v23 = qword_1008DFDB0;
      }

      else
      {
        uint64_t v16 = 0LL;
      }
    }

    else
    {
      uint64_t v16 = 1LL;
    }

    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 + 24) + 144LL);
    if (v30)
    {
      uint64_t v31 = a3;
      uint64_t v32 = v22;
      uint64_t v33 = 0LL;
LABEL_73:
      v30(v31, v32, v33, v16);
      return v16;
    }

    return v16;
  }

  uint64_t v28 = sub_1000E4B00(a3, a1);
  if (!(_DWORD)v28)
  {
    uint64_t v34 = 0LL;
    uint64_t v16 = 1LL;
    goto LABEL_66;
  }

  if (*(_BYTE *)(a2 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3939,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*(_BYTE *)(a2 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    uint64_t v29 = *(unsigned __int8 *)(a2 + 14);
    *(_BYTE *)(a2 + 15) = 1;
    if (v29 != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3940,  "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_58;
  }

  uint64_t v47 = *(unsigned __int16 *)(a2 + 12);
  if (*(unsigned __int16 *)(a2 + 10) <= v47)
  {
    *(_BYTE *)(a2 + 15) = 1;
LABEL_58:
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    goto LABEL_59;
  }

  uint64_t v48 = *(void *)a2;
  *(_WORD *)(a2 + 12) = v47 + 1;
  if (*(unsigned __int16 *)(a2 + 10) <= (v47 + 1))
  {
LABEL_59:
    uint64_t v49 = 0;
    *(_BYTE *)(a2 + 15) = 1;
    uint64_t v51 = 17;
    goto LABEL_60;
  }

  uint64_t v49 = *(unsigned __int8 *)(v48 + v47);
  uint64_t v50 = *(void *)a2;
  *(_WORD *)(a2 + 12) = v47 + 2;
  uint64_t v51 = *(unsigned __int8 *)(v50 + v47 + 1);
LABEL_60:
  if (v51) {
    uint64_t v16 = v51;
  }
  else {
    uint64_t v16 = 24LL;
  }
  if (v51) {
    uint64_t v34 = v49;
  }
  else {
    uint64_t v34 = 0LL;
  }
LABEL_66:
  uint64_t v52 = qword_1008DFDB0;
  if (*(unsigned __int8 *)(qword_1008DFDB0 + 97) > (unsigned __int16)(v28 - 1))
  {
    uint64_t v53 = *(void *)(qword_1008DFDB0 + 8);
    if (v53)
    {
      if (*(unsigned __int8 *)(v53 + 144LL * (unsigned __int16)(v28 - 1) + 136) != 255LL && *(void *)qword_1008DFDB0)
      {
        unsigned int v54 = *(void *)qword_1008DFDB0 + 40LL * *(unsigned __int8 *)(v53 + 144LL * (unsigned __int16)(v28 - 1) + 136);
        sub_1000D88A0((void **)(v54 + 16), *(unsigned __int8 *)(v54 + 32));
        *(_BYTE *)(v54 + 32) = 0;
        uint64_t v52 = qword_1008DFDB0;
      }
    }
  }

  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 + 24) + 144LL);
  if (v30)
  {
    uint64_t v31 = a3;
    uint64_t v32 = v28;
    uint64_t v33 = v34;
    goto LABEL_73;
  }

  return v16;
}

  if (v29[39])
  {
    uint64_t v45 = (os_log_s *)qword_1008F75C8;
    if (os_log_type_enabled((os_log_t)qword_1008F75C8, OS_LOG_TYPE_DEFAULT))
    {
      if (v30 < 0) {
        uint64_t v29 = *(char **)v29;
      }
      sub_100494958(a2, (uint64_t)__p);
      if (v50 >= 0) {
        uint64_t v46 = __p;
      }
      else {
        uint64_t v46 = (void **)__p[0];
      }
      *(_DWORD *)__int128 buf = 136446466;
      uint64_t v53 = v29;
      unsigned int v54 = 2082;
      unsigned int v55 = v46;
      _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "Endpoint %{public}s on session %{public}s is already being unregistered",  buf,  0x16u);
      if (v50 < 0) {
        operator delete(__p[0]);
      }
    }

    unint64_t v11 = 10LL;
  }

  else
  {
    unint64_t v11 = sub_100245C58((uint64_t)a1, a2, (const void **)v29);
    if (!(_DWORD)v11)
    {
      uint64_t v47 = *(unsigned __int8 ***)(v13 + 40);
      uint64_t v48 = (char *)v47 - (char *)(v24 + 1);
      if (v47 != v24 + 1) {
        memmove(v24, v24 + 1, (char *)v47 - (char *)(v24 + 1));
      }
      *(void *)(v13 + 40) = (char *)v24 + v48;

      if (v29[23] < 0) {
        operator delete(*(void **)v29);
      }
      operator delete(v29);
      unint64_t v11 = 0LL;
    }
  }

      abort();
    }
  }

      *(void *)__int128 buf = 0LL;
      *(void *)&uint8_t buf[8] = 0LL;
      sub_100242F28((uint64_t)buf, a1);
      unsigned int v56 = *(_DWORD *)(a1 + 176);
      sub_100242FAC((uint64_t)buf);
      if (v56 == 22 || v56 == 17)
      {
        unsigned int v57 = sub_1003D2408(a1, (uint64_t)&v219);
        if ((_BYTE)v224 && v57) {
          std::string::operator=((std::string *)((char *)&v236 + 8), (const std::string *)((char *)&v224 + 8));
        }
      }

      goto LABEL_83;
    }

    v87[0] = 0LL;
    v87[1] = 0LL;
    sub_100242F28((uint64_t)v87, (uint64_t)&a1[7].i64[1]);
    memset(buf, 0, 24);
    sub_10042AC38(buf, (uint64_t)&a1[11].i64[1]);
    sub_100242F54((uint64_t)v87);
    int v35 = *(_DWORD *)(v12 + 24);
    int v85 = 0LL;
    int v86 = 0LL;
    unsigned int v36 = sub_1003D55EC((uint64_t)a2, (_DWORD *)&v86 + 1, &v86, &v85, (_DWORD *)&v85 + 1);
    __int16 v37 = (os_log_s *)qword_1008F7578;
    uint64_t v38 = os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT);
    if ((_DWORD)v38)
    {
      sub_1003CF00C((uint64_t)a2, __p);
      int v39 = v92 >= 0 ? __p : *(_BYTE **)__p;
      unsigned int v40 = sub_1003CF350(a2);
      unsigned int v41 = v85;
      BOOL v42 = sub_1003D2AF4((uint64_t)a2);
      *(_DWORD *)uint64_t v94 = 136447490;
      *(void *)&v94[4] = v39;
      *(_WORD *)&v94[12] = 1024;
      *(_DWORD *)&v94[14] = v40;
      *(_WORD *)&v94[18] = 1024;
      *(_DWORD *)&v94[20] = v36;
      *(_WORD *)&v94[24] = 1024;
      *(_DWORD *)&v94[26] = v41;
      *(_WORD *)&v94[30] = 1024;
      LODWORD(v95) = v42;
      WORD2(v95) = 1024;
      *(_DWORD *)((char *)&v95 + 6) = v35;
      _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "Handle query complete for device %{public}s isPaired %d deviceIDStatus %d pid 0x%x isAppleBluetooth %d mask 0x%x",  v94,  0x2Au);
      if (v92 < 0) {
        operator delete(*(void **)__p);
      }
    }

    if (!v36) {
      goto LABEL_92;
    }
    if (!sub_1003D5DA0((uint64_t)a2))
    {
      char v69 = (os_log_s *)qword_1008F7578;
      if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT))
      {
        sub_1003D0100((uint64_t)a2, (uint64_t)v94);
        unsigned int v70 = v94[23] >= 0 ? v94 : *(_BYTE **)v94;
        *(_DWORD *)__p = 136446466;
        *(void *)&__p[4] = "void BT::ServiceManager::handleQueryComplete(Device *, BTResult)";
        unsigned int v90 = 2082;
        unsigned int v91 = v70;
        _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_DEFAULT,  "%{public}s - Device “%{public}s” not supported on this platform, disconnecting",  __p,  0x16u);
        if ((v94[23] & 0x80000000) != 0) {
          operator delete(*(void **)v94);
        }
      }

      sub_100422B6C((uint64_t)a1, (uint64_t)a2, 0LL, 0, 11LL, 0LL, 0);
      uint64_t v71 = a1[6].i64[1];
      *(void *)uint64_t v94 = _NSConcreteStackBlock;
      *(void *)&v94[8] = 3221225472LL;
      *(void *)&v94[16] = sub_1004290CC;
      *(void *)&v94[24] = &unk_100886EE0;
      *(void *)&unsigned int v95 = a1;
      *((void *)&v95 + 1) = a2;
      uint64_t v96 = 1;
      sub_100405384(v71, v94);
      goto LABEL_161;
    }

    uint64_t v38 = sub_1003D2AF4((uint64_t)a2);
    uint64_t v43 = (_DWORD)v85 == 8207 ? v38 : 0;
    if (v43 == 1 && ((uint64_t v38 = sub_1003CF350(a2), !v35) ? (v44 = 1) : (v44 = v38), (v44 & 1) == 0))
    {
      uint64_t v73 = *(void *)&buf[8];
      uint64_t v74 = 0;
      if (*(uint8_t **)&buf[8] == buf)
      {
        uint64_t v82 = 109;
      }

      else
      {
        uint64_t v82 = 109;
        do
        {
          uint64_t v38 = *(void *)(v73 + 16);
          uint64_t v75 = *(_DWORD *)(v38 + 32);
          if (v75 == 0x80000 && (v35 & 0x80000) != 0)
          {
            uint64_t v77 = (*(uint64_t (**)(uint64_t, unsigned __int8 *))(*(void *)v38 + 80LL))(v38, a2);
            uint64_t v78 = (os_log_s *)qword_1008F7578;
            uint64_t v38 = os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT);
            if ((_DWORD)v38)
            {
              sub_1003CF00C((uint64_t)a2, __p);
              uint64_t v79 = __p;
              if (v92 < 0) {
                uint64_t v79 = *(_BYTE **)__p;
              }
              *(_DWORD *)uint64_t v94 = 136315650;
              *(void *)&v94[4] = v79;
              *(_WORD *)&v94[12] = 1024;
              *(_DWORD *)&v94[14] = v35;
              *(_WORD *)&v94[18] = 1024;
              *(_DWORD *)&v94[20] = v77;
              _os_log_impl( (void *)&_mh_execute_header,  v78,  OS_LOG_TYPE_DEFAULT,  "AACPFirst: Connecting AACP first for %s mask 0x%x with result %d",  v94,  0x18u);
              if (v92 < 0) {
                operator delete(*(void **)__p);
              }
            }

            if (v77 - 107 >= 2)
            {
              if (v77 == 303 || v77 == 0)
              {
                uint64_t v82 = 0;
              }

              else
              {
                uint64_t v81 = v82;
                if (v82 == 109) {
                  uint64_t v81 = v77;
                }
                uint64_t v82 = v81;
              }
            }

            uint64_t v74 = 1;
          }

          uint64_t v73 = *(void *)(v73 + 8);
        }

        while ((uint8_t *)v73 != buf);
      }

      uint64_t v45 = v74 & 1;
    }

    else
    {
LABEL_92:
      uint64_t v45 = 0;
      uint64_t v82 = 109;
    }

    uint64_t v46 = *(void *)&buf[8];
    if (*(uint8_t **)&buf[8] != buf)
    {
      uint64_t v47 = v45 ^ 1;
      do
      {
        uint64_t v48 = *(void *)(v46 + 16);
        uint64_t v49 = *(_DWORD *)(v48 + 32);
        if ((v49 & v35) == 0) {
          goto LABEL_139;
        }
        if (v49 == 0x80000) {
          uint64_t v50 = v47;
        }
        else {
          uint64_t v50 = 1;
        }
        if ((v50 & 1) == 0)
        {
          uint64_t v51 = (os_log_s *)qword_1008F7578;
          uint64_t v38 = os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT);
          if ((_DWORD)v38)
          {
            *(_DWORD *)uint64_t v94 = 67109120;
            *(_DWORD *)&v94[4] = v35;
            _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "AACPFirst: Skipping AACP Connection mask 0x%x",  v94,  8u);
          }

          goto LABEL_139;
        }

        if (v49 == 0x100000)
        {
          if ((sub_1004284B0(v38, a2) & 1) != 0)
          {
            uint64_t v52 = qword_1008F7578;
            uint64_t v38 = os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT);
            if ((_DWORD)v38)
            {
              sub_1003CF00C((uint64_t)a2, v94);
              uint64_t v53 = v94;
              if (v94[23] < 0) {
                uint64_t v53 = *(_BYTE **)v94;
              }
              *(_DWORD *)__p = 136315394;
              *(void *)&__p[4] = v53;
              unsigned int v90 = 1024;
              LODWORD(v91) = v35;
              unsigned int v54 = (os_log_s *)v52;
              unsigned int v55 = "Skipping CATT Connection for device %s with mask 0x%x";
LABEL_114:
              _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, v55, __p, 0x12u);
              if ((v94[23] & 0x80000000) != 0) {
                operator delete(*(void **)v94);
              }
              goto LABEL_139;
            }

            goto LABEL_139;
          }

          uint64_t v49 = *(_DWORD *)(v48 + 32);
        }

        if (v49 != 512)
        {
          unsigned int v58 = (*(uint64_t (**)(uint64_t, unsigned __int8 *))(*(void *)v48 + 80LL))(v48, a2);
          unsigned int v59 = (os_log_s *)qword_1008F7578;
          uint64_t v38 = os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT);
          if ((_DWORD)v38)
          {
            sub_1003D0100((uint64_t)a2, (uint64_t)__p);
            if (v92 >= 0) {
              uint64_t v60 = __p;
            }
            else {
              uint64_t v60 = *(_BYTE **)__p;
            }
            if (*(char *)(v48 + 31) < 0)
            {
              sub_100024238(__dst, *(void **)(v48 + 8), *(void *)(v48 + 16));
            }

            else
            {
              uint64_t v61 = *(_OWORD *)(v48 + 8);
              uint64_t v84 = *(void *)(v48 + 24);
              *(_OWORD *)__dst = v61;
            }

            uint64_t v62 = __dst;
            if (v84 < 0) {
              uint64_t v62 = (void **)__dst[0];
            }
            *(_DWORD *)uint64_t v94 = 67109634;
            *(_DWORD *)&v94[4] = v58;
            *(_WORD *)&v94[8] = 2080;
            *(void *)&v94[10] = v60;
            *(_WORD *)&v94[18] = 2080;
            *(void *)&v94[20] = v62;
            _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEFAULT,  "Connection Result %d for device %s for service %s",  v94,  0x1Cu);
            if (SHIBYTE(v84) < 0) {
              operator delete(__dst[0]);
            }
            if (v92 < 0) {
              operator delete(*(void **)__p);
            }
          }

          if (v58 - 107 >= 2)
          {
            if (v58 == 303 || v58 == 0)
            {
              uint64_t v82 = 0;
            }

            else
            {
              uint64_t v64 = v82;
              if (v82 == 109) {
                uint64_t v64 = v58;
              }
              uint64_t v82 = v64;
            }
          }

          goto LABEL_139;
        }

        unsigned int v56 = qword_1008F7578;
        uint64_t v38 = os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT);
        if ((_DWORD)v38)
        {
          sub_1003CF00C((uint64_t)a2, v94);
          unsigned int v57 = v94;
          if (v94[23] < 0) {
            unsigned int v57 = *(_BYTE **)v94;
          }
          *(_DWORD *)__p = 136315394;
          *(void *)&__p[4] = v57;
          unsigned int v90 = 1024;
          LODWORD(v91) = v35;
          unsigned int v54 = (os_log_s *)v56;
          unsigned int v55 = "Skipping outgoing MAP Connection for device %s with mask 0x%x";
          goto LABEL_114;
        }

        __p[0] = &v55;
        sub_1002077E0((void ***)__p);
        return;
      case 3:
        ++v14;
        if (*(_BYTE *)(v13 + 12))
        {
          *a4 |= 1u;
          sub_100206844(v51, 0);
          goto LABEL_56;
        }

        uint64_t v33 = qword_1008F7598;
        if (!os_log_type_enabled((os_log_t)qword_1008F7598, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
        sub_10046DE34(v13, __p);
        uint64_t v34 = __p;
        if (v54 < 0) {
          uint64_t v34 = (void **)__p[0];
        }
        *(_DWORD *)__int128 buf = 136315138;
        unsigned int v59 = v34;
        unint64_t v20 = (os_log_s *)v33;
        unsigned int v21 = "Invalid call status - dialed calls should be outgoing only: %s";
        goto LABEL_54;
      case 4:
        ++v14;
        if (*(_BYTE *)(v13 + 12))
        {
          uint64_t v30 = *a4 | 2;
          goto LABEL_38;
        }

        unsigned int v36 = qword_1008F7598;
        if (!os_log_type_enabled((os_log_t)qword_1008F7598, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
        sub_10046DE34(v13, __p);
        __int16 v37 = __p;
        if (v54 < 0) {
          __int16 v37 = (void **)__p[0];
        }
        *(_DWORD *)__int128 buf = 136315138;
        unsigned int v59 = v37;
        unint64_t v20 = (os_log_s *)v36;
        unsigned int v21 = "Invalid call status - alerting calls should be outgoing only: %s";
        goto LABEL_54;
      case 5:
        if (!*(_BYTE *)(v13 + 12))
        {
          int v35 = 4;
          goto LABEL_49;
        }

        int v24 = qword_1008F7598;
        if (!os_log_type_enabled((os_log_t)qword_1008F7598, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
        sub_10046DE34(v13, __p);
        int v25 = __p;
        if (v54 < 0) {
          int v25 = (void **)__p[0];
        }
        *(_DWORD *)__int128 buf = 136315138;
        unsigned int v59 = v25;
        unint64_t v20 = (os_log_s *)v24;
        unsigned int v21 = "Invalid call status - found incoming call tagged as outgoing: %s";
        goto LABEL_54;
      case 6:
        if (!*(_BYTE *)(v13 + 12))
        {
          int v35 = 8;
LABEL_49:
          *a4 |= v35;
          sub_10054A44C(a9, v13 + 24);
          std::string::operator=(a10, (const std::string *)(v13 + 80));
          goto LABEL_56;
        }

        uint64_t v31 = qword_1008F7598;
        if (!os_log_type_enabled((os_log_t)qword_1008F7598, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
        sub_10046DE34(v13, __p);
        uint64_t v32 = __p;
        if (v54 < 0) {
          uint64_t v32 = (void **)__p[0];
        }
        *(_DWORD *)__int128 buf = 136315138;
        unsigned int v59 = v32;
        unint64_t v20 = (os_log_s *)v31;
        unsigned int v21 = "Invalid call status - waiting calls should be incoming only: %s";
        goto LABEL_54;
      case 7:
        if (*(_BYTE *)(v13 + 12))
        {
          *a3 = 1;
          uint64_t v30 = *a4 | 1;
LABEL_38:
          *a4 = v30;
          goto LABEL_56;
        }

        uint64_t v38 = qword_1008F7598;
        if (!os_log_type_enabled((os_log_t)qword_1008F7598, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
        sub_10046DE34(v13, __p);
        int v39 = __p;
        if (v54 < 0) {
          int v39 = (void **)__p[0];
        }
        *(_DWORD *)__int128 buf = 136315138;
        unsigned int v59 = v39;
        unint64_t v20 = (os_log_s *)v38;
        unsigned int v21 = "Invalid call status - visualVoicemail calls should be outgoing only: %s";
        goto LABEL_54;
      default:
        unsigned int v26 = qword_1008F7598;
        if (!os_log_type_enabled((os_log_t)qword_1008F7598, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
        sub_10046DE34(v13, __p);
        uint64_t v27 = __p;
        if (v54 < 0) {
          uint64_t v27 = (void **)__p[0];
        }
        *(_DWORD *)__int128 buf = 136315138;
        unsigned int v59 = v27;
        unint64_t v20 = (os_log_s *)v26;
        unsigned int v21 = "Invalid call status - unknown type: %s";
        goto LABEL_54;
    }
  }

  uint64_t v27 = sub_1002E6E00();
  sub_10002418C(buf, "CoexConnectionScanParameters");
  sub_10002418C(__p, "CoexConnectionScanIntervalWithoutAudio");
  uint64_t v28 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, int *))(*(void *)v27 + 88LL))(v27, buf, __p, &v172);
  if (v171 < 0) {
    operator delete(__p[0]);
  }
  if (v175 < 0)
  {
    operator delete(*(void **)buf);
    if (!v28) {
      goto LABEL_88;
    }
  }

  else if (!v28)
  {
    goto LABEL_88;
  }

  uint64_t v29 = v172;
  uint64_t v30 = (os_log_s *)qword_1008F7620;
  if (v172)
  {
    if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 134217984;
      *(double *)&uint8_t buf[4] = (double)v29 * 0.625;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "Warning: Override fFastConnectionScanIntervalMsCoexCarPlayNoAudio=%fms",  buf,  0xCu);
      LOWORD(v29) = v172;
    }

    *(_WORD *)(a1 + 270) = v29;
  }

  else if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_ERROR))
  {
    sub_100696D5C();
  }

uint64_t sub_10008AC10(uint64_t result, int a2, int a3)
{
  dword_1008DD3B4 = a2;
  dword_1008DD3B8 = a3;
  dword_1008DD3BC = result;
  return result;
}

void sub_10008AC2C(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Setting link requirement hint for peer to %d pps, %d Bps input, %d Bps output, clientHighPowerAssertion set to %d",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  a2);
    int v17 = (os_log_s *)sub_100086554(0x57u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      BOOL v42 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (dword_1008F29B4)
  {
    uint64_t v18 = 0LL;
    unsigned __int16 v19 = 0;
    while (qword_1008F29F0[v18] != a1)
    {
      ++v19;
      v18 += 134LL;
    }

    int v20 = dword_1008DD3BC;
    int v21 = dword_1008DD3B4;
    if (dword_1008DD3BC | dword_1008DD3B4 | dword_1008DD3B8)
    {
      int v22 = dword_1008DD3B8;
    }

    else
    {
      int v20 = a2;
      int v21 = a3;
      int v22 = a4;
    }

    uint64_t v23 = &qword_1008F29F0[v18];
    *((_DWORD *)v23 + 55) = v22;
    *((_DWORD *)v23 + 56) = v20;
    *((_DWORD *)v23 + 54) = v21;
    if ((((HIBYTE(qword_1008F29F0[v18 + 55]) == 0) ^ a5) & 1) == 0)
    {
      *((_BYTE *)v23 + 447) = a5;
      if (!*((_BYTE *)v23 + 10)) {
        goto LABEL_22;
      }
      int v24 = &qword_1008F29F0[v18];
      uint64_t v25 = LODWORD(qword_1008F29F0[v18 + 9]);
      if (!(_DWORD)v25) {
        goto LABEL_22;
      }
      uint64_t v26 = 0LL;
      uint64_t v27 = v24[8];
      int v28 = *((unsigned __int8 *)v24 + 76);
      uint64_t v29 = (unsigned __int8 *)(v27 + 1);
      while (1)
      {
        int v30 = *v29;
        v29 += 64;
        if (v30 == v28) {
          break;
        }
        if (v25 == ++v26) {
          goto LABEL_22;
        }
      }

      if (v26 == 2LL)
      {
        uint64_t v31 = sub_1001007C4((uint64_t)&qword_1008F29F0[v18]);
        if (sub_10012D514(v31))
        {
          sub_1000FFF6C(*((_BYTE *)v23 + 447) != 0);
          BYTE6(qword_1008F29F0[v18 + 55]) = 0;
        }

        else if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Invalid connection handle", v32, v33, v34, v35, v36, v37, v38, v40);
          int v39 = (os_log_s *)sub_100086554(0x57u);
          if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }
      }

      else
      {
LABEL_22:
        BYTE6(qword_1008F29F0[v18 + 55]) = 1;
      }
    }

    sub_100089F9C(1LL, 0, v19);
  }

uint64_t sub_10008AE94(uint64_t result)
{
  int v1 = dword_1008DD3BC;
  int v2 = dword_1008DD3B4;
  if (dword_1008DD3BC) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = dword_1008DD3B4 == 0;
  }
  if (!v3 || dword_1008DD3B8 != 0)
  {
    uint64_t v5 = &qword_1008F29F0[134 * result];
    *((_DWORD *)v5 + 55) = dword_1008DD3B8;
    *((_DWORD *)v5 + 56) = v1;
    *((_DWORD *)v5 + 54) = v2;
  }

  return result;
}

void sub_10008AED8(uint64_t a1, int a2, int a3, int a4)
{
  if (dword_1008F29B4)
  {
    uint64_t v4 = 0LL;
    for (uint64_t i = &dword_1008F2AD4; *(void *)(i - 57) != a1; i += 268)
    {
      if (dword_1008F29B4 == ++v4) {
        return;
      }
    }

    int v6 = dword_1008DD3B4;
    int v7 = dword_1008DD3B8;
    if (dword_1008DD3BC) {
      BOOL v8 = 0;
    }
    else {
      BOOL v8 = dword_1008DD3B4 == 0;
    }
    if (v8 && dword_1008DD3B8 == 0)
    {
      int *i = a2;
    }

    else
    {
      *(i - 1) = dword_1008DD3BC;
      a3 = v6;
      a4 = v7;
    }

    *(i - 3) = a3;
    *(i - 2) = a4;
    sub_100089F9C(1LL, 0, (unsigned __int16)v4);
  }

void sub_10008AF68()
{
  unint64_t v0 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    unint64_t v1 = 0LL;
    int v2 = qword_1008F29F0;
    do
    {
      *((_WORD *)v2 + 223) = 0;
      v2[27] = 0LL;
      v2[28] = 0LL;
      if (*v2)
      {
        sub_100089F9C(1LL, 0, (unsigned __int16)v1);
        unint64_t v0 = dword_1008F29B4;
      }

      ++v1;
      v2 += 134;
    }

    while (v1 < v0);
  }

uint64_t sub_10008AFD8(uint64_t result)
{
  byte_1008DD3C0 = result;
  return result;
}

uint64_t sub_10008AFE4(uint64_t result)
{
  byte_1008DD3C1 = result;
  return result;
}

uint64_t sub_10008AFF0()
{
  return sub_1001EE6DC((uint64_t)sub_10008B004, 0LL, 0LL);
}

void sub_10008B004()
{
  if (dword_1008F29B4)
  {
    for (unint64_t i = 0LL; i < dword_1008F29B4; ++i)
    {
      unint64_t v1 = &qword_1008F29F0[134 * i];
      int v2 = (unsigned int *)(v1 + 9);
      if (*((_DWORD *)v1 + 18))
      {
        BOOL v3 = &qword_1008F29F0[134 * i];
        int v6 = *((_DWORD *)v3 + 12);
        uint64_t v5 = (int *)(v3 + 6);
        int v4 = v6;
        if (v6 == 11)
        {
          int v7 = (unsigned __int16 *)sub_1001007C4((uint64_t)&qword_1008F29F0[134 * i]);
          if (sub_10012D514((uint64_t)v7)
            || sub_10012D5BC((uint64_t)v7)
            || sub_10012D5EC((uint64_t)v7)
            || sub_10012D61C((uint64_t)v7))
          {
            if (!sub_100135FB0((uint64_t)v7))
            {
              if (sub_10008D8B4(*v1))
              {
                sub_1000FF06C((unsigned __int16 *)*v1, qword_1008F29F0[134 * i + 14]);
              }

              else
              {
                if (sub_10012D61C((uint64_t)v7) && byte_1008F29B0)
                {
                  uint64_t v8 = 0LL;
                  unint64_t v9 = 1LL;
                  while (*((_DWORD *)v7 + 14) != *(unsigned __int8 *)(qword_1008F29A8 + v8))
                  {
                    if (sub_10012D61C((uint64_t)v7))
                    {
                      v8 += 64LL;
                    }

                    goto LABEL_46;
                  }

                  uint64_t v33 = *(void (**)(void))(qword_1008F29A8 + v8 + 48);
                  if (v33) {
                    v33(*v7);
                  }
                }

void sub_10008B5D8()
{
  if (dword_1008F29B4)
  {
    unint64_t v0 = 0LL;
    unint64_t v1 = (unsigned int *)&dword_1008F2BA8;
    do
    {
      if (sub_1001EE9D8(*v1)) {
        sub_1001EEB14(*v1);
      }
      ++v0;
      v1 += 268;
    }

    while (v0 < dword_1008F29B4);
  }

BOOL sub_10008B640(unsigned int a1, unsigned int a2)
{
  return *(_DWORD *)(qword_1008F29F0[134 * a1 + 8] + ((unint64_t)a2 << 6) + 20) < SHIDWORD(qword_1008F29F0[134 * a1 + 23]);
}

void sub_10008B670(uint64_t a1, unsigned int a2, int a3)
{
  if (dword_1008F29B4)
  {
    unsigned int v3 = 0;
    for (unint64_t i = &qword_1008F2A00; ; i += 134)
    {
      unsigned int v5 = v3;
      uint64_t v6 = qword_1008F29F0[134 * v3];
      if (v6 == a1) {
        break;
      }
      uint64_t v7 = BYTE2(qword_1008F29F0[134 * v5 + 1]);
      uint64_t v8 = i;
      if (BYTE2(qword_1008F29F0[134 * v5 + 1]))
      {
        while (*v8 != a1)
        {
          v8 += 2;
          if (!--v7) {
            goto LABEL_9;
          }
        }

        if (v6) {
          goto LABEL_12;
        }
      }

void sub_10008B740(uint64_t a1)
{
  if (dword_1008F29B4)
  {
    unsigned int v1 = 0;
    for (unint64_t i = &qword_1008F2A00; ; i += 134)
    {
      uint64_t v3 = v1;
      int v4 = &qword_1008F29F0[134 * v1];
      uint64_t v5 = *v4;
      if (*v4 == a1) {
        break;
      }
      uint64_t v6 = BYTE2(qword_1008F29F0[134 * v3 + 1]);
      uint64_t v7 = i;
      if (BYTE2(qword_1008F29F0[134 * v3 + 1]))
      {
        while (*v7 != a1)
        {
          v7 += 2;
          if (!--v6) {
            goto LABEL_9;
          }
        }

        if (v5) {
          goto LABEL_12;
        }
      }

void sub_10008B8DC(uint64_t a1)
{
  if (dword_1008F29B4)
  {
    uint64_t v1 = a1;
    uint64_t v2 = 0LL;
    for (unint64_t i = &qword_1008F2A00; ; i += 134)
    {
      int v4 = &qword_1008F29F0[134 * v2];
      uint64_t v5 = *v4;
      if (*v4 == a1) {
        break;
      }
      uint64_t v6 = BYTE2(qword_1008F29F0[134 * v2 + 1]);
      uint64_t v7 = i;
      if (BYTE2(qword_1008F29F0[134 * v2 + 1]))
      {
        while (*v7 != a1)
        {
          v7 += 2;
          if (!--v6) {
            goto LABEL_9;
          }
        }

        if (v5)
        {
          uint64_t v1 = *v4;
          goto LABEL_14;
        }
      }

void sub_10008BA7C(uint64_t a1)
{
  unsigned int v13 = 0;
  if (dword_1008F29B4)
  {
    unsigned int v2 = 0;
    uint64_t v11 = &v15;
    v12[0] = 0LL;
    do
    {
      if (qword_1008F29F0[134 * v2] == a1)
      {
        v12[1] = &v13;
        LOWORD(v12[0]) = 4;
        if (sub_1001EE6E8((uint64_t)sub_10008BBE0, v12, 20, (int *)&qword_1008F29F0[134 * v2 + 133] + 1))
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"TS disable upgrade timer registration failed",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  (uint64_t)v11);
            uint64_t v10 = (os_log_s *)sub_100086554(0x57u);
            if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
              sub_100657EA4(v14, v11, v10);
            }
          }
        }

        else
        {
          LOBYTE(qword_1008F29F0[134 * v13 + 133]) = 1;
        }
      }

      unsigned int v2 = v13 + 1;
      unsigned int v13 = v2;
    }

    while (v2 < dword_1008F29B4);
  }

void sub_10008BBE0(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = **(unsigned __int16 **)(a1 + 8);
    if ((sub_1000A86F0() & 1) != 0)
    {
      sub_1001EE134((uint64_t)"Re-Enabling TS upgrades for peer %d", v2, v3, v4, v5, v6, v7, v8, v1);
      uint64_t v9 = (os_log_s *)sub_100086554(0x57u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        int v23 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    uint64_t v10 = &qword_1008F29F0[134 * v1];
    *((_BYTE *)v10 + 1064) = 0;
    *((_DWORD *)v10 + 267) = 0;
  }

  else
  {
    if (dword_1008F29B4)
    {
      uint64_t v11 = 0LL;
      int v12 = 0;
      do
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Re-Enabling TS upgrades for peer %d because we can't find peer.",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  v11);
          int v20 = (os_log_s *)sub_100086554(0x57u);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v21 = sub_1001EDDCC();
            *(_DWORD *)__int128 buf = 136446210;
            int v23 = v21;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        LOBYTE(qword_1008F29F0[134 * (unsigned __int16)v12++ + 133]) = 0;
        uint64_t v11 = (unsigned __int16)v12;
      }

      while (dword_1008F29B4 > (unsigned __int16)v12);
    }

    sub_1001EE2A0();
  }

uint64_t sub_10008BDA8( unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unint64_t a5, int *a6)
{
  uint64_t v6 = a6;
  if (!a6) {
    sub_1001EE2A0();
  }
  int v12 = &qword_1008F29F0[134 * a1];
  uint64_t v14 = (unsigned int *)(v12 + 9);
  unsigned int v13 = *((_DWORD *)v12 + 18);
  if (v13 < a5) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_TS_Switching.c",  317,  "currentTransport <= lTsPeers[peerIndex].nbCaps");
  }
  unsigned int v15 = a1;
  if (BYTE4(qword_1008F29F0[134 * a1 + 55])) {
    return 1LL;
  }
  if (!v13)
  {
    int v27 = 16;
    unint64_t v16 = a5;
    goto LABEL_26;
  }

  uint64_t v47 = v6;
  unint64_t v17 = a5;
  uint64_t v18 = 0LL;
  unint64_t v16 = 0LL;
  uint64_t v19 = &qword_1008F29F0[134 * a1];
  int v20 = v19 + 8;
  uint64_t v21 = v19 + 13;
  int v46 = v17;
  unint64_t v22 = v17;
  while (!sub_10008C384(a1, v16))
  {
LABEL_21:
    ++v16;
    v18 += 64LL;
    if (v16 >= *v14)
    {
      int v27 = 16;
      unint64_t v16 = v22;
      goto LABEL_25;
    }
  }

  uint64_t v23 = *v20 + v18;
  unsigned int v24 = *(_DWORD *)(v23 + 4);
  if (*(unsigned __int16 *)(v23 + 8) <= a3)
  {
    if (v24 >= a2) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }

  if (*v21 - 1 >= a4 || v24 >> 1 <= a2 || v24 < a2)
  {
LABEL_20:
    unint64_t v22 = v16;
    goto LABEL_21;
  }

void sub_10008C034(uint64_t a1)
{
  if (a1)
  {
    v41[0] = 0LL;
    unsigned __int16 v42 = **(_WORD **)(a1 + 8);
    uint64_t v1 = v42;
    if (BYTE2(qword_1008F29F0[134 * v42 + 1]) && (uint64_t v2 = LODWORD(qword_1008F29F0[134 * v42 + 9]), (_DWORD)v2))
    {
      uint64_t v3 = 0LL;
      uint64_t v4 = &qword_1008F29F0[134 * v42];
      uint64_t v5 = v4[8];
      int v6 = *((unsigned __int8 *)v4 + 76);
      uint64_t v7 = (unsigned __int8 *)(v5 + 1);
      while (1)
      {
        int v8 = *v7;
        v7 += 64;
        if (v8 == v6) {
          break;
        }
        if (v2 == ++v3) {
          goto LABEL_7;
        }
      }
    }

    else
    {
LABEL_7:
      LODWORD(v3) = 0;
    }

    uint64_t v9 = &qword_1008F29F0[134 * v42];
    v9[13] = 0LL;
    *((_DWORD *)v9 + 25) = 0;
    int v10 = sub_1000A86F0();
    if ((_DWORD)v3)
    {
      if (v10)
      {
        sub_1001EE134( (uint64_t)"Restarting TS Idle timer peer %d due to currentTransport %d",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  v1);
        uint64_t v18 = (os_log_s *)sub_100086554(0x57u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136446210;
          BOOL v44 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      v41[1] = &v42;
      LOWORD(v41[0]) = 2;
      if (sub_1001EE6E8( (uint64_t)sub_10008C034,  v41,  30,  (int *)&qword_1008F29F0[134 * v1 + 55]))
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"TS Idle timer registration failed", v19, v20, v21, v22, v23, v24, v25, v40);
          uint64_t v26 = (os_log_s *)sub_100086554(0x57u);
          if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }
      }

      uint64_t v27 = BYTE2(qword_1008F29F0[134 * v42 + 1]);
      if (BYTE2(qword_1008F29F0[134 * v42 + 1]))
      {
        unsigned int v28 = &qword_1008F29F0[134 * v42];
        unsigned int v29 = v28 + 12;
        int v30 = v28 + 3;
        do
        {
          if (*v30 != 1)
          {
            uint64_t v31 = *((void *)v30 - 1);
            if (v31)
            {
            }
          }

          v30 += 16;
          --v27;
        }

        while (v27);
      }

      sub_100089F9C(2LL, 0LL);
    }

    else if (v10)
    {
      sub_100137114(0);
      sub_100137114(2);
      sub_1001EE134( (uint64_t)"TS idle expiration for peer %d with transport %d, avail [acl %d, le %d]",  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v1);
      unsigned int v39 = (os_log_s *)sub_100086554(0x57u);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        BOOL v44 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }

  else
  {
    sub_1001EE2A0();
  }

void sub_10008C30C(uint64_t a1, uint64_t a2, int a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Read RSSI CB signaling failed with status %!", v4, v5, v6, v7, v8, v9, v10, a1);
      uint64_t v11 = (os_log_s *)sub_100086554(0x57u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  else
  {
    sub_1000FF658(a2, a3);
  }

BOOL sub_10008C384(unsigned int a1, unsigned int a2)
{
  if (LODWORD(qword_1008F29F0[134 * a1 + 9]) <= a2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_TS_Switching.c",  300,  "lTsPeers[peerIndex].nbCaps > techIndex");
  }
  uint64_t v3 = qword_1008F29F0[134 * a1 + 8];
  unint64_t v4 = v3 + ((unint64_t)a2 << 6);
  if (!*(_BYTE *)(v4 + 2) || !byte_1008F29B0) {
    return 0LL;
  }
  int v5 = *(unsigned __int8 *)(v4 + 1);
  if (*(unsigned __int8 *)(qword_1008F29A8 + 1) != v5)
  {
    unint64_t v6 = 0LL;
    uint64_t v8 = (unsigned __int8 *)(qword_1008F29A8 + 65);
    while (byte_1008F29B0 - 1LL != v6)
    {
      int v9 = *v8;
      v8 += 64;
      ++v6;
      if (v9 == v5)
      {
        BOOL v7 = v6 < byte_1008F29B0;
        goto LABEL_10;
      }
    }

    return 0LL;
  }

  unint64_t v6 = 0LL;
  BOOL v7 = 1;
LABEL_10:
  BOOL result = 0LL;
  if (v7)
  {
    if (*(_BYTE *)(qword_1008F29A8 + (v6 << 6) + 2)) {
      return *(_DWORD *)(v3 + ((unint64_t)a2 << 6) + 20) <= SHIDWORD(qword_1008F29F0[134 * a1 + 23]);
    }
  }

  return result;
}

  ;
}

uint64_t sub_10008C490()
{
  dword_1008DD3C4 = 0;
  return sub_10008C4A0(0LL);
}

void sub_10008C4A0(int a1)
{
  switch(dword_1008DD3C4)
  {
    case 0:
      if (dword_1008DD3CC) {
        dword_1008DD3CC = 0;
      }
      sub_100099530(&dword_1008DD3D0);
      sub_100099530((unsigned int *)&dword_1008DD3D4);
      sub_100099530(&dword_1008DD3D8);
      sub_100098DB8(0LL);
      byte_1008DD3C9 = 0;
      byte_1008DD3C8 = 0;
LABEL_5:
      sub_100099514(6);
      int v1 = 2;
      goto LABEL_6;
    case 1:
      if (dword_1008DD3CC != 1) {
        dword_1008DD3CC = 1;
      }
      switch(a1)
      {
        case 1:
          sub_100099530((unsigned int *)&dword_1008DD3D4);
          goto LABEL_38;
        case 3:
          sub_100099530((unsigned int *)&dword_1008DD3D4);
          goto LABEL_55;
        case 6:
          goto LABEL_5;
        case 9:
          sub_100099530((unsigned int *)&dword_1008DD3D4);
          goto LABEL_5;
        default:
          return;
      }

      return;
    case 2:
      if (dword_1008DD3CC != 2) {
        dword_1008DD3CC = 2;
      }
      if (a1 == 3)
      {
        sub_100099514(7);
        goto LABEL_55;
      }

      if (a1 == 1) {
        goto LABEL_15;
      }
      return;
    case 3:
      if (dword_1008DD3CC != 3) {
        dword_1008DD3CC = 3;
      }
      switch(a1)
      {
        case 2:
          sub_100099514(5);
          sub_100099530(&dword_1008DD3D0);
          byte_1008DD3C9 = 0;
          sub_100099530(&dword_1008DD3D8);
          sub_1001EE6E8((uint64_t)sub_10008C96C, 0LL, 3, (int *)&dword_1008DD3D8);
          dword_1008DD3C4 = 5;
          break;
        case 5:
          if ((unsigned __int16)word_1008DD3DC >= 0x32u)
          {
            sub_100098DB8(1LL);
            sub_1000989D0();
            sub_100099514(6);
            int v1 = 4;
            goto LABEL_6;
          }

          sub_100099414();
          sub_1001EE6E8((uint64_t)sub_10008C95C, 0LL, 3, (int *)&dword_1008DD3D0);
          ++word_1008DD3DC;
          break;
        case 3:
          goto LABEL_56;
      }

      return;
    case 4:
      if (dword_1008DD3CC != 4)
      {
        dword_1008DD3CC = 4;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"H4DS has entered the PEER IDLE state, CSR chip not responding, bailing out",  v2,  v3,  v4,  v5,  v6,  v7,  v8,  v10);
          int v9 = (os_log_s *)sub_100086554(0x3Au);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
            sub_100657FDC(v9);
          }
        }

        sub_1000AFE20(632LL);
        sub_10008C92C();
        return;
      }

      if (a1 != 8) {
        return;
      }
      sub_100098DB8(0LL);
      sub_1000989E4();
LABEL_15:
      sub_100099514(7);
      goto LABEL_38;
    case 5:
      if (dword_1008DD3CC != 5) {
        dword_1008DD3CC = 5;
      }
      switch(a1)
      {
        case 7:
          if ((byte_1008DD3C9 & 1) != 0) {
            goto LABEL_51;
          }
          sub_1000994B8();
          int v1 = 6;
          goto LABEL_6;
        case 4:
          int v1 = 7;
          goto LABEL_6;
        case 3:
          sub_1000994B0();
          sub_100099530(&dword_1008DD3D8);
          sub_1001EE6E8((uint64_t)sub_10008C96C, 0LL, 3, (int *)&dword_1008DD3D8);
          break;
      }

      break;
    case 6:
      if (dword_1008DD3CC != 6) {
        dword_1008DD3CC = 6;
      }
      switch(a1)
      {
        case 4:
          sub_10008CA78();
          break;
        case 3:
LABEL_55:
          sub_100099414();
          sub_1001EE6E8((uint64_t)sub_10008C95C, 0LL, 3, (int *)&dword_1008DD3D0);
          word_1008DD3DC = 1;
          dword_1008DD3C4 = 3;
LABEL_56:
          sub_1000994B0();
          break;
        case 1:
LABEL_38:
          sub_100099414();
          sub_1001EE6E8((uint64_t)sub_10008C95C, 0LL, 3, (int *)&dword_1008DD3D0);
          word_1008DD3DC = 1;
          dword_1008DD3C4 = 3;
          break;
      }

      return;
    case 7:
      if (dword_1008DD3CC != 7) {
        dword_1008DD3CC = 7;
      }
      if (a1 == 7)
      {
        if ((byte_1008DD3C9 & 1) != 0)
        {
LABEL_51:
          byte_1008DD3C9 = 0;
          sub_10008CA3C();
        }

        else
        {
          sub_10008CA78();
          sub_1000994B8();
        }
      }

      else if (a1 == 3)
      {
        sub_1000994B0();
        sub_100099530(&dword_1008DD3D8);
        sub_1001EE6E8((uint64_t)sub_10008C96C, 0LL, 3, (int *)&dword_1008DD3D8);
        int v1 = 5;
LABEL_6:
        dword_1008DD3C4 = v1;
      }

      break;
    default:
      sub_100099568((uint64_t)"DS state machine invalid state");
      return;
  }

void sub_10008C92C()
{
  dword_1008DD3C4 = 6;
}

uint64_t sub_10008C93C()
{
  return sub_10008C4A0(1LL);
}

void sub_10008C944()
{
}

void sub_10008C94C()
{
}

void sub_10008C954()
{
}

uint64_t sub_10008C95C()
{
  return sub_10008C4A0(5LL);
}

uint64_t sub_10008C964()
{
  return sub_10008C4A0(6LL);
}

uint64_t sub_10008C96C()
{
  return sub_10008C4A0(7LL);
}

void sub_10008C974()
{
}

uint64_t sub_10008C97C()
{
  uint64_t result = sub_1000994C0();
  if ((_DWORD)result) {
    return sub_10008C4A0(9LL);
  }
  byte_1008DD3C8 = 1;
  return result;
}

uint64_t sub_10008C9AC()
{
  if (byte_1008DD3C8 == 1)
  {
    byte_1008DD3C8 = 0;
    return sub_1001EE6E8((uint64_t)sub_10008C97C, 0LL, 1, 0LL);
  }

  return result;
}

void sub_10008C9DC()
{
  byte_1008DD3C9 = 1;
}

BOOL sub_10008C9EC()
{
  return (dword_1008DD3C4 & 0xFFFFFFFD) == 5;
}

BOOL sub_10008CA04()
{
  return dword_1008DD3C4 == 3 || (dword_1008DD3C4 - 5) < 2;
}

BOOL sub_10008CA20()
{
  return (dword_1008DD3C4 & 0xFFFFFFFE) == 2;
}

uint64_t sub_10008CA3C()
{
  return sub_1001EE6E8((uint64_t)sub_10008C96C, 0LL, 3, (int *)&dword_1008DD3D8);
}

uint64_t sub_10008CA78()
{
  byte_1008DD3C8 = 0;
  sub_1001EE6E8((uint64_t)sub_10008C97C, 0LL, 1, 0LL);
  uint64_t result = sub_1001EE6E8((uint64_t)sub_10008C964, 0LL, 2, &dword_1008DD3D4);
  dword_1008DD3C4 = 1;
  return result;
}

uint64_t sub_10008CAD8(uint64_t a1, uint64_t a2)
{
  char v2 = byte_1008DD3E0;
  if (byte_1008DD3E0)
  {
    if (byte_1008DD3E0 == 10)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Can't add anymore Incoming Raw Data callbacks.", v3, v4, v5, v6, v7, v8, v9, v16);
        uint64_t v10 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 104LL;
    }

    else
    {
      uint64_t v12 = qword_1008DD3E8;
      uint64_t v13 = byte_1008DD3E0;
      while (*v12 != a1)
      {
        v12 += 2;
        if (!--v13) {
          goto LABEL_10;
        }
      }

      return 0LL;
    }
  }

  else
  {
LABEL_10:
    uint64_t v11 = 0LL;
    uint64_t v14 = &qword_1008DD3E8[2 * byte_1008DD3E0];
    uint64_t *v14 = a1;
    v14[1] = a2;
    byte_1008DD3E0 = v2 + 1;
  }

  return v11;
}

uint64_t sub_10008CB98(uint64_t a1)
{
  char v1 = byte_1008DD488;
  if (byte_1008DD488)
  {
    if (byte_1008DD488 == 10)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Can't add anymore CL Ready callbacks.", v2, v3, v4, v5, v6, v7, v8, v14);
        uint64_t v9 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 104LL;
    }

    else
    {
      uint64_t v11 = qword_1008DD490;
      uint64_t v12 = byte_1008DD488;
      while (*v11 != a1)
      {
        ++v11;
        if (!--v12) {
          goto LABEL_10;
        }
      }

      return 0LL;
    }
  }

  else
  {
LABEL_10:
    uint64_t v10 = 0LL;
    qword_1008DD490[byte_1008DD488] = a1;
    byte_1008DD488 = v1 + 1;
  }

  return v10;
}

uint64_t sub_10008CC54(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v5 = *a3;
  *a3 = 0LL;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Searching for LE Only pipes:", v6, v7, v8, v9, v10, v11, v12, v34);
    uint64_t v13 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!word_1008DD4E2) {
    return 0LL;
  }
  uint64_t v14 = 0LL;
  while (1)
  {
    uint64_t v15 = *((void *)&xmmword_1008DD4E8 + v14);
    if (*(void *)v15 == a1) {
      break;
    }
  }

  if (!*(_DWORD *)(v15 + 16)) {
    return 0LL;
  }
  uint64_t v16 = 0LL;
  while (1)
  {
    char v40 = 0;
    *(_OWORD *)__int128 buf = 0u;
    __int128 v39 = 0u;
    __memcpy_chk(buf, *(void *)(v15 + 8) + 88 * v16, *(unsigned int *)(*(void *)(v15 + 8) + 88 * v16 + 32), 33LL);
    uint64_t v17 = (unsigned __int16)word_1008DD568;
    if (word_1008DD568)
    {
      uint64_t v18 = (unsigned int *)(*(void *)(v15 + 8) + 88 * v16);
      size_t v19 = v18[8];
      uint64_t v20 = qword_1008DD570;
      while ((_DWORD)v19 != *((unsigned __int8 *)v20 + 8) || memcmp((const void *)*v20, v18, v19))
      {
        v20 += 9;
        if (!--v17) {
          goto LABEL_16;
        }
      }

      BOOL v21 = *((_BYTE *)v20 + 26) != 0;
    }

    else
    {
LABEL_16:
      BOOL v21 = 0;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"    peerID:%d channelID=0x%04x CID:0x%04x stayOnLe=%d name:%s priority:%d serviceID:%d peerSupportsLeOn lyPipes:%d listSize:%d(%d)",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  v14);
      unsigned int v29 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
        int v30 = sub_1001EDDCC();
        *(_DWORD *)uint64_t v36 = 136446210;
        uint64_t v37 = v30;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", v36, 0xCu);
      }
    }

    uint64_t v15 = *((void *)&xmmword_1008DD4E8 + v14);
    if (v21)
    {
      uint64_t v31 = *(void *)(*(void *)(v15 + 8) + 88 * v16 + 64);
      if (v31)
      {
        if ((*(_BYTE *)(v15 + 53) & 0x10) != 0)
        {
          unint64_t v32 = *a3;
          *(_WORD *)(a2 + 2 * *a3) = *(_WORD *)(v31 + 4);
          *a3 = v32 + 1;
          if (v32 + 1 > v5) {
            return 106LL;
          }
        }
      }
    }
  }

uint64_t sub_10008CF28(char a1, char a2)
{
  byte_1008DDC30 = a1;
  uint64_t v3 = sub_1001B7C4C((uint64_t)off_100881CF8);
  if ((_DWORD)v3)
  {
    uint64_t v4 = v3;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Failed to register LE GAP", v5, v6, v7, v8, v9, v10, v11, *(uint64_t *)v57);
      uint64_t v12 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return v4;
  }

  if (sub_1001732EC(0x3Au, 2, 16, 8u, &qword_1008DDC38, (uint64_t)sub_10008D294))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Failed to register L2CAP fixed channel",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  *(uint64_t *)v57);
      uint64_t v20 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001B7DDC((uint64_t)off_100881CF8);
  }

  byte_1008DDC40 = 0;
  qword_1008DDC48 = (uint64_t)sub_1001EC038((uint64_t)sub_10008D7B0, (uint64_t)sub_10008D7B8);
  sub_1001C87BC((__n128 *)off_100881D28);
  uint64_t v4 = v21;
  if ((_DWORD)v21)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Failed to register CL security.", v22, v23, v24, v25, v26, v27, v28, *(uint64_t *)v57);
      unsigned int v29 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EE2A0();
  }

  byte_1008DDC50 = a2;
  byte_1008DDC51 = 1;
  dword_1008DDC54 = 4129;
  if (dword_1008DDC58 == 42)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"This is a watch", v40, v41, v42, v43, v44, v45, v46, *(uint64_t *)v57);
      uint64_t v47 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)unsigned int v57 = 136446210;
        *(void *)&v57[4] = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, " %{public}s", v57, 0xCu);
      }
    }

    int v38 = dword_1008DDC54;
    int v39 = 2176;
  }

  else
  {
    if (dword_1008DDC58 != 12)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"This is a generic device", v49, v50, v51, v52, v53, v54, v55, *(uint64_t *)v57);
        int v56 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)unsigned int v57 = 136446210;
          *(void *)&v57[4] = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, " %{public}s", v57, 0xCu);
        }
      }

      goto LABEL_26;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"This is a phone", v30, v31, v32, v33, v34, v35, v36, *(uint64_t *)v57);
      uint64_t v37 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)unsigned int v57 = 136446210;
        *(void *)&v57[4] = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", v57, 0xCu);
      }
    }

    int v38 = dword_1008DDC54;
    int v39 = 1280;
  }

  dword_1008DDC54 = v38 | v39;
LABEL_26:
  if (sub_10010F2E4()) {
    dword_1008DDC54 |= 0x10u;
  }
  return v4;
}

void sub_10008D294(__int128 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  if (!a1) {
    return;
  }
  unsigned int v8 = sub_10008DE08((uint64_t)a1);
  if (!a2 || a3 <= 1)
  {
    sub_1001EE134((uint64_t)"Ignoring PDU size of %d", v12, v13, v14, v15, v16, v17, v18, a3);
    uint64_t v19 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_35;
  }

  unsigned int v9 = v8;
  uint64_t v10 = *a2;
  if ((_DWORD)a4 && (_DWORD)v10 != 145 && off_1008F29E8) {
    off_1008F29E8(a1, (unsigned __int16)v8, a3);
  }
  if ((v10 & 0xFE) == 8)
  {
    unsigned int v9 = a2[1];
    if ((_DWORD)a3 - 2 == v9)
    {
      unsigned int v11 = 2;
      goto LABEL_25;
    }

    sub_1001EE134( (uint64_t)"Ignoring PDU opcode %d with invalid length (%d expected, %d actual)",  v21,  v22,  v23,  v24,  v25,  v26,  v27,  v10);
    uint64_t v28 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_35:
    sub_100657858();
    return;
  }

  if (v9 == -1)
  {
    sub_1001EE134( (uint64_t)"Could not locate peer from handle %p with PDU opcode 0x%x",  v29,  v30,  v31,  v32,  v33,  v34,  v35,  (uint64_t)a1);
    uint64_t v36 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_35;
  }

  unsigned int v20 = *(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v9) + 48LL);
  LOWORD(v9) = a2[1];
  if (v20 < 8)
  {
    unsigned int v11 = 2;
  }

  else
  {
    LOWORD(v9) = v9 | (a2[2] << 8);
    unsigned int v11 = 3;
  }

  if ((_DWORD)a3 - v11 != (unsigned __int16)v9)
  {
    sub_1001EE134( (uint64_t)"Ignoring PDU opcode %d with invalid length (%d expected, %d actual) dataLength %d, expectedHeaderSize %d",  v37,  v38,  v39,  v40,  v41,  v42,  v43,  v10);
    uint64_t v44 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_35;
  }

void *sub_10008D7B0(void *a1, const void *a2, size_t __len)
{
  return memmove(a1, a2, __len);
}

uint64_t sub_10008D7BC(uint64_t a1)
{
  uint64_t v1 = (unsigned __int16)word_1008DD4E2;
  if (!word_1008DD4E2) {
    return 0LL;
  }
  for (unint64_t i = &xmmword_1008DD4E8; **(void **)i != a1; unint64_t i = (__int128 *)((char *)i + 8))
  {
    if (!--v1) {
      return 0LL;
    }
  }

  return (*(unsigned __int8 *)(*(void *)i + 52LL) >> 3) & 1;
}

void sub_10008D800()
{
  if (qword_1008DDC38) {
    sub_1001734D8(qword_1008DDC38);
  }
  sub_1001B7DDC((uint64_t)off_100881CF8);
  word_1008DD4E2 = 0;
  xmmword_1008DD4E8 = 0u;
  unk_1008DD4F8 = 0u;
  xmmword_1008DD508 = 0u;
  unk_1008DD518 = 0u;
  xmmword_1008DD528 = 0u;
  unk_1008DD538 = 0u;
  xmmword_1008DD548 = 0u;
  unk_1008DD558 = 0u;
  if (word_1008DD568)
  {
    unint64_t v0 = 0LL;
    uint64_t v1 = (void **)qword_1008DD570;
    do
    {
      uint64_t v2 = *v1;
      v1 += 9;
      sub_1000B1838(v2);
      ++v0;
    }

    while (v0 < (unsigned __int16)word_1008DD568);
  }

  bzero(qword_1008DD570, 0x6C0uLL);
  word_1008DD568 = 0;
}

void sub_10008D8A4()
{
  byte_1008DDC5C = 1;
}

BOOL sub_10008D8B4(uint64_t a1)
{
  if (sub_10012D5EC(a1)) {
    return !sub_1001B9B0C(a1);
  }
  BOOL result = sub_10012D514(a1);
  if (result) {
    return *(_BYTE *)(a1 + 144) == 0;
  }
  return result;
}

uint64_t sub_10008D900(uint64_t a1)
{
  if (sub_10012D5EC(a1)) {
    return sub_1001C8ECC(a1);
  }
  uint64_t result = sub_10012D514(a1);
  if ((_DWORD)result) {
    return sub_1001E64D0(a1);
  }
  return result;
}

uint64_t sub_10008D950(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    return sub_10012D5EC(result) || sub_10012D514(v1);
  }

  return result;
}

uint64_t sub_10008D98C(int a1, _DWORD *a2, _DWORD *a3)
{
  if (!word_1008DD4E2) {
    return 120LL;
  }
  uint64_t v3 = 0LL;
  while (1)
  {
    uint64_t v4 = *((void *)&xmmword_1008DD4E8 + v3);
    uint64_t v5 = *(unsigned int *)(v4 + 16);
    if ((_DWORD)v5) {
      break;
    }
LABEL_7:
  }

  uint64_t v6 = 0LL;
  uint64_t v7 = (unsigned __int16 *)(*(void *)(v4 + 8) + 52LL);
  while (1)
  {
    int v8 = *v7;
    v7 += 44;
    if (v8 == a1) {
      break;
    }
    if (v5 == ++v6) {
      goto LABEL_7;
    }
  }

  uint64_t result = 0LL;
  *a2 = v3;
  *a3 = v6;
  return result;
}

void sub_10008D9F8(unsigned int a1)
{
  if (!word_1008DD4E2) {
    goto LABEL_17;
  }
  uint64_t v2 = 0LL;
  while (1)
  {
    uint64_t v3 = *((void *)&xmmword_1008DD4E8 + v2);
    uint64_t v4 = *(unsigned int *)(v3 + 16);
    if ((_DWORD)v4) {
      break;
    }
LABEL_7:
  }

  uint64_t v5 = (unsigned __int16 *)(*(void *)(v3 + 8) + 52LL);
  while (1)
  {
    int v6 = *v5;
    v5 += 44;
    if (v6 == a1) {
      break;
    }
    if (!--v4) {
      goto LABEL_7;
    }
  }

  uint64_t v7 = *(void *)v3;
  if (*(void *)v3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Queue CID %d stalled, disconnecting", v8, v9, v10, v11, v12, v13, v14, a1);
      uint64_t v15 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    sub_1001EE348(3702LL);
    uint64_t v16 = sub_1001B7974(v7);
    if ((_DWORD)v16)
    {
      uint64_t v17 = v16;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Stall Monitor LE disconnect failed with status %!",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  v17);
        uint64_t v25 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          goto LABEL_19;
        }
      }
    }
  }

  else
  {
LABEL_17:
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Queue CID %d stalled disconnecting, but connection handle is no longer valid",  v26,  v27,  v28,  v29,  v30,  v31,  v32,  a1);
      uint64_t v33 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
LABEL_19:
      }
        sub_100657F74();
    }
  }

uint64_t sub_10008DB60(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10008DE08((uint64_t)a1);
  if ((_DWORD)v6 == -1)
  {
    sub_1001EE134((uint64_t)"SendTimeSyncRequest peerID is invalid", v16, v17, v18, v19, v20, v21, v22, (uint64_t)v57);
    uint64_t v23 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      return 414LL;
    }
LABEL_8:
    sub_100657858();
    return 414LL;
  }

  uint64_t v7 = v6;
  if (sub_10008D8B4((uint64_t)a1))
  {
    sub_1001EE134( (uint64_t)"Time sync should only be initiated by the peripheral.",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  (uint64_t)v57);
    uint64_t v15 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      return 414LL;
    }
    goto LABEL_8;
  }

  uint64_t v25 = *((void *)&xmmword_1008DD4E8 + v7);
  if (*(void *)(v25 + 56))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Time update already pending.", v26, v27, v28, v29, v30, v31, v32, (uint64_t)v57);
      uint64_t v33 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 116LL;
  }

  else
  {
    unsigned int v34 = *(unsigned __int8 *)(v25 + 48);
    if (v34 <= 7) {
      unsigned __int16 v35 = 2;
    }
    else {
      unsigned __int16 v35 = 3;
    }
    if (v34 <= 7) {
      size_t v36 = 2LL;
    }
    else {
      size_t v36 = 3LL;
    }
    uint64_t v37 = sub_1000B17F4(v36);
    if (v37)
    {
      uint64_t v38 = v37;
      unsigned int v57 = v37;
      unsigned __int16 v58 = v35;
      unsigned __int16 v59 = v35;
      int v60 = 131073;
      *uint64_t v37 = 112;
      sub_10008DE64(v7, (uint64_t *)&v57, 0);
      if (HIBYTE(v60))
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Error creating CLDeviceID PDU", v39, v40, v41, v42, v43, v44, v45, (uint64_t)v57);
          uint64_t v46 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        return 131LL;
      }

      else
      {
        uint64_t v47 = *((void *)&xmmword_1008DD4E8 + v7);
        *(void *)(v47 + 56) = a2;
        *(void *)(v47 + 64) = a3;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Requesting time sync", v48, v49, v50, v51, v52, v53, v54, (uint64_t)v57);
          uint64_t v55 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
          {
            int v56 = sub_1001EDDCC();
            *(_DWORD *)__int128 buf = 136446210;
            uint64_t v62 = v56;
            _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        return sub_10008DF98(a1, v38, v35, 1);
      }
    }

    else
    {
      return 106LL;
    }
  }

uint64_t sub_10008DE08(uint64_t a1)
{
  uint64_t result = 0LL;
  while (**((void **)&xmmword_1008DD4E8 + result) != a1)
  {
  }

  return result;
}

uint64_t sub_10008DE64(uint64_t result, uint64_t *a2, __int16 a3)
{
  if (*(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + result) + 48LL) >= 8u)
  {
    if (*((_BYTE *)a2 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c");
    }

    else
    {
      uint64_t v3 = *((unsigned __int16 *)a2 + 6);
      if (*((unsigned __int16 *)a2 + 5) - (int)v3 > 1)
      {
        if (*((_BYTE *)a2 + 14) == 2)
        {
          *(_BYTE *)(*a2 + v3) = a3;
          *(_BYTE *)(*a2 + *((unsigned __int16 *)a2 + 6) + 1) = HIBYTE(a3);
          *((_WORD *)a2 + 6) += 2;
          return result;
        }

        uint64_t v6 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_14:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c",  1066,  v6);
      }
    }

    uint64_t v6 = "ByteStream_NumReadBytesAvail(*pByteStream) >= 2";
    goto LABEL_14;
  }

  if (*((_BYTE *)a2 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c");
    goto LABEL_16;
  }

  uint64_t v4 = *((unsigned __int16 *)a2 + 6);
  if (*((unsigned __int16 *)a2 + 5) <= v4)
  {
LABEL_16:
    uint64_t v7 = "ByteStream_NumReadBytesAvail(*pByteStream) >= 1";
    goto LABEL_18;
  }

  if (*((_BYTE *)a2 + 14) != 2)
  {
    uint64_t v7 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_18:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c",  1068,  v7);
  }

  uint64_t v5 = *a2;
  *((_WORD *)a2 + 6) = v4 + 1;
  *(_BYTE *)(v5 + v4) = a3;
  return result;
}

uint64_t sub_10008DF98(__int128 *a1, void *a2, unsigned int a3, int a4)
{
  if ((sub_10008D950((uint64_t)a1) & 1) != 0)
  {
    uint64_t v8 = sub_10008DE08((uint64_t)a1);
    if (a3 >= 0x100)
    {
      uint64_t v9 = v8;
      if ((_DWORD)v8 != -1 && *(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v8) + 48LL) <= 7u)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"CL data will be dropped for peer %d datasize is %d version %d",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v9);
          uint64_t v17 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }
    }

    if (byte_1008DDC40 == 1)
    {
      uint64_t v40 = 0LL;
      if (sub_1000A86F0())
      {
        uint64_t v18 = sub_1001EC434(qword_1008DDC48);
        sub_1001EE134( (uint64_t)"CL L2CAP queue is full, queueing data, current Queue size is %d packets",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v18);
        uint64_t v26 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136446210;
          uint64_t v42 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      uint64_t v38 = a1;
      LOWORD(v40) = a3;
      uint64_t v27 = sub_1000B17F4(a3);
      uint64_t v39 = v27;
      if (v27)
      {
        memmove(v27, a2, a3);
        sub_1001EC1DC(qword_1008DDC48, (uint64_t)&v38, 24LL);
      }

      if (a4) {
        sub_1000B1838(a2);
      }
      if (v39) {
        return 0LL;
      }
      else {
        return 106LL;
      }
    }

    else
    {
      return sub_1000930C8(a1, (char *)a2, a3, a4);
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Not valid LE connection handle", v29, v30, v31, v32, v33, v34, v35, v37);
      size_t v36 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    sub_1000B1838(a2);
    return 5100LL;
  }

uint64_t sub_10008E1E0(uint64_t a1)
{
  if (sub_10008DE08(a1) != -1)
  {
    sub_1001EE134((uint64_t)"Peer ID already exists for this connection handle.", v2, v3, v4, v5, v6, v7, v8, v49);
    uint64_t v9 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      return 408LL;
    }
    goto LABEL_5;
  }

  if (!*(_WORD *)(a1 + 20))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Could not find the remote manufacturer name, it is currently 0",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  v49);
      uint64_t v18 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  if (sub_10008D8B4(a1) && ((int v19 = *(unsigned __int16 *)(a1 + 20), v19 == 15) || v19 == 89 || v19 == 76))
  {
    unsigned int v20 = sub_10008E470(a1);
    if (v20 == -1)
    {
      sub_1001EE134( (uint64_t)"Peer ID could not be found for connection handle (%x).",  v41,  v42,  v43,  v44,  v45,  v46,  v47,  a1);
      uint64_t v48 = (os_log_s *)sub_100086554(0x51u);
      if (!os_log_type_enabled(v48, OS_LOG_TYPE_ERROR)) {
        return 408LL;
      }
LABEL_5:
      sub_100657858();
      return 408LL;
    }

    unsigned int v21 = v20;
    sub_10008E4EC((__int128 *)a1);
    *(_BYTE *)(*((void *)&xmmword_1008DD4E8 + v21) + 74LL) = 1;
    int v29 = sub_1000A86F0();
    uint64_t result = 0LL;
    if (v29)
    {
      sub_1001EE134((uint64_t)"CL is pending remote ver for (%x).", v22, v23, v24, v25, v26, v27, v28, a1);
      uint64_t v30 = (os_log_s *)sub_100086554(0x51u);
      BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);
      uint64_t result = 0LL;
      if (v31) {
        goto LABEL_23;
      }
    }
  }

  else
  {
    int v39 = sub_1000A86F0();
    uint64_t result = 0LL;
    if (v39)
    {
      sub_1001EE134((uint64_t)"CL is disabled for (%x) .", v32, v33, v34, v35, v36, v37, v38, a1);
      uint64_t v30 = (os_log_s *)sub_100086554(0x51u);
      BOOL v40 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);
      uint64_t result = 0LL;
      if (v40)
      {
LABEL_23:
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v51 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_10008E470(uint64_t a1)
{
  if ((unsigned __int16)word_1008DD4E2 >= 0x10u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c",  749,  "lNbPeers < MAX_PEERS");
  }
  uint64_t v2 = sub_1000B1814(0x78uLL);
  __int16 v3 = word_1008DD4E2;
  *((void *)&xmmword_1008DD4E8 + (unsigned __int16)word_1008DD4E2) = v2;
  if (!v2) {
    return 0xFFFFFFFFLL;
  }
  void *v2 = a1;
  word_1008DD4E2 = v3 + 1;
  return (unsigned __int16)(v3 + 1) - 1;
}

uint64_t sub_10008E4EC(__int128 *a1)
{
  if (sub_1000A86F0())
  {
    uint64_t v9 = 11LL;
    if (!byte_1008DDC51) {
      uint64_t v9 = 0LL;
    }
    sub_1001EE134((uint64_t)"Sending VersionInfo version=%04x features=%04x", v2, v3, v4, v5, v6, v7, v8, v9);
    uint64_t v10 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  *(_WORD *)__int128 buf = 1289;
  if (byte_1008DDC51) {
    char v11 = 11;
  }
  else {
    char v11 = 0;
  }
  buf[2] = v11;
  *(_WORD *)&buf[3] = dword_1008DDC54;
  *(_WORD *)&buf[5] = 0;
  return sub_10008DF98(a1, buf, 7u, 0);
}

BOOL sub_10008E614(uint64_t a1)
{
  uint64_t v2 = sub_1000B068C();
  uint64_t v3 = (unsigned __int16)word_1008DD4E2;
  if (!word_1008DD4E2) {
    return 0LL;
  }
  unint64_t v4 = v2;
  uint64_t v17 = 0LL;
  for (unint64_t i = &xmmword_1008DD4E8; ; unint64_t i = (__int128 *)((char *)i + 8))
  {
    uint64_t v6 = *(void **)i;
    if (**(void **)i == a1) {
      break;
    }
    if (!--v3) {
      return 0LL;
    }
  }

  *((_DWORD *)v6 + 21) = 0;
  *((_DWORD *)v6 + 22) = 0;
  int v8 = *((_DWORD *)v6 + 4);
  if (v8)
  {
    uint64_t v9 = 0LL;
    unint64_t v10 = 0LL;
    char v11 = 0;
    do
    {
      uint64_t v12 = v6[1] + v9;
      BOOL v13 = *(_BYTE *)(v12 + 80) != 0;
      int v14 = sub_100171EC4(*(unsigned __int16 *)(v12 + 52), (uint64_t *)&v17);
      uint64_t v6 = *(void **)i;
      if (!v14) {
        *(int32x2_t *)((char *)v6 + 84) = vadd_s32(*(int32x2_t *)((char *)v6 + 84), v17[10]);
      }
      v11 |= v13;
      ++v10;
      v9 += 88LL;
    }

    while (v10 < *((unsigned int *)v6 + 4));
    int v8 = *((_DWORD *)v6 + 21);
  }

  else
  {
    char v11 = 0;
  }

  if (*((_DWORD *)v6 + 23) == v8)
  {
    int v15 = *((_DWORD *)v6 + 24);
    int v16 = *((_DWORD *)v6 + 22);
    if (v15 == v16)
    {
      BOOL result = (v11 & 1) == 0 && v4 > v6[14] + 60000LL;
      goto LABEL_19;
    }
  }

  else
  {
    int v16 = *((_DWORD *)v6 + 22);
  }

  BOOL result = 0LL;
  v6[14] = v4;
  int v15 = v16;
LABEL_19:
  *((_DWORD *)v6 + 23) = v8;
  *((_DWORD *)v6 + 24) = v15;
  return result;
}

uint64_t sub_10008E758(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = 0LL;
  if (word_1008DD4E2)
  {
    unint64_t v2 = 0LL;
    int v3 = 0;
    int v4 = 0;
    uint64_t v37 = 0LL;
    do
    {
      uint64_t v5 = *((void *)&xmmword_1008DD4E8 + v2);
      if (*(void *)v5 && (*(void *)v5 == a1 || byte_1008DDC5C == 1))
      {
        int v32 = v4;
        int v33 = v3;
        if (*(_DWORD *)(v5 + 16))
        {
          uint64_t v6 = 0LL;
          unint64_t v7 = 0LL;
          int v8 = 0;
          int v9 = 0;
          do
          {
            int v10 = sub_100171EC4(*(unsigned __int16 *)(*(void *)(v5 + 8) + v6 + 52), &v37);
            uint64_t v5 = *((void *)&xmmword_1008DD4E8 + v2);
            if (!v10)
            {
              uint64_t v11 = *(void *)(v5 + 8) + v6;
              int v13 = *(_DWORD *)(v37 + 80);
              int v12 = *(_DWORD *)(v37 + 84);
              int v15 = *(_DWORD *)(v11 + 72);
              int v14 = *(_DWORD *)(v11 + 76);
              int v16 = v12 - v14;
              int v17 = v13 - v15;
              if (v13 != v15 || v12 != v14)
              {
                sub_1000FF6C0(a1, (_DWORD *)&v36 + 1, &v36);
                if (sub_1000A86F0())
                {
                  sub_1001EE134( (uint64_t)"Pipe[ 0x%4x, p %2d, le 0x%4x, cl 0x%4x] Tx[ %4d kbps, %7d B, %2d%% %3d, %2d%% %3d ] Rx[ %4d kbps, %7d B, %2d%% %3d, %2d%% %3d ] Cl[ r %3d, c %3d, t %3d ] Le[ r %3d, c %3d, t %3d ] av [ %d, %d ] vse %d le %d, cl %d",  100 * *(unsigned __int16 *)(a2 + 36)
                  / (*(unsigned __int16 *)(a2 + 34) + *(unsigned __int16 *)(a2 + 36)),
                    100
                  * *(unsigned __int16 *)(a2 + 27)
                  / (*(unsigned __int16 *)(a2 + 25) + *(unsigned __int16 *)(a2 + 27)),
                    *(unsigned __int16 *)(a2 + 34),
                    v36,
                    *(unsigned __int16 *)(a2 + 25),
                    *(__int16 *)(a2 + 16),
                    *(unsigned __int16 *)(a2 + 14),
                    *(unsigned __int16 *)(*(void *)(*((void *)&xmmword_1008DD4E8 + v2) + 8LL) + v6 + 52));
                  int v19 = (os_log_s *)sub_100086554(0x51u);
                  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
                  {
                    unsigned int v20 = sub_1001EDDCC();
                    *(_DWORD *)__int128 buf = 136446210;
                    int v39 = v20;
                    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                  }
                }
              }

              v9 += v17;
              v8 += v16;
              uint64_t v5 = *((void *)&xmmword_1008DD4E8 + v2);
              *(void *)(*(void *)(v5 + 8) + v6 + 72) = *(void *)(v37 + 80);
            }

            ++v7;
            v6 += 88LL;
          }

          while (v7 < *(unsigned int *)(v5 + 16));
        }

        else
        {
          int v9 = 0;
          int v8 = 0;
        }

        if (sub_10018BE60() >= 0x13 && v9 | v8)
        {
          if (*(_WORD *)(a2 + 202))
          {
            if (*(unsigned __int16 *)(a2 + 202) != 0xFFFF)
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"LinkCl AvSNR [0x%4x] [ %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d ] ",  *(char *)(a2 + 149),  *(char *)(a2 + 150),  *(char *)(a2 + 151),  *(char *)(a2 + 152),  *(char *)(a2 + 153),  *(char *)(a2 + 154),  *(char *)(a2 + 155),  *(unsigned __int16 *)(a2 + 202));
                unsigned int v21 = (os_log_s *)sub_100086554(0x51u);
                if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v22 = sub_1001EDDCC();
                  *(_DWORD *)__int128 buf = 136446210;
                  int v39 = v22;
                  _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
            }
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"LinkLe AvSNR [0x%4x] [ %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3 d %3d ] minSNR [%3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d ]",  *(char *)(a2 + 59),  *(char *)(a2 + 46),  *(char *)(a2 + 49),  *(char *)(a2 + 65),  *(char *)(a2 + 67),  *(char *)(a2 + 69),  *(char *)(a2 + 71),  *(unsigned __int16 *)(a2 + 204));
            uint64_t v23 = (os_log_s *)sub_100086554(0x51u);
            if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v24 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446210;
              int v39 = v24;
              _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"LinkLe AvgRSSI [0x%4x] [ %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d ] LinkCl [0x%4x] AvgRSSI[ %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d ]",  *(char *)(a2 + 167),  *(char *)(a2 + 166),  *(char *)(a2 + 165),  v25,  *(char *)(a2 + 161),  *(char *)(a2 + 94),  *(char *)(a2 + 95),  *(unsigned __int16 *)(a2 + 204));
            uint64_t v26 = (os_log_s *)sub_100086554(0x51u);
            if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v27 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446210;
              int v39 = v27;
              _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"LinkLe PktCnt [0x%4x] [ 1M %3d %3d, 2M %3d %3d ] LinkCl [0x%4x] PktCnt[ DH1 %3d %3d, DH3 %3d %3d, DH5 %3d %3d, 2/4DH1 %3d %3d, 2/4DH3 %3d %3d, 2/4DH5 %3d %3d, 3/8DH1 %3d %3d, 3/8DH3 %3d %3d, 3/8Dh5 %3d %3d ]",  *(unsigned __int8 *)(a2 + 189),  *(unsigned __int8 *)(a2 + 190),  *(unsigned __int8 *)(a2 + 191),  *(unsigned __int8 *)(a2 + 192),  *(unsigned __int8 *)(a2 + 193),  *(unsigned __int8 *)(a2 + 194),  *(unsigned __int8 *)(a2 + 195),  *(unsigned __int16 *)(a2 + 204));
            uint64_t v28 = (os_log_s *)sub_100086554(0x51u);
            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
            {
              int v29 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446210;
              int v39 = v29;
              _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
        }

        int v30 = v8;
        int v3 = v9 + v33;
        int v4 = v30 + v32;
        sub_1000FF714( a1,  *(unsigned __int8 *)(a2 + 20),  *(unsigned __int8 *)(a2 + 29),  v9 + v33,  v30 + v32,  *(unsigned __int16 *)(a2 + 12),  *(unsigned __int16 *)(a2 + 14),  (100 * *(unsigned __int16 *)(a2 + 23)
                          / (*(unsigned __int16 *)(a2 + 21) + *(unsigned __int16 *)(a2 + 23))),
          100
        * *(unsigned __int16 *)(a2 + 27)
        / (*(unsigned __int16 *)(a2 + 25) + *(unsigned __int16 *)(a2 + 27)),
          *(_BYTE *)(a2 + 18),
          100
        * *(unsigned __int16 *)(a2 + 32)
        / (*(unsigned __int16 *)(a2 + 30) + *(unsigned __int16 *)(a2 + 32)),
          100
        * *(unsigned __int16 *)(a2 + 36)
        / (*(unsigned __int16 *)(a2 + 34) + *(unsigned __int16 *)(a2 + 36)),
          *(_BYTE *)(a2 + 16),
          0,
          *(_BYTE *)(a2 + 38));
      }

      ++v2;
    }

    while (v2 < (unsigned __int16)word_1008DD4E2);
  }

  return 0LL;
}

void sub_10008F124(unsigned int a1)
{
  uint64_t v38 = 0LL;
  uint64_t v39 = 0LL;
  uint64_t v37 = 0LL;
  unsigned int v35 = 0;
  if (sub_10008D98C(a1, &v35, &v36))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Can not find channel/peer ID for pipe ID %d", v2, v3, v4, v5, v6, v7, v8, a1);
      int v9 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    uint64_t v10 = v35;
    uint64_t v11 = **((void **)&xmmword_1008DD4E8 + v35);
    sub_1000B0400((uint64_t)&v39);
    int v12 = sub_1001F42A4((uint64_t)&v39);
    if (v12 - sub_1001F42A4(*((void *)&xmmword_1008DD4E8 + v10) + 76LL) >= 0x3E8)
    {
      sub_1000B0400(*((void *)&xmmword_1008DD4E8 + v10) + 76LL);
      uint64_t v13 = *((void *)&xmmword_1008DD4E8 + v10);
      if (*(_DWORD *)(v13 + 16))
      {
        uint64_t v14 = 0LL;
        unint64_t v15 = 0LL;
        int v16 = 0;
        int v17 = 0;
        uint64_t v33 = v11;
        do
        {
          int v18 = sub_100171EC4(*(unsigned __int16 *)(*(void *)(v13 + 8) + v14 + 52), &v38);
          uint64_t v13 = *((void *)&xmmword_1008DD4E8 + v10);
          if (!v18)
          {
            uint64_t v19 = *(void *)(v13 + 8) + v14;
            if (*(_DWORD *)(v38 + 80) != *(_DWORD *)(v19 + 72) || *(_DWORD *)(v38 + 84) != *(_DWORD *)(v19 + 76))
            {
              sub_1000FF6C0(v11, (_DWORD *)&v37 + 1, &v37);
              if (sub_1000A86F0())
              {
                uint64_t v34 = *(unsigned __int16 *)(*(void *)(*((void *)&xmmword_1008DD4E8 + v10) + 8LL) + v14 + 52);
                sub_1000FF690(0);
                uint64_t v11 = v33;
                sub_1001EE134( (uint64_t)"Pipe[ 0x%4x, p %d, f %d, r %d, d %d] \tTx[ %d kbps, %d B ] \tRx[ %d kbps, %d B ] \tav[ %d, %d ]",  v21,  v22,  v23,  v24,  v25,  v26,  v27,  v34);
                uint64_t v28 = (os_log_s *)sub_100086554(0x51u);
                if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
                {
                  int v29 = sub_1001EDDCC();
                  *(_DWORD *)__int128 buf = 136446210;
                  uint64_t v41 = v29;
                  _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
            }

            int v30 = *(_DWORD *)(v38 + 80);
            int v31 = *(_DWORD *)(v38 + 84);
            v17 += v30;
            v16 += v31;
            uint64_t v13 = *((void *)&xmmword_1008DD4E8 + v10);
            uint64_t v32 = *(void *)(v13 + 8) + v14;
            *(_DWORD *)(v32 + 72) = v30;
            *(_DWORD *)(v32 + 76) = v31;
          }

          ++v15;
          v14 += 88LL;
        }

        while (v15 < *(unsigned int *)(v13 + 16));
      }

      else
      {
        int v17 = 0;
        int v16 = 0;
      }

      sub_1000FFB4C(v11, v17, v16);
    }
  }

uint64_t sub_10008F3E4(uint64_t a1, __int128 *a2, uint64_t a3, char *a4, size_t a5, int a6)
{
  uint64_t v6 = 101LL;
  if (!a4 || !(_DWORD)a5) {
    return v6;
  }
  memset(v35, 0, sizeof(v35));
  if (sub_10008DE08((uint64_t)a2) != -1)
  {
    uint64_t v6 = sub_1001EF520((uint64_t)v35, 1u);
    if (!(_DWORD)v6)
    {
      unsigned int v13 = a6 ? 1 : 2;
      uint64_t v6 = sub_1001EFB10((unsigned __int8 *)v35, a4, a5, v13);
      if (!(_DWORD)v6)
      {
        uint64_t v6 = sub_100172A98(a1, a3, a2, (uint64_t)v35, 1);
        if ((_DWORD)v6)
        {
          if ((_DWORD)v6 != 410)
          {
            if ((_DWORD)v6 != 412)
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"CL send error on pipeID %d data size %d",  v27,  v28,  v29,  v30,  v31,  v32,  v33,  a3);
                uint64_t v34 = (os_log_s *)sub_100086554(0x51u);
                if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
                  sub_100657F74();
                }
              }

              goto LABEL_26;
            }

            uint64_t v15 = (uint64_t)a2;
            unsigned int v16 = a5;
            int v17 = 0;
LABEL_25:
            sub_10008B670(v15, v16, v17);
LABEL_26:
            sub_1001EF5E4((uint64_t)v35);
            return v6;
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"CL L2CAP pipe %d is already full, not enqueing data of %d",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  a3);
            uint64_t v25 = (os_log_s *)sub_100086554(0x51u);
            if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v26 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446210;
              uint64_t v37 = v26;
              _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          uint64_t v15 = (uint64_t)a2;
          unsigned int v16 = 0;
        }

        else
        {
          uint64_t v15 = (uint64_t)a2;
          unsigned int v16 = a5;
        }

        int v17 = 1;
        goto LABEL_25;
      }
    }
  }

  if (a6) {
    sub_1000B1838(a4);
  }
  return v6;
}

uint64_t sub_10008F624(__int128 *a1, const void *a2, uint64_t a3)
{
  uint64_t result = 101LL;
  if (!a2 || !(_DWORD)a3) {
    return result;
  }
  unsigned int v7 = sub_10008DE08((uint64_t)a1);
  uint64_t v8 = sub_10008DE08((uint64_t)a1);
  if ((_DWORD)v8 == -1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"invalid peer", v20, v21, v22, v23, v24, v25, v26, v62);
      uint64_t v27 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    return 414LL;
  }

  uint64_t v9 = v8;
  uint64_t v10 = *((void *)&xmmword_1008DD4E8 + v8);
  if (!v10)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received peer ID before we are tracking connection handle %p",  v28,  v29,  v30,  v31,  v32,  v33,  v34,  (uint64_t)a1);
      unsigned int v35 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 414LL;
  }

  unsigned int v11 = *(unsigned __int8 *)(v10 + 48);
  if (v11 <= 6)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"peer is version %d, and does not support this command",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  *(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v9) + 48LL));
      uint64_t v19 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 408LL;
  }

  if (v11 == 7) {
    int v36 = 2;
  }
  else {
    int v36 = 3;
  }
  unsigned int v37 = v36 + a3;
  uint64_t v38 = sub_1000B17F4((v36 + a3));
  if (!v38) {
    return 106LL;
  }
  uint64_t v39 = v38;
  uint64_t v63 = v38;
  __int16 v64 = v36 + a3;
  unsigned __int16 v65 = v36 + a3;
  int v66 = 131073;
  *uint64_t v38 = -111;
  sub_10008DE64(v9, (uint64_t *)&v63, a3);
  uint64_t v40 = (uint64_t)v63;
  uint64_t v41 = (unsigned __int16)v66;
  int v42 = HIBYTE(v66);
  if (HIBYTE(v66))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c");
    int v43 = 0;
  }

  else
  {
    int v43 = v65 - (unsigned __int16)v66;
  }

  if (v43 < (int)a3)
  {
    uint64_t v61 = "ByteStream_NumReadBytesAvail(bs) >= (dataLength)";
    goto LABEL_42;
  }

  if (BYTE2(v66) != 2)
  {
    uint64_t v61 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c",  1752,  v61);
  }

  memmove((void *)(v40 + v41), a2, a3);
  if (v42)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Error creating rawData PDU", v44, v45, v46, v47, v48, v49, v50, v62);
      uint64_t v51 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1000B1838(v39);
    return 131LL;
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Sending cl data of length %d to %p headersize %d", v52, v53, v54, v55, v56, v57, v58, a3);
      unsigned __int16 v59 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
      {
        int v60 = sub_1001EDDCC();
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v68 = v60;
        _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    return sub_10008DF98(a1, v39, v37, 1);
  }

uint64_t sub_10008F9A0(unint64_t a1, _BYTE *a2)
{
  uint64_t v3 = sub_10012D954(a1);
  unsigned int v4 = sub_10008DE08(v3);
  uint64_t result = 414LL;
  if (v3 && v4 != -1)
  {
    int v6 = *(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v4) + 48LL);
    if (v6)
    {
      uint64_t result = 0LL;
      *a2 = v6;
    }

    else
    {
      return 103LL;
    }
  }

  return result;
}

uint64_t sub_10008FA00()
{
  if (byte_1008DDC51) {
    return 11LL;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_10008FA18( void *__s2, size_t size, int a3, uint64_t a4, char a5, int a6, char a7, char a8, __int128 *a9)
{
  uint64_t v13 = a4;
  uint64_t v17 = &unk_1008DD000;
  int v18 = (unsigned __int16)word_1008DD568;
  if (word_1008DD568)
  {
    uint64_t v20 = (unsigned __int16)word_1008DD568;
    uint64_t v21 = &dword_1008DD57C;
    do
    {
      if (*v21 == a3
        && *((unsigned __int8 *)v21 - 4) == (_DWORD)size
        && !memcmp(*(const void **)(v21 - 3), __s2, size))
      {
        if (*((_BYTE *)v21 + 9)) {
          return 145LL;
        }
        else {
          return 119LL;
        }
      }

      v21 += 18;
      --v20;
    }

    while (v20);
    uint64_t v13 = a4;
    uint64_t v17 = (_WORD *)&unk_1008DD000;
    if (v18 != 24) {
      goto LABEL_20;
    }
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Reached max local services!", v22, v23, v24, v25, v26, v27, v28, v74);
      uint64_t v29 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 106LL;
  }

LABEL_62:
      ++v56;
    }

    while (v56 < (unsigned __int16)word_1008DD4E2);
  }

  return 0LL;
}

  if (a13)
  {
    if (a14)
    {
      while (!HIBYTE(v70))
      {
        uint64_t v48 = WORD2(v70);
        if (BYTE6(v70) != 2)
        {
          uint64_t v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_88;
        }

        uint64_t v49 = *(_BYTE *)(a13 - 1 + v42--);
        ++WORD2(v70);
        *(_BYTE *)(v69 + v48) = v49;
      }

      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_86:
      uint64_t v54 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_88:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3501, v54);
    }
  }

  else if (a14)
  {
    uint64_t v50 = a14 + 1;
    while (!HIBYTE(v70))
    {
      uint64_t v51 = WORD2(v70);
      if (BYTE6(v70) != 2)
      {
        uint64_t v57 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_100;
      }

      ++WORD2(v70);
      *(_BYTE *)(v69 + v51) = 0;
    }

    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_98:
    uint64_t v57 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_100:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3496, v57);
  }

  return sub_10018BD78(65014, v69, BYTE4(v70), a15, (uint64_t)sub_1000D4898, v23, v24, v25);
}

    if (!v28) {
      return;
    }
    goto LABEL_63;
  }

  if (v28) {
    uint64_t v33 = v28;
  }
  else {
    uint64_t v33 = a1;
  }
  v2(v33, v1);
  if (v28)
  {
LABEL_63:
    sub_1000B1838(*((void **)v28 + 2));
    sub_1000B1838(v28);
  }

    if ((_DWORD)v7 == 843)
    {
      unsigned int v7 = 0LL;
      *(_BYTE *)(a1 + 15) = 0;
    }

    if (*(unsigned __int16 *)(a1 + 10) < v5) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdp.c",  891,  "(size_t)(startPos) <= (size_t)((*Response).__size)");
    }
    *(_WORD *)(a1 + 12) = v5;
    if (!v54)
    {
LABEL_77:
      if (*(_BYTE *)(a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdp.c");
        goto LABEL_94;
      }

      goto LABEL_81;
    }

    LOBYTE(v55) = 6;
    WORD1(v55) = 0;
    char v36 = sub_1000B17F4(16LL * v54 + 16);
    unint64_t v56 = v36;
    if (v36)
    {
      char v37 = v54;
      v36[16 * v54] = 33;
      *(void *)&v56[16 * v37 + 8] = &v55;
      if (!v37) {
        goto LABEL_77;
      }
      char v38 = 0LL;
      uint64_t v39 = 0LL;
      while (1)
      {
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        uint64_t v40 = v52;
        if (*(_BYTE *)(a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdp.c");
          int v41 = 0;
        }

        else
        {
          int v41 = *(_WORD *)(a1 + 10) - *(_WORD *)(a1 + 12);
        }

        if (v40 > v41) {
          break;
        }
        ++WORD1(v55);
        ++v39;
        v38 += 16LL;
        if (v39 >= v54)
        {
          unsigned int v7 = 0LL;
          goto LABEL_77;
        }
      }

      unsigned int v7 = 0LL;
      *(_BYTE *)(a1 + 15) = 0;
LABEL_81:
      uint64_t v31 = *(_WORD *)(a1 + 10) - *(_WORD *)(a1 + 12);
      goto LABEL_82;
    }

  uint64_t v32 = &off_10087FAA8;
  if (v33) {
    sub_1002CD254(v33);
  }
  return v14;
}

uint64_t sub_10008FEE4( __int128 *a1, unsigned int a2, const void *a3, unsigned int a4, char a5, unsigned int a6)
{
  unsigned int v12 = sub_10008DE08((uint64_t)a1);
  if (v12 == -1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Can not send accept channel, peer is invalid for handle %p",  v20,  v21,  v22,  v23,  v24,  v25,  v26,  (uint64_t)a1);
      uint64_t v27 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 414LL;
  }

  else
  {
    unsigned int v13 = v12;
    if (sub_100097844(v12))
    {
      if (sub_1000979C8(v13, a3, a4, (uint64_t)a1))
      {
        else {
          __int16 v14 = 3;
        }
        __int16 v15 = a4 + 5;
        unsigned __int16 v16 = a4 + 5 + v14;
        uint64_t v17 = sub_1000B17F4(v16);
        if (v17)
        {
          int v18 = v17;
          _BYTE *v17 = 5;
          if (*(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v13) + 48LL) < 8u)
          {
            unsigned int v19 = 2;
          }

          else
          {
            v17[2] = HIBYTE(v15);
            unsigned int v19 = 3;
          }

          v17[1] = v15;
          uint64_t v29 = &v17[v19];
          *(_WORD *)uint64_t v29 = a2;
          v29[2] = a5;
          uint64_t v30 = v19 | 4;
          v29[3] = a4;
          memmove(&v17[v30], a3, a4);
          uint64_t v31 = v30 + a4;
          v18[v31] = 0;
          uint64_t v32 = &qword_1008DD570[9 * a6];
          char v33 = *((_BYTE *)v32 + 22);
          v18[v31] = v33;
          v18[v31] = v33 | (2 * *((_BYTE *)v32 + 23));
          char v45 = 0;
          memset(v44, 0, sizeof(v44));
          __memcpy_chk(v44, a3, a4, 33LL);
          *((_BYTE *)v44 + a4) = 0;
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Sending added service %d for %s to %p index %d",  v34,  v35,  v36,  v37,  v38,  v39,  v40,  a2);
            int v41 = (os_log_s *)sub_100086554(0x51u);
            if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)__int128 buf = 136446210;
              __int128 v43 = sub_1001EDDCC();
              _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          return sub_10008DF98(a1, v18, v16, 1);
        }

        else
        {
          return 106LL;
        }
      }

      else
      {
        return 153LL;
      }
    }

    else
    {
      return 152LL;
    }
  }

BOOL sub_100090180(_DWORD *a1, const void *a2, size_t __n, int a4)
{
  int v7 = a1[9];
  if (a4 == 2 && v7 == 2 || a4 == 1 && !v7) {
    return 1LL;
  }
  return !a4 && v7 == 1;
}

void sub_1000901F4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (byte_1008DDC30)
  {
    if (a2)
    {
      unsigned int v6 = sub_10008DE08(a1);
      if (v6 == -1)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Can not send services, peer is invalid for handle %p",  v38,  v39,  v40,  v41,  v42,  v43,  v44,  a1);
          char v45 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }

      else
      {
        unsigned int v7 = v6;
        if (sub_100097844(v6))
        {
          unsigned int v8 = 2;
          else {
            int v9 = 3;
          }
          int v10 = (2 * a2) | 1;
          unsigned int v11 = v10 + v9;
          unsigned int v12 = (uint8_t *)sub_1000B17F4((v10 + v9));
          if (v12)
          {
            unsigned int v13 = v12;
            uint64_t v14 = a2;
            uint8_t *v12 = 2;
            if (*(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v7) + 48LL) >= 8u)
            {
              v12[2] = (unsigned __int16)a2 >> 7;
              unsigned int v8 = 3;
            }

            uint64_t v15 = 0LL;
            v12[1] = v10;
            v12[v8] = a2;
            unsigned int v16 = v8 + 2;
            do
            {
              uint64_t v17 = a3 + 2 * v15;
              v12[v16 - 1] = *(_WORD *)v17;
              v12[v16] = *(_BYTE *)(v17 + 1);
              ++v15;
              v16 += 2;
            }

            while (v14 != v15);
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"Sending %d services back to %p, index %d", v18, v19, v20, v21, v22, v23, v24, v14);
              uint64_t v25 = (os_log_s *)sub_100086554(0x51u);
              if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)__int128 buf = 136446210;
                uint64_t v48 = sub_1001EDDCC();
                _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }

            uint64_t v26 = (__int128 *)a1;
            uint64_t v27 = v13;
            unsigned int v28 = v11;
            int v29 = 1;
          }

          else
          {
            *(_WORD *)__int128 buf = 264;
            buf[2] = 7;
            uint64_t v27 = buf;
            uint64_t v26 = (__int128 *)a1;
            unsigned int v28 = 3;
            int v29 = 0;
          }

          sub_10008DF98(v26, v27, v28, v29);
        }
      }
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"No common services found.", v30, v31, v32, v33, v34, v35, v36, v46);
      uint64_t v37 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v48 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }

BOOL sub_100090494()
{
  if (!word_1008DD568) {
    return 0LL;
  }
  if (byte_1008DD584 == 13) {
    return 1LL;
  }
  uint64_t v1 = &byte_1008DD5CC;
  uint64_t v2 = 1LL;
  do
  {
    unint64_t v3 = v2;
    int v4 = *v1;
    v1 += 72;
    ++v2;
  }

  while (v4 != 13);
  return v3 < (unsigned __int16)word_1008DD568;
}

uint64_t sub_1000904F4(const void *a1, unsigned int a2, uint64_t a3, int a4)
{
  char v96 = 0;
  memset(v95, 0, sizeof(v95));
  if (a2 >= 0x20) {
    size_t v7 = 32LL;
  }
  else {
    size_t v7 = a2;
  }
  __memcpy_chk(v95, a1, v7, 33LL);
  *((_BYTE *)v95 + v7) = 0;
  uint64_t v8 = (unsigned __int16)word_1008DD568;
  if (word_1008DD568)
  {
    uint64_t v9 = 0LL;
    for (unint64_t i = &byte_1008DD585;
          *(_DWORD *)(i - 9) != (_DWORD)a3
          i += 72)
    {
      if (v8 == ++v9) {
        return 121LL;
      }
    }

    if (*i)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Unregistering something pending unregistration", v68, v69, v70, v71, v72, v73, v74, v87);
        uint64_t v75 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v75, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 121LL;
    }

    char *i = 1;
    unsigned __int16 v11 = v9;
  }

  else
  {
    LODWORD(v9) = 0;
    unsigned __int16 v11 = 0;
  }

  if ((_DWORD)v9 == (_DWORD)v8) {
    return 121LL;
  }
  if (word_1008DD4E2)
  {
    unint64_t v13 = 0LL;
    uint64_t v14 = &qword_1008DD570[9 * v11];
    unsigned int v90 = (__int16 *)v14 + 9;
    int v88 = (void (**)(void, uint64_t))(v14 + 6);
    uint64_t v89 = (unsigned __int8 *)(v14 + 1);
    do
    {
      if (sub_10008D950(**((void **)&xmmword_1008DD4E8 + v13)))
      {
        uint64_t v15 = *((void *)&xmmword_1008DD4E8 + v13);
        if (!*(_BYTE *)(v15 + 74))
        {
          if (sub_10008D8B4(*(void *)v15))
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Central removing service %d named %s to %d with priority %d",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  (unsigned __int16)*v90);
              uint64_t v23 = (os_log_s *)sub_100086554(0x51u);
              if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v24 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446210;
                int v92 = v24;
                _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }

            if (a4 == 13)
            {
              uint64_t v25 = *((void *)&xmmword_1008DD4E8 + v13);
              *(_BYTE *)(v25 + 75) = 0;
              if (sub_100089F30(*(void *)v25, 0))
              {
                if (sub_1000A86F0())
                {
                  sub_1001EE134((uint64_t)"Force upgrade TS not ready D", v26, v27, v28, v29, v30, v31, v32, v87);
                  uint64_t v33 = (os_log_s *)sub_100086554(0x51u);
                  if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
                  {
                    uint64_t v34 = sub_1001EDDCC();
                    *(_DWORD *)__int128 buf = 136446210;
                    int v92 = v34;
                    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                  }
                }
              }
            }

            sub_100090B54(v13, *v90, (const void *)qword_1008DD570[9 * v11], *v89);
            uint64_t v35 = *((void *)&xmmword_1008DD4E8 + v13);
            unsigned int v36 = *(_DWORD *)(v35 + 16);
            if (!v36) {
              goto LABEL_44;
            }
            uint64_t v37 = 0LL;
            int v38 = 0;
            uint64_t v39 = *(void *)(v35 + 8);
            uint64_t v40 = 88LL * v36;
            while (!sub_100090CEC((_DWORD *)(v39 + v37), v11))
            {
              ++v38;
              v37 += 88LL;
              if (v40 == v37) {
                goto LABEL_44;
              }
            }

            *(_DWORD *)(v39 + v37 + 44) = 2;
            if (*v88)
            {
              (*v88)(*(unsigned __int16 *)(v39 + v37 + 52), 5102LL);
              uint64_t v39 = *(void *)(*((void *)&xmmword_1008DD4E8 + v13) + 8LL);
            }

            uint64_t v46 = *(void *)(v39 + v37 + 64);
            if (v46)
            {
              sub_1001734D8(v46);
              uint64_t v39 = *(void *)(*((void *)&xmmword_1008DD4E8 + v13) + 8LL);
            }

            *(void *)(v39 + v37 + 64) = 0LL;
            if (*(_DWORD *)(*((void *)&xmmword_1008DD4E8 + v13) + 16LL) == v38)
            {
LABEL_44:
              if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"Pipe associated with service to unregister no longer exists",  v47,  v48,  v49,  v50,  v51,  v52,  v53,  v87);
                uint64_t v54 = (os_log_s *)sub_100086554(0x51u);
                if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR))
                {
                  uint64_t v55 = sub_1001EDDCC();
                  *(_DWORD *)__int128 buf = 136446466;
                  int v92 = v55;
                  __int16 v93 = 1024;
                  int v94 = 0xFFFF;
                  _os_log_error_impl( (void *)&_mh_execute_header,  v54,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
                }
              }
            }
          }

          else
          {
            uint64_t v41 = *((void *)&xmmword_1008DD4E8 + v13);
            unsigned int v42 = *(_DWORD *)(v41 + 16);
            if (v42)
            {
              uint64_t v43 = 0LL;
              uint64_t v44 = *(void *)(v41 + 8);
              uint64_t v45 = 88LL * v42;
              while (!sub_100090D5C(v44 + v43, v11))
              {
                v43 += 88LL;
                if (v45 == v43) {
                  goto LABEL_18;
                }
              }

              if ((sub_1000A86F0() & 1) != 0)
              {
                sub_1001EE134( (uint64_t)"Peripheral removing service %d named %s to peer %d with priority %d",  v56,  v57,  v58,  v59,  v60,  v61,  v62,  (unsigned __int16)*v90);
                uint64_t v63 = (os_log_s *)sub_100086554(0x51u);
                if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v64 = sub_1001EDDCC();
                  *(_DWORD *)__int128 buf = 136446210;
                  int v92 = v64;
                  _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }

              uint64_t v65 = *(void *)(*((void *)&xmmword_1008DD4E8 + v13) + 8LL) + v43;
              *(_DWORD *)(v65 + 44) = 2;
              sub_100090B54(v13, *(_DWORD *)(v65 + 40), (const void *)v65, *(unsigned __int16 *)(v65 + 32));
              if (*v88) {
                (*v88)( *(unsigned __int16 *)(*(void *)(*((void *)&xmmword_1008DD4E8 + v13) + 8LL) + v43 + 52),  5102LL);
              }
              uint64_t v66 = *(void *)(*((void *)&xmmword_1008DD4E8 + v13) + 8LL);
              uint64_t v67 = *(void *)(v66 + v43 + 64);
              if (v67)
              {
                sub_1001734D8(v67);
                uint64_t v66 = *(void *)(*((void *)&xmmword_1008DD4E8 + v13) + 8LL);
              }

              *(void *)(v66 + v43 + 64) = 0LL;
            }
          }
        }
      }

uint64_t sub_100090B54(uint64_t a1, __int16 a2, const void *a3, unsigned int a4)
{
  uint64_t v8 = (__int128 *)**((void **)&xmmword_1008DD4E8 + a1);
  uint64_t result = sub_100097844(a1);
  if ((_DWORD)result)
  {
    uint64_t result = sub_1000979C8(a1, a3, a4, (uint64_t)v8);
    if ((_DWORD)result)
    {
      unsigned int v10 = *(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + a1) + 48LL);
      unsigned __int16 v11 = v10 <= 7 ? 4 : 5;
      size_t v12 = v10 <= 7 ? 4LL : 5LL;
      uint64_t result = (uint64_t)sub_1000B17F4(v12);
      if (result)
      {
        unint64_t v13 = (void *)result;
        *(_BYTE *)uint64_t result = 6;
        unsigned int v14 = 2;
        if (*(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + a1) + 48LL) >= 8u)
        {
          *(_BYTE *)(result + 2) = 0;
          unsigned int v14 = 3;
        }

        *(_BYTE *)(result + 1) = 2;
        *(_WORD *)(result + v14) = a2;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Sending service removed for peerID %d serviceID %d index %d",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  a1);
          uint64_t v22 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)__int128 buf = 136446210;
            uint64_t v24 = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        return sub_10008DF98(v8, v13, v11, 1);
      }
    }
  }

  return result;
}

BOOL sub_100090CEC(_DWORD *a1, unsigned int a2)
{
  unsigned int v2 = a1[8];
  unint64_t v3 = &qword_1008DD570[9 * a2];
  if (v2 >= 0x20) {
    size_t v4 = 32LL;
  }
  else {
    size_t v4 = v2;
  }
  return memcmp(a1, (const void *)*v3, v4) == 0;
}

BOOL sub_100090D5C(uint64_t a1, unsigned int a2)
{
  unsigned int v2 = *(_DWORD *)(a1 + 32);
  unint64_t v3 = &qword_1008DD570[9 * a2];
  int v4 = HIDWORD(qword_1008DD570[9 * a2 + 1]);
  if (!v4)
  {
    if (*(_DWORD *)(a1 + 36) == 1) {
      goto LABEL_9;
    }
    return 0LL;
  }

  if (v4 == 1)
  {
    if (!*(_DWORD *)(a1 + 36)) {
      goto LABEL_9;
    }
    return 0LL;
  }

  if (v4 != 2 || *(_DWORD *)(a1 + 36) != 2) {
    return 0LL;
  }
LABEL_9:
  if (v2 >= 0x20) {
    size_t v5 = 32LL;
  }
  else {
    size_t v5 = v2;
  }
  return memcmp((const void *)a1, (const void *)*v3, v5) == 0;
}

uint64_t sub_100090E10(uint64_t a1)
{
  uint64_t v1 = sub_10008DE08(a1);
  if ((_DWORD)v1 == -1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"peerID=%d version=%d", v3, v4, v5, v6, v7, v8, v9, v2);
    unsigned int v10 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      unint64_t v13 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  return 1LL;
}

void sub_100090F08(uint64_t a1, int a2)
{
  unsigned int v4 = sub_10008DE08(a1);
  if (v4 == -1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Can not update flush, peer lookup was invalid", v28, v29, v30, v31, v32, v33, v34, v36);
      uint64_t v35 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  else
  {
    uint64_t v11 = *((void *)&xmmword_1008DD4E8 + v4);
    if (*(_BYTE *)(v11 + 75) && *(_DWORD *)(v11 + 16))
    {
      unint64_t v12 = 0LL;
      uint64_t v13 = v4;
      uint64_t v14 = 64LL;
      do
      {
        uint64_t v15 = *(void *)(v11 + 8);
        if (v15 && *(void *)(v15 + v14) && *(_BYTE *)(v15 + v14 - 10) == 13)
        {
          if (a2)
          {
            uint64_t v16 = sub_100101BB8(a1, 200, v5, v6, v7, v8, v9, v10);
            if ((_DWORD)v16)
            {
              uint64_t v17 = v16;
              if (sub_1000A86F0())
              {
                sub_1001EE134((uint64_t)"Flush status failed with %!", v18, v5, v6, v7, v8, v9, v10, v17);
                uint64_t v19 = (os_log_s *)sub_100086554(0x51u);
                if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
                  sub_100658074();
                }
              }
            }

            else
            {
            }
          }

          else
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"We downgraded while servicing a reserved priority pipe",  v20,  v21,  v22,  v23,  v24,  v25,  v26,  v36);
              uint64_t v27 = (os_log_s *)sub_100086554(0x51u);
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
                sub_100658074();
              }
            }
          }
        }

        ++v12;
        uint64_t v11 = *((void *)&xmmword_1008DD4E8 + v13);
        v14 += 88LL;
      }

      while (v12 < *(unsigned int *)(v11 + 16));
    }
  }

void sub_100091124()
{
  if (word_1008DD4E2)
  {
    bzero(v36, 0x400uLL);
    unint64_t v0 = 0LL;
    int v1 = 1;
    do
    {
      uint64_t v2 = *((void *)&xmmword_1008DD4E8 + v0);
      if (v2)
      {
        if (*(void *)(v2 + 8) && (int v3 = *(_DWORD *)(v2 + 16)) != 0)
        {
          unsigned int v4 = &v36[(unsigned __int16)v1];
          _BYTE *v4 = v3;
          v4[1] = **(_BYTE **)v2;
          v4[2] = *(_BYTE *)(*(void *)v2 + 1LL);
          uint64_t v5 = (unsigned __int16 *)sub_100100714(*(unsigned __int16 *)(*(void *)(v2 + 8) + 52LL));
          if (v5)
          {
            unsigned int v6 = *v5;
            unsigned int v7 = v6 >> 8;
          }

          else
          {
            LOBYTE(v6) = 0;
            LOBYTE(v7) = 0;
          }

          uint64_t v8 = &v36[(unsigned __int16)v1 + 3];
          *uint64_t v8 = v6;
          v8[1] = v7;
          int v9 = v1 + 5;
          uint64_t v10 = *((void *)&xmmword_1008DD4E8 + v0);
          if (*(_DWORD *)(v10 + 16))
          {
            uint64_t v11 = 0LL;
            unint64_t v12 = 0LL;
            while ((unsigned __int16)v9 < 0x3DCu)
            {
              char v35 = 0;
              *(_OWORD *)__s = 0u;
              __int128 v34 = 0u;
              uint64_t v13 = *(void *)(v10 + 8) + v11;
              else {
                __strlcpy_chk(__s, "Invalid", 33LL, 33LL);
              }
              size_t v14 = strlen(__s);
              int v15 = v14;
              uint64_t v16 = *((void *)&xmmword_1008DD4E8 + v0);
              uint64_t v17 = &v36[(unsigned __int16)v9];
              _BYTE *v17 = *(_BYTE *)(*(void *)(v16 + 8) + v11 + 52);
              v17[1] = *(_BYTE *)(*(void *)(v16 + 8) + v11 + 53);
              uint64_t v18 = *(void *)(*(void *)(v16 + 8) + v11 + 64);
              if (v18) {
                char v19 = *(_BYTE *)(*(void *)(v18 + 112) + 8LL);
              }
              else {
                char v19 = 0;
              }
              uint64_t v20 = &v36[(unsigned __int16)v9 + 2];
              _BYTE *v20 = v19;
              uint64_t v21 = *(void *)(*(void *)(v16 + 8) + v11 + 64);
              if (v21) {
                LOBYTE(v21) = *(_BYTE *)(*(void *)(v21 + 112) + 9LL);
              }
              v20[1] = v21;
              uint64_t v22 = &v36[(unsigned __int16)v9];
              int v23 = v9 + 5;
              v22[4] = v14;
              memmove(&v36[(unsigned __int16)v23], __s, v14);
              int v9 = v23 + v15;
              ++v12;
              uint64_t v10 = *((void *)&xmmword_1008DD4E8 + v0);
              v11 += 88LL;
            }

            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"PacketLogger magnet content exceeds MAX buffer size",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  v32);
              uint64_t v31 = (os_log_s *)sub_100086554(0x51u);
              if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
                sub_100658074();
              }
            }
          }

uint64_t sub_1000913F0(uint64_t a1)
{
  unsigned int v1 = sub_10008DE08(a1);
  if (v1 == -1) {
    return 0LL;
  }
  else {
    return (*(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v1) + 52LL) >> 4) & 1;
  }
}

uint64_t sub_100091428()
{
  return (dword_1008DDC54 >> 4) & 1;
}

uint64_t sub_100091438(uint64_t result)
{
  byte_1008DDC5D = result;
  return result;
}

uint64_t sub_100091444(uint64_t result, __int16 a2, __int16 a3, __int16 a4)
{
  word_1008DDC5E = result;
  word_1008DDC60 = a2;
  word_1008DDC62 = a3;
  word_1008DDC64 = a4;
  return result;
}

uint64_t sub_100091468(uint64_t a1)
{
  unsigned int v2 = sub_10008DE08(a1);
  if (v2 == -1)
  {
    uint64_t result = sub_1000A86F0();
    if (!(_DWORD)result) {
      return result;
    }
    sub_1001EE134((uint64_t)"invalid peer", v5, v6, v7, v8, v9, v10, v11, v21);
    unint64_t v12 = (os_log_s *)sub_100086554(0x51u);
    uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
    if (!(_DWORD)result) {
      return result;
    }
    sub_100657F74();
    return 0LL;
  }

  uint64_t v3 = *((void *)&xmmword_1008DD4E8 + v2);
  if (v3) {
    return *(unsigned __int8 *)(v3 + 52) >> 7;
  }
  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result)
  {
    sub_1001EE134( (uint64_t)"Received peer ID before we are tracking connection handle %p",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  a1);
    uint64_t v20 = (os_log_s *)sub_100086554(0x51u);
    uint64_t result = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_100657858();
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_10009153C(uint64_t a1)
{
  unsigned int v2 = sub_10008DE08(a1);
  if (v2 == -1)
  {
    uint64_t result = sub_1000A86F0();
    if (!(_DWORD)result) {
      return result;
    }
    sub_1001EE134((uint64_t)"invalid peer", v5, v6, v7, v8, v9, v10, v11, v21);
    unint64_t v12 = (os_log_s *)sub_100086554(0x51u);
    uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
    if (!(_DWORD)result) {
      return result;
    }
    sub_100657F74();
    return 0LL;
  }

  uint64_t v3 = *((void *)&xmmword_1008DD4E8 + v2);
  if (v3) {
    return *(_BYTE *)(v3 + 53) & 1;
  }
  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result)
  {
    sub_1001EE134( (uint64_t)"Received peer ID before we are tracking connection handle %p",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  a1);
    uint64_t v20 = (os_log_s *)sub_100086554(0x51u);
    uint64_t result = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_100657858();
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100091610(uint64_t a1)
{
  unsigned int v2 = sub_10008DE08(a1);
  if (v2 == -1)
  {
    uint64_t result = sub_1000A86F0();
    if (!(_DWORD)result) {
      return result;
    }
    sub_1001EE134((uint64_t)"invalid peer", v5, v6, v7, v8, v9, v10, v11, v21);
    unint64_t v12 = (os_log_s *)sub_100086554(0x51u);
    uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
    if (!(_DWORD)result) {
      return result;
    }
    sub_100657F74();
    return 0LL;
  }

  uint64_t v3 = *((void *)&xmmword_1008DD4E8 + v2);
  if (!v3)
  {
    uint64_t result = sub_1000A86F0();
    if (!(_DWORD)result) {
      return result;
    }
    sub_1001EE134( (uint64_t)"Received peer ID before we are tracking connection handle %p",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  a1);
    uint64_t v20 = (os_log_s *)sub_100086554(0x51u);
    uint64_t result = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
    if (!(_DWORD)result) {
      return result;
    }
    sub_100657858();
    return 0LL;
  }

  return (dword_1008DDC54 & 0x100) != 0 && (*(_BYTE *)(v3 + 52) & 0x80) != 0
      || (dword_1008DDC54 & 0x80) != 0 && (*(_BYTE *)(v3 + 53) & 1) != 0;
}

uint64_t sub_100091700(uint64_t a1)
{
  unsigned int v2 = sub_10008DE08(a1);
  if (v2 == -1)
  {
    uint64_t result = sub_1000A86F0();
    if (!(_DWORD)result) {
      return result;
    }
    sub_1001EE134((uint64_t)"invalid peer", v5, v6, v7, v8, v9, v10, v11, v21);
    unint64_t v12 = (os_log_s *)sub_100086554(0x51u);
    uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
    if (!(_DWORD)result) {
      return result;
    }
    sub_100657F74();
    return 0LL;
  }

  uint64_t v3 = *((void *)&xmmword_1008DD4E8 + v2);
  if (!v3)
  {
    uint64_t result = sub_1000A86F0();
    if (!(_DWORD)result) {
      return result;
    }
    sub_1001EE134( (uint64_t)"Received peer ID before we are tracking connection handle %p",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  a1);
    uint64_t v20 = (os_log_s *)sub_100086554(0x51u);
    uint64_t result = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
    if (!(_DWORD)result) {
      return result;
    }
    sub_100657858();
    return 0LL;
  }

  return (dword_1008DDC54 & 0x100) != 0 && (*(_BYTE *)(v3 + 52) & 0x80) != 0;
}

uint64_t sub_1000917E4(uint64_t result)
{
  dword_1008DDC58 = result;
  return result;
}

uint64_t sub_1000917F0()
{
  sub_1001EE0E4("BT_CL Peers (lNbPeers=%d:\n", (unsigned __int16)word_1008DD4E2);
  int v0 = qword_1008DDC48;
  if (qword_1008DDC48) {
    int v0 = sub_1001EC434(qword_1008DDC48);
  }
  sub_1001EE0E4("lPacketQueue size:%d", v0);
  sub_1001EE0E4("lCanSend=%B", (byte_1008DDC40 & 1) == 0);
  if (word_1008DD4E2)
  {
    unint64_t v1 = 0LL;
    do
    {
      uint64_t v2 = *((void *)&xmmword_1008DD4E8 + v1);
      if (v2)
      {
        sub_1001EE0E4( "\tPeer %d: channels=%d handle=%p m1=%d m2=%d t1=%d GMTdelta=%d version=%d supportedFeatures=%ld powerAssertHel d=%d active=%d centralPendingVersion=%d :\n",  v1,  *(_DWORD *)(v2 + 16),  *(const void **)v2,  *(void *)(v2 + 20),  *(void *)(v2 + 28),  *(void *)(v2 + 36),  *(_DWORD *)(v2 + 44),  *(unsigned __int8 *)(v2 + 48),  *(unsigned int *)(v2 + 52),  *(unsigned __int8 *)(v2 + 72),  *(unsigned __int8 *)(v2 + 73),  *(unsigned __int8 *)(v2 + 74));
        uint64_t v3 = *((void *)&xmmword_1008DD4E8 + v1);
        if (*(void *)(v3 + 8))
        {
          if (*(_DWORD *)(v3 + 16))
          {
            uint64_t v4 = 0LL;
            unint64_t v5 = 0LL;
            do
            {
              LOBYTE(v22) = 0;
              __int128 v20 = 0u;
              __int128 v21 = 0u;
              uint64_t v6 = *(void *)(v3 + 8) + v4;
              else {
                __strlcpy_chk(&v20, "Invalid", 33LL, 33LL);
              }
              uint64_t v7 = *((void *)&xmmword_1008DD4E8 + v1);
              uint64_t v8 = *(void *)(v7 + 8) + v4;
              sub_1001EE0E4( "\t\tchannel %d: SvcName=%s svcType:%d svcID=%d pipeID=%d priority=%d pendingEnc=%d useErtm=%d useFCS=%d l2capChannel=%p bytesSent:%llu bytesReceived:%llu lastSeenActivity:%llu\n",  v5++,  (const char *)&v20,  *(_DWORD *)(v8 + 36),  *(_DWORD *)(v8 + 40),  *(unsigned __int16 *)(v8 + 52),  *(unsigned __int8 *)(v8 + 54),  *(unsigned __int8 *)(v8 + 55),  *(unsigned __int8 *)(v8 + 56),  *(unsigned __int8 *)(v8 + 57),  *(const void **)(v8 + 64),  *(unsigned int *)(v7 + 92),  *(unsigned int *)(v7 + 96),  *(void *)(v7 + 112));
              uint64_t v3 = *((void *)&xmmword_1008DD4E8 + v1);
              v4 += 88LL;
            }

            while (v5 < *(unsigned int *)(v3 + 16));
          }
        }

        else
        {
          sub_1001EE0E4("\t\tNo Channels\n");
        }
      }

      ++v1;
    }

    while (v1 < (unsigned __int16)word_1008DD4E2);
  }

  sub_1001EE0E4("BT_CL LocalServices (lNbServices=%d:\n", (unsigned __int16)word_1008DD568);
  uint64_t v9 = 0LL;
  uint64_t v10 = &byte_1008DD580;
  do
  {
    char v24 = 0;
    memset(v23, 0, sizeof(v23));
    else {
      __strlcpy_chk(v23, "Invalid", 33LL, 33LL);
    }
    int v11 = *v10;
    int v12 = *((unsigned __int16 *)v10 + 1);
    int v13 = v10[4];
    int v14 = v10[5];
    int v15 = v10[6];
    int v16 = v10[7];
    int v17 = *((_DWORD *)v10 - 1);
    __int128 v18 = *((_OWORD *)v10 + 2);
    __int128 v20 = *((_OWORD *)v10 + 1);
    __int128 v21 = v18;
    uint64_t v22 = *((void *)v10 + 6);
    uint64_t result = sub_1001EE0E4( "\tLocalService %ld : name=%s serviceType=%d requiresEnc=%d serviceID=%d priority=%d unpublishing=%d useEr tm=%d useFCS=%d callbacks=%p\n",  v9++,  (const char *)v23,  v17,  v11,  v12,  v13,  v14,  v15,  v16,  &v20);
    v10 += 72;
  }

  while (v9 != 24);
  return result;
}

uint64_t sub_100091B14(uint64_t result)
{
  dword_1008D6EC8 = result;
  return result;
}

uint64_t sub_100091B20(uint64_t result)
{
  byte_1008DD4E0 = result;
  return result;
}

void sub_100091B30(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v4 = sub_10008DE08((uint64_t)a1);
  if ((_DWORD)v4 != -1)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *((void *)&xmmword_1008DD4E8 + v4);
    uint64_t v7 = v4;
    if (*(_BYTE *)(v6 + 48) == 1 && byte_1008DDC51 != 0)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Disabling LE magnet TS workaround for peerID %d", v9, v10, v11, v12, v13, v14, v15, v5);
        int v16 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136446210;
          int v23 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      sub_10018D0AC();
      uint64_t v6 = *((void *)&xmmword_1008DD4E8 + v7);
    }

    if (*(_DWORD *)(v6 + 16))
    {
      unint64_t v17 = 0LL;
      do
      {
        uint64_t v18 = *(void *)(*(void *)(v6 + 8) + 88 * v17 + 64);
        if (v18) {
          sub_1001734D8(v18);
        }
        if (word_1008DD568)
        {
          unint64_t v19 = 0LL;
          __int128 v20 = &qword_1008DD5A0;
          do
          {
            if (sub_10008D8B4((uint64_t)a1)
              && (uint64_t v21 = *(void *)(*((void *)&xmmword_1008DD4E8 + v7) + 8LL),
                  sub_100090CEC((_DWORD *)(v21 + 88 * v17), v19))
              || !sub_10008D8B4((uint64_t)a1)
              && (uint64_t v21 = *(void *)(*((void *)&xmmword_1008DD4E8 + v7) + 8LL),
                  sub_100090D5C(v21 + 88 * v17, v19)))
            {
              if (*v20) {
                ((void (*)(void, uint64_t))*v20)(*(unsigned __int16 *)(v21 + 88 * v17 + 52), a2);
              }
            }

            ++v19;
            v20 += 9;
          }

          while (v19 < (unsigned __int16)word_1008DD568);
        }

        ++v17;
        uint64_t v6 = *((void *)&xmmword_1008DD4E8 + v7);
      }

      while (v17 < *(unsigned int *)(v6 + 16));
    }

    if (*(_BYTE *)(v6 + 72)) {
      sub_100091DAC(a1);
    }
    sub_100091EC4((uint64_t)a1);
    sub_10009838C();
  }

void sub_100091D40(uint64_t a1)
{
  if ((_DWORD)a1 && sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"_LE_MagnetSuspendEnable %!", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

void sub_100091DAC(unsigned __int16 *a1)
{
  unsigned int v2 = sub_10008DE08((uint64_t)a1);
  if (v2 == -1) {
    sub_1001EE2A0();
  }
  if (!*(_BYTE *)(*((void *)&xmmword_1008DD4E8 + v2) + 72LL)) {
    sub_1001EE2A0();
  }
  if (v2 != -1)
  {
    uint64_t v3 = *((void *)&xmmword_1008DD4E8 + v2);
    if (*(_BYTE *)(v3 + 72))
    {
      *(_BYTE *)(v3 + 72) = 0;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"DeassertPower for lm 0x%4x", v4, v5, v6, v7, v8, v9, v10, *a1);
        uint64_t v11 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136446210;
          uint64_t v13 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      sub_1000B139C();
    }
  }

void sub_100091EC4(uint64_t a1)
{
  unsigned int v1 = (unsigned __int16)word_1008DD4E2;
  if (word_1008DD4E2)
  {
    uint64_t v2 = 0LL;
    while (**((void **)&xmmword_1008DD4E8 + v2) != a1)
    {
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Removing peer ID %d for handle %p", v3, v4, v5, v6, v7, v8, v9, v2);
      uint64_t v10 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v13 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    --word_1008DD4E2;
    uint64_t v11 = (void **)*((void *)&xmmword_1008DD4E8 + v2);
    if (v11[1])
    {
      sub_1000B1838(v11[1]);
      uint64_t v11 = (void **)*((void *)&xmmword_1008DD4E8 + v2);
    }

    sub_1000B1838(v11);
    unsigned int v1 = (unsigned __int16)word_1008DD4E2;
    *((void *)&xmmword_1008DD4E8 + v2) = *((void *)&xmmword_1008DD4E8 + (unsigned __int16)word_1008DD4E2);
  }

void sub_100092030(uint64_t a1, int a2, int a3)
{
  if (!a2)
  {
    if (a3)
    {
      unsigned int v4 = sub_10008DE08(a1);
      if (v4 != -1)
      {
        unsigned int v5 = v4;
        if (sub_1001CBF3C((_DWORD *)(a1 + 48)))
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Got encrypted but pairing is still in progress, waiting for pairing completion",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  *(uint64_t *)v14);
            uint64_t v13 = (os_log_s *)sub_100086554(0x51u);
            if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)uint64_t v14 = 136446210;
              *(void *)&uint8_t v14[4] = sub_1001EDDCC();
              _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", v14, 0xCu);
            }
          }
        }

        else
        {
          sub_100092190((__int128 *)a1, v5);
        }
      }
    }
  }

void sub_100092140(_DWORD *a1, uint64_t a2, int a3)
{
  uint64_t v4 = sub_10012D98C(a1);
  if (!a3)
  {
    unsigned int v5 = (__int128 *)v4;
    if (v4)
    {
      unsigned int v6 = sub_10008DE08(v4);
      if (v6 != -1) {
        sub_100092190(v5, v6);
      }
    }
  }

void sub_100092190(__int128 *a1, unsigned int a2)
{
  uint64_t v4 = a2;
  if (sub_10008D8B4((uint64_t)a1))
  {
    if (*(_BYTE *)(*((void *)&xmmword_1008DD4E8 + a2) + 74LL)) {
      return;
    }
    unsigned int v5 = (unsigned __int16)word_1008DD568;
    if (word_1008DD568)
    {
      unint64_t v6 = 0LL;
      uint64_t v7 = &dword_1008DD57C;
      do
      {
        if (!*((_BYTE *)v7 + 9) && *((_BYTE *)v7 + 4))
        {
          else {
            unsigned int v8 = *((unsigned __int8 *)v7 - 4);
          }
          sub_10008FEE4(a1, *((unsigned __int16 *)v7 + 3), *(const void **)(v7 - 3), v8, *v7, (unsigned __int16)v6);
          unsigned int v5 = (unsigned __int16)word_1008DD568;
        }

        ++v6;
        v7 += 18;
      }

      while (v6 < v5);
    }
  }

  uint64_t v9 = *((void *)&xmmword_1008DD4E8 + v4);
  if (*(_DWORD *)(v9 + 16))
  {
    uint64_t v10 = 0LL;
    unint64_t v11 = 0LL;
    uint64_t v12 = 0LL;
    do
    {
      uint64_t v13 = *(void *)(v9 + 8) + v10;
      if (*(_BYTE *)(v13 + 55))
      {
        *(_BYTE *)(v13 + 55) = 0;
        BOOL v14 = sub_10008D8B4((uint64_t)a1);
        uint64_t v9 = *((void *)&xmmword_1008DD4E8 + v4);
        uint64_t v15 = *(void *)(v9 + 8) + v10;
        if (v14) {
          *((void *)v16 + v12) = v15;
        }
        else {
          *((_WORD *)v17 + v12) = *(_DWORD *)(v15 + 40);
        }
        uint64_t v12 = (v12 + 1);
      }

      ++v11;
      v10 += 88LL;
    }

    while (v11 < *(unsigned int *)(v9 + 16));
  }

  else
  {
    uint64_t v12 = 0LL;
  }

  else {
    sub_1000901F4((uint64_t)a1, v12, (uint64_t)v17);
  }
}

void sub_10009236C(__int128 *a1)
{
  uint64_t v2 = sub_10008DE08((uint64_t)a1);
  if ((_DWORD)v2 == -1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"invalid peer", v14, v15, v16, v17, v18, v19, v20, v48);
      uint64_t v21 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    return;
  }

  uint64_t v3 = v2;
  uint64_t v4 = *((void *)&xmmword_1008DD4E8 + v2);
  if (!v4)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received peer ID before we are tracking connection handle %p",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  (uint64_t)a1);
      uint64_t v29 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        goto LABEL_6;
      }
    }

    return;
  }

  unsigned int v5 = *(unsigned __int8 *)(v4 + 48);
  if (v5 > 6)
  {
    if (v5 == 7) {
      __int16 v30 = 2;
    }
    else {
      __int16 v30 = 3;
    }
    if (v5 == 7) {
      size_t v31 = 10LL;
    }
    else {
      size_t v31 = 11LL;
    }
    uint64_t v32 = sub_1000B17F4(v31);
    if (!v32) {
      return;
    }
    uint64_t v33 = v32;
    uint64_t v49 = v32;
    __int16 v50 = v31;
    unsigned __int16 v51 = v31;
    int v52 = 131073;
    *uint64_t v32 = -112;
    sub_10008DE64(v3, (uint64_t *)&v49, v31 - v30);
    if (HIBYTE(v52))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c");
    }

    else
    {
      int v34 = v51;
      __int16 v35 = v52;
      if (v51 - (unsigned __int16)v52 > 1)
      {
        if (BYTE2(v52) == 2)
        {
          uint64_t v36 = (uint64_t)v49;
          *(_WORD *)&v49[(unsigned __int16)v52] = word_1008DDC5E;
          if (v34 - (unsigned __int16)(v35 + 2) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c",  1701,  "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          *(_WORD *)(v36 + (unsigned __int16)(v35 + 2)) = word_1008DDC60;
          if (v34 - (unsigned __int16)(v35 + 4) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c",  1702,  "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          *(_WORD *)(v36 + (unsigned __int16)(v35 + 4)) = word_1008DDC62;
          unsigned __int16 v37 = v35 + 6;
          if (v34 - v37 <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c",  1703,  "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          *(_WORD *)(v36 + v37) = word_1008DDC64;
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Sending Device ID with vendor 0x%x product 0x%x version 0x%x chip 0x%x to %p",  v38,  v39,  v40,  v41,  v42,  v43,  v44,  (unsigned __int16)word_1008DDC5E);
            uint64_t v45 = (os_log_s *)sub_100086554(0x51u);
            if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v46 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446210;
              uint64_t v54 = v46;
              _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          sub_10008DF98(a1, v33, (unsigned __int16)v31, 1);
          return;
        }

        uint64_t v47 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c",  1700,  v47);
      }
    }

    uint64_t v47 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_34;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"peer is version %d, and does not support this command",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  *(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v3) + 48LL));
    uint64_t v13 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
LABEL_6:
    }
      sub_100657858();
  }

void sub_10009272C(__int128 *a1, uint64_t a2, uint64_t *a3)
{
  unsigned int v6 = sub_10008DE08((uint64_t)a1);
  if (v6 == -1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Can not send create channel, peer is invalid for handle %p",  v58,  v59,  v60,  v61,  v62,  v63,  v64,  (uint64_t)a1);
      uint64_t v65 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    unsigned int v7 = v6;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Sending create channel for %d service to %p", v8, v9, v10, v11, v12, v13, v14, a2);
      uint64_t v15 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v69 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    if ((_DWORD)a2)
    {
      uint64_t v16 = v7;
      uint64_t v17 = &xmmword_1008DD4E8;
      uint64_t v18 = a2;
      unsigned int v67 = v7;
      do
      {
        if ((dword_1008DDC54 & 0x10) != 0 && (*(_BYTE *)(*((void *)v17 + v16) + 52LL) & 0x10) != 0) {
          unsigned int v19 = 2576;
        }
        else {
          unsigned int v19 = 2042;
        }
        uint64_t v20 = sub_100092B20((uint64_t)a1, v7, *a3, 0, v19);
        if ((_DWORD)v20)
        {
          uint64_t v21 = v20;
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Failed to create channel : %!", v22, v23, v24, v25, v26, v27, v28, v21);
            uint64_t v29 = (os_log_s *)sub_100086554(0x51u);
            if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
            {
              __int16 v30 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446210;
              uint64_t v69 = v30;
              _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
        }

        else
        {
          unsigned int v31 = *(unsigned __int8 *)(*((void *)v17 + v16) + 48LL);
          uint64_t v32 = v17;
          if (v31 <= 7) {
            char v33 = 2;
          }
          else {
            char v33 = 3;
          }
          if (v31 <= 7) {
            size_t v34 = 6LL;
          }
          else {
            size_t v34 = 7LL;
          }
          __int16 v35 = sub_1000B17F4(v34);
          if (v35)
          {
            uint64_t v36 = v35;
            _BYTE *v35 = 3;
            unsigned __int16 v37 = v32;
            if (*(unsigned __int8 *)(*((void *)v32 + v16) + 48LL) < 8u)
            {
              uint64_t v38 = 2LL;
            }

            else
            {
              v35[2] = 0;
              uint64_t v38 = 3LL;
            }

            v35[1] = v34 - v33;
            uint64_t v48 = &v35[v38];
            *uint64_t v48 = *(_BYTE *)(*(void *)(*a3 + 64) + 4LL);
            v48[1] = *(_BYTE *)(*(void *)(*a3 + 64) + 5LL);
            *((_WORD *)v48 + 1) = *(_DWORD *)(*a3 + 40);
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Sending create channel 0x%4x for service %d to %p index %d",  v49,  v50,  v51,  v52,  v53,  v54,  v55,  *(unsigned __int16 *)(*(void *)(*a3 + 64) + 4LL));
              uint64_t v56 = (os_log_s *)sub_100086554(0x51u);
              if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v57 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446210;
                uint64_t v69 = v57;
                _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }

            sub_10008DF98(a1, v36, (unsigned __int16)v34, 1);
            uint64_t v17 = v37;
            unsigned int v7 = v67;
          }

          else
          {
            uint64_t v17 = v32;
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Can not allocate memory for channel creation",  v39,  v40,  v41,  v42,  v43,  v44,  v45,  v66);
              uint64_t v46 = (os_log_s *)sub_100086554(0x51u);
              if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
              {
                uint64_t v47 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446466;
                uint64_t v69 = v47;
                __int16 v70 = 1024;
                int v71 = 0xFFFF;
                _os_log_error_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
              }
            }
          }
        }

        ++a3;
        --v18;
      }

      while (v18);
    }
  }

uint64_t sub_100092B20(uint64_t a1, unsigned int a2, uint64_t a3, int a4, unsigned int a5)
{
  uint64_t v10 = (unsigned int **)(a3 + 64);
  uint64_t v11 = sub_100172ECC(4u, (uint64_t *)(a3 + 64), 0);
  if ((_DWORD)v11)
  {
    uint64_t v12 = v11;
    if (off_1008F29E0) {
      off_1008F29E0(a1, 81LL, 812LL, v11);
    }
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"createL2CAPChannel failed with error %!.  OI_ChanMan_AllocateChannel failed",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  v12);
      uint64_t v20 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    return v12;
  }

  int v21 = (unsigned __int16)word_1008DD568;
  if (!word_1008DD568) {
    goto LABEL_16;
  }
  int v22 = 0;
  uint64_t v23 = &qword_1008DD5A8;
  while (a4)
  {
LABEL_13:
    ++v22;
    v23 += 9;
    if (v21 == v22) {
      goto LABEL_16;
    }
  }

uint64_t sub_1000930C8(__int128 *a1, char *a2, unsigned __int16 a3, int a4)
{
  uint64_t v8 = sub_1001EF520((uint64_t)v37, 1u);
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"CL failed to init an MBUF with error %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint64_t v17 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
LABEL_15:
      }
        sub_100657F74();
    }
  }

  else
  {
    uint64_t v18 = sub_1001EFB10((unsigned __int8 *)v37, a2, a3, 0);
    if ((_DWORD)v18)
    {
      uint64_t v9 = v18;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"CL failed to append to an MBUF with error %!", v19, v20, v21, v22, v23, v24, v25, v9);
        uint64_t v26 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          goto LABEL_15;
        }
      }
    }

    else
    {
      uint64_t v27 = sub_100172A98((uint64_t)sub_10009327C, 58LL, a1, (uint64_t)v37, 0);
      if ((_DWORD)v27 == 412)
      {
        uint64_t v9 = 0LL;
        goto LABEL_16;
      }

      uint64_t v9 = v27;
      if (!(_DWORD)v27)
      {
        byte_1008DDC40 = 1;
        goto LABEL_16;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"CL failed to write an MBUF with error %!", v28, v29, v30, v31, v32, v33, v34, v9);
        __int16 v35 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
          goto LABEL_15;
        }
      }
    }
  }

void sub_10009327C(uint64_t a1)
{
  if ((_DWORD)a1 == 58)
  {
    byte_1008DDC40 = 0;
    while (sub_1001EC434(qword_1008DDC48))
    {
      unsigned int v1 = (void *)sub_1001EC324(qword_1008DDC48, 0);
      if (v1)
      {
        uint64_t v2 = v1;
        uint64_t v3 = sub_1000930C8(*v1, v2[1], *((unsigned __int16 *)v2 + 8), 1LL);
        sub_1000B1838(v2);
        if ((_DWORD)v3 == 410)
        {
          sub_1001EE2A0();
        }

        else if (!(_DWORD)v3)
        {
          return;
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Failed to send CL pdu with error %!.", v4, v5, v6, v7, v8, v9, v10, v3);
          uint64_t v11 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
            sub_100658074();
          }
        }
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"l2capWriteCb CID=%d, not BT_CL_SIGNAL_CID(%d)!!", v13, v14, v15, v16, v17, v18, v19, a1);
    uint64_t v20 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_1000933F4(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  unsigned int v6 = sub_10008DE08(a1);
  if (v6 != -1)
  {
LABEL_2:
    uint64_t v7 = *((void *)&xmmword_1008DD4E8 + v6);
    if (v7)
    {
      if (a3 > 4)
      {
        if (!a2) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c",  1850,  "data");
        }
        uint64_t v32 = v6;
        int v33 = a2[1];
        int v34 = (a2[3] << 16) | (a2[2] << 8) | (a2[4] << 24) | v33;
        *(_BYTE *)(v7 + 48) = *a2;
        *(_DWORD *)(v7 + 52) = v34;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Received Version Info for peer %d: local [version %d features 0x%x], remote [version %d features 0x%x]",  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v32);
          uint64_t v42 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v43 = sub_1001EDDCC();
            *(_DWORD *)__int128 buf = 136446210;
            uint64_t v82 = v43;
            _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        if ((v33 & 0x20) != 0) {
          *(_BYTE *)(a1 + 25) = sub_10017AFE8();
        }
        uint64_t v44 = *((void *)&xmmword_1008DD4E8 + v32);
        if ((dword_1008DDC54 & 0x10) != 0 && (*(_BYTE *)(v44 + 52) & 0x10) != 0)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"HDR Enabled for this link", v45, v46, v47, v48, v49, v50, v51, v80);
            int v52 = (os_log_s *)sub_100086554(0x51u);
            if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v53 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446210;
              uint64_t v82 = v53;
              _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          *(_BYTE *)(a1 + 26) = 1;
          uint64_t v44 = *((void *)&xmmword_1008DD4E8 + v32);
        }

        if (*(_BYTE *)(v44 + 48) == 1 && byte_1008DDC51 != 0) {
          sub_10018D0AC();
        }
        if (sub_10008D8B4(a1))
        {
          uint64_t v55 = *((void *)&xmmword_1008DD4E8 + v32);
          if (!*(_BYTE *)(v55 + 73) && *(_BYTE *)(v55 + 74))
          {
            sub_100097070((__int128 *)a1);
            uint64_t v55 = *((void *)&xmmword_1008DD4E8 + v32);
          }

          *(_BYTE *)(v55 + 74) = 0;
        }

        else
        {
          sub_10008E4EC((__int128 *)a1);
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"CL is active for (%x)", v56, v57, v58, v59, v60, v61, v62, a1);
          uint64_t v63 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v64 = sub_1001EDDCC();
            *(_DWORD *)__int128 buf = 136446210;
            uint64_t v82 = v64;
            _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        uint64_t v65 = *((void *)&xmmword_1008DD4E8 + v32);
        *(_BYTE *)(v65 + 73) = 1;
        if (byte_1008DDC5C == 1)
        {
          sub_100194B58(a1, 1LL, 1LL);
          uint64_t v65 = *((void *)&xmmword_1008DD4E8 + v32);
        }

        unsigned int v66 = sub_10008DE08(a1);
        if (v66 == -1)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Received DID Info for an unknown peer", v72, v73, v74, v75, v76, v77, v78, v80);
            uint64_t v79 = (os_log_s *)sub_100086554(0x51u);
            if (os_log_type_enabled(v79, OS_LOG_TYPE_ERROR)) {
              sub_100657F74();
            }
          }
        }

        else
        {
          unsigned int v67 = byte_1008DD488;
          if (byte_1008DD488)
          {
            unint64_t v68 = 0LL;
            uint64_t v69 = v66;
            do
            {
              __int16 v70 = (void (*)(uint64_t, void, void, uint64_t, void))qword_1008DD490[v68];
              if (v70)
              {
                if (byte_1008DDC51) {
                  uint64_t v71 = 11LL;
                }
                else {
                  uint64_t v71 = 0LL;
                }
                v70( a1,  *(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v69) + 48LL),  *(unsigned int *)(*((void *)&xmmword_1008DD4E8 + v69) + 52LL),  v71,  dword_1008DDC54);
                unsigned int v67 = byte_1008DD488;
              }

              ++v68;
            }

            while (v68 < v67);
          }
        }
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Data size error %d", v8, v9, v10, v11, v12, v13, v14, a3);
          uint64_t v15 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }

        *(_WORD *)__int128 buf = 264;
        buf[2] = 1;
        sub_10008DF98((__int128 *)a1, buf, 3u, 0);
      }
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received peer ID before we are tracking connection handle %p",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  a1);
      uint64_t v31 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  if (sub_10008D8B4(a1) || byte_1008DDC30)
  {
    unsigned int v6 = sub_10008E470(a1);
    if (v6 == -1)
    {
      *(_WORD *)__int128 buf = 264;
      buf[2] = 1;
      sub_10008DF98((__int128 *)a1, buf, 3u, 0);
      unsigned int v6 = -1;
    }

    goto LABEL_2;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Received Version info as PERIPHERAL. PERIPHERAL CL is disabled. Ignoring.",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v80);
    uint64_t v23 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

void sub_100093930(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  uint64_t v5 = (__int128 *)a1;
  if (sub_10008D8B4(a1))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Received remote services from a peripheral !", v6, v7, v8, v9, v10, v11, v12, v141);
      uint64_t v13 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        v153 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    goto LABEL_31;
  }

  if (byte_1008DDC30 || sub_10008D8B4((uint64_t)v5))
  {
    unsigned int v14 = sub_10008DE08((uint64_t)v5);
    if (v14 == -1)
    {
      unsigned int v14 = sub_10008E470((uint64_t)v5);
      if (v14 == -1)
      {
LABEL_31:
        *(_WORD *)__int128 buf = 264;
        buf[2] = 1;
        sub_10008DF98(v5, buf, 3u, 0);
        return;
      }
    }

    if (!sub_100097844(v14)) {
      return;
    }
    uint64_t v151 = v14;
    *(_BYTE *)(*((void *)&xmmword_1008DD4E8 + v14) + 73LL) = 1;
    if (a3 <= 3)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"No services from remote peer.", v15, v16, v17, v18, v19, v20, v21, v141);
        uint64_t v22 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136446210;
          v153 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      LODWORD(v23) = 0;
      unsigned int v24 = 0;
      ptr = 0LL;
      unsigned int v148 = 0;
      char v25 = 0;
      LODWORD(v26) = 0;
LABEL_15:
      if (v24 < a3 || (_DWORD)v23 != (_DWORD)v26)
      {
        char v27 = v25;
        int v28 = sub_1000A86F0();
        char v25 = v27;
        if (v28)
        {
          sub_1001EE134((uint64_t)"Number of remote services don't match.", v29, v30, v31, v32, v33, v34, v35, v141);
          uint64_t v36 = (os_log_s *)sub_100086554(0x51u);
          BOOL v37 = os_log_type_enabled(v36, OS_LOG_TYPE_ERROR);
          char v25 = v27;
          if (v37)
          {
            sub_100657858();
            char v25 = v27;
          }
        }
      }

      if ((v25 & 1) != 0 && (byte_1008DDC50 || (*(_DWORD *)(*((void *)&xmmword_1008DD4E8 + v151) + 52LL) & 1) == 0))
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"CL Asking to pair", v38, v39, v40, v41, v42, v43, v44, v141);
          uint64_t v45 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v46 = sub_1001EDDCC();
            *(_DWORD *)__int128 buf = 136446210;
            v153 = v46;
            _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        sub_1001D377C((uint64_t)v5, 1);
      }

      if (v148) {
        sub_1000901F4((uint64_t)v5, v148, (uint64_t)ptr);
      }
      if (ptr) {
        sub_1000B1838(ptr);
      }
      return;
    }

    uint64_t v26 = *a2;
    if (v26 >= 0x19)
    {
      if (sub_1000A86F0())
      {
        uint64_t v26 = 24LL;
        sub_1001EE134((uint64_t)"Too many services, capping to %d", v55, v56, v57, v58, v59, v60, v61, 24LL);
        uint64_t v62 = (os_log_s *)sub_100086554(0x51u);
        if (!os_log_type_enabled(v62, OS_LOG_TYPE_ERROR)) {
          goto LABEL_41;
        }
        sub_100657858();
      }

      uint64_t v26 = 24LL;
    }

void sub_1000942A4(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  if (!sub_10008D8B4(a1) || (unsigned int v6 = sub_10008DE08(a1), v6 == -1))
  {
    *(_WORD *)__int128 buf = 264;
    buf[2] = 1;
    sub_10008DF98((__int128 *)a1, buf, 3u, 0);
    return;
  }

  unsigned int v7 = v6;
  if (!sub_100097844(v6)) {
    return;
  }
  *(_BYTE *)(*((void *)&xmmword_1008DD4E8 + v7) + 73LL) = 1;
  if (a3 <= 2)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"No services from remote peer.", v8, v9, v10, v11, v12, v13, v14, v121);
      uint64_t v15 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v128 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    return;
  }

  uint64_t v16 = *a2;
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Received %d common services from the remote peripheral %p",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  v16);
    unsigned int v24 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v128 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (v16 >= 0x19)
  {
    if (sub_1000A86F0())
    {
      uint64_t v16 = 24LL;
      sub_1001EE134((uint64_t)"Too many services, capping to %d", v25, v26, v27, v28, v29, v30, v31, 24LL);
      uint64_t v32 = (os_log_s *)sub_100086554(0x51u);
      if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        goto LABEL_18;
      }
      sub_100657858();
    }

    uint64_t v16 = 24LL;
  }

uint64_t sub_100094A98(__int128 *a1, unsigned __int16 *a2, unsigned int a3)
{
  if (a3 <= 3)
  {
    *(_WORD *)__int128 buf = 264;
    buf[2] = 4;
    return sub_10008DF98(a1, buf, 3u, 0);
  }

  unsigned int v5 = *a2;
  uint64_t v6 = a2[1];
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Received create channel for service %d, CID = %d from %p !",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v6);
    uint64_t v14 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v33 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (sub_10008D8B4((uint64_t)a1) || (unsigned int v15 = sub_10008DE08((uint64_t)a1), v15 == -1))
  {
    uint64_t v21 = a1;
    char v22 = 1;
    return sub_100097CE4(v21, v22, v6, v5, 0);
  }

  unsigned int v16 = v15;
  uint64_t v17 = *((void *)&xmmword_1008DD4E8 + v15);
  int v18 = *(_DWORD *)(v17 + 16);
  if (!v18) {
    goto LABEL_18;
  }
  uint64_t v31 = v15;
  uint64_t v19 = *(void *)(v17 + 8);
  uint64_t v20 = 80LL;
  while (*(_DWORD *)(v19 + v20 - 40) != (_DWORD)v6)
  {
    v20 += 88LL;
    if (!--v18) {
      goto LABEL_18;
    }
  }

  int v23 = (unsigned __int16)word_1008DD568;
  if (!word_1008DD568)
  {
LABEL_18:
    uint64_t v21 = a1;
    char v22 = 5;
    return sub_100097CE4(v21, v22, v6, v5, 0);
  }

  int v24 = 0;
  uint64_t v25 = v19 + v20 - 80;
  uint64_t v26 = &byte_1008DD584;
  while (!sub_100090D5C(v25, v24))
  {
    ++v24;
    v26 += 72;
    if (v23 == v24) {
      goto LABEL_18;
    }
  }

  if (*(v26 - 4))
  {
    if (sub_10008D900((uint64_t)a1))
    {
      uint64_t v17 = *((void *)&xmmword_1008DD4E8 + v31);
      goto LABEL_24;
    }

    uint64_t v21 = a1;
    char v22 = 3;
    return sub_100097CE4(v21, v22, v6, v5, 0);
  }

void sub_100094DB4(__int128 *a1, unsigned __int8 *a2, unsigned int a3)
{
  unsigned int v6 = sub_10008DE08((uint64_t)a1);
  if (v6 == -1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Unknown peer.", v9, v10, v11, v12, v13, v14, v15, v38);
      unsigned int v16 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    unsigned int v7 = v6;
    if (!sub_10008D8B4((uint64_t)a1))
    {
      *(_WORD *)__int128 buf = 264;
      uint8_t v8 = 1;
      goto LABEL_9;
    }

    if (a3 <= 4)
    {
      *(_WORD *)__int128 buf = 264;
      uint8_t v8 = 4;
LABEL_9:
      buf[2] = v8;
      sub_10008DF98(a1, buf, 3u, 0);
      return;
    }

    int v17 = *a2;
    uint64_t v18 = *(unsigned __int16 *)(a2 + 1);
    __int16 v19 = *(_WORD *)(a2 + 3);
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received accept channel for service %d, CID = %d from %p !",  v20,  v21,  v22,  v23,  v24,  v25,  v26,  v18);
      unsigned int v27 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v40 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    uint64_t v28 = *((void *)&xmmword_1008DD4E8 + v7);
    int v29 = *(_DWORD *)(v28 + 16);
    if (v29)
    {
      uint64_t v30 = 0LL;
      uint64_t v31 = *(void *)(v28 + 8);
      uint64_t v32 = &byte_1008DD589;
      while (*(_DWORD *)(v31 + v30 + 40) != (_DWORD)v18)
      {
        v32 += 72;
        v30 += 88LL;
        if (!--v29) {
          return;
        }
      }

      uint64_t v33 = *(unsigned int **)(v31 + v30 + 64);
      if (v33)
      {
        if (v17)
        {
          sub_1001734D8((uint64_t)v33);
          *(void *)(*(void *)(*((void *)&xmmword_1008DD4E8 + v7) + 8LL) + v30 + 64) = 0LL;
        }

        else
        {
          *(_WORD *)(sub_10017AB4C(v33) + 8) = v19;
          uint64_t v34 = *(void *)(*((void *)&xmmword_1008DD4E8 + v7) + 8LL) + v30;
          *(_BYTE *)(v34 + 80) = *v32;
          *(_WORD *)(v34 + 52) = *(_WORD *)(*(void *)(v34 + 64) + 4LL);
          uint64_t v35 = (unsigned __int16)word_1008DD568;
          if (word_1008DD568)
          {
            for (unint64_t i = &byte_1008DD584; *((unsigned __int16 *)i - 1) != (_DWORD)v18; i += 72)
            {
              if (!--v35) {
                return;
              }
            }

            uint64_t v37 = *(void (**)(__int128 *))(i + 20);
            if (v37) {
              v37(a1);
            }
          }
        }
      }
    }
  }

void sub_100095050(__int128 *a1, unsigned __int16 *a2, unsigned int a3)
{
  unsigned int v6 = sub_10008DE08((uint64_t)a1);
  if (v6 == -1) {
    goto LABEL_6;
  }
  unsigned int v7 = v6;
  if (!sub_100097844(v6)) {
    return;
  }
  if (a3 <= 4)
  {
    *(_WORD *)__int128 buf = 264;
    uint8_t v8 = 4;
LABEL_7:
    buf[2] = v8;
    sub_10008DF98(a1, buf, 3u, 0);
    return;
  }

  if (sub_10008D8B4((uint64_t)a1))
  {
LABEL_6:
    *(_WORD *)__int128 buf = 264;
    uint8_t v8 = 1;
    goto LABEL_7;
  }

  uint64_t v9 = *a2;
  __int16 v73 = *a2;
  else {
    size_t v10 = *((unsigned __int8 *)a2 + 3);
  }
  if (!(_DWORD)v10 || (int)v10 + 4 > a3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Service name length (%d) doesn't match data size (%d).",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  v10);
      uint64_t v18 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  __int16 v19 = a2 + 2;
  if (a3 - (_DWORD)v10 == 4) {
    char v20 = 0;
  }
  else {
    char v20 = *((_BYTE *)a2 + v10 + 4);
  }
  int v21 = *((unsigned __int8 *)a2 + 2);
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Received service added on lm 0x%4x with service ID %d, eRTM %d",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  *(unsigned __int16 *)a1);
    int v29 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v75 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!sub_1000979C8(v7, v19, v10, (uint64_t)a1))
  {
    sub_1001EE134( (uint64_t)"Service ID %d is not supported. OI_STATUS_WATCH_TS_REMOTE_UNSUPPORTED",  v48,  v49,  v50,  v51,  v52,  v53,  v54,  v9);
    uint64_t v55 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_49:
    sub_100657858();
    return;
  }

  uint64_t v30 = *((void *)&xmmword_1008DD4E8 + v7);
  int v31 = *(_DWORD *)(v30 + 16);
  if (v31)
  {
    uint64_t v32 = *(_DWORD **)(v30 + 8);
    uint64_t v33 = *(unsigned int *)(v30 + 16);
    while (v32[10] != (_DWORD)v9)
    {
      if (sub_100090180(v32, v19, v10, v21))
      {
        sub_1001EE134((uint64_t)"Already have this service name for this peer !", v64, v65, v66, v67, v68, v69, v70, v72);
        uint64_t v71 = (os_log_s *)sub_100086554(0x51u);
        if (!os_log_type_enabled(v71, OS_LOG_TYPE_ERROR)) {
          return;
        }
        goto LABEL_49;
      }

      v32 += 22;
      if (!--v33) {
        goto LABEL_29;
      }
    }

    sub_1001EE134((uint64_t)"Already have this service ID for this peer !", v56, v57, v58, v59, v60, v61, v62, v72);
    unint64_t v63 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v63, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_49;
  }

void sub_1000954A0(__int128 *a1, unsigned __int16 *a2, unsigned int a3)
{
  uint64_t v6 = sub_10008DE08((uint64_t)a1);
  if ((_DWORD)v6 == -1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Service removed error: Invalid peer", v17, v18, v19, v20, v21, v22, v23, v91);
      uint64_t v24 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    *(_WORD *)__int128 buf = 264;
    uint8_t v16 = 1;
    goto LABEL_12;
  }

  uint64_t v7 = v6;
  if (!sub_100097844(v6)) {
    return;
  }
  if (a3 <= 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Service removed error  Invalid peer", v8, v9, v10, v11, v12, v13, v14, v91);
      uint64_t v15 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    *(_WORD *)__int128 buf = 264;
    uint8_t v16 = 4;
LABEL_12:
    buf[2] = v16;
    sub_10008DF98(a1, buf, 3u, 0);
    return;
  }

  unsigned int v25 = *a2;
  uint64_t v26 = *((void *)&xmmword_1008DD4E8 + v7);
  int v27 = *(_DWORD *)(v26 + 16);
  if (!v27)
  {
LABEL_17:
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Got a remove request but can't find a service to remove.",  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v91);
      uint64_t v39 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    goto LABEL_54;
  }

  uint64_t v28 = 0LL;
  int v29 = 0;
  uint64_t v30 = v7;
  uint64_t v31 = *(void *)(v26 + 8) + 40LL;
  while (*(_DWORD *)(v31 + v28) != v25)
  {
    ++v29;
    v28 += 88LL;
    if (v27 == v29) {
      goto LABEL_17;
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Received service removed on peerID %d, channelID %d, serviceID %d, ServiceState [local %s, remote %s], channel 0x%x",  v40,  v41,  v42,  v43,  v44,  v45,  v46,  v7);
    uint64_t v47 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v93 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v48 = *(void *)(*((void *)&xmmword_1008DD4E8 + v30) + 8LL) + v28;
  *(_DWORD *)(v48 + 48) = 2;
  if (!*(void *)(v48 + 64))
  {
    BOOL v51 = sub_10008D8B4((uint64_t)a1);
    uint64_t v52 = *((void *)&xmmword_1008DD4E8 + v30);
    if (v51 && !*(_BYTE *)(*(void *)(v52 + 8) + v28 + 55))
    {
      sub_1001EE2A0();
      uint64_t v52 = *((void *)&xmmword_1008DD4E8 + v30);
    }

    uint64_t v53 = *(void *)(v52 + 8);
    uint64_t v54 = (void *)(v53 + v28);
    if (*(_DWORD *)(v53 + v28 + 44) == 2)
    {
      sub_1001EE134( (uint64_t)"Initiated service removal, but received service removed, delay channel removal until remove cfm is received",  v55,  v56,  v57,  v58,  v59,  v60,  v61,  v91);
      uint64_t v62 = (os_log_s *)sub_100086554(0x51u);
      if (!os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_58;
      }
LABEL_53:
      uint64_t v83 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v93 = v83;
      _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
LABEL_58:
      uint64_t v84 = a1;
      unsigned int v85 = v25;
      char v86 = 0;
      goto LABEL_59;
    }

    unsigned int v87 = *(_DWORD *)(v52 + 16) - 1;
    *(_DWORD *)(v52 + 16) = v87;
    uint64_t v88 = (const void *)(v53 + 88LL * v87);
LABEL_57:
    memmove(v54, v88, 0x58uLL);
    uint64_t v90 = *(void *)(*((void *)&xmmword_1008DD4E8 + v30) + 8LL) + 88LL * v87;
    *(void *)(v90 + 80) = 0LL;
    *(_OWORD *)(v90 + 48) = 0u;
    *(_OWORD *)(v90 + 64) = 0u;
    *(_OWORD *)(v90 + 16) = 0u;
    *(_OWORD *)(v90 + 32) = 0u;
    *(_OWORD *)uint64_t v90 = 0u;
    goto LABEL_58;
  }

  if (!word_1008DD568)
  {
    unsigned int v49 = 0;
    goto LABEL_42;
  }

  unsigned int v49 = 0;
  uint64_t v50 = &byte_1008DD585;
  while ((!sub_10008D8B4((uint64_t)a1)
        || !sub_100090CEC( (_DWORD *)(*(void *)(*((void *)&xmmword_1008DD4E8 + v30) + 8LL) + v28),  v49))
       && (sub_10008D8B4((uint64_t)a1)
        || !sub_100090D5C(*(void *)(*((void *)&xmmword_1008DD4E8 + v30) + 8LL) + v28, v49)))
  {
    ++v49;
    v50 += 72;
  }

  if (!*v50 || sub_10008D8B4((uint64_t)a1))
  {
LABEL_42:
    if (v49 < (unsigned __int16)word_1008DD568)
    {
      unsigned int v63 = v49;
      if (BYTE4(qword_1008DD570[9 * v49 + 2]) == 13)
      {
        *(_BYTE *)(*((void *)&xmmword_1008DD4E8 + v30) + 75LL) = 0;
        if (sub_100089F30((uint64_t)a1, 0))
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Force upgrade TS not ready B", v64, v65, v66, v67, v68, v69, v70, v91);
            uint64_t v71 = (os_log_s *)sub_100086554(0x51u);
            if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v72 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446210;
              uint64_t v93 = v72;
              _os_log_impl((void *)&_mh_execute_header, v71, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
        }
      }

      __int16 v73 = (void (*)(void, uint64_t))qword_1008DD570[9 * v63 + 6];
      uint64_t v74 = *((void *)&xmmword_1008DD4E8 + v30);
      if (v73)
      {
        v73(*(unsigned __int16 *)(*(void *)(v74 + 8) + v28 + 52), 5101LL);
        uint64_t v74 = *((void *)&xmmword_1008DD4E8 + v30);
      }

      uint64_t v75 = *(void *)(v74 + 8) + v28;
      if (*(_DWORD *)(v75 + 44) == 2)
      {
        sub_1001EE134( (uint64_t)"Initiated service removal, but received service removed, delay channel removal until remove cfm is received",  v76,  v77,  v78,  v79,  v80,  v81,  v82,  v91);
        uint64_t v62 = (os_log_s *)sub_100086554(0x51u);
        if (!os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_58;
        }
        goto LABEL_53;
      }

      unsigned int v87 = *(_DWORD *)(v74 + 16) - 1;
      *(_DWORD *)(v74 + 16) = v87;
      sub_1001734D8(*(void *)(v75 + 64));
      uint64_t v89 = *(void *)(*((void *)&xmmword_1008DD4E8 + v30) + 8LL);
      uint64_t v54 = (void *)(v89 + v28);
      uint64_t v88 = (const void *)(v89 + 88LL * v87);
      goto LABEL_57;
    }

void sub_100095A70(uint64_t a1, unsigned __int16 *a2, unsigned int a3)
{
  unsigned int v6 = sub_10008DE08(a1);
  if (a3 < 3) {
    return;
  }
  unsigned int v7 = v6;
  if (v6 == -1) {
    return;
  }
  uint64_t v8 = *a2;
  if (sub_1000A86F0())
  {
    BOOL v9 = sub_10008D8B4(a1);
    uint64_t v17 = "Peripheral";
    if (v9) {
      uint64_t v17 = "Central";
    }
    sub_1001EE134( (uint64_t)"%s received service remove confirmation for id %d",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  (uint64_t)v17);
    uint64_t v18 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      int v132 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v19 = *((void *)&xmmword_1008DD4E8 + v7);
  unint64_t v20 = *(unsigned int *)(v19 + 16);
  if ((_DWORD)v20)
  {
    uint64_t v21 = *(void *)(v19 + 8);
    if (*(_DWORD *)(v21 + 40) == (_DWORD)v8)
    {
      unint64_t v22 = 0LL;
      BOOL v130 = 0;
LABEL_15:
      uint64_t v25 = v7;
      if (sub_1000A86F0())
      {
        uint64_t v33 = *(int *)(*(void *)(*((void *)&xmmword_1008DD4E8 + v7) + 8LL) + 88 * v22 + 44);
        uint64_t v34 = v33 > 2 ? "unknown CL service state" : off_100881D40[v33];
        sub_1001EE134( (uint64_t)"Removal confirmed and local service exists, removing while in state %s ",  v26,  v27,  v28,  v29,  v30,  v31,  v32,  (uint64_t)v34);
        uint64_t v37 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v38 = sub_1001EDDCC();
          *(_DWORD *)__int128 buf = 136446210;
          int v132 = v38;
          _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      unsigned int v39 = *(_DWORD *)(*(void *)(*((void *)&xmmword_1008DD4E8 + v25) + 8LL) + 88 * v22 + 32);
      if (v39 >= 0x20) {
        size_t v36 = 32LL;
      }
      else {
        size_t v36 = v39;
      }
      uint64_t v40 = sub_1000B17F4(v36);
      uint64_t v35 = v40;
      if (v40) {
        memmove(v40, (const void *)(*(void *)(*((void *)&xmmword_1008DD4E8 + v25) + 8LL) + 88 * v22), v36);
      }
      int v128 = *(_DWORD *)(*(void *)(*((void *)&xmmword_1008DD4E8 + v25) + 8LL) + 88 * v22 + 36);
      BOOL v41 = sub_10008D8B4(a1);
      uint64_t v42 = *((void *)&xmmword_1008DD4E8 + v25);
      if (v41
        || (uint64_t v43 = *(void *)(v42 + 8), *(_DWORD *)(v43 + 88 * v22 + 48) == 2) && *(_DWORD *)(v43 + 88 * v22 + 44) == 2)
      {
        int v44 = *(_DWORD *)(v42 + 16);
        if (v44 || (sub_1001EE2A0(), uint64_t v42 = *((void *)&xmmword_1008DD4E8 + v25), (v44 = *(_DWORD *)(v42 + 16)) != 0))
        {
          unsigned int v45 = v44 - 1;
          *(_DWORD *)(v42 + 16) = v44 - 1;
          memmove( (void *)(*(void *)(v42 + 8) + 88 * v22),  (const void *)(*(void *)(v42 + 8) + 88LL * (v44 - 1)),  0x58uLL);
          uint64_t v46 = *(void *)(*((void *)&xmmword_1008DD4E8 + v25) + 8LL) + 88LL * v45;
          *(void *)(v46 + 80) = 0LL;
          *(_OWORD *)(v46 + 48) = 0u;
          *(_OWORD *)(v46 + 64) = 0u;
          *(_OWORD *)(v46 + 16) = 0u;
          *(_OWORD *)(v46 + 32) = 0u;
          *(_OWORD *)uint64_t v46 = 0u;
        }

        else if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"PeerID %d nb channels was zero when serviced was removed",  v118,  v119,  v120,  v121,  v122,  v123,  v124,  v127);
          unsigned int v125 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v125, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Peripheral resetting service-state for id %d, channel %d",  v47,  v48,  v49,  v50,  v51,  v52,  v53,  v8);
          uint64_t v54 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v55 = sub_1001EDDCC();
            *(_DWORD *)__int128 buf = 136446210;
            int v132 = v55;
            _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        *(void *)(*(void *)(*((void *)&xmmword_1008DD4E8 + v25) + 8LL) + 88 * v22 + 44) = 0x100000001LL;
      }

      goto LABEL_37;
    }

    unint64_t v22 = 0LL;
    uint64_t v23 = (int *)(v21 + 128);
    while (v20 - 1 != v22)
    {
      int v24 = *v23;
      v23 += 22;
      ++v22;
      if (v24 == (_DWORD)v8)
      {
        BOOL v130 = v22 >= v20;
        goto LABEL_15;
      }
    }
  }

  uint64_t v35 = 0LL;
  size_t v36 = 0LL;
  int v128 = 0;
  BOOL v130 = 1;
LABEL_37:
  size_t v129 = v36;
  unsigned int v56 = (unsigned __int16)word_1008DD4E2;
  if (word_1008DD4E2)
  {
    unint64_t v57 = 0LL;
    char v58 = 0;
    do
    {
      if (*(_DWORD *)(*((void *)&xmmword_1008DD4E8 + v57) + 16LL))
      {
        unint64_t v59 = 0LL;
        uint64_t v60 = 40LL;
        do
        {
          if (sub_10008D8B4(a1)
            && *(_DWORD *)(*(void *)(*((void *)&xmmword_1008DD4E8 + v57) + 8LL) + v60) == (_DWORD)v8)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"Central waiting for more", v61, v62, v63, v64, v65, v66, v67, v127);
              uint64_t v68 = (os_log_s *)sub_100086554(0x51u);
              if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v69 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446210;
                int v132 = v69;
                _os_log_impl((void *)&_mh_execute_header, v68, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }

            char v58 = 1;
          }

          ++v59;
          v60 += 88LL;
        }

        while (v59 < *(unsigned int *)(*((void *)&xmmword_1008DD4E8 + v57) + 16LL));
        unsigned int v56 = (unsigned __int16)word_1008DD4E2;
      }

      ++v57;
    }

    while (v57 < v56);
  }

  else
  {
    char v58 = 0;
  }

  if ((v58 & 1) != 0 || !word_1008DD568)
  {
LABEL_82:
    unsigned int v87 = v35;
  }

  else
  {
    unint64_t v70 = 0LL;
    uint64_t v71 = qword_1008DD570;
    while (1)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"receivedServiceRemovedCfm:  unregistering service[%d]= %d",  v72,  v73,  v74,  v75,  v76,  v77,  v78,  v70);
        uint64_t v79 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v79, OS_LOG_TYPE_INFO))
        {
          uint64_t v80 = sub_1001EDDCC();
          *(_DWORD *)__int128 buf = 136446210;
          int v132 = v80;
          _os_log_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
        }
      }

      if (((v130 | sub_10008D8B4(a1)) & 1) == 0
        && (_DWORD)v129 == LOBYTE(qword_1008DD570[9 * v70 + 1])
        && !memcmp((const void *)qword_1008DD570[9 * v70], v35, v129))
      {
        int v81 = HIDWORD(qword_1008DD570[9 * v70 + 1]);
        BOOL v82 = v128 == 1 && v81 == 0;
        BOOL v83 = v82;
        BOOL v84 = !v128 && v81 == 1;
        BOOL v85 = v84;
        BOOL v86 = v81 == 2 && v128 == 2;
        if (v86 || v83 || v85) {
          break;
        }
      }

      ++v70;
      v71 += 9;
    }

    if (*((_BYTE *)v71 + 21) && (!sub_10008D8B4(a1) || *((unsigned __int16 *)v71 + 9) == (_DWORD)v8))
    {
      uint64_t v96 = (void (*)(void *, size_t, uint64_t))v71[8];
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Found matching services, unregistering serviceID %d, unregisterCb %p",  v97,  v98,  v99,  v100,  v101,  v102,  v103,  v8);
        uint64_t v104 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v104, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v105 = sub_1001EDDCC();
          *(_DWORD *)__int128 buf = 136446210;
          int v132 = v105;
          _os_log_impl((void *)&_mh_execute_header, v104, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      uint64_t v106 = *((unsigned int *)v71 + 3);
      uint64_t v107 = v35;
      if (!v35)
      {
        else {
          size_t v108 = *((unsigned __int8 *)v71 + 8);
        }
        size_t v129 = v108;
        uint64_t v109 = sub_1000B17F4(v108);
        if (v109)
        {
          uint64_t v107 = v109;
          memmove(v109, (const void *)*v71, v108);
        }

        else
        {
          uint64_t v107 = 0LL;
        }
      }

      sub_1000B1838((void *)*v71);
      unint64_t v126 = &qword_1008DD570[9 * (unsigned __int16)--word_1008DD568];
      memmove(v71, v126, 0x48uLL);
      *(_OWORD *)unint64_t v126 = 0u;
      *((_OWORD *)v126 + 1) = 0u;
      *((_OWORD *)v126 + 2) = 0u;
      *((_OWORD *)v126 + 3) = 0u;
      v126[8] = 0LL;
      unsigned int v87 = v107;
      if (v96) {
        v96(v107, v129, v106);
      }
    }

    else
    {
      unsigned int v87 = v35;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Got an unregister for something not being unregistered...",  v110,  v111,  v112,  v113,  v114,  v115,  v116,  v127);
        uint64_t v117 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v117, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

  if (v130
    && !(v58 & 1 | (word_1008DD568 == 0))
    && !sub_10008D8B4(a1)
    && sub_1000A86F0()
    && (sub_1001EE134( (uint64_t)"receivedServiceRemovedCfm: ignored, no matching local service",  v88,  v89,  v90,  v91,  v92,  v93,  v94,  v127),  uint64_t v95 = (os_log_s *)sub_100086554(0x51u),  os_log_type_enabled(v95, OS_LOG_TYPE_ERROR)))
  {
    sub_100657858();
    if (!v87) {
      return;
    }
  }

  else if (!v87)
  {
    return;
  }

  sub_1000B1838(v87);
}

uint64_t sub_1000962EC(__int128 *a1, uint64_t a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Signaling error %d", v4, v5, v6, v7, v8, v9, v10, *(unsigned __int8 *)(a2 + 2));
    uint64_t v11 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t result = sub_10008DE08((uint64_t)a1);
  if ((_DWORD)result == -1
    || (unsigned int v13 = result, v14 = *((void *)&xmmword_1008DD4E8 + result), *(_BYTE *)(v14 + 73))
    || !*(_BYTE *)(v14 + 74)
    || (uint64_t result = sub_10008D8B4((uint64_t)a1), !(_DWORD)result))
  {
    if (off_1008F29E0) {
      return off_1008F29E0(a1, 81LL, 3221LL, *(unsigned __int8 *)(a2 + 2));
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received an Error response from the other side, we're not rxOK yet, and we're central, and we're pendin g version, this is a response for version msg",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  v23);
      unint64_t v22 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v25 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    *(_BYTE *)(*((void *)&xmmword_1008DD4E8 + v13) + 74LL) = 0;
    sub_100097070(a1);
    return sub_10008E4EC(a1);
  }

  return result;
}

void sub_10009647C(unsigned __int16 *a1)
{
  unsigned int v2 = sub_10008DE08((uint64_t)a1);
  if (v2 == -1) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)(*((void *)&xmmword_1008DD4E8 + v2) + 72LL)) {
    sub_1001EE2A0();
  }
  if (v2 != -1)
  {
    uint64_t v3 = *((void *)&xmmword_1008DD4E8 + v2);
    if (!*(_BYTE *)(v3 + 72))
    {
      *(_BYTE *)(v3 + 72) = 1;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"AssertPower for lm 0x%4x", v4, v5, v6, v7, v8, v9, v10, *a1);
        uint64_t v11 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136446210;
          uint64_t v55 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      sub_1000B12F4();
    }
  }

  uint64_t v52 = 0LL;
  uint64_t v53 = 0LL;
  int v51 = 0;
  unsigned int v12 = sub_10008DE08((uint64_t)a1);
  if (v12 == -1)
  {
    sub_1001EE134((uint64_t)"sendTimeSyncCorrection peerID is invalid", v21, v22, v23, v24, v25, v26, v27, v50);
    uint64_t v28 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_23:
    sub_100657858();
    return;
  }

  unsigned int v13 = v12;
  unsigned int v14 = *(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v12) + 48LL);
  if (v14 <= 7) {
    unsigned __int16 v15 = 20;
  }
  else {
    unsigned __int16 v15 = 21;
  }
  if (v14 <= 7) {
    size_t v16 = 20LL;
  }
  else {
    size_t v16 = 21LL;
  }
  uint64_t v17 = sub_1000B17F4(v16);
  if (!v17)
  {
    sub_1001EE134((uint64_t)"sendTimeSyncCorrection memory allocation failed", v29, v30, v31, v32, v33, v34, v35, v50);
    size_t v36 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_23;
  }

  uint64_t v18 = v17;
  sub_1000B0868(&v53);
  sub_1000B08C0(&v52);
  sub_1000B07B4(&v51);
  int v19 = v51 / 60;
  _BYTE *v18 = 113;
  if (*(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v13) + 48LL) < 8u)
  {
    unsigned int v20 = 2;
  }

  else
  {
    v18[2] = 0;
    unsigned int v20 = 3;
  }

  v18[1] = 18;
  uint64_t v37 = &v18[v20];
  *(_DWORD *)uint64_t v37 = HIDWORD(v53);
  __int16 v38 = WORD1(v53);
  *((_WORD *)v37 + 2) = v53;
  *((_WORD *)v37 + 3) = v38;
  __int16 v39 = HIWORD(v52);
  *((_WORD *)v37 + 4) = WORD2(v52);
  *((_WORD *)v37 + 5) = v39;
  __int16 v40 = WORD1(v52);
  *((_WORD *)v37 + 6) = v52;
  *((_WORD *)v37 + 7) = v40;
  *((_WORD *)v37 + 8) = v19;
  *(void *)(qword_1008DDC38 + 128) = sub_100098104;
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Sending time info t1={%u,%u}, m1={%u,%u} GMT:%d index %d",  v41,  v42,  v43,  v44,  v45,  v46,  v47,  v53);
    uint64_t v48 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v49 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v55 = v49;
      _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

void sub_100096810(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v35 = 0LL;
  sub_1000B08C0(&v35);
  unsigned int v6 = sub_10008DE08(a1);
  if (v6 == -1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Invalid peer for time data", v15, v16, v17, v18, v19, v20, v21, v34);
      uint64_t v22 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        goto LABEL_5;
      }
    }
  }

  else if (a3 > 0xF)
  {
    unsigned int v23 = v6;
    uint64_t v24 = *((void *)&xmmword_1008DD4E8 + v6);
    *(void *)(v24 + 28) = v35;
    *(_DWORD *)(v24 + 40) = *(_DWORD *)a2;
    *(_DWORD *)(v24 + 36) = *(_DWORD *)(a2 + 4);
    *(_DWORD *)(v24 + 24) = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(v24 + 20) = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(v24 + 44) = 0;
    if (a3 == 18) {
      *(_DWORD *)(v24 + 44) = 60 * ((__int16)(*(unsigned __int8 *)(a2 + 17) << 8) | *(unsigned __int8 *)(a2 + 16));
    }
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received time info t1={%u,%u}, m1={%u,%u} at {%u,%u} GMT:%d",  v25,  v26,  v27,  v28,  v29,  v30,  v31,  *(unsigned int *)(*((void *)&xmmword_1008DD4E8 + v23) + 36LL));
      uint64_t v32 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v33 = sub_1001EDDCC();
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v37 = v33;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Wrong size for time data", v7, v8, v9, v10, v11, v12, v13, v34);
    unsigned int v14 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
LABEL_5:
    }
      sub_100657858();
  }

void sub_100096A0C(uint64_t a1, double *a2, unsigned int a3)
{
  unsigned int v6 = sub_10008DE08(a1);
  if (v6 != -1)
  {
    uint64_t v59 = 0LL;
    if (a3 > 0xF)
    {
      uint64_t v18 = *(unsigned int *)a2;
      uint64_t v17 = *((unsigned int *)a2 + 1);
      double v62 = a2[1];
      uint64_t v19 = v6;
      sub_1000B0920( v17 | (v18 << 32),  *(void *)(*((void *)&xmmword_1008DD4E8 + v6) + 20LL),  &v62,  &v59,  v62,  v7,  v8);
      if (v20)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Invalid time, newer is smaller ({%u,%u} vs {%u,%u})",  v21,  v22,  v23,  v24,  v25,  v26,  v27,  v17);
          uint64_t v28 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        *(void *)(*((void *)&xmmword_1008DD4E8 + v19) + 56LL) = 0LL;
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Time was {%u,%u} at remote {%u,%u} received at {%u,%u}",  v29,  v30,  v31,  v32,  v33,  v34,  v35,  *(unsigned int *)(*((void *)&xmmword_1008DD4E8 + v19) + 36LL));
          size_t v36 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v37 = sub_1001EDDCC();
            *(_DWORD *)__int128 buf = 136446210;
            uint64_t v61 = v37;
            _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Remote TX of {%u,%u}", v38, v39, v40, v41, v42, v43, v44, v17);
          uint64_t v45 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v46 = sub_1001EDDCC();
            *(_DWORD *)__int128 buf = 136446210;
            uint64_t v61 = v46;
            _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Remote correction by {%u,%u}", v47, v48, v49, v50, v51, v52, v53, v59);
          uint64_t v54 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v55 = sub_1001EDDCC();
            *(_DWORD *)__int128 buf = 136446210;
            uint64_t v61 = v55;
            _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        uint64_t v56 = *((void *)&xmmword_1008DD4E8 + v19);
        unint64_t v57 = *(void (**)(uint64_t, void, void, void, uint64_t, void, void))(v56 + 56);
        if (v57)
        {
          v57( a1,  *(void *)(v56 + 36),  *(void *)(v56 + 28),  *(void *)(v56 + 20),  v59,  *(unsigned int *)(v56 + 44),  *(void *)(v56 + 64));
          uint64_t v56 = *((void *)&xmmword_1008DD4E8 + v19);
        }

        *(void *)(v56 + 56) = 0LL;
        *(void *)(v56 + 20) = 0LL;
        *(void *)(v56 + 36) = 0LL;
        *(void *)(v56 + 28) = 0LL;
        *(_DWORD *)(v56 + 44) = 0;
      }
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Wrong size for time data", v9, v10, v11, v12, v13, v14, v15, v58);
      uint64_t v16 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

uint64_t sub_100096D08(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4 = byte_1008DD3E0;
  if (byte_1008DD3E0)
  {
    uint64_t v8 = result;
    unint64_t v9 = 0LL;
    uint64_t v10 = &qword_1008DD3E8;
    do
    {
      if (*v10)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Received cl data with size %d for session %d", v11, v12, v13, v14, v15, v16, v17, a3);
          uint64_t v18 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v19 = sub_1001EDDCC();
            *(_DWORD *)__int128 buf = 136446210;
            uint64_t v21 = v19;
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t))*v10)( v8,  a2,  (unsigned __int16)a3,  v10[1],  a4);
        unsigned int v4 = byte_1008DD3E0;
      }

      ++v9;
      v10 += 2;
    }

    while (v9 < v4);
  }

  return result;
}

void sub_100096E50(__int128 *a1, _WORD *a2, uint64_t a3)
{
  unsigned int v6 = sub_10008DE08((uint64_t)a1);
  if (v6 == -1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Received DID Info for an unknown peer", v15, v16, v17, v18, v19, v20, v21, v35);
      uint64_t v22 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  else if (a3 > 5)
  {
    if (!a2) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c",  1932,  "data");
    }
    __int16 v23 = a2[1];
    __int16 v24 = a2[2];
    if (a3 < 7)
    {
      __int16 v25 = -1;
    }

    else
    {
      if ((a3 & 0xFFF8) == 0) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c",  1939,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      __int16 v25 = a2[3];
    }

    uint64_t v26 = (_WORD *)*((void *)&xmmword_1008DD4E8 + v6);
    v26[50] = *a2;
    v26[51] = v23;
    v26[52] = v24;
    v26[53] = v25;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received DeviceID for %: vid 0x%x pid 0x%x version 0x%x chipset 0x%x",  v27,  v28,  v29,  v30,  v31,  v32,  v33,  (uint64_t)a1 + 49);
      uint64_t v34 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v37 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Data size error %d", v7, v8, v9, v10, v11, v12, v13, a3);
      uint64_t v14 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    *(_WORD *)__int128 buf = 264;
    buf[2] = 1;
    sub_10008DF98(a1, buf, 3u, 0);
  }

void sub_100097070(__int128 *a1)
{
  uint64_t v2 = sub_10008DE08((uint64_t)a1);
  if ((_DWORD)v2 == -1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Can not send services, peer is invalid for handle %p",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  (uint64_t)a1);
      uint64_t v17 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v3 = v2;
  if (!sub_100097844(v2)) {
    return;
  }
  else {
    int v4 = 3;
  }
  int v109 = v4;
  int v5 = v4 + 1;
  if (word_1008DD568)
  {
    unint64_t v6 = 0LL;
    uint64_t v7 = qword_1008DD570;
    unsigned int v8 = v4 + 1;
    while (1)
    {
      unsigned int v9 = v8;
      if (sub_100097948((uint64_t)v7, (uint64_t)a1, v3, v6))
      {
        v8 += *((unsigned __int8 *)v7 + 8) + 6;
      }

      ++v6;
      v7 += 9;
      if (v6 >= (unsigned __int16)word_1008DD568)
      {
        LODWORD(v6) = 0;
        unsigned int v9 = v8;
        goto LABEL_21;
      }
    }

    char v18 = sub_1000A86F0();
    if ((v18 & 1) != 0)
    {
      sub_1001EE134( (uint64_t)"Services limit found for peerID %d, remote version %d, pdu-size %d, temp pdu-size %d, index Limit %d",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v3);
      uint64_t v26 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v113 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }

  else
  {
    LODWORD(v6) = 0;
    unsigned int v9 = v4 + 1;
  }

void sub_1000977D8(uint64_t a1)
{
  if ((_DWORD)a1 && sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"PhyStatsEnabled with error %!", v2, v3, v4, v5, v6, v7, v8, a1);
    unsigned int v9 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

BOOL sub_100097844(unsigned int a1)
{
  int v1 = *(_DWORD *)(*((void *)&xmmword_1008DD4E8 + a1) + 52LL);
  if ((v1 & 0x200) != 0 && sub_1000A86F0())
  {
    uint64_t v10 = **((void **)&xmmword_1008DD4E8 + a1);
    int v11 = *(unsigned __int8 *)(v10 + 55);
    uint64_t v12 = v10 + 57;
    uint64_t v13 = v10 + 49;
    if (v11) {
      uint64_t v13 = v12;
    }
    sub_1001EE134((uint64_t)"Peer %: does not support CL Services", v3, v4, v5, v6, v7, v8, v9, v13);
    uint64_t v14 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v17 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  return (v1 & 0x200) == 0;
}

uint64_t sub_100097948(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4)
{
  else {
    return sub_1000979C8(a3, (const void *)qword_1008DD570[9 * a4], LOBYTE(qword_1008DD570[9 * a4 + 1]), a2);
  }
}

uint64_t sub_1000979C8(unsigned int a1, const void *a2, unsigned int a3, uint64_t a4)
{
  if (a2 && a3)
  {
    char v53 = 0;
    memset(v52, 0, sizeof(v52));
    if (a3 > 0x20) {
      __strlcpy_chk(v52, "Invalid", 33LL, 33LL);
    }
    else {
      __strncpy_chk(v52);
    }
    BOOL v20 = sub_10008D8B4(a4);
    if (a3 >= 0xF) {
      size_t v21 = 15LL;
    }
    else {
      size_t v21 = a3;
    }
    int v22 = memcmp("com.apple.BT.TS", a2, v21);
    uint64_t result = 1LL;
    if (!byte_1008DD4E0 && !v22)
    {
      uint64_t v23 = *((void *)&xmmword_1008DD4E8 + a1);
      if (*(unsigned __int8 *)(v23 + 48) > 8u)
      {
        if (v20)
        {
          if ((dword_1008DDC54 & 0x400) != 0 && (*(_BYTE *)(v23 + 53) & 8) != 0) {
            return result;
          }
        }

        else if ((dword_1008DDC54 & 0x800) != 0 && (*(_BYTE *)(v23 + 53) & 4) != 0)
        {
          return result;
        }

        int v44 = sub_1000A86F0();
        uint64_t result = 0LL;
        if (v44)
        {
          uint64_t v45 = **((void **)&xmmword_1008DD4E8 + a1);
          int v46 = *(unsigned __int8 *)(v45 + 55);
          uint64_t v47 = v45 + 57;
          uint64_t v48 = v45 + 49;
          if (v46) {
            uint64_t v48 = v47;
          }
          sub_1001EE134( (uint64_t)"Peer %: ver9 We do not support TS isCentral=%d isPhone=%d isWatch=%d . %s ",  v37,  v38,  v39,  v40,  v41,  v42,  v43,  v48);
          uint64_t v17 = (os_log_s *)sub_100086554(0x51u);
          BOOL v49 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
          uint64_t result = 0LL;
          if (v49)
          {
LABEL_34:
            *(_DWORD *)__int128 buf = 136446210;
            uint64_t v51 = sub_1001EDDCC();
            uint64_t v19 = buf;
            goto LABEL_35;
          }
        }
      }

      else
      {
        if (v20)
        {
          if ((dword_1008DDC54 & 0x100) != 0) {
            return result;
          }
        }

        else if ((dword_1008DDC54 & 0x80) != 0)
        {
          return result;
        }

        int v31 = sub_1000A86F0();
        uint64_t result = 0LL;
        if (v31)
        {
          uint64_t v32 = **((void **)&xmmword_1008DD4E8 + a1);
          int v33 = *(unsigned __int8 *)(v32 + 55);
          uint64_t v34 = v32 + 57;
          uint64_t v35 = v32 + 49;
          if (v33) {
            uint64_t v35 = v34;
          }
          sub_1001EE134( (uint64_t)"Peer %: We do not support TS isCentral=%d isPhone=%d isWatch=%d . %s ",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  v35);
          uint64_t v17 = (os_log_s *)sub_100086554(0x51u);
          BOOL v36 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
          uint64_t result = 0LL;
          if (v36) {
            goto LABEL_34;
          }
        }
      }
    }
  }

  else
  {
    int v15 = sub_1000A86F0();
    uint64_t result = 0LL;
    if (v15)
    {
      sub_1001EE134((uint64_t)"Invalid service name query over %p", v8, v9, v10, v11, v12, v13, v14, a4);
      uint64_t v17 = (os_log_s *)sub_100086554(0x51u);
      BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
      uint64_t result = 0LL;
      if (v18)
      {
        LODWORD(v52[0]) = 136446210;
        *(void *)((char *)v52 + 4) = sub_1001EDDCC();
        uint64_t v19 = (uint8_t *)v52;
LABEL_35:
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", v19, 0xCu);
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_100097CE4(__int128 *a1, char a2, __int16 a3, unsigned int a4, __int16 a5)
{
  unsigned int v10 = sub_10008DE08((uint64_t)a1);
  if (v10 == -1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Can not send accept channel, peer is invalid for handle %p",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  (uint64_t)a1);
      uint64_t v25 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 414LL;
  }

  else
  {
    unsigned int v11 = v10;
    unsigned int v12 = *(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v10) + 48LL);
    if (v12 <= 7) {
      unsigned __int16 v13 = 7;
    }
    else {
      unsigned __int16 v13 = 8;
    }
    if (v12 <= 7) {
      size_t v14 = 7LL;
    }
    else {
      size_t v14 = 8LL;
    }
    int v15 = sub_1000B17F4(v14);
    if (v15)
    {
      uint64_t v16 = v15;
      _BYTE *v15 = 4;
      if (*(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v11) + 48LL) < 8u)
      {
        unsigned int v17 = 2;
      }

      else
      {
        _DWORD v15[2] = 0;
        unsigned int v17 = 3;
      }

      v15[1] = 5;
      uint64_t v35 = &v15[v17];
      _BYTE *v35 = a2;
      *(_WORD *)(v35 + 1) = a3;
      *(_WORD *)(v35 + 3) = a5;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Sending accept channel 0x%x(%d) / 0x%x(%d) for service %d to %p index %d",  v36,  v37,  v38,  v39,  v40,  v41,  v42,  a4);
        uint64_t v43 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136446210;
          int v46 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      return sub_10008DF98(a1, v16, v13, 1);
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Can not allocate memory for channel creation after acceptance",  v27,  v28,  v29,  v30,  v31,  v32,  v33,  v44);
        uint64_t v34 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 106LL;
    }
  }

void sub_100097F2C(__int128 *a1, unsigned int a2, char a3)
{
  unsigned int v6 = sub_10008DE08((uint64_t)a1);
  if (v6 == -1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Can not send accept channel, peer is invalid for handle %p",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  (uint64_t)a1);
      uint64_t v21 = (os_log_s *)sub_100086554(0x51u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    unsigned int v7 = v6;
    if (sub_100097844(v6))
    {
      unsigned int v8 = *(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v7) + 48LL);
      unsigned __int16 v9 = v8 <= 7 ? 5 : 6;
      size_t v10 = v8 <= 7 ? 5LL : 6LL;
      unsigned int v11 = sub_1000B17F4(v10);
      if (v11)
      {
        unsigned int v12 = v11;
        _BYTE *v11 = 7;
        if (*(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v7) + 48LL) < 8u)
        {
          unsigned int v13 = 2;
        }

        else
        {
          v11[2] = 0;
          unsigned int v13 = 3;
        }

        v11[1] = 3;
        uint64_t v22 = &v11[v13];
        *(_WORD *)uint64_t v22 = a2;
        v22[2] = a3;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Sending removed service %d confirmation with error %d to %p index %d",  v23,  v24,  v25,  v26,  v27,  v28,  v29,  a2);
          uint64_t v30 = (os_log_s *)sub_100086554(0x51u);
          if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)__int128 buf = 136446210;
            uint64_t v32 = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        sub_10008DF98(a1, v12, v9, 1);
      }
    }
  }

void sub_100098104(__int128 *a1)
{
  uint64_t v43 = 0LL;
  mach_timebase_info v46 = 0LL;
  unsigned int v2 = sub_10008DE08((uint64_t)a1);
  if (v2 == -1)
  {
    sub_1001EE134((uint64_t)"sendTimeSyncCorrection peerID is invalid", v13, v14, v15, v16, v17, v18, v19, v42);
    uint64_t v20 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_13:
    sub_100657858();
    return;
  }

  unsigned int v3 = v2;
  unsigned int v4 = *(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v2) + 48LL);
  if (v4 <= 7) {
    char v5 = 2;
  }
  else {
    char v5 = 3;
  }
  if (v4 <= 7) {
    size_t v6 = 18LL;
  }
  else {
    size_t v6 = 19LL;
  }
  unsigned int v7 = sub_1000B17F4(v6);
  if (!v7)
  {
    sub_1001EE134((uint64_t)"sendTimeSyncCorrection memory allocation failed", v21, v22, v23, v24, v25, v26, v27, v42);
    uint64_t v28 = (os_log_s *)sub_100086554(0x51u);
    if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_13;
  }

  unsigned int v8 = v7;
  uint64_t v9 = v3;
  sub_1000B08C0(&v43);
  sub_1000B08E8(&v46);
  *unsigned int v8 = 114;
  unsigned int v10 = (unsigned __int16)v6;
  char v11 = v6 - v5;
  if (*(unsigned __int8 *)(*((void *)&xmmword_1008DD4E8 + v9) + 48LL) < 8u)
  {
    unsigned int v12 = 2;
  }

  else
  {
    void v8[2] = 0;
    unsigned int v12 = 3;
  }

  v8[1] = v11;
  uint64_t v29 = &v8[v12];
  *(_DWORD *)uint64_t v29 = HIDWORD(v43);
  __int16 v30 = WORD1(v43);
  *((_WORD *)v29 + 2) = v43;
  *((_WORD *)v29 + 3) = v30;
  __int16 numer_high = HIWORD(v46.numer);
  *((_WORD *)v29 + 4) = v46.numer;
  *((_WORD *)v29 + 5) = numer_high;
  __int16 denom_high = HIWORD(v46.denom);
  *((_WORD *)v29 + 6) = v46.denom;
  *((_WORD *)v29 + 7) = denom_high;
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Sending time sync correction {%u,%u} with conversion {%u,%u} index %d",  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v43);
    uint64_t v40 = (os_log_s *)sub_100086554(0x51u);
    if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v41 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v45 = v41;
      _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  sub_10008DF98(a1, v8, v10, 1);
  sub_100091DAC((unsigned __int16 *)a1);
}

void sub_10009838C()
{
  int v0 = &unk_1008DD000;
  if (word_1008DD568)
  {
    uint64_t v1 = 0LL;
    do
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Looping through service[%d][%d]= %d serviceType=%d", v2, v3, v4, v5, v6, v7, v8, v1);
        uint64_t v9 = (os_log_s *)sub_100086554(0x51u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          unsigned int v10 = sub_1001EDDCC();
          *(_DWORD *)__int128 buf = 136446210;
          *(void *)&uint8_t buf[4] = v10;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
        }
      }

      if (BYTE5(qword_1008DD570[9 * v1 + 2]))
      {
        char v11 = &qword_1008DD570[9 * v1];
        uint64_t v12 = *((unsigned int *)v11 + 3);
        uint64_t v14 = v11 + 1;
        unsigned int v13 = *((unsigned __int8 *)v11 + 8);
        uint64_t v40 = v14;
        unsigned int v41 = v1;
        if (v13 >= 0x20) {
          size_t v15 = 32LL;
        }
        else {
          size_t v15 = v13;
        }
        uint64_t v16 = sub_1000B17F4(v15);
        uint64_t v42 = (const void **)&qword_1008DD570[9 * v1];
        memmove(v16, *v42, v15);
        unsigned __int16 v17 = word_1008DD4E2;
        if (!word_1008DD4E2) {
          goto LABEL_25;
        }
        uint64_t v38 = v1;
        unint64_t v18 = 0LL;
        int v19 = 0;
        do
        {
          uint64_t v20 = *((void *)&xmmword_1008DD4E8 + v18);
          if (*(_DWORD *)(v20 + 16))
          {
            uint64_t v21 = 0LL;
            unint64_t v22 = 0LL;
            do
            {
              uint64_t v23 = (_DWORD *)(*(void *)(v20 + 8) + v21);
              if (v23[8] == (_DWORD)v15 && !memcmp(v23, v16, v15))
              {
                BOOL v24 = sub_10008D8B4(*(void *)v20);
                uint64_t v25 = (uint64_t *)*((void *)&xmmword_1008DD4E8 + v18);
                if (v24) {
                  v19 |= *(_DWORD *)(v25[1] + v21 + 36) == (_DWORD)v12;
                }
                BOOL v26 = sub_10008D8B4(*v25);
                uint64_t v20 = *((void *)&xmmword_1008DD4E8 + v18);
                if (!v26) {
                  v19 |= sub_100090180((_DWORD *)(*(void *)(v20 + 8) + v21), v16, v15, v12);
                }
              }

              ++v22;
              v21 += 88LL;
            }

            while (v22 < *(unsigned int *)(v20 + 16));
            unsigned __int16 v17 = word_1008DD4E2;
          }

          ++v18;
        }

        while (v18 < v17);
        int v0 = (_WORD *)&unk_1008DD000;
        uint64_t v1 = v38;
        if ((v19 & 1) != 0)
        {
          uint64_t v1 = (v38 + 1);
        }

        else
        {
LABEL_25:
          uint64_t v39 = (void (*)(void *, size_t, uint64_t))qword_1008DD570[9 * v41 + 8];
          char v47 = 0;
          *(_OWORD *)__int128 buf = 0u;
          __int128 v46 = 0u;
          else {
            __strlcpy_chk(buf, "Invalid", 33LL, 33LL);
          }
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Looping through service[%d][%d]=%s id=%d serviceType=%d ToRemove",  v27,  v28,  v29,  v30,  v31,  v32,  v33,  v1);
            uint64_t v34 = (os_log_s *)sub_100086554(0x51u);
            if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v35 = sub_1001EDDCC();
              *(_DWORD *)uint64_t v43 = 136446210;
              uint64_t v44 = v35;
              _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, " %{public}s", v43, 0xCu);
            }
          }

          sub_1000B1838((void *)*v42);
          unsigned __int16 v36 = v0[692] - 1;
          v0[692] = v36;
          uint64_t v37 = &qword_1008DD570[9 * v36];
          memmove(v42, v37, 0x48uLL);
          *(_OWORD *)uint64_t v37 = 0u;
          *((_OWORD *)v37 + 1) = 0u;
          *((_OWORD *)v37 + 2) = 0u;
          *((_OWORD *)v37 + 3) = 0u;
          v37[8] = 0LL;
          if (v39) {
            v39(v16, v15, v12);
          }
        }

        sub_1000B1838(v16);
      }

      else
      {
        uint64_t v1 = (v1 + 1);
      }
    }

    while (v1 < (unsigned __int16)v0[692]);
  }

void sub_100098774(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
}

void *sub_10009877C()
{
  return sub_1001EDDCC();
}

  ;
}

uint64_t sub_100098798(uint64_t result, float a2)
{
  float *v3 = a2;
  void *v2 = result;
  return result;
}

uint64_t sub_1000987A4()
{
  byte_1008DDC70 = 0;
  sub_1000993C4();
  return sub_1001EE6E8((uint64_t)sub_1000987F8, 0LL, 3, (int *)&dword_1008DDC68);
}

uint64_t sub_1000987F8()
{
  if ((byte_1008DDC70 & 8) == 0) {
    return sub_100098818(5LL);
  }
  byte_1008DDC70 |= 0x10u;
  return result;
}

void sub_100098818(int a1)
{
  switch(byte_1008DDC70 & 7)
  {
    case 0:
      switch(a1)
      {
        case 1:
LABEL_7:
          sub_1000993D8();
          break;
        case 2:
          sub_100099514(8);
          sub_1000993EC();
          sub_1001EE6E8((uint64_t)sub_10009897C, 0LL, 3, (int *)&dword_1008DDC6C);
          char v3 = byte_1008DDC70 & 0xF8 | 1;
          goto LABEL_15;
        case 5:
          sub_1000993C4();
          uint64_t v1 = sub_1000987F8;
          uint64_t v2 = &dword_1008DDC68;
LABEL_18:
          sub_1001EE6E8((uint64_t)v1, 0LL, 3, (int *)v2);
          break;
      }

      break;
    case 1:
      switch(a1)
      {
        case 1:
          goto LABEL_7;
        case 3:
          goto LABEL_11;
        case 4:
          sub_100099514(9);
          char v3 = byte_1008DDC70 & 0xF8 | 2;
          goto LABEL_15;
        case 6:
          sub_1000993EC();
          uint64_t v1 = sub_10009897C;
          uint64_t v2 = &dword_1008DDC6C;
          goto LABEL_18;
        default:
          return;
      }

    case 2:
      if (a1 == 1)
      {
        sub_100099514(10);
        char v3 = byte_1008DDC70 & 0xF8 | 3;
LABEL_15:
        byte_1008DDC70 = v3;
      }

      else if (a1 == 3)
      {
LABEL_11:
        sub_100099400();
      }

      break;
    case 3:
      return;
    default:
      sub_100099568((uint64_t)"LE state machine, invalid state");
      break;
  }

uint64_t sub_10009897C()
{
  if ((byte_1008DDC70 & 8) == 0) {
    return sub_100098818(6LL);
  }
  byte_1008DDC70 |= 0x20u;
  return result;
}

BOOL sub_10009899C()
{
  return (byte_1008DDC70 & 7) != 2;
}

BOOL sub_1000989B4()
{
  return (byte_1008DDC70 & 7u) - 3 < 0xFFFFFFFE;
}

void sub_1000989D0()
{
  byte_1008DDC70 |= 8u;
}

void sub_1000989E4()
{
  char v0 = byte_1008DDC70;
  char v1 = byte_1008DDC70 & 0xF7;
  byte_1008DDC70 &= ~8u;
  if ((v0 & 0x10) != 0)
  {
    byte_1008DDC70 = v0 & 0xE7;
    sub_100098818(5);
    char v1 = byte_1008DDC70;
  }

  if ((v1 & 0x20) != 0)
  {
    byte_1008DDC70 = v1 & 0xDF;
    if ((v1 & 8) != 0) {
      byte_1008DDC70 = v1 | 0x20;
    }
    else {
      sub_100098818(6);
    }
  }

void sub_100098A4C()
{
  byte_1008DDC71 = 0;
}

uint64_t sub_100098A58()
{
  byte_1008DDC71 = 0;
  return sub_10009902C();
}

uint64_t sub_100098A64()
{
  if ((byte_1008DDC71 & 1) == 0)
  {
    byte_1008DDC71 = 1;
    return sub_1001EE6DC((uint64_t)sub_100098A58, 0LL, 0LL);
  }

  return result;
}

void sub_100098A90()
{
  byte_1008DDC74 = 0;
}

uint64_t sub_100098A9C(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v3 = a1;
  if (byte_1008DDC75 == 1) {
    a1 = sub_1001EE6DC((uint64_t)sub_10008C974, 0LL, 0LL);
  }
  if (v2)
  {
    unsigned int v4 = 0;
    __int16 v5 = 0;
    while (1)
    {
      uint64_t v6 = (_BYTE *)(v3 + v4);
      unsigned __int16 v7 = v2 - v5;
      __int16 v25 = 0;
      char v24 = 0;
      int v8 = byte_1008DDC74 & 7;
      if (v8 == 2)
      {
        a1 = sub_100098DD8((unsigned __int8 *)(v3 + v4), v7, &v25);
        int v11 = a1;
        switch((int)a1)
        {
          case 0:
            goto LABEL_45;
          case 1:
            if (sub_10008CA04() && !sub_10009899C()) {
              sub_100099514(3);
            }
            goto LABEL_43;
          case 2:
            sub_10008C944();
            goto LABEL_43;
          case 3:
          case 4:
            goto LABEL_32;
          case 5:
            sub_10008C94C();
            goto LABEL_43;
          case 6:
            sub_10008C954();
            goto LABEL_13;
          case 7:
            int v21 = 1;
            goto LABEL_42;
          case 8:
            int v21 = 2;
            goto LABEL_42;
          case 9:
            int v21 = 3;
            goto LABEL_42;
          case 10:
            int v21 = 4;
LABEL_42:
            sub_100098818(v21);
LABEL_43:
            byte_1008DDC74 &= 0xF8u;
            goto LABEL_44;
          default:
            sub_100099568((uint64_t)"RX: unknown message id");
LABEL_32:
            byte_1008DDC74 &= 0xF8u;
            if (v11 && v11 != 6) {
LABEL_44:
            }
              sub_10008C9DC();
            break;
        }

        goto LABEL_45;
      }

      if (v8 != 1) {
        break;
      }
      a1 = sub_1000995D4((char *)(v3 + v4), v7, &v24);
      __int16 v25 = a1;
      if (v24)
      {
LABEL_13:
        char v10 = byte_1008DDC74 & 0xF8;
LABEL_14:
        byte_1008DDC74 = v10;
      }

uint64_t sub_100098DB8(uint64_t result)
{
  byte_1008DDC75 = result;
  return result;
}

void sub_100098DC4()
{
  byte_1008DDC78 &= 0x80u;
}

uint64_t sub_100098DD8(unsigned __int8 *a1, unsigned int a2, _WORD *a3)
{
  if (!a2)
  {
LABEL_19:
    uint64_t result = 0LL;
    *a3 = a2;
    return result;
  }

  unsigned int v6 = 0;
  unsigned int v7 = byte_1008DDC78;
  while (1)
  {
    int v8 = (v7 >> 4) & 7;
    if (v8 == 2) {
      break;
    }
    if (v8 == 1)
    {
      uint64_t v14 = "tick";
      uint64_t v15 = &off_100881D58;
      while (*(unsigned __int8 *)v14 != *a1)
      {
        uint64_t v16 = v15[2];
        v15 += 2;
        uint64_t v14 = v16;
        if (!v16)
        {
          qword_1008DDC80 = 0LL;
          goto LABEL_20;
        }
      }

      qword_1008DDC80 = (uint64_t)v15;
      unsigned int v17 = v7 & 0xFFFFFF80 | 0x21;
      byte_1008DDC78 = v17;
      unsigned int v10 = v17;
    }

    else if (v8)
    {
      sub_100099568((uint64_t)"Scanner, no match");
      unsigned int v10 = byte_1008DDC78;
    }

    else
    {
      int v9 = *a1;
      unsigned int v10 = v7 & 0xFFFFFFF0 | ((_BYTE)v7 + 1) & 0xF;
      byte_1008DDC78 = v7 & 0xF0 | (v7 + 1) & 0xF;
      if ((((_BYTE)v7 + 1) & 0xFu) >= 8)
      {
        unsigned int v10 = v7 & 0xFFFFFF80 | ((_BYTE)v7 + 1) & 0xF | 0x10;
        byte_1008DDC78 = v7 & 0x80 | (v7 + 1) & 0xF | 0x10;
      }
    }

void sub_100098F78()
{
  byte_1008DDC88 = 0;
  int v0 = 3;
  do
  {
    qword_1008DDC98 = *(uint64_t *)((char *)&qword_1008DDC98 + 4);
    dword_1008DDCA0 = 0;
    --v0;
  }

  while (v0);
  dword_1008DDC8C = 0;
  word_1008DDC90 = 0;
}

uint64_t sub_100098FB4(int a1)
{
  if (!(sub_10009899C() | byte_1008DDC88)
    && sub_10008C9EC()
    && !(qword_1008DDC98 | dword_1008DDC8C))
  {
    return 1LL;
  }

  if (!sub_10009899C())
  {
    sub_10008C93C();
    if (!a1) {
      return 0LL;
    }
    goto LABEL_7;
  }

  if (a1) {
LABEL_7:
  }
    sub_10009902C();
  return 0LL;
}

uint64_t sub_10009902C()
{
  int v0 = dword_1008DDC8C;
  if (!dword_1008DDC8C)
  {
    int v0 = qword_1008DDC98;
    qword_1008DDC98 = *(uint64_t *)((char *)&qword_1008DDC98 + 4);
    dword_1008DDCA0 = 0;
    dword_1008DDC8C = v0;
  }

  switch(v0)
  {
    case 0:
      int v1 = byte_1008DDC88;
      if (!byte_1008DDC88) {
        return sub_10008C9AC();
      }
      uint64_t v2 = sub_10008C9EC();
      if ((_DWORD)v2)
      {
        int v3 = byte_1008DDC88;
        if ((byte_1008DDC88 & 1) != 0)
        {
          sub_1000FC0A8();
          sub_10008C9DC();
          int v3 = byte_1008DDC88 & 0xFE;
        }

        else if ((byte_1008DDC88 & 2) != 0)
        {
          sub_1000FC0A8();
          sub_10008C9DC();
          int v3 = byte_1008DDC88 & 0xFD;
        }

        else if ((byte_1008DDC88 & 4) != 0)
        {
          sub_1000FC0A8();
          sub_10008C9DC();
          int v3 = byte_1008DDC88 & 0xFB;
        }

        else
        {
          if ((byte_1008DDC88 & 8) == 0) {
            goto LABEL_30;
          }
          sub_1000FC0A8();
          sub_10008C9DC();
          int v3 = byte_1008DDC88 & 0xF7;
        }

        byte_1008DDC88 = v3;
      }

      else
      {
        int v3 = byte_1008DDC88;
      }

void sub_10009934C()
{
}

uint64_t sub_1000993C4()
{
  byte_1008DDC88 |= 1u;
  return sub_100098A64();
}

uint64_t sub_1000993D8()
{
  byte_1008DDC88 |= 2u;
  return sub_100098A64();
}

uint64_t sub_1000993EC()
{
  byte_1008DDC88 |= 4u;
  return sub_100098A64();
}

uint64_t sub_100099400()
{
  byte_1008DDC88 |= 8u;
  return sub_100098A64();
}

uint64_t sub_100099414()
{
  return sub_10009941C(1LL);
}

uint64_t sub_10009941C(uint64_t result)
{
  if (dword_1008DDC8C != (_DWORD)result || (_DWORD)qword_1008DDC98 != 0)
  {
    uint64_t v2 = 0LL;
    while (*(_DWORD *)((char *)&qword_1008DDC98 + v2) != (_DWORD)result)
    {
      v2 += 4LL;
      if ((_DWORD)v2 == 12) {
        goto LABEL_13;
      }
    }

    if ((_DWORD)v2 != 8)
    {
      do
      {
        *(_DWORD *)((char *)&qword_1008DDC98 + v2) = *(_DWORD *)((char *)&qword_1008DDC98 + v2 + 4);
        v2 += 4LL;
      }

      while (v2 != 8);
    }

    dword_1008DDCA0 = 0;
LABEL_13:
    uint64_t v3 = 0LL;
    while (*(_DWORD *)((char *)&qword_1008DDC98 + v3))
    {
      v3 += 4LL;
      if ((_DWORD)v3 == 12) {
        return sub_100098A64();
      }
    }

    *(_DWORD *)((char *)&qword_1008DDC98 + v3) = result;
    return sub_100098A64();
  }

  return result;
}

uint64_t sub_1000994B0()
{
  return sub_10009941C(2LL);
}

uint64_t sub_1000994B8()
{
  return sub_10009941C(3LL);
}

BOOL sub_1000994C0()
{
  return !byte_1008DDC88 && (qword_1008DDC98 | dword_1008DDC8C) == 0;
}

void sub_1000994F4()
{
}

void sub_100099514(int a1)
{
  if (a1 == 10)
  {
    sub_1000994F4();
  }

  else if (a1 == 5)
  {
    sub_100099C3C();
  }

uint64_t sub_100099530(unsigned int *a1)
{
  uint64_t result = sub_1001EE9D8(*a1);
  if ((_DWORD)result) {
    return sub_1001EEB14(*a1);
  }
  return result;
}

void sub_100099568(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"%s", v2, v3, v4, v5, v6, v7, v8, a1);
    int v9 = (os_log_s *)sub_100086554(0x3Au);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657FDC(v9);
    }
  }

  sub_1000994F4();
}

uint64_t sub_1000995D4(char *__src, int a2, _BYTE *a3)
{
  if (a2)
  {
    int v4 = a2;
    int v6 = 0;
    uint64_t v7 = qword_1008DDCA8;
    while (1)
    {
      switch(*(_DWORD *)(v7 + 652))
      {
        case 0:
        case 4:
          *a3 = 1;
          LOWORD(v6) = v6 + v4;
          return (unsigned __int16)v6;
        case 1:
          uint64_t v8 = *__src;
          if ((v8 - 1) >= 4u)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"unknown packet type received %d", v29, v30, v31, v32, v33, v34, v35, v8);
              unsigned __int16 v36 = (os_log_s *)sub_100086554(0x3Au);
              if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
              {
                uint64_t v59 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446466;
                unsigned __int8 v64 = v59;
                __int16 v65 = 1024;
                int v66 = 0xFFFF;
                _os_log_error_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
              }
            }

            uint64_t v37 = qword_1008DDCA8;
            *(_DWORD *)(qword_1008DDCA8 + 652) = 4;
            *(_BYTE *)(v37 + 656) = 1;
            int v9 = 5;
          }

          else
          {
            *(_WORD *)(v7 + 4) = 0x2000300040003uLL >> (16 * (v8 - 1));
            *(_BYTE *)(v7 + 650) = v8;
            *(_WORD *)(v7 + 6) = 0;
            *(_DWORD *)(v7 + 652) = 2;
            int v9 = 10;
          }

          sub_10009A1E0(v9);
          uint64_t v7 = qword_1008DDCA8;
          if (*(_DWORD *)(qword_1008DDCA8 + 652) == 2)
          {
            ++__src;
            --v4;
            ++v6;
          }

          goto LABEL_47;
        case 2:
          int v19 = 0;
          unsigned int v20 = *(unsigned __int16 *)(v7 + 4);
          else {
            int v21 = *(unsigned __int16 *)(v7 + 4);
          }
          int v22 = v21 + 1;
          uint64_t v23 = __src;
          break;
        case 3:
          else {
            size_t v26 = (unsigned __int16)v4;
          }
          memmove((void *)(v7 + *(unsigned __int16 *)(v7 + 6) + 10), __src, v26);
          uint64_t v7 = qword_1008DDCA8;
          int v27 = *(unsigned __int16 *)(qword_1008DDCA8 + 4);
          *(_WORD *)(qword_1008DDCA8 + 6) += v26;
          v6 += v26;
          int v28 = v27 - v26;
          *(_WORD *)(v7 + 4) = v28;
          if (!v28) {
            goto LABEL_51;
          }
          v4 -= v26;
          __src += v26;
          goto LABEL_47;
        default:
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Invalid receive state %d",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  *(unsigned int *)(qword_1008DDCA8 + 652));
            unsigned int v17 = (os_log_s *)sub_100086554(0x3Au);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
            {
              uint64_t v58 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446466;
              unsigned __int8 v64 = v58;
              __int16 v65 = 1024;
              int v66 = 0xFFFF;
              _os_log_error_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
            }
          }

          uint64_t v18 = qword_1008DDCA8;
          *(_DWORD *)(qword_1008DDCA8 + 652) = 4;
          *(_BYTE *)(v18 + 656) = 1;
          sub_10009A1E0(5);
          sub_1001EE2A0();
          uint64_t v7 = qword_1008DDCA8;
          goto LABEL_47;
      }

      while ((_WORD)v20)
      {
        char v24 = *v23++;
        uint64_t v25 = *(unsigned __int16 *)(v7 + 6);
        *(_WORD *)(v7 + 6) = v25 + 1;
        *(_BYTE *)(v7 + v25 + 10) = v24;
        LOWORD(v20) = v20 - 1;
        *(_WORD *)(v7 + 4) = v20;
        if ((unsigned __int16)++v19 >= (unsigned __int16)v4)
        {
          if ((_WORD)v20)
          {
            int v21 = v4;
            if ((unsigned __int16)v22 != (unsigned __int16)v4)
            {
              sub_1001EE2A0();
              int v21 = v22;
            }

            goto LABEL_45;
          }

          ++v21;
          break;
        }
      }

      *(_DWORD *)(v7 + 652) = 3;
      switch(*(_BYTE *)(v7 + 650))
      {
        case 1:
        case 3:
          __int16 v38 = *(unsigned __int8 *)(v7 + 12);
          goto LABEL_40;
        case 2:
          __int16 v38 = *(_WORD *)(v7 + 12);
          goto LABEL_40;
        case 4:
          __int16 v38 = *(unsigned __int8 *)(v7 + 11);
LABEL_40:
          *(_WORD *)(v7 + 4) = v38;
          unsigned __int16 v48 = *(_WORD *)(v7 + 6) + v38;
          *(_WORD *)(v7 + 8) = v48;
          if (v48 >= 0x281u)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"RxPacketHeader - bogus packet length (%d)",  v49,  v50,  v51,  v52,  v53,  v54,  v55,  *(unsigned __int16 *)(qword_1008DDCA8 + 8));
              uint64_t v56 = (os_log_s *)sub_100086554(0x3Au);
              if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR))
              {
                uint64_t v60 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446466;
                unsigned __int8 v64 = v60;
                __int16 v65 = 1024;
                int v66 = 0xFFFF;
                _os_log_error_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
              }
            }

            uint64_t v57 = qword_1008DDCA8;
            *(_DWORD *)(qword_1008DDCA8 + 652) = 4;
            *(_BYTE *)(v57 + 656) = 1;
            sub_10009A1E0(5);
          }

          break;
        default:
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Invalid packet type %d",  v39,  v40,  v41,  v42,  v43,  v44,  v45,  *(unsigned __int8 *)(qword_1008DDCA8 + 650));
            __int128 v46 = (os_log_s *)sub_100086554(0x3Au);
            if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
            {
              __int16 v61 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446466;
              unsigned __int8 v64 = v61;
              __int16 v65 = 1024;
              int v66 = 0xFFFF;
              _os_log_error_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
            }
          }

          uint64_t v47 = qword_1008DDCA8;
          *(_DWORD *)(qword_1008DDCA8 + 652) = 4;
          *(_BYTE *)(v47 + 656) = 1;
          sub_10009A1E0(5);
          sub_1001EE2A0();
          int v21 = 0;
          break;
      }

void sub_100099B10()
{
  uint64_t v0 = qword_1008DDCA8;
  if (*(_BYTE *)(qword_1008DDCA8 + 650) != 4 || *(_WORD *)(qword_1008DDCA8 + 8) != 6) {
    goto LABEL_8;
  }
  uint64_t v1 = 0LL;
  char v2 = 1;
  uint64_t v3 = &byte_1006BB97D;
  do
  {
    int v4 = (*(v3 - 1) & *(_BYTE *)(qword_1008DDCA8 + 10 + v1));
    int v5 = *v3;
    v3 += 2;
    if (v4 != v5) {
      char v2 = 0;
    }
    ++v1;
  }

  while (v1 != 6);
  if ((v2 & 1) != 0)
  {
    *(_BYTE *)(qword_1008DDCA8 + 656) = 0;
    *(_DWORD *)(v0 + 652) = 1;
    *(_WORD *)(v0 + 4) = 5;
    sub_10009A1E0(0x7FFF);
    sub_10011E468();
  }

  else
  {
LABEL_8:
    sub_10009A1E0(5);
    *(_DWORD *)(qword_1008DDCA8 + 652) = 4;
  }

uint64_t sub_100099BC0()
{
  v2[1] = 0LL;
  v2[0] = mach_continuous_time();
  sub_10012F73C( *(unsigned __int8 *)(qword_1008DDCA8 + 650),  (unsigned __int8 *)(qword_1008DDCA8 + 10),  *(unsigned __int16 *)(qword_1008DDCA8 + 8),  (uint64_t)v2);
  uint64_t v0 = qword_1008DDCA8;
  *(_DWORD *)(qword_1008DDCA8 + 652) = 1;
  *(_WORD *)(v0 + 4) = 5;
  return sub_10009A1E0(0x7FFF);
}

uint64_t sub_100099C3C()
{
  uint64_t v0 = 0LL;
  LOBYTE(v1) = 1;
  do
  {
    char v2 = v1;
    unsigned int v1 = *((unsigned __int16 *)&dword_1008DDCDC + v0);
    if (*((_WORD *)&dword_1008DDCDC + v0))
    {
      byte_1008DDCD8 = *((_BYTE *)&word_1008DDCE0 + v0);
      uint64_t v3 = (const void *)qword_1008DDCE8[v0];
      qword_1008DDCB8 = (uint64_t)v3;
      qword_1008DDCC0 = (uint64_t)v3;
      word_1008DDCD0 = v1;
      *((_WORD *)&dword_1008DDCDC + v0) = 0;
      goto LABEL_7;
    }

    uint64_t v0 = &_mh_execute_header.magic + 1;
  }

  while ((v2 & 1) != 0);
  unsigned int v1 = (unsigned __int16)word_1008DDCD0;
  if (!word_1008DDCD0) {
    return 0LL;
  }
  uint64_t v3 = (const void *)qword_1008DDCC0;
LABEL_7:
  else {
    size_t v4 = v1;
  }
  memmove((void *)qword_1008DDCB0, v3, v4);
  qword_1008DDCC0 += v4;
  word_1008DDCD0 -= v4;
  byte_1008DDCD4 = 1;
  sub_1000FC0A8();
  return 0LL;
}

uint64_t sub_100099D28(int a1, __int16 a2, int a3)
{
  if (*(_BYTE *)(qword_1008DDCA8 + 656)) {
    return 129LL;
  }
  if (a1 == 2) {
    unsigned __int16 v7 = 5;
  }
  else {
    unsigned __int16 v7 = 4;
  }
  if (sub_100098FB4(1) && byte_1008DDCD4 != 1)
  {
    if (!qword_1008DDCB0) {
      sub_1001EE2A0();
    }
    unsigned int v21 = (unsigned __int16)word_1008DDCC8;
    if (!word_1008DDCC8)
    {
      sub_1001EE2A0();
      unsigned int v21 = (unsigned __int16)word_1008DDCC8;
    }

    uint64_t v22 = qword_1008DDCB0;
    uint64_t result = 105LL;
    if (qword_1008DDCB0 && v21)
    {
      if (a3 + v7 <= v21)
      {
        *(_BYTE *)qword_1008DDCB0 = a1;
        *(_WORD *)(v22 + 1) = a2;
        *(_WORD *)(v22 + 3) = a3;
        if (a3) {
          sub_10011EF64((char *)(v22 + v7));
        }
        qword_1008DDCC0 = 0LL;
        word_1008DDCD0 = 0;
      }

      else
      {
        unsigned __int16 v23 = v7 - 1;
        word_1008DDCD0 = v23 + a3;
        *(_BYTE *)qword_1008DDCB0 = a1;
        char v24 = (char *)sub_1000B17F4((unsigned __int16)(v23 + a3));
        qword_1008DDCB8 = (uint64_t)v24;
        if (!v24)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"OI_Malloc failed, unable to segment packet", v25, v26, v27, v28, v29, v30, v31, v33);
            uint64_t v32 = (os_log_s *)sub_100086554(0x3Au);
            if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          return 106LL;
        }

        qword_1008DDCC0 = (uint64_t)v24;
        *(_WORD *)char v24 = a2;
        *((_WORD *)v24 + 1) = a3;
        if (a3) {
          sub_10011EF64(&v24[v23]);
        }
      }

      byte_1008DDCD8 = a1;
      byte_1008DDCD4 = 1;
      sub_1000FC0A8();
      sub_10008C9DC();
      return 0LL;
    }
  }

  else
  {
    uint64_t v8 = 0LL;
    for (char i = 1; ; char i = 0)
    {
      char v10 = i;
      if (!*((_WORD *)&dword_1008DDCDC + v8)) {
        break;
      }
      uint64_t v8 = &_mh_execute_header.magic + 1;
      if ((v10 & 1) == 0)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"OI_HCIIfc_Send_Req, backlog queue is full, busy fail",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  v33);
          uint64_t v18 = (os_log_s *)sub_100086554(0x3Au);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        sub_1001EE2A0();
        return 118LL;
      }
    }

    int v19 = (char *)sub_1000B17F4(a3 + v7);
    uint64_t v20 = (uint64_t)v19;
    char *v19 = a1;
    *(_WORD *)(v19 + 1) = a2;
    v19[3] = a3;
    if (a1 == 2) {
      v19[4] = BYTE1(a3);
    }
    if (a3) {
      sub_10011EF64(&v19[v7]);
    }
    uint64_t result = 0LL;
    *((_BYTE *)&word_1008DDCE0 + v8) = a1;
    *((_WORD *)&dword_1008DDCDC + v8) = a3 + v7;
    qword_1008DDCE8[v8] = v20;
  }

  return result;
}

void sub_100099FBC(uint64_t a1, __int16 a2, int a3)
{
  qword_1008DDCB0 = a1;
  word_1008DDCC8 = a2;
  if (a3 == 1216) {
    return;
  }
  unsigned __int16 v23 = 0LL;
  uint64_t v24 = 0LL;
  uint64_t v22 = 0LL;
  if ((byte_1008DDCD4 & 1) != 0)
  {
    if (!a3)
    {
      unsigned int v3 = (unsigned __int16)word_1008DDCD0;
      if (word_1008DDCD0)
      {
LABEL_26:
        else {
          size_t v20 = v3;
        }
        uint64_t v21 = qword_1008DDCC0;
        memmove((void *)qword_1008DDCB0, (const void *)qword_1008DDCC0, v20);
        qword_1008DDCC0 = v21 + v20;
        word_1008DDCD0 -= v20;
        byte_1008DDCD4 = 1;
        sub_1000FC0A8();
        return;
      }
    }

    byte_1008DDCD4 = 0;
    LODWORD(v24) = a3;
    BYTE4(v24) = byte_1008DDCD8;
    unsigned __int16 v23 = &v24;
    LOWORD(v22) = 8;
    uint64_t v4 = sub_1001EE6DC((uint64_t)sub_10009A540, &v22, 0LL);
    if ((_DWORD)v4)
    {
      uint64_t v5 = v4;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_Dispatch_RegisterFunc failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
        uint64_t v13 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    if (qword_1008DDCB8)
    {
      sub_1000B1838((void *)qword_1008DDCB8);
      qword_1008DDCB8 = 0LL;
      word_1008DDCD0 = 0;
    }

    uint64_t v14 = 0LL;
    LOBYTE(v3) = 1;
    while (1)
    {
      char v15 = v3;
      unsigned int v3 = *((unsigned __int16 *)&dword_1008DDCDC + v14);
      if (*((_WORD *)&dword_1008DDCDC + v14)) {
        break;
      }
      uint64_t v14 = &_mh_execute_header.magic + 1;
      if ((v15 & 1) == 0) {
        goto LABEL_23;
      }
    }

uint64_t sub_10009A1E0(int a1)
{
  if (sub_1001EE9D8(*(_DWORD *)qword_1008DDCA8)) {
    return sub_1001EE978(*(_DWORD *)qword_1008DDCA8, a1);
  }
  else {
    return sub_1001EE6E8((uint64_t)sub_10009A238, 0LL, a1, (int *)qword_1008DDCA8);
  }
}

void sub_10009A238()
{
  uint64_t v0 = qword_1008DDCA8;
  unsigned int v1 = *(_DWORD *)(qword_1008DDCA8 + 652);
  if (v1 < 2)
  {
    if (*(_BYTE *)(qword_1008DDCA8 + 656))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"timed out waiting for reset response", v11, v12, v13, v14, v15, v16, v17, v28);
        int v18 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      goto LABEL_14;
    }

uint64_t sub_10009A3D4()
{
  *(_BYTE *)(qword_1008DDCA8 + 656) = 0;
  uint64_t v0 = sub_1000FC2F0();
  uint64_t v1 = qword_1008DDCA8;
  *(_BYTE *)(qword_1008DDCA8 + 656) = 1;
  if ((_DWORD)v0)
  {
    uint64_t v2 = v0;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"startResynchronize, OI_HCIIfc_Send failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
      uint64_t v10 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return sub_10009A1E0(5LL);
  }

  else
  {
    *(_DWORD *)(v1 + 652) = 1;
    *(_WORD *)(v1 + 4) = 5;
    return sub_10009A1E0(20LL);
  }

uint64_t sub_10009A49C()
{
  qword_1008DDCE8[0] = 0LL;
  unk_1008DDCF0 = 0LL;
  word_1008DDCE0 = 0;
  dword_1008DDCDC = 0;
  uint64_t result = sub_1000FC040();
  if (!(_DWORD)result)
  {
    qword_1008DDCA8 = (uint64_t)sub_1000B1814(0x294uLL);
    sub_1000994F4();
    uint64_t v1 = qword_1008DDCA8;
    *(_DWORD *)(qword_1008DDCA8 + 652) = 1;
    *(_WORD *)(v1 + 4) = 5;
    sub_10009A1E0(0x7FFF);
    return 109LL;
  }

  return result;
}

uint64_t sub_10009A510()
{
  else {
    return 109LL;
  }
}

uint64_t sub_10009A538()
{
  return 640LL;
}

void sub_10009A540(uint64_t a1)
{
  if (!*(_BYTE *)(qword_1008DDCA8 + 656)) {
    sub_10012F510(*(unsigned __int8 *)(*(void *)(a1 + 8) + 4LL), **(unsigned int **)(a1 + 8));
  }
}

uint64_t sub_10009A564()
{
  if (sub_10008CA20()) {
    return 0LL;
  }
  sub_10009934C();
  return 118LL;
}

uint64_t sub_10009A58C()
{
  uint64_t result = dword_1008DDCF8;
  if (dword_1008DDCF8) {
    return sub_1001EE978(dword_1008DDCF8, (unsigned __int16)word_1008F1F84);
  }
  return result;
}

uint64_t sub_10009A5A8()
{
  dword_1008F1F7C = 4;
  return sub_10009A5BC(0);
}

uint64_t sub_10009A5BC(int a1)
{
  uint64_t result = sub_1001EE6E8((uint64_t)sub_10009AA14, 0LL, a1, &dword_1008F1F88);
  if ((_DWORD)result)
  {
    sub_1000AFE20(result);
    return sub_10009A5F0();
  }

  return result;
}

void sub_10009A5F0(_BYTE *a1, unsigned int a2)
{
  if (a2 >= 2)
  {
    switch(*a1)
    {
      case 1:
        if (a2 == 2 && a1[1] == 126)
        {
          int v2 = 0;
          int v3 = 0;
          int v4 = 1;
          break;
        }

        return;
      case 2:
        if (a2 == 2 && a1[1] == 125)
        {
          int v2 = 0;
          int v3 = 0;
          int v4 = 2;
          break;
        }

        return;
      case 3:
        int v5 = a1[1];
        if (v5 != 252) {
          goto LABEL_13;
        }
        int v2 = 0;
        int v3 = 0;
        int v4 = 3;
        break;
      case 4:
        int v5 = a1[1];
LABEL_13:
        if (v5 != 123) {
          goto LABEL_15;
        }
        int v2 = 0;
        int v3 = 0;
        int v4 = 4;
        break;
      case 5:
LABEL_15:
        int v3 = 0;
        int v4 = 5;
        int v2 = 1;
        break;
      case 6:
        int v2 = 0;
        int v4 = 6;
        int v3 = 1;
        break;
      case 7:
        if (a2 != 2 || a1[1] != 120) {
          return;
        }
        int v2 = 0;
        int v3 = 0;
        int v4 = 7;
        break;
      default:
        return;
    }

    switch(dword_1008F1F7C)
    {
      case 0:
        if (v4 != 2) {
          goto LABEL_29;
        }
        dword_1008F1F7C = 1;
        uint64_t v6 = &word_1008DDCFC;
        word_1008DDCFC = -1021;
        byte_1008DDCFE = byte_1008F1F82 | (8 * word_1008F1F78) | (16 * HIBYTE(word_1008F1F78));
        size_t v7 = 3LL;
        goto LABEL_43;
      case 1:
        if (v4 == 4)
        {
          dword_1008F1F7C = 2;
          char v17 = a1[2];
          if ((_BYTE)word_1008F1F78 && (a1[2] & 8) == 0) {
            LOBYTE(word_1008F1F78) = 0;
          }
          if ((v17 & 0x10) == 0) {
            HIBYTE(word_1008F1F78) = 0;
          }
          unsigned int v18 = v17 & 7;
          byte_1008F1F83 = v18;
          if (v18 <= byte_1008F1F82)
          {
            if (byte_1008DDCFF == 1)
            {
              byte_1008DDCFF = 0;
              sub_10011E468();
            }
          }

          else
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Configuration failed - device is not configuring link correctly",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v27);
              uint64_t v26 = (os_log_s *)sub_100086554(0x3Au);
              if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
                sub_100657858();
              }
            }

            dword_1008F1F7C = 0;
LABEL_54:
            sub_10009A5BC(1);
          }
        }

        else
        {
          if (v4 == 3)
          {
LABEL_41:
            uint64_t v6 = (__int16 *)&unk_1006BB99D;
          }

          else
          {
LABEL_29:
            if (v4 != 1) {
              return;
            }
            uint64_t v6 = (__int16 *)&unk_1006BB99B;
          }

uint64_t sub_10009A940()
{
  dword_1008DDCF8 = 0;
  dword_1008F1F7C = 0;
  byte_1008DDCFF = 0;
  uint64_t result = sub_1000FC040();
  if (!(_DWORD)result)
  {
    byte_1008F1F82 = 4;
    word_1008F1F80 = 1024;
    word_1008F1F78 = 256;
    uint64_t result = sub_10009B2EC();
    if (!(_DWORD)result)
    {
      uint64_t result = sub_10009AB2C();
      if (!(_DWORD)result)
      {
        dword_1008F1F7C = 0;
        sub_10009A5BC(1);
        return 109LL;
      }
    }
  }

  return result;
}

uint64_t sub_10009A9C0()
{
  if (dword_1008F1F7C == 2) {
    return 0LL;
  }
  else {
    return 109LL;
  }
}

uint64_t sub_10009A9D8(int a1, __int16 a2, __int16 a3)
{
  return 0LL;
}

uint64_t sub_10009A9F0()
{
  return (unsigned __int16)word_1008F1F80;
}

uint64_t sub_10009A9FC(int a1, __int16 a2, unsigned int a3, const void *a4)
{
  return 0LL;
}

void sub_10009AA14()
{
  if (dword_1008F1F7C == dword_1008DDD04)
  {
    if (dword_1008DDD00 >= 26)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"H5 transport error sending link packet: retry limit exceeded, giving up",  v1,  v2,  v3,  v4,  v5,  v6,  v7,  v9);
        uint64_t v8 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1000AFE20(112LL);
      sub_10009AB24();
      return;
    }

    ++dword_1008DDD00;
    if (!dword_1008F1F7C)
    {
LABEL_4:
      uint64_t v0 = 2LL;
      sub_10009BDCC(&unk_1006BB9A3, 2uLL, 15);
LABEL_10:
      sub_10009A5BC(v0);
      return;
    }
  }

  else
  {
    dword_1008DDD00 = 0;
    dword_1008DDD04 = dword_1008F1F7C;
    if (!dword_1008F1F7C) {
      goto LABEL_4;
    }
  }

  if (dword_1008F1F7C == 1)
  {
    sub_10009BDCC(&word_1008DDCFC, 3uLL, 15);
    uint64_t v0 = 2LL;
    goto LABEL_10;
  }

  if (dword_1008F1F7C == 4)
  {
    sub_10009BDCC(&unk_1006BB9A1, 2uLL, 15);
    uint64_t v0 = 1LL;
    goto LABEL_10;
  }

uint64_t sub_10009AB24()
{
  return 0LL;
}

uint64_t sub_10009AB2C()
{
  if (!word_1008F1F80) {
    return 103LL;
  }
  qword_1008DDD08 = 0LL;
  byte_1008DDD10 = 0;
  word_1008DDD12 = word_1008F1F80 + 6;
  qword_1008DDD08 = (uint64_t)sub_1000B1814(0x10uLL);
  uint64_t v0 = sub_1000B1814((unsigned __int16)word_1008DDD12);
  uint64_t result = 0LL;
  *(void *)qword_1008DDD08 = v0;
  return result;
}

uint64_t sub_10009AB9C()
{
  byte_1008DDD10 = 0;
  *(_DWORD *)(qword_1008DDD08 + 12) = 0;
  return 0LL;
}

uint64_t sub_10009ABB8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = (char **)qword_1008DDD08;
  if ((_DWORD)a2)
  {
    uint64_t v3 = a1;
    while (1)
    {
      uint64_t v4 = (a2 - 1);
      int v6 = *v3++;
      int v5 = v6;
      switch(*((_DWORD *)v2 + 3))
      {
        case 0:
          if (v5 == 192) {
            int v7 = 1;
          }
          else {
            int v7 = 2;
          }
          *((_DWORD *)v2 + 3) = v7;
          *((_WORD *)v2 + 4) = 0;
          goto LABEL_65;
        case 1:
          if (v5 != 219)
          {
            if (v5 != 192)
            {
              uint64_t v20 = *((unsigned __int16 *)v2 + 4);
              uint64_t v27 = (uint64_t)*v2;
              *((_WORD *)v2 + 4) = v20 + 1;
              *(_BYTE *)(v27 + v20) = v5;
              goto LABEL_65;
            }

            __int16 v86 = 0;
            unsigned int v8 = *((unsigned __int16 *)v2 + 4);
            if (v8 <= 3)
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134((uint64_t)"Short packet %@", v9, v10, v11, v12, v13, v14, v15, (uint64_t)*v2);
                int v16 = (os_log_s *)sub_100086554(0x3Au);
                if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_39;
                }
              }

uint64_t sub_10009B2EC()
{
  if (!word_1008F1F80) {
    return 103LL;
  }
  qword_1008DDD18 = 0LL;
  qword_1008DDD20 = 0LL;
  qword_1008DDD28 = 0LL;
  qword_1008DDD30 = 0LL;
  qword_1008DDD38 = 0LL;
  qword_1008DDD40 = 0LL;
  word_1008DDD48 = 0;
  byte_1008DDD4A = 0;
  dword_1008F1F8C = 0;
  dword_1008DDD4C = 0;
  byte_1008DDD50 = 0;
  dword_1008DDD54 = 0;
  byte_1008DDD58 = 0;
  byte_1008DDD59 = 0;
  if (byte_1008F1F82)
  {
    uint64_t v0 = 0LL;
    unsigned int v1 = 0;
    do
    {
      qword_1008DDD28 = (uint64_t)sub_1000B1814(0x18uLL);
      uint64_t v2 = sub_1000B1814((unsigned __int16)word_1008F1F80);
      uint64_t v3 = (void *)qword_1008DDD28;
      *(void *)(qword_1008DDD28 + 16) = v2;
      void *v3 = v0;
      ++v1;
      uint64_t v0 = v3;
    }

    while (v1 < byte_1008F1F82);
  }

  qword_1008DDD30 = (uint64_t)sub_1000B1814(0x18uLL);
  *(void *)(qword_1008DDD30 + 16) = sub_1000B1814(0x102uLL);
  qword_1008DDD38 = (uint64_t)sub_1000B1814(0x18uLL);
  *(void *)(qword_1008DDD38 + 16) = sub_1000B1814(0x102uLL);
  uint64_t result = sub_1001EE6E8((uint64_t)sub_10009B460, 0LL, 0x7FFF, &dword_1008DDD4C);
  if (!(_DWORD)result) {
    return sub_1001EE6E8((uint64_t)sub_10009B51C, 0LL, 0x7FFF, &dword_1008DDD54);
  }
  return result;
}

void sub_10009B460()
{
  byte_1008DDD50 = 0;
  uint64_t v0 = sub_1001EE6E8((uint64_t)sub_10009B460, 0LL, 0x7FFF, &dword_1008DDD4C);
  if ((_DWORD)v0)
  {
    sub_1000AFE20(v0);
    sub_10009B51C();
  }

  else
  {
    unsigned int v1 = (void *)qword_1008DDD20;
    if (dword_1008F1F7C == 2 && qword_1008DDD20 != 0)
    {
      do
      {
        uint64_t v3 = v1;
        unsigned int v1 = (void *)*v1;
      }

      while (v1);
      if (qword_1008DDD18 == qword_1008DDD38)
      {
        void *v3 = *(void *)qword_1008DDD18;
        uint64_t v4 = (uint64_t *)qword_1008DDD18;
      }

      else
      {
        void *v3 = qword_1008DDD18;
        uint64_t v3 = (void *)qword_1008DDD20;
        uint64_t v4 = &qword_1008DDD18;
      }

      uint64_t *v4 = (uint64_t)v3;
      qword_1008DDD20 = 0LL;
      if (!dword_1008F1F8C) {
        sub_10009B934();
      }
    }
  }

uint64_t sub_10009B51C()
{
  if (byte_1008DDD58)
  {
    byte_1008DDD58 = 0;
    sub_10009BDCC(0LL, 0LL, 0);
  }

  uint64_t result = sub_1001EE6E8((uint64_t)sub_10009B51C, 0LL, 0x7FFF, &dword_1008DDD54);
  if ((_DWORD)result)
  {
    sub_1000AFE20(result);
    return sub_10009B570();
  }

  return result;
}

uint64_t sub_10009B570()
{
  uint64_t result = sub_1001EE978(dword_1008DDD4C, 0x7FFF);
  if (!(_DWORD)result)
  {
    uint64_t result = sub_1001EE978(dword_1008DDD54, 0x7FFF);
    if (!(_DWORD)result)
    {
      uint64_t v1 = qword_1008DDD28;
      uint64_t v2 = qword_1008DDD20;
      if (qword_1008DDD20)
      {
        do
        {
          uint64_t v3 = *(void *)v2;
          qword_1008DDD20 = *(void *)v2;
          if (*(_BYTE *)(v2 + 11) == 2)
          {
            *(void *)uint64_t v2 = v1;
            qword_1008DDD28 = v2;
            uint64_t v3 = qword_1008DDD20;
            uint64_t v1 = v2;
          }

          uint64_t v2 = v3;
        }

        while (v3);
      }

      uint64_t v4 = qword_1008DDD18;
      if (qword_1008DDD18)
      {
        do
        {
          uint64_t v5 = *(void *)v4;
          qword_1008DDD18 = *(void *)v4;
          if (*(_BYTE *)(v4 + 11) == 2)
          {
            *(void *)uint64_t v4 = v1;
            qword_1008DDD28 = v4;
            uint64_t v1 = v4;
          }

          uint64_t v4 = v5;
        }

        while (v5);
      }

      uint64_t result = 0LL;
      dword_1008F1F8C = 0;
      byte_1008DDD58 = 0;
      byte_1008DDD59 = 0;
      word_1008DDD48 = 0;
      byte_1008DDD4A = 0;
      byte_1008DDD50 = 0;
    }
  }

  return result;
}

void sub_10009B650(int a1, __int16 a2, __int16 a3)
{
  char v5 = a1;
  int v6 = a1 - 1;
  int v7 = dword_1008F1F7C;
  if (dword_1008F1F7C == 3)
  {
    sub_10009A5A8();
    int v7 = dword_1008F1F7C;
    if (dword_1008F1F7C == 4) {
      goto LABEL_11;
    }
    sub_1001EE2A0();
    int v7 = dword_1008F1F7C;
  }

  if (v7 != 2 && v7 != 4)
  {
    char v14 = v5;
LABEL_24:
    sub_10009B8EC(v14);
    return;
  }

void sub_10009B8EC(char a1)
{
  char v3 = a1;
  v2[1] = &v3;
  v2[0] = (const void *)1;
  uint64_t v1 = sub_1001EE6DC((uint64_t)sub_10009C26C, v2, 0LL);
  if ((_DWORD)v1)
  {
    sub_1000AFE20(v1);
    sub_10009B934();
  }

void sub_10009B934()
{
  uint64_t v0 = qword_1008DDD18;
  qword_1008DDD40 = qword_1008DDD18;
  unsigned int v1 = *(unsigned __int8 *)(qword_1008DDD18 + 11);
  if (v1 > 4 || ((1 << v1) & 0x16) == 0)
  {
    unsigned int v6 = 0;
  }

  else
  {
    char v3 = &qword_1008DDD20;
    unsigned int v4 = -1;
    do
    {
      char v3 = (uint64_t *)*v3;
      ++v4;
    }

    while (v3);
    int v5 = byte_1008F1F83;
    if (v4 > byte_1008F1F83)
    {
      sub_1001EE2A0();
      int v5 = byte_1008F1F83;
    }

    if (v5 == v4)
    {
      dword_1008F1F8C = 0;
      return;
    }

    uint64_t v0 = qword_1008DDD40;
    unsigned int v6 = *(unsigned __int8 *)(qword_1008DDD40 + 10) | 0xFFFFFF80;
    unsigned int v1 = *(unsigned __int8 *)(qword_1008DDD40 + 11);
  }

  int v11 = v6;
  qword_1008DDD18 = *(void *)v0;
  *(void *)uint64_t v0 = 0LL;
  dword_1008F1F8C = 1;
  if (v1 != 15)
  {
    v6 |= 8 * byte_1008DDD59;
    LOBYTE(v11) = v6;
    if (byte_1008DDD58)
    {
      byte_1008DDD58 = 0;
      sub_1001EE978(dword_1008DDD54, 0x7FFF);
      uint64_t v0 = qword_1008DDD40;
      unsigned int v1 = *(unsigned __int8 *)(qword_1008DDD40 + 11);
    }
  }

  unsigned int v7 = *(unsigned __int16 *)(v0 + 8);
  int v8 = v1 | (16 * v7);
  BYTE1(v11) = v8;
  BYTE2(v11) = v7 >> 4;
  *(_BYTE *)qword_1008DDD68 = -64;
  word_1008DDD72 = 1;
  if (!HIBYTE(word_1008F1F78) || ((int v9 = *(unsigned __int8 *)(v0 + 11)) != 0 ? (v10 = v9 == 15) : (v10 = 1), v10))
  {
    HIBYTE(v11) = ~(v8 + v6 + (v7 >> 4));
  }

  else
  {
    LOBYTE(v11) = v6 | 0x40;
    HIBYTE(v11) = ~(v8 + (v6 | 0x40) + (v7 >> 4));
    word_1008DDD60 = -1;
    sub_1001EDCD4((char *)&v11, 4, &word_1008DDD60);
    sub_1001EDCD4(*(char **)(qword_1008DDD40 + 16), *(unsigned __int16 *)(qword_1008DDD40 + 8), &word_1008DDD60);
  }

  sub_10009C290((uint64_t)&v11, 4);
  word_1008DDD48 = 0;
  sub_10009A58C();
  sub_10009BF50();
}

void sub_10009BB14(int a1, __int16 a2, unsigned int a3, const void *a4)
{
  char v7 = a1;
  int v8 = a1 - 1;
  int v9 = dword_1008F1F7C;
  if (dword_1008F1F7C == 3)
  {
    sub_10009A5A8();
    int v9 = dword_1008F1F7C;
    if (dword_1008F1F7C == 4) {
      goto LABEL_11;
    }
    sub_1001EE2A0();
    int v9 = dword_1008F1F7C;
  }

  if (v9 != 2 && v9 != 4)
  {
    char v16 = v7;
LABEL_24:
    sub_10009B8EC(v16);
    return;
  }

void sub_10009BDCC(void *__src, size_t __len, int a3)
{
  int v3 = a3;
  unsigned int v4 = __len;
  if (a3 && a3 != 15) {
    sub_1001EE2A0();
  }
  if (v4 >= 0x103)
  {
    sub_1001EE2A0();
    uint64_t v6 = qword_1008DDD38;
    *(_BYTE *)(qword_1008DDD38 + 11) = v3;
    goto LABEL_8;
  }

  uint64_t v6 = qword_1008DDD38;
  *(_BYTE *)(qword_1008DDD38 + 11) = v3;
  if (v4)
  {
LABEL_8:
    memmove(*(void **)(v6 + 16), __src, v4);
    uint64_t v6 = qword_1008DDD38;
    int v3 = *(unsigned __int8 *)(qword_1008DDD38 + 11);
  }

  *(_WORD *)(v6 + 8) = v4;
  char v7 = byte_1008DDD59;
  if (v3) {
    char v7 = 0;
  }
  *(_BYTE *)(v6 + 10) = v7;
  if (qword_1008DDD18 != v6)
  {
    *(void *)uint64_t v6 = qword_1008DDD18;
    qword_1008DDD18 = v6;
  }

  if (!dword_1008F1F8C) {
    sub_10009B934();
  }
}

uint64_t sub_10009BE94(uint64_t result, __int16 a2, int a3)
{
  qword_1008DDD68 = result;
  word_1008DDD70 = a2;
  word_1008DDD72 = 0;
  if (a3)
  {
    if (a3 == 1216) {
      return result;
    }
    dword_1008F1F8C = 2;
  }

  else if (dword_1008F1F8C == 1)
  {
    return sub_10009BF50();
  }

  if (!qword_1008DDD20 || (byte_1008DDD50 & 1) != 0) {
    goto LABEL_10;
  }
  uint64_t result = sub_1001EE978(dword_1008DDD4C, 2);
  if ((_DWORD)result)
  {
    sub_1000AFE20(result);
    return sub_10009BF50();
  }

  byte_1008DDD50 = 1;
LABEL_10:
  if (qword_1008DDD18) {
    return sub_10009B934();
  }
  dword_1008F1F8C = 0;
  return result;
}

uint64_t sub_10009BF50()
{
  word_1008DDD48 += sub_10009C290( *(void *)(qword_1008DDD40 + 16) + (unsigned __int16)word_1008DDD48,  (unsigned __int16)(*(_WORD *)(qword_1008DDD40 + 8) - word_1008DDD48));
  uint64_t v0 = qword_1008DDD40;
  unsigned int v1 = (unsigned __int16)word_1008DDD72;
  int v2 = (unsigned __int16)word_1008DDD70;
  if (!HIBYTE(word_1008F1F78)
    || (*(_BYTE *)(qword_1008DDD40 + 11) ? (BOOL v3 = *(_BYTE *)(qword_1008DDD40 + 11) == 15) : (BOOL v3 = 1), v3))
  {
    if (word_1008DDD70 == word_1008DDD72) {
      goto LABEL_14;
    }
  }

  else
  {
    __int16 v7 = 0;
    sub_1001EDD10((unsigned __int16)word_1008DDD60, &v7);
    sub_10009C290((uint64_t)&v7, 2);
    if (v2 == v1) {
      goto LABEL_14;
    }
    uint64_t v0 = qword_1008DDD40;
    unsigned int v1 = (unsigned __int16)word_1008DDD72;
  }

  word_1008DDD72 = v1 + 1;
  *(_BYTE *)(qword_1008DDD68 + v1) = -64;
  dword_1008F1F8C = 2;
  if (v0 != qword_1008DDD38)
  {
    unsigned int v4 = &qword_1008DDD20;
    int v5 = (uint64_t *)qword_1008DDD20;
    if (qword_1008DDD20)
    {
      do
      {
        unsigned int v4 = v5;
        int v5 = (uint64_t *)*v5;
      }

      while (v5);
    }

    uint64_t *v4 = v0;
  }

  qword_1008DDD40 = 0LL;
LABEL_14:
  uint64_t result = sub_1000FC0A8();
  if ((_DWORD)result == 625) {
    return sub_10009BE94(qword_1008DDD68, word_1008DDD70, 625);
  }
  return result;
}

void sub_10009C0E0(int a1)
{
  uint64_t v1 = qword_1008DDD20;
  if (qword_1008DDD20)
  {
    char v2 = a1 + 7;
    unsigned int v3 = (a1 + 7 - *(unsigned __int8 *)(qword_1008DDD20 + 10)) & 7;
    unsigned int v4 = byte_1008F1F83;
    if (v3 < byte_1008F1F83)
    {
      while (1)
      {
        qword_1008DDD20 = *(void *)v1;
        uint64_t v5 = *(unsigned __int8 *)(v1 + 11);
        if ((_DWORD)v5 == 1) {
          goto LABEL_9;
        }
        if ((_DWORD)v5 != 2)
        {
          if ((_DWORD)v5 == 4) {
            goto LABEL_9;
          }
          sub_1001EE2A0();
        }

        uint64_t v6 = qword_1008DDD28;
        *(void *)uint64_t v1 = qword_1008DDD28;
        qword_1008DDD28 = v1;
        if (!v6) {
          break;
        }
LABEL_10:
        uint64_t v1 = qword_1008DDD20;
        if (!qword_1008DDD20)
        {
          sub_1001EE978(dword_1008DDD4C, 0x7FFF);
          byte_1008DDD50 = 0;
          return;
        }

        if (((v2 - *(_BYTE *)(qword_1008DDD20 + 10)) & 7u) >= byte_1008F1F83)
        {
          if (v3 < v4) {
            sub_1001EE978(dword_1008DDD4C, 2);
          }
          return;
        }
      }

      uint64_t v5 = 2LL;
LABEL_9:
      sub_10012F510(v5, 0LL);
      goto LABEL_10;
    }
  }

void sub_10009C1EC(char a1)
{
  if (!dword_1008F1F8C)
  {
    int v1 = byte_1008DDD58;
    char v2 = ++byte_1008DDD58;
    if (v1)
    {
      if (byte_1008F1F83 == v2) {
        sub_10009BDCC(0LL, 0LL, 0);
      }
    }

    else
    {
      sub_1001EE978(dword_1008DDD54, 1);
    }
  }

void sub_10009C26C(uint64_t a1)
{
  uint64_t v1 = **(unsigned __int8 **)(a1 + 8);
  if (dword_1008F1F7C == 2) {
    uint64_t v2 = 0LL;
  }
  else {
    uint64_t v2 = 1215LL;
  }
  sub_10012F510(v1, v2);
}

uint64_t sub_10009C290(uint64_t a1, int a2)
{
  unsigned __int16 v2 = a2;
  if (a2)
  {
    uint64_t v3 = 0LL;
    while (1)
    {
      uint64_t v4 = (unsigned __int16)word_1008DDD72;
      if (word_1008DDD72 == word_1008DDD70) {
        break;
      }
      int v5 = *(unsigned __int8 *)(a1 + v3);
      if (v5 == 219 || v5 == 192)
      {
        ++word_1008DDD72;
        *(_BYTE *)(qword_1008DDD68 + v4) = -37;
        if (v5 == 219) {
          LOBYTE(v5) = -35;
        }
        else {
          LOBYTE(v5) = -36;
        }
        LODWORD(v4) = (unsigned __int16)word_1008DDD72;
      }

      word_1008DDD72 = v4 + 1;
      *(_BYTE *)(qword_1008DDD68 + v4) = v5;
      if (a2 == (_DWORD)++v3) {
        goto LABEL_14;
      }
    }

    unsigned __int16 v2 = v3;
  }

uint64_t sub_10009C354(unint64_t *a1, unint64_t a2, uint64_t *a3, unint64_t a4, int a5)
{
  int v5 = (unsigned __int16 *)*a1;
  unint64_t v6 = *a3;
  if (*a1 < a2)
  {
    __int16 v7 = (unsigned __int16 *)*a1;
    while (1)
    {
      unsigned int v9 = *v7++;
      unsigned int v8 = v9;
      int v10 = v9 & 0xFC00;
      if (v10 == 55296)
      {
        if ((unint64_t)v7 >= a2)
        {
          uint64_t v15 = 1LL;
          goto LABEL_31;
        }

        int v11 = *v7;
        if ((v11 & 0xFC00) == 0xDC00)
        {
          unsigned int v8 = v11 + (v8 << 10) - 56613888;
          __int16 v7 = v5 + 2;
        }

        else if (!a5)
        {
          goto LABEL_29;
        }
      }

      else if (!a5 && v10 == 56320)
      {
LABEL_29:
        uint64_t v15 = 3LL;
        goto LABEL_31;
      }

      if (v8 < 0x10000) {
        __int16 v12 = 3;
      }
      else {
        __int16 v12 = 4;
      }
      if (v8 < 0x800) {
        __int16 v12 = 2;
      }
      if (v8 >= 0x80) {
        unsigned __int16 v13 = v12;
      }
      else {
        unsigned __int16 v13 = 1;
      }
      unint64_t v14 = v6 + v13;
      if (v14 > a4)
      {
        uint64_t v15 = 2LL;
        goto LABEL_31;
      }

      switch(v13)
      {
        case 1u:
          goto LABEL_24;
        case 2u:
          goto LABEL_23;
        case 3u:
          goto LABEL_22;
        case 4u:
          *(_BYTE *)--unint64_t v14 = v8 & 0x3F | 0x80;
          v8 >>= 6;
LABEL_22:
          *(_BYTE *)--unint64_t v14 = v8 & 0x3F | 0x80;
          v8 >>= 6;
LABEL_23:
          *(_BYTE *)--unint64_t v14 = v8 & 0x3F | 0x80;
          v8 >>= 6;
LABEL_24:
          *(_BYTE *)--unint64_t v14 = byte_1006BB9BC[v13] | v8;
          break;
        default:
          break;
      }

      unint64_t v6 = v14 + v13;
      int v5 = v7;
      if ((unint64_t)v7 >= a2)
      {
        uint64_t v15 = 0LL;
        int v5 = v7;
        goto LABEL_31;
      }
    }
  }

  uint64_t v15 = 0LL;
LABEL_31:
  *a1 = (unint64_t)v5;
  *a3 = v6;
  return v15;
}

void sub_10009C4B0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(qword_1008F29A0 + 32))
  {
    uint64_t v4 = *(void **)(qword_1008F29A0 + 8);
    if (!v4)
    {
      sub_1001EE2A0();
      uint64_t v4 = *(void **)(qword_1008F29A0 + 8);
    }

    if (!*v4) {
      sub_1001EE2A0();
    }
    uint64_t v5 = sub_1000E727C(a1, 1);
    if (v5)
    {
      uint64_t v6 = qword_1008F29A0;
      if (*(_BYTE *)(qword_1008F29A0 + 88))
      {
        uint64_t v7 = v5;
        uint64_t v8 = 0LL;
        unint64_t v9 = 0LL;
        do
        {
          if (*(_BYTE *)(*(void *)(v7 + 8) + v8))
          {
            sub_10009C570(a1, v9, a2);
            uint64_t v6 = qword_1008F29A0;
          }

          ++v9;
          v8 += 8LL;
        }

        while (v9 < *(unsigned __int8 *)(v6 + 88));
      }
    }
  }

void sub_10009C570(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unsigned __int8 v17 = a2;
  uint64_t v5 = sub_1000E727C(a1, 1);
  if (v5)
  {
    uint64_t v6 = *(void **)(qword_1008F29A0 + 8);
    if (v6)
    {
      uint64_t v7 = v5;
      if (!*v6) {
        sub_1001EE2A0();
      }
      sub_1001EEB14(*(unsigned int *)(*(void *)(v7 + 8) + 8LL * a2 + 4));
      *(_DWORD *)(*(void *)(v7 + 8) + 8LL * a2 + 4) = 0;
      sub_1000E717C(v7, &v17);
      (**(void (***)(uint64_t, void, void, uint64_t))(qword_1008F29A0 + 8))(v7, v17, 0LL, a3);
      *(_BYTE *)(*(void *)(v7 + 8) + 8LL * v17) = 0;
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_AVRCPController_CommandFailed called, but no controller exists",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v16);
      uint64_t v15 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100657FDC(v15);
      }
    }
  }

uint64_t sub_10009C670(uint64_t a1, int a2, uint64_t a3)
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  if (!a1 || !a3)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  if (*(void *)(qword_1008F29A0 + 8)) {
    return 119LL;
  }
  uint64_t v8 = sub_1000B1814(0x18uLL);
  uint64_t v9 = qword_1008F29A0;
  *(void *)(qword_1008F29A0 + 32) = v8;
  if (!v8) {
    return 106LL;
  }
  uint64_t v10 = sub_1000B1814(32LL * *(unsigned __int8 *)(v9 + 89));
  uint64_t v11 = qword_1008F29A0;
  uint64_t v12 = *(void **)(qword_1008F29A0 + 32);
  v12[1] = v10;
  if (!v10)
  {
    sub_1000B1838(v12);
    *(void *)(qword_1008F29A0 + 32) = 0LL;
    return 106LL;
  }

  if (*(_BYTE *)(v11 + 89))
  {
    uint64_t v13 = 0LL;
    unint64_t v14 = 0LL;
    while (1)
    {
      *(void *)(*(void *)(*(void *)(qword_1008F29A0 + 32) + 8LL) + v13 + 8) = sub_1000B1814( 8LL * *(unsigned __int8 *)(v11 + 88));
      uint64_t v15 = *(void *)(*(void *)(qword_1008F29A0 + 32) + 8LL) + v13;
      if (!*(void *)(v15 + 8)) {
        break;
      }
      *(_DWORD *)uint64_t v15 = 0;
      *(_WORD *)(v15 + 4) = 0;
      ++v14;
      uint64_t v11 = qword_1008F29A0;
      v13 += 32LL;
    }

    uint64_t v5 = 106LL;
    goto LABEL_27;
  }

uint64_t sub_10009C980(uint64_t result, uint64_t a2, unsigned __int8 *a3)
{
  if (*(void *)(qword_1008F29A0 + 8))
  {
    uint64_t v5 = result;
    int v6 = *a3;
    uint64_t result = sub_1000E727C(result, 1);
    if (result)
    {
      uint64_t v7 = result;
      uint64_t v8 = *(void *)(result + 8);
      if (*(_BYTE *)(v8 + 8LL * a2) == 2)
      {
        sub_1001EEB14(*(unsigned int *)(v8 + 8LL * a2 + 4));
        uint64_t v9 = *(void *)(v7 + 8);
        *(_DWORD *)(v9 + 8LL * a2 + 4) = 0;
        if (v6 != 15) {
          *(_BYTE *)(v9 + 8LL * a2) = 3;
        }
        if (*((_WORD *)a3 + 8))
        {
          uint64_t v10 = qword_1008F29A0;
          if ((**((_BYTE **)a3 + 1) & 0x7F) == 0 && *(void *)(*(void *)(qword_1008F29A0 + 8) + 8LL))
          {
            uint64_t result = sub_1000E84CC(v5, a2, a3);
            goto LABEL_12;
          }
        }

        else
        {
          uint64_t v10 = qword_1008F29A0;
        }

        uint64_t result = (**(uint64_t (***)(uint64_t, uint64_t, unsigned __int8 *, void))(v10 + 8))(v5, a2, a3, 0LL);
LABEL_12:
        if (v6 != 15) {
          *(_BYTE *)(*(void *)(v7 + 8) + 8LL * a2) = 0;
        }
      }
    }
  }

  return result;
}

uint64_t sub_10009CA94()
{
  uint64_t v0 = *(uint64_t (**)(void))(*(void *)(qword_1008F29A0 + 8) + 16LL);
  if (v0) {
    return v0();
  }
  return result;
}

uint64_t sub_10009CAB4()
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  uint64_t v0 = *(int **)(qword_1008F29A0 + 32);
  if (!v0) {
    return 121LL;
  }
  if (*(_BYTE *)(qword_1008F29A0 + 90) && !*(void *)(qword_1008F29A0 + 16)) {
    return 141LL;
  }
  sub_1001E1520(*v0);
  uint64_t v1 = qword_1008F29A0;
  *(void *)(qword_1008F29A0 + 8) = 0LL;
  if (*(_BYTE *)(v1 + 89))
  {
    unint64_t v2 = 0LL;
    uint64_t v3 = 8LL;
    do
    {
      uint64_t v4 = *(void **)(*(void *)(*(void *)(v1 + 32) + 8LL) + v3);
      if (v4)
      {
        sub_1000B1838(v4);
        *(void *)(*(void *)(*(void *)(qword_1008F29A0 + 32) + 8LL) + v3) = 0LL;
        uint64_t v1 = qword_1008F29A0;
      }

      ++v2;
      v3 += 32LL;
    }

    while (v2 < *(unsigned __int8 *)(v1 + 89));
  }

  uint64_t v5 = *(void ***)(v1 + 32);
  if (v5[1])
  {
    sub_1000B1838(v5[1]);
    uint64_t v5 = *(void ***)(qword_1008F29A0 + 32);
    v5[1] = 0LL;
  }

  sub_1000B1838(v5);
  *(void *)(qword_1008F29A0 + 32) = 0LL;
  return sub_1000E7C60();
}

uint64_t sub_10009CBB4(uint64_t a1, unsigned __int8 *a2, char a3)
{
  __int128 v4 = xmmword_1006BB9C8;
  uint64_t v5 = 0LL;
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  if (a1 && a2)
  {
    *((void *)&v4 + 1) = v6;
    LOWORD(v5) = 2;
    v6[0] = a3;
    v6[1] = 0;
    return sub_10009CC30(a1, a2, (unsigned __int8 *)&v4);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_10009CC30(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v19 = 0LL;
  if (!*(void *)(qword_1008F29A0 + 8)) {
    return 3309LL;
  }
  unsigned __int8 v20 = 0;
  uint64_t v6 = sub_10009CE9C(a1, &v19, &v20);
  if (!(_DWORD)v6)
  {
    if (a3[3])
    {
      uint64_t v7 = (unsigned __int16 *)(*(void *)(qword_1008F29A0 + 32) + 16LL);
    }

    else
    {
      uint64_t v8 = *(void *)(qword_1008F29A0 + 32);
      uint64_t v9 = v8 + 20;
      uint64_t v10 = v8 + 18;
      uint64_t v7 = (unsigned __int16 *)(*a3 ? v9 : v10);
    }

    int v11 = *v7;
    uint64_t v12 = v19;
    uint64_t v13 = v20;
    v21[0] = v19;
    v21[1] = v20;
    v22[0] = (const void *)16;
    v22[1] = v21;
    if (sub_1001EE9D8(*(_DWORD *)(*(void *)(v19 + 8) + 8LL * v20 + 4))
      || (uint64_t v6 = sub_1001EE6DC((uint64_t)sub_10009CF5C, v22, (int *)(*(void *)(v12 + 8) + 8 * v13 + 4)), !(_DWORD)v6))
    {
      uint64_t v14 = sub_1001EE978(*(_DWORD *)(*(void *)(v12 + 8) + 8 * v13 + 4), v11);
      if ((_DWORD)v14)
      {
        uint64_t v6 = v14;
        sub_1001EEB14(*(unsigned int *)(*(void *)(v12 + 8) + 8 * v13 + 4));
        uint64_t v15 = *(void *)(v12 + 8) + 8 * v13;
LABEL_15:
        *(_DWORD *)(v15 + 4) = 0;
        return v6;
      }

      uint64_t v16 = sub_1000E7E40(a1, v20, a3);
      if ((_DWORD)v16)
      {
        uint64_t v6 = v16;
        uint64_t v17 = v20;
        sub_1001EEB14(*(unsigned int *)(*(void *)(v12 + 8) + 8LL * v20 + 4));
        uint64_t v15 = *(void *)(v12 + 8) + 8 * v17;
        goto LABEL_15;
      }

      *(_BYTE *)(*(void *)(v12 + 8) + 8LL * v20) = 2;
      uint64_t v6 = 0LL;
      if (a2) {
        *a2 = v20;
      }
    }
  }

  return v6;
}

uint64_t sub_10009CDD4(uint64_t a1, char a2)
{
  uint64_t v5 = 0x1000050581900LL;
  HIBYTE(v5) = a2;
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  if (a1)
  {
    unsigned __int8 v3 = 0;
    v4[0] = 2304LL;
    v4[1] = &v5;
    v4[2] = 8LL;
    return sub_10009CC30(a1, &v3, (unsigned __int8 *)v4);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_10009CE80(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  if ((_DWORD)xmmword_1008F6F18) {
    return sub_10009CC30(a1, a2, a3);
  }
  else {
    return 408LL;
  }
}

uint64_t sub_10009CE9C(uint64_t a1, uint64_t *a2, _BYTE *a3)
{
  if (!a3) {
    sub_1001EE2A0();
  }
  uint64_t v6 = sub_1000E727C(a1, 1);
  if (!v6) {
    return 120LL;
  }
  unsigned int v7 = *(unsigned __int8 *)(qword_1008F29A0 + 88);
  if (!*(_BYTE *)(qword_1008F29A0 + 88)) {
    return 118LL;
  }
  unsigned int v8 = *(unsigned __int8 *)(v6 + 16);
  int v9 = *(unsigned __int8 *)(qword_1008F29A0 + 88);
  while (1)
  {
    int v10 = v8 % v7;
    if (!*(_BYTE *)(*(void *)(v6 + 8) + 8LL * (v8 % v7))) {
      break;
    }
    ++v8;
    if (!--v9) {
      return 118LL;
    }
  }

  uint64_t v11 = 0LL;
  *a2 = v6;
  *(_BYTE *)(v6 + 16) = (v10 + 1) % *(_BYTE *)(qword_1008F29A0 + 88);
  *a3 = v10;
  return v11;
}

void sub_10009CF5C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 8);
  uint64_t v2 = *(void *)v1;
  unsigned int v3 = v1[8];
  uint64_t v4 = 8LL * v1[8];
  uint64_t v5 = *(void *)(*(void *)v1 + 8LL) + v4;
  *(_BYTE *)uint64_t v5 = 4;
  *(_DWORD *)(v5 + 4) = 0;
  sub_10009C570(v2, v3, 3312LL);
  *(_BYTE *)(*(void *)(v2 + 8) + v4) = 0;
}

uint64_t sub_10009CFAC(uint64_t result, uint64_t a2, int a3)
{
  if (!a2)
  {
    unsigned int v3 = "data";
    goto LABEL_6;
  }

  if (!a3)
  {
    unsigned int v3 = "(len) > 0";
LABEL_6:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  128,  v3);
  }

  *(void *)(result + 24) = a2;
  *(_WORD *)(result + 32) = a3;
  *(_DWORD *)(result + 36) = 0x10000;
  *(_WORD *)(result + 34) = a3;
  *(_WORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_10009D008(int *a1, uint64_t *a2)
{
  *((_OWORD *)a1 + 5) = 0u;
  *((_OWORD *)a1 + 6) = 0u;
  *((_OWORD *)a1 + 3) = 0u;
  *((_OWORD *)a1 + 4) = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  *((_OWORD *)a1 + 2) = 0u;
  *(_OWORD *)a1 = 0u;
  if (a2)
  {
    unsigned int v3 = *((unsigned __int8 *)a2 + 8);
    if (*((_BYTE *)a2 + 8))
    {
      unint64_t v5 = 0LL;
      uint64_t v6 = a1 + 23;
      do
      {
        uint64_t v7 = *a2;
        unsigned int v8 = *(unsigned __int8 *)(*a2 + 24 * v5);
        if (v8 > 0x48)
        {
          if (*(unsigned __int8 *)(*a2 + 24 * v5) <= 0x70u)
          {
            if (v8 == 73)
            {
              *((void *)a1 + 7) = v7 + 24 * v5 + 8;
              *((_BYTE *)a1 + 64) = 1;
            }

            else if (v8 == 76)
            {
              uint64_t v28 = 0LL;
              __int128 v26 = 0u;
              __int128 v27 = 0u;
              sub_10009CFAC((uint64_t)&v26, *(void *)(v7 + 24 * v5 + 16), *(unsigned __int16 *)(v7 + 24 * v5 + 8));
              if (HIBYTE(v28))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c");
              }

              else
              {
                unint64_t v14 = WORD1(v28);
                if (WORD1(v28) > WORD2(v28))
                {
                  int v15 = BYTE6(v28);
                  uint64_t v16 = *((void *)&v27 + 1);
                  int v17 = WORD1(v28) - 3;
                  int v18 = WORD1(v28) - 1;
                  unsigned __int16 v19 = v27;
                  do
                  {
                    if (v14 < (__int16)v19) {
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  107,  "(size_t)(bk->nextTagPos) <= (size_t)((bk->bs).__size)");
                    }
                    if ((_DWORD)v14 == v19) {
                      break;
                    }
                    if (v15 != 1) {
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  115,  "(bk->bs).__RWFlag == BYTESTREAM_READ");
                    }
                    uint64_t v20 = v19 + 2LL;
                    signed int v21 = *(unsigned __int8 *)(v16 + v19 + 1LL);
                    LODWORD(v22) = (unsigned __int16)(v19 + 2);
                    switch(*(_BYTE *)(v16 + v19))
                    {
                      case 1:
                        if (v21 != 2) {
                          return 411LL;
                        }
                        if (v18 <= (int)v22) {
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  155,  "ByteStream_NumReadBytesAvail(bk.bs) >= 2");
                        }
                        *((_WORD *)a1 + 33) = bswap32(*(unsigned __int16 *)(v16 + v20)) >> 16;
                        LOWORD(v22) = v19 + 4;
                        int v23 = 8;
                        break;
                      case 2:
                        if (v21 != 2) {
                          return 411LL;
                        }
                        if (v18 <= (int)v22) {
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  163,  "ByteStream_NumReadBytesAvail(bk.bs) >= 2");
                        }
                        *((_WORD *)a1 + 34) = bswap32(*(unsigned __int16 *)(v16 + v20)) >> 16;
                        LOWORD(v22) = v19 + 4;
                        int v23 = 16;
                        break;
                      case 3:
                        if (v21 != 1) {
                          return 411LL;
                        }
                        if (v14 <= (unsigned __int16)v20) {
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  171,  "ByteStream_NumReadBytesAvail(bk.bs) >= 1");
                        }
                        LOWORD(v22) = v19 + 3;
                        *((_BYTE *)a1 + 70) = *(_BYTE *)(v16 + v20);
                        int v23 = 32;
                        break;
                      case 4:
                        if (v21 != 4) {
                          return 411LL;
                        }
                        if (v17 <= (int)v22) {
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  179,  "ByteStream_NumReadBytesAvail(bk.bs) >= 4");
                        }
                        a1[18] = bswap32(*(_DWORD *)(v16 + v20));
                        LOWORD(v22) = v19 + 6;
                        int v23 = 64;
                        break;
                      case 5:
                        if (v21 != 4) {
                          return 411LL;
                        }
                        if (v17 <= (int)v22) {
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  187,  "ByteStream_NumReadBytesAvail(bk.bs) >= 4");
                        }
                        a1[19] = bswap32(*(_DWORD *)(v16 + v20));
                        LOWORD(v22) = v19 + 6;
                        int v23 = 128;
                        break;
                      case 6:
                        if (v21 != 4) {
                          return 411LL;
                        }
                        if (v17 <= (int)v22) {
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  195,  "ByteStream_NumReadBytesAvail(bk.bs) >= 4");
                        }
                        a1[20] = bswap32(*(_DWORD *)(v16 + v20));
                        LOWORD(v22) = v19 + 6;
                        int v23 = 256;
                        break;
                      case 7:
                        if (v21 != 1) {
                          return 411LL;
                        }
                        if (v14 <= (unsigned __int16)v20) {
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  203,  "ByteStream_NumReadBytesAvail(bk.bs) >= 1");
                        }
                        LOWORD(v22) = v19 + 3;
                        *((_BYTE *)a1 + 84) = *(_BYTE *)(v16 + v20);
                        int v23 = 512;
                        break;
                      case 8:
                        if (v21 != 1) {
                          return 411LL;
                        }
                        if (v14 <= (unsigned __int16)v20) {
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  211,  "ByteStream_NumReadBytesAvail(bk.bs) >= 1");
                        }
                        LOWORD(v22) = v19 + 3;
                        *((_BYTE *)a1 + 85) = *(_BYTE *)(v16 + v20);
                        int v23 = 1024;
                        break;
                      case 9:
                        if (v21 != 16) {
                          return 411LL;
                        }
                        if (v17 <= (int)v22) {
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  219,  "ByteStream_NumReadBytesAvail(bk.bs) >= 4");
                        }
                        a1[22] = bswap32(*(_DWORD *)(v16 + v20));
                        if (v14 - (unsigned __int16)(v19 + 6) <= 0xB) {
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  220,  "ByteStream_NumReadBytesAvail(bk.bs) >= (sizeof(req->serviceId.base))");
                        }
                        uint64_t v22 = (uint64_t *)(v16 + (unsigned __int16)(v19 + 6));
                        uint64_t v24 = *v22;
                        _BYTE v6[2] = *((_DWORD *)v22 + 2);
                        *(void *)uint64_t v6 = v24;
                        LOWORD(v22) = v19 + 18;
                        int v23 = 2048;
                        break;
                      case 0xA:
                        if (v21 != 1) {
                          return 411LL;
                        }
                        if (v14 <= (unsigned __int16)v20) {
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c",  228,  "ByteStream_NumReadBytesAvail(bk.bs) >= 1");
                        }
                        LOWORD(v22) = v19 + 3;
                        *((_BYTE *)a1 + 104) = *(_BYTE *)(v16 + v20);
                        int v23 = 4096;
                        break;
                      default:
                        goto LABEL_69;
                    }

                    *a1 |= v23;
LABEL_69:
                    unsigned __int16 v19 = v20 + v21;
                  }

                  while (v14 > (unsigned __int16)v22);
                }
              }

              unsigned int v3 = *((unsigned __int8 *)a2 + 8);
            }

            goto LABEL_71;
          }

          if (v8 == 113)
          {
            int v13 = *a1;
            if ((*a1 & 2) == 0)
            {
              *((void *)a1 + 3) = v7 + 24 * v5 + 8;
              int v10 = v13 | 2;
              goto LABEL_28;
            }
          }

          else if (v8 == 195)
          {
            a1[12] = *(_DWORD *)(v7 + 24 * v5 + 8);
            int v10 = *a1 | 0x4000;
LABEL_28:
            *a1 = v10;
          }
        }

        else if (*(unsigned __int8 *)(*a2 + 24 * v5) > 0x41u)
        {
          if (v8 != 66)
          {
            if (v8 == 72)
            {
              *((void *)a1 + 7) = v7 + 24 * v5 + 8;
              *((_BYTE *)a1 + 64) = 0;
            }

            goto LABEL_71;
          }

          int v12 = *a1;
          if ((*a1 & 0x8000) == 0)
          {
            *((void *)a1 + 1) = v7 + 24 * v5 + 8;
            int v10 = v12 | 0x8000;
            goto LABEL_28;
          }
        }

        else
        {
          if (v8 != 1)
          {
            if (v8 != 48) {
              goto LABEL_71;
            }
            int v9 = *a1;
            if ((*a1 & 4) != 0) {
              goto LABEL_71;
            }
            *((void *)a1 + 4) = v7 + 24 * v5 + 8;
            int v10 = v9 | 4;
            goto LABEL_28;
          }

          int v11 = *a1;
          if ((*a1 & 1) == 0)
          {
            *((void *)a1 + 2) = v7 + 24 * v5 + 8;
            int v10 = v11 | 1;
            goto LABEL_28;
          }
        }

LABEL_71:
        ++v5;
      }

      while (v5 < v3);
    }
  }

  return 0LL;
}

          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Receive error - %!\n", v45, v46, v47, v48, v49, v50, v51, 104LL);
            uint64_t v52 = (os_log_s *)sub_100086554(0);
            if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          *(_DWORD *)((char *)a1 + 18) = 0;
          return 104LL;
        }
      }

      else
      {
        LODWORD(v20) = *((unsigned __int16 *)a1 + 9);
      }

          char v53 = (void *)(v34 + v35);
          uint64_t v52 = v33;
          goto LABEL_72;
        case 8u:
          if (!a4) {
            goto LABEL_73;
          }
          if (v6[15])
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_132:
            uint64_t v69 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_133:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  804,  v69);
          }

          int v12 = *((unsigned __int16 *)v6 + 6);
          if (v6[14] != 2)
          {
            uint64_t v69 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_133;
          }

          goto LABEL_15;
        default:
          if (v6[15])
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_109:
            uint64_t v63 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_111:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  828,  v63);
          }

          uint64_t v37 = *((unsigned __int16 *)v6 + 6);
          if (v6[14] != 2)
          {
            uint64_t v63 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_111;
          }

          uint64_t v38 = a2[3];
          uint64_t v39 = *(void *)v6;
          *((_WORD *)v6 + 6) = v37 + 1;
          *(_BYTE *)(v39 + v37) = v38;
          uint64_t v33 = a2[3];
          if (!a2[3]) {
            goto LABEL_73;
          }
          uint64_t v34 = *(void *)v6;
          uint64_t v35 = *((unsigned __int16 *)v6 + 6);
          __int128 v25 = (const void *)*((void *)a2 + 1);
          if (v6[15])
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
            uint64_t v40 = 0;
            uint64_t v33 = a2[3];
          }

          else
          {
            uint64_t v40 = *((unsigned __int16 *)v6 + 5) - (_DWORD)v35;
          }

          if (v40 < v33)
          {
            uint64_t v68 = "ByteStream_NumReadBytesAvail(*pBs) >= (cap->genericData.dataLen)";
            goto LABEL_130;
          }

          if (v6[14] != 2)
          {
            uint64_t v68 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_130:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  830,  v68);
          }

          goto LABEL_71;
      }
    }
  }

  return result;
}

  if (notify_register_check("com.apple.bluetooth.low-power-mode", (int *)(a1 + 216))
    && os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR))
  {
    sub_10065CB60();
  }

  __int128 v25 = sub_1002E8D54();
  sub_1001FCB98(v25 + 288, a1 + 16);
}

  *((_WORD *)v32 + 188) = v39;
  v32[378] = *(_BYTE *)(a1 + 79);
  uint64_t v50 = *v12;
  if (*v12)
  {
    uint64_t v51 = v2 + 72;
    do
    {
      uint64_t v52 = *(_DWORD *)(v50 + 28);
      char v53 = v52 < v82;
      if (v52 >= v82) {
        uint64_t v54 = (uint64_t *)v50;
      }
      else {
        uint64_t v54 = (uint64_t *)(v50 + 8);
      }
      if (!v53) {
        uint64_t v51 = v50;
      }
      uint64_t v50 = *v54;
    }

    while (*v54);
    if ((uint64_t *)v51 != v12 && v82 >= *(_DWORD *)(v51 + 28))
    {
      *((void *)v32 + 4) = v2;
      *((void *)v32 + 5) = *(unsigned __int16 *)(v51 + 32);
    }
  }

  uint64_t v55 = *(_DWORD *)(a1 + 72);
  if (v55 >= 4) {
    LOBYTE(v55) = 0;
  }
  Context = NRBluetoothPacketParserCreateReadContext(v25, v55, sub_100250424, v32 + 32);
  if (!Context)
  {
    uint64_t v63 = (os_log_s *)qword_1008F75F8;
    if (os_log_type_enabled((os_log_t)qword_1008F75F8, OS_LOG_TYPE_FAULT)) {
      sub_1006635EC(a1 + 48, v63, v64, v65, v66, v67, v68, v69);
    }
    goto LABEL_99;
  }

  uint64_t v57 = *(_DWORD *)(a1 + 72);
  if (v57 >= 4) {
    LOBYTE(v57) = 0;
  }
  uint64_t v58 = NRBluetoothPacketParserCreateWriteContext(v25, v57, sub_100250350, v32 + 32);
  if (!v58)
  {
    uint64_t v70 = (os_log_s *)qword_1008F75F8;
    if (os_log_type_enabled((os_log_t)qword_1008F75F8, OS_LOG_TYPE_FAULT)) {
      sub_100663654(a1 + 48, v70, v71, v72, v73, v74, v75, v76);
    }
LABEL_99:
    sub_1002511D0(v2, *(unsigned __int16 *)(a1 + 76));
LABEL_100:
    uint64_t v41 = *(void *)(*(void *)(a1 + 32) + 8LL);
    uint64_t v42 = 124;
LABEL_101:
    *(_DWORD *)(v41 + 24) = v42;
    return;
  }

  *((void *)v32 + 1) = v25;
  *((void *)v32 + 2) = Context;
  *((void *)v32 + 3) = v58;
  uint64_t v59 = *(const unsigned __int8 **)(a1 + 48);
  *(void *)__int128 buf = 0LL;
  *(void *)&uint8_t buf[8] = 0LL;
  uuid_copy(buf, v59);
  uuid_copy((unsigned __int8 *)v32 + 400, buf);
  if (*(_DWORD *)(a1 + 72) == 3)
  {
    *(_BYTE *)(v2 + 137) = 1;
    if (qword_1008D6198 != -1) {
      dispatch_once(&qword_1008D6198, &stru_100889AE0);
    }
    sub_100449064(off_1008D6190, 1);
    v32[378] = 1;
    uint64_t v60 = sub_1002E6E9C();
    uint64_t v61 = (*(uint64_t (**)(uint64_t, unint64_t, void, uint64_t, uint64_t, void, uint64_t, void))(*(void *)v60 + 72LL))( v60,  *(unsigned int *)(v31 + 57) | ((unint64_t)*(unsigned __int16 *)(v31 + 61) << 32),  0LL,  8LL,  1LL,  0LL,  1LL,  0LL);
    uint64_t v62 = (os_log_s *)qword_1008F75F8;
    if (os_log_type_enabled((os_log_t)qword_1008F75F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v61;
      _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEFAULT,  "Tag iso link as high priority with result %d",  buf,  8u);
    }
  }

  NRBluetoothPacketParserStart(v25);
}

        *(_OWORD *)(*a1 + v9) = *(_OWORD *)*((void *)a2 + 1);
        uint64_t v16 = *((_WORD *)a1 + 6) + 16;
        goto LABEL_76;
      }

      uint64_t v39 = "ByteStream_NumReadBytesAvail(*pByteStream) >= (sizeof(OI_UINT128))";
LABEL_115:
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp",  452,  v39);
    case 2u:
      int v15 = *((unsigned __int16 *)a2 + 1);
      if (v15 != 16)
      {
        if (v15 == 8)
        {
          if (*((_BYTE *)a1 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT"
                                   "_DataElements.cpp");
          }

          else
          {
            int v13 = v9;
            if (*((unsigned __int16 *)a1 + 5) - (unint64_t)v9 > 7)
            {
              if (*((_BYTE *)a1 + 14) == 2)
              {
LABEL_19:
                *(void *)(*a1 + v13) = **((void **)a2 + 1);
                uint64_t v16 = *((_WORD *)a1 + 6) + 8;
LABEL_76:
                *((_WORD *)a1 + 6) = v16;
                return result;
              }

              uint64_t v61 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_112:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp",  460,  v61);
            }
          }

          uint64_t v61 = "ByteStream_NumReadBytesAvail(*pByteStream) >= (sizeof(OI_INT64))";
          goto LABEL_112;
        }

        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp");
        }

        else if (*((unsigned __int16 *)a1 + 5) - v9 > 3)
        {
          if (*((_BYTE *)a1 + 14) == 2) {
            goto LABEL_75;
          }
          uint64_t v63 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_126:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp",  464,  v63);
        }

        uint64_t v63 = "ByteStream_NumReadBytesAvail(*pByteStream) >= 4";
        goto LABEL_126;
      }

      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp");
      }

      else if (*((unsigned __int16 *)a1 + 5) - (unint64_t)v9 > 0xF)
      {
        if (*((_BYTE *)a1 + 14) == 2) {
          goto LABEL_71;
        }
        uint64_t v62 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_122:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp",  462,  v62);
      }

      uint64_t v62 = "ByteStream_NumReadBytesAvail(*pByteStream) >= (sizeof(OI_INT128))";
      goto LABEL_122;
    case 3u:
      if (*((_WORD *)a2 + 1) == 16)
      {
        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp");
        }

        else if (*((unsigned __int16 *)a1 + 5) - (unint64_t)(unsigned __int16)(v8 + 2) > 0xF)
        {
          if (*((_BYTE *)a1 + 14) == 2) {
            goto LABEL_71;
          }
          int v17 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_102:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp",  470,  v17);
        }

        int v17 = "ByteStream_NumReadBytesAvail(*pByteStream) >= (sizeof (OI_UUID128))";
        goto LABEL_102;
      }

      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp");
      }

      else if (*((unsigned __int16 *)a1 + 5) - v9 > 3)
      {
        if (*((_BYTE *)a1 + 14) == 2) {
          goto LABEL_75;
        }
        uint64_t v36 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_105:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp",  472,  v36);
      }

      uint64_t v36 = "ByteStream_NumReadBytesAvail(*pByteStream) >= 4";
      goto LABEL_105;
    case 4u:
      int v18 = *a1;
      unsigned __int16 v19 = (const void *)*((void *)a2 + 1);
      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp");
        uint64_t v20 = 0;
      }

      else
      {
        uint64_t v20 = *((unsigned __int16 *)a1 + 5) - v9;
      }

      uint64_t v37 = *((unsigned __int16 *)a2 + 1);
      if (v20 < (int)v37)
      {
        uint64_t v38 = "ByteStream_NumReadBytesAvail(*pByteStream) >= (elem->Size)";
LABEL_96:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp",  477,  v38);
      }

      if (*((_BYTE *)a1 + 14) != 2)
      {
        uint64_t v38 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_96;
      }

      goto LABEL_58;
    case 5u:
      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp");
      }

      else if (*((unsigned __int16 *)a1 + 5) > v9)
      {
        if (*((_BYTE *)a1 + 14) == 2)
        {
          signed int v21 = a2[8];
          uint64_t v22 = *a1;
          *((_WORD *)a1 + 6) = v8 + 3;
          *(_BYTE *)(v22 + (unsigned __int16)(v8 + 2)) = v21;
          return result;
        }

        uint64_t v59 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_94:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp",  481,  v59);
      }

      uint64_t v59 = "ByteStream_NumReadBytesAvail(*pByteStream) >= 1";
      goto LABEL_94;
    case 6u:
      if (!*((_WORD *)a2 + 1)) {
        return result;
      }
      int v23 = 0LL;
      uint64_t v24 = 0LL;
      while ((sub_10025F3E0(a1, *((void *)a2 + 1) + v23) & 1) != 0)
      {
        ++v24;
        v23 += 16LL;
      }

      uint64_t v41 = (os_log_s *)qword_1008F75D8;
      uint64_t result = os_log_type_enabled((os_log_t)qword_1008F75D8, OS_LOG_TYPE_ERROR);
      if (!result) {
        return result;
      }
      sub_10066493C(v41, v42, v43, v44, v45, v46, v47, v48);
      return 0LL;
    case 7u:
      if (!*((_WORD *)a2 + 1)) {
        return result;
      }
      __int128 v25 = 0LL;
      __int128 v26 = 0LL;
      while ((sub_10025F3E0(a1, *((void *)a2 + 1) + v25) & 1) != 0)
      {
        ++v26;
        v25 += 16LL;
      }

      uint64_t v49 = (os_log_s *)qword_1008F75D8;
      uint64_t result = os_log_type_enabled((os_log_t)qword_1008F75D8, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_10066496C(v49, v50, v51, v52, v53, v54, v55, v56);
        return 0LL;
      }

      return result;
    case 8u:
      int v18 = *a1;
      unsigned __int16 v19 = (const void *)*((void *)a2 + 1);
      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp");
        __int128 v27 = 0;
      }

      else
      {
        __int128 v27 = *((unsigned __int16 *)a1 + 5) - v9;
      }

      uint64_t v37 = *((unsigned __int16 *)a2 + 1);
      if (v27 < (int)v37)
      {
        uint64_t v60 = "ByteStream_NumReadBytesAvail(*pByteStream) >= (elem->Size)";
        goto LABEL_99;
      }

      if (*((_BYTE *)a1 + 14) != 2)
      {
        uint64_t v60 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_99:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp",  506,  v60);
      }

  uint64_t v101 = 0;
  uint64_t v38 = sub_1002E6E00();
  sub_10002418C(buf, "ENScanOverrides");
  sub_10002418C(__p, "ENOverrideStationaryDurationInSeconds");
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint8_t *, void **, int *))(*(void *)v38 + 88LL))(v38, buf, __p, &v101);
  if (v110 < 0) {
    operator delete(__p[0]);
  }
  if (v113 < 0)
  {
    operator delete(*(void **)buf);
    if (!v39) {
      goto LABEL_79;
    }
  }

  else if (!v39)
  {
    goto LABEL_79;
  }

  uint64_t v40 = v101;
  *(_WORD *)(a1 + 226) = v101;
  uint64_t v41 = (os_log_s *)qword_1008F76C8;
  if (os_log_type_enabled((os_log_t)qword_1008F76C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v40;
    _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "Overriding fStationaryDurationSeconds = %d ",  buf,  8u);
  }

      sub_100242FAC((uint64_t)v48);

      return;
  }

        v35.__r_.__value_.__r.__words[0] = (std::string::size_type)&buf;
        sub_1002077E0((void ***)&v35);
      }

      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v39;
      sub_1002077E0((void ***)&buf);
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1008F7598, OS_LOG_TYPE_ERROR))
  {
    sub_100682C38();
  }

  return sub_100242FAC((uint64_t)v34);
}

void *sub_10009D598()
{
  uint64_t v0 = (const __CFDictionary *)sub_100138790();
  if (!v0) {
    return 0LL;
  }
  uint64_t v1 = v0;
  uint64_t v2 = 0LL;
  unsigned int v3 = &unk_1008DDD88;
  uint64_t v4 = (char *)&unk_1008DDD88;
  while (1)
  {
    Value = (const __CFDictionary *)CFDictionaryGetValue(v1, off_100881F78[v2]);
    if (!Value) {
      break;
    }
    uint64_t v6 = Value;
    uint64_t v7 = (const __CFNumber *)CFDictionaryGetValue(Value, @"item_size");
    if (!v7) {
      break;
    }
    CFNumberGetValue(v7, kCFNumberSInt32Type, v4);
    unsigned int v8 = (const __CFNumber *)CFDictionaryGetValue(v6, @"item_count");
    if (!v8) {
      break;
    }
    CFNumberGetValue(v8, kCFNumberSInt32Type, v4 + 44);
    v4 += 4;
    if (++v2 == 11) {
      goto LABEL_9;
    }
  }

  unsigned int v3 = 0LL;
LABEL_9:
  CFRelease(v1);
  return v3;
}

void *sub_10009D670(void *a1, const void *a2, size_t __len)
{
  return memmove(a1, a2, __len);
}

uint64_t sub_10009D67C(uint64_t a1)
{
  qword_1008DDDE0 = (uint64_t)sub_1001EC038((uint64_t)sub_10009D670, (uint64_t)sub_10009D678);
  uint64_t v2 = sub_100170774(a1, 1);
  __int16 v5 = 0;
  int v4 = 0;
  sub_100170878(a1, (uint64_t)&v4);
  return (*(uint64_t (**)(int *, uint64_t, uint64_t))(*(void *)qword_1008F29A0 + 32LL))(&v4, a1, v2);
}

uint64_t sub_10009D704(int a1)
{
  qword_1008DDDE0 = 0LL;
  __int16 v4 = 0;
  int v3 = 0;
  sub_100170878(a1, (uint64_t)&v3);
  return (*(uint64_t (**)(int *))(*(void *)qword_1008F29A0 + 40LL))(&v3);
}

uint64_t sub_10009D768(uint64_t a1, unsigned __int16 **a2, int a3)
{
  if (a3 == 2)
  {
    sub_1001EC398(qword_1008DDDE0, 1);
    return 0LL;
  }

  else
  {
    __int16 v8 = 0;
    int v7 = 0;
    sub_100170878(a1, (uint64_t)&v7);
    uint64_t v9 = 0LL;
    uint64_t v3 = sub_1001F44AC(*((void *)*a2 + 1), **a2, &v9, 8);
    if (!(_DWORD)v3) {
      (**(void (***)(int *, uint64_t, uint64_t *))(*(void *)(qword_1008F29A0 + 16) + 32LL))(&v7, a1, &v9);
    }
  }

  return v3;
}

uint64_t sub_10009D84C(uint64_t a1, unsigned __int16 **a2, int a3, int a4)
{
  if (a4 == 1719)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"AVRCP BIP client issued OBEX ABORT message!", v4, v5, v6, v7, v8, v9, v10, v35);
      int v11 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657F08();
      }
    }

    return 0LL;
  }

  if (a3 == 2)
  {
    sub_1001EC398(qword_1008DDDE0, 1);
    return 0LL;
  }

  if (**a2 == 8)
  {
    __int16 v37 = 0;
    int v36 = 0;
    sub_100170878(a1, (uint64_t)&v36);
    uint64_t v38 = 0LL;
    uint64_t v12 = sub_1001F44AC(*((void *)*a2 + 1), **a2, &v38, 8);
    uint64_t v16 = a2[1];
    if (v16)
    {
      uint64_t v17 = *v16 - 1LL;
      while (v17 != -1)
      {
        uint64_t v18 = *((void *)v16 + 1);
        int v19 = *(unsigned __int8 *)(v18 + v17--);
        if (v19 == 42)
        {
          int v20 = v17 + 2;
          int v21 = v17;
          unsigned int v22 = *(unsigned __int8 *)(v18 + (unsigned __int16)v17) - 48;
          if (v22 > 9)
          {
            uint64_t v23 = 0LL;
          }

          else
          {
            LOWORD(v23) = 0;
            int v24 = 0;
            do
            {
              uint64_t v23 = (int)((double)(unsigned __int16)v23
                                      + (double)(int)v22 * __exp10((double)(unsigned __int16)v24++));
              --v21;
              uint64_t v18 = *((void *)v16 + 1);
              unsigned int v22 = *(unsigned __int8 *)(v18 + (unsigned __int16)v21) - 48;
            }

            while (v22 < 0xA);
          }

          int v34 = *(unsigned __int8 *)(v18 + (unsigned __int16)v20);
          if ((v34 - 48) > 9)
          {
            unsigned __int16 v33 = 0;
          }

          else
          {
            unsigned __int16 v33 = 0;
            do
            {
              unsigned __int16 v33 = v34 + 10 * v33 - 48;
              int v34 = *(unsigned __int8 *)(v18 + (unsigned __int16)++v20);
            }

            while ((v34 - 48) < 0xA);
          }

          goto LABEL_25;
        }
      }
    }

    uint64_t v23 = 200LL;
    unsigned __int16 v33 = 200;
LABEL_25:
    if (!(_DWORD)v12) {
      (*(void (**)(int *, uint64_t, uint64_t *, uint64_t, void))(*(void *)(*(void *)(qword_1008F29A0 + 16)
    }
                                                                                     + 32LL)
                                                                         + 8LL))( &v36,  a1,  &v38,  v23,  v33);
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Invalid image handle length %d", v25, v26, v27, v28, v29, v30, v31, **a2);
      uint64_t v32 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_100657F08();
      }
    }

    return 1736LL;
  }

  return v12;
}

uint64_t sub_10009DAF4(uint64_t a1, unsigned __int16 **a2, int a3)
{
  if (a3 == 2)
  {
    sub_1001EC398(qword_1008DDDE0, 1);
    return 0LL;
  }

  else if (**a2 == 8)
  {
    __int16 v16 = 0;
    int v15 = 0;
    sub_100170878(a1, (uint64_t)&v15);
    uint64_t v17 = 0LL;
    uint64_t v3 = sub_1001F44AC(*((void *)*a2 + 1), **a2, &v17, 8);
    if (!(_DWORD)v3) {
      (*(void (**)(int *, uint64_t, uint64_t *))(*(void *)(*(void *)(qword_1008F29A0 + 16) + 32LL) + 16LL))( &v15,  a1,  &v17);
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Invalid image handle length %d", v6, v7, v8, v9, v10, v11, v12, **a2);
      int v13 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657F08();
      }
    }

    return 1736LL;
  }

  return v3;
}

uint64_t sub_10009DC3C(int a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = 0LL;
  uint64_t v32 = 0LL;
  sub_1001F48C8((uint64_t)&v31, 0x400uLL);
  uint64_t v30 = 0LL;
  asprintf(&v30, "<image-properties version=1.0 handle=%s>\n", a2);
  sub_1001F4A7C((uint64_t)&v31, v30);
  free(v30);
  if (a6)
  {
    uint64_t v11 = 0LL;
    do
    {
      uint64_t v12 = "variant";
      if (!v11) {
        uint64_t v12 = "native";
      }
      int v13 = *(unsigned __int8 *)(a3 + v11);
      if (v13 == 2) {
        unint64_t v14 = "PNG";
      }
      else {
        unint64_t v14 = "";
      }
      if (v13 == 1) {
        int v15 = "JPEG";
      }
      else {
        int v15 = v14;
      }
      asprintf( &v30,  "<%s encoding=%s pixel=%d*%d />\n",  v12,  v15,  *(unsigned __int16 *)(a4 + 2 * v11),  *(unsigned __int16 *)(a5 + 2 * v11));
      sub_1001F4A7C((uint64_t)&v31, v30);
      free(v30);
      ++v11;
    }

    while (a6 != v11);
  }

  asprintf(&v30, "</image-properties>\n");
  sub_1001F4A7C((uint64_t)&v31, v30);
  free(v30);
  unsigned __int16 v16 = WORD2(v31);
  sub_1001EC124(qword_1008DDDE0, v32, WORD2(v31));
  v29[1] = sub_1001EC30C(qword_1008DDDE0);
  v29[0] = v16;
  v28[0] = 0LL;
  v28[1] = v29;
  v28[2] = 0LL;
  uint64_t v17 = sub_100170A30(a1, (uint64_t)v28, 0);
  if ((_DWORD)v17)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_BIPSRV_GetImagePropertiesResponse failed with error %!",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  v17);
      uint64_t v25 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EC324(qword_1008DDDE0, 1);
  }

  sub_1001F4914((uint64_t)&v31);
  return v17;
}

uint64_t sub_10009DE30(int a1, uint64_t a2, unsigned int a3)
{
  v19[1] = sub_1001EC30C(qword_1008DDDE0);
  v19[0] = (unsigned __int16)a3;
  __int128 v15 = 0u;
  uint64_t v17 = v19;
  uint64_t v18 = 0LL;
  uint64_t v16 = a3;
  uint64_t v5 = sub_100170A50(a1, (uint64_t)&v15, 0);
  if ((_DWORD)v5)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_BIPSRV_GetImageResponse failed with error %!", v6, v7, v8, v9, v10, v11, v12, v5);
      int v13 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EC324(qword_1008DDDE0, 1);
  }

  return v5;
}

uint64_t sub_10009DF04(int a1, uint64_t a2, unsigned __int16 a3)
{
  v16[1] = sub_1001EC30C(qword_1008DDDE0);
  v16[0] = a3;
  v15[0] = 0LL;
  v15[1] = v16;
  _DWORD v15[2] = 0LL;
  uint64_t v5 = sub_100170A30(a1, (uint64_t)v15, 0);
  if ((_DWORD)v5)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_BIPSRV_GetLinkedThumbnailResponse failed with error %!",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v5);
      int v13 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EC324(qword_1008DDDE0, 1);
  }

  return v5;
}

void sub_10009DFD4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000LL;
  block[2] = sub_10009E040;
  block[3] = &unk_100881FD0;
  void block[4] = a1;
  if (qword_1008DDDE8 != -1) {
    dispatch_once(&qword_1008DDDE8, block);
  }
}

uint64_t sub_10009E040(uint64_t result)
{
  qword_1008DDDF0 = *(void *)(result + 32);
  return result;
}

void sub_10009E050(int a1)
{
  if (a1 || qword_1008DDDF8)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 0x40000000LL;
    block[2] = sub_10009E0F0;
    block[3] = &unk_100881FF0;
    int v10 = a1;
    if (qword_1008DDDF8 != -1) {
      dispatch_once(&qword_1008DDDF8, block);
    }
  }

  else
  {
    uint64_t v1 = (os_log_s *)qword_1008DDDF0;
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_100658144(v1, v2, v3, v4, v5, v6, v7, v8);
    }
  }

void sub_10009E0F0(uint64_t a1)
{
  if ((*(_DWORD *)(a1 + 32) - 1) >= 0xF9F)
  {
    uint64_t v1 = (os_log_s *)qword_1008DDDF0;
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_100658178(v1, v2, v3, v4, v5, v6, v7, v8);
    }
  }

uint64_t sub_10009E13C(uint64_t a1, unsigned int a2)
{
  if (a2 <= 0xE)
  {
    uint64_t result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (!(_DWORD)result) {
      return result;
    }
    sub_1006581AC();
    return 0LL;
  }

  if (!a1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  179LL,  "buf");
  }
  uint64_t v8 = a1;
  __int16 v9 = a2;
  __int16 v10 = a2;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 13);
  int v11 = 65551;
  unsigned int v5 = *(unsigned __int8 *)(a1 + 14);
  uint64_t result = (uint64_t)sub_10016F4A0(v4);
  if (result)
  {
    unsigned int v6 = a2 - 15;
    if (v6 < v5)
    {
      uint64_t v7 = (os_log_s *)qword_1008DDDF0;
      uint64_t result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
      if (!(_DWORD)result) {
        return result;
      }
      sub_100658220(v6, v5, v7);
      return 0LL;
    }

    if ((_DWORD)v4 == 255) {
      return 0LL;
    }
    uint64_t result = 1LL;
    switch((int)v4)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 9:
      case 10:
      case 11:
      case 13:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 22:
      case 23:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 44:
      case 45:
      case 46:
      case 48:
      case 49:
      case 50:
      case 52:
      case 53:
      case 54:
      case 56:
      case 57:
      case 60:
      case 61:
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 80:
      case 82:
      case 84:
      case 85:
      case 86:
      case 87:
      case 88:
        return result;
      case 7:
        uint64_t result = sub_10009E2DC(&v8);
        break;
      case 8:
        uint64_t result = sub_10009E4F8(&v8);
        break;
      case 12:
        uint64_t result = sub_10009EBF0(&v8);
        break;
      case 14:
        uint64_t result = sub_10009E8E4(&v8);
        break;
      case 21:
        uint64_t result = sub_10009EDEC(&v8);
        break;
      case 24:
        uint64_t result = sub_10009F0D0(&v8);
        break;
      case 47:
        uint64_t result = sub_10009F2C8(&v8);
        break;
      case 51:
        uint64_t result = sub_10009F4E0(&v8);
        break;
      case 59:
        uint64_t result = sub_10009F6D8(&v8);
        break;
      case 62:
        uint64_t result = sub_10009F8D0((uint64_t)&v8);
        break;
      case 81:
        uint64_t result = sub_10009FA1C(&v8);
        break;
      case 89:
        uint64_t result = sub_10009E6EC(&v8);
        break;
      default:
        return 0LL;
    }
  }

  return result;
}

BOOL sub_10009E2DC(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0xFE)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1006582A0();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 6) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1547LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 7;
  *((_WORD *)a1 + 6) = v1 + 7;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1550LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1551LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 247) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1554LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (248)");
  }
  uint64_t v6 = v5 + v4;
  *(void *)(v6 + 240) = 0LL;
  *(_OWORD *)(v6 + 208) = 0u;
  *(_OWORD *)(v6 + 224) = 0u;
  *(_OWORD *)(v6 + 176) = 0u;
  *(_OWORD *)(v6 + 192) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)uint64_t v6 = 0u;
  *((_WORD *)a1 + 6) += 248;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1556LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1558LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 255;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1559LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_10009E4F8(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_19;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 3)
  {
LABEL_19:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658320();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1571LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1+2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 3;
  *((_WORD *)a1 + 6) = v1 + 3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1574LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1575LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if (v3 <= v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1578LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  *(_BYTE *)(v5 + (unsigned __int16)(v1 + 3)) = 0;
  ++*((_WORD *)a1 + 6);
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1580LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1582LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 4;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1583LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1LL;
}

BOOL sub_10009E6EC(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 4)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1006583A0();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1596LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1+2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 3;
  *((_WORD *)a1 + 6) = v1 + 3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1599LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1600LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1604LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 1)");
  }
  *(_WORD *)(v5 + (unsigned __int16)(v1 + 3)) = 0;
  *((_WORD *)a1 + 6) += 2;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1606LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1608LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 5;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1609LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1LL;
}

BOOL sub_10009E8E4(uint64_t *a1)
{
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  if (v1 <= 0xE) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1193LL,  "(size_t)(13 + 2) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = 15;
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_5:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100658420();
    return 0LL;
  }

  if (v1 - 15 <= 3) {
    goto LABEL_5;
  }
  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1202LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v1 <= 0xF)
  {
    *((_BYTE *)a1 + 15) = 1;
    uint64_t v5 = (os_log_s *)qword_1008DDDF0;
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1006584A0(v5, v6, v7, v8, v9, v10, v11, v12);
      return 0LL;
    }
  }

  else
  {
    *((_WORD *)a1 + 6) = 16;
    if (v1 <= 0x11) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1204LL,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    int v4 = *(unsigned __int16 *)(*a1 + 16);
    *((_WORD *)a1 + 6) = 18;
    BOOL result = 1LL;
    if (v4 > 4096)
    {
      if (v4 <= 0x2000)
      {
        if ((v4 - 5121) <= 0xA)
        {
          if (((1 << (v4 - 1)) & 0x777) != 0) {
            return result;
          }
          if (v4 == 5128) {
            return sub_1000A50AC(a1);
          }
        }

        if ((v4 - 4097) <= 9)
        {
          if (((1 << (v4 - 1)) & 0x31F) != 0) {
            return result;
          }
          if (v4 == 4103) {
            return sub_1000A4EB8(a1);
          }
        }
      }

      else
      {
        switch(v4)
        {
          case 8193:
          case 8194:
          case 8195:
          case 8197:
          case 8198:
          case 8199:
          case 8200:
          case 8201:
          case 8202:
          case 8203:
          case 8204:
          case 8206:
          case 8207:
          case 8208:
          case 8209:
          case 8210:
          case 8212:
          case 8213:
          case 8218:
          case 8219:
          case 8220:
          case 8221:
          case 8222:
          case 8223:
          case 8224:
          case 8225:
          case 8226:
          case 8227:
          case 8228:
          case 8231:
          case 8232:
          case 8233:
          case 8234:
          case 8235:
          case 8236:
          case 8237:
          case 8238:
          case 8239:
          case 8240:
          case 8241:
          case 8243:
          case 8244:
          case 8245:
          case 8246:
          case 8247:
          case 8248:
          case 8249:
          case 8250:
          case 8251:
          case 8252:
          case 8253:
          case 8254:
          case 8255:
          case 8256:
          case 8257:
          case 8258:
          case 8260:
          case 8261:
          case 8262:
          case 8263:
          case 8264:
          case 8265:
          case 8266:
          case 8281:
          case 8282:
          case 8283:
          case 8284:
          case 8285:
          case 8288:
          case 8290:
          case 8291:
          case 8293:
          case 8295:
          case 8300:
          case 8302:
          case 8303:
          case 8308:
          case 8317:
          case 8318:
          case 8320:
          case 8321:
          case 8322:
          case 8323:
          case 8324:
          case 8325:
          case 8326:
          case 8329:
            return result;
          case 8215:
            BOOL result = sub_1000A52A0(a1);
            break;
          case 8216:
            BOOL result = sub_1000A549C(a1);
            break;
          default:
            return 0LL;
        }
      }
    }

    else if (v4 <= 3072)
    {
      BOOL v13 = (v4 - 1032) > 0x3D || ((1LL << (v4 - 8)) & 0x200819F801040079LL) == 0;
    }

    else
    {
      switch(v4)
      {
        case 3073:
        case 3075:
        case 3077:
        case 3080:
        case 3082:
        case 3083:
        case 3084:
        case 3085:
        case 3089:
        case 3090:
        case 3091:
        case 3093:
        case 3094:
        case 3095:
        case 3096:
        case 3097:
        case 3098:
        case 3099:
        case 3100:
        case 3101:
        case 3102:
        case 3103:
        case 3104:
        case 3105:
        case 3106:
        case 3107:
        case 3108:
        case 3109:
        case 3110:
        case 3111:
        case 3112:
        case 3113:
        case 3114:
        case 3115:
        case 3116:
        case 3117:
        case 3118:
        case 3119:
        case 3121:
        case 3123:
        case 3126:
        case 3127:
        case 3128:
        case 3129:
        case 3130:
        case 3131:
        case 3132:
        case 3133:
        case 3134:
        case 3135:
        case 3138:
        case 3139:
        case 3140:
        case 3141:
        case 3142:
        case 3143:
        case 3144:
        case 3145:
        case 3154:
        case 3157:
        case 3158:
        case 3160:
        case 3161:
        case 3162:
        case 3163:
        case 3168:
        case 3169:
        case 3170:
        case 3171:
        case 3173:
        case 3174:
        case 3175:
        case 3176:
        case 3177:
        case 3178:
        case 3180:
        case 3181:
        case 3182:
        case 3183:
        case 3184:
        case 3185:
        case 3186:
        case 3187:
        case 3193:
        case 3194:
        case 3195:
        case 3196:
        case 3204:
          return result;
        case 3081:
          BOOL result = sub_1000A4488(a1);
          break;
        case 3092:
          BOOL result = sub_1000A467C(a1);
          break;
        case 3153:
          BOOL result = sub_1000A489C(a1);
          break;
        case 3159:
          BOOL result = sub_1000A4AB4(a1);
          break;
        case 3197:
          BOOL result = sub_1000A4CB4(a1);
          break;
        default:
          return 0LL;
      }
    }
  }

  return result;
}

BOOL sub_10009EBF0(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 7)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658510();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1621LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 3;
  *((_WORD *)a1 + 6) = v1 + 3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1624LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1625LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1630LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 2 + 2)");
  }
  uint64_t v6 = v5 + v4;
  *(_BYTE *)(v6 + 4) = 0;
  *(_DWORD *)uint64_t v6 = 0;
  *((_WORD *)a1 + 6) += 5;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1632LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1634LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 8;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1635LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

uint64_t sub_10009EDEC(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_4;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 == (_DWORD)v2)
  {
LABEL_4:
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_100658584();
    }
    return 0LL;
  }

  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1648LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v1 <= v2)
  {
    *((_BYTE *)a1 + 15) = 1;
    uint64_t v11 = (os_log_s *)qword_1008DDDF0;
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_100658690(v11, v12, v13, v14, v15, v16, v17, v18);
    }
    return 0LL;
  }

  uint64_t v5 = *a1;
  unsigned __int16 v6 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  unsigned int v7 = *(unsigned __int8 *)(v5 + v2);
  unsigned int v8 = *((unsigned __int16 *)a1 + 4);
  unsigned int v9 = ~(_DWORD)v2 + v1;
  int v10 = 22 * v7;
  if (v9 < 22 * v7)
  {
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_100658608(v9, v10);
    }
    return 0LL;
  }

  if (!*(_BYTE *)(v5 + v2)) {
    return 1LL;
  }
  unsigned int v19 = 0;
  LOWORD(v20) = *((_WORD *)a1 + 4);
  do
  {
    if (*((_BYTE *)a1 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_33:
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1654LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
    }

    unsigned __int16 v21 = v6 + 6;
    *((_WORD *)a1 + 6) = v6 + 6;
    *((_BYTE *)a1 + 14) = 15;
    if (!(_WORD)v20) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1657LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
    }
    *((_WORD *)a1 + 6) = 0;
    *((_BYTE *)a1 + 14) = 2;
    *((_WORD *)a1 + 5) = v20;
    if ((unsigned __int16)(v6 + 6) > (unsigned __int16)v20) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1658LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
    }
    *((_WORD *)a1 + 6) = v21;
    if ((unsigned __int16)v20 - v21 <= 15) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1661LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
    }
    uint64_t v22 = (void *)(v5 + v21);
    *uint64_t v22 = 0LL;
    v22[1] = 0LL;
    *((_WORD *)a1 + 6) += 16;
    if (v8 > *((unsigned __int16 *)a1 + 5)) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1663LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
    }
    *((_WORD *)a1 + 6) = v8;
    if (*((_BYTE *)a1 + 14) == 2) {
      *((_WORD *)a1 + 5) = v8;
    }
    *((_BYTE *)a1 + 14) = 15;
    uint64_t v5 = *a1;
    if (!*a1 || (unsigned int v20 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1665LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
    }
    v6 += 22;
    *((_WORD *)a1 + 6) = 0;
    *((_BYTE *)a1 + 14) = 1;
    *((_WORD *)a1 + 5) = v20;
    if (v20 < v6) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1666LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
    }
    *((_WORD *)a1 + 6) = v6;
    ++v19;
    uint64_t v3 = 1LL;
    LOWORD(v1) = v20;
  }

  while (v19 < v7);
  return v3;
}

BOOL sub_10009F0D0(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x16)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658700();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 5) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1679LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1682LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1683LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1686LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned __int16 v6 = (void *)(v5 + v4);
  *unsigned __int16 v6 = 0LL;
  v6[1] = 0LL;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1688LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1690LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 22;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1691LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_10009F2C8(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0xFE)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658780();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 14) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1703LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1+6+1+1+3+2+1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 15;
  *((_WORD *)a1 + 6) = v1 + 15;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1706LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1707LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 239) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1710LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (240)");
  }
  unsigned __int16 v6 = (_OWORD *)(v5 + v4);
  v6[13] = 0u;
  v6[14] = 0u;
  v6[11] = 0u;
  v6[12] = 0u;
  v6[9] = 0u;
  v6[10] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[1] = 0u;
  _BYTE v6[2] = 0u;
  *unsigned __int16 v6 = 0u;
  *((_WORD *)a1 + 6) += 240;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1712LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1714LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 255;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1715LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_10009F4E0(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 9)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658800();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 5) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1727LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1730LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1731LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1734LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (4)");
  }
  *(_DWORD *)(v5 + (unsigned __int16)(v1 + 6)) = 0;
  *((_WORD *)a1 + 6) += 4;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1736LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1738LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 10;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1739LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1LL;
}

BOOL sub_10009F6D8(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 9)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658880();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 5) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1751LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1754LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1755LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1758LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (4)");
  }
  *(_DWORD *)(v5 + (unsigned __int16)(v1 + 6)) = 0;
  *((_WORD *)a1 + 6) += 4;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1760LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1762LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 10;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1763LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1LL;
}

uint64_t sub_10009F8D0(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int16 *)(a1 + 10);
  if (v1 <= 0xE) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1100LL,  "(size_t)(13 + 2) <= (size_t)((*pBs).__size)");
  }
  *(_WORD *)(a1 + 12) = 15;
  if (*(_BYTE *)(a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_5:
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_100658900();
    }
    return 0LL;
  }

  if (v1 == 15) {
    goto LABEL_5;
  }
  if (*(_BYTE *)(a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1108LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v4 = *(void *)a1;
  *(_WORD *)(a1 + 12) = 16;
  int v5 = *(unsigned __int8 *)(v4 + 15) - 1;
  uint64_t v2 = 1LL;
  switch(v5)
  {
    case 0:
    case 2:
    case 5:
    case 6:
    case 9:
    case 10:
    case 11:
    case 13:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 23:
    case 31:
    case 32:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
      return v2;
    case 1:
      uint64_t result = sub_1000A3300((uint64_t *)a1);
      break;
    case 3:
      uint64_t result = sub_1000A368C((uint64_t *)a1);
      break;
    case 4:
      uint64_t result = sub_1000A3884((uint64_t *)a1);
      break;
    case 7:
      uint64_t result = sub_1000A3A80((uint64_t *)a1);
      break;
    case 8:
      uint64_t result = sub_1000A3C84((uint64_t *)a1);
      break;
    case 12:
      uint64_t result = sub_1000A3E84((uint64_t *)a1);
      break;
    case 14:
      uint64_t result = sub_1000A4210((uint64_t *)a1);
      break;
    default:
      return 0LL;
  }

  return result;
}

BOOL sub_10009FA1C(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100658984();
    return 0LL;
  }

  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  int v3 = *((unsigned __int16 *)a1 + 6);
  int v4 = v2 - v3;
  if (v2 - v3 <= 0x11) {
    goto LABEL_4;
  }
  if (v4 <= 16) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1782LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (17)");
  }
  unsigned int v6 = *((unsigned __int16 *)a1 + 4);
  *((_WORD *)a1 + 6) = v3 + 17;
  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1784LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= (unsigned __int16)(v3 + 17))
  {
    *((_BYTE *)a1 + 15) = 1;
    uint64_t v11 = (os_log_s *)qword_1008DDDF0;
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658A8C(v11, v12, v13, v14, v15, v16, v17, v18);
      return 0LL;
    }
  }

  else
  {
    uint64_t v7 = *a1;
    unsigned __int16 v8 = v3 + 18;
    *((_WORD *)a1 + 6) = v3 + 18;
    size_t v9 = *(unsigned __int8 *)(v7 + (unsigned __int16)(v3 + 17));
    unsigned int v10 = v4 - 18;
    if (v10 >= v9)
    {
      *((_BYTE *)a1 + 14) = 15;
      if (!v6) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1791LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v6;
      if (v6 < v8) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1792LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v8;
      if ((int)(v6 - v8) < (int)v9) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1795LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (dataLength)");
      }
      bzero((void *)(v7 + v8), v9);
      *((_WORD *)a1 + 6) += v9;
      if (v6 > *((unsigned __int16 *)a1 + 5)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1797LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6;
      if (*((_BYTE *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v6;
      }
      *((_BYTE *)a1 + 14) = 15;
      if (!*a1 || (unsigned int v19 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1799LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 1;
      *((_WORD *)a1 + 5) = v19;
      if (v19 < (unsigned __int16)(v8 + v9)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1800LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v8 + v9;
      return 1LL;
    }

    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100658A04(v10, v9);
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_10009FCB8(uint64_t a1, unsigned int a2)
{
  if (!a1)
  {
    unsigned int v6 = "buf";
    goto LABEL_71;
  }

  if (!a2)
  {
    unsigned int v6 = "(numBytes) > 0";
LABEL_71:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  354LL,  v6);
  }

  uint64_t v7 = a1;
  __int16 v8 = a2;
  __int16 v11 = 1;
  __int16 v9 = a2;
  if (a2 <= 0xF)
  {
    uint64_t result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (!(_DWORD)result) {
      return result;
    }
    sub_100658AFC();
    return 0LL;
  }

  int v3 = *(unsigned __int8 *)(a1 + 13);
  int v4 = *(unsigned __int8 *)(a1 + 14);
  __int16 v10 = 16;
  if ((~v4 & 0xFC) == 0) {
    return 0LL;
  }
  int v5 = v3 | (v4 << 8);
  uint64_t result = 1LL;
  if (v5 > 8199)
  {
    if (v5 <= 8230)
    {
      if (v5 > 8216)
      {
        switch(v5)
        {
          case 8217:
            return sub_1000A14D8(&v7);
          case 8218:
            return sub_1000A16D8(&v7);
          case 8230:
            return sub_1000A18D0((uint64_t)&v7);
        }
      }

      else
      {
        switch(v5)
        {
          case 8200:
            return sub_1000A0F98(&v7);
          case 8201:
            return sub_1000A119C(&v7);
          case 8215:
            return sub_1000A13A0((uint64_t)&v7);
        }
      }
    }

    else if (v5 <= 8254)
    {
      switch(v5)
      {
        case 8231:
          return sub_1000A1A0C(&v7);
        case 8247:
          return sub_1000A1BA8(&v7);
        case 8248:
          return sub_1000A1DDC(&v7);
      }
    }

    else if (v5 > 8296)
    {
      if (v5 == 8297)
      {
        return sub_1000A23DC(&v7);
      }

      else if (v5 == 8299)
      {
        return sub_1000A2574(&v7);
      }
    }

    else if (v5 == 8255)
    {
      return sub_1000A2010(&v7);
    }

    else if (v5 == 8296)
    {
      return sub_1000A2244(&v7);
    }
  }

  else if (v5 > 3081)
  {
    if (v5 <= 3153)
    {
      switch(v5)
      {
        case 3082:
          return sub_1000A270C((uint64_t)&v7);
        case 3089:
          return sub_1000A2860(&v7);
        case 3091:
          return sub_1000A2AD4(&v7);
      }
    }

    else if (v5 > 3172)
    {
      if (v5 == 3173)
      {
        return sub_1000A30C0(&v7);
      }

      else if (v5 == 3204)
      {
        return sub_1000A31F8((uint64_t)&v7);
      }
    }

    else if (v5 == 3154)
    {
      return sub_1000A2CB0(&v7);
    }

    else if (v5 == 3168)
    {
      return sub_1000A2ECC(&v7);
    }
  }

  else if (v5 <= 1069)
  {
    if (v5 == 1035)
    {
      return sub_1000A002C(&v7);
    }

    else if (v5 == 1037)
    {
      return sub_1000A0224(&v7);
    }
  }

  else
  {
    switch(v5)
    {
      case 1070:
        uint64_t result = sub_1000A041C(&v7);
        break;
      case 1071:
      case 1073:
      case 1074:
      case 1075:
      case 1076:
        return result;
      case 1072:
        uint64_t result = sub_1000A0614(&v7);
        break;
      case 1077:
        uint64_t result = sub_1000A0A10(&v7);
        break;
      case 1078:
        uint64_t result = sub_1000A0CD4(&v7);
        break;
      default:
        if (v5 == 1093) {
          uint64_t result = sub_1000A0810(&v7);
        }
        break;
    }
  }

  return result;
}

BOOL sub_1000A002C(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x15)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658B70();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 5) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2311LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2314LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2315LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2318LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned int v6 = (void *)(v5 + v4);
  *unsigned int v6 = 0LL;
  v6[1] = 0LL;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2320LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2322LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 22;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2323LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A0224(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x16)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658BE4();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 6) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2335LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (6 + 1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 7;
  *((_WORD *)a1 + 6) = v1 + 7;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2338LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2339LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2342LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned int v6 = (void *)(v5 + v4);
  *unsigned int v6 = 0LL;
  v6[1] = 0LL;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2344LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2346LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 23;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2347LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A041C(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 9)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658C64();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 5) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2359LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2362LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2363LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2366LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (4)");
  }
  *(_DWORD *)(v5 + (unsigned __int16)(v1 + 6)) = 0;
  *((_WORD *)a1 + 6) += 4;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2368LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2370LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 10;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2371LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1LL;
}

BOOL sub_1000A0614(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x25)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658CE4();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 5) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2383LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2386LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2387LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 31) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2391LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16 + 16)");
  }
  unsigned int v6 = (_OWORD *)(v5 + v4);
  *unsigned int v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 32;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2393LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2395LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 38;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2396LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A0810(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x45)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658D58();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 5) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2472LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2475LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2476LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 63) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2482LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16 + 16 + 16 + 16)");
  }
  unsigned int v6 = (_OWORD *)(v5 + v4);
  _BYTE v6[2] = 0u;
  v6[3] = 0u;
  *unsigned int v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 64;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2484LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2486LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 70;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2487LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A0A10(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100658DCC();
    return 0LL;
  }

  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  if (v2 <= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2408LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v5 = *((unsigned __int16 *)a1 + 4);
  uint64_t v6 = v3 + 1;
  *((_WORD *)a1 + 6) = v3 + 1;
  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2410LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= (unsigned __int16)v6)
  {
    *((_BYTE *)a1 + 15) = 1;
    __int16 v11 = (os_log_s *)qword_1008DDDF0;
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100658ED4(v11, v12, v13, v14, v15, v16, v17, v18);
      return 0LL;
    }
  }

  else
  {
    uint64_t v7 = *a1;
    *((_WORD *)a1 + 6) = v3 + 2;
    if (v2 <= (unsigned __int16)(v3 + 2)) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2412LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
    }
    size_t v8 = *(unsigned __int8 *)(v7 + v6);
    unsigned __int16 v9 = v3 + 3;
    *((_WORD *)a1 + 6) = v3 + 3;
    unsigned int v10 = v2 - v3 - 3;
    if (v10 >= v8)
    {
      *((_BYTE *)a1 + 14) = 15;
      if (!v5) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2419LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v5;
      if (v5 <= (unsigned __int16)(v3 + 2)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2420LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9;
      if ((int)(v5 - v9) < (int)v8) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2423LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (ampKeyLength)");
      }
      bzero((void *)(v7 + v9), v8);
      *((_WORD *)a1 + 6) += v8;
      if (v5 > *((unsigned __int16 *)a1 + 5)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2425LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v5;
      if (*((_BYTE *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v5;
      }
      *((_BYTE *)a1 + 14) = 15;
      if (!*a1 || (unsigned int v19 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2427LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 1;
      *((_WORD *)a1 + 5) = v19;
      if (v19 < (unsigned __int16)(v9 + v8)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2428LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9 + v8;
      return 1LL;
    }

    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100658E4C(v10, v8);
        return 0LL;
      }
    }
  }

  return result;
}

BOOL sub_1000A0CD4(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100658F44();
    return 0LL;
  }

  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  if (v2 <= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2440LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v5 = *((unsigned __int16 *)a1 + 4);
  uint64_t v6 = v3 + 1;
  *((_WORD *)a1 + 6) = v3 + 1;
  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2442LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= (unsigned __int16)v6)
  {
    *((_BYTE *)a1 + 15) = 1;
    __int16 v11 = (os_log_s *)qword_1008DDDF0;
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065904C(v11, v12, v13, v14, v15, v16, v17, v18);
      return 0LL;
    }
  }

  else
  {
    uint64_t v7 = *a1;
    *((_WORD *)a1 + 6) = v3 + 2;
    if (v2 <= (unsigned __int16)(v3 + 2)) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2444LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
    }
    size_t v8 = *(unsigned __int8 *)(v7 + v6);
    unsigned __int16 v9 = v3 + 3;
    *((_WORD *)a1 + 6) = v3 + 3;
    unsigned int v10 = v2 - v3 - 3;
    if (v10 >= v8)
    {
      *((_BYTE *)a1 + 14) = 15;
      if (!v5) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2451LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v5;
      if (v5 <= (unsigned __int16)(v3 + 2)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2452LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9;
      if ((int)(v5 - v9) < (int)v8) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2455LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (ampKeyLength)");
      }
      bzero((void *)(v7 + v9), v8);
      *((_WORD *)a1 + 6) += v8;
      if (v5 > *((unsigned __int16 *)a1 + 5)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2457LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v5;
      if (*((_BYTE *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v5;
      }
      *((_BYTE *)a1 + 14) = 15;
      if (!*a1 || (unsigned int v19 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2459LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 1;
      *((_WORD *)a1 + 5) = v19;
      if (v19 < (unsigned __int16)(v9 + v8)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2460LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9 + v8;
      return 1LL;
    }

    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100658FC4(v10, v8);
        return 0LL;
      }
    }
  }

  return result;
}

BOOL sub_1000A0F98(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x1F)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1006590BC();
      return 0LL;
    }

    return result;
  }

  if (v1 <= v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2643LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2646LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2647LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 30) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2650LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (31)");
  }
  uint64_t v6 = (void *)(v5 + v4);
  *uint64_t v6 = 0LL;
  v6[1] = 0LL;
  *(void *)((char *)v6 + 23) = 0LL;
  _BYTE v6[2] = 0LL;
  *((_WORD *)a1 + 6) += 31;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2652LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2654LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 32;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2655LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A119C(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x1F)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065913C();
      return 0LL;
    }

    return result;
  }

  if (v1 <= v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2667LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2670LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2671LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 30) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2674LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (31)");
  }
  uint64_t v6 = (void *)(v5 + v4);
  *uint64_t v6 = 0LL;
  v6[1] = 0LL;
  *(void *)((char *)v6 + 23) = 0LL;
  _BYTE v6[2] = 0LL;
  *((_WORD *)a1 + 6) += 31;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2676LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2678LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 32;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2679LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A13A0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_13;
  }

  if (*(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12) <= 0x1F)
  {
LABEL_13:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1006591BC();
      return 0LL;
    }

    return result;
  }

  unsigned int v1 = *(unsigned __int16 *)(a1 + 8);
  uint64_t v2 = *(_OWORD **)a1;
  if (*(void *)a1) {
    BOOL v3 = v1 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2691LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *(_BYTE *)(a1 + 14) = 2;
  *(_WORD *)(a1 + 10) = v1;
  *(_WORD *)(a1 + 12) = 0;
  if (v1 <= 0x1F) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2696LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16 + 16)");
  }
  _OWORD *v2 = 0u;
  v2[1] = 0u;
  *(_WORD *)(a1 + 12) += 32;
  if (v1 > *(unsigned __int16 *)(a1 + 10)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2698LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *(_WORD *)(a1 + 12) = v1;
  if (*(_BYTE *)(a1 + 14) == 2) {
    *(_WORD *)(a1 + 10) = v1;
  }
  *(_BYTE *)(a1 + 14) = 15;
  return 1LL;
}

BOOL sub_1000A14D8(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x1B)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065923C();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2711LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 2;
  *((_WORD *)a1 + 6) = v1 + 2;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2714LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2715LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 25) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2720LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (8 + 2 + 16)");
  }
  uint64_t v6 = v5 + v4;
  *(void *)uint64_t v6 = 0LL;
  *(void *)(v6 + 8) = 0LL;
  *(_WORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = 0LL;
  *((_WORD *)a1 + 6) += 26;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2722LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2724LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 28;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2725LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A16D8(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x11)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1006592B0();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2737LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 2;
  *((_WORD *)a1 + 6) = v1 + 2;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2740LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2741LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2744LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  uint64_t v6 = (void *)(v5 + v4);
  *uint64_t v6 = 0LL;
  v6[1] = 0LL;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2746LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2748LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 18;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2749LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A18D0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_13;
  }

  if (*(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12) <= 0x3F)
  {
LABEL_13:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659330();
      return 0LL;
    }

    return result;
  }

  unsigned int v1 = *(unsigned __int16 *)(a1 + 8);
  int v2 = *(_OWORD **)a1;
  if (*(void *)a1) {
    BOOL v3 = v1 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2761LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *(_BYTE *)(a1 + 14) = 2;
  *(_WORD *)(a1 + 10) = v1;
  *(_WORD *)(a1 + 12) = 0;
  if (v1 <= 0x3F) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2766LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (32 + 32)");
  }
  void v2[2] = 0u;
  v2[3] = 0u;
  _OWORD *v2 = 0u;
  v2[1] = 0u;
  *(_WORD *)(a1 + 12) += 64;
  if (v1 > *(unsigned __int16 *)(a1 + 10)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2768LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *(_WORD *)(a1 + 12) = v1;
  if (*(_BYTE *)(a1 + 14) == 2) {
    *(_WORD *)(a1 + 10) = v1;
  }
  *(_BYTE *)(a1 + 14) = 15;
  return 1LL;
}

BOOL sub_1000A1A0C(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_15;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x3F)
  {
LABEL_15:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1006593B0();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 6) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2781LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1+6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 7;
  *((_WORD *)a1 + 6) = v4;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2785LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2786LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 31) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2790LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16 + 16)");
  }
  uint64_t v6 = (_OWORD *)(v5 + v4);
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 32;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2792LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  return 1LL;
}

BOOL sub_1000A1BA8(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100659430();
    return 0LL;
  }

  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  int v3 = *((unsigned __int16 *)a1 + 6);
  int v4 = v2 - v3;
  if (v2 - v3 <= 3) {
    goto LABEL_4;
  }
  if (v4 <= 2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2805LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1+1+1)");
  }
  unsigned int v6 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v7 = v3 + 3;
  *((_WORD *)a1 + 6) = v3 + 3;
  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2808LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v7)
  {
    *((_BYTE *)a1 + 15) = 1;
    uint64_t v12 = (os_log_s *)qword_1008DDDF0;
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659538(v12, v13, v14, v15, v16, v17, v18, v19);
      return 0LL;
    }
  }

  else
  {
    uint64_t v8 = *a1;
    unsigned __int16 v9 = v3 + 4;
    *((_WORD *)a1 + 6) = v9;
    size_t v10 = *(unsigned __int8 *)(v8 + v7);
    unsigned int v11 = v4 - 4;
    if (v11 >= v10)
    {
      *((_BYTE *)a1 + 14) = 15;
      if (!v6) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2818LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v6;
      if (v6 < v9) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2819LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9;
      if ((int)(v6 - v9) < (int)v10) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2822LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (advertisingDataLength)");
      }
      bzero((void *)(v8 + v9), v10);
      *((_WORD *)a1 + 6) += v10;
      if (v6 > *((unsigned __int16 *)a1 + 5)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2824LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6;
      if (*((_BYTE *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v6;
      }
      *((_BYTE *)a1 + 14) = 15;
      return 1LL;
    }

    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_1006594B0(v11, v10);
        return 0LL;
      }
    }
  }

  return result;
}

BOOL sub_1000A1DDC(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_1006595A8();
    return 0LL;
  }

  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  int v3 = *((unsigned __int16 *)a1 + 6);
  int v4 = v2 - v3;
  if (v2 - v3 <= 3) {
    goto LABEL_4;
  }
  if (v4 <= 2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2837LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1+1+1)");
  }
  unsigned int v6 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v7 = v3 + 3;
  *((_WORD *)a1 + 6) = v3 + 3;
  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2840LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v7)
  {
    *((_BYTE *)a1 + 15) = 1;
    uint64_t v12 = (os_log_s *)qword_1008DDDF0;
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1006596B0(v12, v13, v14, v15, v16, v17, v18, v19);
      return 0LL;
    }
  }

  else
  {
    uint64_t v8 = *a1;
    unsigned __int16 v9 = v3 + 4;
    *((_WORD *)a1 + 6) = v9;
    size_t v10 = *(unsigned __int8 *)(v8 + v7);
    unsigned int v11 = v4 - 4;
    if (v11 >= v10)
    {
      *((_BYTE *)a1 + 14) = 15;
      if (!v6) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2849LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v6;
      if (v6 < v9) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2850LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9;
      if ((int)(v6 - v9) < (int)v10) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2853LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (scanResponseDataLength)");
      }
      bzero((void *)(v8 + v9), v10);
      *((_WORD *)a1 + 6) += v10;
      if (v6 > *((unsigned __int16 *)a1 + 5)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2855LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6;
      if (*((_BYTE *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v6;
      }
      *((_BYTE *)a1 + 14) = 15;
      return 1LL;
    }

    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100659628(v11, v10);
        return 0LL;
      }
    }
  }

  return result;
}

BOOL sub_1000A2010(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100659720();
    return 0LL;
  }

  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  int v3 = *((unsigned __int16 *)a1 + 6);
  int v4 = v2 - v3;
  if (v2 - v3 <= 2) {
    goto LABEL_4;
  }
  if (v4 <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2868LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1+1)");
  }
  unsigned int v6 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v7 = v3 + 2;
  *((_WORD *)a1 + 6) = v3 + 2;
  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2871LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v7)
  {
    *((_BYTE *)a1 + 15) = 1;
    uint64_t v12 = (os_log_s *)qword_1008DDDF0;
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659828(v12, v13, v14, v15, v16, v17, v18, v19);
      return 0LL;
    }
  }

  else
  {
    uint64_t v8 = *a1;
    unsigned __int16 v9 = v3 + 3;
    *((_WORD *)a1 + 6) = v9;
    size_t v10 = *(unsigned __int8 *)(v8 + v7);
    unsigned int v11 = v4 - 3;
    if (v11 >= v10)
    {
      *((_BYTE *)a1 + 14) = 15;
      if (!v6) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2880LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v6;
      if (v6 < v9) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2881LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9;
      if ((int)(v6 - v9) < (int)v10) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2884LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (advertisingDataLength)");
      }
      bzero((void *)(v8 + v9), v10);
      *((_WORD *)a1 + 6) += v10;
      if (v6 > *((unsigned __int16 *)a1 + 5)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2886LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6;
      if (*((_BYTE *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v6;
      }
      *((_BYTE *)a1 + 14) = 15;
      return 1LL;
    }

    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_1006597A0(v11, v10);
        return 0LL;
      }
    }
  }

  return result;
}

BOOL sub_1000A2244(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_15;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x1E)
  {
LABEL_15:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659898();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 14) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2899LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1+1+1+3+2+2+1+1+1+1+1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 15;
  *((_WORD *)a1 + 6) = v4;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2903LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2904LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2907LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned int v6 = (void *)(v5 + v4);
  *unsigned int v6 = 0LL;
  v6[1] = 0LL;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2908LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  return 1LL;
}

BOOL sub_1000A23DC(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_15;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x23)
  {
LABEL_15:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659918();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 19) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2921LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1+1+1+3+2+1+2+2+1+1+1+1+1+1+1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 20;
  *((_WORD *)a1 + 6) = v4;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2925LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2926LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2929LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned int v6 = (void *)(v5 + v4);
  *unsigned int v6 = 0LL;
  v6[1] = 0LL;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2930LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  return 1LL;
}

BOOL sub_1000A2574(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_15;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x13)
  {
LABEL_15:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065998C();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2943LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1+2+1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 4;
  *((_WORD *)a1 + 6) = v4;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2947LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2948LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2951LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned int v6 = (void *)(v5 + v4);
  *unsigned int v6 = 0LL;
  v6[1] = 0LL;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2952LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  return 1LL;
}

uint64_t sub_1000A270C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_100659A00();
    }
    return 0LL;
  }

  int v1 = *(unsigned __int16 *)(a1 + 12);
  if (*(_BYTE *)(a1 + 14) == 2) {
    *(_WORD *)(a1 + 10) = v1;
  }
  unsigned int v4 = *(unsigned __int16 *)(a1 + 8);
  *(_BYTE *)(a1 + 14) = 15;
  uint64_t v5 = *(_BYTE **)a1;
  if (!*(void *)a1 || !v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2290LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *(_BYTE *)(a1 + 14) = 2;
  *(_WORD *)(a1 + 10) = v4;
  *(_WORD *)(a1 + 12) = 0;
  *uint64_t v5 = 0;
  ++*(_WORD *)(a1 + 12);
  if (v4 > *(unsigned __int16 *)(a1 + 10)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2296LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *(_WORD *)(a1 + 12) = v4;
  if (*(_BYTE *)(a1 + 14) == 2) {
    *(_WORD *)(a1 + 10) = v4;
  }
  *(_BYTE *)(a1 + 14) = 15;
  if (!*(void *)a1 || (__int16 v6 = *(_WORD *)(a1 + 8)) == 0) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2298LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  uint64_t v2 = 1LL;
  *(_BYTE *)(a1 + 14) = 1;
  *(_WORD *)(a1 + 10) = v6;
  *(_WORD *)(a1 + 12) = 1;
  return v2;
}

BOOL sub_1000A2860(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100659A84();
    return 0LL;
  }

  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  if (v2 == (_DWORD)v3) {
    goto LABEL_4;
  }
  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2500LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v3)
  {
    *((_BYTE *)a1 + 15) = 1;
    size_t v10 = (os_log_s *)qword_1008DDDF0;
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659B90(v10, v11, v12, v13, v14, v15, v16, v17);
      return 0LL;
    }
  }

  else
  {
    uint64_t v5 = *a1;
    unsigned __int16 v6 = v3 + 1;
    *((_WORD *)a1 + 6) = v3 + 1;
    unsigned int v7 = *((unsigned __int16 *)a1 + 4);
    unsigned int v8 = ~(_DWORD)v3 + v2;
    uint64_t v9 = 22LL * *(unsigned __int8 *)(v5 + v3);
    if (v8 >= v9)
    {
      *((_BYTE *)a1 + 14) = 15;
      if (!v7) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2507LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v7;
      if (v3 >= v7) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2508LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6;
      if ((int)(v7 - v6) < (int)v9) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2511LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (numLinkKeys*(6+16))");
      }
      bzero((void *)(v5 + v6), v9);
      *((_WORD *)a1 + 6) += v9;
      if (v7 > *((unsigned __int16 *)a1 + 5)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2513LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v7;
      if (*((_BYTE *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v7;
      }
      *((_BYTE *)a1 + 14) = 15;
      if (!*a1 || (unsigned int v18 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2515LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 1;
      *((_WORD *)a1 + 5) = v18;
      if (v18 < (unsigned __int16)(v6 + v9)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2516LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6 + v9;
      return 1LL;
    }

    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100659B08(v8, v9);
        return 0LL;
      }
    }
  }

  return result;
}

BOOL sub_1000A2AD4(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_17;
  }

  uint64_t v1 = *((unsigned __int16 *)a1 + 6);
  if (*((unsigned __int16 *)a1 + 5) - v1 <= 0x1E)
  {
LABEL_17:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659C00();
      return 0LL;
    }

    return result;
  }

  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v1;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 4);
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v3 = *a1;
  if (!*a1 || !v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2530LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v2;
  if (v1 > v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2531LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v1;
  if ((int)(v2 - v1) <= 30) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2534LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (31)");
  }
  unsigned int v4 = (void *)(v3 + v1);
  void *v4 = 0LL;
  v4[1] = 0LL;
  *(void *)((char *)v4 + 23) = 0LL;
  v4[2] = 0LL;
  *((_WORD *)a1 + 6) += 31;
  if (v2 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2536LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v2;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v2;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v5 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2538LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v6 = v1 + 31;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v5;
  if (v5 < v6) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2539LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v6;
  return 1LL;
}

BOOL sub_1000A2CB0(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0xF0)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659C80();
      return 0LL;
    }

    return result;
  }

  if (v1 <= v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2551LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2554LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2555LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 239) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2558LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (240)");
  }
  unsigned __int16 v6 = (_OWORD *)(v5 + v4);
  v6[13] = 0u;
  v6[14] = 0u;
  v6[11] = 0u;
  v6[12] = 0u;
  v6[9] = 0u;
  v6[10] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[1] = 0u;
  _BYTE v6[2] = 0u;
  *unsigned __int16 v6 = 0u;
  *((_WORD *)a1 + 6) += 240;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2560LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2562LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 241;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2563LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A2ECC(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_19;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 6)
  {
LABEL_19:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659CF4();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 5) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2575LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2578LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2579LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if (v3 <= v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2582LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  *(_BYTE *)(v5 + (unsigned __int16)(v1 + 6)) = 0;
  ++*((_WORD *)a1 + 6);
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2584LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2586LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 7;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2587LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1LL;
}

BOOL sub_1000A30C0(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_13;
  }

  if (*((unsigned __int16 *)a1 + 5) - *((unsigned __int16 *)a1 + 6) <= 4)
  {
LABEL_13:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659D74();
      return 0LL;
    }

    return result;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 4);
  uint64_t v2 = *a1;
  if (*a1) {
    BOOL v3 = v1 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2603LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v1;
  *((_WORD *)a1 + 6) = 0;
  if (v1 <= 4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2610LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 2 + 1 + 1)");
  }
  *(_BYTE *)(v2 + 4) = 0;
  *(_DWORD *)uint64_t v2 = 0;
  *((_WORD *)a1 + 6) += 5;
  if (v1 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2612LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v1;
  }
  *((_BYTE *)a1 + 14) = 15;
  return 1LL;
}

BOOL sub_1000A31F8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_4;
  }

  if (*(unsigned __int16 *)(a1 + 10) == *(unsigned __int16 *)(a1 + 12))
  {
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659DF4();
      return 0LL;
    }

    return result;
  }

  unsigned int v2 = *(unsigned __int16 *)(a1 + 8);
  BOOL v3 = *(_BYTE **)a1;
  if (*(void *)a1) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2625LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *(_BYTE *)(a1 + 14) = 2;
  *(_WORD *)(a1 + 10) = v2;
  *(_WORD *)(a1 + 12) = 0;
  _BYTE *v3 = 0;
  ++*(_WORD *)(a1 + 12);
  if (v2 > *(unsigned __int16 *)(a1 + 10)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2630LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *(_WORD *)(a1 + 12) = v2;
  if (*(_BYTE *)(a1 + 14) == 2) {
    *(_WORD *)(a1 + 10) = v2;
  }
  *(_BYTE *)(a1 + 14) = 15;
  return 1LL;
}

BOOL sub_1000A3300(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_4;
  }

  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  if (v2 == (_DWORD)v3)
  {
LABEL_4:
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_100659E78();
    }
    return 0;
  }

  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1817LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v3)
  {
    *((_BYTE *)a1 + 15) = 1;
    unsigned int v18 = (os_log_s *)qword_1008DDDF0;
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_100659EFC(v18, v19, v20, v21, v22, v23, v24, v25);
    }
    return 0;
  }

  unsigned int v6 = *((unsigned __int16 *)a1 + 4);
  uint64_t v7 = *a1;
  int v8 = v3 + 1;
  *((_WORD *)a1 + 6) = v3 + 1;
  unsigned int v9 = *(unsigned __int8 *)(v7 + v3);
  if (*(_BYTE *)(v7 + v3))
  {
    BOOL v4 = 0;
    int v10 = 0;
    LOWORD(v11) = v6;
    while (1)
    {
      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
        return v4;
      }

      int v12 = (unsigned __int16)v2 - (unsigned __int16)v8;
      if (v12 <= 7) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1827LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 1 + 6)");
      }
      unsigned __int16 v13 = v8 + 8;
      *((_WORD *)a1 + 6) = v8 + 8;
      int v14 = v8 + 9;
      *((_WORD *)a1 + 6) = v14;
      size_t v15 = *(unsigned __int8 *)(v7 + v13);
      if ((unsigned __int16)v2 - (unsigned __int16)v14 < (int)v15) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1830LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (dataLength)");
      }
      int v16 = v14 + v15;
      *((_WORD *)a1 + 6) = v16;
      if ((unsigned __int16)v2 <= (unsigned __int16)v16) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1831LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
      }
      int v17 = v16 + 1;
      *((_WORD *)a1 + 6) = v16 + 1;
      if (v15 <= 0x1F && (unsigned __int16)v2 - (unsigned __int16)v17 >= v15)
      {
        *((_BYTE *)a1 + 14) = 15;
        if (!(_WORD)v11) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1837LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
        }
        *((_WORD *)a1 + 6) = 0;
        *((_BYTE *)a1 + 14) = 2;
        *((_WORD *)a1 + 5) = v11;
        if ((unsigned __int16)v16 >= (unsigned __int16)v11) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1838LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
        }
        *((_WORD *)a1 + 6) = v17;
        if ((unsigned __int16)v11 - (unsigned __int16)(v16 + 1) < (int)v15) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1839LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (dataLength)");
        }
        bzero((void *)(v7 + (unsigned __int16)v17), v15);
        *((_WORD *)a1 + 6) += v15;
        if (v6 > *((unsigned __int16 *)a1 + 5)) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1841LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
        }
        *((_WORD *)a1 + 6) = v6;
        if (*((_BYTE *)a1 + 14) == 2) {
          *((_WORD *)a1 + 5) = v6;
        }
        *((_BYTE *)a1 + 14) = 15;
        uint64_t v7 = *a1;
        if (!*a1 || (unsigned int v11 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1843LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
        }
        int v8 = v17 + v15;
        *((_WORD *)a1 + 6) = 0;
        *((_BYTE *)a1 + 14) = 1;
        *((_WORD *)a1 + 5) = v11;
        if (v11 < (unsigned __int16)(v17 + v15)) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1844LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
        }
        *((_WORD *)a1 + 6) = v8;
        BOOL v4 = ++v10 >= v9;
        LOWORD(v2) = v11;
        if (v9 != v10) {
          continue;
        }
      }

      return v4;
    }

    *((_BYTE *)a1 + 15) = 1;
    uint64_t v26 = (os_log_s *)qword_1008DDDF0;
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_100659EFC(v26, v27, v28, v29, v30, v31, v32, v33);
    }
  }

  else
  {
    return 1;
  }

  return v4;
}

BOOL sub_1000A368C(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0xA)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659F6C();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1862LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 3;
  *((_WORD *)a1 + 6) = v1 + 3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1865LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1866LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1867LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (8)");
  }
  *(void *)(v5 + (unsigned __int16)(v1 + 3)) = 0LL;
  *((_WORD *)a1 + 6) += 8;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1869LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1871LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 11;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1872LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1LL;
}

BOOL sub_1000A3884(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0xB)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100659FE0();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1887LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 2;
  *((_WORD *)a1 + 6) = v1 + 2;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1890LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1891LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 9) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1894LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (8 + 2)");
  }
  uint64_t v6 = v5 + v4;
  *(_WORD *)(v6 + 8) = 0;
  *(void *)uint64_t v6 = 0LL;
  *((_WORD *)a1 + 6) += 10;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1896LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1898LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 12;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1899LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A3A80(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x40)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065A054();
      return 0LL;
    }

    return result;
  }

  if (v1 <= v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1914LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1917LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1918LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 63) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1921LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (32 + 32)");
  }
  uint64_t v6 = (_OWORD *)(v5 + v4);
  _BYTE v6[2] = 0u;
  v6[3] = 0u;
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 64;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1923LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1925LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 65;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1926LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A3C84(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x20)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065A0D4();
      return 0LL;
    }

    return result;
  }

  if (v1 <= v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1941LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1944LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1945LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 31) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1946LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (32)");
  }
  uint64_t v6 = (_OWORD *)(v5 + v4);
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 32;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1948LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1950LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 33;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1951LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

uint64_t sub_1000A3E84(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_4;
  }

  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  if (v2 == (_DWORD)v3)
  {
LABEL_4:
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_10065A148();
    }
LABEL_6:
    char v4 = 0;
    return v4 & 1;
  }

  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1965LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v3)
  {
    *((_BYTE *)a1 + 15) = 1;
    int v17 = (os_log_s *)qword_1008DDDF0;
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_10065A2C8(v17, v18, v19, v20, v21, v22, v23, v24);
    }
    goto LABEL_6;
  }

  unsigned int v6 = *((unsigned __int16 *)a1 + 4);
  uint64_t v7 = *a1;
  int v8 = v3 + 1;
  *((_WORD *)a1 + 6) = v3 + 1;
  unsigned int v9 = *(unsigned __int8 *)(v7 + v3);
  if (*(_BYTE *)(v7 + v3))
  {
    BOOL v10 = 0;
    unsigned int v11 = 0;
    LOWORD(v12) = v6;
    while (!*((_BYTE *)a1 + 15))
    {
      int v13 = (unsigned __int16)v2 - (unsigned __int16)v8;
      if (v13 <= 22) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1983LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (2 + 1 + 6 + 1 + 1 + 1 + 1 + 1 + 2 + 1 + 6)");
      }
      *((_WORD *)a1 + 6) = v8 + 23;
      if ((unsigned __int16)v2 <= (unsigned __int16)(v8 + 23))
      {
        *((_BYTE *)a1 + 15) = 1;
        uint64_t v25 = (os_log_s *)qword_1008DDDF0;
        if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
          sub_10065A2C8(v25, v26, v27, v28, v29, v30, v31, v32);
        }
        goto LABEL_38;
      }

      int v14 = v8 + 24;
      *((_WORD *)a1 + 6) = v8 + 24;
      size_t v15 = *(unsigned __int8 *)(v7 + (unsigned __int16)(v8 + 23));
      unsigned int v16 = (unsigned __int16)v2 - (unsigned __int16)(v8 + 24);
      if (v16 < v15)
      {
        if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
          sub_10065A240(v16, v15);
        }
        goto LABEL_38;
      }

      *((_BYTE *)a1 + 14) = 15;
      if (!(_WORD)v12) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1994LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v12;
      if ((unsigned __int16)(v8 + 24) > (unsigned __int16)v12) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1995LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v14;
      if ((unsigned __int16)v12 - (unsigned __int16)(v8 + 24) < (int)v15) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1996LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (dataLength)");
      }
      bzero((void *)(v7 + (unsigned __int16)v14), v15);
      *((_WORD *)a1 + 6) += v15;
      if (v6 > *((unsigned __int16 *)a1 + 5)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  1998LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6;
      if (*((_BYTE *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v6;
      }
      *((_BYTE *)a1 + 14) = 15;
      uint64_t v7 = *a1;
      if (!*a1 || (unsigned int v12 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2000LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      int v8 = v14 + v15;
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 1;
      *((_WORD *)a1 + 5) = v12;
      if (v12 < (unsigned __int16)(v14 + v15)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2001LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      ++v11;
      *((_WORD *)a1 + 6) = v8;
      BOOL v10 = v11 >= v9;
      char v4 = 1;
      LOWORD(v2) = v12;
      if (v9 == v11) {
        return v4 & 1;
      }
    }

    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_32:
    if (os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR)) {
      sub_10065A1CC();
    }
LABEL_38:
    char v4 = v10;
  }

  else
  {
    char v4 = 1;
  }

  return v4 & 1;
}

BOOL sub_1000A4210(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_10065A338();
    return 0LL;
  }

  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  int v3 = *((unsigned __int16 *)a1 + 6);
  if (v2 - v3 <= 6) {
    goto LABEL_4;
  }
  if ((int)(v2 - v3) <= 5) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2021LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (2 + 1 + 1 + 1 + 1)");
  }
  unsigned int v5 = *((unsigned __int16 *)a1 + 4);
  *((_WORD *)a1 + 6) = v3 + 6;
  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2024LL,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= (unsigned __int16)(v3 + 6))
  {
    *((_BYTE *)a1 + 15) = 1;
    unsigned int v12 = (os_log_s *)qword_1008DDDF0;
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065A3B8(v12, v13, v14, v15, v16, v17, v18, v19);
      return 0LL;
    }
  }

  else
  {
    uint64_t v6 = *a1;
    unsigned __int16 v7 = v3 + 7;
    *((_WORD *)a1 + 6) = v3 + 7;
    size_t v8 = *(unsigned __int8 *)(v6 + (unsigned __int16)(v3 + 6));
    unsigned int v9 = v2 - (unsigned __int16)(v3 + 7);
    if (*(_BYTE *)(v6 + (unsigned __int16)(v3 + 6)))
    {
      *((_BYTE *)a1 + 14) = 15;
      if (!v5) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2033LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v5;
      if (v5 < v7) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2034LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v7;
      if ((int)(v5 - (unsigned __int16)(v3 + 7)) < (int)v8) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2035LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (dataLength)");
      }
      bzero((void *)(v6 + v7), v8);
      *((_WORD *)a1 + 6) += v8;
      if (v5 > *((unsigned __int16 *)a1 + 5)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2037LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v5;
      if (*((_BYTE *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v5;
      }
      *((_BYTE *)a1 + 14) = 15;
      if (!*a1 || (unsigned int v11 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2039LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((_BYTE *)a1 + 14) = 1;
      *((_WORD *)a1 + 5) = v11;
      if (v11 < (unsigned __int16)(v7 + v8)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2040LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v7 + v8;
    }

    return 1LL;
  }

  return result;
}

BOOL sub_1000A4488(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 1)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065A428();
      return 0LL;
    }

    return result;
  }

  if (v1 <= v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2055LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2059LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2060LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if (v3 <= v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2063LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  *(_BYTE *)(v5 + v4) = 0;
  ++*((_WORD *)a1 + 6);
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2065LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2067LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned int v7 = v2 + 2;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v7 > v6) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2068LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1LL;
}

BOOL sub_1000A467C(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0xF8)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065A4A8();
      return 0LL;
    }

    return result;
  }

  if (v1 <= v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2080LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2084LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2085LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 247) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2088LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (248)");
  }
  uint64_t v6 = v5 + v4;
  *(void *)(v6 + 240) = 0LL;
  *(_OWORD *)(v6 + 208) = 0u;
  *(_OWORD *)(v6 + 224) = 0u;
  *(_OWORD *)(v6 + 176) = 0u;
  *(_OWORD *)(v6 + 192) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)uint64_t v6 = 0u;
  *((_WORD *)a1 + 6) += 248;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2090LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2092LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 249;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2093LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A489C(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0xF1)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065A51C();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2105LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1+1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 2;
  *((_WORD *)a1 + 6) = v1 + 2;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2109LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2110LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 239) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2113LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (240)");
  }
  uint64_t v6 = (_OWORD *)(v5 + v4);
  v6[13] = 0u;
  v6[14] = 0u;
  v6[11] = 0u;
  v6[12] = 0u;
  v6[9] = 0u;
  v6[10] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[1] = 0u;
  _BYTE v6[2] = 0u;
  *uint64_t v6 = 0u;
  *((_WORD *)a1 + 6) += 240;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2115LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2117LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 242;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2118LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A4AB4(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x16)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065A590();
      return 0LL;
    }

    return result;
  }

  if (v1 <= v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2130LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2134LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2135LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 31) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2139LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16 + 16)");
  }
  uint64_t v6 = (_OWORD *)(v5 + v4);
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 32;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2141LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2143LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 33;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2144LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A4CB4(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x40)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065A610();
      return 0LL;
    }

    return result;
  }

  if (v1 <= v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2188LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2191LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2192LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 63) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2198LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16 + 16 + 16 + 16)");
  }
  uint64_t v6 = (_OWORD *)(v5 + v4);
  _BYTE v6[2] = 0u;
  v6[3] = 0u;
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 64;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2200LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2202LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 65;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2203LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A4EB8(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 1)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065A690();
      return 0LL;
    }

    return result;
  }

  if (v1 <= v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2163LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2167LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2168LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if (v3 <= v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2171LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  *(_BYTE *)(v5 + v4) = 0;
  ++*((_WORD *)a1 + 6);
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2173LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2175LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned int v7 = v2 + 2;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v7 > v6) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2176LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1LL;
}

BOOL sub_1000A50AC(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_19;
  }

  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 3)
  {
LABEL_19:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065A710();
      return 0LL;
    }

    return result;
  }

  if (v2 <= 2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2215LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1+2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 3;
  *((_WORD *)a1 + 6) = v1 + 3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2218LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2219LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if (v3 <= v4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2222LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  *(_BYTE *)(v5 + (unsigned __int16)(v1 + 3)) = 0;
  ++*((_WORD *)a1 + 6);
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2224LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2226LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 4;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2227LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1LL;
}

BOOL sub_1000A52A0(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x10)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065A790();
      return 0LL;
    }

    return result;
  }

  if (v1 <= v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2239LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2242LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2243LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2246LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned int v6 = (void *)(v5 + v4);
  *unsigned int v6 = 0LL;
  v6[1] = 0LL;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2248LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2250LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 17;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2251LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1LL;
}

BOOL sub_1000A549C(uint64_t *a1)
{
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }

  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 8)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_1008DDDF0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10065A804();
      return 0LL;
    }

    return result;
  }

  if (v1 <= v2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2263LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((_BYTE *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2266LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2267LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2270LL,  "ByteStream_NumReadBytesAvail(*pBs) >= (8)");
  }
  *(void *)(v5 + v4) = 0LL;
  *((_WORD *)a1 + 6) += 8;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2272LL,  "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((_BYTE *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((_BYTE *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2274LL,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v2 + 9;
  *((_WORD *)a1 + 6) = 0;
  *((_BYTE *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c",  2275LL,  "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1LL;
}

void sub_1000A5694( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_1000A56A4(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

  ;
}

  ;
}

  ;
}

uint64_t sub_1000A56E0(uint64_t a1, _DWORD *a2, int a3, int a4, uint64_t a5)
{
  if (a5)
  {
    __int16 v7 = a3;
    uint64_t result = sub_1000AD63C(a1, a2, a3, (uint64_t)sub_1000A5788, 0x3FAu, 0);
    if (!(_DWORD)result)
    {
      sub_1000AD600(1);
      qword_1008DDE00 = (uint64_t)sub_1000B1814(0x40uLL);
      if (qword_1008DDE00)
      {
        char v9 = *(_BYTE *)(sub_1001EDBA0(0xFu) + 10);
        BOOL v10 = (void *)qword_1008DDE00;
        *(_BYTE *)(qword_1008DDE00 + 60) = v9;
        sub_1001EF1B4(v10);
        uint64_t result = 0LL;
        uint64_t v11 = qword_1008DDE00;
        *(void *)(qword_1008DDE00 + 24) = a5;
        *(_WORD *)(v11 + 40) = v7;
        *(_DWORD *)(v11 + 44) = a4;
      }

      else
      {
        sub_1000AD958();
        return 106LL;
      }
    }
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

  return result;
}

void sub_1000A5788(unsigned int *a1)
{
  unsigned int v2 = *a1;
  if (*a1 == 6)
  {
    unsigned int v3 = (void (**)(void **))sub_1000A5BC8(*((unsigned __int16 *)a1 + 2));
    if (!v3) {
      sub_1001EE2A0();
    }
    if ((*((_BYTE *)v3 + 95) & 0xFE) == 2)
    {
      if (sub_1000D599C(v3 + 3, *((void *)a1 + 1), *((unsigned __int16 *)a1 + 8)))
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Receive error", v4, v5, v6, v7, v8, v9, v10, v67);
          uint64_t v11 = (os_log_s *)sub_100086554(0xFu);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
            sub_10065A878();
          }
        }
      }
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Data (event %d) received in invalid state (%d), forwarding to app.\n",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  *a1);
        uint64_t v22 = (os_log_s *)sub_100086554(0xFu);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      (*(void (**)(unsigned int *))(qword_1008DDE00 + 24))(a1);
    }

    return;
  }

  if (v2 == 2)
  {
    unsigned int v12 = sub_1000A5BC8(*((unsigned __int16 *)a1 + 2));
    if (!v12) {
      sub_1001EE2A0();
    }
    uint64_t v13 = sub_1000A5BC8(*((unsigned __int16 *)a1 + 2));
    if (v13) {
      *((_BYTE *)v13 + 95) = 0;
    }
    if (*(_BYTE *)(qword_1008DDE00 + 49)) {
      *((_DWORD *)v12 + 21) = 1802;
    }
    uint64_t v14 = (void *)v12[7];
    if (v14)
    {
      sub_1000B1838(v14);
      v12[7] = 0LL;
    }

    sub_1000A5F4C(*((unsigned __int16 *)a1 + 2), a1[2]);
    sub_1000A5F94(*((unsigned __int16 *)a1 + 2));
    return;
  }

  if (v2 != 1 || a1[4])
  {
    (*(void (**)(unsigned int *))(qword_1008DDE00 + 24))(a1);
    return;
  }

  if (*(unsigned __int8 *)(qword_1008DDE00 + 16) >= *(unsigned __int8 *)(qword_1008DDE00 + 60))
  {
    sub_1001EE134( (uint64_t)"Maximum handsfree connection is %d, cannot create device",  v29,  v30,  v31,  v32,  v33,  v34,  v35,  *(unsigned __int8 *)(qword_1008DDE00 + 60));
    int v36 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
      goto LABEL_52;
    }
LABEL_32:
    sub_100657858();
LABEL_52:
    *(_BYTE *)(qword_1008DDE00 + 49) = 1;
    int v58 = 106;
LABEL_53:
    sub_1000A5EC0(*((unsigned __int16 *)a1 + 2), v58);
    return;
  }

  __int16 v23 = *((_WORD *)a1 + 2);
  uint64_t v24 = (int *)*((void *)a1 + 1);
  uint64_t v25 = (char *)sub_1000B1814(0x78uLL);
  if (!v25)
  {
    sub_1001EE134((uint64_t)"Could not allocate connection, out of memory\n", v37, v38, v39, v40, v41, v42, v43, v67);
    uint64_t v44 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
      goto LABEL_52;
    }
    goto LABEL_32;
  }

  uint64_t v26 = v25;
  int v27 = *v24;
  *((_WORD *)v25 + 46) = *((_WORD *)v24 + 2);
  *((_DWORD *)v25 + 22) = v27;
  *(_WORD *)uint64_t v25 = v23;
  if (*(_WORD *)(sub_1001EDBA0(0xFu) + 8)) {
    unsigned int v28 = *(unsigned __int16 *)(sub_1001EDBA0(0xFu) + 8);
  }
  else {
    unsigned int v28 = 256;
  }
  uint64_t v45 = sub_1000B17F4(v28);
  *((void *)v26 + 7) = v45;
  if (!v45)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Could not allocate receive buffer\n", v59, v60, v61, v62, v63, v64, v65, v67);
      uint64_t v66 = (os_log_s *)sub_100086554(0xFu);
      if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1000B1838(v26);
    goto LABEL_52;
  }

  *((_WORD *)v26 + 24) = 9;
  *((_DWORD *)v26 + 16) = -1;
  *(_DWORD *)(v26 + 67) = -1;
  sub_1000D5E48((uint64_t)(v26 + 24), (uint64_t)sub_1000A61C8, (uint64_t)v45, v28);
  uint64_t v46 = (uint64_t *)qword_1008DDE00;
  ++*(_BYTE *)(qword_1008DDE00 + 16);
  sub_1001EF1BC((void *)v26 + 13, v46);
  *(_BYTE *)(qword_1008DDE00 + 49) = 1;
  uint64_t v47 = sub_1000A5BC8(*((unsigned __int16 *)a1 + 2));
  if (v47) {
    *((_BYTE *)v47 + 95) = 1;
  }
  unsigned int v48 = *((unsigned __int16 *)a1 + 2);
  uint64_t v49 = sub_1000A5BC8(v48);
  if (!v49) {
    sub_1001EE2A0();
  }
  if (!sub_1001DF224((uint64_t)sub_1000A7418, (uint64_t)sub_1000A75E0, (uint64_t)(v49 + 11)))
  {
    *(_WORD *)(qword_1008DDE00 + 18) = v48;
    *((_BYTE *)v49 + 94) = 1;
    return;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"SDP connect", v50, v51, v52, v53, v54, v55, v56, v67);
    uint64_t v57 = (os_log_s *)sub_100086554(0xFu);
    if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  int v58 = sub_1000A76A0(v48);
  if (v58) {
    goto LABEL_53;
  }
}

void *sub_1000A5BC8(unsigned int a1)
{
  if (qword_1008DDE00)
  {
    for (char i = *(void **)qword_1008DDE00; i && i != (void *)qword_1008DDE00; char i = (void *)*i)
    {
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Could not find addr for device handle %d", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(0xFu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 0LL;
}

uint64_t sub_1000A5C70(unsigned int a1, uint64_t a2, char *a3, size_t a4, int a5, char a6)
{
  unsigned int v12 = sub_1000A5BC8(a1);
  if (v12)
  {
    uint64_t v13 = v12;
    if (*((_BYTE *)v12 + 78))
    {
      uint64_t v14 = 1805LL;
    }

    else
    {
      if (a5) {
        uint64_t v15 = sub_1000A8378;
      }
      else {
        uint64_t v15 = sub_1000A83E0;
      }
      uint64_t v14 = sub_1000ADED4(a1, (uint64_t)v15, a3, a4);
      if (!(_DWORD)v14)
      {
        *((_BYTE *)v13 + 78) = a6;
        v13[1] = a2;
        return v14;
      }
    }
  }

  else
  {
    sub_1001EE2A0();
    uint64_t v14 = 1802LL;
  }

  if (a5) {
    sub_1000B1838(a3);
  }
  return v14;
}

uint64_t sub_1000A5D2C(unsigned int a1, uint64_t a2)
{
  if (!sub_1000AD5D0()) {
    return 408LL;
  }
  uint64_t v4 = sub_1000A5BC8(a1);
  if (!v4) {
    sub_1001EE2A0();
  }
  if (*((_BYTE *)v4 + 95) != 3) {
    return 1802LL;
  }
  if ((*(_WORD *)(qword_1008DDE00 + 40) & 1) != 0) {
    return sub_1000A5C70(a1, a2, "AT+NREC=0\r", 0xAuLL, 0, 20);
  }
  return 1808LL;
}

uint64_t sub_1000A5DCC(unsigned int a1)
{
  unsigned int v1 = sub_1000A5BC8(a1);
  if (v1)
  {
    if (dword_1008F6F44) {
      return *((unsigned __int16 *)v1 + 24);
    }
  }

  else
  {
    sub_1001EE2A0();
  }

  return 0LL;
}

uint64_t sub_1000A5E04(unsigned int a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(qword_1008DDE00 + 44);
  if ((~v2 & 0x197) != 0)
  {
    if ((~v2 & 0x183) != 0)
    {
      if ((~v2 & 0x103) != 0)
      {
        if ((~v2 & 3) != 0)
        {
          if ((~v2 & 0x101) != 0)
          {
            if ((v2 & 1) == 0) {
              return 1813LL;
            }
            unsigned int v3 = "AT+BAC=1\r";
            size_t v4 = 9LL;
          }

          else
          {
            unsigned int v3 = "AT+BAC=1,256\r";
            size_t v4 = 13LL;
          }
        }

        else
        {
          unsigned int v3 = "AT+BAC=1,2\r";
          size_t v4 = 11LL;
        }
      }

      else
      {
        unsigned int v3 = "AT+BAC=1,2,256\r";
        size_t v4 = 15LL;
      }
    }

    else
    {
      unsigned int v3 = "AT+BAC=1,2,128,256\r";
      size_t v4 = 19LL;
    }
  }

  else
  {
    unsigned int v3 = "AT+BAC=1,2,127,128,255,256\r";
    size_t v4 = 27LL;
  }

  return sub_1000A5C70(a1, a2, v3, v4, 0, 27);
}

void sub_1000A5EC0(uint64_t a1, int a2)
{
  size_t v4 = sub_1000A5BC8(a1);
  if (!v4) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)(qword_1008DDE00 + 49)) {
    *((_DWORD *)v4 + 21) = a2;
  }
  if ((*((unsigned __int8 *)v4 + 95) | 4) != 4)
  {
    sub_1000A73D8(a1);
    uint64_t v5 = sub_1000A5BC8(a1);
    if (v5) {
      *((_BYTE *)v5 + 95) = 4;
    }
    sub_1000A5F94(a1);
  }

void sub_1000A5F4C(uint64_t a1, int a2)
{
  size_t v4 = sub_1000A5BC8(a1);
  if (v4)
  {
    if (*((_BYTE *)v4 + 78)) {
      sub_1000A7368(a1, 1802LL);
    }
    *(_DWORD *)(qword_1008DDE00 + 52) = a2;
  }

void sub_1000A5F94(uint64_t a1)
{
  int v2 = sub_1000A5BC8(a1);
  if (!v2) {
    sub_1001EE2A0();
  }
  uint64_t v31 = 0LL;
  memset(v30, 0, sizeof(v30));
  if (*((_BYTE *)v2 + 95) == 4)
  {
    if (*((_BYTE *)v2 + 94) == 2)
    {
      if (!sub_1001DF894())
      {
        *((_BYTE *)v2 + 94) = 3;
        goto LABEL_15;
      }

      sub_1001EE134((uint64_t)"SDP disconnect - forcing disconnect!", v3, v4, v5, v6, v7, v8, v9, (uint64_t)v29[0]);
      uint64_t v10 = (os_log_s *)sub_100086554(0xFu);
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_13;
      }
LABEL_12:
      sub_10065A878();
LABEL_13:
      sub_1000A8298(a1);
      goto LABEL_15;
    }

    if (sub_1000ADE0C(a1))
    {
      sub_1001EE134( (uint64_t)"Handsfree disconnect - forcing disconnect!",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  (uint64_t)v29[0]);
      uint64_t v18 = (os_log_s *)sub_100086554(0xFu);
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
  }

void sub_1000A61C8(uint64_t a1)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  if (!qword_1008DDE00) {
    goto LABEL_16;
  }
  int v2 = *(void **)qword_1008DDE00;
  if (!*(void *)qword_1008DDE00 || v2 == (void *)qword_1008DDE00) {
    goto LABEL_16;
  }
  while (*(v2 - 9) != *(void *)(*(void *)(a1 + 32) + 8LL))
  {
    int v2 = (void *)*v2;
    if (v2) {
      BOOL v4 = v2 == (void *)qword_1008DDE00;
    }
    else {
      BOOL v4 = 1;
    }
    if (v4) {
      goto LABEL_16;
    }
  }

  uint64_t v5 = *((unsigned __int16 *)v2 - 52);
  if (!*((_WORD *)v2 - 52))
  {
LABEL_16:
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Could not find connenction handle that matches recv buffer\n",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v21);
      uint64_t v13 = (os_log_s *)sub_100086554(0xFu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v5 = 0LL;
  }

  uint64_t v14 = 0LL;
  uint64_t v15 = *(const char **)(a1 + 8);
  while (strcmp((&off_100882010)[v14], v15))
  {
    v14 += 2LL;
    if (v14 == 40) {
      goto LABEL_25;
    }
  }

  if ((((uint64_t (*)(uint64_t, uint64_t))(&off_100882010)[v14 + 1])(v5, a1) & 1) == 0)
  {
LABEL_25:
    uint64_t v16 = sub_1000A5BC8(v5);
    if (!v16) {
      sub_1001EE2A0();
    }
    uint64_t v17 = 0LL;
    uint64_t v18 = *(const char **)(a1 + 8);
    while (strcmp(off_100882150[v17], v18))
    {
      if (++v17 == 8) {
        goto LABEL_30;
      }
    }

    if ((v17 & 0x7FFFFFFE) != 6)
    {
LABEL_35:
      sub_1000A7368(v5, v17 + 2701);
      return;
    }

    uint64_t v20 = sub_1000D5294(a1, (unsigned __int8 **)(a1 + 24), 0LL);
    if (v20)
    {
      *((_DWORD *)v16 + 20) = sub_1001F46A4(v20);
      goto LABEL_35;
    }

uint64_t sub_1000A6368(uint64_t a1)
{
  return 1LL;
}

BOOL sub_1000A6384(unsigned int a1, uint64_t a2)
{
  uint64_t v3 = sub_1000A5BC8(a1);
  if (!v3) {
    sub_1001EE2A0();
  }
  BOOL v4 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  uint64_t v5 = v4;
  if (v4) {
    *((_WORD *)v3 + 24) = sub_1001F46A4(v4);
  }
  return v5 != 0LL;
}

BOOL sub_1000A63DC()
{
  return *(_BYTE *)(qword_1008DDE00 + 48) == 0;
}

uint64_t sub_1000A63F4(__int16 a1, uint64_t a2)
{
  uint64_t v12 = 0LL;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v9 = 0u;
  LODWORD(v9) = 14;
  WORD2(v9) = a1;
  uint64_t v3 = (unsigned __int8 **)(a2 + 24);
  BOOL v4 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (v4)
  {
    uint64_t v5 = 0LL;
    char v6 = 0;
    int v7 = 0;
    do
    {
      if (v7 == 1)
      {
        char v6 = sub_1001F46A4(v4);
      }

      else if (!v7)
      {
        uint64_t v5 = v4;
      }

      ++v7;
      BOOL v4 = sub_1000D5294(a2, v3, 0LL);
    }

    while (v4);
    LOBYTE(v10) = v6;
    *((void *)&v9 + 1) = v5;
  }

  (*(void (**)(__int128 *))(qword_1008DDE00 + 24))(&v9);
  return 1LL;
}

BOOL sub_1000A64BC(unsigned int a1, uint64_t a2)
{
  uint64_t v3 = sub_1000A5BC8(a1);
  if (!v3) {
    sub_1001EE2A0();
  }
  int v4 = v3[78];
  if (v4 == 10)
  {
    __int128 v9 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
    if (v9)
    {
      __int128 v10 = v9;
      int v11 = 1;
      do
      {
        for (uint64_t i = 0LL; i != 7; ++i)
        {
        }

        ++v11;
        __int128 v10 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
      }

      while (v10);
    }

    return *(_BYTE *)(qword_1008DDE00 + 48) == 0;
  }

  if (v4 == 11)
  {
    uint64_t v5 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
    if (v5)
    {
      int v6 = 0;
      do
      {
        uint64_t v14 = v5 + 1;
        int v7 = sub_1000D5294(a2, &v14, 0LL);
        if (v7)
        {
          uint64_t v8 = v7;
          if (sub_1001F46E0(v7, "call"))
          {
            if (sub_1001F46E0(v8, "service"))
            {
              if (sub_1001F46E0(v8, "callsetup") && sub_1001F46E0(v8, "call_setup"))
              {
                if (sub_1001F46E0(v8, "battchg"))
                {
                  if (sub_1001F46E0(v8, "signal"))
                  {
                    if (sub_1001F46E0(v8, "callheld"))
                    {
                      ++v6;
                    }

                    else
                    {
                      v3[69] = ++v6;
                    }
                  }

                  else
                  {
                    v3[68] = ++v6;
                  }
                }

                else
                {
                  v3[67] = ++v6;
                }
              }

              else
              {
                v3[66] = ++v6;
              }
            }

            else
            {
              v3[65] = ++v6;
            }
          }

          else
          {
            v3[64] = ++v6;
          }
        }

        uint64_t v5 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
      }

      while (v5);
    }

    return *(_BYTE *)(qword_1008DDE00 + 48) == 0;
  }

  return 0LL;
}

uint64_t sub_1000A66FC(__int16 a1, uint64_t a2)
{
  uint64_t v12 = 0LL;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v9 = 0u;
  LODWORD(v9) = 15;
  WORD2(v9) = a1;
  uint64_t v3 = (unsigned __int8 **)(a2 + 24);
  int v4 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (v4)
  {
    uint64_t v5 = 0LL;
    char v6 = 0;
    int v7 = 0;
    do
    {
      if (v7 == 1)
      {
        char v6 = sub_1001F46A4(v4);
      }

      else if (!v7)
      {
        uint64_t v5 = v4;
      }

      ++v7;
      int v4 = sub_1000D5294(a2, v3, 0LL);
    }

    while (v4);
    LOBYTE(v10) = v6;
    *((void *)&v9 + 1) = v5;
  }

  (*(void (**)(__int128 *))(qword_1008DDE00 + 24))(&v9);
  return 1LL;
}

unsigned __int8 *sub_1000A67C4(unsigned int a1, uint64_t a2)
{
  __int16 v3 = a1;
  int v4 = (unsigned __int8 *)sub_1000A5BC8(a1);
  if (!v4) {
    sub_1001EE2A0();
  }
  uint64_t result = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (result)
  {
    int v6 = sub_1001F46A4(result);
    uint64_t result = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
    if (result)
    {
      uint64_t v12 = 0LL;
      memset(v11, 0, sizeof(v11));
      unsigned int v7 = sub_1001F46A4(result);
      for (uint64_t i = 0LL; i != 7; ++i)
      {
        if (v6 == v4[i + 64]) {
          v4[i + 71] = v7;
        }
      }

      WORD2(v11[0]) = v3;
      if (v6 == v4[66])
      {
        int v9 = 19;
LABEL_11:
        LODWORD(v11[0]) = v9;
LABEL_12:
        BYTE8(v11[0]) = v7;
        (*(void (**)(_OWORD *))(qword_1008DDE00 + 24))(v11);
        return (unsigned __int8 *)1;
      }

      if (v6 == v4[64])
      {
        int v10 = 11;
      }

      else if (v6 == v4[65])
      {
        int v10 = 13;
      }

      else
      {
        if (v6 == v4[67])
        {
          int v9 = 23;
          goto LABEL_11;
        }

        if (v6 == v4[68])
        {
          int v9 = 24;
          goto LABEL_11;
        }

        if (v6 == v4[69])
        {
          int v9 = 12;
          goto LABEL_11;
        }

        if (v6 != v4[70]) {
          return 0LL;
        }
        int v10 = 20;
      }

      LODWORD(v11[0]) = v10;
      if (v7 < 2) {
        goto LABEL_12;
      }
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000A6938(__int16 a1, uint64_t a2)
{
  uint64_t result = (uint64_t)sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (result)
  {
    uint64_t v14 = 0LL;
    memset(v13, 0, sizeof(v13));
    unsigned int v4 = sub_1001F46A4((_BYTE *)result);
    if (v4 < 2)
    {
      LODWORD(v13[0]) = 16;
      BYTE8(v13[0]) = v4 != 0;
      WORD2(v13[0]) = a1;
      (*(void (**)(_OWORD *))(qword_1008DDE00 + 24))(v13);
      return 1LL;
    }

    else
    {
      uint64_t result = sub_1000A86F0();
      if ((_DWORD)result)
      {
        sub_1001EE134((uint64_t)"Invalid setting!", v5, v6, v7, v8, v9, v10, v11, *(uint64_t *)&v13[0]);
        uint64_t v12 = (os_log_s *)sub_100086554(0xFu);
        uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
        if ((_DWORD)result)
        {
          sub_100657858();
          return 0LL;
        }
      }
    }
  }

  return result;
}

BOOL sub_1000A6A04(unsigned int a1, uint64_t a2)
{
  __int16 v3 = a1;
  unsigned int v4 = sub_1000A5BC8(a1);
  if (!v4) {
    sub_1001EE2A0();
  }
  uint64_t v5 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  uint64_t v6 = v5;
  if (v5)
  {
    uint64_t v10 = 0LL;
    memset(v9, 0, sizeof(v9));
    char v7 = sub_1001F46A4(v5);
    *((_BYTE *)v4 + 96) = v7;
    LODWORD(v9[0]) = 7;
    BYTE8(v9[0]) = v7;
    WORD2(v9[0]) = v3;
    (*(void (**)(_OWORD *))(qword_1008DDE00 + 24))(v9);
  }

  return v6 != 0LL;
}

BOOL sub_1000A6AA4(unsigned int a1, uint64_t a2)
{
  __int16 v3 = a1;
  unsigned int v4 = sub_1000A5BC8(a1);
  if (!v4) {
    sub_1001EE2A0();
  }
  uint64_t v5 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  uint64_t v6 = v5;
  if (v5)
  {
    uint64_t v10 = 0LL;
    memset(v9, 0, sizeof(v9));
    char v7 = sub_1001F46A4(v5);
    *((_BYTE *)v4 + 97) = v7;
    LODWORD(v9[0]) = 8;
    BYTE8(v9[0]) = v7;
    WORD2(v9[0]) = v3;
    (*(void (**)(_OWORD *))(qword_1008DDE00 + 24))(v9);
  }

  return v6 != 0LL;
}

uint64_t sub_1000A6B44(__int16 a1)
{
  uint64_t v3 = 0LL;
  memset(v2, 0, sizeof(v2));
  LODWORD(v2[0]) = 9;
  WORD2(v2[0]) = a1;
  (*(void (**)(_OWORD *))(qword_1008DDE00 + 24))(v2);
  return 1LL;
}

BOOL sub_1000A6B90(__int16 a1, uint64_t a2)
{
  uint64_t v7 = 0LL;
  __int128 v5 = 0u;
  __int128 v6 = 0u;
  v4[0] = 17LL;
  WORD2(v4[0]) = a1;
  int v2 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  v4[1] = v2;
  if (v2) {
    (*(void (**)(void *))(qword_1008DDE00 + 24))(v4);
  }
  return v2 != 0LL;
}

BOOL sub_1000A6C08(__int16 a1, uint64_t a2)
{
  uint64_t v3 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  unsigned int v4 = v3;
  if (v3)
  {
    uint64_t v7 = 0LL;
    memset(v6, 0, sizeof(v6));
    LODWORD(v6[0]) = 25;
    BYTE8(v6[0]) = sub_1001F46A4(v3);
    WORD2(v6[0]) = a1;
    (*(void (**)(_OWORD *))(qword_1008DDE00 + 24))(v6);
  }

  return v4 != 0LL;
}

BOOL sub_1000A6C8C(__int16 a1, uint64_t a2)
{
  uint64_t v14 = 0LL;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v11 = 0u;
  LODWORD(v11) = 22;
  WORD2(v11) = a1;
  uint64_t v3 = (unsigned __int8 **)(a2 + 24);
  unsigned int v4 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  __int128 v5 = v4;
  if (v4)
  {
    int v6 = 0;
    uint64_t v7 = 0LL;
    char v8 = 0;
    int v9 = 0;
    do
    {
      switch(v9)
      {
        case 3:
          int v6 = sub_1001F46A4(v4);
          break;
        case 2:
          char v8 = sub_1001F46A4(v4);
          break;
        case 1:
          uint64_t v7 = v4;
          break;
      }

      ++v9;
      unsigned int v4 = sub_1000D5294(a2, v3, 0LL);
    }

    while (v4);
    LOBYTE(v12) = v8;
    *((void *)&v11 + 1) = v7;
    DWORD1(v12) = v6;
    (*(void (**)(__int128 *))(qword_1008DDE00 + 24))(&v11);
  }

  return v5 != 0LL;
}

uint64_t sub_1000A6D84(__int16 a1, uint64_t a2)
{
  uint64_t result = (uint64_t)sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (result)
  {
    uint64_t v14 = 0LL;
    memset(v13, 0, sizeof(v13));
    unsigned int v4 = sub_1001F46A4((_BYTE *)result);
    if (v4 < 2)
    {
      LODWORD(v13[0]) = 18;
      BYTE8(v13[0]) = v4 != 0;
      WORD2(v13[0]) = a1;
      (*(void (**)(_OWORD *))(qword_1008DDE00 + 24))(v13);
      return 1LL;
    }

    else
    {
      uint64_t result = sub_1000A86F0();
      if ((_DWORD)result)
      {
        sub_1001EE134((uint64_t)"Invalid setting!", v5, v6, v7, v8, v9, v10, v11, *(uint64_t *)&v13[0]);
        __int128 v12 = (os_log_s *)sub_100086554(0xFu);
        uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
        if ((_DWORD)result)
        {
          sub_100657858();
          return 0LL;
        }
      }
    }
  }

  return result;
}

uint64_t sub_1000A6E50(__int16 a1, uint64_t a2)
{
  uint64_t v9 = 0LL;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v6 = 0u;
  LODWORD(v6) = 10;
  WORD2(v6) = a1;
  uint64_t v3 = (unsigned __int8 **)(a2 + 24);
  uint64_t result = (uint64_t)sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (result)
  {
    unsigned int v5 = -1;
    while (2)
    {
      switch(v5)
      {
        case 0xFFFFFFFF:
          DWORD2(v6) = sub_1001F46A4((_BYTE *)result);
          goto LABEL_12;
        case 0u:
          BYTE12(v6) = *(_BYTE *)result == 49;
          goto LABEL_12;
        case 1u:
          LODWORD(v7) = sub_1001F46A4((_BYTE *)result);
          goto LABEL_12;
        case 2u:
          DWORD1(v7) = sub_1001F46A4((_BYTE *)result);
          goto LABEL_12;
        case 3u:
          BYTE8(v7) = *(_BYTE *)result == 49;
          goto LABEL_12;
        case 4u:
          *(void *)&__int128 v8 = result;
          goto LABEL_12;
        case 5u:
          BYTE8(v8) = sub_1001F46A4((_BYTE *)result);
          goto LABEL_12;
        case 6u:
          uint64_t v9 = result;
LABEL_12:
          uint64_t result = (uint64_t)sub_1000D5294(a2, v3, 0LL);
          ++v5;
          if (result) {
            continue;
          }
          if (v5 >= 4)
          {
            (*(void (**)(__int128 *))(qword_1008DDE00 + 24))(&v6);
            uint64_t result = 1LL;
          }

          else
          {
LABEL_14:
            uint64_t result = 0LL;
          }

          break;
        default:
          goto LABEL_14;
      }

      break;
    }
  }

  return result;
}

uint64_t sub_1000A6F7C(__int16 a1, uint64_t a2)
{
  uint64_t v12 = 0LL;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v9 = 0u;
  LODWORD(v9) = 21;
  WORD2(v9) = a1;
  uint64_t v3 = (unsigned __int8 **)(a2 + 24);
  unsigned int v4 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (v4)
  {
    int v5 = 0;
    __int128 v6 = 0LL;
    int v7 = 0;
    while (1)
    {
      if (v7 == 2)
      {
        __int128 v6 = v4;
      }

      else if (v7 != 1)
      {
        if (v7) {
          return 0LL;
        }
        int v5 = sub_1001F46A4(v4);
      }

      ++v7;
      unsigned int v4 = sub_1000D5294(a2, v3, 0LL);
      if (!v4)
      {
        *(void *)&__int128 v10 = v6;
        DWORD2(v9) = v5;
        break;
      }
    }
  }

  (*(void (**)(__int128 *))(qword_1008DDE00 + 24))(&v9);
  return 1LL;
}

uint64_t sub_1000A7054(unsigned int a1, uint64_t a2)
{
  if ((sub_1000A5DCC(a1) & 0x200) == 0 || (*(_WORD *)(qword_1008DDE00 + 40) & 0x80) == 0) {
    return 0LL;
  }
  int v5 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  int v6 = sub_1001F46A4(v5);
  int v7 = v6;
  if (v6 > 127)
  {
    if (v6 > 254)
    {
      if (v6 == 255)
      {
        if ((*(_BYTE *)(qword_1008DDE00 + 44) & 0x10) == 0) {
          goto LABEL_31;
        }
        __int128 v8 = "AT+BCS=255\r";
      }

      else
      {
        if (v6 != 256) {
          goto LABEL_32;
        }
        if ((*(_BYTE *)(qword_1008DDE00 + 45) & 1) == 0) {
          goto LABEL_31;
        }
        __int128 v8 = "AT+BCS=256\r";
      }
    }

    else if (v6 == 128)
    {
      if ((*(_BYTE *)(qword_1008DDE00 + 44) & 0x80) == 0) {
        goto LABEL_31;
      }
      __int128 v8 = "AT+BCS=128\r";
    }

    else
    {
      if (v6 != 129) {
        goto LABEL_32;
      }
      if ((*(_BYTE *)(qword_1008DDE00 + 45) & 2) == 0) {
        goto LABEL_31;
      }
      __int128 v8 = "AT+BSC=129\r";
    }

unsigned __int8 *sub_1000A724C(__int16 a1, uint64_t a2)
{
  unsigned int v4 = (unsigned __int8 **)(a2 + 24);
  uint64_t result = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (result)
  {
    uint64_t result = sub_1000D5294(a2, v4, 0LL);
    if (result)
    {
      uint64_t v7 = 0LL;
      memset(v6, 0, sizeof(v6));
      WORD2(v6[0]) = a1;
      LODWORD(v6[0]) = 27;
      BYTE8(v6[0]) = sub_1001F46A4(result);
      (*(void (**)(_OWORD *))(qword_1008DDE00 + 24))(v6);
      return (unsigned __int8 *)1;
    }
  }

  return result;
}

BOOL sub_1000A72E4(__int16 a1, uint64_t a2)
{
  uint64_t v3 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  unsigned int v4 = v3;
  if (v3)
  {
    uint64_t v7 = 0LL;
    memset(v6, 0, sizeof(v6));
    WORD2(v6[0]) = a1;
    LODWORD(v6[0]) = 28;
    BYTE8(v6[0]) = sub_1001F46A4(v3);
    (*(void (**)(_OWORD *))(qword_1008DDE00 + 24))(v6);
  }

  return v4 != 0LL;
}

void sub_1000A7368(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_1000A5BC8(a1);
  if (!v4) {
    sub_1001EE2A0();
  }
  int v5 = *((unsigned __int8 *)v4 + 78);
  sub_1000A73D8(a1);
  *((_BYTE *)v4 + 78) = 0;
  int v6 = (void (*)(uint64_t, uint64_t))v4[1];
  if (v6) {
    BOOL v7 = v5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7) {
    v6(a1, a2);
  }
}

void sub_1000A73D8(unsigned int a1)
{
  unsigned int v1 = sub_1000A5BC8(a1);
  if (v1)
  {
    int v2 = v1;
    uint64_t v3 = *((unsigned int *)v1 + 1);
    if ((_DWORD)v3)
    {
      sub_1001EEB14(v3);
      *((_DWORD *)v2 + 1) = 0;
    }
  }

  else
  {
    sub_1001EE2A0();
  }

void sub_1000A7418(int a1)
{
  int v2 = sub_1000A5BC8(*(unsigned __int16 *)(qword_1008DDE00 + 18));
  if (!v2) {
    sub_1001EE2A0();
  }
  __int128 v22 = xmmword_1006BBCA0;
  __int128 v23 = xmmword_1006BBC90;
  v21[1] = &v23;
  v21[0] = 65542LL;
  v20[1] = (uint64_t)&v22;
  v20[0] = 65542LL;
  if (a1
    || (*((_BYTE *)v2 + 94) = 2,
        sub_1001E0050((uint64_t)sub_1000A77A0, (unsigned __int8 *)v21, (unsigned __int8 *)v20)))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"SDP connect", v3, v4, v5, v6, v7, v8, v9, v20[0]);
      size_t v10 = (os_log_s *)sub_100086554(0xFu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    if (*((_BYTE *)v2 + 94) == 2)
    {
      if (sub_1001DF894())
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"SDP disconnect", v11, v12, v13, v14, v15, v16, v17, v20[0]);
          uint64_t v18 = (os_log_s *)sub_100086554(0xFu);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            sub_10065A878();
          }
        }
      }

      else
      {
        *((_BYTE *)v2 + 94) = 3;
      }
    }

    else
    {
      *((_BYTE *)v2 + 94) = 0;
    }

    if (*((_BYTE *)v2 + 95) == 1)
    {
      int v19 = sub_1000A76A0(*(unsigned __int16 *)v2);
      if (v19) {
        sub_1000A5EC0(*(unsigned __int16 *)v2, v19);
      }
    }
  }

  if (*((_BYTE *)v2 + 95) == 4) {
    sub_1000A5F94(*(unsigned __int16 *)v2);
  }
}

void sub_1000A75E0()
{
  uint64_t v0 = sub_1000A5BC8(*(unsigned __int16 *)(qword_1008DDE00 + 18));
  if (!v0) {
    sub_1001EE2A0();
  }
  *(_WORD *)(qword_1008DDE00 + 18) = -1;
  *((_BYTE *)v0 + 94) = 0;
  int v1 = *((unsigned __int8 *)v0 + 95);
  if (v1 == 4)
  {
    sub_1000A5F94(*(unsigned __int16 *)v0);
  }

  else if (v1 == 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"SDP disconnected while querying supported features\n", v2, v3, v4, v5, v6, v7, v8, v11);
      uint64_t v9 = (os_log_s *)sub_100086554(0xFu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    int v10 = sub_1000A76A0(*(unsigned __int16 *)v0);
    if (v10) {
      sub_1000A5EC0(*(unsigned __int16 *)v0, v10);
    }
  }

uint64_t sub_1000A76A0(unsigned int a1)
{
  uint64_t v2 = sub_1000A5BC8(a1);
  if (v2) {
    *((_BYTE *)v2 + 95) = 2;
  }
  v23[0] = 0LL;
  v23[1] = 0LL;
  uint64_t v9 = sub_1001F48C8((uint64_t)v23, 0x14uLL);
  if (!(_DWORD)v9)
  {
    uint64_t v10 = sub_1001F5F28( (uint64_t)v23,  (uint64_t)"AT+BRSF=%d\r",  v3,  v4,  v5,  v6,  v7,  v8,  *(unsigned __int16 *)(qword_1008DDE00 + 40));
    if ((_DWORD)v10)
    {
      uint64_t v9 = v10;
      sub_1001F4914((uint64_t)v23);
    }

    else
    {
      uint64_t v11 = (char *)sub_1001F5F50((uint64_t)v23);
      unsigned __int16 v12 = strlen(v11);
      uint64_t v9 = sub_1000A5C70(a1, (uint64_t)sub_1000A793C, v11, v12, 1, 2);
      if (!(_DWORD)v9) {
        return v9;
      }
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"SLC handshaking (retrieve features)", v13, v14, v15, v16, v17, v18, v19, v22);
    uint64_t v20 = (os_log_s *)sub_100086554(0xFu);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  return v9;
}

void sub_1000A77A0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = sub_1000A5BC8(*(unsigned __int16 *)(qword_1008DDE00 + 18));
  if (!v5) {
    sub_1001EE2A0();
  }
  if (sub_1001DF894())
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"SDP disconnect", v6, v7, v8, v9, v10, v11, v12, v33);
      uint64_t v13 = (os_log_s *)sub_100086554(0xFu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  else
  {
    *((_BYTE *)v5 + 94) = 3;
  }

  if (a3) {
    goto LABEL_9;
  }
  if (!*(_WORD *)(a1 + 2))
  {
    sub_1001EE134((uint64_t)"No attributes in SDP response", v25, v26, v27, v28, v29, v30, v31, v33);
    uint64_t v32 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
LABEL_23:
    sub_100657858();
    goto LABEL_9;
  }

  if (*(_BYTE *)a1 != 6) {
    sub_1001EE2A0();
  }
  uint64_t v16 = *(void *)(*(void *)(a1 + 8) + 8LL);
  if (v16 && *(_DWORD *)(v16 + 8) == 785)
  {
    *((_WORD *)v5 + 24) = *(_DWORD *)(v16 + 24);
    goto LABEL_9;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Unexpected or no attribute in SDP response", v17, v18, v19, v20, v21, v22, v23, v33);
    uint64_t v24 = (os_log_s *)sub_100086554(0xFu);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      goto LABEL_23;
    }
  }

void sub_1000A793C(uint64_t a1, int a2)
{
  if (a2 != 2701)
  {
    int v3 = a2;
    if (a2)
    {
      sub_1001EE134((uint64_t)"Retrieve features", v13, v14, v15, v16, v17, v18, v19, v30);
      uint64_t v20 = (os_log_s *)sub_100086554(0xFu);
      if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
  }

  if ((sub_1000A5DCC(a1) & 0x200) == 0 || (*(_WORD *)(qword_1008DDE00 + 40) & 0x80) == 0)
  {
    int v4 = sub_1000A5C70(a1, (uint64_t)sub_1000A7BA8, "AT+CIND=?\r", 0xAuLL, 0, 11);
    if (!v4) {
      return;
    }
    int v3 = v4;
    sub_1001EE134((uint64_t)"SLC establish (indicator test)", v5, v6, v7, v8, v9, v10, v11, v30);
    uint64_t v12 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }

  int v21 = sub_1000A5E04(a1, (uint64_t)sub_1000A7AA8);
  if (!v21) {
    return;
  }
  int v3 = v21;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"SLC establish (call hold test)", v22, v23, v24, v25, v26, v27, v28, v30);
    uint64_t v29 = (os_log_s *)sub_100086554(0xFu);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
LABEL_15:
    }
      sub_10065A878();
  }

void sub_1000A7AA8(uint64_t a1, int a2)
{
  if (a2)
  {
    int v3 = a2;
    sub_1001EE134((uint64_t)"Available codecs", v4, v5, v6, v7, v8, v9, v10, v22);
    uint64_t v11 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  uint64_t v12 = sub_1000A5BC8(a1);
  if (v12) {
    *((_BYTE *)v12 + 95) = 3;
  }
  int v13 = sub_1000A5C70(a1, (uint64_t)sub_1000A7BA8, "AT+CIND=?\r", 0xAuLL, 0, 11);
  if (v13)
  {
    int v3 = v13;
    sub_1001EE134((uint64_t)"SLC establish (indicator test)", v14, v15, v16, v17, v18, v19, v20, v22);
    int v21 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
LABEL_10:
    sub_10065A878();
LABEL_11:
    sub_1000A5EC0(a1, v3);
  }

void sub_1000A7BA8(uint64_t a1, int a2)
{
  if (a2)
  {
    int v3 = a2;
    sub_1001EE134((uint64_t)"Indicator test", v4, v5, v6, v7, v8, v9, v10, v21);
    uint64_t v11 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  int v12 = sub_1000A5C70(a1, (uint64_t)sub_1000A7C94, "AT+CIND?\r", 9uLL, 0, 10);
  if (!v12) {
    return;
  }
  int v3 = v12;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"SLC establish (indicator read)", v13, v14, v15, v16, v17, v18, v19, v21);
    uint64_t v20 = (os_log_s *)sub_100086554(0xFu);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
LABEL_8:
    }
      sub_10065A878();
  }

void sub_1000A7C94(uint64_t a1, int a2)
{
  if (a2)
  {
    int v3 = a2;
    sub_1001EE134((uint64_t)"Read indicators", v4, v5, v6, v7, v8, v9, v10, v21);
    uint64_t v11 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  int v12 = sub_1000A5C70(a1, (uint64_t)sub_1000A7D80, "AT+CMER=3,0,0,1\r", 0x10uLL, 0, 13);
  if (!v12) {
    return;
  }
  int v3 = v12;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"SLC establish (enable event reporting)", v13, v14, v15, v16, v17, v18, v19, v21);
    uint64_t v20 = (os_log_s *)sub_100086554(0xFu);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
LABEL_8:
    }
      sub_10065A878();
  }

void sub_1000A7D80(uint64_t a1, int a2)
{
  if (a2)
  {
    int v3 = a2;
    sub_1001EE134((uint64_t)"Enable event reporting", v4, v5, v6, v7, v8, v9, v10, v31);
    uint64_t v11 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }

  if ((sub_1000A5DCC(a1) & 1) != 0 && (*(_WORD *)(qword_1008DDE00 + 40) & 2) != 0)
  {
    int v22 = sub_1000A5C70(a1, (uint64_t)sub_1000A7F1C, "AT+CHLD=?\r", 0xAuLL, 0, 7);
    if (v22)
    {
      int v3 = v22;
      sub_1001EE134((uint64_t)"SLC establish (call hold test)", v23, v24, v25, v26, v27, v28, v29, v31);
      uint64_t v30 = (os_log_s *)sub_100086554(0xFu);
      if (!os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        goto LABEL_5;
      }
LABEL_4:
      sub_10065A878();
LABEL_5:
      sub_1000A5EC0(a1, v3);
    }
  }

  else
  {
    int v12 = sub_1000A5BC8(a1);
    if (v12) {
      *((_BYTE *)v12 + 95) = 3;
    }
    if ((*(_WORD *)(qword_1008DDE00 + 40) & 1) == 0)
    {
      sub_1000A80C4(a1, 0);
      return;
    }

    int v13 = sub_1000A5D2C(a1, (uint64_t)sub_1000A8030);
    if (v13)
    {
      int v3 = v13;
      sub_1001EE134((uint64_t)"Disable remote NREC", v14, v15, v16, v17, v18, v19, v20, v31);
      uint64_t v21 = (os_log_s *)sub_100086554(0xFu);
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }

void sub_1000A7F1C(uint64_t a1, int a2)
{
  if (a2)
  {
    int v3 = a2;
    sub_1001EE134((uint64_t)"Call hold test", v4, v5, v6, v7, v8, v9, v10, v22);
    uint64_t v11 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }

  int v12 = sub_1000A5BC8(a1);
  if (v12) {
    *((_BYTE *)v12 + 95) = 3;
  }
  if ((*(_WORD *)(qword_1008DDE00 + 40) & 1) == 0)
  {
    sub_1000A80C4(a1, 0);
    return;
  }

  int v13 = sub_1000A5D2C(a1, (uint64_t)sub_1000A8030);
  if (v13)
  {
    int v3 = v13;
    sub_1001EE134((uint64_t)"Disable remote NREC", v14, v15, v16, v17, v18, v19, v20, v22);
    uint64_t v21 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      goto LABEL_5;
    }
LABEL_4:
    sub_10065A878();
LABEL_5:
    sub_1000A5EC0(a1, v3);
  }

void sub_1000A8030(uint64_t a1, int a2)
{
  if (!a2) {
    goto LABEL_6;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Disable remote NREC", v4, v5, v6, v7, v8, v9, v10, v12);
    uint64_t v11 = (os_log_s *)sub_100086554(0xFu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  if (a2 != 2701) {
    sub_1000A5EC0(a1, a2);
  }
  else {
LABEL_6:
  }
    sub_1000A80C4(a1, 0);
}

uint64_t sub_1000A80C4(unsigned int a1, int a2)
{
  __int16 v3 = a1;
  uint64_t v4 = sub_1000A5BC8(a1);
  if (!v4) {
    sub_1001EE2A0();
  }
  uint64_t v13 = 0LL;
  __int16 v9 = 0;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  uint64_t v5 = qword_1008DDE00;
  *(_BYTE *)(qword_1008DDE00 + 49) = 0;
  *((_DWORD *)v4 + 21) = a2;
  LODWORD(v11) = a2;
  uint64_t v10 = v4 + 11;
  int v7 = 1;
  __int16 v8 = v3;
  uint64_t result = (*(uint64_t (**)(int *))(v5 + 24))(&v7);
  if (!a2)
  {
    if (*((unsigned __int8 *)v4 + 65) != 255)
    {
      int v7 = 13;
      LOBYTE(v10) = *((_BYTE *)v4 + 72) != 0;
      uint64_t result = (*(uint64_t (**)(int *))(qword_1008DDE00 + 24))(&v7);
    }

    if (*((unsigned __int8 *)v4 + 64) != 255)
    {
      int v7 = 11;
      LOBYTE(v10) = *((_BYTE *)v4 + 71) != 0;
      uint64_t result = (*(uint64_t (**)(int *))(qword_1008DDE00 + 24))(&v7);
    }

    if (*((unsigned __int8 *)v4 + 66) != 255)
    {
      int v7 = 19;
      LOBYTE(v10) = *((_BYTE *)v4 + 73);
      uint64_t result = (*(uint64_t (**)(int *))(qword_1008DDE00 + 24))(&v7);
    }

    if (*((unsigned __int8 *)v4 + 69) != 255)
    {
      int v7 = 12;
      LOBYTE(v10) = *((_BYTE *)v4 + 76);
      uint64_t result = (*(uint64_t (**)(int *))(qword_1008DDE00 + 24))(&v7);
    }

    if (*((unsigned __int8 *)v4 + 67) != 255)
    {
      int v7 = 23;
      LOBYTE(v10) = *((_BYTE *)v4 + 74);
      uint64_t result = (*(uint64_t (**)(int *))(qword_1008DDE00 + 24))(&v7);
    }

    if (*((unsigned __int8 *)v4 + 68) != 255)
    {
      int v7 = 24;
      LOBYTE(v10) = *((_BYTE *)v4 + 75);
      uint64_t result = (*(uint64_t (**)(int *))(qword_1008DDE00 + 24))(&v7);
    }

    if (*((unsigned __int8 *)v4 + 70) != 255)
    {
      int v7 = 20;
      LOBYTE(v10) = *((_BYTE *)v4 + 77) != 0;
      return (*(uint64_t (**)(int *))(qword_1008DDE00 + 24))(&v7);
    }
  }

  return result;
}

void sub_1000A8298(uint64_t a1)
{
  uint64_t v2 = sub_1000A5BC8(a1);
  if (!v2) {
    sub_1001EE2A0();
  }
  if (sub_10010D064((uint64_t)(v2 + 11)))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"ForceDisconnect - assuming already disconnected", v3, v4, v5, v6, v7, v8, v9, v11);
      uint64_t v10 = (os_log_s *)sub_100086554(0xFu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    *((_WORD *)v2 + 47) = 0;
    sub_1000A5F4C(a1, 926);
  }

uint64_t sub_1000A8330(uint64_t result)
{
  int v1 = *(_WORD **)(result + 8);
  uint64_t v2 = (unsigned __int16)*v1;
  if (*v1)
  {
    *(_DWORD *)(qword_1008DDE00 + 56) = 0;
    sub_1000A8298(v2);
    return sub_1000A5F94(v2);
  }

  return result;
}

void sub_1000A8378(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000A5BC8(a1);
  if (!v7) {
    sub_1001EE2A0();
  }
  sub_1000B1838(a2);
  if ((_DWORD)a4) {
    sub_1000A7368(a1, a4);
  }
  else {
    sub_1000A8440(a1, *((unsigned __int8 *)v7 + 78));
  }
}

void sub_1000A83E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1000A5BC8(a1);
  if (v6)
  {
    if ((_DWORD)a4)
    {
LABEL_3:
      sub_1000A7368(a1, a4);
      return;
    }
  }

  else
  {
    sub_1001EE2A0();
    if ((_DWORD)a4) {
      goto LABEL_3;
    }
  }

  sub_1000A8440(a1, *((unsigned __int8 *)v6 + 78));
}

void sub_1000A8440(unsigned int a1, unsigned int a2)
{
  uint64_t v3 = (int *)sub_1000A5BC8(a1);
  uint64_t v6 = v3;
  if (!v3) {
    sub_1001EE2A0();
  }
  v5[1] = &v6;
  v5[0] = (const void *)8;
  if (!v3[1])
  {
    if (a2 > 0x21) {
      goto LABEL_10;
    }
    if (((1LL << a2) & 0x20003001ALL) != 0)
    {
      uint64_t v4 = (unsigned __int16 *)(sub_1001EDBA0(0xFu) + 4);
LABEL_7:
      sub_1001EE6E8((uint64_t)sub_1000A84F4, v5, *v4, v6 + 1);
      return;
    }

    if (a2)
    {
LABEL_10:
      uint64_t v4 = (unsigned __int16 *)(sub_1001EDBA0(0xFu) + 2);
      goto LABEL_7;
    }
  }

uint64_t sub_1000A84F4(uint64_t a1)
{
  int v1 = **(unsigned __int16 ***)(a1 + 8);
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Didn't get response from handsfree audio gateway within timeout period",  v2,  v3,  v4,  v5,  v6,  v7,  v8,  v11);
    uint64_t v9 = (os_log_s *)sub_100086554(0xFu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  *((_DWORD *)v1 + 1) = 0;
  sub_1000A7368(*v1, 112LL);
  uint64_t result = sub_1001EDBA0(0xFu);
  if (*(_BYTE *)(result + 6)) {
    return sub_1000ADE0C(*v1);
  }
  return result;
}

  ;
}

  ;
}

void sub_1000A85A0()
{
  uint64_t v0 = pthread_self();
  pthread_getname_np(v0, &byte_1008DDE48, 0x40uLL);
  if (!byte_1008DDE48)
  {
    label = dispatch_queue_get_label(0LL);
    __strlcpy_chk(&byte_1008DDE48, label, 64LL, 64LL);
    strtok(&byte_1008DDE48, "-");
  }

  do
    unsigned int v2 = __ldxr((unsigned int *)&dword_1008DDF54);
  while (__stxr(v2 + 1, (unsigned int *)&dword_1008DDF54));
  if (!v2)
  {
    uint64_t v3 = (dispatch_source_s *)qword_1008DDF58;
    dispatch_time_t v4 = dispatch_time(0LL, 10000000000LL);
    dispatch_source_set_timer(v3, v4, 0x2540BE400uLL, 0x3B9ACA00uLL);
    uint64_t v5 = (dispatch_object_s *)qword_1008DDF58;
    *(void *)dispatch_get_context((dispatch_object_t)qword_1008DDF58) = 0LL;
    dispatch_resume(v5);
  }

uint64_t sub_1000A8688()
{
  BOOL v0 = sub_100189780();
  uint64_t result = pthread_mutex_unlock(&stru_1008DDE08);
  if (v0) {
    return sub_100189794();
  }
  return result;
}

uint64_t sub_1000A86C4(pthread_cond_t *a1)
{
  int v1 = pthread_self();
  return pthread_getname_np(v1, &byte_1008DDE48, 0x40uLL);
}

uint64_t sub_1000A86F0()
{
  return 1LL;
}

uint64_t sub_1000A86F8()
{
  return byte_1008DDEC8;
}

uint64_t sub_1000A8704(int a1, void (*a2)(void), void (*a3)(uint64_t, const char *))
{
  dword_1008DDECC = a1;
  byte_1008DDEC8 = 1;
  dword_1008DDED0 = -1;
  uint64_t v5 = sub_1000A89EC();
  if ((_DWORD)v5)
  {
    uint64_t v10 = v5;
    uint64_t v11 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(v18.__sig) = 136446210;
      *(uint64_t *)((char *)&v18.__sig + 4) = (uint64_t)"OI_StackWrapperToken_Init failed\n";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v18, 0xCu);
    }

    sub_1000AFE20(v10);
    goto LABEL_16;
  }

  if (pthread_mutex_init(&stru_1008DDE88, 0LL))
  {
LABEL_16:
    __int128 v12 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(v18.__sig) = 136446210;
      *(uint64_t *)((char *)&v18.__sig + 4) = (uint64_t)"OI_Transport_TokenInit failed\n";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v18, 0xCu);
    }

    sub_1000AFE20(108LL);
LABEL_19:
    sub_10065A8E0();
  }

  sub_1000A85A0();
  pthread_cond_init(&stru_1008DDED8, 0LL);
  pthread_mutex_init(&stru_1008DDF08, 0LL);
  memset(&v18, 0, sizeof(v18));
  sched_param v15 = 0LL;
  pthread_attr_init(&v18);
  pthread_attr_getschedparam(&v18, &v15);
  v15.sched_priority = 60;
  if (pthread_attr_setschedparam(&v18, &v15)) {
    perror("Send thread creation: Failed pthread_attr_setschedparam");
  }
  sub_1000A8B88(0);
  uint64_t v6 = sub_100108A7C(0LL, (uint64_t (*)(void))sub_1000A8B88, a2, a3);
  if ((_DWORD)v6)
  {
    uint64_t v7 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v17 = "Stack_Init failed\n";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%{public}s", buf, 0xCu);
    }

    sub_1000A8688();
    return v6;
  }

  uint64_t v8 = sub_1000FC39C(sub_1000A8BCC);
  if (!(_DWORD)v8)
  {
    sub_1000A8688();
    sub_1000A8BF0(&byte_1008DDF50, 0);
    return v6;
  }

  uint64_t v13 = v8;
  uint64_t v14 = (os_log_s *)sub_100086554(0x5Cu);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 136446210;
    uint64_t v17 = "OI_BT_Device_Config failed\n";
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "%{public}s", buf, 0xCu);
  }

  sub_1000AFE20(v13);
  return sub_1000A89EC();
}

uint64_t sub_1000A89EC()
{
  if (pthread_mutex_init(&stru_1008DDE08, 0LL)) {
    return 108LL;
  }
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(17LL, 0LL);
  dispatch_source_t v2 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0LL, 0LL, global_queue);
  qword_1008DDF58 = (uint64_t)v2;
  uint64_t v3 = malloc(8uLL);
  dispatch_set_context(v2, v3);
  dispatch_source_set_event_handler_f((dispatch_source_t)qword_1008DDF58, (dispatch_function_t)sub_1000A8ED4);
  uint64_t result = 0LL;
  dword_1008DDF54 = 0;
  return result;
}

uint64_t sub_1000A8A80()
{
  if (byte_1008DDEC8)
  {
    v3.tv_sec = 0LL;
    v3.tv_nsec = 0LL;
    do
    {
      pthread_mutex_lock(&stru_1008DDF08);
      unsigned int v0 = dword_1008DDED0;
      if (dword_1008DDED0) {
        BOOL v1 = byte_1008DDF60 == 0;
      }
      else {
        BOOL v1 = 0;
      }
      if (v1)
      {
        do
        {
          v3.tv_sec = v0 / 0x3E8uLL;
          v3.tv_nsec = 1000000 * (v0 % 0x3E8);
          if (pthread_cond_timedwait_relative_np(&stru_1008DDED8, &stru_1008DDF08, &v3) == 60) {
            break;
          }
          unsigned int v0 = dword_1008DDED0;
          if (!dword_1008DDED0) {
            break;
          }
        }

        while (!byte_1008DDF60);
      }

      dword_1008DDED0 = -1;
      pthread_mutex_unlock(&stru_1008DDF08);
      sub_1000A85A0();
      sub_1001EED90();
      sub_1000A8688();
    }

    while (byte_1008DDEC8);
  }

  return 0LL;
}

uint64_t sub_1000A8B88(int a1)
{
  dword_1008DDED0 = a1;
  pthread_cond_signal(&stru_1008DDED8);
  return pthread_mutex_unlock(&stru_1008DDF08);
}

uint64_t sub_1000A8BCC(uint64_t result)
{
  if ((_DWORD)result)
  {
    sub_1000AFE20(result);
    return sub_1000A8BF0();
  }

  else
  {
    byte_1008DDF50 = 1;
  }

  return result;
}

uint64_t sub_1000A8BF0(_BYTE *a1, int a2)
{
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  sub_1000B0400((uint64_t)&v9);
  LODWORD(v9) = v9 + a2;
  if (!*a1)
  {
    do
    {
      else {
        int v4 = dword_1008DDECC;
      }
      sub_1000B0964(v4);
      if (a2)
      {
        sub_1000B0400((uint64_t)&v8);
        BOOL v5 = (int)sub_1001F42B8((uint64_t)&v8, (uint64_t)&v9) >= 0;
      }

      else
      {
        BOOL v5 = 0;
      }

      if (*a1) {
        BOOL v6 = 0;
      }
      else {
        BOOL v6 = !v5;
      }
    }

    while (v6);
    if (!*a1) {
      return 150LL;
    }
  }

  uint64_t result = 0LL;
  *a1 = 0;
  return result;
}

void sub_1000A8CA0()
{
  byte_1008DDEC8 = 0;
  sub_1000A8E24(1);
  sub_1000A8B88(0);
  pthread_join((pthread_t)qword_1008DDF48, 0LL);
  byte_1008DDF60 = 0;
  sub_1001EE0E4("Terminating stack...\n");
  sub_1000A85A0();
  int v0 = sub_1001091A0();
  dispatch_set_finalizer_f((dispatch_object_t)qword_1008DDF58, (dispatch_function_t)&_free);
  dispatch_source_cancel((dispatch_source_t)qword_1008DDF58);
  dispatch_release((dispatch_object_t)qword_1008DDF58);
  sub_1000A8688();
  if (v0) {
    sub_1001EE0E4("OI_BT_Stack_Terminate() failed: %d!\n", v0);
  }
  int v1 = pthread_mutex_destroy(&stru_1008DDE08);
  if (!v1) {
    goto LABEL_6;
  }
  int v2 = v1;
  *(void *)uint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  int v9 = 0;
  timespec v3 = pthread_self();
  pthread_getname_np(v3, v7, 0x14uLL);
  if (*(void *)v7 != 0x706F6F4C746F44LL)
  {
    int v4 = v2;
    goto LABEL_10;
  }

  usleep(0x7A120u);
  int v4 = pthread_mutex_destroy(&stru_1008DDE08);
  if (v4)
  {
LABEL_10:
    strerror(v4);
    sub_1001EE0E4("Destroying stackAccessMutex failed with error: %s\n");
    goto LABEL_11;
  }

void sub_1000A8E24(int a1)
{
  char v1 = a1;
  if (a1)
  {
    sub_1001EE0E4("Stack termination failsafe : lock idler");
    pthread_mutex_lock(&stru_1008DDF08);
    byte_1008DDF60 = v1;
    pthread_cond_signal(&stru_1008DDED8);
    pthread_mutex_unlock(&stru_1008DDF08);
    sub_1001EE0E4("Stack termination failsafe set");
  }

  else
  {
    byte_1008DDF60 = 0;
  }

uint64_t sub_1000A8E98(_BYTE *a1)
{
  *a1 = 1;
  return 0LL;
}

uint64_t sub_1000A8EA8()
{
  return sub_1000FC310();
}

uint64_t (*sub_1000A8EBC(int a1))(void)
{
  return sub_1000FC338();
}

uint64_t sub_1000A8ED4(int *a1)
{
  uint64_t result = pthread_mutex_trylock(&stru_1008DDE08);
  int v3 = *a1;
  if ((_DWORD)result)
  {
    if (v3 == dword_1008DDF54)
    {
      if (*((_BYTE *)a1 + 4)) {
        sub_10065A8FC((uint64_t)v4);
      }
      *((_BYTE *)a1 + 4) = 1;
    }

    else
    {
      *a1 = dword_1008DDF54;
      *((_BYTE *)a1 + 4) = 0;
    }
  }

  else
  {
    if (v3 == dword_1008DDF54)
    {
      dispatch_suspend((dispatch_object_t)qword_1008DDF58);
      dword_1008DDF54 = 0;
    }

    else
    {
      *a1 = dword_1008DDF54;
      *((_BYTE *)a1 + 4) = 0;
    }

    return pthread_mutex_unlock(&stru_1008DDE08);
  }

  return result;
}

uint64_t sub_1000A8FC4(char **a1, int a2)
{
  LODWORD(v2) = a2;
  sub_1000A85A0();
  if ((int)v2 <= 0)
  {
    sub_1000A8688();
  }

  else
  {
    uint64_t v2 = v2;
    uint64_t v4 = v2;
    int v5 = a1;
    do
    {
      uint64_t v6 = (uint64_t)*v5++;
      uint64_t v9 = 0LL;
      uint64_t v10 = 0LL;
      uint64_t v9 = mach_continuous_time();
      LOBYTE(v10) = 0;
      sub_10012F73C( *(unsigned __int8 *)(v6 + 8),  *(unsigned __int8 **)(v6 + 16),  *(unsigned __int16 *)(v6 + 24),  (uint64_t)&v9);
      --v4;
    }

    while (v4);
    sub_1000A8688();
    do
    {
      uint64_t v7 = *a1++;
      sub_1000A9064(v7);
      --v2;
    }

    while (v2);
  }

  return 0LL;
}

void sub_1000A9064(char *a1)
{
  *(void *)a1 = 0LL;
  a1[8] = 0;
  *(_DWORD *)(a1 + 10) = 0;
  *((_WORD *)a1 + 12) = 0;
  uint64_t v2 = qword_1008DE418;
  int v3 = (pthread_mutex_t *)(qword_1008DE418 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(qword_1008DE418 + 16));
  uint64_t v4 = *(int *)(v2 + 12);
  if ((_DWORD)v4 == *(_DWORD *)(v2 + 8))
  {
    pthread_mutex_unlock(v3);
  }

  else
  {
    *(_DWORD *)(v2 + 12) = v4 + 1;
    *(void *)(*(void *)v2 + 8 * v4) = a1;
    pthread_mutex_unlock(v3);
    if ((v4 & 0x80000000) == 0) {
      return;
    }
  }

  free(*((void **)a1 + 2));
  free(a1);
}

uint64_t sub_1000A9100(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result = 3758097090LL;
  if (a1 && a2 && (a3 - 4) >= 0xFFFFFFFE)
  {
    uint64_t v6 = a3 == 3 ? 4LL : 2LL;
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 176LL))(a2, v6);
    if (!(_DWORD)result)
    {
      unsigned __int8 v15 = 0;
      *(_BYTE *)(a1 + 97) = v6;
      uint64_t result = (*(uint64_t (**)(uint64_t, unsigned __int8 *))(*(void *)a2 + 152LL))(a2, &v15);
      if (!(_DWORD)result)
      {
        if (v15 == 2)
        {
          for (unsigned __int8 i = 1; v15 >= i; ++i)
          {
            char v14 = 0;
            __int16 v13 = 0;
            __int16 v12 = 0;
            char v11 = 0;
            uint64_t result = (*(uint64_t (**)(uint64_t, void, char *, char *, __int16 *, __int16 *, char *))(*(void *)a2 + 208LL))( a2,  i,  &v14,  (char *)&v13 + 1,  &v13,  &v12,  &v11);
            if ((_DWORD)result) {
              break;
            }
            char v8 = v14;
            uint64_t v9 = a1 + 130;
            if (v14 != 1)
            {
              uint64_t v9 = a1 + 138;
              if (v14) {
                return 0xFFFFFFFFLL;
              }
            }

            uint64_t result = 0LL;
            *(_BYTE *)uint64_t v9 = *(_BYTE *)(a1 + 25);
            *(_BYTE *)(v9 + 1) = *(_BYTE *)(a1 + 97);
            *(_BYTE *)(v9 + 3) = v8;
            *(_WORD *)(v9 + 4) = v12;
            char v10 = HIBYTE(v13) & 0xF;
            *(_BYTE *)(v9 + 2) = 1;
            *(_BYTE *)(v9 + 7) = i;
            *(_BYTE *)(v9 + 6) = v10 | (v8 << 7);
          }
        }

        else
        {
          return 0xFFFFFFFFLL;
        }
      }
    }
  }

  return result;
}

uint64_t sub_1000A9268(uint64_t a1, int a2)
{
  if (a2)
  {
    for (uint64_t i = 0LL; i != 32; i += 8LL)
    {
      uint64_t v4 = *(void **)(a1 + i + 176);
      if (v4) {
        sub_1000A93AC(v4);
      }
      int v5 = *(void **)(a1 + i + 208);
      if (v5) {
        sub_1000A93AC(v5);
      }
    }
  }

  int v17 = 0;
  uint64_t result = (*(uint64_t (**)(void, int *))(**(void **)(a1 + 48) + 432LL))(*(void *)(a1 + 48), &v17);
  if (!(_DWORD)result)
  {
    uint64_t v7 = 0LL;
    int v8 = *(unsigned __int16 *)(a1 + 134);
    while (1)
    {
      uint64_t v9 = (char *)sub_1000A93E4(a1, 3, 0, (unsigned __int16)(15 * v8));
      if (!v9) {
        return 0xFFFFFFFFLL;
      }
      char v10 = v9;
      char v11 = (char *)sub_1000A93E4(a1, 3, 0, (unsigned __int16)(15 * v8));
      if (!v11)
      {
        __int16 v12 = v10;
        goto LABEL_18;
      }

      __int16 v12 = v11;
      __int16 v13 = sub_1000A94D8(a1, v8, (uint64_t)v10);
      if (!v13 || (v14 = v13, (unsigned __int8 v15 = sub_1000A94D8(a1, v8, (uint64_t)v12)) == 0LL))
      {
        sub_1000A9064(v10);
LABEL_18:
        sub_1000A9064(v12);
        return 0xFFFFFFFFLL;
      }

      *((void *)v14 + 17) = 0LL;
      uint64_t v16 = a1 + v7;
      *(void *)(v16 + 176) = v14;
      *((void *)v15 + 17) = 0LL;
      *(void *)(v16 + 208) = v15;
      v7 += 8LL;
      if (v7 == 32) {
        return 0LL;
      }
    }
  }

  return result;
}

void sub_1000A93AC(void *a1)
{
  uint64_t v2 = (void **)a1[18];
  if (v2)
  {
    free(v2[2]);
    free(v2);
  }

  free(a1);
}

void *sub_1000A93E4(uint64_t a1, char a2, __int16 a3, unsigned int a4)
{
  uint64_t v8 = qword_1008DE418;
  uint64_t v9 = (pthread_mutex_t *)(qword_1008DE418 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(qword_1008DE418 + 16));
  int v10 = *(_DWORD *)(v8 + 12);
  if (v10 <= 0)
  {
    pthread_mutex_unlock(v9);
  }

  else
  {
    unsigned int v11 = v10 - 1;
    __int16 v12 = *(void **)(*(void *)v8 + 8LL * v11);
    *(void *)(*(void *)v8 + 8LL * v11) = 0LL;
    *(_DWORD *)(v8 + 12) = v11;
    pthread_mutex_unlock(v9);
    if (v12)
    {
      unsigned int v13 = *((unsigned __int16 *)v12 + 7);
      goto LABEL_7;
    }
  }

  char v14 = malloc(0x20uLL);
  __int16 v12 = v14;
  if (!v14) {
    return v12;
  }
  unsigned int v13 = 4096;
  *((_WORD *)v14 + 7) = 4096;
  unsigned __int8 v15 = malloc(0x1000uLL);
  v12[2] = v15;
  if (!v15)
  {
    free(v12);
    return 0LL;
  }

LABEL_7:
  if (v13 < a4)
  {
    sub_1000A9064((char *)v12);
    return 0LL;
  }

  void *v12 = a1;
  *((_BYTE *)v12 + 8) = a2;
  *((_WORD *)v12 + 5) = a3;
  *((_WORD *)v12 + 6) = a4;
  *((_WORD *)v12 + 12) = 0;
  return v12;
}

    int v5 = (char *)v4 + 1;
    uint64_t v6 = (_WORD)a1 - (_WORD)v4 + v2 - 1;
LABEL_8:
    uint64_t v4 = memchr(v5, 3, v6);
    if (!v4) {
      return -1;
    }
  }

  if (*v4 != 0xFD6F1617FD6F0303LL) {
    goto LABEL_7;
  }
  return (__int16)(8 - ((_WORD)a1 - (_WORD)v4));
}

        sub_1000E52D0(a1, v5, v75);
        return;
      }

      uint64_t v32 = ((uint64_t (*)(unsigned int, uint64_t, uint64_t, unsigned int))sub_1000E1C50)( a1,  (uint64_t)&v76,  v5,  v14);
LABEL_34:
      if (v32)
      {
        if (sub_1000A86F0())
        {
          unsigned int v48 = sub_1001EDE54((uint64_t)&v75, 1LL, v42, v43, v44, v45, v46, v47);
          sub_1001EE134((uint64_t)"Error on receipt (%s) - %d", v49, v50, v51, v52, v53, v54, v55, v48);
          uint64_t v56 = (os_log_s *)sub_100086554(3u);
          if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }
      }

      return;
  }

    if (++v1 == dword_1008F29B4) {
      return 0LL;
    }
  }

  while (1)
  {
    uint64_t v6 = *v5;
    if (*v5) {
      return v6;
    }
    v5 += 2;
    if (!--v4) {
      goto LABEL_7;
    }
  }

  if (!sub_1000A86F0()
    || (sub_1001EE134((uint64_t)"Missing command tracker %:", v8, v9, v10, v11, v12, v13, v14, a2),
        unsigned __int8 v15 = (os_log_s *)sub_100086554(0x2Fu),
        !os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)))
  {
    if (v5) {
      return;
    }
LABEL_10:
    sub_10010CAA4((uint64_t)a3, 0x13u);
    return;
  }

  sub_10065C6B8();
  if (!v5) {
    goto LABEL_10;
  }
}

      int v5 = sub_1001B9B0C((uint64_t)a2);
      uint64_t v6 = sub_1001A2280((uint64_t)a2, !v5);
      if (!v6)
      {
        sub_1001EE134((uint64_t)"ATT failed to create session", v24, v25, v26, v27, v28, v29, v30, v32);
        uint64_t v31 = (os_log_s *)sub_100086554(0x44u);
        if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        goto LABEL_21;
      }

      if (qword_1008E8820) {
        qword_1008E8820(a2, v6, 0LL);
      }
    }
  }

  if (v8 == 1 && !sub_10018550C(v7, 32))
  {
    uint64_t v56 = sub_100185414();
    sub_1001EE134( (uint64_t)"Peripheral connection should be in SMP_STATE_PAIRING_MPUBLICK to send this command, current state is %s.",  v57,  v58,  v59,  v60,  v61,  v62,  v63,  (uint64_t)v56);
    uint64_t v64 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v64, OS_LOG_TYPE_ERROR)) {
      goto LABEL_63;
    }
    goto LABEL_39;
  }

  uint64_t v9 = *a2;
  int v10 = a2[1];
  unsigned int v11 = a2[3];
  *(_OWORD *)(v7 + 344) = a2[2];
  *(_OWORD *)(v7 + 360) = v11;
  *(_OWORD *)(v7 + 312) = v9;
  *(_OWORD *)(v7 + 328) = v10;
  if (*(_BYTE *)(*(void *)v7 + 70LL) == 1 && *(_BYTE *)(v7 + 16) != 5)
  {
    uint64_t v74 = sub_1001120DC((_OWORD *)(v7 + 152), (_OWORD *)(v7 + 216));
    if ((_DWORD)v74)
    {
      uint64_t v75 = v74;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"LE_ReadLocalPublicKey failed %!", v76, v77, v78, v79, v80, v81, v82, v75);
        uint64_t v83 = (os_log_s *)sub_100086554(0x43u);
        if (os_log_type_enabled(v83, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      goto LABEL_63;
    }

    unsigned int v94 = *(unsigned __int8 *)(v7 + 16);
    if (v94 != 1 && v94 != 6)
    {
      __buf[0] = 12;
      uint64_t v95 = *(_OWORD *)(v7 + 168);
      *(_OWORD *)&__buf[1] = *(_OWORD *)(v7 + 152);
      BOOL v130 = v95;
      uint64_t v96 = *(_OWORD *)(v7 + 200);
      uint64_t v131 = *(_OWORD *)(v7 + 184);
      int v132 = v96;
      uint64_t v97 = sub_100184F74(*(__int128 **)v7, __buf, 0x41uLL, 1);
      if ((_DWORD)v97)
      {
        uint64_t v98 = v97;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"smpSendPairingPublicKey failed %!", v99, v100, v101, v102, v103, v104, v105, v98);
          uint64_t v106 = (os_log_s *)sub_100086554(0x43u);
          if (os_log_type_enabled(v106, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }

        goto LABEL_63;
      }
    }
  }

  if (!memcmp((const void *)(v7 + 312), __s2, 0x40uLL) || !memcmp((const void *)(v7 + 216), __s2, 0x60uLL))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Invalid all zeros public key or all zeros private key",  v46,  v47,  v48,  v49,  v50,  v51,  v52,  v127);
      uint64_t v53 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  else
  {
    __int16 v12 = sub_100112260((const void *)(v7 + 312), 64LL, (const void *)(v7 + 216), 0x60u, (void *)(v7 + 376));
    if ((_DWORD)v12)
    {
      unsigned int v13 = v12;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"DHKey generation failed %!", v14, v15, v16, v17, v18, v19, v20, v13);
        uint64_t v21 = (os_log_s *)sub_100086554(0x43u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
LABEL_62:
        }
          sub_100657F74();
      }

      goto LABEL_63;
    }
  }

  uint64_t v54 = *(unsigned __int8 *)(v7 + 16);
  switch(*(_BYTE *)(v7 + 16))
  {
    case 1:
    case 6:
      if (v54 != 6 && !*(_BYTE *)(v7 + 490)) {
        return;
      }
      uint64_t v84 = sub_1001CC750(v7);
      if (!(_DWORD)v84) {
        return;
      }
      unsigned __int16 v85 = v84;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"recvdSMPDeferredJustWorksNumComparPublicKey failed %!",  v86,  v87,  v88,  v89,  v90,  v91,  v92,  v85);
        uint64_t v93 = (os_log_s *)sub_100086554(0x43u);
        if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR)) {
          goto LABEL_62;
        }
      }

      goto LABEL_63;
    case 2:
    case 3:
    case 4:
      *(_DWORD *)____int128 buf = 0;
      uint64_t v55 = *(__int128 **)v7;
      if (*(_BYTE *)(*(void *)v7 + 70LL))
      {
        if (*(_BYTE *)(*(void *)v7 + 70LL) != 1 || v54 != 3) {
          goto LABEL_33;
        }
      }

      else if (v54 != 2)
      {
LABEL_33:
        *(_DWORD *)(v7 + 52) = 2;
        goto LABEL_67;
      }

      arc4random_buf(__buf, 4uLL);
      unsigned int v125 = *(_DWORD *)__buf % 0xF423Fu + 1;
      *(_DWORD *)____int128 buf = v125;
      *(_WORD *)(v7 + 33) = v125;
      *(_BYTE *)(v7 + 35) = BYTE2(v125);
      *(_BYTE *)(v7 + 36) = 0;
      *(_DWORD *)(v7 + 52) = 1;
      uint64_t v55 = *(__int128 **)v7;
LABEL_67:
      if (*((_BYTE *)v55 + 70)) {
        unint64_t v126 = 34;
      }
      else {
        unint64_t v126 = 35;
      }
      sub_100185420(v7, v126);
      sub_1001D47A4(*(void *)v7);
      return;
    case 5:
      int v115 = sub_1001D41F8(v7);
      if (!(_DWORD)v115) {
        return;
      }
      uint64_t v116 = v115;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"recvdSMPDeferredOOBPublicKey failed %!", v117, v118, v119, v120, v121, v122, v123, v116);
        uint64_t v124 = (os_log_s *)sub_100086554(0x43u);
        if (os_log_type_enabled(v124, OS_LOG_TYPE_ERROR)) {
          goto LABEL_62;
        }
      }

      goto LABEL_63;
    default:
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Don't know what to do now", v107, v108, v109, v110, v111, v112, v113, v127);
        __int16 v114 = (os_log_s *)sub_100086554(0x43u);
        if (os_log_type_enabled(v114, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      goto LABEL_63;
  }

  CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 24), @"Name");
LABEL_8:
  Value = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 24), @"Part Identifier");
  int v17 = 0LL;
  unsigned __int8 v15 = 0u;
  *(_OWORD *)__p = 0u;
  char v14 = 0u;
  sub_10002418C(__p, "");
  __int16 v12 = 0LL;
  unsigned int v13 = 0LL;
  if (sub_1003D55EC(*(void *)(a1 + 8), (_DWORD *)&v13 + 1, &v13, (_DWORD *)&v12 + 1, &v12))
  {
    valuePtr = BYTE4(v13);
    int v10 = v13;
    int v5 = CFNumberCreate(kCFAllocatorDefault, kCFNumberSInt8Type, &valuePtr);
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 24), @"Vendor ID Source", v5);
    CFRelease(v5);
    uint64_t v6 = CFNumberCreate(kCFAllocatorDefault, kCFNumberSInt16Type, &v10);
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 24), @"Vendor ID", v6);
    CFRelease(v6);
    uint64_t v7 = CFNumberCreate(kCFAllocatorDefault, kCFNumberSInt32Type, (char *)&v12 + 4);
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 24), @"Product ID", v7);
    CFRelease(v7);
  }

  else
  {
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 24), @"Vendor ID Source");
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 24), @"Vendor ID");
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 24), @"Product ID");
  }

  uint64_t v8 = sub_1003D0268(*(void *)(a1 + 8));
  if (v8 != 16)
  {
    if (v8 == 19)
    {
      uint64_t v9 = @"Speaker";
      goto LABEL_16;
    }

    if (v8 != 20)
    {
      CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 24), @"Accessory Category");
      goto LABEL_18;
    }
  }

  uint64_t v9 = @"Headphone";
LABEL_16:
  CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 24), @"Accessory Category", v9);
LABEL_18:
  if (Value && CFEqual(Value, @"Case")) {
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 24), @"Accessory Category", @"Audio Battery Case");
  }
  if (SHIBYTE(v17) < 0) {
    operator delete(__p[0]);
  }
}
}

    __int16 v12 = @"yy'/'MM'/'dd', 'HH':'mm':'ss";
    goto LABEL_9;
  }

  if ((a3 & 1) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  __int16 v12 = @"yy'/'MM'/'dd', 'hh':'mm':'ss";
LABEL_9:
  CFDateFormatterSetFormat(v8, v12);
  StringWithAbsoluteTime = (__CFString *)CFDateFormatterCreateStringWithAbsoluteTime(0LL, v8, Current);
  if (StringWithAbsoluteTime)
  {
    char v14 = StringWithAbsoluteTime;
    std::string::assign(a2, (const std::string::value_type *)-[__CFString UTF8String](v14, "UTF8String"));
    CFRelease(v14);
    unsigned __int8 v15 = 0LL;
  }

  else
  {
    unsigned __int8 v15 = 1LL;
  }

  CFRelease(v8);
  objc_autoreleasePoolPop(v5);
  return v15;
}

      if (__p)
      {
        uint64_t v61 = (char *)__p;
        operator delete(__p);
      }
    }

    int v10 = *(void **)(a1 + 384);
    if (v10 != (void *)(a1 + 392))
    {
      do
      {
        __p = 0LL;
        else {
          unsigned int v11 = 0;
        }
        if (v11)
        {
          if (*(_BYTE *)(a1 + 32))
          {
            v59.__r_.__value_.__s.__data_[0] = 0;
            sub_100242CA4(&v59);
            char v14 = (void (*)(uint64_t, uint64_t, void))v10[6];
            unsigned __int8 v15 = *((unsigned int *)v10 + 8);
            if (*((_BYTE *)v10 + 44)) {
              v14(v15, 242LL, 0LL);
            }
            else {
              ((void (*)(uint64_t, uint64_t, void, void))v14)(v15, 242LL, 0LL, 0LL);
            }
            sub_100242CD8(&v59);
          }

          uint64_t v16 = (void *)v10[1];
          int v17 = v10;
          if (v16)
          {
            do
            {
              unsigned int v13 = v16;
              uint64_t v16 = (void *)*v16;
            }

            while (v16);
          }

          else
          {
            do
            {
              unsigned int v13 = (void *)v17[2];
              unsigned int v11 = *v13 == (void)v17;
              int v17 = v13;
            }

            while (!v11);
          }

          sub_1001FDBCC((uint64_t **)(a1 + 384), v10);
          operator delete(v10);
        }

        else
        {
          __int16 v12 = (void *)v10[1];
          if (v12)
          {
            do
            {
              unsigned int v13 = v12;
              __int16 v12 = (void *)*v12;
            }

            while (v12);
          }

          else
          {
            do
            {
              unsigned int v13 = (void *)v10[2];
              unsigned int v11 = *v13 == (void)v10;
              int v10 = v13;
            }

            while (!v11);
          }
        }

        int v10 = v13;
      }

      while (v13 != (void *)(a1 + 392));
    }

    pthread_attr_t v18 = *(void **)(a1 + 512);
    if (v18 != (void *)(a1 + 520))
    {
      do
      {
        uint64_t v19 = v18[5];
        if (v19 != v18[6])
        {
          uint64_t v20 = *(_DWORD *)v19;
          uint64_t v21 = *(unsigned int **)(v19 + 16);
          if (v21) {
            sub_1002CD1E0(*(void *)(v19 + 16));
          }
          __p = 0LL;
          else {
            uint64_t v22 = 0;
          }
          if (v22)
          {
            sub_10038D4D8((uint64_t **)(a1 + 512), (uint64_t)v18);
            if (v21) {
              sub_1002CD254(v21);
            }
            break;
          }

          if (v21) {
            sub_1002CD254(v21);
          }
        }

        uint64_t v23 = (void *)v18[1];
        if (v23)
        {
          do
          {
            uint64_t v24 = v23;
            uint64_t v23 = (void *)*v23;
          }

          while (v23);
        }

        else
        {
          do
          {
            uint64_t v24 = (void *)v18[2];
            unsigned int v11 = *v24 == (void)v18;
            pthread_attr_t v18 = v24;
          }

          while (!v11);
        }

        pthread_attr_t v18 = v24;
      }

      while (v24 != (void *)(a1 + 520));
    }

    sub_1003850D0(a1, 0LL, **(unsigned __int16 **)(v3 + 8), *(unsigned __int16 *)(*(void *)(v3 + 8) + 24LL));
    if (*(_BYTE *)(a1 + 32))
    {
      LOBYTE(__p) = 0;
      sub_100242CA4(&__p);
      sub_1001C4E78(*(unsigned __int16 **)(v3 + 8));
      sub_100242CD8(&__p);
    }

    __p = 0LL;
    uint64_t v61 = 0LL;
    uint64_t v57 = v3;
    uint64_t v62 = 0LL;
    sub_100240540(&__p, v3 + 136);
    uint64_t v25 = (char *)__p;
    if (__p != v61)
    {
      uint64_t v26 = (uint64_t *)(a1 + 416);
      do
      {
        uint64_t v27 = *(void *)v25;
        memset(&v59, 0, sizeof(v59));
        sub_100240540(&v59, v27 + 104);
        uint64_t v28 = (char *)v59.__r_.__value_.__r.__words[0];
        if (v59.__r_.__value_.__r.__words[0] != v59.__r_.__value_.__l.__size_)
        {
          do
          {
            uint64_t v29 = *(void *)(*(void *)v28 + 8LL);
            uint64_t v30 = *(_DWORD *)(v29 + 20);
            *(_OWORD *)__int128 buf = *(_OWORD *)(v29 + 4);
            uint64_t v68 = v30;
            sub_100634334(&v66, (__n128 *)buf);
            uint64_t v64 = xmmword_1006BD914;
            uint64_t v65 = 0;
            if (sub_1001BEC7C((unsigned __int8 *)&v66, (unsigned __int8 *)&v64))
            {
              uint64_t v31 = (void *)*v26;
              if (*v26)
              {
                uint64_t v32 = *(void *)v28;
                uint64_t v33 = (uint64_t *)(a1 + 416);
                do
                {
                  uint64_t v34 = v31[4];
                  uint64_t v35 = v34 >= v32;
                  if (v34 >= v32) {
                    int v36 = v31;
                  }
                  else {
                    int v36 = v31 + 1;
                  }
                  if (v35) {
                    uint64_t v33 = v31;
                  }
                  uint64_t v31 = (void *)*v36;
                }

                while (*v36);
                if (v33 != v26 && v32 >= v33[4])
                {
                  sub_10038D520((uint64_t **)(a1 + 408), v33);
                  uint64_t v37 = *(void *)(a1 + 464);
                  uint64_t v38 = *(void *)(a1 + 440);
                  uint64_t v39 = *(void *)(a1 + 448);
                  uint64_t v40 = (void *)(v38 + 8 * (v37 >> 8));
                  if (v39 == v38) {
                    uint64_t v41 = 0LL;
                  }
                  else {
                    uint64_t v41 = *v40 + 16LL * v37;
                  }
                  uint64_t v42 = v38 + 8 * (v37 >> 8);
LABEL_80:
                  uint64_t v43 = v41;
                  while (1)
                  {
                    uint64_t v44 = v39 == v38
                        ? 0LL
                        : *(void *)(v38 + (((*(void *)(a1 + 472) + v37) >> 5) & 0x7FFFFFFFFFFFFF8LL))
                        + 16LL * (*(_BYTE *)(a1 + 472) + v37);
                    if (v43 == v44) {
                      break;
                    }
                    uint64_t v45 = *(void *)(v43 + 8);
                    if (v32 == *(void *)(v45 + 16))
                    {
                      if (v39 == v38) {
                        uint64_t v47 = 0LL;
                      }
                      else {
                        uint64_t v47 = *v40 + 16LL * v37;
                      }
                      if (v43 != v47)
                      {
                        *(void *)(v45 + 24) = &off_10087FAA8;
                        unsigned int v48 = *(unsigned int **)(v45 + 32);
                        if (v48) {
                          sub_1002CD254(v48);
                        }

                        operator delete((void *)v45);
                        sub_100385D74((int64x2_t *)(a1 + 432), (char *)v42, v41);
                      }

                      break;
                    }

                    v43 += 16LL;
                    v41 += 16LL;
                    if (*(void *)v42 + 4096LL == v41)
                    {
                      uint64_t v46 = *(void *)(v42 + 8);
                      v42 += 8LL;
                      uint64_t v41 = v46;
                      goto LABEL_80;
                    }
                  }
                }
              }
            }

            v28 += 8;
          }

          while (v28 != (char *)v59.__r_.__value_.__l.__size_);
          uint64_t v28 = (char *)v59.__r_.__value_.__r.__words[0];
        }

        if (v28)
        {
          v59.__r_.__value_.__l.__size_ = (std::string::size_type)v28;
          operator delete(v28);
        }

        v25 += 8;
      }

      while (v25 != v61);
    }

    uint64_t v50 = *(char **)(a1 + 360);
    uint64_t v49 = *(char **)(a1 + 368);
    if (v50 != v49)
    {
      uint64_t v51 = 0LL;
      while (*(_DWORD *)(*(void *)&v50[v51] + 16LL) != *a2)
      {
        v51 += 8LL;
        if (&v50[v51] == v49) {
          goto LABEL_108;
        }
      }

      uint64_t v52 = &v50[v51];
      uint64_t v53 = &v50[v51 + 8];
      uint64_t v54 = v49 - v53;
      if (v49 != v53) {
        memmove(&v50[v51], v53, v49 - v53);
      }
      *(void *)(a1 + 368) = &v52[v54];
    }

      uint64_t v8 = -[BTQueuedMessage initWithMsg:arguments:]( objc_alloc(&OBJC_CLASS___BTQueuedMessage),  "initWithMsg:arguments:",  a2,  v5);
      sub_10038F39C((uint64_t)a1, v8);
      sub_10038F728(a1);

LABEL_17:
      unsigned int v13 = 1LL;
      goto LABEL_18;
    }
  }

  else if (v7)
  {
    if (!sub_10038F33C((uint64_t)a1))
    {
      sub_10043F394(v7 - 144, a2, v5);
      goto LABEL_17;
    }

    goto LABEL_7;
  }

  uint64_t v9 = -[BTQueuedMessage initWithMsg:arguments:]( objc_alloc(&OBJC_CLASS___BTQueuedMessage),  "initWithMsg:arguments:",  a2,  v5);
  sub_10038F39C((uint64_t)a1, v9);
  int v10 = sub_10038F33C((uint64_t)a1);
  if (v10)
  {
    unsigned int v11 = (os_log_s *)qword_1008F7628;
    if (os_log_type_enabled((os_log_t)qword_1008F7628, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v12 = a1[11];
      unsigned __int8 v15 = 134218242;
      uint64_t v16 = v10;
      int v17 = 2114;
      pthread_attr_t v18 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "(CBSR) Queued message available: %lu. Try and ressurrectApp: %{public}@",  (uint8_t *)&v15,  0x16u);
    }

    if (qword_1008D67C8 != -1) {
      dispatch_once(&qword_1008D67C8, &stru_100894590);
    }
    sub_10028BF44((uint64_t)off_1008D67C0, (void *)a1[11]);
  }

  unsigned int v13 = 0LL;
LABEL_18:

  return v13;
}

  sub_1003A5A68(a1);
  *(_DWORD *)(a1 + 196) = 3;
  uint64_t v21 = calloc(3uLL, 0x10uLL);
  *(void *)(a1 + 184) = v21;
  *uint64_t v21 = 1;
  *(_BYTE *)(*(void *)(a1 + 184) + 16LL) = 7;
  *(_BYTE *)(*(void *)(a1 + 184) + 17LL) = 0;
  *(_BYTE *)(*(void *)(a1 + 184) + 18LL) = *(_DWORD *)(a1 + 176);
  *(_BYTE *)(*(void *)(a1 + 184) + 19LL) = *(_BYTE *)(*(void *)(a7 + 16) + 19LL);
  *(void *)(*(void *)(a1 + 184) + 24LL) = calloc(*(unsigned __int8 *)(*(void *)(a7 + 16) + 19LL), 1uLL);
  *(_BYTE *)(*(void *)(a1 + 184) + 32LL) = 8;
  *(_BYTE *)(a1 + 192) = 1;
  memcpy( *(void **)(*(void *)(a1 + 184) + 24LL),  *(const void **)(*(void *)(a7 + 16) + 24LL),  *(unsigned __int8 *)(*(void *)(a7 + 16) + 19LL));
  sub_1003A405C(a1, a4);
  *(_DWORD *)(a1 + 152) = a2;
  *(_DWORD *)(a1 + 156) = a3;
  uint64_t v22 = *(_DWORD *)(a1 + 176);
  if (v22 == 33023)
  {
    uint64_t v27 = sub_1003A5ABC(a1, 33023);
    *(double *)(a1 + 272) = v27;
    uint64_t v28 = (os_log_s *)qword_1008F7558;
    uint64_t v29 = os_log_type_enabled((os_log_t)qword_1008F7558, OS_LOG_TYPE_DEFAULT);
    if (v29)
    {
      *(_DWORD *)__int128 buf = 67109376;
      *(_DWORD *)&uint8_t buf[4] = a3;
      uint64_t v75 = 2048;
      *(double *)uint64_t v76 = v27 / 1000.0;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "Accepting remote Vendor-Specific Apple AAC-ELD SEID %u config with sample rate of %2.1f KHz",  buf,  0x12u);
    }

    goto LABEL_89;
  }

  if (v22 == 2)
  {
    uint64_t v30 = *(void *)(*(void *)(v20 + 16) + 8LL);
    uint64_t v31 = *(_BYTE *)(v30 + 1);
    uint64_t v32 = *(char *)(v30 + 2);
    if ((v31 & 1) != 0)
    {
      if (v32 < 0) {
        uint64_t v35 = sub_1003A5ABC(a1, 2);
      }
      else {
        uint64_t v35 = 44100.0;
      }
    }

    else if (v32 < 0)
    {
      uint64_t v35 = 48000.0;
    }

    else
    {
      uint64_t v33 = (os_log_s *)qword_1008F7558;
      if (os_log_type_enabled((os_log_t)qword_1008F7558, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_error_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_ERROR,  "AAC-LC set config received without any acceptable sample rate. Using default sample rate instead of rejecting",  buf,  2u);
        uint64_t v34 = *v18;
      }

      else
      {
        uint64_t v34 = 2;
      }

      uint64_t v35 = sub_1003A5ABC(a1, v34);
    }

    *(double *)(a1 + 272) = v35;
    *(_BYTE *)(*(void *)(*(void *)(a1 + 184) + 24LL) + 1LL) = v35 == 44100.0;
    else {
      uint64_t v67 = -124;
    }
    *(_BYTE *)(*(void *)(*(void *)(a1 + 184) + 24LL) + 2LL) = v67;
    if (sub_1003A6200(a1, *(void *)(*(void *)(v20 + 16) + 8LL)))
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 184) + 24LL) + 3LL) = *(_BYTE *)(*(void *)(*(void *)(v20 + 16) + 8LL)
                                                                             + 3LL);
      *(_BYTE *)(*(void *)(*(void *)(a1 + 184) + 24LL) + 4LL) = *(_BYTE *)(*(void *)(*(void *)(v20 + 16) + 8LL)
                                                                             + 4LL);
      *(_BYTE *)(*(void *)(*(void *)(a1 + 184) + 24LL) + 5LL) = *(_BYTE *)(*(void *)(*(void *)(v20 + 16) + 8LL)
                                                                             + 5LL);
    }

    uint64_t v68 = (os_log_s *)qword_1008F7558;
    uint64_t v29 = os_log_type_enabled((os_log_t)qword_1008F7558, OS_LOG_TYPE_DEFAULT);
    if (v29)
    {
      uint64_t v69 = *(double *)(a1 + 272) / 1000.0;
      *(_DWORD *)__int128 buf = 67109376;
      *(_DWORD *)&uint8_t buf[4] = a3;
      uint64_t v75 = 2048;
      *(double *)uint64_t v76 = v69;
      _os_log_impl( (void *)&_mh_execute_header,  v68,  OS_LOG_TYPE_DEFAULT,  "Accepting remote AAC-LC SEID %u config with sample rate of %2.1f KHz\n",  buf,  0x12u);
    }

  if (qword_1008D5F50 != -1) {
    dispatch_once(&qword_1008D5F50, &stru_100896218);
  }
  uint64_t v7 = sub_1003FFEB0(off_1008D5F48, (uint64_t)&v20, 0);
  uint64_t v8 = (os_log_s *)qword_1008F7600;
  if (v7)
  {
    uint64_t v9 = (os_log_s *)(id)qword_1008F7600;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      sub_1003CF00C((uint64_t)v7, __p);
      if (v19 >= 0) {
        int v10 = __p;
      }
      else {
        int v10 = (void **)__p[0];
      }
      unsigned int v11 = a3;
      *(_DWORD *)__int128 buf = 136446466;
      uint64_t v25 = v10;
      uint64_t v26 = 2080;
      uint64_t v27 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Device's user-defined name changing for %{public}s, new nickname: %s",  buf,  0x16u);
      if (v19 < 0) {
        operator delete(__p[0]);
      }
    }

    sub_1003D17B0((uint64_t)v7, a3, 0);
    __p[0] = 0LL;
    __p[1] = 0LL;
    sub_100242F28((uint64_t)__p, (uint64_t)(a1 + 13));
    __int16 v12 = (void ***)a1[22];
    unsigned int v13 = (void ***)a1[23];
    while (v12 != v13)
    {
      char v14 = *v12;
      if (**v12 == v7)
      {
        else {
          int v17 = *a3;
        }
        std::string::operator=((std::string *)(v14 + 11), &v17);
        break;
      }

      ++v12;
    }

    sub_100242FAC((uint64_t)__p);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008F7600, OS_LOG_TYPE_ERROR))
  {
    sub_10067B318(v4 + 23, v4, v8);
  }

    int v5 = 0LL;
    goto LABEL_14;
  }

  if (!sub_10053C844(v10))
  {
    if (os_log_type_enabled((os_log_t)qword_1008F7598, OS_LOG_TYPE_ERROR)) {
      sub_1006824A8();
    }
    goto LABEL_7;
  }

  if (qword_1008D90F8 != -1) {
    dispatch_once(&qword_1008D90F8, &stru_10089A050);
  }
  else {
    int v5 = 255LL;
  }
LABEL_14:
  unsigned int v11 = (void **)v10;
  sub_1002077E0(&v11);
  return v5;
}

    ++v8;
  }

  while (v8 != v7);
LABEL_15:
  if (v9 != v7)
  {
    unsigned int v13 = v9 - v5;
    if (v9 - v5 != -1) {
      goto LABEL_63;
    }
  }
}

    __int16 v12 = 0LL;
    goto LABEL_8;
  }

  if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_ERROR)) {
    sub_100691A8C();
  }
LABEL_14:
  uint64_t v22 = &off_10087FAA8;
  if (v23) {
    sub_1002CD254(v23);
  }
}

    if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_ERROR)) {
      sub_100698024();
    }
    uint64_t v7 = (id *)(a1 + 760);
LABEL_102:
    [*v7 addObject:v5];
LABEL_103:
    if (_os_feature_enabled_impl("BluetoothFeatures", "SentinelConnScanRx"))
    {
      int v149 = 0LL;
      unsigned int v150 = 0LL;
      uint64_t v151 = 0LL;
      uint64_t v41 = objc_claimAutoreleasedReturnValue([v5 UUIDString]);
      sub_10002418C(&v149, (char *)[v41 UTF8String]);

      if (qword_1008D5F30 != -1) {
        dispatch_once(&qword_1008D5F30, &stru_1008A2B30);
      }
      uint64_t v42 = sub_1005CE2FC((uint64_t)off_1008D5F28, v5);
      if ((v42 - 0x10000) <= 0x19 && ((1 << v42) & 0x37800FF) != 0)
      {
        sub_100241F90(buf, v5);
        uint64_t v43 = (uint64_t **)(a1 + 608);
        if (a1 + 616 == sub_1005BD640(a1 + 608, buf))
        {
          if (a1 + 1360 == sub_100024098(a1 + 1352, (const void **)&v149))
          {
            uint64_t v54 = (os_log_s *)qword_1008F7620;
            if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_ERROR)) {
              sub_100697F9C(v42, (uint64_t)v5, v54);
            }
          }

          else
          {
            *(void *)__int128 buf = &v149;
            uint64_t v45 = sub_1005BCFB4( (uint64_t **)(a1 + 1352),  (const void **)&v149,  (uint64_t)&unk_1006C2518,  (__int128 **)buf);
            uint64_t v113 = *(_OWORD *)(v45 + 7);
            __int16 v114 = *((_DWORD *)v45 + 18);
            uint64_t v46 = v113;
            uint64_t v47 = DWORD1(v113);
            unsigned int v48 = HIDWORD(v113);
            if ((_DWORD)v113 || __PAIR64__(DWORD1(v113), 0) != HIDWORD(v113))
            {
              memset(v140, 0, 24);
              uint64_t v49 = v5;
              *(void *)__int128 buf = v49;
              *(_DWORD *)&uint8_t buf[8] = v46;
              *(_DWORD *)&_BYTE buf[12] = v47;
              *(void *)&uint8_t buf[16] = v48;
              *(_DWORD *)char v142 = v42;
              v112[0] = _NSConcreteStackBlock;
              v112[1] = 3221225472LL;
              v112[2] = sub_1005B4F30;
              v112[3] = &unk_1008A28C0;
              v112[4] = a1;
              *(void *)&v142[8] = objc_retainBlock(v112);
              sub_1005B4DE8((uint64_t *)v140, (uint64_t *)buf);

              if (qword_1008D6198 != -1) {
                dispatch_once(&qword_1008D6198, &stru_1008A2B70);
              }
              uint64_t v50 = off_1008D6190;
              memset(v111, 0, sizeof(v111));
              sub_1005BED08( v111,  *(uint64_t *)v140,  *(uint64_t *)&v140[8],  0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)&v140[8] - *(void *)v140) >> 3));
              sub_10044B2B8((uint64_t)v50, v111);
              *(void *)__int128 buf = v111;
              sub_1005BEB74((void ***)buf);
              sub_100241F90(buf, v49);
              sub_1005BEA78(v43, buf, buf);
              uint64_t v51 = (os_log_s *)qword_1008F7620;
              if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
              {
                sub_10059622C((unsigned int *)&v113, &v110);
                uint64_t v52 = sub_100595B00(v42);
                uint64_t v53 = (v110.__r_.__value_.__s.__size_ & 0x80u) == 0
                    ? &v110
                    : (std::stringbuf::string_type *)v110.__r_.__value_.__r.__words[0];
                *(_DWORD *)__int128 buf = 138543874;
                *(void *)&uint8_t buf[4] = v49;
                *(_WORD *)&_BYTE buf[12] = 2080;
                *(void *)&buf[14] = v52;
                *(_WORD *)&buf[22] = 2080;
                *(void *)char v142 = v53;
                _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "requestConnectionScanRxThreshold for device %{public}@ useCase %s params %s",  buf,  0x20u);
              }

              *(void *)__int128 buf = v140;
              sub_1005BEB74((void ***)buf);
            }
          }
        }
      }

      if (SHIBYTE(v151) < 0) {
        operator delete(v149);
      }
    }

    uint64_t v32 = 0LL;
    goto LABEL_112;
  }

  if (!*(_BYTE *)(a1 + 184)) {
    goto LABEL_88;
  }
  if (qword_1008D5F30 != -1) {
    dispatch_once(&qword_1008D5F30, &stru_1008A2B30);
  }
  uint64_t v8 = off_1008D5F28;
  sub_10002418C(__p, "PairedUsingRSA");
  if (sub_1005CE5A8((uint64_t)v8, v5, (uint64_t)__p))
  {
    uint64_t v9 = sub_1002E6BF0();
    int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 384LL))(v9);
  }

  else
  {
    int v10 = 0;
  }

  if (v135 < 0) {
    operator delete(__p[0]);
  }
  unsigned int v11 = (os_log_s *)qword_1008F7620;
  if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v12 = "NO";
    if (v10) {
      __int16 v12 = "YES";
    }
    *(_DWORD *)__int128 buf = 138543618;
    *(void *)&uint8_t buf[4] = v5;
    *(_WORD *)&_BYTE buf[12] = 2082;
    *(void *)&buf[14] = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "MUC - Adding device %{public}@ to connection filter accept list supportsVAPairing:%{public}s, waiting for cont roller to complete.",  buf,  0x16u);
  }

  if (qword_1008D5F30 != -1) {
    dispatch_once(&qword_1008D5F30, &stru_1008A2B30);
  }
  if (!sub_1005CC0B8((uint64_t)off_1008D5F28, v5))
  {
    if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_ERROR)) {
      sub_100697EA0();
    }
    uint64_t v32 = 8LL;
    goto LABEL_112;
  }

  int v149 = 0LL;
  unsigned int v150 = 0LL;
  uint64_t v151 = 0LL;
  if (qword_1008D5F30 != -1) {
    dispatch_once(&qword_1008D5F30, &stru_1008A2B30);
  }
  sub_1005D7264((uint64_t)off_1008D5F28, v5, (uint64_t)&v149);
  unsigned int v13 = v149;
  if (v149 == &v150)
  {
LABEL_43:
    sub_100241F90(buf, v5);
    if (a1 + 344 != sub_1005BD640(a1 + 336, buf) && os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_FAULT)) {
      sub_100698088();
    }
    sub_100241F90(buf, v5);
    sub_1005BEA78((uint64_t **)(a1 + 336), buf, buf);
    if (qword_1008D5F30 != -1) {
      dispatch_once(&qword_1008D5F30, &stru_1008A2B30);
    }
    if (sub_1005D6AAC((uint64_t)off_1008D5F28, v5))
    {
      uint64_t v27 = sub_1002E6E9C();
      if (qword_1008D5F30 != -1) {
        dispatch_once(&qword_1008D5F30, &stru_1008A2B30);
      }
      uint64_t v28 = sub_1005CC198((uint64_t)off_1008D5F28, v5, 0);
      (*(void (**)(uint64_t, uint64_t))(*(void *)v27 + 3392LL))(v27, v28);
    }

    sub_10023BF24((uint64_t)&v149, v150);
    goto LABEL_53;
  }

  if (v10) {
    char v14 = "YES";
  }
  else {
    char v14 = "NO";
  }
  while (1)
  {
    unsigned __int8 v15 = v13[4];
    v110.__r_.__value_.__r.__words[0] = v15;
    uint64_t v16 = (os_log_s *)qword_1008F7620;
    if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = sub_1005BFB9C(v15);
      pthread_attr_t v18 = (id)objc_claimAutoreleasedReturnValue(v17);
      *(_DWORD *)__int128 buf = 138544131;
      *(void *)&uint8_t buf[4] = v5;
      *(_WORD *)&_BYTE buf[12] = 2160;
      *(void *)&buf[14] = 1752392040LL;
      *(_WORD *)&buf[22] = 2113;
      *(void *)char v142 = v18;
      *(_WORD *)&v142[8] = 2080;
      *(void *)&v142[10] = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "MUC - Adding device %{public}@ with address %{private, mask.hash}@ to connection filter accept list supp ortsVAPairing:%s, waiting for controller to complete.",  buf,  0x2Au);

      unsigned __int8 v15 = v110.__r_.__value_.__r.__words[0];
    }

    uint64_t v19 = sub_1005A128C(a1, v15);
    uint64_t v20 = v19;
    if (!v19) {
      goto LABEL_37;
    }
    if (v19 != 4152) {
      break;
    }
    if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_ERROR))
    {
      uint64_t v21 = sub_1005BFB9C((uint64_t)v110.__r_.__value_.__l.__data_);
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
      sub_100698154(v22, &v147, &v148);
    }

_WORD *sub_1000A94D8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t result = malloc(0x98uLL);
  if (result)
  {
    if (15 * a2 <= *(unsigned __int16 *)(a3 + 12))
    {
      uint64_t v7 = 0LL;
      *(void *)uint64_t result = a1;
      result[4] = a2;
      result[5] = 15;
      *((void *)result + 17) = 0LL;
      do
      {
        uint64_t v8 = (char *)&result[v7];
        *((_DWORD *)v8 + 3) = 2;
        *((_WORD *)v8 + 8) = a2;
        *((_WORD *)v8 + 9) = -1;
        v7 += 4LL;
      }

      while (v7 != 60);
      *((void *)result + 18) = a3;
    }

    else
    {
      free(result);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000A9570()
{
  uint64_t v8 = 0LL;
  pthread_mutex_lock((pthread_mutex_t *)&xmmword_1008DDFC8);
  uint64_t v0 = qword_1008DE060;
  uint64_t v1 = (*(uint64_t (**)(void, uint64_t, uint64_t *))(**(void **)(qword_1008DE060 + 48) + 184LL))( *(void *)(qword_1008DE060 + 48),  qword_1008DE060 + 240,  &v8);
  if (!(_DWORD)v1)
  {
    uint64_t v2 = 0LL;
    *(void *)(v0 + 240) += 4LL;
    uint64_t v3 = v0 + 176;
    do
    {
      uint64_t v4 = *(uint64_t **)(v3 + v2);
      *(_WORD *)(v4[18] + 24) = 0;
      v4[17] = 0LL;
      uint64_t v5 = sub_1000A961C(v4);
      if ((_DWORD)v5) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = v2 == 24;
      }
      v2 += 8LL;
    }

    while (!v6);
    uint64_t v1 = v5;
    pthread_mutex_unlock((pthread_mutex_t *)&xmmword_1008DDFC8);
  }

  return v1;
}

uint64_t sub_1000A961C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!*a1 || !*(_DWORD *)v1 || byte_1008DE068 != 1) {
    return 0xFFFFFFFFLL;
  }
  if (*((_WORD *)a1 + 5))
  {
    __int16 v3 = *((_WORD *)a1 + 4);
    uint64_t v4 = (_WORD *)a1 + 9;
    uint64_t v5 = *((unsigned __int16 *)a1 + 5);
    do
    {
      *(_DWORD *)(v4 - 3) = 2;
      *(v4 - 1) = v3;
      _WORD *v4 = -1;
      v4 += 4;
      --v5;
    }

    while (v5);
  }

  uint64_t v6 = *(void *)(v1 + 240);
  a1[17] = v6;
  *(void *)(v1 + 240) = v6 + 15;
  uint64_t v7 = (*(uint64_t (**)(void, void, void))(**(void **)(v1 + 48) + 280LL))( *(void *)(v1 + 48),  *(unsigned __int8 *)(v1 + 137),  *(void *)(a1[18] + 16));
  if (!(_DWORD)v7)
  {
LABEL_16:
    j__pthread_mutex_lock((pthread_mutex_t *)(v1 + 4176));
    ++*(_BYTE *)(v1 + 4241);
    j__pthread_mutex_unlock((pthread_mutex_t *)(v1 + 4176));
    return 0LL;
  }

  uint64_t v13 = v7;
  uint64_t v14 = 3758097134LL;
  memset(v25, 0, 250);
  if ((_DWORD)v7 != -536870162)
  {
    sub_1001EE0BC( (uint64_t)v25,  250,  (uint64_t)"USB ReadIsochPipeAsync failed -- returned error (0x%x)",  v8,  v9,  v10,  v11,  v12,  v7);
    sub_1000BAAF0((const char *)v25);
    return v13;
  }

  sub_1001EE0BC( (uint64_t)v25,  250,  (uint64_t)"USB ReadIsochPipeAsync failed -- returned kIOReturnIsoTooOld error (0x%x) -- try again",  v8,  v9,  v10,  v11,  v12,  3758097134LL);
  sub_1000BAAF0((const char *)v25);
  uint64_t v15 = *(void *)(v1 + 240);
  a1[17] = v15 + 30;
  *(void *)(v1 + 240) = v15 + 45;
  uint64_t v16 = (*(uint64_t (**)(void, void, void))(**(void **)(v1 + 48) + 280LL))( *(void *)(v1 + 48),  *(unsigned __int8 *)(v1 + 137),  *(void *)(a1[18] + 16));
  if (!(_DWORD)v16)
  {
    sub_1001EE0BC((uint64_t)v25, 250, (uint64_t)"Retry USB ReadIsochPipeAsync successful ", v17, v18, v19, v20, v21, v24);
    sub_1000B9914((const char *)v25);
    goto LABEL_16;
  }

  uint64_t v22 = v16;
  if ((_DWORD)v16 == -536870162)
  {
    sub_1001EE0BC( (uint64_t)v25,  250,  (uint64_t)"Previous USB ReadIsochPipeAsync failed with kIOReturnIsoTooOld error -- retry still returned kIOReturnIso TooOld error (0x%x)",  v17,  v18,  v19,  v20,  v21,  3758097134LL);
    sub_1000BAAF0((const char *)v25);
  }

  else
  {
    sub_1001EE0BC( (uint64_t)v25,  250,  (uint64_t)"Retry USB ReadIsochPipeAsync failed -- returned error (0x%x)",  v17,  v18,  v19,  v20,  v21,  v16);
    sub_1000BAAF0((const char *)v25);
    return v22;
  }

  return v14;
}

uint64_t sub_1000A9890(uint64_t a1, _WORD *a2, char *a3, unsigned int a4)
{
  if (!a1) {
    return 1205LL;
  }
  uint64_t v9 = (_BYTE *)(a1 + 4106);
  j__pthread_mutex_lock((pthread_mutex_t *)(a1 + 4112));
  *(_WORD *)(a1 + 4100) += a4;
  j__pthread_mutex_unlock((pthread_mutex_t *)(a1 + 4112));
  *(_WORD *)(a1 + 256) = *a2;
  uint64_t v10 = *(unsigned __int16 *)(a1 + 4102);
  if (v10 + a4 > 0xEFF)
  {
    unsigned __int16 v12 = 3840 - v10;
    unsigned __int16 v13 = a4 - (3840 - v10);
    memcpy((void *)(a1 + 259 + v10), a3, (unsigned __int16)(3840 - v10));
    *(_WORD *)(a1 + 4102) = 0;
    memcpy((void *)(a1 + 259), &a3[v12], v13);
    LOWORD(v11) = *(_WORD *)(a1 + 4102) + v13;
  }

  else
  {
    memcpy((void *)(a1 + v10 + 259), a3, a4);
    unsigned int v11 = *(unsigned __int16 *)(a1 + 4102) + a4;
    if (v11 == 3840) {
      LOWORD(v11) = 0;
    }
  }

  *(_WORD *)(a1 + 4102) = v11;
  if (!*(_BYTE *)(a1 + 4107) && byte_1008DE068 == 1)
  {
    *(_BYTE *)(a1 + 4241) = 0;
  }

  if (!*v9 && byte_1008DE068 == 1 && *(unsigned __int16 *)(a1 + 4100) >= *(unsigned __int16 *)(a1 + 4108))
  {
    *(_BYTE *)(a1 + 4240) = 0;
  }

  return 625LL;
}

uint64_t sub_1000A9A0C()
{
  uint64_t v9 = 0LL;
  pthread_mutex_lock((pthread_mutex_t *)&xmmword_1008DDFC8);
  uint64_t v0 = qword_1008DE060;
  uint64_t v1 = (*(uint64_t (**)(void, uint64_t, uint64_t *))(**(void **)(qword_1008DE060 + 48) + 184LL))( *(void *)(qword_1008DE060 + 48),  qword_1008DE060 + 248,  &v9);
  if ((_DWORD)v1)
  {
    uint64_t v2 = v1;
    sub_10011E854(1205LL);
  }

  else
  {
    uint64_t v3 = 0LL;
    *(void *)(v0 + 248) += 4LL;
    uint64_t v4 = v0 + 208;
    do
    {
      uint64_t v5 = *(uint64_t **)(v4 + v3);
      v5[17] = 0LL;
      uint64_t v6 = sub_1000A9ABC(v5);
      if ((_DWORD)v6) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v3 == 24;
      }
      v3 += 8LL;
    }

    while (!v7);
    uint64_t v2 = v6;
    pthread_mutex_unlock((pthread_mutex_t *)&xmmword_1008DDFC8);
  }

  return v2;
}

uint64_t sub_1000A9ABC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *(char **)(a1[18] + 16);
  if (*a1) {
    BOOL v3 = v2 == 0LL;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    return 0xFFFFFFFFLL;
  }
  if (!*(_DWORD *)v1) {
    return 0xFFFFFFFFLL;
  }
  if (byte_1008DE068 != 1) {
    return 0xFFFFFFFFLL;
  }
  __int16 v5 = *((_WORD *)a1 + 4) - 1;
  __int16 v39 = 15 * v5;
  unsigned __int8 v8 = 3 * v5;
  size_t v9 = (3 * v5);
  bzero(v2, v9);
  unsigned int v10 = 0;
  *(_BYTE *)(v1 + 258) = v8;
  int v11 = v8;
  unsigned __int16 v12 = v2 + 3;
  do
  {
    __int16 v13 = *(_WORD *)(v1 + 256);
    *(v12 - 1) = *(_BYTE *)(v1 + 258);
    *(_WORD *)(v12 - 3) = v13;
    uint64_t v14 = *(unsigned __int16 *)(v1 + 4104);
    unsigned __int16 v15 = v11 - (3840 - v14);
    if (v11 <= 3840 - (int)v14)
    {
      memcpy(v12, (const void *)(v1 + v14 + 259), v9);
      int v17 = *(unsigned __int16 *)(v1 + 4104) + v11;
      if (v17 == 3840) {
        LOWORD(v17) = 0;
      }
    }

    else
    {
      size_t v16 = (unsigned __int16)(3840 - v14);
      memcpy(v12, (const void *)(v1 + v14 + 259), v16);
      *(_WORD *)(v1 + 4104) = 0;
      memcpy(&v12[v16], (const void *)(v1 + 259), v15);
      LOWORD(v17) = *(_WORD *)(v1 + 4104) + v15;
    }

    *(_WORD *)(v1 + 4104) = v17;
    v12 += v9 + 3;
  }

  while (v10++ < 4);
  j__pthread_mutex_lock((pthread_mutex_t *)(v1 + 4112));
  *(_WORD *)(v1 + 4100) -= v39;
  j__pthread_mutex_unlock((pthread_mutex_t *)(v1 + 4112));
  if (*((_WORD *)a1 + 5))
  {
    __int16 v19 = *((_WORD *)a1 + 4);
    uint64_t v20 = (_WORD *)a1 + 9;
    uint64_t v21 = *((unsigned __int16 *)a1 + 5);
    do
    {
      *(_DWORD *)(v20 - 3) = 2;
      *(v20 - 1) = v19;
      _WORD *v20 = -1;
      v20 += 4;
      --v21;
    }

    while (v21);
  }

  uint64_t v22 = *(void *)(v1 + 248);
  a1[17] = v22;
  *(void *)(v1 + 248) = v22 + 15;
  uint64_t v23 = (*(uint64_t (**)(void, void, void))(**(void **)(v1 + 48) + 288LL))( *(void *)(v1 + 48),  *(unsigned __int8 *)(v1 + 145),  *(void *)(a1[18] + 16));
  if (!(_DWORD)v23)
  {
LABEL_27:
    j__pthread_mutex_lock((pthread_mutex_t *)(v1 + 4112));
    ++*(_BYTE *)(v1 + 4240);
    j__pthread_mutex_unlock((pthread_mutex_t *)(v1 + 4112));
    return 0LL;
  }

  uint64_t v29 = v23;
  uint64_t v6 = 3758097134LL;
  memset(v40, 0, 250);
  if ((_DWORD)v23 != -536870162)
  {
    sub_1001EE0BC( (uint64_t)v40,  250,  (uint64_t)"USB WriteIsochPipeAsync failed -- returned error (0x%x)",  v24,  v25,  v26,  v27,  v28,  v23);
    sub_1000BAAF0((const char *)v40);
    return v29;
  }

  sub_1001EE0BC( (uint64_t)v40,  250,  (uint64_t)"USB WriteIsochPipeAsync failed -- returned kIOReturnIsoTooOld error (0x%x) -- try again",  v24,  v25,  v26,  v27,  v28,  3758097134LL);
  sub_1000BAAF0((const char *)v40);
  uint64_t v30 = *(void *)(v1 + 248);
  a1[17] = v30 + 30;
  *(void *)(v1 + 248) = v30 + 45;
  uint64_t v31 = (*(uint64_t (**)(void, void, void))(**(void **)(v1 + 48) + 288LL))( *(void *)(v1 + 48),  *(unsigned __int8 *)(v1 + 145),  *(void *)(a1[18] + 16));
  if (!(_DWORD)v31)
  {
    sub_1001EE0BC((uint64_t)v40, 250, (uint64_t)"Retry USB WriteIsochPipeAsync successful ", v32, v33, v34, v35, v36, v38);
    sub_1000B9914((const char *)v40);
    goto LABEL_27;
  }

  uint64_t v37 = v31;
  if ((_DWORD)v31 == -536870162)
  {
    sub_1001EE0BC( (uint64_t)v40,  250,  (uint64_t)"Previous USB WriteIsochPipeAsync failed with kIOReturnIsoTooOld error -- retry still returned kIOReturnIs oTooOld error (0x%x)",  v32,  v33,  v34,  v35,  v36,  3758097134LL);
    sub_1000BAAF0((const char *)v40);
  }

  else
  {
    sub_1001EE0BC( (uint64_t)v40,  250,  (uint64_t)"Retry USB WriteIsochPipeAsync failed -- returned error (0x%x)",  v32,  v33,  v34,  v35,  v36,  v31);
    sub_1000BAAF0((const char *)v40);
    return v37;
  }

  return v6;
}

uint64_t sub_1000A9E60()
{
  return 0LL;
}

uint64_t sub_1000A9E68(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v4 = a1;
  __int16 v5 = (_DWORD *)qword_1008DE060;
  size_t v6 = a3;
  __chkstk_darwin(a1, a2);
  unsigned __int8 v8 = (char *)&v27 - v7;
  if (v9 >= 0x801) {
    sub_1001EE2A0();
  }
  if (!v5) {
    return 1205LL;
  }
  bzero(v8, v6);
  if (!*v5) {
    return 1205LL;
  }
  uint64_t v10 = sub_10011EFFC();
  if (!v10) {
    return 625LL;
  }
  switch(v4)
  {
    case 1:
      __int16 v11 = 3;
LABEL_11:
      unsigned __int16 v12 = sub_1000AD358((uint64_t)v5, v4, (const void *)(v10 + 1), (unsigned __int16)(v11 + a3));
      if (v12)
      {
        __int16 v13 = v12;
        int v14 = v12[8];
        if (v14 == 2)
        {
          uint64_t v15 = *(void *)v12;
          if (*(void *)v12 && *(_DWORD *)v15)
          {
            uint64_t v25 = (*(uint64_t (**)(void, void, void, void, void (*)(char *), char *))(**(void **)(v15 + 40) + 272LL))( *(void *)(v15 + 40),  *(unsigned __int8 *)(v15 + 129),  *((void *)v12 + 2),  *((unsigned __int16 *)v12 + 12),  sub_1000AD520,  v12);
            if ((_DWORD)v25)
            {
              uint64_t v17 = v25;
              sub_1000A9064(v13);
              uint64_t v22 = "Bulk Pipe";
              uint64_t v23 = "WritePipeAsync";
LABEL_27:
              sub_1000AD3BC(v15, v17, (uint64_t)v22, (uint64_t)v23, v18, v19, v20, v21);
            }

            return 625LL;
          }
        }

        else if (v14 == 1)
        {
          uint64_t v15 = *(void *)v12;
          if (*(void *)v12)
          {
            if (*(_DWORD *)v15)
            {
              uint64_t v31 = 0LL;
              int v27 = 33;
              __int16 v29 = *((_WORD *)v12 + 12);
              uint64_t v30 = *((void *)v12 + 2);
              __int16 v28 = *(unsigned __int8 *)(v15 + 24);
              uint64_t v16 = (*(uint64_t (**)(void, int *, void (*)(char *), char *))(**(void **)(v15 + 32)
                                                                                                  + 216LL))( *(void *)(v15 + 32),  &v27,  sub_1000AD3B8,  v12);
              if ((_DWORD)v16)
              {
                uint64_t v17 = v16;
                sub_1000A9064(v13);
                uint64_t v22 = "Control Pipe";
                uint64_t v23 = "DeviceRequestAsync";
                goto LABEL_27;
              }

              return 625LL;
            }
          }
        }

        return 1205LL;
      }

      break;
    case 3:
      LOWORD(v27) = *(_WORD *)(v10 + 1);
      memcpy(v8, (const void *)(v10 + 4), v6);
      return sub_1000A9890((uint64_t)v5, &v27, v8, a3);
    case 2:
      __int16 v11 = 4;
      goto LABEL_11;
  }

  uint64_t v24 = 106LL;
  sub_10011E854(106LL);
  return v24;
}

uint64_t sub_1000AA0B0(int a1)
{
  if (a1 == 2)
  {
    sub_1001EE0E4("[bm3_usb][OI_HciIfc_EnableSCO_USB] -- airMode = 0x02 (CVSD)\n");
  }

  else
  {
    if (a1 != 3)
    {
      sub_1001EE0E4("[bm3_usb][OI_HciIfc_EnableSCO_USB] -- Error -- unknown airMode = 0x%02x (unknown)\n", a1);
      return 113LL;
    }

    sub_1001EE0E4("[bm3_usb][OI_HciIfc_EnableSCO_USB] -- airMode = 0x03 (mSBC)\n");
  }

  uint64_t v2 = qword_1008DE060;
  if (!qword_1008DE060) {
    return 113LL;
  }
  uint64_t v3 = *(void *)(qword_1008DE060 + 48);
  sub_1001EE0E4("[bm3_usb][OI_HciIfc_EnableSCO_USB] -- ISOC interface for SCO is opened\n");
  sub_1001EE0E4("[bm3_usb][OI_HciIfc_EnableSCO_USB] -- Set ISOC alternate interface successfully\n");
  sub_1001EE0E4("[bm3_usb][OI_HciIfc_EnableSCO_USB] -- Create ISOC requests successfully\n");
  bzero((void *)(v2 + 259), 0xF00uLL);
  *(void *)(v2 + 240) = 0LL;
  *(void *)(v2 + 248) = 0LL;
  *(void *)(v2 + 4100) = 0LL;
  unsigned int v4 = (90 * *(_WORD *)(v2 + 142) - 90) & 0xFFFE;
  if (v4 >= 0xF00) {
    LOWORD(v4) = 3840;
  }
  *(_WORD *)(v2 + 4108) = v4;
  byte_1008DE068 = 1;
  *(_BYTE *)(v2 + 4241) = 0;
  uint64_t result = sub_1000A9570();
  if ((_DWORD)result)
  {
LABEL_13:
    (*(void (**)(uint64_t))(*(void *)v3 + 72LL))(v3);
    return 113LL;
  }

  *(_BYTE *)(v2 + 4107) = 1;
  return result;
}

void sub_1000AA20C(uint64_t a1, int a2)
{
  uint64_t v4 = *(void *)a1;
  __int16 v5 = (_BYTE *)(*(void *)a1 + 4107LL);
  size_t v6 = (pthread_mutex_t *)(*(void *)a1 + 4176LL);
  j__pthread_mutex_lock(v6);
  --v5[134];
  j__pthread_mutex_unlock(v6);
  if (*(_DWORD *)v4) {
    BOOL v7 = qword_1008DE060 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7) {
    return;
  }
  if (!a2 || a2 == -536870169)
  {
    unsigned int v8 = *(unsigned __int16 *)(a1 + 10);
    if (*(_WORD *)(a1 + 10))
    {
      unint64_t v9 = 0LL;
      uint64_t v10 = *(void *)(a1 + 144);
      __int16 v11 = (unsigned __int16 *)(a1 + 18);
      do
      {
        unsigned int v13 = *v11;
        v11 += 4;
        unsigned int v12 = v13;
        if (v13)
        {
          if (sub_1000AA3E8( v4,  3,  3u,  0x102u,  (char **)(v4 + 168),  *(void *)(v10 + 16) + v9 * *(unsigned __int16 *)(a1 + 8),  v12)) {
            goto LABEL_14;
          }
          uint64_t v10 = *(void *)(a1 + 144);
          unsigned int v8 = *(unsigned __int16 *)(a1 + 10);
        }

        *(_WORD *)(v10 + 24) += v12;
        ++v9;
      }

      while (v9 < v8);
    }

    goto LABEL_18;
  }

uint64_t sub_1000AA3E8( uint64_t a1, int a2, unsigned int a3, unsigned int a4, char **a5, uint64_t a6, unsigned int a7)
{
  if (!a7) {
    return 0LL;
  }
  unsigned __int16 v11 = 0;
  unsigned int v12 = *a5;
  while (1)
  {
    uint64_t v13 = a6 + v11;
    unsigned __int16 v14 = a7 - v11;
    if (v12)
    {
      uint64_t v15 = *((void *)v12 + 2);
      switch(a2)
      {
        case 2:
          unsigned __int16 v16 = *(_WORD *)(v15 + 2) + 4;
          break;
        case 3:
          unsigned __int16 v16 = *(unsigned __int8 *)(v15 + 2) + 3;
          break;
        case 4:
          unsigned __int16 v16 = *(unsigned __int8 *)(v15 + 1) + 2;
          break;
        default:
          unsigned __int16 v16 = 0;
          break;
      }

      goto LABEL_23;
    }

    if (a3 > v14) {
      goto LABEL_38;
    }
    if (a2 == 2)
    {
      unsigned __int16 v16 = *(_WORD *)(v13 + 2) + 4;
    }

    else if (a2 == 3)
    {
      unsigned __int16 v16 = *(unsigned __int8 *)(v13 + 2) + 3;
    }

    else
    {
      unsigned __int16 v16 = a2 == 4 ? *(unsigned __int8 *)(v13 + 1) + 2 : 0;
    }

    if (a3 > v16 || a4 < v16) {
      goto LABEL_38;
    }
    uint64_t v17 = (char *)sub_1000A93E4(a1, a2, a3, v16);
    if (!v17) {
      break;
    }
    unsigned int v12 = v17;
    *a5 = v17;
LABEL_23:
    int v18 = *((unsigned __int16 *)v12 + 12);
    if (v18 == v16) {
      goto LABEL_38;
    }
    unsigned __int16 v19 = v16 - v18;
    if (a4 < v19) {
      goto LABEL_38;
    }
    unsigned int v20 = v19 >= v14 ? (unsigned __int16)(a7 - v11) : v19;
    unsigned int v21 = sub_1000AA60C((uint64_t)v12, (const void *)v13, v20);
    if (v21 < v20) {
      goto LABEL_38;
    }
    __int16 v22 = v21;
    if (*((unsigned __int16 *)v12 + 12) == v16)
    {
      if (v12[8] == 1) {
        sub_1001EE2A0();
      }
      pthread_mutex_lock(&stru_1008DE0A8);
      int v23 = dword_1008DE410;
      if (dword_1008DE410 == 100) {
        int v23 = 0;
      }
      dword_1008DE410 = v23 + 1;
      qword_1008DE070[v23 + 16] = (uint64_t)v12;
      pthread_cond_signal(&stru_1008DE078);
      pthread_mutex_unlock(&stru_1008DE0A8);
      unsigned int v12 = 0LL;
      *a5 = 0LL;
    }

    v11 += v22;
    if (a7 <= v11) {
      return 0LL;
    }
  }

  sub_1000A85A0();
  sub_10011E854(106LL);
  sub_1000A8688();
LABEL_38:
  if (*a5)
  {
    sub_1000A9064(*a5);
    *a5 = 0LL;
  }

  return 0xFFFFFFFFLL;
}

uint64_t sub_1000AA60C(uint64_t a1, const void *a2, int a3)
{
  uint64_t v3 = *(unsigned __int16 *)(a1 + 24);
  unsigned int v4 = *(unsigned __int16 *)(a1 + 12);
  int v5 = v4 - v3;
  else {
    int v6 = v5;
  }
  if (v6)
  {
    memcpy((void *)(*(void *)(a1 + 16) + v3), a2, (unsigned __int16)v6);
    *(_WORD *)(a1 + 24) += v6;
  }

  return (unsigned __int16)v6;
}

uint64_t sub_1000AA668(void *a1)
{
  uint64_t v2 = (_DWORD *)*a1;
  uint64_t v3 = (_BYTE *)(*a1 + 4106LL);
  unsigned int v4 = (pthread_mutex_t *)(*a1 + 4112LL);
  j__pthread_mutex_lock(v4);
  --v3[134];
  uint64_t result = j__pthread_mutex_unlock(v4);
  if (*v2) {
    BOOL v6 = qword_1008DE060 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6 && dword_1008DE0E8 != 0)
  {
    if (*v3)
    {
      *(_WORD *)(a1[18] + 24LL) = 0;
      a1[17] = 0LL;
      uint64_t result = sub_1000A9ABC(a1);
      if ((_DWORD)result)
      {
        j__pthread_mutex_lock(v4);
        if (!v3[134])
        {
          if (byte_1008DE068 == 1) {
            sub_1000BAAF0("[IsochPipeWriteCB] -- btdev->nbrOfOutstandingIsochWrites < 1 -- need to restart");
          }
          _BYTE *v3 = 0;
        }

        return j__pthread_mutex_unlock(v4);
      }
    }
  }

  return result;
}

uint64_t sub_1000AA744()
{
  return 0LL;
}

uint64_t sub_1000AA74C()
{
  kern_return_t v22;
  kern_return_t v23;
  kern_return_t v24;
  unsigned __int8 v25;
  kern_return_t v26;
  kern_return_t v27;
  io_object_t v28;
  io_service_t v29;
  CFUUIDRef v30;
  CFUUIDRef v31;
  IOCFPlugInInterface **v32;
  HRESULT (__cdecl *QueryInterface)(void *, REFIID, LPVOID *);
  CFUUIDRef v34;
  CFUUIDBytes v35;
  BOOL v36;
  kern_return_t v37;
  uint64_t v38;
  kern_return_t v39;
  kern_return_t v40;
  unsigned __int8 v41;
  kern_return_t v42;
  char v43;
  char v44;
  uint64_t v45;
  kern_return_t v46;
  kern_return_t v47;
  UInt8 byte7[8];
  UInt8 byte7a[8];
  _WORD *v50;
  timespec v51;
  uint64_t v52;
  unsigned __int8 v53;
  char v54;
  uint64_t v55;
  SInt32 theScore;
  IOCFPlugInInterface **theInterface;
  unint64_t v58;
  io_object_t v59;
  char v60;
  __int16 v61;
  char v62;
  __int16 v63;
  _BYTE v64[9];
  pthread_mutex_init(&stru_1008DE458, 0LL);
  pthread_cond_init(&stru_1008DE428, 0LL);
  xmmword_1008DDF68 = 0u;
  *(_OWORD *)&qword_1008DDF78 = 0u;
  xmmword_1008DDF88 = 0u;
  unk_1008DDF98 = 0u;
  xmmword_1008DDFA8 = 0u;
  unk_1008DDFB8 = 0u;
  xmmword_1008DDFD8 = 0u;
  unk_1008DDFE8 = 0u;
  xmmword_1008DDFF8 = 0u;
  xmmword_1008DE018 = 0u;
  unk_1008DE028 = 0u;
  xmmword_1008DE038 = 0u;
  *(_OWORD *)&dword_1008DE048 = 0u;
  qword_1008DE058 = 0LL;
  xmmword_1008DDFC8 = 0u;
  xmmword_1008DE008 = 0u;
  pthread_cond_init((pthread_cond_t *)&xmmword_1008DE008, 0LL);
  pthread_mutex_init((pthread_mutex_t *)&xmmword_1008DDFC8, 0LL);
  pthread_create((pthread_t *)&xmmword_1008DDF68, 0LL, (void *(__cdecl *)(void *))sub_1000ABAB8, 0LL);
  bzero(qword_1008DE070, 0x3B0uLL);
  uint64_t v0 = (char *)malloc(0x50uLL);
  *(void *)uint64_t v0 = malloc(0x320uLL);
  *((void *)v0 + 1) = 100LL;
  pthread_mutex_init((pthread_mutex_t *)(v0 + 16), 0LL);
  qword_1008DE418 = (uint64_t)v0;
  pthread_cond_init(&stru_1008DE078, 0LL);
  pthread_mutex_init(&stru_1008DE0A8, 0LL);
  pthread_create((pthread_t *)qword_1008DE070, 0LL, (void *(__cdecl *)(void *))sub_1000ACA04, 0LL);
  pthread_mutex_lock(&stru_1008DE458);
  while (!(_DWORD)qword_1008DE058 || dword_1008DE0E8 == 0)
  {
    sub_1001EE0E4("[bm3_usb][Initialize] -- Before calling pthread_cond_wait()");
    pthread_cond_wait(&stru_1008DE428, &stru_1008DE458);
    sub_1001EE0E4("[bm3_usb][Initialize] -- After calling pthread_cond_wait()");
    if (byte_1008DE498 == 1)
    {
      sub_1001EE0E4("[bm3_usb][Initialize] -- gFoundUSBController is false -- calling break()");
      break;
    }
  }

  uint64_t v2 = pthread_mutex_unlock(&stru_1008DE458);
  uint64_t v3 = (CFRunLoopRef *)&xmmword_1008DDFF8 + 1;
  if (!qword_1008DE050)
  {
    sub_1001EE0E4("[bm3_usb][Initialize] -- gIOThreadInfo.runloop is NULL -- Initialization failed");
    pthread_mutex_destroy((pthread_mutex_t *)&xmmword_1008DDFC8);
    pthread_cond_destroy((pthread_cond_t *)&xmmword_1008DE008);
    uint64_t v2 = sub_1000ACB3C();
    if (!qword_1008DE050)
    {
      sub_1001EE0E4("[bm3_usb][OI_HciIfc_Init_USB] -- Initialization failed");
      return 114LL;
    }
  }

  uint64_t v51 = (timespec)xmmword_1006BBCC0;
  sub_1000AB3A0(v2, dword_1008DE048);
  int v4 = dword_1008DDFC0;
  if (dword_1008DDFC0)
  {
    int v4 = 0;
  }

  else
  {
    do
    {
      unsigned int v5 = v4;
      sleep(1u);
      int v4 = v5 + 1;
      if (dword_1008DDFC0) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = v5 >= 0xE;
      }
    }

    while (!v6);
    uint64_t v3 = (CFRunLoopRef *)&xmmword_1008DDFF8 + 1;
    if (!dword_1008DDFC0)
    {
      sub_1000AB838();
      sub_1001EE0E4("[bm3_usb] No matching services found after %d seconds -- returned OI_FAIL");
      return 114LL;
    }
  }

  sub_1001EE0E4("[bm3_usb] Matching services found after %d seconds", v4);
  BOOL v7 = (char *)&xmmword_1008DDFF8 + 8;
  uint64_t v8 = qword_1008DE060;
  if (qword_1008DE060) {
    goto LABEL_20;
  }
  do
  {
    pthread_mutex_lock((pthread_mutex_t *)&xmmword_1008DDFC8);
    if (dword_1008DDFC0 < 1) {
      goto LABEL_119;
    }
    uint64_t v15 = 0LL;
    do
    {
      uint64_t v16 = *((void *)&xmmword_1008DDF68 + v15 + 1);
      if (*(_DWORD *)(v16 + 4)) {
        goto LABEL_47;
      }
      *(_DWORD *)(v16 + 4) = 1;
      sub_1001EE0E4("[bm3_usb][BTDeviceOpen] called\n");
      int v17 = (*(uint64_t (**)(void))(**(void **)(v16 + 32) + 232LL))(*(void *)(v16 + 32));
      if (v17)
      {
        int v18 = v17;
        if (v17 == -536870203)
        {
          sub_1001EE0E4("[bm3_usb] Bluetooth device already in use: %s [0x%08lx]\n");
        }

        else
        {
          sub_1001EE0E4("[bm3_usb] USBDeviceOpenSeize failed with %d\n", v17);
          sub_1001EE0E4("[bm3_usb][BTDeviceOpen] exited\n");
        }

        sub_1001EE0E4("[bm3_usb] BTDeviceOpen failed with %d\n", v18);
        goto LABEL_47;
      }

      *(_DWORD *)uint64_t v16 = 1;
      sub_1001EE0E4("[bm3_usb][BTDeviceOpen] exited\n");
      uint64_t v53 = 0;
      sub_1001EE0E4( "[bm3_usb] Configuring bluetooth device: %s [0x%08lx]\n",  *(const char **)(v16 + 8),  *(unsigned int *)(v16 + 16));
      *(void *)(v16 + 40) = 0LL;
      unsigned __int16 v19 = (void *)(v16 + 40);
      *(void *)(v16 + 80) = 0LL;
      unsigned int v20 = (CFRunLoopSourceRef *)(v16 + 80);
      *(void *)(v16 + 88) = 0LL;
      unsigned int v21 = (CFRunLoopSourceRef *)(v16 + 88);
      *(void *)(v16 + 48) = 0LL;
      *(_BYTE *)(v16 + 4110) = 2;
      *(_BYTE *)(v16 + 97) = 4;
      __int16 v22 = (*(uint64_t (**)(void, uint64_t))(**(void **)(v16 + 32) + 144LL))( *(void *)(v16 + 32),  v16 + 96);
      if (v22)
      {
        int v23 = v22;
        sub_1001EE0E4("[bm3_usb] GetDeviceSpeed failed with 0x%x\n");
        goto LABEL_42;
      }

      uint64_t v24 = (*(uint64_t (**)(void, unsigned __int8 *))(**(void **)(v16 + 32) + 152LL))( *(void *)(v16 + 32),  &v53);
      if (v24)
      {
        int v23 = v24;
        sub_1001EE0E4("[bm3_usb] GetNumberOfConfigurations failed with 0x%x\n");
        goto LABEL_42;
      }

      if (!v53) {
        goto LABEL_114;
      }
      uint64_t v25 = 0;
      uint64_t v50 = (_WORD *)(v16 + 22);
      while (1)
      {
        uint64_t v52 = 0LL;
        uint64_t v26 = (*(uint64_t (**)(void, void, uint64_t *))(**(void **)(v16 + 32) + 168LL))( *(void *)(v16 + 32),  v25,  &v52);
        if (v26)
        {
          int v23 = v26;
          sub_1001EE0E4("[bm3_usb] GetConfigurationDescriptorPtr failed with 0x%x\n");
          goto LABEL_42;
        }

        int v27 = (*(uint64_t (**)(void, void))(**(void **)(v16 + 32) + 184LL))( *(void *)(v16 + 32),  *(unsigned __int8 *)(v52 + 5));
        if (v27)
        {
          int v23 = v27;
          sub_1001EE0E4("[bm3_usb] SetConfiguration failed with 0x%x\n");
          goto LABEL_42;
        }

        int v58 = 0xFFFF00010001FFFFLL;
        int v23 = -536870212;
        if (!(*(unsigned int (**)(void, uint64_t))(**(void **)(v16 + 32) + 104LL))( *(void *)(v16 + 32),  v16 + 20))
        {
          int v23 = -536870212;
          if (!(*(unsigned int (**)(void, _WORD *))(**(void **)(v16 + 32) + 112LL))( *(void *)(v16 + 32),  v50))
          {
            uint64_t v59 = 0;
            void *v19 = 0LL;
            *(void *)(v16 + 48) = 0LL;
            int v23 = (*(uint64_t (**)(void, unint64_t *, io_object_t *))(**(void **)(v16 + 32) + 224LL))( *(void *)(v16 + 32),  &v58,  &v59);
            if (!v23) {
              break;
            }
          }
        }

LABEL_97:
                  (*(void (**)(uint64_t))(*(void *)v55 + 24LL))(v55);
                  goto LABEL_98;
                }

                int v23 = -1;
              }

              BOOL v7 = (_BYTE *)(&xmmword_1008DDFF8 + 8);
              goto LABEL_95;
            }

            int v23 = v39;
            BOOL v7 = (_BYTE *)(&xmmword_1008DDFF8 + 8);
            goto LABEL_97;
          }

          if (v54 == *(_BYTE *)(v16 + 25))
          {
            *(void *)(v16 + 64) = theInterface;
            *(void *)(v16 + 48) = v55;
          }

          else
          {
            (*(void (**)(uint64_t))(*(void *)v55 + 24LL))(v55);
            ((void (*)(IOCFPlugInInterface **))(*theInterface)->Release)(theInterface);
          }

            unsigned int v20 = 3308;
            goto LABEL_98;
          }
        }

        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }
    }

    else
    {
      sub_1001EE2A0();
    }

    unsigned int v20 = 3308;
    goto LABEL_32;
  }

  BOOL v7 = *(unsigned __int8 **)(a3 + 8);
  uint64_t v8 = *v7;
  if ((v8 & 0x7F) == 0x7E && *(unsigned __int16 *)(a3 + 16) >= 7u)
  {
    int v10 = (v8 & 0x80u) == 0;
    uint64_t v9 = bswap32(*(unsigned __int16 *)(v7 + 5)) >> 16;
    int v23 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v6 + 112);
    if (v23)
    {
      v23(a1, a2, v9, (v8 >> 7) ^ 1);
      return 0LL;
    }

    unsigned __int16 v11 = 8;
  }

  else
  {
    LOWORD(v9) = 0;
    int v10 = 0;
    unsigned __int16 v11 = 10;
  }

  sub_1000EB580(a1, a2, v9, v10, v11);
  return 0LL;
}

        if (!--v14) {
          return sub_100242FAC((uint64_t)v73);
        }
      }

      if ((void)v84 == *(void *)*k && *((void *)&v84 + 1) == *(void *)(*k + 8))
      {
        uint64_t v25 = (os_log_s *)qword_1008F7600;
        if (!os_log_type_enabled((os_log_t)qword_1008F7600, OS_LOG_TYPE_ERROR)) {
          goto LABEL_65;
        }
        sub_1003D0100((uint64_t)v8, (uint64_t)buf);
        uint64_t v26 = buf;
        if (v76[9] < 0) {
          uint64_t v26 = *(_BYTE **)buf;
        }
        *(_DWORD *)__p = 136315138;
        *(void *)&__p[4] = v26;
        _os_log_error_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "Received invalid non-magic key from %s",  __p,  0xCu);
        if ((v76[9] & 0x80000000) == 0) {
          goto LABEL_65;
        }
        int v27 = *(void **)buf;
        goto LABEL_58;
      }

      if (qword_1008D5F20 != -1) {
        dispatch_once(&qword_1008D5F20, &stru_100888CB0);
      }
      sub_100621334(qword_1008D5F18, v74, *k);
      if (v10)
      {
        int v23 = (void *)sub_1002E6C74();
        uint64_t v24 = 14LL;
      }

      else
      {
        if (v72 && !v8[989])
        {
          if (!v8[988]) {
            goto LABEL_52;
          }
          if (qword_1008D60C0 != -1) {
            dispatch_once(&qword_1008D60C0, &stru_100888BD0);
          }
        }

        int v23 = (void *)sub_1002E6C74();
        uint64_t v24 = 11LL;
      }

      uint64_t v13 = (*(uint64_t (**)(void))(*v23 + 8 * v24))();
LABEL_52:
      __int16 v28 = (os_log_s *)qword_1008F7600;
      if (!v13)
      {
        if (os_log_type_enabled((os_log_t)qword_1008F7600, OS_LOG_TYPE_INFO))
        {
          sub_1003D0100((uint64_t)v8, (uint64_t)buf);
          uint64_t v30 = buf;
          if (v76[9] < 0) {
            uint64_t v30 = *(_BYTE **)buf;
          }
          *(_DWORD *)__p = 141558275;
          *(void *)&__p[4] = 1752392040LL;
          uint64_t v79 = 2081;
          uint64_t v80 = v30;
          _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_INFO,  "Successfully stored non-magic key to storage for device %{private, mask.hash}s ",  __p,  0x16u);
          if ((v76[9] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }

        uint64_t v13 = 0;
        goto LABEL_65;
      }

      if (!os_log_type_enabled((os_log_t)qword_1008F7600, OS_LOG_TYPE_ERROR)) {
        goto LABEL_65;
      }
      sub_1003D0100((uint64_t)v8, (uint64_t)__p);
      __int16 v29 = __p;
      if (v81 < 0) {
        __int16 v29 = *(_BYTE **)__p;
      }
      *(_DWORD *)__int128 buf = 141558531;
      *(void *)&uint8_t buf[4] = 1752392040LL;
      *(_WORD *)&_BYTE buf[12] = 2081;
      *(void *)uint64_t v76 = v29;
      *(_WORD *)&v76[8] = 1024;
      uint64_t v77 = v13;
      _os_log_error_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "Failed to store non-magic key to storage for device %{private, mask.hash}s with error %d",  buf,  0x1Cu);
      if ((v81 & 0x80000000) == 0)
      {
LABEL_65:
        unsigned int v20 = *((unsigned __int16 *)k - 4);
        goto LABEL_66;
      }

      int v27 = *(void **)__p;
LABEL_58:
      operator delete(v27);
      goto LABEL_65;
    }
  }

  return sub_100242FAC((uint64_t)v73);
}

  uint64_t v47 = sub_1002E6E00();
  sub_10002418C(buf, "CONNECTION");
  sub_10002418C(__p, "LeConnectionMagnetTimeDurationFromStageOneToDisabledValue");
  unsigned int v48 = (*(uint64_t (**)(uint64_t, uint8_t *, void **, int *))(*(void *)v47 + 88LL))(v47, buf, __p, &v78);
  if (v84 < 0) {
    operator delete(__p[0]);
  }
  if (v94 < 0)
  {
    operator delete(*(void **)buf);
    if (!v48) {
      goto LABEL_105;
    }
  }

  else if (!v48)
  {
    goto LABEL_105;
  }

  uint64_t v49 = (os_log_s *)qword_1008F7620;
  if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v78;
    _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEFAULT,  "LeConnectionMagnetTimeDurationFromStageOneToDisabledValue =%d (override)",  buf,  8u);
  }

  sub_100242FAC((uint64_t)v79);

  return v11;
}

LABEL_113:
      IOObjectRelease(v59);
      BOOL v7 = (char *)&xmmword_1008DDFF8 + 8;
LABEL_114:
      uint64_t v46 = sub_1000ACEB8(v16, 0);
      if (v46)
      {
        int v23 = v46;
        sub_1001EE0E4("[bm3_usb] BTDeviceSetPipeIdlePolicy failed with 0x%x\n");
        goto LABEL_42;
      }

      uint64_t v47 = (*(uint64_t (**)(void, uint64_t))(*(void *)*v19 + 32LL))(*v19, v16 + 80);
      if (!v47)
      {
        CFRunLoopAddSource(v3[10], *(CFRunLoopSourceRef *)(v16 + 80), kCFRunLoopDefaultMode);
        uint64_t v47 = (*(uint64_t (**)(void, uint64_t))(**(void **)(v16 + 48) + 32LL))( *(void *)(v16 + 48),  v16 + 88);
        if (!v47)
        {
          CFRunLoopAddSource(v3[10], *(CFRunLoopSourceRef *)(v16 + 88), kCFRunLoopDefaultMode);
          *((void *)v7 + 12) = v16;
          goto LABEL_121;
        }
      }

      int v23 = v47;
      sub_1001EE0E4("[bm3_usb] CreateInterfaceAsyncEventSource failed with 0x%x\n");
LABEL_42:
      if (*v20)
      {
        CFRunLoopRemoveSource(v3[10], *v20, kCFRunLoopDefaultMode);
        CFRunLoopSourceRef *v20 = 0LL;
      }

      if (*v21)
      {
        CFRunLoopRemoveSource(v3[10], *v21, kCFRunLoopDefaultMode);
        *unsigned int v21 = 0LL;
      }

      sub_1001EE0E4("[bm3_usb] error in BTDeviceConfigure");
      sub_1001EE0E4("[bm3_usb] BTDeviceConfigure failed with %d\n", v23);
      sub_1000AB964(v16);
LABEL_47:
      ++v15;
    }

    while (v15 < dword_1008DDFC0);
LABEL_119:
    if (!*((void *)v7 + 12))
    {
      sub_1001EE0E4("[bm3_usb] Waiting for bluetooth devices...\n");
      if (pthread_cond_timedwait_relative_np( (pthread_cond_t *)&xmmword_1008DE008,  (pthread_mutex_t *)&xmmword_1008DDFC8,  &v51) == 60)
      {
        pthread_mutex_unlock((pthread_mutex_t *)&xmmword_1008DDFC8);
        sub_1001EE0E4("[bm3_usb] Timed out waiting for bluetooth devices\n");
        sub_1000AB838();
        sub_1001EE0E4( "[bm3_usb][OI_HciIfc_Init_USB] -- pthread_cond_timedwait_relative_np == ETIMEOUT",  *(void *)byte7);
        return 114LL;
      }
    }

          unsigned int v21 = *((unsigned __int16 *)a1 + 6);
          if (v22 <= v21) {
            goto LABEL_133;
          }
          break;
      }
    }

    *((_BYTE *)a1 + 15) = 1;
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_30:
    uint64_t v30 = 0;
    *((_BYTE *)a1 + 15) = 1;
    __int16 v28 = v24;
    goto LABEL_31;
  }

  int v23 = 0LL;
LABEL_133:
  if (a3 >= 4)
  {
    if (*((_BYTE *)a1 + 15))
    {
LABEL_135:
      unsigned int v12 = 411LL;
      goto LABEL_136;
    }

    if (!v23)
    {
      sub_100177B78(v128, v126, v127, v11 & 1, (uint64_t)v132);
      return;
    }

    *(void *)__int128 buf = 0LL;
    if (sub_100171EC4(v127, (uint64_t *)buf))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"cid %d not found", v95, v96, v97, v98, v99, v100, v101, v127);
        uint64_t v102 = (os_log_s *)sub_100086554(0x2Fu);
        if (os_log_type_enabled(v102, OS_LOG_TYPE_ERROR)) {
          sub_10065B898();
        }
      }
    }

    else
    {
      uint64_t v103 = *(_BYTE **)sub_10017AB4C(*(unsigned int **)buf);
      uint64_t v104 = sub_10017AB4C(*(unsigned int **)buf);
      sub_1001967F4("aaad", 5u, 0LL, v103, v126, v105, v106, v107, *(unsigned __int16 *)(v104 + 8));
    }

    goto LABEL_144;
  }

    uint64_t v96 = sub_1001EDDCC();
    *(_DWORD *)__int128 buf = 136446210;
    uint64_t v155 = v96;
    _os_log_impl((void *)&_mh_execute_header, v77, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    goto LABEL_114;
  }

  if (v62 == 1)
  {
    uint64_t v68 = 8 * v66 + 112;
    if (v68 < v65 || v41 > v66)
    {
      unsigned int v148 = v66;
      sub_1001EE134( (uint64_t)"LE_ScaleDataLength Capping Tx with 1M for lmHandle 0x%x ceClassicAllowance %d txTime %d >= %d optimalTx Bytes %d Cap txTime and optimalTxBytes rxPhy %d",  v70,  v71,  v72,  v73,  v74,  v75,  v76,  *a1);
      uint64_t v77 = (os_log_s *)sub_100086554(0x42u);
      if (!os_log_type_enabled(v77, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_114;
      }
      goto LABEL_113;
    }
  }

    [v21 addObject:v25];
LABEL_114:
    sub_100242CD8(&v89);
    goto LABEL_73;
  }

  if (v56 == 146)
  {
    uint64_t v61 = (os_log_s *)qword_1008F75B0;
    if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v98 = v25;
      _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEFAULT,  "Stalling updates to device %{public}@ as it is performing an MTU exchange",  buf,  0xCu);
    }

    if ([*(id *)(a1 + 488) containsObject:v25])
    {
      uint64_t v62 = (os_log_s *)qword_1008F75B0;
      if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)__int128 buf = 138543362;
        uint64_t v98 = v25;
        _os_log_fault_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_FAULT,  "Already stalling device %{public}@",  buf,  0xCu);
      }
    }

    [*(id *)(a1 + 488) addObject:v25];
    uint64_t v79 = 1;
    goto LABEL_114;
  }

  if (v56 != 410)
  {
    uint64_t v57 = (os_log_s *)qword_1008F75B0;
    if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = v73.n128_u32[0];
      uint64_t v98 = v25;
      uint64_t v99 = 1024;
      LODWORD(v100) = v56;
      _os_log_error_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_ERROR,  "Failed to send update to device %{public}@ with result %{bluetooth:OI_STATUS}u",  buf,  0x12u);
    }

    goto LABEL_113;
  }

  uint64_t v70 = (os_log_s *)qword_1008F75B0;
  if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v70,  OS_LOG_TYPE_DEFAULT,  "TX queue is full - stalling all updates",  buf,  2u);
  }

  *(_BYTE *)(a1 + 480) = 1;
  [obj removeObjectsInArray:v21];
  uint64_t v71 = [obj copy];
  uint64_t v72 = *__p;
  void *__p = v71;

  sub_100242CD8(&v89);
}

  uint64_t v60 = sub_1002E6E00();
  sub_10002418C(buf, "CONNECTION");
  sub_10002418C(__p, "LeConnectionThirdPartyAppTimeDurationFromDisabledToStageOneValue");
  uint64_t v61 = (*(uint64_t (**)(uint64_t, uint8_t *, void **, int *))(*(void *)v60 + 88LL))(v60, buf, __p, &v76);
  if (v84 < 0) {
    operator delete(__p[0]);
  }
  if (v94 < 0)
  {
    operator delete(*(void **)buf);
    if (!v61) {
      goto LABEL_121;
    }
  }

  else if (!v61)
  {
    goto LABEL_121;
  }

  uint64_t v62 = (os_log_s *)qword_1008F7620;
  if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v76;
    _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEFAULT,  "LeConnectionThirdPartyAppTimeDurationFromDisabledToStageOneValue =%d (override)",  buf,  8u);
  }

LABEL_121:
    pthread_mutex_unlock((pthread_mutex_t *)&xmmword_1008DDFC8);
    uint64_t v8 = *((void *)v7 + 12);
  }

  while (!v8);
LABEL_20:
  if ((sub_1000BC030((pthread_mutex_t *)(v8 + 4112)) & 1) == 0)
  {
    sub_1001EE0E4("[bm3_usb] writeMutex initialization failed...\n");
    sub_1000AB838();
    sub_1001EE0E4( "[bm3_usb][OI_HciIfc_Init_USB] -- OI_Mutex_Init(writeMutex) failed -- returned OI_FAIL",  *(void *)byte7);
    return 114LL;
  }

  if ((sub_1000BC030((pthread_mutex_t *)(*((void *)v7 + 12) + 4176LL)) & 1) == 0)
  {
    sub_1001EE0E4("[bm3_usb] readMutex initialization failed...\n");
    sub_1000AB838();
    sub_1001EE0E4( "[bm3_usb][OI_HciIfc_Init_USB] -- OI_Mutex_Init(readMutex) failed -- returned OI_FAIL",  *(void *)byte7);
    return 114LL;
  }

  uint64_t v9 = *((void *)v7 + 12);
  int v10 = sub_1000A9268(v9, 0);
  if (v10) {
    goto LABEL_129;
  }
  unsigned __int16 v11 = sub_1000A93E4( v9,  4,  0,  (unsigned __int16)((*(unsigned __int16 *)(v9 + 102) + 256)
  if (!v11)
  {
LABEL_128:
    sub_1001EE0E4("[bm3_usb] PacketBufferCreate failed");
    int v10 = -1;
    goto LABEL_129;
  }

  int v10 = sub_1000ACF54((uint64_t)v11);
  if (v10)
  {
LABEL_129:
    sub_1001EE0E4("[bm3_usb] BTDeviceStart failed with %d\n", v10);
    pthread_mutex_unlock((pthread_mutex_t *)&xmmword_1008DDFC8);
    sub_1000AB838();
    sub_1001EE0E4("[bm3_usb][OI_HciIfc_Init_USB] -- BTDeviceStart() failed -- returned OI_FAIL", *(void *)byte7a);
    return 114LL;
  }

  unsigned int v12 = sub_1000A93E4( v9,  2,  0,  (unsigned __int16)((*(unsigned __int16 *)(v9 + 118) + 2047)
  if (!v12) {
    goto LABEL_128;
  }
  int v10 = sub_1000ACFAC((uint64_t)v12);
  if (v10) {
    goto LABEL_129;
  }
  uint64_t v13 = *((void *)v7 + 12);
  uint64_t result = 0LL;
  if (v13)
  {
    word_1008DE420 = *(_WORD *)(v13 + 20);
    word_1008DE422 = *(_WORD *)(v13 + 22);
  }

  return result;
}

          *(_DWORD *)(*(void *)(a3 + 16) + 24 * v55 + 16) = v57;
          v5 += 24;
          uint64_t v59 = *(void *)(a3 + 16);
          uint64_t v60 = (unint64_t)&v100[-*(int *)(v59 + 24 * v55 + 16)];
          if (v60 < (unint64_t)v5)
          {
            *uint64_t v101 = 1;
            *(_DWORD *)(*(void *)(a3 + 16) + 24 * v55 + 16) += v60 - (_DWORD)v5;
            uint64_t v59 = *(void *)(a3 + 16);
          }

          uint64_t v100 = (_BYTE *)v60;
          *(void *)(v59 + 24 * v55 + 8) = v60;
          uint64_t v61 = *(void *)(a3 + 16) + 24 * v55;
          uint64_t v62 = *(_BYTE **)(v61 + 8);
          uint64_t v63 = *(int *)(v61 + 16);
          if ((v58 & 1) != 0)
          {
            uint64_t v64 = v6 - (unsigned __int16)v9;
            uint64_t v65 = v63;
          }

          else
          {
            uint64_t v66 = v10;
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
            int v10 = v66;
            uint64_t v64 = 0;
            uint64_t v65 = *(_DWORD *)(*(void *)(a3 + 16) + 24 * v55 + 16);
          }

          if (v64 >= v65)
          {
            if ((int)v63 >= 1)
            {
              uint64_t v67 = (char *)(v7 + (unsigned __int16)v9);
              uint64_t v68 = &v62[v63];
              do
              {
                uint64_t v69 = *v67++;
                *v62++ = v69;
              }

              while (v62 < v68);
              uint64_t v65 = *(_DWORD *)(*(void *)(a3 + 16) + 24 * v55 + 16);
            }

            uint64_t v9 = (v9 + v65);
          }

          else
          {
            int v10 = 1;
          }

          if (!*v101)
          {
            continue;
          }

          break;
        }

        unsigned int v12 = v55 + 1;
        break;
      default:
        return result;
    }

  if (*((_BYTE *)a3 + 14) == 2)
  {
    unsigned int v94 = *((unsigned __int16 *)a3 + 6);
    *((_WORD *)a3 + 5) = v94;
  }

  else
  {
    unsigned int v94 = *((unsigned __int16 *)a3 + 5);
  }

  *((_BYTE *)a3 + 14) = 15;
  if (v13 != v94) {
    sub_1001EE2A0();
  }
  return 0LL;
}

  uint64_t v63 = sub_1002E6E00();
  sub_10002418C(buf, "CONNECTION");
  sub_10002418C(__p, "LeConnectionThirdPartyAppStageOneToDisabledValue");
  uint64_t v64 = (*(uint64_t (**)(uint64_t, uint8_t *, void **, int *))(*(void *)v63 + 88LL))(v63, buf, __p, &v75);
  if (v84 < 0) {
    operator delete(__p[0]);
  }
  if (v94 < 0)
  {
    operator delete(*(void **)buf);
    if (!v64) {
      goto LABEL_129;
    }
  }

  else if (!v64)
  {
    goto LABEL_129;
  }

  uint64_t v65 = (os_log_s *)qword_1008F7620;
  if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v75;
    _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_DEFAULT,  "LeConnectionThirdPartyAppStageOneToDisabledValue =%d (override)",  buf,  8u);
  }

void sub_1000AB3A0(uint64_t a1, io_iterator_t a2)
{
  io_object_t v3 = IOIteratorNext(a2);
  if (v3)
  {
    io_registry_entry_t v4 = v3;
    unsigned int v5 = (CFRunLoopRef *)&xmmword_1008DDFF8 + 1;
    do
    {
      memset(name, 0, 128);
      int v24 = 0;
      theInterface = 0LL;
      uint64_t v23 = 0LL;
      SInt32 theScore = 0;
      __int128 v39 = 0u;
      __int128 v40 = 0u;
      __int128 v37 = 0u;
      __int128 v38 = 0u;
      __int128 v35 = 0u;
      __int128 v36 = 0u;
      __int128 v33 = 0u;
      __int128 v34 = 0u;
      __int128 v32 = 0u;
      __int128 v30 = 0u;
      __int128 v31 = 0u;
      __int128 v28 = 0u;
      __int128 v29 = 0u;
      __int128 v26 = 0u;
      __int128 v27 = 0u;
      *(_OWORD *)buffer = 0u;
      sub_1001EE0E4("[bm3_usb][RegisterBTDevice] called\n");
      if (IORegistryEntryGetName(v4, name))
      {
        __strlcpy_chk(buffer, "unknown", 256LL, 256LL);
      }

      else
      {
        BOOL v6 = CFStringCreateWithCString(kCFAllocatorDefault, name, 0x600u);
        CFStringGetCString(v6, buffer, 256LL, 0x600u);
        CFRelease(v6);
      }

      BOOL v7 = CFUUIDGetConstantUUIDWithBytes( 0LL,  0x9Du,  0xC7u,  0xB7u,  0x80u,  0x9Eu,  0xC0u,  0x11u,  0xD4u,  0xA5u,  0x4Fu,  0,  0xAu,  0x27u,  5u,  0x28u,  0x61u);
      uint64_t v8 = CFUUIDGetConstantUUIDWithBytes( 0LL,  0xC2u,  0x44u,  0xE8u,  0x58u,  0x10u,  0x9Cu,  0x11u,  0xD4u,  0x91u,  0xD4u,  0,  0x50u,  0xE4u,  0xC6u,  0x42u,  0x6Fu);
      if (IOCreatePlugInInterfaceForService(v4, v7, v8, &theInterface, &theScore))
      {
        sub_1001EE0E4("[bm3_usb][RegisterBTDevice] -- USB -- IOCreatePlugInInterfaceForService () failed");
      }

      else
      {
        uint64_t v9 = theInterface;
        int v10 = "[bm3_usb][RegisterBTDevice] -- USB -- IOCreatePlugInInterfaceForService () failed";
        if (!theInterface) {
          goto LABEL_22;
        }
        unsigned __int16 v11 = v5;
        QueryInterface = (*theInterface)->QueryInterface;
        uint64_t v13 = CFUUIDGetConstantUUIDWithBytes( kCFAllocatorSystemDefault,  0x56u,  0xADu,  8u,  0x9Du,  0x87u,  0x8Du,  0x4Bu,  0xEAu,  0xA1u,  0xF5u,  0x2Cu,  0x8Du,  0xC4u,  0x3Eu,  0x8Au,  0x98u);
        CFUUIDBytes v14 = CFUUIDGetUUIDBytes(v13);
        int v15 = ((uint64_t (*)(IOCFPlugInInterface **, void, void, uint64_t *))QueryInterface)( v9,  *(void *)&v14.byte0,  *(void *)&v14.byte8,  &v23);
        ((void (*)(IOCFPlugInInterface **))(*theInterface)->Release)(theInterface);
        if (v15)
        {
          unsigned int v5 = v11;
          sub_1001EE0E4("[bm3_usb][RegisterBTDevice] -- USB -- QueryInterface () failed");
        }

        else
        {
          int v10 = "[bm3_usb][RegisterBTDevice] -- USB -- QueryInterface () failed";
          unsigned int v5 = v11;
          if (!v23) {
            goto LABEL_22;
          }
          int v16 = (*(uint64_t (**)(uint64_t, int *))(*(void *)v23 + 160LL))(v23, &v24);
          int v10 = "[bm3_usb][RegisterBTDevice] -- USB -- GetLocationID () failed";
          if (v16) {
            goto LABEL_22;
          }
          if (v11[10])
          {
            int v17 = v24;
            uint64_t v18 = v23;
            unsigned __int16 v19 = malloc(0x1098uLL);
            sub_1001EE0E4("[bm3_usb][BTDeviceCreate] called\n");
            bzero(v19, 0x1098uLL);
            *((void *)v19 + 1) = strdup(buffer);
            v19[4] = v17;
            *((void *)v19 + 4) = v18;
            if ((*(unsigned int (**)(uint64_t, _DWORD *))(*(void *)v18 + 32LL))(v18, v19 + 18))
            {
              unsigned int v5 = v11;
            }

            else
            {
              unsigned int v5 = v11;
              if (v11[10])
              {
                sub_1001EE0E4("[bm3_usb][BTDeviceCreate] calling CFRunLoopAddSource()\n");
                CFRunLoopAddSource(v11[10], *((CFRunLoopSourceRef *)v19 + 9), kCFRunLoopDefaultMode);
              }

              else
              {
                sub_1001EE0E4("[bm3_usb][BTDeviceCreate] gIOThreadInfo.runloop is NULL\n");
                free(*((void **)v19 + 1));
                free(v19);
                unsigned __int16 v19 = 0LL;
              }
            }

            sub_1001EE0E4("[bm3_usb][BTDeviceCreate] exited\n");
            if (!IOServiceAddInterestNotification( (IONotificationPortRef)xmmword_1008DE038,  v4,  "IOGeneralInterest",  (IOServiceInterestCallback)sub_1000ACC58,  v19,  v19 + 7))
            {
              sub_1001EE0E4("[bm3_usb][RegisterBTDevice] exited\n");
              if (v19)
              {
                pthread_mutex_lock((pthread_mutex_t *)&xmmword_1008DDFC8);
                uint64_t v20 = dword_1008DDFC0;
                if (dword_1008DDFC0 <= 9)
                {
                  ++dword_1008DDFC0;
                  *((void *)&xmmword_1008DDF68 + v20 + 1) = v19;
                }

                pthread_cond_signal((pthread_cond_t *)&xmmword_1008DE008);
                pthread_mutex_unlock((pthread_mutex_t *)&xmmword_1008DDFC8);
              }

              goto LABEL_23;
            }

            sub_1000ACDC0(v19);
            int v10 = "[bm3_usb][RegisterBTDevice] -- USB -- IOServiceAddInterestNotification () failed";
LABEL_22:
            sub_1001EE0E4(v10);
            goto LABEL_23;
          }

          sub_1001EE0E4("[bm3_usb][RegisterBTDevice] -- USB -- gIOThreadInfo.runloop is NULL");
        }
      }

void sub_1000AB838()
{
  if (qword_1008DE060)
  {
    sub_1000BC11C((pthread_mutex_t *)(qword_1008DE060 + 4112));
    sub_1000BC11C((pthread_mutex_t *)(qword_1008DE060 + 4176));
  }

  sub_1000ACB3C();
  pthread_mutex_lock((pthread_mutex_t *)&xmmword_1008DDFC8);
  qword_1008DE060 = 0LL;
  if (dword_1008DDFC0 >= 1)
  {
    uint64_t v0 = 0LL;
    do
      sub_1000ACDC0(*((_DWORD **)&xmmword_1008DDF68 + ++v0));
    while (v0 < dword_1008DDFC0);
  }

  pthread_mutex_unlock((pthread_mutex_t *)&xmmword_1008DDFC8);
  sub_1001EE0E4("[bm3_usb][DestroyIOThread] called\n");
  sub_1001EE0E4("[bm3_usb][DestroyIOThread] calling CFRunLoopStop()\n");
  CFRunLoopStop((CFRunLoopRef)qword_1008DE050);
  pthread_cancel((pthread_t)xmmword_1008DDF68);
  pthread_join((pthread_t)xmmword_1008DDF68, 0LL);
  qword_1008DE050 = 0LL;
  sub_1001EE0E4("[bm3_usb][DestroyIOThread] gIOThreadInfo.runloop is set to NULL\n");
  IONotificationPortDestroy((IONotificationPortRef)xmmword_1008DE038);
  if (dword_1008DE048)
  {
    IOObjectRelease(dword_1008DE048);
    dword_1008DE048 = 0;
  }

  sub_1001EE0E4("[bm3_usb][DestroyIOThread] exited\n");
  pthread_mutex_destroy((pthread_mutex_t *)&xmmword_1008DDFC8);
  pthread_cond_destroy((pthread_cond_t *)&xmmword_1008DE008);
  sub_1001EE0E4("[bm3_usb][Cleanup] exited\n");
}

void sub_1000AB964(uint64_t a1)
{
  if (*(_DWORD *)a1)
  {
    *(_DWORD *)a1 = 0;
    if (qword_1008DE050)
    {
      io_object_t v2 = *(_DWORD *)(a1 + 28);
      if (v2) {
        IOObjectRelease(v2);
      }
      io_object_t v3 = *(__CFRunLoopSource **)(a1 + 80);
      if (v3)
      {
        CFRunLoopRemoveSource((CFRunLoopRef)qword_1008DE050, v3, kCFRunLoopDefaultMode);
        *(void *)(a1 + 80) = 0LL;
      }

      io_registry_entry_t v4 = *(__CFRunLoopSource **)(a1 + 88);
      if (v4)
      {
        CFRunLoopRemoveSource((CFRunLoopRef)qword_1008DE050, v4, kCFRunLoopDefaultMode);
        *(void *)(a1 + 88) = 0LL;
      }

      unsigned int v5 = *(__CFRunLoopSource **)(a1 + 72);
      if (v5)
      {
        CFRunLoopRemoveSource((CFRunLoopRef)qword_1008DE050, v5, kCFRunLoopDefaultMode);
        *(void *)(a1 + 72) = 0LL;
      }
    }

    if (*(void *)(a1 + 40))
    {
      sub_1001EE0E4("[bm3_usb] Closing firstInterface -- control, interrupt, and bulk pipe\n");
      (*(void (**)(void))(**(void **)(a1 + 40) + 72LL))(*(void *)(a1 + 40));
      *(void *)(a1 + 40) = 0LL;
      IODestroyPlugInInterface(*(IOCFPlugInInterface ***)(a1 + 56));
      (*(void (**)(void))(**(void **)(a1 + 56) + 24LL))(*(void *)(a1 + 56));
    }

    if (*(void *)(a1 + 48))
    {
      sub_1001EE0E4("[bm3_usb] Closing firstInterface -- Isoch pipe\n");
      (*(void (**)(void))(**(void **)(a1 + 48) + 72LL))(*(void *)(a1 + 48));
      *(void *)(a1 + 48) = 0LL;
      IODestroyPlugInInterface(*(IOCFPlugInInterface ***)(a1 + 64));
      (*(void (**)(void))(**(void **)(a1 + 64) + 24LL))(*(void *)(a1 + 64));
    }

    if (*(void *)(a1 + 32))
    {
      sub_1001EE0E4("[bm3_usb] Closing USB device interface\n");
      (*(void (**)(void))(**(void **)(a1 + 32) + 72LL))(*(void *)(a1 + 32));
      *(void *)(a1 + 32) = 0LL;
    }
  }

  sub_1001EE0E4("[bm3_usb][BTDeviceClose] exited\n");
}

uint64_t sub_1000ABAB8()
{
  unsigned int v0 = 0;
  unint64_t v78 = 0LL;
  mach_port_t v1 = kIOMainPortDefault;
  io_object_t v2 = (_BYTE *)(&xmmword_1008DDFF8 + 8);
  while (1)
  {
    CFMutableDictionaryRef v3 = IOServiceMatching("IOUSBHostDevice");
    if (v3) {
      break;
    }
    sub_1001EE0E4("[bm3_usb][IOThreadFunc] -- USB -- Can't create a USB matching dictionary -- try again");
LABEL_136:
    sleep(1u);
    if (v0++ >= 0xF)
    {
      byte_1008DE498 = 1;
      sub_1001EE0E4("[bm3_usb][IOThreadFunc] -- Error -- Still cannot find USB Bluetooth Controller after 15 seconds ");
      pthread_mutex_lock(&stru_1008DE458);
      pthread_cond_signal(&stru_1008DE428);
      pthread_mutex_unlock(&stru_1008DE458);
      return 0LL;
    }
  }

  CFMutableDictionaryRef v4 = v3;
  sub_1001EE0E4("[bm3_usb][IOThreadFunc] -- USB -- calling GetProductAndVendorID()");
  io_iterator_t existing = 0;
  unsigned int v5 = IOServiceMatching("IOUSBHostDevice");
  if (IOServiceGetMatchingServices(v1, v5, &existing) || !existing)
  {
LABEL_133:
    int v61 = *((unsigned __int16 *)v2 + 528);
    if (*((_WORD *)v2 + 528) && word_1008DE422)
    {
      LODWORD(v78) = (unsigned __int16)word_1008DE422;
      HIDWORD(v78) = v61;
      goto LABEL_140;
    }

    CFRelease(v4);
    sub_1001EE0E4("[bm3_usb][IOThreadFunc] -- USB -- Can't obtain vendorID and productID -- try again");
    goto LABEL_136;
  }

  uint64_t v72 = v4;
  CFStringRef v6 = CFStringCreateWithCString(kCFAllocatorDefault, "USB Vendor Name", 0x600u);
  CFStringRef key = CFStringCreateWithCString(kCFAllocatorDefault, "USB Product Name", 0x600u);
  CFStringRef cf = CFStringCreateWithCString(kCFAllocatorDefault, "idVendor", 0x600u);
  CFStringRef v75 = CFStringCreateWithCString(kCFAllocatorDefault, "idProduct", 0x600u);
  CFStringRef v7 = CFStringCreateWithCString(kCFAllocatorDefault, "bDeviceClass", 0x600u);
  CFStringRef v74 = CFStringCreateWithCString(kCFAllocatorDefault, "locationID", 0x600u);
  theString1 = CFStringCreateWithCString(kCFAllocatorDefault, "Bluetooth USB Host Controller", 0x600u);
  io_object_t v8 = IOIteratorNext(existing);
  if (!v8)
  {
    sub_1001EE0E4("[bm3_usb][GetProductAndVendorID] -- Use internal Bluetooth USB Host Controller \n");
LABEL_132:
    IOObjectRelease(existing);
    CFRelease(v6);
    CFRelease(key);
    CFRelease(cf);
    CFRelease(v75);
    CFRelease(v7);
    CFRelease(v74);
    CFRelease(theString1);
    mach_port_t v1 = kIOMainPortDefault;
    io_object_t v2 = (char *)&xmmword_1008DDFF8 + 8;
    CFMutableDictionaryRef v4 = v72;
    goto LABEL_133;
  }

  io_registry_entry_t v9 = v8;
  unsigned int v69 = 0;
  unsigned int v70 = 0;
  char v71 = 0;
  do
  {
    CFMutableDictionaryRef properties = 0LL;
    if (!IORegistryEntryCreateCFProperties(v9, &properties, 0LL, 0))
    {
      uint64_t v79 = 0LL;
      uint64_t valuePtr = 0LL;
      Value = (const __CFString *)CFDictionaryGetValue(properties, v6);
      unsigned __int16 v11 = (const __CFString *)CFDictionaryGetValue(properties, key);
      unsigned int v12 = (const __CFNumber *)CFDictionaryGetValue(properties, cf);
      uint64_t v13 = (const __CFNumber *)CFDictionaryGetValue(properties, v75);
      CFUUIDBytes v14 = (const __CFNumber *)CFDictionaryGetValue(properties, v74);
      int v15 = (const __CFNumber *)CFDictionaryGetValue(properties, v7);
      if (CFNumberGetValue(v13, kCFNumberIntType, (char *)&valuePtr + 4))
      {
        if (CFNumberGetValue(v12, kCFNumberIntType, &valuePtr)
          && CFNumberGetValue(v15, kCFNumberIntType, &v79)
          && CFNumberGetValue(v14, kCFNumberIntType, (char *)&v79 + 4)
          && (v79 - 224) <= 0x1F
          && ((1 << (v79 + 32)) & 0x80008001) != 0)
        {
          CStringPtr = CFStringGetCStringPtr(v11, 0x600u);
          int v17 = CFStringGetCStringPtr(Value, 0x600u);
          sub_1001EE0E4("[bm3_usb][GetProductAndVendorID] -- Found USB Device : \n");
          sub_1001EE0E4("    USB Product Name = %s \n", CStringPtr);
          sub_1001EE0E4("     USB Vendor Name = %s \n", v17);
          sub_1001EE0E4("            idVendor = 0x%04x \n", valuePtr);
          sub_1001EE0E4("           idProduct = 0x%04x \n", HIDWORD(valuePtr));
          sub_1001EE0E4("         deviceClass = 0x%02x (%d) \n", v79, v79);
          sub_1001EE0E4("          locationID = 0x%08x \n", HIDWORD(v79));
          if (v11 && CFStringCompare(theString1, v11, 0LL) == kCFCompareEqualTo)
          {
            unsigned int v69 = valuePtr;
            char v71 = 1;
            unsigned int v70 = HIDWORD(valuePtr);
            goto LABEL_8;
          }

          if (valuePtr == 0x110A000005ACLL)
          {
            sub_1001EE0E4( "[bm3_usb][GetProductAndVendorID] -- idVendor = 0x%04x, idProduct = 0x%04x -- Apple USB-C to 3.5mm Headphon e Jack Adapter -- ignore\n");
            goto LABEL_8;
          }

          if (valuePtr == 0x341000000451LL)
          {
            sub_1001EE0E4( "[bm3_usb][GetProductAndVendorID] -- idVendor = 0x%04x, idProduct = 0x%04x -- Texas Instruments USB device -- ignore\n");
            goto LABEL_8;
          }

          uint64_t v87 = 0LL;
          theInterface = 0LL;
          memset(name, 0, 128);
          int v86 = 0;
          unsigned __int8 v85 = 0;
          SInt32 theScore = 0;
          memset(buffer, 0, sizeof(buffer));
          if (IORegistryEntryGetName(v9, name))
          {
            __strlcpy_chk(buffer, "unknown", 256LL, 256LL);
          }

          else
          {
            uint64_t v18 = CFStringCreateWithCString(kCFAllocatorDefault, name, 0x600u);
            CFStringGetCString(v18, (char *)buffer, 256LL, 0x600u);
            CFRelease(v18);
          }

          unsigned __int16 v19 = CFUUIDGetConstantUUIDWithBytes( 0LL,  0x9Du,  0xC7u,  0xB7u,  0x80u,  0x9Eu,  0xC0u,  0x11u,  0xD4u,  0xA5u,  0x4Fu,  0,  0xAu,  0x27u,  5u,  0x28u,  0x61u);
          uint64_t v20 = CFUUIDGetConstantUUIDWithBytes( 0LL,  0xC2u,  0x44u,  0xE8u,  0x58u,  0x10u,  0x9Cu,  0x11u,  0xD4u,  0x91u,  0xD4u,  0,  0x50u,  0xE4u,  0xC6u,  0x42u,  0x6Fu);
          if (!IOCreatePlugInInterfaceForService(v9, v19, v20, &theInterface, &theScore))
          {
            unsigned int v21 = theInterface;
            if (theInterface)
            {
              QueryInterface = (*theInterface)->QueryInterface;
              uint64_t v23 = CFUUIDGetConstantUUIDWithBytes( kCFAllocatorSystemDefault,  0x56u,  0xADu,  8u,  0x9Du,  0x87u,  0x8Du,  0x4Bu,  0xEAu,  0xA1u,  0xF5u,  0x2Cu,  0x8Du,  0xC4u,  0x3Eu,  0x8Au,  0x98u);
              CFUUIDBytes v24 = CFUUIDGetUUIDBytes(v23);
              int v25 = ((uint64_t (*)(IOCFPlugInInterface **, void, void, uint64_t *))QueryInterface)( v21,  *(void *)&v24.byte0,  *(void *)&v24.byte8,  &v87);
              ((void (*)(IOCFPlugInInterface **))(*theInterface)->Release)(theInterface);
              if (!v25)
              {
                if (v87)
                {
                  if ((*(unsigned int (**)(uint64_t, int *))(*(void *)v87 + 160LL))(v87, &v86)
                    || (__int128 v26 = malloc(0x1098uLL)) == 0LL)
                  {
                    (*(void (**)(uint64_t))(*(void *)v87 + 24LL))(v87);
                    goto LABEL_8;
                  }

                  __int128 v27 = v26;
                  bzero(v26 + 1, 0x1094uLL);
                  *((void *)v27 + 1) = strdup((const char *)buffer);
                  v27[4] = v86;
                  uint64_t v28 = v87;
                  *((void *)v27 + 4) = v87;
                  if ((*(unsigned int (**)(uint64_t))(*(void *)v28 + 232LL))(v28))
                  {
                    uint64_t v29 = v87;
LABEL_126:
                    (*(void (**)(uint64_t))(*(void *)v29 + 24LL))(v29);
LABEL_127:
                    free(v27);
                    goto LABEL_8;
                  }

                  *((void *)v27 + 5) = 0LL;
                  __int128 v30 = v27 + 10;
                  *__int128 v27 = 1;
                  *((void *)v27 + 6) = 0LL;
                  *((void *)v27 + 10) = 0LL;
                  *((void *)v27 + 11) = 0LL;
                  if ((*(unsigned int (**)(uint64_t, unsigned __int8 *))(*(void *)v28 + 152LL))(v28, &v85)
                    || !v85
                    || (uint64_t v83 = 0LL,
                        (*(unsigned int (**)(uint64_t, void, uint64_t *))(*(void *)v28 + 168LL))( v28,  0LL,  &v83)))
                  {
LABEL_121:
                    (*(void (**)(uint64_t))(*(void *)v28 + 72LL))(v28);
                    (*(void (**)(uint64_t))(*(void *)v87 + 24LL))(v87);
                    uint64_t v59 = (void *)*((void *)v27 + 1);
                    if (v59) {
                      free(v59);
                    }
                    uint64_t v60 = *((void *)v27 + 7);
                    if (v60) {
                      (*(void (**)(uint64_t))(*(void *)v60 + 24LL))(v60);
                    }
                    uint64_t v29 = *((void *)v27 + 8);
                    if (!v29) {
                      goto LABEL_127;
                    }
                    goto LABEL_126;
                  }

                  uint64_t v67 = v27;
                  uint64_t v68 = 0LL;
                  char v31 = 0;
                  unsigned __int8 v32 = 0;
                  uint64_t v66 = v27 + 10;
LABEL_41:
                  if ((*(unsigned int (**)(uint64_t, void))(*(void *)v28 + 184LL))( v28,  *(unsigned __int8 *)(v83 + 5)))
                  {
                    goto LABEL_119;
                  }

                  io_iterator_t iterator = 0;
                  unint64_t v93 = 0xFFFF00010001FFFFLL;
                  void *v30 = 0LL;
                  v30[1] = 0LL;
                  if ((*(unsigned int (**)(uint64_t, unint64_t *, io_iterator_t *))(*(void *)v28 + 224LL))( v28,  &v93,  &iterator))
                  {
                    goto LABEL_115;
                  }

                  *((_BYTE *)v27 + 24) = 0;
                  io_object_t v33 = IOIteratorNext(iterator);
                  if (!v33) {
                    goto LABEL_114;
                  }
                  io_service_t v34 = v33;
                  while (1)
                  {
                    uint64_t v92 = 0LL;
                    SInt32 v91 = 0;
                    __int128 v90 = 0LL;
                    char v89 = 0;
                    __int128 v35 = CFUUIDGetConstantUUIDWithBytes( 0LL,  0x2Du,  0x97u,  0x86u,  0xC6u,  0x9Eu,  0xF3u,  0x11u,  0xD4u,  0xADu,  0x51u,  0,  0xAu,  0x27u,  5u,  0x28u,  0x61u);
                    __int128 v36 = CFUUIDGetConstantUUIDWithBytes( 0LL,  0xC2u,  0x44u,  0xE8u,  0x58u,  0x10u,  0x9Cu,  0x11u,  0xD4u,  0x91u,  0xD4u,  0,  0x50u,  0xE4u,  0xC6u,  0x42u,  0x6Fu);
                    LODWORD(v35) = IOCreatePlugInInterfaceForService(v34, v35, v36, &v92, &v91);
                    IOObjectRelease(v34);
                    if ((_DWORD)v35) {
                      goto LABEL_114;
                    }
                    __int128 v37 = v92;
                    if (!v92) {
                      goto LABEL_114;
                    }
                    __int128 v38 = (*v92)->QueryInterface;
                    __int128 v39 = CFUUIDGetConstantUUIDWithBytes( kCFAllocatorSystemDefault,  0x87u,  0x52u,  0x66u,  0x3Bu,  0xC0u,  0x7Bu,  0x4Bu,  0xAEu,  0x95u,  0x84u,  0x22u,  3u,  0x2Fu,  0xABu,  0x9Cu,  0x5Au);
                    CFUUIDBytes v40 = CFUUIDGetUUIDBytes(v39);
                    if (((unsigned int (*)(IOCFPlugInInterface **, void, void, IOCFPlugInInterface ***))v38)( v37,  *(void *)&v40.byte0,  *(void *)&v40.byte8,  &v90))
                    {
                      BOOL v41 = 1;
                    }

                    else
                    {
                      BOOL v41 = v90 == 0LL;
                    }

                    if (v41) {
                      goto LABEL_111;
                    }
                    if (((unsigned int (*)(void))(*v90)[2].QueryInterface)())
                    {
                      ((void (*)(IOCFPlugInInterface **))(*v90)->Release)(v90);
LABEL_111:
                      int v58 = v92;
LABEL_113:
                      ((void (*)(IOCFPlugInInterface **))(*v58)->Release)(v58);
                      goto LABEL_114;
                    }

                    if (v89 == 1)
                    {
                      if (v68) {
                        ((void (*)(IOCFPlugInInterface **))(*v68)->Release)(v68);
                      }
                      uint64_t v68 = v92;
                      *((void *)v27 + 8) = v92;
                      uint64_t v50 = v90;
                      memset(v100, 0, sizeof(v100));
                      memset(v99, 0, 7);
                      if (((unsigned int (*)(IOCFPlugInInterface **))(*v90)[1]._reserved)(v90))
                      {
LABEL_112:
                        int v58 = v90;
                        goto LABEL_113;
                      }

                      uint64_t v51 = 0LL;
                      unsigned __int8 v101 = 0;
                      *((void *)v27 + 6) = v50;
LABEL_78:
                      if (!((unsigned int (*)(IOCFPlugInInterface **, void))(*v50)[2].Start)( v50,  v51)
                        && !((unsigned int (*)(IOCFPlugInInterface **, unsigned __int8 *))(*v50)[2].Release)( v50,  &v101)
                        && v101 == 2)
                      {
                        unsigned __int8 v53 = 1;
                        while (1)
                        {
                          __int16 v98 = 0;
                          char v97 = 0;
                          __int16 v96 = 0;
                          char v95 = 0;
                          if (((unsigned int (*)(IOCFPlugInInterface **, void, char *, __int16 *, char *, __int16 *, char *))(*v50)[3].AddRef)( v50,  v53,  (char *)&v98 + 1,  &v98,  &v97,  &v96,  &v95)
                            || v97 != 1)
                          {
                            break;
                          }

                          if (HIBYTE(v98) == 1)
                          {
                            uint64_t v55 = v100;
                          }

                          else
                          {
                            if (HIBYTE(v98)) {
                              break;
                            }
                            uint64_t v55 = v99;
                          }

                          v55[v51] = 1;
                          if (v101 < ++v53)
                          {
                            if (++v51 != 7) {
                              goto LABEL_78;
                            }
                            break;
                          }
                        }
                      }

                      ((void (*)(IOCFPlugInInterface **))(*v50)[1].QueryInterface)(v50);
                      uint64_t v56 = 0LL;
                      __int128 v27 = v67;
                      *((void *)v67 + 6) = 0LL;
                      char v57 = 1;
                      do
                      {
                        if (!v100[v56] || !v99[v56]) {
                          char v57 = 0;
                        }
                        ++v56;
                      }

                      while (v56 != 6);
                      ((void (*)(IOCFPlugInInterface **))(*v90)->Release)(v90);
                      if ((v57 & 1) == 0) {
                        goto LABEL_114;
                      }
                    }

                    else if (v89)
                    {
                      ((void (*)(IOCFPlugInInterface **))(*v90)->Release)(v90);
                      ((void (*)(IOCFPlugInInterface **))(*v92)->Release)(v92);
                    }

                    else
                    {
                      uint64_t v42 = *((void *)v27 + 7);
                      if (v42) {
                        (*(void (**)(uint64_t))(*(void *)v42 + 24LL))(v42);
                      }
                      *((void *)v27 + 7) = v92;
                      uint64_t v43 = v90;
                      v99[0] = 0;
                      uint64_t v44 = v43;
                      int v45 = ((uint64_t (*)(IOCFPlugInInterface **, unsigned __int8 *))(*v43)[2].Release)( v43,  v99);
                      char v46 = 0;
                      if (v45 || v99[0] != 3)
                      {
                        char v48 = 0;
                        char v47 = 0;
                      }

                      else
                      {
                        char v47 = 0;
                        char v48 = 0;
                        char v46 = 0;
                        for (unsigned __int8 i = 1; v99[0] >= i; ++i)
                        {
                          LOBYTE(v96) = 0;
                          unsigned __int8 v101 = 0;
                          __int16 v98 = 0;
                          *(_WORD *)uint64_t v100 = 0;
                          if (((unsigned int (*)(IOCFPlugInInterface **, void, __int16 *, unsigned __int8 *, char *, _BYTE *, __int16 *))(*v44)[3].AddRef)( v44,  i,  &v96,  &v101,  (char *)&v98 + 1,  v100,  &v98))
                          {
                            break;
                          }

                          if (HIBYTE(v98) == 3)
                          {
                            char v46 = 1;
                          }

                          else if (HIBYTE(v98) == 2)
                          {
                            if (v96 == 1)
                            {
                              char v48 = 1;
                            }

                            else
                            {
                              if ((_BYTE)v96) {
                                break;
                              }
                              char v47 = 1;
                            }
                          }

                          else if (HIBYTE(v98) || v96 != 3)
                          {
                            break;
                          }
                        }
                      }

                      ((void (*)(IOCFPlugInInterface **))(*v44)[1].QueryInterface)(v44);
                      __int128 v30 = v66;
                      *uint64_t v66 = 0LL;
                      ((void (*)(IOCFPlugInInterface **))(*v90)->Release)(v90);
                      if ((v46 & 1) == 0 || (v48 & 1) == 0)
                      {
                        __int128 v27 = v67;
LABEL_114:
                        IOObjectRelease(iterator);
                        char v31 = 1;
LABEL_115:
                        if (v85 <= ++v32)
                        {
                          *((_BYTE *)v27 + 25) = v31;
                          uint64_t v28 = *((void *)v27 + 4);
                          goto LABEL_121;
                        }

                        uint64_t v83 = 0LL;
                        uint64_t v28 = *((void *)v27 + 4);
                        if ((*(unsigned int (**)(uint64_t, void, uint64_t *))(*(void *)v28 + 168LL))( v28,  v32,  &v83))
                        {
LABEL_119:
                          *((_BYTE *)v27 + 25) = v31;
                          goto LABEL_121;
                        }

                        goto LABEL_41;
                      }

                      __int128 v27 = v67;
                      if ((v47 & 1) == 0) {
                        goto LABEL_114;
                      }
                    }

                    io_service_t v34 = IOIteratorNext(iterator);
                    if (!v34) {
                      goto LABEL_114;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

uint64_t sub_1000ACA04()
{
  dword_1008DE0E8 = 1;
  pthread_cond_signal(&stru_1008DE428);
  pthread_mutex_unlock(&stru_1008DE458);
  while (1)
  {
    pthread_mutex_lock(&stru_1008DE0A8);
    BOOL v0 = dword_1008DE0E8 == 0;
    BOOL v1 = dword_1008DE0E8 != 0;
    for (int i = dword_1008DE410; !v0 && i == 0; int i = dword_1008DE410)
    {
      pthread_cond_wait(&stru_1008DE078, &stru_1008DE0A8);
      BOOL v0 = dword_1008DE0E8 == 0;
      BOOL v1 = dword_1008DE0E8 != 0;
    }

    if (!v1) {
      break;
    }
    if (i >= 1) {
      memcpy(__dst, &unk_1008DE0F0, 8LL * i);
    }
    dword_1008DE410 = 0;
    pthread_mutex_unlock(&stru_1008DE0A8);
    sub_1000A8FC4(__dst, i);
  }

  pthread_mutex_unlock(&stru_1008DE0A8);
  return 0LL;
}

uint64_t sub_1000ACB3C()
{
  dword_1008DE0E8 = 0;
  sub_1000A8688();
  pthread_cond_signal(&stru_1008DE078);
  pthread_mutex_unlock(&stru_1008DE0A8);
  pthread_join((pthread_t)qword_1008DE070[0], 0LL);
  sub_1000A85A0();
  if (dword_1008DE410 >= 1)
  {
    uint64_t v0 = 0LL;
    do
    {
      BOOL v1 = (void **)qword_1008DE070[v0 + 16];
      free(v1[2]);
      free(v1);
      ++v0;
    }

    while (v0 < dword_1008DE410);
  }

  dword_1008DE410 = 0;
  uint64_t v2 = qword_1008DE418;
  CFMutableDictionaryRef v3 = (pthread_mutex_t *)(qword_1008DE418 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(qword_1008DE418 + 16));
  if (*(int *)(v2 + 12) >= 1)
  {
    uint64_t v4 = 0LL;
    do
    {
      unsigned int v5 = *(void ***)(*(void *)v2 + 8 * v4);
      free(v5[2]);
      free(v5);
      ++v4;
    }

    while (v4 < *(int *)(v2 + 12));
  }

  free(*(void **)v2);
  pthread_mutex_unlock(v3);
  pthread_mutex_destroy(v3);
  free((void *)v2);
  pthread_mutex_destroy(&stru_1008DE0A8);
  return pthread_cond_destroy(&stru_1008DE078);
}

void sub_1000ACC58(uint64_t a1, uint64_t a2, int a3)
{
  if (a3 == -536870064)
  {
    sub_1001EE0E4("[bm3_usb][DeviceNotificationCB] -- kIOMessageDeviceSignaledWakeup -- HIDShim ");
  }

  else if (a3 == -536870896)
  {
    sub_1001EE0E4("[bm3_usb][DeviceNotificationCB] -- kIOMessageServiceIsTerminated -- HIDShim ");
    sub_1001EE0E4("[bm3_usb][BTDeviceRemoved] called\n");
    if (qword_1008DE060)
    {
      if (a1) {
        sub_1001EE0E4("[bm3_usb] Bluetooth device removed: %s \n", *(const char **)(a1 + 8));
      }
      pthread_mutex_lock((pthread_mutex_t *)&xmmword_1008DDFC8);
      int v4 = dword_1008DDFC0;
      if (dword_1008DDFC0 >= 1)
      {
        uint64_t v5 = 0LL;
        CFStringRef v6 = &qword_1008DDF78;
        do
        {
          CFStringRef v7 = (char *)&xmmword_1008DDF68 + 8 * v5;
          uint64_t v9 = *((void *)v7 + 1);
          io_object_t v8 = v7 + 8;
          if (v9 == a1)
          {
            *io_object_t v8 = 0LL;
            uint64_t v10 = v5 + 1;
            uint64_t v11 = (v4 - 1);
            if (v5 + 1 < v4)
            {
              unsigned int v12 = (void *)&xmmword_1008DDF68 + v5 + 1;
              uint64_t v13 = v11 - v5;
              CFUUIDBytes v14 = v6;
              do
              {
                uint64_t v15 = *v14++;
                *v12++ = v15;
                --v13;
              }

              while (v13);
            }

            dword_1008DDFC0 = v11;
            uint64_t v5 = v10;
            int v4 = v11;
          }

          else
          {
            ++v5;
          }

          ++v6;
        }

        while (v5 < v4);
      }

      pthread_cond_signal((pthread_cond_t *)&xmmword_1008DE008);
      pthread_mutex_unlock((pthread_mutex_t *)&xmmword_1008DDFC8);
      sub_1000ACDC0((_DWORD *)a1);
      sub_1001EE0E4("[bm3_usb][BTDeviceRemoved] exited\n");
    }

    else
    {
      sub_1001EE0E4("[bm3_usb][BTDeviceRemoved] exited -- Already removed\n");
    }
  }

void sub_1000ACDC0(_DWORD *a1)
{
  if (a1 && *a1)
  {
    sub_1000AB964((uint64_t)a1);
    uint64_t v2 = (void **)*((void *)a1 + 19);
    if (v2)
    {
      free(v2[2]);
      free(v2);
    }

    CFMutableDictionaryRef v3 = (void **)*((void *)a1 + 20);
    if (v3)
    {
      free(v3[2]);
      free(v3);
    }

    int v4 = (void **)*((void *)a1 + 21);
    if (v4)
    {
      free(v4[2]);
      free(v4);
    }

    for (uint64_t i = 0LL; i != 8; i += 2LL)
    {
      CFStringRef v6 = &a1[i];
      CFStringRef v7 = *(void **)&a1[i + 44];
      if (v7)
      {
        sub_1000A93AC(v7);
        *((void *)v6 + 22) = 0LL;
      }

      io_object_t v8 = (void *)*((void *)v6 + 26);
      if (v8)
      {
        sub_1000A93AC(v8);
        *((void *)v6 + 26) = 0LL;
      }
    }

    free(*((void **)a1 + 1));
    if ((_DWORD *)qword_1008DE060 == a1)
    {
      sub_1001EE0E4("[bm3_usb][BTDeviceDestroy] active device\n");
      qword_1008DE060 = 0LL;
    }

    free(a1);
  }

  sub_1001EE0E4("[bm3_usb][BTDeviceDestroy] exited\n");
}

uint64_t sub_1000ACEB8(uint64_t a1, int a2)
{
  if (a1 && (uint64_t v3 = *(void *)(a1 + 40)) != 0 && *(void *)v3)
  {
    if (a2) {
      uint64_t v4 = 100LL;
    }
    else {
      uint64_t v4 = 0LL;
    }
    uint64_t result = (*(uint64_t (**)(void))(*(void *)v3 + 624LL))();
    if (!(_DWORD)result)
    {
      uint64_t result = (*(uint64_t (**)(void, void, uint64_t))(**(void **)(a1 + 40) + 624LL))( *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 121),  v4);
      if (!(_DWORD)result) {
        return (*(uint64_t (**)(void, void, uint64_t))(**(void **)(a1 + 40) + 624LL))( *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 129),  v4);
      }
    }
  }

  else
  {
    sub_1001EE0E4("[bm3_usb][BTDeviceSetPipeIdlePolicy] -- btdev or firstInterface is NULL\n");
    return 3758097088LL;
  }

  return result;
}

uint64_t sub_1000ACF54(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(void, void, void, void, void (*)(uint64_t, uint64_t, int)))(**(void **)(*(void *)a1 + 40LL) + 264LL))( *(void *)(*(void *)a1 + 40LL),  *(unsigned __int8 *)(*(void *)a1 + 105LL),  *(void *)(a1 + 16),  *(unsigned __int16 *)(a1 + 12),  sub_1000AD004);
  if ((_DWORD)v1) {
    sub_10011E854(1205LL);
  }
  return v1;
}

uint64_t sub_1000ACFAC(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(void, void, void, void, void (*)(uint64_t, uint64_t, int)))(**(void **)(*(void *)a1 + 40LL) + 264LL))( *(void *)(*(void *)a1 + 40LL),  *(unsigned __int8 *)(*(void *)a1 + 121LL),  *(void *)(a1 + 16),  *(unsigned __int16 *)(a1 + 12),  sub_1000AD194);
  if ((_DWORD)v1) {
    sub_10011E854(1205LL);
  }
  return v1;
}

void sub_1000AD004(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = *(void *)a1;
  if (*(void *)a1)
  {
    if (*(_DWORD *)v3 && qword_1008DE060 != 0)
    {
      if ((_DWORD)a2)
      {
        if ((_DWORD)a2 == -536870165)
        {
          CFStringRef v7 = *(char **)(v3 + 152);
          if (v7)
          {
            sub_1000A9064(v7);
            *(void *)(v3 + 152) = 0LL;
          }

          return;
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"InterruptPipeReadCB failed with 0x%x %s", v8, v9, v10, v11, v12, v13, v14, a2);
          uint64_t v15 = (os_log_s *)sub_100086554(0x3Au);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }

      else
      {
        *(_WORD *)(a1 + 24) = a3;
        if (!a3
          || !sub_1000AA3E8( v3,  4,  2u,  0x101u,  (char **)(v3 + 152),  *(void *)(a1 + 16),  (unsigned __int16)a3))
        {
LABEL_20:
          if (dword_1008DE0E8)
          {
            *(_WORD *)(a1 + 24) = 0;
            sub_1000ACF54(a1);
          }

          return;
        }
      }

      int v16 = *(char **)(v3 + 152);
      if (v16)
      {
        sub_1000A9064(v16);
        *(void *)(v3 + 152) = 0LL;
      }

      if (*(_DWORD *)v3)
      {
        sub_1000A85A0();
        sub_10011E7EC(1212LL);
        sub_1000A8688();
        goto LABEL_20;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"InterruptPipeReadCB btdev->open is false", v17, v18, v19, v20, v21, v22, v23, v25);
        CFUUIDBytes v24 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

void sub_1000AD194(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = *(void *)a1;
  if (*(void *)a1)
  {
    if (*(_DWORD *)v3 && qword_1008DE060 != 0)
    {
      if ((_DWORD)a2)
      {
        if ((_DWORD)a2 == -536870165)
        {
          CFStringRef v7 = *(char **)(v3 + 160);
          if (v7)
          {
            sub_1000A9064(v7);
            *(void *)(v3 + 160) = 0LL;
          }

          return;
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"BulkPipeReadCB failed with 0x%x %s", v8, v9, v10, v11, v12, v13, v14, a2);
          uint64_t v15 = (os_log_s *)sub_100086554(0x3Au);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }

      else
      {
        *(_WORD *)(a1 + 24) = a3;
        if (!a3
          || !sub_1000AA3E8( v3,  2,  4u,  0xFFFFu,  (char **)(v3 + 160),  *(void *)(a1 + 16),  (unsigned __int16)a3))
        {
LABEL_20:
          if (dword_1008DE0E8)
          {
            *(_WORD *)(a1 + 24) = 0;
            sub_1000ACFAC(a1);
          }

          return;
        }
      }

      int v16 = *(char **)(v3 + 160);
      if (v16)
      {
        sub_1000A9064(v16);
        *(void *)(v3 + 160) = 0LL;
      }

      if (*(_DWORD *)v3)
      {
        sub_1000A85A0();
        sub_10011E7EC(1210LL);
        sub_1000A8688();
        goto LABEL_20;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"BulkPipeReadCB btdev->open is false", v17, v18, v19, v20, v21, v22, v23, v25);
        CFUUIDBytes v24 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

uint64_t sub_1000AD324()
{
  return 0LL;
}

uint64_t sub_1000AD32C()
{
  return 0LL;
}

uint64_t sub_1000AD350()
{
  return 2048LL;
}

char *sub_1000AD358(uint64_t a1, char a2, const void *a3, unsigned int a4)
{
  CFStringRef v6 = (char *)sub_1000A93E4(a1, a2, a4, a4);
  CFStringRef v7 = v6;
  if (v6 && sub_1000AA60C((uint64_t)v6, a3, a4) < a4)
  {
    sub_1000A9064(v7);
    return 0LL;
  }

  return v7;
}

void sub_1000AD3BC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int128 v39 = 0u;
  memset(v40, 0, sizeof(v40));
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v26 = 0u;
  sub_1001EE0BC( (uint64_t)&v26,  250,  (uint64_t)"USB %s -- %s failed -- error (0x%x) -- exit(0) -- Restart bluetoothd",  a4,  a5,  a6,  a7,  a8,  a3);
  sub_1000BAAF0((const char *)&v26);
  if (**(void **)(a1 + 32))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Bluetooth error - simulated -- %s Error -- build=release, reason=%d",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  a4);
      uint64_t v17 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v25 = sub_1001EDDCC();
        _os_log_fault_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_FAULT, "%{public}s", buf, 0xCu);
      }
    }

    uint64_t v18 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 32) + 296LL))(*(void *)(a1 + 32), 0LL);
    sub_1001EE0E4("[bm3_usb] USBDeviceReEnumerate() returned 0x%0x", v18);
    __int128 v39 = 0u;
    memset(v40, 0, sizeof(v40));
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v33 = 0u;
    __int128 v34 = 0u;
    __int128 v31 = 0u;
    __int128 v32 = 0u;
    __int128 v29 = 0u;
    __int128 v30 = 0u;
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    __int128 v26 = 0u;
    sub_1001EE0BC((uint64_t)&v26, 250, (uint64_t)"USBDeviceReEnumerate() returned 0x%0x", v19, v20, v21, v22, v23, v18);
    sub_1000BAAF0((const char *)&v26);
  }

  exit(0);
}

uint64_t sub_1000AD524()
{
  if (qword_1008DE060) {
    sub_1000ACEB8(qword_1008DE060, 1);
  }
  return 0LL;
}

uint64_t sub_1000AD54C()
{
  if (qword_1008DE060) {
    sub_1000ACEB8(qword_1008DE060, 0);
  }
  return 0LL;
}

uint64_t sub_1000AD574()
{
  byte_1008DE068 = 0;
  if (!qword_1008DE060) {
    return 113LL;
  }
  uint64_t v0 = *(void *)(qword_1008DE060 + 48);
  *(_WORD *)(qword_1008DE060 + 4106) = 0;
  if (!v0) {
    return 113LL;
  }
  (*(void (**)(uint64_t))(*(void *)v0 + 72LL))(v0);
  sub_1001EE0E4("[bm3_usb][OI_HciIfc_DisableSCO_USB] -- ISOC interface for SCO is closed\n");
  return 0LL;
}

BOOL sub_1000AD5D0()
{
  return dword_1008F6F44 && *(_BYTE *)(qword_1008DE4A0 + 33) != 0;
}

void sub_1000AD600(char a1)
{
  if (!dword_1008F6F44) {
    sub_1001EE2A0();
  }
  *(_BYTE *)(qword_1008DE4A0 + 33) = a1;
}

uint64_t sub_1000AD63C(uint64_t a1, _DWORD *a2, int a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  if (!a1 || !a4)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  if (dword_1008F6F44) {
    return 140LL;
  }
  qword_1008DE4A0 = (uint64_t)sub_1000B1814(0x28uLL);
  if (!qword_1008DE4A0) {
    return 106LL;
  }
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  *(_BYTE *)(qword_1008DE4A0 + 32) = *(_BYTE *)sub_1001EDBA0(0xFu);
  char v14 = *(_BYTE *)(sub_1001EDBA0(0xFu) + 10);
  uint64_t v15 = (void *)qword_1008DE4A0;
  *(_BYTE *)(qword_1008DE4A0 + 38) = v14;
  sub_1001EF1B4(v15);
  uint64_t v16 = qword_1008DE4A0;
  *(_WORD *)(qword_1008DE4A0 + 34) = a5;
  *(_WORD *)(v16 + 36) = a6;
  uint64_t v7 = sub_1001D9964( (uint64_t)sub_1000AD7FC,  (uint64_t)off_100882190,  a5,  a6,  (_BYTE *)(v16 + 32),  (uint64_t)&unk_1006BBCD0);
  if ((_DWORD)v7) {
    goto LABEL_11;
  }
  *(void *)&__int128 v19 = &unk_1008821B8;
  WORD4(v19) = 4;
  *(void *)&__int128 v20 = *(void *)a1;
  WORD4(v20) = *(_WORD *)(a1 + 8);
  byte_1008DE4A8 = 1;
  dword_1008DE4B0 = *(unsigned __int8 *)(qword_1008DE4A0 + 32);
  word_1008DE4AA = 1;
  byte_1008DE4B8 = 1;
  word_1008DE4BA = 2;
  dword_1008DE4C0 = a3;
  uint64_t v17 = sub_1001E139C((uint64_t)&v19, (int *)(qword_1008DE4A0 + 20));
  uint64_t v18 = qword_1008DE4A0;
  if ((_DWORD)v17)
  {
    uint64_t v7 = v17;
    sub_1001D9C30(*(unsigned __int8 *)(qword_1008DE4A0 + 32));
LABEL_11:
    if (qword_1008DE4A0)
    {
      sub_1000B1838((void *)qword_1008DE4A0);
      qword_1008DE4A0 = 0LL;
    }

    return v7;
  }

  *(void *)(qword_1008DE4A0 + 24) = a4;
  if (a2) {
    *a2 = *(_DWORD *)(v18 + 20);
  }
  sub_100115688(0x200000);
  uint64_t v7 = 0LL;
  dword_1008F6F44 = 1;
  return v7;
}

uint64_t sub_1000AD7FC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v24 = 0LL;
  memset(v23, 0, sizeof(v23));
  if (qword_1008DE4A0)
  {
    for (uint64_t i = *(void **)qword_1008DE4A0; i && i != (void *)qword_1008DE4A0; uint64_t i = (void *)*i)
    {
    }
  }

  uint64_t v9 = sub_1000ADC68((int *)a1, a4);
  if (!v9)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Could not allocate hfp device!", v12, v13, v14, v15, v16, v17, v18, *(uint64_t *)&v23[0]);
      __int128 v19 = (os_log_s *)sub_100086554(0xFu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return sub_1001DA26C((uint64_t)sub_1000ADA80, a4, 0);
  }

  uint64_t v10 = v9;
  if (*((_BYTE *)v9 + 34)) {
    return sub_1001DA26C((uint64_t)sub_1000ADA80, a4, 0);
  }
  __int128 v20 = sub_1000AD9D8(a4);
  if (v20) {
    *((_BYTE *)v20 + 34) = 2;
  }
  _WORD *v10 = a4;
  __int16 v21 = *(_WORD *)(a1 + 4);
  *((_DWORD *)v10 + 7) = *(_DWORD *)a1;
  uint64_t v22 = v10 + 14;
  v22[2] = v21;
  *((void *)&v23[0] + 1) = v22;
  LODWORD(v23[0]) = 0;
  WORD2(v23[0]) = a4;
  return (*(uint64_t (**)(_OWORD *))(qword_1008DE4A0 + 24))(v23);
}

uint64_t sub_1000AD958()
{
  if (!dword_1008F6F44) {
    return 408LL;
  }
  if (*(_BYTE *)(qword_1008DE4A0 + 16)) {
    return 141LL;
  }
  uint64_t result = sub_1001D9C30(*(unsigned __int8 *)(qword_1008DE4A0 + 32));
  if (!(_DWORD)result)
  {
    sub_1001E1520(*(_DWORD *)(qword_1008DE4A0 + 20));
    sub_10011573C(0x200000);
    if (qword_1008DE4A0)
    {
      sub_1000B1838((void *)qword_1008DE4A0);
      qword_1008DE4A0 = 0LL;
    }

    uint64_t result = 0LL;
    dword_1008F6F44 = 0;
  }

  return result;
}

void *sub_1000AD9D8(unsigned int a1)
{
  if (qword_1008DE4A0)
  {
    for (uint64_t i = *(void **)qword_1008DE4A0; i && i != (void *)qword_1008DE4A0; uint64_t i = (void *)*i)
    {
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Could not find addr for device handle %d", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(0xFu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 0LL;
}

uint64_t sub_1000ADA80(unsigned int a1, __int16 a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AD9D8(a1);
  if (v6)
  {
    if ((_DWORD)a3)
    {
LABEL_3:
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"RFCOMM connection failed %!\n", v7, v8, v9, v10, v11, v12, v13, a3);
        uint64_t v14 = (os_log_s *)sub_100086554(0xFu);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      *uint64_t v6 = 0;
      uint64_t v15 = sub_1000AD9D8(a1);
      if (v15)
      {
        char v16 = 0;
LABEL_15:
        *((_BYTE *)v15 + 34) = v16;
        return sub_1000ADD88((unsigned __int16)*v6, a3, a2);
      }

      return sub_1000ADD88((unsigned __int16)*v6, a3, a2);
    }
  }

  else
  {
    sub_1001EE2A0();
    if ((_DWORD)a3) {
      goto LABEL_3;
    }
  }

  a3 = sub_100119484((uint64_t)&off_100882268, (uint64_t)(v6 + 14));
  if ((_DWORD)a3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_DEVMGR_RegisterScoApplication failed %!\n", v17, v18, v19, v20, v21, v22, v23, a3);
      uint64_t v24 = (os_log_s *)sub_100086554(0xFu);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  uint64_t v15 = sub_1000AD9D8(a1);
  if (v15)
  {
    char v16 = 3;
    goto LABEL_15;
  }

  return sub_1000ADD88((unsigned __int16)*v6, a3, a2);
}

void *sub_1000ADBB4(uint64_t a1)
{
  if (qword_1008DE4A0)
  {
    for (uint64_t i = *(void **)qword_1008DE4A0; i && i != (void *)qword_1008DE4A0; uint64_t i = (void *)*i)
    {
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Could not find addr for device %:", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0xFu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 0LL;
}

_WORD *sub_1000ADC68(int *a1, __int16 a2)
{
  if (*(unsigned __int8 *)(qword_1008DE4A0 + 16) >= *(unsigned __int8 *)(qword_1008DE4A0 + 38))
  {
    sub_1001EE134( (uint64_t)"Maximum handsfree connection is %d, cannot create device",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  *(unsigned __int8 *)(qword_1008DE4A0 + 38));
    uint64_t v15 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
LABEL_9:
    sub_100657858();
    return 0LL;
  }

  uint64_t v4 = sub_1000B1814(0x38uLL);
  if (!v4)
  {
    sub_1001EE134((uint64_t)"Could not allocate hfp device\n", v16, v17, v18, v19, v20, v21, v22, v25);
    uint64_t v23 = (os_log_s *)sub_100086554(0xFu);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
    goto LABEL_9;
  }

  uint64_t v5 = v4;
  int v6 = *a1;
  v4[16] = *((_WORD *)a1 + 2);
  *((_DWORD *)v4 + 7) = v6;
  _WORD *v4 = a2;
  *((_BYTE *)v4 + 34) = 0;
  uint64_t v7 = (uint64_t *)qword_1008DE4A0;
  ++*(_BYTE *)(qword_1008DE4A0 + 16);
  sub_1001EF1BC((void *)v4 + 5, v7);
  return v5;
}

uint64_t sub_1000ADD88(unsigned int a1, int a2, __int16 a3)
{
  unsigned __int16 v5 = a1;
  int v6 = sub_1000AD9D8(a1);
  if (!v6) {
    sub_1001EE2A0();
  }
  __int128 v10 = 0u;
  uint64_t v12 = 0LL;
  __int128 v11 = 0u;
  LODWORD(v10) = a2;
  WORD2(v10) = a3;
  v8[0] = 1;
  uint64_t v9 = (char *)v6 + 28;
  v8[1] = v5;
  return (*(uint64_t (**)(_DWORD *))(qword_1008DE4A0 + 24))(v8);
}

uint64_t sub_1000ADE0C(unsigned int a1)
{
  if (!dword_1008F6F44) {
    return 408LL;
  }
  uint64_t v1 = sub_1000AD9D8(a1);
  if (!v1) {
    sub_1001EE2A0();
  }
  int v2 = *((unsigned __int8 *)v1 + 34);
  if (v2 != 3) {
    return 1802LL;
  }
  unsigned int v4 = *(unsigned __int16 *)v1;
  unsigned __int16 v5 = sub_1000AD9D8(v4);
  if (!v5) {
    sub_1001EE2A0();
  }
  unsigned int v6 = *((unsigned __int8 *)v5 + 34);
  BOOL v7 = v6 > 5;
  int v8 = (1 << v6) & 0x31;
  if (!v7 && v8 != 0) {
    return 0LL;
  }
  __int128 v10 = sub_1000AD9D8(v4);
  if (v10) {
    *((_BYTE *)v10 + 34) = 4;
  }
  return sub_1000AE10C(*(unsigned __int16 *)v5);
}

uint64_t sub_1000ADED4(unsigned int a1, uint64_t a2, char *a3, size_t a4)
{
  BOOL v7 = sub_1000AD9D8(a1);
  if (!v7) {
    sub_1001EE2A0();
  }
  if (!dword_1008F6F44) {
    return 408LL;
  }
  if (!a2)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  if (*((_BYTE *)v7 + 34) != 3) {
    return 408LL;
  }
  if (v7[2]) {
    return 118LL;
  }
  uint64_t result = sub_1001D9F70((uint64_t)sub_1000ADF74, *(unsigned __int16 *)v7, a3, a4);
  if (!(_DWORD)result) {
    v7[2] = a2;
  }
  return result;
}

uint64_t sub_1000ADF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = sub_1000AD9D8(a1);
  if (!v8) {
    sub_1001EE2A0();
  }
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8[2];
  _DWORD v8[2] = 0LL;
  return v9(a1, a2, a3, a4);
}

uint64_t sub_1000ADFD4(unsigned int a1, int a2)
{
  unsigned int v4 = sub_1000AD9D8(a1);
  if (!v4) {
    sub_1001EE2A0();
  }
  int v5 = *((unsigned __int8 *)v4 + 34);
  unsigned int v6 = sub_1000AD9D8(a1);
  if (v6)
  {
    if (v5 == 3) {
      char v7 = 5;
    }
    else {
      char v7 = 0;
    }
    *((_BYTE *)v6 + 34) = v7;
  }

  *((_DWORD *)v4 + 1) = a2;
  return sub_1000AE10C(*(unsigned __int16 *)v4);
}

void sub_1000AE034(unsigned int a1, uint64_t a2, __int16 a3)
{
  __int16 v5 = a1;
  unsigned int v6 = sub_1000AD9D8(a1);
  if (!v6) {
    sub_1001EE2A0();
  }
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v15 = 0u;
  if ((*((_BYTE *)v6 + 34) & 0xFE) == 4)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Ignoring received data while in state %s", v7, v8, v9, v10, v11, v12, v13, (uint64_t)"");
      uint64_t v14 = (os_log_s *)sub_100086554(0xFu);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    LODWORD(v15) = 6;
    *((void *)&v15 + 1) = a2;
    LOWORD(v16) = a3;
    WORD2(v15) = v5;
    (*(void (**)(__int128 *))(qword_1008DE4A0 + 24))(&v15);
  }

uint64_t sub_1000AE10C(unsigned int a1)
{
  int v2 = sub_1000AD9D8(a1);
  if (!v2) {
    sub_1001EE2A0();
  }
  uint64_t v34 = 0LL;
  memset(v33, 0, sizeof(v33));
  int v3 = *((unsigned __int8 *)v2 + 34);
  if (v3 == 5)
  {
    if (!*((_BYTE *)v2 + 35))
    {
      uint64_t v4 = 0LL;
      *((_BYTE *)v2 + 34) = 0;
      goto LABEL_19;
    }

uint64_t sub_1000AE368(unsigned int a1)
{
  int v2 = sub_1000AD9D8(a1);
  if (!v2) {
    sub_1001EE2A0();
  }
  uint64_t result = sub_10010D064((uint64_t)v2 + 28);
  if ((_DWORD)result)
  {
    uint64_t v4 = result;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"ForceDisconnect failed - %!, assuming already disconnected\n",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  v4);
      uint64_t v12 = (os_log_s *)sub_100086554(0xFu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t result = (uint64_t)sub_1000AD9D8(a1);
    if (result) {
      *(_BYTE *)(result + 34) = 0;
    }
    *((_BYTE *)v2 + 35) = 0;
    *((_DWORD *)v2 + 1) = 926;
  }

  return result;
}

uint64_t sub_1000AE414(uint64_t a1)
{
  uint64_t v1 = **(unsigned __int16 **)(a1 + 8);
  int v2 = sub_1000AD9D8(v1);
  if (!v2) {
    sub_1001EE2A0();
  }
  *((_DWORD *)v2 + 6) = 0;
  sub_1000AE368(v1);
  return sub_1000AE10C(v1);
}

uint64_t sub_1000AE458(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000ADBB4(a3);
  if (!v5) {
    sub_1001EE2A0();
  }
  uint64_t v9 = 0LL;
  memset(v8, 0, sizeof(v8));
  if (a1)
  {
    char v6 = 0;
  }

  else
  {
    v5[1] = a2;
    char v6 = 3;
  }

  *((_BYTE *)v5 + 35) = v6;
  LODWORD(v8[0]) = 4;
  HIDWORD(v8[0]) = ((unint64_t)v5 + 28) >> 32;
  DWORD2(v8[0]) = a1;
  WORD2(v8[0]) = *(_WORD *)v5;
  uint64_t result = (*(uint64_t (**)(_OWORD *))(qword_1008DE4A0 + 24))(v8);
  if ((*((_BYTE *)v5 + 34) & 0xFE) == 4) {
    return sub_1000AE10C(*(unsigned __int16 *)v5);
  }
  return result;
}

uint64_t sub_1000AE50C(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = 0LL;
  memset(v24, 0, sizeof(v24));
  if (qword_1008DE4A0)
  {
    for (uint64_t i = *(void **)qword_1008DE4A0; i && i != (void *)qword_1008DE4A0; uint64_t i = (void *)*i)
    {
      if (*(i - 4) == a2)
      {
        uint64_t v13 = (unsigned __int16 *)(i - 5);
        if ((_DWORD)a1) {
          goto LABEL_13;
        }
        goto LABEL_17;
      }
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Could not find device with sco handle", v5, v6, v7, v8, v9, v10, v11, v23);
    uint64_t v12 = (os_log_s *)sub_100086554(0xFu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  sub_1001EE2A0();
  uint64_t v13 = 0LL;
  if ((_DWORD)a1)
  {
LABEL_13:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"SCO disconnect failed %!", v14, v15, v16, v17, v18, v19, v20, a1);
      uint64_t v21 = (os_log_s *)sub_100086554(0xFu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
LABEL_17:
    *((_BYTE *)v13 + 35) = 0;
  }

  LODWORD(v24[0]) = 5;
  HIDWORD(v24[0]) = (unint64_t)(v13 + 14) >> 32;
  DWORD2(v24[0]) = a1;
  WORD2(v24[0]) = *v13;
  uint64_t result = (*(uint64_t (**)(_OWORD *))(qword_1008DE4A0 + 24))(v24);
  if ((v13[17] & 0xFE) == 4) {
    return sub_1000AE10C(*v13);
  }
  return result;
}

uint64_t sub_1000AE658(uint64_t a1)
{
  int v2 = sub_1000ADBB4(a1);
  if (!v2) {
    sub_1001EE2A0();
  }
  uint64_t v6 = 0LL;
  memset(v5, 0, sizeof(v5));
  if (*((_BYTE *)v2 + 34) != 3) {
    return sub_10011A99C(a1, 0);
  }
  BOOL v3 = *(_DWORD *)a1 == *((_DWORD *)v2 + 7) && *(unsigned __int16 *)(a1 + 4) == *((unsigned __int16 *)v2 + 16);
  if (!v3 || *((_BYTE *)v2 + 35)) {
    return sub_10011A99C(a1, 0);
  }
  *((_BYTE *)v2 + 35) = 1;
  LODWORD(v5[0]) = 3;
  *((void *)&v5[0] + 1) = (char *)v2 + 28;
  WORD2(v5[0]) = *(_WORD *)v2;
  return (*(uint64_t (**)(_OWORD *))(qword_1008DE4A0 + 24))(v5);
}

uint64_t sub_1000AE718(uint64_t result)
{
  uint64_t v1 = 0LL;
  while (1)
  {
    if (LODWORD(xmmword_1008DE4C8[v1]) == 1)
    {
      int v2 = &xmmword_1008DE4C8[v1];
      if (BYTE6(xmmword_1008DE4C8[v1])) {
        break;
      }
    }

    v1 += 3LL;
    if (v1 == 15) {
      return result;
    }
  }

  if (*((void *)v2 + 1) == result)
  {
    *(_DWORD *)int v2 = 0;
    *((_BYTE *)v2 + 6) = 0;
  }

  return result;
}

uint64_t sub_1000AE764(uint64_t result)
{
  byte_1008DE5B8 = result;
  return result;
}

void sub_1000AE770(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 0LL;
  while (LODWORD(xmmword_1008DE4C8[v3]) != 1)
  {
    v3 += 3LL;
    if (v3 == 15) {
      return;
    }
  }

  uint64_t v4 = &xmmword_1008DE4C8[v3];
  if ((_DWORD)a2)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Could not synchronize to periodic advertiser (%!)", v5, v6, v7, v8, v9, v10, v11, a2);
      uint64_t v12 = (os_log_s *)sub_100086554(0x42u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    if (off_1008DE5C8) {
      off_1008DE5C8(&xmmword_1008DE4C8[v3], a2);
    }
    sub_1000AE8D8( LODWORD(xmmword_1008DE4C8[v3 + 1]) | ((unint64_t)(WORD2(xmmword_1008DE4C8[v3 + 1]) | (BYTE6(xmmword_1008DE4C8[v3 + 1]) << 16)) << 32),  BYTE7(xmmword_1008DE4C8[v3 + 1]));
    v4[1] = 0u;
    void v4[2] = 0u;
    __int128 *v4 = 0u;
    LODWORD(xmmword_1008DE4C8[v3]) = 0;
  }

  else
  {
    *(_DWORD *)uint64_t v4 = 2;
    *((_WORD *)v4 + 2) = *(_WORD *)a1;
    *((_WORD *)v4 + 14) = *(_WORD *)(a1 + 12);
    *(_DWORD *)((char *)v4 + 37) = *(_DWORD *)(a1 + 15);
    ++byte_1008DE5C0;
    if (off_1008DE5C8) {
      off_1008DE5C8(&xmmword_1008DE4C8[v3], 0LL);
    }
    sub_1000AE8D8( LODWORD(xmmword_1008DE4C8[v3 + 1]) | ((unint64_t)(WORD2(xmmword_1008DE4C8[v3 + 1]) | (BYTE6(xmmword_1008DE4C8[v3 + 1]) << 16)) << 32),  BYTE7(xmmword_1008DE4C8[v3 + 1]));
  }

  qword_1008DE5E0 = 0LL;
  *(void *)&byte_1008DE5E8 = 0LL;
}

void sub_1000AE8D8(uint64_t a1, unsigned int a2)
{
  unsigned __int8 v3 = a1;
  int v31 = a1;
  char v33 = BYTE6(a1);
  __int16 v32 = WORD2(a1);
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"LE_RemoveDeviceFromPeriodicAdvList", v4, v5, v6, v7, v8, v9, v10, v30);
    uint64_t v11 = (os_log_s *)sub_100086554(0x42u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      __int128 v35 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (a2 <= 0xF)
  {
    if (qword_1008DE5F8)
    {
      uint64_t v12 = sub_1000B17F4(0x10uLL);
      if (v12)
      {
        uint64_t v19 = v12;
        uint64_t v20 = sub_1001214B4(222, (uint64_t)sub_1000AF3E8, v13, v14, v15, v16, v17, v18, v3);
        if ((_DWORD)v20)
        {
          uint64_t v21 = v20;
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Could not remove device from periodic advertising list (%!)",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  v21);
            uint64_t v29 = (os_log_s *)sub_100086554(0x42u);
            if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          sub_1000B1838(v19);
        }

        else
        {
          *((_BYTE *)v19 + 6) = v33;
          *((_WORD *)v19 + 2) = v32;
          _DWORD *v19 = v31;
          *((_BYTE *)v19 + 7) = a2;
          *((void *)v19 + 1) = 0LL;
          if (qword_1008DE608)
          {
            *(void *)(qword_1008DE608 + 8) = v19;
            qword_1008DE608 = (uint64_t)v19;
          }

          if (!qword_1008DE600)
          {
            qword_1008DE600 = (uint64_t)v19;
            qword_1008DE608 = (uint64_t)v19;
          }
        }
      }
    }
  }

void sub_1000AEAA0()
{
  for (uint64_t i = 0LL; i != 15; i += 3LL)
  {
    if (LODWORD(xmmword_1008DE4C8[i]) == 1)
    {
      uint64_t v9 = sub_1000AEB74();
      if ((_DWORD)v9)
      {
        uint64_t v10 = v9;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"LE_PeriodicAdv_CreateSyncCancel failed with status %!",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  v10);
          uint64_t v18 = (os_log_s *)sub_100086554(0x42u);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            goto LABEL_10;
          }
        }
      }

      return;
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"No sync handle found in establishing state", v1, v2, v3, v4, v5, v6, v7, v19);
    uint64_t v8 = (os_log_s *)sub_100086554(0x42u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
LABEL_10:
    }
      sub_100657858();
  }

uint64_t sub_1000AEB74()
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"LE_PeriodicAdv_CreateSyncCancel", v0, v1, v2, v3, v4, v5, v6, v29);
    uint64_t v7 = (os_log_s *)sub_100086554(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      int v31 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (LODWORD(xmmword_1008DE4C8[0]) == 1)
  {
LABEL_5:
    uint64_t v8 = sub_1001214B4(219, (uint64_t)sub_1000AF334, v1, v2, v3, v4, v5, v6, v29);
    if ((_DWORD)v8)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Could not cancel periodic sync (%!)", v9, v10, v11, v12, v13, v14, v15, v8);
        uint64_t v16 = (os_log_s *)sub_100086554(0x42u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

  else
  {
    unint64_t v17 = -1LL;
    uint64_t v18 = &dword_1008DE4F8;
    while (v17 != 3)
    {
      int v19 = *v18;
      v18 += 12;
      ++v17;
      if (v19 == 1)
      {
        if (v17 < 4) {
          goto LABEL_5;
        }
        break;
      }
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"No Pending Sync to Cancel", v20, v21, v22, v23, v24, v25, v26, v29);
      uint64_t v27 = (os_log_s *)sub_100086554(0x42u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 117LL;
  }

  return v8;
}

double sub_1000AED0C(int a1)
{
  uint64_t v1 = 0LL;
  while (1)
  {
    uint64_t v2 = &xmmword_1008DE4C8[v1];
    if (WORD2(xmmword_1008DE4C8[v1]) == a1) {
      break;
    }
    v1 += 3LL;
    if (v1 == 15) {
      return result;
    }
  }

  if (off_1008DE5D0) {
    off_1008DE5D0(v2, 156LL);
  }
  double result = 0.0;
  v2[1] = 0u;
  void v2[2] = 0u;
  __int128 *v2 = 0u;
  *(_DWORD *)uint64_t v2 = 0;
  return result;
}

unsigned __int16 *sub_1000AED78(unsigned __int16 *result)
{
  uint64_t v1 = 0LL;
  while (WORD2(xmmword_1008DE4C8[v1]) != *result)
  {
    v1 += 3LL;
    if (v1 == 15) {
      return result;
    }
  }

  if (off_1008DE5D8)
  {
    __int128 v2 = *(_OWORD *)result;
    uint64_t v3 = *((void *)result + 2);
    return (unsigned __int16 *)off_1008DE5D8(&xmmword_1008DE4C8[v1], &v2);
  }

  return result;
}

void sub_1000AEDEC( uint64_t a1, uint64_t a2, __int16 a3, __int16 a4, char a5, int *a6, int a7, __int16 a8, char a9, char a10, char a11, char a12, char a13)
{
  if (sub_10012D5EC(a2))
  {
    uint64_t v48 = a1;
    for (uint64_t i = 0LL; i != 15; i += 3LL)
    {
      if (LODWORD(xmmword_1008DE4C8[i]) == 1)
      {
        int v19 = &xmmword_1008DE4C8[i];
        if (BYTE6(xmmword_1008DE4C8[i]))
        {
          if ((_DWORD)v48)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"LE_SyncTransferReceived with error (%!)", v36, v37, v38, v39, v40, v41, v42, v48);
              uint64_t v43 = (os_log_s *)sub_100086554(0x42u);
              if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
                sub_100657858();
              }
            }

            if (off_1008DE5C8) {
              off_1008DE5C8(v19, v48);
            }
            *(_DWORD *)int v19 = 0;
          }

          else
          {
            uint64_t v44 = &xmmword_1008DE4C8[i];
            *(_DWORD *)uint64_t v44 = 2;
            *((_WORD *)v44 + 2) = a4;
            int v45 = *a6;
            __int16 v46 = *((_WORD *)a6 + 2);
            *((_BYTE *)v44 + 22) = *((_BYTE *)a6 + 6);
            *((_WORD *)v44 + 10) = v46;
            *((_DWORD *)v44 + 4) = v45;
            *((_BYTE *)v44 + 23) = a5;
            *((_WORD *)v44 + 14) = a8;
            *((_WORD *)v44 + 15) = a3;
            *((_DWORD *)v44 + 8) = a7;
            *((_BYTE *)v44 + 36) = a9;
            *((_BYTE *)v44 + 37) = a10;
            *((_BYTE *)v44 + 38) = a11;
            *((_BYTE *)v44 + 39) = a12;
            *((_BYTE *)v44 + 40) = a13;
            if (off_1008DE5C8) {
              off_1008DE5C8(v19, 0LL);
            }
          }

          return;
        }
      }
    }

    sub_1001EE134((uint64_t)"LE_SyncTransferReceived, no sync handle found", v20, v21, v22, v23, v24, v25, v26, v47);
    uint64_t v27 = (os_log_s *)sub_100086554(0x42u);
    if (!os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_8;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"LE_SyncTransferReceived, invalid connection handle: status %! ignoring",  v28,  v29,  v30,  v31,  v32,  v33,  v34,  a1);
    __int128 v35 = (os_log_s *)sub_100086554(0x42u);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
LABEL_8:
    }
      sub_100657F74();
  }

uint64_t sub_1000AF014()
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"LE_PreriodicAdv_TerminateAll", v0, v1, v2, v3, v4, v5, v6, v15);
    uint64_t v7 = (os_log_s *)sub_100086554(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      unint64_t v17 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  for (uint64_t i = 0LL; i != 15; i += 3LL)
  {
    int v9 = xmmword_1008DE4C8[i];
    if (v9 == 1)
    {
    }

    else
    {
      if (v9 != 2) {
        continue;
      }
      int v10 = sub_1001214B4(220, (uint64_t)sub_1000AF210, v1, v2, v3, v4, v5, v6, WORD2(xmmword_1008DE4C8[i]));
      LODWORD(xmmword_1008DE4C8[i]) = 3;
      if (!v10) {
        continue;
      }
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Unable to terminate all syncs. Failure with sync handle: %d (%!)",  v11,  v1,  v2,  v3,  v4,  v5,  v6,  WORD2(xmmword_1008DE4C8[i]));
      uint64_t v12 = (os_log_s *)sub_100086554(0x42u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        uint64_t v13 = sub_1001EDDCC();
        *(_DWORD *)__int128 buf = 136446466;
        unint64_t v17 = v13;
        __int16 v18 = 1024;
        int v19 = 0xFFFF;
        _os_log_error_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
      }
    }
  }

  return 0LL;
}

double sub_1000AF210(int a1)
{
  uint64_t v2 = 0LL;
  byte_1008DE610 = 0;
  while (LODWORD(xmmword_1008DE4C8[v2]) != 3)
  {
    v2 += 3LL;
    if (v2 == 15) {
      return result;
    }
  }

  int v3 = sub_1000A86F0();
  uint64_t v12 = &xmmword_1008DE4C8[v2];
  if (a1)
  {
    if (v3)
    {
      sub_1001EE134((uint64_t)"Terminate sync command complete (FAIL)", v4, v5, v6, v7, v8, v9, v10, v15);
      uint64_t v13 = (os_log_s *)sub_100086554(0x42u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    if (off_1008DE5D0) {
      off_1008DE5D0(v12, a1);
    }
  }

  else
  {
    if (v3)
    {
      sub_1001EE134((uint64_t)"Terminate sync command complete (SUCCESS)", v4, v5, v6, v7, v8, v9, v10, v15);
      uint64_t v14 = (os_log_s *)sub_100086554(0x42u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    if (off_1008DE5D0) {
      off_1008DE5D0(v12, 0LL);
    }
    double result = 0.0;
    v12[1] = 0u;
    v12[2] = 0u;
    __int128 *v12 = 0u;
    *(_DWORD *)uint64_t v12 = 0;
    --byte_1008DE5C0;
  }

  return result;
}

double sub_1000AF334(int a1)
{
  if (a1)
  {
    uint64_t v1 = 0LL;
    while (LODWORD(xmmword_1008DE4C8[v1]) != 1)
    {
      v1 += 3LL;
      if (v1 == 15) {
        return result;
      }
    }

    sub_1000AE8D8( *(unsigned int *)((char *)&qword_1008DE5E0 + 2) | ((unint64_t)(HIWORD(qword_1008DE5E0) | (byte_1008DE5E8 << 16)) << 32),  BYTE1(qword_1008DE5E0));
    double result = 0.0;
    xmmword_1008DE4D8 = 0u;
    unk_1008DE4E8 = 0u;
    xmmword_1008DE4C8[0] = 0u;
    LODWORD(xmmword_1008DE4C8[v1]) = 0;
    qword_1008DE5E0 = 0LL;
    *(void *)&byte_1008DE5E8 = 0LL;
  }

  return result;
}

double sub_1000AF3B8()
{
  if (qword_1008DE5F8) {
    sub_1000B1838((void *)qword_1008DE5F8);
  }
  double result = 0.0;
  unk_1008DE5F0 = 0u;
  *(_OWORD *)&qword_1008DE600 = 0u;
  return result;
}

void sub_1000AF3E8(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"leRemoveFromPeriodicAdvListCb", v2, v3, v4, v5, v6, v7, v8, v21);
    uint64_t v9 = (os_log_s *)sub_100086554(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v23 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Error removing device from periodic advertiser list %!",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  a1);
      unint64_t v17 = (os_log_s *)sub_100086554(0x42u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  else
  {
    if (!qword_1008DE600) {
      sub_1001EE2A0();
    }
    if (byte_1008DE5F2)
    {
      uint64_t v18 = 0LL;
      uint64_t v19 = qword_1008DE5F8;
      while (*(void *)(qword_1008DE5F8 + v18) != *(void *)qword_1008DE600)
      {
        v18 += 8LL;
      }

      unsigned __int8 v20 = byte_1008DE5F2 - 1;
      byte_1008DE5F2 = v20;
      if ((_DWORD)v18 != 8 * v20)
      {
        *(void *)(qword_1008DE5F8 + v18) = *(void *)(qword_1008DE5F8 + 8LL * v20);
        uint64_t v19 = qword_1008DE5F8;
        unsigned __int8 v20 = byte_1008DE5F2;
      }

      *(void *)(v19 + 8LL * v20) = 0LL;
    }
  }

void sub_1000AF574()
{
  if (qword_1008DE600)
  {
    uint64_t v0 = *(void *)(qword_1008DE600 + 8);
    sub_1000B1838((void *)qword_1008DE600);
    qword_1008DE600 = v0;
    if (!v0) {
      qword_1008DE608 = 0LL;
    }
  }

  else
  {
    sub_1001EE2A0();
  }

uint64_t sub_1000AF5BC(unsigned __int8 *a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Beginning Bud Swap 2.0 procedure for %:", v2, v3, v4, v5, v6, v7, v8, (uint64_t)a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x59u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      int v61 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v59 = 0LL;
  int v58 = 0;
  __int16 v57 = 0;
  if (sub_1000D8CF0((uint64_t)a1, &v57))
  {
    int v20 = sub_1001F7378((uint64_t)a1);
    if (!v20)
    {
      sub_1001886B8(v59, 0LL, 0LL, 1);
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Media CIDs are not connected, stalling all L2CAP queues for %:",  v30,  v31,  v32,  v33,  v34,  v35,  v36,  (uint64_t)a1);
        uint64_t v29 = (os_log_s *)sub_100086554(0x59u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_20;
        }
      }

      goto LABEL_21;
    }

    LODWORD(v21) = 0;
    goto LABEL_14;
  }

  LOWORD(v58) = v57;
  int v20 = sub_1001F7378((uint64_t)a1);
  unint64_t v21 = 1LL;
  if (v20)
  {
LABEL_14:
    *(_WORD *)((unint64_t)&v58 | (2LL * v21)) = v20;
    unint64_t v21 = (v21 + 1);
  }

  sub_1001886B8(v59, (unsigned __int16 *)&v58, v21, 1);
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"%d excluded media CIDs are connected, stalling all non-media CID L2CAP queues for %:",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  v21);
    uint64_t v29 = (os_log_s *)sub_100086554(0x59u);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
LABEL_20:
      uint64_t v37 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      int v61 = v37;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

void sub_1000AF944(unsigned int a1, char a2)
{
  uint64_t v4 = sub_10012D6D8(a1);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = sub_1000A86F0();
    if ((a2 & 1) != 0)
    {
      if (v6)
      {
        sub_1001EE134( (uint64_t)"Chipset confirmed LMP Resume complete, sending SwapCompleteCfm Message to %:",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  (uint64_t)(v5 + 3));
        uint64_t v14 = (os_log_s *)sub_100086554(0x59u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136446210;
          uint64_t v25 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      sub_1000810E8((unsigned __int8 *)v5 + 48);
    }

    else
    {
      if (v6)
      {
        sub_1001EE134( (uint64_t)"Chipset confirmed LMP Halt complete, sending SwapImminentCfm Message to %:",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  (uint64_t)(v5 + 3));
        uint64_t v23 = (os_log_s *)sub_100086554(0x59u);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136446210;
          uint64_t v25 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      sub_100081014((unsigned __int8 *)v5 + 48, 0);
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Received LMP Halt Event but couldn't find a connection handle for lmhandle %d with lmpHaltStatus %d",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  a1);
    uint64_t v22 = (os_log_s *)sub_100086554(0x59u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

void sub_1000AFAF0(uint64_t a1)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Chipset returned error from LMP Halt command: %d", v2, v3, v4, v5, v6, v7, v8, a1);
      uint64_t v9 = (os_log_s *)sub_100086554(0x59u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Chipset successfully received the LMP Halt command", v10, v11, v12, v13, v14, v15, v16, v18);
    uint64_t v17 = (os_log_s *)sub_100086554(0x59u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v20 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

uint64_t sub_1000AFBF0(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Buds have signaled Bud Swap 2.0 has completed on their side, beginning closing procedures for %:",  v2,  v3,  v4,  v5,  v6,  v7,  v8,  a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x59u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v42 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v40 = 0LL;
  if (sub_10010EEE0(a1, (uint64_t *)&v40)
    || (sub_1001886B8(v40, 0LL, 0LL, 0), (unsigned int v19 = sub_10012D7D4((unsigned __int16 *)v40)) == 0))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Couldn't complete Bud Swap 2.0 procedure for %:, couldn't find the device",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  a1);
      uint64_t v17 = (os_log_s *)sub_100086554(0x59u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    return 120LL;
  }

  else
  {
    unsigned int v20 = v19;
    if (sub_10018D99C())
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Failure in sending LMP Resume command to chipset for lmHandle %d with BT address %:",  v21,  v22,  v23,  v24,  v25,  v26,  v27,  v20);
        uint64_t v28 = (os_log_s *)sub_100086554(0x59u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      return 114LL;
    }

    else
    {
      int v36 = sub_1000A86F0();
      uint64_t result = 0LL;
      if (v36)
      {
        sub_1001EE134( (uint64_t)"Successfully sent LMP Resume command to chipset for lmHandle %d with BT address %:",  v29,  v30,  v31,  v32,  v33,  v34,  v35,  v20);
        uint64_t v37 = (os_log_s *)sub_100086554(0x59u);
        BOOL v38 = os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT);
        uint64_t result = 0LL;
        if (v38)
        {
          unsigned int v39 = sub_1001EDDCC();
          *(_DWORD *)__int128 buf = 136446210;
          uint64_t v42 = v39;
          _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          return 0LL;
        }
      }
    }
  }

  return result;
}

void sub_1000AFE20(uint64_t a1)
{
  uint64_t v1 = (char *)a1;
  sub_1001EE348(a1);
  sub_1000B00F4();
  int has_internal_diagnostics = os_variant_has_internal_diagnostics("com.apple.bluetooth");
  if (sub_1000FCD0C() == 6)
  {
    if (((_DWORD)v1 - 1205) <= 9 && ((1 << ((_BYTE)v1 + 75)) & 0x203) != 0)
    {
LABEL_4:
      else {
        sub_1001EE0E4("Bluetooth fatal error - crashing { build=release, reason=%d }");
      }
      sub_1000AFE1C();
      uint64_t v1 = &byte_1008F1F90;
      sub_1001EE0E4("OI_FatalError: ID !! (ID %d)\n", unk_1008F1FB5);
      sub_1001EE0E4("OI_FatalError: PC !!(PC 0x%x)\n", unk_1008F1FC9);
      sub_1001EE0E4( "OI_FatalError: LR !!(LR0 0x%x, LR1 0x%x, LR2 0x%x, LR3 0x%x)\n",  LODWORD(qword_1008F1FCD[0]),  HIDWORD(qword_1008F1FCD[0]),  LODWORD(qword_1008F1FCD[1]),  HIDWORD(qword_1008F1FCD[1]));
      sub_1001EE0E4( "OI_FatalError: MAC Version !! (%d.%d.%d.%d)\n",  unk_1008F1FA5,  unk_1008F1FA7,  unk_1008F1FA9,  unk_1008F1FAB);
      sub_1001EE0E4( "OI_FatalError: PHY Version !!( %d.%d.%d.%d)\n",  unk_1008F1FAD,  unk_1008F1FAF,  unk_1008F1FB1,  unk_1008F1FB3);
      sub_10040CA80("Marconi", "BluetoothChip", 0.0);
      abort_with_payload(29LL, qword_1008F1FCD[0], &byte_1008F1F90, 2048LL, &unk_1008F2790, 64LL);
      goto LABEL_13;
    }
  }

  else if ((_DWORD)v1 == 1214)
  {
    goto LABEL_4;
  }

  sub_1000B9654();
  if (!has_internal_diagnostics)
  {
LABEL_13:
    uint64_t v3 = _os_log_pack_size(8LL);
    uint64_t v4 = (char *)&v13 - ((__chkstk_darwin() + 15) & 0xFFFFFFFFFFFFFFF0LL);
    uint64_t v9 = __error();
    uint64_t v10 = (_DWORD *)_os_log_pack_fill( v4,  v3,  *v9,  &_mh_execute_header,  "Bluetooth fatal error - crashing { build=release, reason=%d }",  v13);
    _DWORD *v10 = 67109120;
    v10[1] = (_DWORD)v1;
    goto LABEL_14;
  }

  uint64_t v3 = _os_log_pack_size(18LL);
  uint64_t v4 = (char *)&v13 - ((__chkstk_darwin() + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __error();
  uint64_t v6 = _os_log_pack_fill( v4,  v3,  *v5,  &_mh_execute_header,  "Bluetooth fatal error - crashing { build=internal, reason=%d, description=%{public}s }");
  sub_1001F142C((uint64_t)v1);
  uint64_t v8 = "?";
  if (v7) {
    uint64_t v8 = v7;
  }
  *(_DWORD *)uint64_t v6 = 67109378;
  *(_DWORD *)(v6 + 4) = (_DWORD)v1;
  *(_WORD *)(v6 + 8) = 2082;
  *(void *)(v6 + 10) = v8;
LABEL_14:
  os_log_t v11 = os_log_create("com.apple.bluetooth", "CBCrash");
  if (v11) {
    os_log_t v12 = v11;
  }
  else {
    os_log_t v12 = (os_log_t)&_os_log_default;
  }
  qword_1008D9DB8 = os_log_pack_send_and_compose(v4, v12, 16LL, 0LL, 0LL);
  abort_with_payload(18LL, 2LL, v4, v3, qword_1008D9DB8, 0LL);
  sub_1000B00F4();
}

void sub_1000B00F4()
{
  if (&_CoreCaptureControlCapture) {
    BOOL v0 = byte_1008DE67D == 0;
  }
  else {
    BOOL v0 = 1;
  }
  if (!v0)
  {
    sub_1001EE0E4("------------------------- Triggering BT FW logs capture ------------------------------\n");
    uint64_t v1 = (const void *)CoreCaptureControlCreate(kCFAllocatorDefault);
    CoreCaptureControlCapture(v1, "com.apple.driver.AppleMarconiBTDriver", "FirmwareLog", "bluetoothd-crash");
    CFRelease(v1);
  }

uint64_t sub_1000B0174()
{
  return os_variant_has_internal_diagnostics("com.apple.bluetooth");
}

double sub_1000B0180(uint64_t a1, const char *a2)
{
  if (os_variant_has_internal_diagnostics("com.apple.bluetooth"))
  {
    uint64_t v4 = _os_log_pack_size(28LL);
    uint64_t v5 = (char *)&v21 - ((__chkstk_darwin() + 15) & 0xFFFFFFFFFFFFFFF0LL);
    uint64_t v6 = __error();
    uint64_t v7 = _os_log_pack_fill( v5,  v4,  *v6,  &_mh_execute_header,  "Bluetooth fatal error - crashing { build=internal, reason=%d, description=%{public}s, context=%{public}s }");
    sub_1001F142C(a1);
    if (v8) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = "?";
    }
    if (a2) {
      uint64_t v10 = a2;
    }
    else {
      uint64_t v10 = "none";
    }
    sub_1000B0324(v7, a1, (uint64_t)v9, (uint64_t)v10);
  }

  else
  {
    uint64_t v4 = _os_log_pack_size(18LL);
    uint64_t v5 = (char *)&v21 - ((__chkstk_darwin() + 15) & 0xFFFFFFFFFFFFFFF0LL);
    os_log_t v11 = __error();
    uint64_t v12 = _os_log_pack_fill( v5,  v4,  *v11,  &_mh_execute_header,  "Bluetooth fatal error - crashing { build=release, reason=%d, context=%{public}s }");
    uint64_t v13 = "none";
    if (a2) {
      uint64_t v13 = a2;
    }
    *(_DWORD *)uint64_t v12 = 67109378;
    *(_DWORD *)(v12 + 4) = a1;
    *(_WORD *)(v12 + 8) = 2082;
    *(void *)(v12 + 10) = v13;
  }

  os_log_t v14 = os_log_create("com.apple.bluetooth", "CBCrash");
  if (v14) {
    os_log_t v15 = v14;
  }
  else {
    os_log_t v15 = (os_log_t)&_os_log_default;
  }
  qword_1008D9DB8 = os_log_pack_send_and_compose(v5, v15, 16LL, 0LL, 0LL);
  uint64_t v16 = abort_with_payload(18LL, 2LL, v5, v4, qword_1008D9DB8, 0LL);
  return sub_1000B0324(v16, v17, v18, v19);
}

double sub_1000B0324(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = 67109634LL;
  *(_DWORD *)a1 = 67109634;
  *(_DWORD *)(a1 + 4) = a2;
  *(_WORD *)(a1 + 8) = 2082;
  *(void *)(a1 + 10) = a3;
  *(_WORD *)(a1 + 18) = 2082;
  *(void *)(a1 + 20) = a4;
  return result;
}

void sub_1000B034C(uint64_t a1, const char *a2)
{
}

uint64_t sub_1000B0390(uint64_t a1, uint64_t a2)
{
  if (os_variant_has_internal_diagnostics("com.apple.bluetooth")) {
    sub_1001EE0E4( "Bluetooth error - restarting { build=internal, reason=%d, description=%!, context=%s }",  a1,  a1,  a2);
  }
  else {
    sub_1001EE0E4("Bluetooth error - restarting { build=release, reason=%d, context=%s }");
  }
  return sub_1000B9654();
}

void sub_1000B03EC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1000B0400(uint64_t a1)
{
  if (!dword_1008DE61C)
  {
    mach_timebase_info((mach_timebase_info_t)&dword_1008DE618);
    unsigned int v2 = dword_1008DE61C;
    uint64_t v3 = dword_1008DE61C;
    uint64_t v4 = dword_1008DE618;
    while ((_DWORD)v4)
    {
      if (v4 > v3)
      {
        uint64_t v5 = v4 % v3;
        uint64_t v4 = v3;
        uint64_t v3 = v5;
      }

      uint64_t v6 = v3;
      uint64_t v3 = v4;
      BOOL v7 = (_DWORD)v6 == (_DWORD)v4;
      uint64_t v4 = v6;
      if (v7)
      {
        LODWORD(v3) = 1;
        break;
      }
    }

    unsigned int v8 = dword_1008DE61C / v3;
    dword_1008DE618 /= v3;
    dword_1008DE61C /= v3;
    if ((v2 / v3) >> 1 >= 0x863)
    {
      sub_1001EE2A0();
      unsigned int v8 = dword_1008DE61C;
    }

    dword_1008DE61C = 1000000 * v8;
  }

  uint64_t result = mach_absolute_time();
  unint64_t v10 = result * dword_1008DE618 / dword_1008DE61C;
  *(_WORD *)(a1 + 4) = v10 % 0x3E8;
  *(_DWORD *)a1 = v10 / 0x3E8;
  return result;
}

uint64_t sub_1000B04EC(uint64_t a1)
{
  if (!dword_1008DE61C)
  {
    mach_timebase_info((mach_timebase_info_t)&dword_1008DE618);
    unsigned int v2 = dword_1008DE61C;
    uint64_t v3 = dword_1008DE61C;
    uint64_t v4 = dword_1008DE618;
    while ((_DWORD)v4)
    {
      if (v4 > v3)
      {
        uint64_t v5 = v4 % v3;
        uint64_t v4 = v3;
        uint64_t v3 = v5;
      }

      uint64_t v6 = v3;
      uint64_t v3 = v4;
      BOOL v7 = (_DWORD)v6 == (_DWORD)v4;
      uint64_t v4 = v6;
      if (v7)
      {
        LODWORD(v3) = 1;
        break;
      }
    }

    unsigned int v8 = dword_1008DE61C / v3;
    dword_1008DE618 /= v3;
    dword_1008DE61C /= v3;
    if ((v2 / v3) >> 1 >= 0x863)
    {
      sub_1001EE2A0();
      unsigned int v8 = dword_1008DE61C;
    }

    dword_1008DE61C = 1000000 * v8;
  }

  uint64_t result = mach_continuous_time();
  unint64_t v10 = result * dword_1008DE618 / dword_1008DE61C;
  *(_WORD *)(a1 + 4) = v10 % 0x3E8;
  *(_DWORD *)a1 = v10 / 0x3E8;
  return result;
}

uint64_t sub_1000B05D8()
{
  if (!dword_1008DE61C)
  {
    mach_timebase_info((mach_timebase_info_t)&dword_1008DE618);
    unsigned int v0 = dword_1008DE61C;
    uint64_t v1 = dword_1008DE61C;
    uint64_t v2 = dword_1008DE618;
    while ((_DWORD)v2)
    {
      if (v2 > v1)
      {
        uint64_t v3 = v2 % v1;
        uint64_t v2 = v1;
        uint64_t v1 = v3;
      }

      uint64_t v4 = v1;
      uint64_t v1 = v2;
      BOOL v5 = (_DWORD)v4 == (_DWORD)v2;
      uint64_t v2 = v4;
      if (v5)
      {
        LODWORD(v1) = 1;
        break;
      }
    }

    unsigned int v6 = dword_1008DE61C / v1;
    dword_1008DE618 /= v1;
    dword_1008DE61C /= v1;
    if ((v0 / v1) >> 1 >= 0x863)
    {
      sub_1001EE2A0();
      unsigned int v6 = dword_1008DE61C;
    }

    dword_1008DE61C = 1000000 * v6;
  }

  return mach_absolute_time() * dword_1008DE618 / dword_1008DE61C;
}

uint64_t sub_1000B068C()
{
  if (!dword_1008DE61C)
  {
    mach_timebase_info((mach_timebase_info_t)&dword_1008DE618);
    unsigned int v0 = dword_1008DE61C;
    uint64_t v1 = dword_1008DE61C;
    uint64_t v2 = dword_1008DE618;
    while ((_DWORD)v2)
    {
      if (v2 > v1)
      {
        uint64_t v3 = v2 % v1;
        uint64_t v2 = v1;
        uint64_t v1 = v3;
      }

      uint64_t v4 = v1;
      uint64_t v1 = v2;
      BOOL v5 = (_DWORD)v4 == (_DWORD)v2;
      uint64_t v2 = v4;
      if (v5)
      {
        LODWORD(v1) = 1;
        break;
      }
    }

    unsigned int v6 = dword_1008DE61C / v1;
    dword_1008DE618 /= v1;
    dword_1008DE61C /= v1;
    if ((v0 / v1) >> 1 >= 0x863)
    {
      sub_1001EE2A0();
      unsigned int v6 = dword_1008DE61C;
    }

    dword_1008DE61C = 1000000 * v6;
  }

  return mach_continuous_time() * dword_1008DE618 / dword_1008DE61C;
}

uint64_t sub_1000B0740(_DWORD *a1, __darwin_suseconds_t *a2)
{
  v7.tv_sec = 0LL;
  *(void *)&v7.tv_usec = 0LL;
  uint64_t v6 = 0LL;
  uint64_t result = gettimeofday(&v7, &v6);
  if (!(_DWORD)result)
  {
    if (a1)
    {
      if (HIDWORD(v6)) {
        int v5 = 3600;
      }
      else {
        int v5 = 0;
      }
      *a1 = LODWORD(v7.tv_sec) - 60 * v6 + v5;
    }

    if (a2) {
      *a2 = v7.tv_usec;
    }
  }

  return result;
}

uint64_t sub_1000B07B4(_DWORD *a1)
{
  v5.tv_sec = 0LL;
  *(void *)&v5.tv_usec = 0LL;
  uint64_t v4 = 0LL;
  uint64_t result = gettimeofday(&v5, &v4);
  if (!(_DWORD)result)
  {
    if (HIDWORD(v4)) {
      int v3 = 3600;
    }
    else {
      int v3 = 0;
    }
    *a1 = v3 + 60 * v4;
  }

  return result;
}

uint64_t sub_1000B080C(uint64_t a1)
{
  uint64_t v3 = 0LL;
  uint64_t result = sub_1000B0740((_DWORD *)&v3 + 1, (__darwin_suseconds_t *)&v3);
  *(_DWORD *)a1 = HIDWORD(v3);
  *(_WORD *)(a1 + 4) = (int)v3 / 1000;
  return result;
}

uint64_t sub_1000B0868(void *a1)
{
  uint64_t v3 = 0LL;
  uint64_t result = sub_1000B0740((_DWORD *)&v3 + 1, (__darwin_suseconds_t *)&v3);
  *a1 = __ROR8__(1000LL * (int)v3 + 1000000000LL * SHIDWORD(v3), 32);
  return result;
}

uint64_t sub_1000B08C0(void *a1)
{
  uint64_t result = mach_absolute_time();
  *a1 = __ROR8__(result, 32);
  return result;
}

double sub_1000B08E8(mach_timebase_info *a1)
{
  mach_timebase_info info = 0LL;
  mach_timebase_info(&info);
  double result = *(double *)&info;
  *a1 = info;
  return result;
}

double sub_1000B0920(uint64_t a1, uint64_t a2, _DWORD *a3, void *a4, double a5, double a6, double a7)
{
  unint64_t v7 = __ROR8__(a1, 32);
  unint64_t v8 = __ROR8__(a2, 32);
  BOOL v9 = v7 >= v8;
  unint64_t v10 = v7 - v8;
  if (v9)
  {
    LODWORD(a6) = *a3;
    LODWORD(a7) = a3[1];
    double result = (double)*(unint64_t *)&a6 / (double)*(unint64_t *)&a7 * (double)v10;
    *a4 = __ROR8__((unint64_t)result, 32);
  }

  return result;
}

uint64_t sub_1000B0964(int a1)
{
  return usleep(1000 * a1);
}

uint64_t sub_1000B0974( void *key, size_t keyLength, const void *a3, unsigned int a4, void *a5, unsigned int a6)
{
  size_t dataOutMoved = 0LL;
  CCCryptorRef cryptorRef = 0LL;
  CCCryptorStatus v10 = CCCryptorCreate(0, 0, 0, key, keyLength, 0LL, &cryptorRef);
  if (v10)
  {
    printf("Could not create cryptor : %d\n", v10);
    return 1041LL;
  }

  else
  {
    CCCryptorStatus v12 = CCCryptorUpdate(cryptorRef, a3, a4, a5, a6, &dataOutMoved);
    if (v12)
    {
      printf("Failed to encrypt : %d (need %d, got %zu)\n", v12, a6, dataOutMoved);
      CCCryptorRelease(cryptorRef);
      return 1042LL;
    }

    else
    {
      CCCryptorRelease(cryptorRef);
      if (dataOutMoved == a6)
      {
        return 0LL;
      }

      else
      {
        printf("Incorrect checksum size %ld, expecting %d\n", dataOutMoved, a6);
        return 1043LL;
      }
    }
  }

uint64_t sub_1000B0A68( void *key, size_t keyLength, const void *a3, unsigned int a4, void *a5, unsigned int a6)
{
  size_t dataOutMoved = 0LL;
  CCCryptorRef cryptorRef = 0LL;
  CCCryptorStatus v10 = CCCryptorCreate(1u, 0, 0, key, keyLength, 0LL, &cryptorRef);
  if (v10)
  {
    printf("Could not create cryptor : %d\n", v10);
    return 1041LL;
  }

  else
  {
    CCCryptorStatus v12 = CCCryptorUpdate(cryptorRef, a3, a4, a5, a6, &dataOutMoved);
    if (v12)
    {
      printf("Failed to encrypt : %d (need %d, got %zu)\n", v12, a6, dataOutMoved);
      CCCryptorRelease(cryptorRef);
      return 1042LL;
    }

    else
    {
      CCCryptorRelease(cryptorRef);
      if (dataOutMoved == a6)
      {
        return 0LL;
      }

      else
      {
        printf("Incorrect checksum size %ld, expecting %d\n", dataOutMoved, a6);
        return 1043LL;
      }
    }
  }

uint64_t sub_1000B0B5C(void *a1, size_t a2, const void *a3, unsigned int a4, void *a5, unsigned int a6)
{
  v39[0] = 0LL;
  v39[1] = 0LL;
  int v12 = a4 & 0xF;
  v38[0] = 0LL;
  v38[1] = 0LL;
  if (a4) {
    unsigned int v13 = a4 & 0xF;
  }
  else {
    unsigned int v13 = 16;
  }
  v37.i64[1] = 0LL;
  *(uint64_t *)((char *)v37.i64 + 1) = 0LL;
  LOBYTE(v15) = 0;
  uint64_t v16 = 15LL;
  do
  {
    unsigned int v17 = *((unsigned __int8 *)v38 + v16);
    v37.i8[v16] = v15 | (2 * v17);
    unsigned int v15 = v17 >> 7;
    --v16;
  }

  while (v16);
  int8x16_t v36 = 0uLL;
  v37.i8[0] = v15 | (2 * LOBYTE(v38[0]));
  if (SLOBYTE(v38[0]) < 0) {
    int8x16_t v18 = veorq_s8(v37, (int8x16_t)xmmword_1006BBD60);
  }
  else {
    int8x16_t v18 = v37;
  }
  int8x16_t v36 = v18;
  LOBYTE(v19) = 0;
  uint64_t v20 = 15LL;
  do
  {
    unsigned int v21 = v36.u8[v20];
    v37.i8[v20] = v19 | (2 * v21);
    unsigned int v19 = v21 >> 7;
    --v20;
  }

  while (v20);
  int8x16_t v35 = 0uLL;
  v37.i8[0] = v19 | (2 * v36.i8[0]);
  __dst = a5;
  if (v36.i8[0] < 0) {
    int8x16_t v22 = veorq_s8(v37, (int8x16_t)xmmword_1006BBD60);
  }
  else {
    int8x16_t v22 = v37;
  }
  int8x16_t v35 = v22;
  unsigned int v23 = a4 >> 4;
  if (v12) {
    ++v23;
  }
  if (a4) {
    size_t v24 = v23;
  }
  else {
    size_t v24 = 1LL;
  }
  uint64_t v25 = (char *)calloc(v24, 0x10uLL);
  uint64_t v26 = (char *)calloc(v24 + 1, 0x10uLL);
  uint64_t v27 = v26;
  if (v25 && v26)
  {
    memcpy(v25, a3, a4);
    uint64_t v28 = (16 * (int)v24 - 16) & 0xF0LL;
    if (v13)
    {
      v25[v28 + v13] |= 0x80u;
      uint64_t v29 = &v35;
    }

    else
    {
      uint64_t v29 = &v36;
    }

    *(int8x16_t *)&v25[v28] = veorq_s8(*(int8x16_t *)&v25[v28], *v29);
    uint64_t v30 = v27 + 16;
    if ((_BYTE)v24)
    {
      uint64_t v31 = 0LL;
      uint64_t v32 = 0LL;
      while (1)
      {
        for (uint64_t i = 0LL; i != 16; ++i)
          v25[v31 + i] ^= v27[v31 + i];
        ++v32;
        v31 += 16LL;
        if (v32 == v24) {
          goto LABEL_37;
        }
      }

      free(v27);
      free(v25);
      return 1047LL;
    }

    else
    {
LABEL_37:
      memcpy(__dst, &v30[v28], a6);
      free(v27);
      free(v25);
      return 0LL;
    }
  }

  else
  {
    sub_1001EE0E4("Could not allocate memory for the blocks");
    if (v25) {
      free(v25);
    }
    if (v27) {
      free(v27);
    }
    return 1046LL;
  }

uint64_t sub_1000B0E34(uint64_t a1, int a2, uint64_t a3, int a4, void *a5)
{
  size_t v19 = 128LL;
  CCCryptorStatus v10 = (void *)ccec_cp_256();
  __chkstk_darwin(v10, (32LL * *v10) | 0x10);
  int v12 = (uint64_t *)((char *)&v18 - v11);
  bzero((char *)&v18 - v11, v11);
  __chkstk_darwin(v13, (24LL * *v10 + 31) & 0xFFFFFFFFFFFFFFF0LL);
  unsigned int v15 = (uint64_t *)((char *)&v18 - v14);
  bzero((char *)&v18 - v14, v14);
  uint64_t result = 101LL;
  if (a2 == 64 && a4 == 96)
  {
    void *v15 = v10;
    if (ccec_make_pub(256LL, 32LL, a1, 32LL, a1 + 32, v15))
    {
      sub_1001EE0E4("Failed to ccec_make_pub.\n");
      return 1048LL;
    }

    else
    {
      void *v12 = v10;
      if (ccec_make_priv(256LL, 32LL, a3, 32LL, a3 + 32, 32LL, a3 + 64, v12))
      {
        sub_1001EE0E4("Failed to ccec_make_priv.\n");
        return 1049LL;
      }

      else
      {
        int v17 = ccecdh_compute_shared_secret(v12, v15, &v19, __src, 0LL);
        if (v17)
        {
          sub_1001EE0E4("Failed to ccecdh_compute_shared_secret (err=%d), outSize=%d.\n", v17, v19);
          return 1050LL;
        }

        else
        {
          memcpy(a5, __src, v19);
          return 0LL;
        }
      }
    }
  }

  return result;
}

uint64_t sub_1000B1020(_OWORD *a1, _OWORD *a2)
{
  if (byte_1008F2990)
  {
    sub_1001EE0E4("USING DEBUG KEYS\n");
    uint64_t v4 = 0LL;
    *a1 = xmmword_1006BBDB0;
    a1[1] = unk_1006BBDC0;
    timeval v5 = a1 + 2;
    a1[2] = xmmword_1006BBDD0;
    a1[3] = unk_1006BBDE0;
    *a2 = xmmword_1006BBDB0;
    a2[1] = unk_1006BBDC0;
    a2[2] = xmmword_1006BBDD0;
    a2[3] = unk_1006BBDE0;
    uint64_t v6 = a2 + 4;
    uint64_t v7 = 31LL;
    a2[4] = xmmword_1006BBD90;
    a2[5] = unk_1006BBDA0;
    do
    {
      char v8 = *((_BYTE *)a1 + v4);
      *((_BYTE *)a1 + v4) = *((_BYTE *)a1 + v7);
      *((_BYTE *)a1 + v7) = v8;
      ++v4;
      --v7;
    }

    while (v4 != 16);
    uint64_t v9 = 0LL;
    CCCryptorStatus v10 = (char *)a1 + 63;
    do
    {
      char v11 = *((_BYTE *)v5 + v9);
      *((_BYTE *)v5 + v9) = *v10;
      *v10-- = v11;
      ++v9;
    }

    while (v9 != 16);
    uint64_t v12 = 0LL;
    uint64_t v13 = 31LL;
    do
    {
      char v14 = *((_BYTE *)a2 + v12);
      *((_BYTE *)a2 + v12) = *((_BYTE *)a2 + v13);
      *((_BYTE *)a2 + v13) = v14;
      ++v12;
      --v13;
    }

    while (v12 != 16);
    uint64_t v15 = 0LL;
    uint64_t v16 = a2 + 2;
    int v17 = (char *)a2 + 63;
    do
    {
      char v18 = *((_BYTE *)v16 + v15);
      *((_BYTE *)v16 + v15) = *v17;
      *v17-- = v18;
      ++v15;
    }

    while (v15 != 16);
    uint64_t v19 = 0LL;
    uint64_t v20 = (char *)a2 + 95;
    do
    {
      char v21 = *((_BYTE *)v6 + v19);
      *((_BYTE *)v6 + v19) = *v20;
      *v20-- = v21;
      ++v19;
    }

    while (v19 != 16);
    return 0LL;
  }

  else
  {
    int key = 0;
    unsigned int v23 = (void *)ccec_cp_256();
    __chkstk_darwin(v23, (32LL * *v23) | 0x10);
    uint64_t v25 = &v29[-v24];
    bzero(&v29[-v24], v24);
    uint64_t v26 = ccrng(&key);
    if (v26)
    {
      int key = ccec_generate_key(v23, v26, v25);
      if (key)
      {
        sub_1001EE0E4("Failed to ccec_generate_key.\n");
      }

      else
      {
        if ((((unint64_t)(cczp_bitlen(*v25) + 7) >> 2) | 1) == 0x41)
        {
          ccec_x963_export(0LL, v31, v25);
          __int128 v27 = *(_OWORD *)((char *)&v31[1] + 1);
          *a1 = *(_OWORD *)((char *)v31 + 1);
          a1[1] = v27;
          __int128 v28 = *(_OWORD *)((char *)&v31[3] + 1);
          a1[2] = *(_OWORD *)((char *)&v31[2] + 1);
          a1[3] = v28;
          if (3 * ((unint64_t)(cczp_bitlen(*v25) + 7) >> 3) == 96)
          {
            ccec_x963_export(1LL, v31, v25);
            memmove(a2, (char *)v31 + 1, 0x60uLL);
            return 0LL;
          }
        }

        sub_1001EE0E4("ccec_x963_export_size is %d.\n");
      }
    }

    else
    {
      sub_1001EE0E4("ccrng failed: %d\n");
    }

    return 1051LL;
  }

void sub_1000B12F4()
{
  if (qword_1008DE680 != -1) {
    dispatch_once(&qword_1008DE680, &stru_100882360);
  }
  do
    unsigned int v0 = __ldaxr((unsigned int *)&unk_1008DE620);
  while (__stlxr(v0 + 1, (unsigned int *)&unk_1008DE620));
  if (!v0) {
    dispatch_async((dispatch_queue_t)qword_1008DE628, &stru_1008822A0);
  }
}

void sub_1000B1360(id a1)
{
  if (dword_1008DE630) {
    sub_1001EE2A0();
  }
  IOPMAssertionCreateWithName( @"PreventUserIdleSystemSleep",  0xFFu,  @"com.apple.BTStack",  (IOPMAssertionID *)&dword_1008DE630);
}

void sub_1000B139C()
{
  do
  {
    unsigned int v1 = __ldaxr((unsigned int *)&unk_1008DE620);
    unsigned int v2 = v1 - 1;
  }

  while (__stlxr(v2, (unsigned int *)&unk_1008DE620));
  if (!v2) {
    dispatch_async((dispatch_queue_t)qword_1008DE628, &stru_1008822E0);
  }
}

void sub_1000B13F8(id a1)
{
  if (dword_1008DE630)
  {
    IOPMAssertionRelease(dword_1008DE630);
    dword_1008DE630 = 0;
  }

void sub_1000B142C(char *cStr, const char *a2, _OWORD *a3, int a4)
{
  LODWORD(v4) = a4;
  if (qword_1008DE640 != -1) {
    dispatch_once(&qword_1008DE640, &stru_100882320);
  }
  if (!off_1008DE638) {
    return;
  }
  CFStringRef v8 = CFStringCreateWithCString(0LL, cStr, 0x8000100u);
  Mutable = CFDictionaryCreateMutable(0LL, 1LL, &kCFCopyStringDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  if (!(_DWORD)v4) {
    goto LABEL_45;
  }
  char v10 = 0;
  uint64_t v4 = v4;
  do
  {
    CFStringRef v11 = CFStringCreateWithCString(0LL, a2, 0x8000100u);
    *(_OWORD *)length = *a3;
    if (LOBYTE(length[0]) > 0x10u)
    {
      if (LOBYTE(length[0]) == 17)
      {
        CFIndex v14 = length[1];
        CFIndex v17 = 6LL;
      }

      else
      {
        if (LOBYTE(length[0]) == 18)
        {
          CFIndex v14 = length[1];
        }

        else
        {
          if (LOBYTE(length[0]) != 19)
          {
LABEL_30:
            uint64_t v15 = "(NULL)";
LABEL_31:
            char v18 = (const __CFBoolean *)CFStringCreateWithCString(0LL, v15, 0x8000100u);
            goto LABEL_38;
          }

          CFIndex v14 = LODWORD(length[1]);
        }

        CFIndex v17 = WORD1(length[0]);
      }

      char v18 = CFDataCreate(0LL, (const UInt8 *)v14, v17);
    }

    else
    {
      switch(LOBYTE(length[0]))
      {
        case 1:
          switch(WORD1(length[0]))
          {
            case 4u:
              CFNumberType v13 = kCFNumberIntType;
              goto LABEL_35;
            case 2u:
              __int16 valuePtr = length[1];
              p___int16 valuePtr = (CFIndex *)&valuePtr;
              CFNumberType v13 = kCFNumberShortType;
              break;
            case 1u:
              LOBYTE(valuePtr) = length[1];
              p___int16 valuePtr = (CFIndex *)&valuePtr;
              CFNumberType v13 = kCFNumberCharType;
              break;
            default:
              goto LABEL_40;
          }

          goto LABEL_37;
        case 2:
          switch(WORD1(length[0]))
          {
            case 4u:
              CFNumberType v13 = kCFNumberSInt32Type;
LABEL_35:
              p___int16 valuePtr = &length[1];
              break;
            case 2u:
              __int16 valuePtr = length[1];
              p___int16 valuePtr = (CFIndex *)&valuePtr;
              CFNumberType v13 = kCFNumberSInt16Type;
              break;
            case 1u:
              LOBYTE(valuePtr) = length[1];
              p___int16 valuePtr = (CFIndex *)&valuePtr;
              CFNumberType v13 = kCFNumberSInt8Type;
              break;
            default:
              goto LABEL_40;
          }

void sub_1000B172C(id a1)
{
  off_1008DE638 = (uint64_t (*)(void, void, void, void))dlsym( (void *)0xFFFFFFFFFFFFFFFFLL,  "PLLogRegisteredEvent");
}

uint64_t sub_1000B1754(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    vm_size_t v2 = 0x20000LL;
    if (v1)
    {
      unsigned int v3 = *(_DWORD *)(v1 + 8);
      if (v3) {
        vm_size_t v2 = v3;
      }
      else {
        vm_size_t v2 = 0x20000LL;
      }
    }
  }

  else
  {
    vm_size_t v2 = 0x20000LL;
  }

  zone = malloc_create_zone(v2, 0);
  qword_1008DE648 = (uint64_t)zone;
  if (!zone) {
    return 104LL;
  }
  malloc_set_zone_name(zone, "BTStack");
  return 0LL;
}

uint64_t sub_1000B17B4()
{
  qword_1008DE648 = 0LL;
  return 0LL;
}

BOOL sub_1000B17E0()
{
  return qword_1008DE648 == 0;
}

void *sub_1000B17F4(size_t size)
{
  if (HIDWORD(size)) {
    return 0LL;
  }
  else {
    return malloc_zone_malloc((malloc_zone_t *)qword_1008DE648, size);
  }
}

void *sub_1000B1814(size_t size)
{
  if (HIDWORD(size)) {
    return 0LL;
  }
  else {
    return malloc_zone_calloc((malloc_zone_t *)qword_1008DE648, 1uLL, size);
  }
}

void sub_1000B1838(void *ptr)
{
}

uint64_t sub_1000B1848()
{
  uint64_t v6 = 0LL;
  bzero(v7, 0x400uLL);
  sub_1000B0740((_DWORD *)&v6 + 1, (__darwin_suseconds_t *)&v6);
  uint64_t result = open("/dev/uart.log", 0);
  if ((result & 0x80000000) == 0)
  {
    int v1 = result;
    if (qword_1008DEA88 != -1) {
      dispatch_once(&qword_1008DEA88, &stru_1008823A0);
    }
    __strlcat_chk(v7, byte_1008DE688, 1024LL, 1024LL);
    __strlcat_chk(v7, "/uart.log", 1024LL, 1024LL);
    int v2 = open(v7, 521, 420LL);
    if (v2 < 0)
    {
      int v3 = v1;
    }

    else
    {
      int v3 = v2;
      dprintf(v2, "START DUMP : %d.%d\n", HIDWORD(v6), v6);
      ssize_t v4 = read(v1, __buf, 0x400uLL);
      if (v4 >= 1)
      {
        for (ssize_t i = v4; i > 0; ssize_t i = read(v1, __buf, 0x400uLL))
          write(v3, __buf, i);
      }

      close(v1);
    }

    return close(v3);
  }

  return result;
}

uint64_t sub_1000B19C0(uint64_t result, unsigned int a2)
{
  if (byte_1008DE65C)
  {
    int v3 = (_BYTE *)result;
    if (dword_1008DE650) {
      sub_1001EEB14(dword_1008DE650);
    }
    if (a2 >= 7)
    {
      BOOL v4 = v3[2] == 27 && v3[3] == 3;
      if (v4 && v3[6] == 255)
      {
        sub_1001EE0E4("Hardward Core dump complete, reporting to daemon");
        sub_100112E28(245LL);
      }
    }

    if ((byte_1008DE654 & 1) == 0)
    {
      byte_1008DE654 = 1;
      sub_1001EE0E4("Hardware Core dump starts\n");
    }

    ++dword_1008DE658;
    if ((byte_1008DEA90 & 1) == 0)
    {
      int v10 = 0;
      unsigned int v9 = 0;
      sub_1000B0740(&v10, (__darwin_suseconds_t *)&v9);
      time_t v7 = v10;
      uint64_t v8 = v9;
      timeval v5 = gmtime(&v7);
      strftime(byte_1008DEB91, 0x3CuLL, "%Y_%m_%d_%H_%M_%S", v5);
      if (qword_1008DEA88 != -1) {
        dispatch_once(&qword_1008DEA88, &stru_1008823A0);
      }
      __sprintf_chk(byte_1008DEA91, 0, 0x100uLL, "%s/bluetoothd-FWCOREDUMP_%s.log", byte_1008DE688, byte_1008DEB91);
      byte_1008DEA90 = 1;
    }

    uint64_t result = open(byte_1008DEA91, 521, 420LL);
    if ((result & 0x80000000) == 0)
    {
      int v6 = result;
      write(result, v3, a2);
      return close(v6);
    }
  }

  return result;
}

uint64_t sub_1000B1B88()
{
  return byte_1008DE65C;
}

void sub_1000B1B94()
{
}

uint64_t sub_1000B1BB4(uint64_t result)
{
  byte_1008DE65C = result;
  return result;
}

void sub_1000B1BC0()
{
  byte_1008DE654 = 1;
}

uint64_t sub_1000B1BD0()
{
  return byte_1008DE654;
}

uint64_t sub_1000B1BDC()
{
  return dword_1008DE658;
}

__n128 sub_1000B1BE8(__int128 *a1, __n128 *a2)
{
  xmmword_1008DE65D = *a1;
  __n128 result = *a2;
  xmmword_1008DE66D = (__int128)*a2;
  return result;
}

uint64_t sub_1000B1C0C(const void *a1, int a2, uint64_t a3, int a4)
{
  uint64_t result = 101LL;
  if (a2 == 16 && a4 == 7)
  {
    __int128 v8 = 0uLL;
    uint64_t result = sub_1000B0A68(&xmmword_1008DE66D, 0x10uLL, a1, 0x10u, &v8, 0x10u);
    if (!(_DWORD)result)
    {
      if (*(void *)((char *)&v8 + 7) == *(void *)((char *)&xmmword_1008DE65D + 7)
        && HIBYTE(v8) == (unint64_t)HIBYTE(xmmword_1008DE65D))
      {
        uint64_t result = 0LL;
        *(_DWORD *)a3 = v8;
        *(_WORD *)(a3 + 4) = WORD2(v8);
        *(_BYTE *)(a3 + 6) = BYTE6(v8);
      }

      else
      {
        return 131LL;
      }
    }
  }

  return result;
}

void sub_1000B1CE0(uuid_t out, uint64_t a2, unsigned int a3)
{
  if (a3)
  {
    __int128 v5 = xmmword_1008DE65D;
    __memcpy_chk(&v5, a2, a3, 16LL);
    if (sub_1000B0974(&xmmword_1008DE66D, 0x10uLL, &v5, 0x10u, out, 0x10u))
    {
      sub_1000AFE20(105LL);
      sub_1000B1DAC(v4);
    }
  }

  else
  {
    uuid_generate(out);
  }

uint64_t sub_1000B1DAC(uint64_t result)
{
  byte_1008DE67D = result;
  return result;
}

uint64_t sub_1000B1DB8()
{
  int64x2_t v0 = vdupq_n_s64(MGGetProductType());
  return vmaxv_u16((uint16x4_t)vmovn_s32( vuzp1q_s32( (int32x4_t)vceqq_s64(v0, (int64x2_t)xmmword_1006BBD70),  (int32x4_t)vceqq_s64(v0, (int64x2_t)xmmword_1006BBD80)))) & 1;
}

void sub_1000B1DFC(id a1)
{
  qword_1008DE628 = (uint64_t)dispatch_queue_create("com.apple.BTStack.IOPMAssertion", 0LL);
}

void sub_1000B1E24(id a1)
{
  uint64_t v1 = NSStartSearchPathEnumerationPrivate(5LL, 16LL);
  NSGetNextSearchPathEnumeration(v1, &unk_1008DE688);
  __strlcat_chk(&unk_1008DE688, "/Logs/Bluetooth", 1024LL, 1024LL);
}

uint64_t sub_1000B1E6C()
{
  return sub_10017A6F0(31, (uint64_t)sub_1000B1E7C);
}

void sub_1000B1E7C(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  if ((_DWORD)a1 != 31) {
    sub_1001EE2A0();
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"_attClassicConnectionInd on psm %x, addr %:, cid %x", v6, v7, v8, v9, v10, v11, v12, a1);
    CFNumberType v13 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v45 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v14 = sub_10012D890((uint64_t)a2);
  if (v14)
  {
    uint64_t v15 = v14;
    if (sub_1001A23CC(v14) || sub_1001A2248((uint64_t)a2))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"ATT session with this connection already exists, reject duplicate",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v43);
        unsigned int v23 = (os_log_s *)sub_100086554(0x5Cu);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      uint64_t v24 = sub_100174B2C(0LL, 0LL, 0LL, a3, 0LL, 0, 0LL);
      if ((_DWORD)v24)
      {
        uint64_t v25 = v24;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"OI_L2CAP_Accept rejection of duplicate connection failed with result %!",  v26,  v27,  v28,  v29,  v30,  v31,  v32,  v25);
          uint64_t v33 = (os_log_s *)sub_100086554(0x5Cu);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }
      }
    }

    else
    {
      uint64_t v34 = sub_1001A2144((uint64_t)a2, 0);
      if (v34)
      {
        *((_WORD *)v34 + 8) = a3;
        *(void *)uint64_t v34 = v15;
        if (qword_1008DEBD8) {
          qword_1008DEBD8(((unint64_t)*a2 << 40) | ((unint64_t)a2[1] << 32) | ((unint64_t)a2[2] << 24) | ((unint64_t)a2[3] << 16) | ((unint64_t)a2[4] << 8) | a2[5]);
        }
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"ATT failed to create session", v35, v36, v37, v38, v39, v40, v41, v43);
          uint64_t v42 = (os_log_s *)sub_100086554(0x5Cu);
          if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        sub_1001EE2A0();
      }
    }
  }

uint64_t sub_1000B20D4(unint64_t a1, int a2)
{
  unint64_t v3 = sub_1001BEE0C(a1);
  int v37 = v3;
  __int16 v38 = WORD2(v3);
  uint64_t v4 = sub_10012D890((uint64_t)&v37);
  if (!v4) {
    return 101LL;
  }
  __int128 v5 = sub_1001A23CC(v4);
  if (!v5)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"ATT_ClassicAccept can not find bearer", v9, v10, v11, v12, v13, v14, v15, v36);
      uint64_t v16 = (os_log_s *)sub_100086554(0x5Cu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    return 101LL;
  }

  uint64_t v6 = v5;
  unsigned int v7 = *((unsigned __int16 *)v5 + 8);
  if (!*((_WORD *)v5 + 8))
  {
    sub_1001EE2A0();
    unsigned int v7 = *((unsigned __int16 *)v6 + 8);
  }

  uint64_t v8 = sub_100174B2C( (uint64_t)sub_1000B2260,  (uint64_t)sub_1000B2588,  (uint64_t)sub_1000B2758,  v7,  (uint64_t)&xmmword_1006BBDF0,  a2,  (uint64_t)&unk_1008823D8);
  if (!(_DWORD)v8 && (a2 & 1) != 0) {
    return 0LL;
  }
  if (a2)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Att L2CAP Accept error with %!", v18, v19, v20, v21, v22, v23, v24, v8);
      uint64_t v25 = (os_log_s *)sub_100086554(0x5Cu);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  uint64_t v26 = sub_1001A1D3C(v6);
  if ((_DWORD)v26)
  {
    uint64_t v27 = (uint64_t)v26;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Failed to remove ATT session with %!", v28, v29, v30, v31, v32, v33, v34, v27);
      uint64_t v35 = (os_log_s *)sub_100086554(0x5Cu);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  return v8;
}

void sub_1000B2260(unsigned int a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"_attClassicConnectCfm: cid %x inMTU %d outMTU %d result %!",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  a1);
    uint64_t v15 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v16 = (unsigned __int8 *)sub_1001A246C(a1);
  if (a2 >= a3) {
    unsigned int v17 = a3;
  }
  else {
    unsigned int v17 = a2;
  }
  if (v17 <= 0x30) {
    __int16 v18 = 48;
  }
  else {
    __int16 v18 = v17;
  }
  if (v16)
  {
    uint64_t v19 = v16;
    uint64_t v20 = v16[8];
    uint64_t v21 = v16[9];
    uint64_t v22 = v16[10];
    uint64_t v23 = v16[11];
    uint64_t v24 = v16[12];
    uint64_t v25 = v16[13];
    if ((_DWORD)a4)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"ATT cfm result is %!", v26, v27, v28, v29, v30, v31, v32, a4);
        uint64_t v33 = (os_log_s *)sub_100086554(0x5Cu);
        if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      uint64_t v34 = sub_1001A1D3C(v19);
      if (!(_DWORD)v34) {
        goto LABEL_31;
      }
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"ATT Session destroy failed with %!", v35, v36, v37, v38, v39, v40, v41, (uint64_t)v34);
        uint64_t v42 = (os_log_s *)sub_100086554(0x5Cu);
        if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      goto LABEL_30;
    }

    *(void *)__int128 buf = 0LL;
    a4 = sub_1001723A0(a1, buf);
    if ((_DWORD)a4)
    {
      sub_1001EE134((uint64_t)"L2CAP get handle failed", v51, v52, v53, v54, v55, v56, v57, v67);
      int v58 = (os_log_s *)sub_100086554(0x5Cu);
      if (!os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)) {
        goto LABEL_30;
      }
    }

    else
    {
      if ((unsigned __int8 *)sub_1001A20C0((uint64_t)v19, *(uint64_t *)buf, v18) == v19)
      {
        LODWORD(v34) = 1;
        goto LABEL_31;
      }

      if (!sub_1000A86F0()
        || (sub_1001EE134((uint64_t)"ATT cfm failed to update session", v59, v60, v61, v62, v63, v64, v65, v67),
            uint64_t v66 = (os_log_s *)sub_100086554(0x5Cu),
            !os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)))
      {
LABEL_30:
        LODWORD(v34) = 0;
LABEL_31:
        if (off_1008DEBE0) {
          off_1008DEBE0((v20 << 40) | (v21 << 32) | (v22 << 24) | (v23 << 16) | (v24 << 8) | v25, a4);
        }
        if ((_DWORD)v34)
        {
          sub_1001A1910();
          sub_1001A1924();
        }

        return;
      }
    }

    sub_100657858();
    goto LABEL_30;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"ATT cfm failed to find session", v43, v44, v45, v46, v47, v48, v49, v67);
    uint64_t v50 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_1000B2588(unsigned int a1, uint64_t a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"_attClassicDisconnectCB: cid %x result %!", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v33 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v12 = (unsigned __int8 *)sub_1001A246C(a1);
  if (v12)
  {
    uint64_t v13 = (unsigned __int16 **)v12;
    if (off_1008DEBE8) {
      off_1008DEBE8( ((unint64_t)v12[8] << 40) | ((unint64_t)v12[9] << 32) | ((unint64_t)v12[10] << 24) | ((unint64_t)v12[11] << 16) | ((unint64_t)v12[12] << 8) | v12[13],  a2);
    }
    sub_1001A1938();
    uint64_t v14 = sub_1001A23F4(*v13);
    if ((_DWORD)v14)
    {
      uint64_t v15 = v14;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"ATT Session destroy failed with %!", v16, v17, v18, v19, v20, v21, v22, v15);
        uint64_t v23 = (os_log_s *)sub_100086554(0x5Cu);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"attClassicDisconnectCB received on cid %d, but no bearer was found",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  a1);
      uint64_t v31 = (os_log_s *)sub_100086554(0x5Cu);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EE2A0();
  }

void sub_1000B2758(unsigned int a1, unsigned __int8 *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v17 = 0LL;
  uint64_t v7 = sub_1001723A0(a1, &v17);
  if ((_DWORD)v7)
  {
    uint64_t v8 = v7;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"ATT recv data ind get connection handle failed with status %!",  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v8);
      uint64_t v16 = (os_log_s *)sub_100086554(0x5Cu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    sub_1001A3368(v17, a2, a3, a4);
  }

uint64_t sub_1000B27F8(unint64_t a1)
{
  unint64_t v1 = sub_1001BEE0C(a1);
  int v39 = v1;
  __int16 v40 = WORD2(v1);
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"BT_ATT_ClassicConnect addr=%: ", v2, v3, v4, v5, v6, v7, v8, (uint64_t)&v39);
    uint64_t v9 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v42 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (sub_1001A2248((uint64_t)&v39))
  {
    sub_1001EE134( (uint64_t)"Classic Connect Att session with this connection already exists!!!",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  v38);
    uint64_t v18 = (os_log_s *)sub_100086554(0x5Cu);
    if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      return 101LL;
    }
    goto LABEL_7;
  }

  uint64_t v21 = sub_1001A2144((uint64_t)&v39, 1);
  if (!v21)
  {
    sub_1001EE134((uint64_t)"Classic Connect failed to allocate bearer", v30, v31, v32, v33, v34, v35, v36, v38);
    uint64_t v37 = (os_log_s *)sub_100086554(0x5Cu);
    if (!os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
      return 101LL;
    }
LABEL_7:
    sub_100657F74();
    return 101LL;
  }

  uint64_t v19 = sub_100174028( (uint64_t)sub_1000B2260,  (uint64_t)sub_1000B2588,  (uint64_t)sub_1000B2758,  31,  (uint64_t)&v39,  (uint64_t)&xmmword_1006BBDF0,  (_WORD *)v21 + 8,  (uint64_t)&unk_1008823D8);
  if ((_DWORD)v19)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Att L2CAP Connect error with %!", v22, v23, v24, v25, v26, v27, v28, v19);
      uint64_t v29 = (os_log_s *)sub_100086554(0x5Cu);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  return v19;
}

uint64_t sub_1000B29F0(unint64_t a1)
{
  unint64_t v1 = sub_1001BEE0C(a1);
  int v25 = v1;
  __int16 v26 = WORD2(v1);
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"ATT ClassicDisconnect addr=%: ", v2, v3, v4, v5, v6, v7, v8, (uint64_t)&v25);
    uint64_t v9 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v28 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v11 = sub_10012D890((uint64_t)&v25);
  if (!v11) {
    return 101LL;
  }
  uint64_t v12 = sub_1001A23CC(v11);
  if (!v12) {
    return 101LL;
  }
  uint64_t v13 = v12;
  unsigned int v14 = *((unsigned __int16 *)v12 + 8);
  if (!v14)
  {
    sub_1001EE2A0();
    unsigned int v14 = *((unsigned __int16 *)v13 + 8);
  }

  uint64_t v15 = sub_1001759FC(v14, 436LL);
  if ((_DWORD)v15)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Att L2CAP Disconnect error with %!", v16, v17, v18, v19, v20, v21, v22, v15);
      uint64_t v23 = (os_log_s *)sub_100086554(0x5Cu);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  return v15;
}

uint64_t sub_1000B2B44(uint64_t a1, int a2)
{
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  int v13 = 0;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"ATT Classic handle registration:  0x%x -> 0x%x", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v19 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  byte_1008DEBB8 = 1;
  word_1008DEBBA = 2;
  dword_1008DEBC0 = a1;
  byte_1008DEBC8 = 1;
  word_1008DEBCA = 2;
  dword_1008DEBD0 = a2;
  unsigned int v14 = &unk_100882408;
  LOWORD(v15) = 3;
  uint64_t v16 = off_1008D7130;
  LOWORD(v17) = word_1008D7138;
  return sub_1001E139C((uint64_t)&v14, &v13);
}

__n128 sub_1000B2C84(__n128 *a1)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  if (qword_1008DEBD8) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = off_1008DEBE0 == 0LL;
  }
  if (!v3 || off_1008DEBE8 != 0LL) {
    sub_1001EE2A0();
  }
  if (a1)
  {
    __n128 result = *a1;
    off_1008DEBE8 = (uint64_t (*)(void, void))a1[1].n128_u64[0];
    *(__n128 *)&qword_1008DEBD8 = result;
  }

  return result;
}

void sub_1000B2CE0()
{
  qword_1008DEBD8 = 0LL;
  off_1008DEBE0 = 0LL;
  off_1008DEBE8 = 0LL;
}

uint64_t sub_1000B2CF4(uint64_t a1, _WORD *a2)
{
  v3[0] = xmmword_1006BBDF0;
  v3[1] = unk_1006BBE00;
  return sub_100173838( 31,  (uint64_t)v3,  a1,  (uint64_t)sub_1000B2260,  (uint64_t)sub_1000B2588,  (uint64_t)sub_1000B2758,  a2,  (uint64_t)&unk_1008823D8);
}

uint64_t sub_1000B2D50(unsigned int a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  __int16 v20 = 0;
  int v19 = 0;
  uint64_t result = sub_1001988A4(a1, (uint64_t)&v19);
  if (!(_DWORD)result)
  {
    uint64_t v9 = sub_1001A2248((uint64_t)&v19);
    if (v9 || (uint64_t v9 = (uint64_t)sub_1001A2144((uint64_t)&v19, 1)) != 0)
    {
      *(_WORD *)(v9 + 16) = a1;
      sub_1000B2260(a1, a2, a3, a4);
      return 0LL;
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"BT_ATT_FastConnect_ClassicConnect error creating ATT signaling",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v18);
        uint64_t v17 = (os_log_s *)sub_100086554(0x5Cu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 104LL;
    }
  }

  return result;
}

uint64_t sub_1000B2E1C(uint64_t a1, unsigned int a2)
{
  uint64_t v16 = 0LL;
  uint64_t v3 = sub_10012D890(a1);
  uint64_t v4 = v3;
  if (v3 && (uint64_t v5 = (unsigned __int16 **)sub_1001A23CC(v3)) != 0LL)
  {
    uint64_t v6 = sub_1001A23F4(*v5);
    if ((_DWORD)v6)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"BT_ATT_ClassicFastDisconnectAtt destroy session error with %d",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v6);
        uint64_t v14 = (os_log_s *)sub_100086554(0x5Cu);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

  else
  {
    uint64_t v6 = 101LL;
  }

  if (a2)
  {
    if (!sub_100171EC4(a2, &v16))
    {
      if (v16)
      {
        sub_1001734D8(v16);
        if (v4) {
          sub_10011286C(v4);
        }
      }
    }
  }

  return v6;
}

uint64_t sub_1000B2EEC(uint64_t a1)
{
  byte_1008DF730 = 1;
  __int128 v2 = *(_OWORD *)a1;
  qword_1008DF748 = *(void *)(a1 + 16);
  xmmword_1008DF738 = v2;
  if (byte_1008DF750) {
    return 0LL;
  }
  v39[0] = (uint64_t)&unk_1008824B8;
  v39[1] = 3LL;
  void v39[2] = (uint64_t)off_1008D7140;
  v39[3] = (unsigned __int16)word_1008D7148;
  uint64_t v5 = sub_10017A9E8(&word_1008DF752);
  if ((_DWORD)v5)
  {
    uint64_t v3 = v5;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"L2CAP psm allocation failed!", v6, v7, v8, v9, v10, v11, v12, v39[0]);
      uint64_t v13 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
LABEL_8:
      }
        sub_10065A878();
    }
  }

  else
  {
    uint64_t v14 = sub_10017A6F0((unsigned __int16)word_1008DF752, (uint64_t)sub_1000B50B4);
    if (!(_DWORD)v14)
    {
      byte_1008DF758 = 1;
      word_1008DF75A = 2;
      dword_1008DF760 = (unsigned __int16)word_1008DF752;
      uint64_t v3 = sub_1001E139C((uint64_t)v39, (int *)algn_1008DF754);
      if (!(_DWORD)v3)
      {
        byte_1008DF750 = 1;
        return v3;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_SDPDB_AddServiceRecord failed", v23, v24, v25, v26, v27, v28, v29, v39[0]);
        uint64_t v30 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }

      sub_10017A8B8((unsigned __int16)word_1008DF752);
      goto LABEL_18;
    }

    uint64_t v3 = v14;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_L2CAP_Register failed", v15, v16, v17, v18, v19, v20, v21, v39[0]);
      uint64_t v22 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        goto LABEL_8;
      }
    }
  }

uint64_t sub_1000B312C(uint64_t a1)
{
  uint64_t v2 = 0LL;
  while (1)
  {
    int v3 = (unsigned __int16)word_1008DEBF0[v2];
    int v4 = (unsigned __int16)word_1008DEBF0[v2 + 1];
    if ((v4 | (v3 << 16)) == (_DWORD)a1) {
      break;
    }
    v2 += 36LL;
    if (v2 == 1080)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Invalid Handle %x", v5, v6, v7, v8, v9, v10, v11, a1);
        uint64_t v12 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 414LL;
    }
  }

  uint64_t v14 = (int *)&word_1008DEBF0[v2 + 2];
  uint64_t v15 = sub_100087DC8((uint64_t)&unk_1008DF460, 30LL, (unsigned __int16)word_1008DEBF0[v2 + 1]);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_10008784C(v3, v4, v14, 2, 2);
    uint64_t v38 = 0LL;
    __int16 v37 = 0;
    __int16 v18 = *((_WORD *)v17 + 1);
    LOWORD(v38) = *((_WORD *)v17 + 5);
    WORD1(v38) = v18;
    sub_1001EF520((uint64_t)(v17 + 1), 2u);
    sub_1001EFB10((unsigned __int8 *)v17 + 16, (char *)&v38, 4uLL, 2u);
    sub_1001EFB10((unsigned __int8 *)v17 + 16, (char *)&v37, *((unsigned __int16 *)v17 + 64), 2u);
    *((void *)v17 + 19) = v16;
    uint64_t v13 = sub_10008799C((uint64_t)v17, (uint64_t)sub_1000B4924);
    if (!(_DWORD)v13)
    {
      sub_1000B5288(2, a1);
      return v13;
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"sendDisconnectReqPacket channel not found: addr=%: cid=%d sid=%d result=%d",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  (uint64_t)v14);
      uint64_t v26 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_10065A9B4();
      }
    }

    uint64_t v13 = 406LL;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"sendDisconnectReqPacket failed", v27, v28, v29, v30, v31, v32, v33, v36);
    uint64_t v34 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  return v13;
}

__int16 *sub_1000B3360(int *a1, __int16 a2, uint64_t a3)
{
  unint64_t v4 = 0x7FFFFFFFFFFFFBC8uLL;
  while (1)
  {
    uint64_t v5 = &word_1008DEBF0[v4];
    if (!*(void *)&word_1008DEBF0[v4 + 1088]) {
      break;
    }
    v4 += 36LL;
    if (!(v4 * 2)) {
      return 0LL;
    }
  }

  uint64_t result = v5 + 1080;
  int v7 = *a1;
  v5[1084] = *((_WORD *)a1 + 2);
  *((_DWORD *)v5 + 541) = v7;
  v5[1081] = a2;
  v5[1080] = *(_WORD *)(a3 + 8);
  *((void *)v5 + 272) = *(void *)a3;
  *((_DWORD *)v5 + 552) = *(_DWORD *)(a3 + 10);
  *((_DWORD *)v5 + 556) = 0;
  *(void *)(v5 + 1106) = *(void *)(a3 + 14);
  return result;
}

uint64_t sub_1000B33D0(int *a1, int a2, int a3, __int16 a4, __int16 a5, void **a6)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"sendConnectReqPacket: addr=%: cid=%u sid=%u major=%u minor=%u result=%u",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  (uint64_t)a1);
    uint64_t v19 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v36 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v20 = sub_100087DC8((uint64_t)&unk_1008DF460, 30LL, a2);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_10008784C(a3, a2, a1, 0, 12);
    if (!v22) {
      sub_1001EE2A0();
    }
    uint64_t v34 = 0LL;
    __int16 v23 = *((_WORD *)v22 + 1);
    LOWORD(v34) = *((_WORD *)v22 + 5);
    WORD1(v34) = v23;
    *(_WORD *)__int128 buf = a4;
    *(_WORD *)&buf[2] = a5;
    uint64_t v36 = *a6;
    sub_1001EF520((uint64_t)(v22 + 1), 2u);
    sub_1001EFB10((unsigned __int8 *)v22 + 16, (char *)&v34, 4uLL, 2u);
    sub_1001EFB10((unsigned __int8 *)v22 + 16, (char *)buf, *((unsigned __int16 *)v22 + 64), 2u);
    *((void *)v22 + 19) = v21;
    uint64_t v24 = sub_10008799C((uint64_t)v22, (uint64_t)sub_1000B4924);
    if (!(_DWORD)v24) {
      sub_1000B5288(0, a2 | (a3 << 16));
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"sendConnectReqPacket channel not found: addr=%: cid=%d sid=%d result=%d",  v25,  v26,  v27,  v28,  v29,  v30,  v31,  (uint64_t)a1);
      uint64_t v32 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_10065A9B4();
      }
    }

    return 406LL;
  }

  return v24;
}

double sub_1000B3610(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a3 <= 3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Incoming message has invalid length %d", v4, v5, v6, v7, v8, v9, v10, v3);
      uint64_t v12 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        goto LABEL_4;
      }
    }

    return result;
  }

  uint64_t v116 = 0LL;
  if (!a2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aap/aap_client.c",  662,  "buf");
  }
  uint64_t v15 = 0LL;
  unsigned __int16 v16 = a3 - 4;
  int v17 = *a2;
  uint64_t v18 = a2[1];
  do
  {
    if (__PAIR64__((unsigned __int16)word_1008DEBF0[v15 + 1], (unsigned __int16)word_1008DEBF0[v15]) == __PAIR64__(a1, v18))
    {
      if (sub_100171EC4(a1, (uint64_t *)&v116) || !sub_10017AB4C(v116))
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Can't find channel %d", v27, v28, v29, v30, v31, v32, v33, a1);
          uint64_t v34 = (os_log_s *)sub_100086554(0x52u);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
LABEL_15:
          }
            sub_100657858();
        }

        return result;
      }

      int v35 = v17 - 1;
      uint64_t v36 = &word_1008DEBF0[v15];
      switch(v35)
      {
        case 0:
          if (v3 < 6)
          {
            unsigned int v81 = 4;
          }

          else
          {
            uint64_t v37 = a2[2];
            if (a2[2])
            {
              char v38 = 0;
              goto LABEL_73;
            }

            unsigned int v81 = 6;
          }

          BOOL v82 = &word_1008DEBF0[v15];
          if (LOBYTE(word_1008DEBF0[v15 + 12]) != 3)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"l2capRecvDataInd: BT_AAP_CONNECT_RSP connection in unhandled state sid=%u cid=%u state=%u",  v90,  v91,  v92,  v93,  v94,  v95,  v96,  v18);
              char v97 = (os_log_s *)sub_100086554(0x52u);
              if (os_log_type_enabled(v97, OS_LOG_TYPE_ERROR)) {
                sub_100657858();
              }
            }

LABEL_61:
            else {
              __int16 v98 = v3;
            }
            int v86 = &word_1008DEBF0[v15 + 26];
            uint64_t v3 = (unsigned __int16)(v98 - 10);
            uint64_t v88 = (__int16 *)((char *)v86 + v3);
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aap/aap_client.c");
            int v89 = 0;
            goto LABEL_65;
          }

          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aap/aap_client.c");
          LODWORD(v84) = v81;
          goto LABEL_61;
        case 1:
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"l2capRecvDataInd: BT_AAP_DISCONNECT_REQ", v47, v48, v49, v50, v51, v52, v53, v115);
            uint64_t v54 = (os_log_s *)sub_100086554(0x52u);
            if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v55 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446210;
              uint64_t v118 = v55;
              _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          uint64_t v56 = sub_10017AB4C(v116);
          uint64_t v57 = sub_1000B6028((int *)(v56 + 10), a1, v18);
          if ((_DWORD)v57)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"sendDisconnectRspPacket failed", v58, v59, v60, v61, v62, v63, v64, v115);
              uint64_t v65 = (os_log_s *)sub_100086554(0x52u);
              if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)) {
                sub_10065A878();
              }
            }
          }

          uint64_t v66 = *(void *)&word_1008DEBF0[v15 + 8];
          if (v66)
          {
            uint64_t v67 = *(void (**)(void, uint64_t))(v66 + 16);
            if (v67) {
              v67(a1 | ((_DWORD)v18 << 16), v57);
            }
          }

  if (a1) {
    uint64_t v46 = *a1;
  }
  else {
    uint64_t v46 = 0LL;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Sending UPGRADE for lmhandle 0x%4x pipe:0x%4X to %s",  v47,  v48,  v49,  v50,  v51,  v52,  v53,  v46);
    uint64_t v55 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v56 = sub_1001EDDCC();
      *(_DWORD *)__len_2 = 136446210;
      *(void *)&__len_2[4] = v56;
      _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, " %{public}s", __len_2, 0xCu);
    }
  }

  uint64_t v57 = sub_10008F3E4(0LL, a1, v8, v44, (unsigned __int16)(__len + 3), 0LL);
  if (v57 == 412) {
    uint64_t v11 = 0LL;
  }
  else {
    uint64_t v11 = v57;
  }
  if (!(_DWORD)v11)
  {
    uint64_t v61 = 0u;
    uint64_t v62 = 0u;
    LOBYTE(v61) = 1;
    WORD1(v61) = 4;
    DWORD2(v61) = 8;
    LOBYTE(v62) = 1;
    WORD1(v62) = 4;
    DWORD2(v62) = a2 | (a3 << 8);
    memcpy(__len_2, "state", sizeof(__len_2));
    sub_1000B142C("Magnet Operation", (const char *)__len_2, &v61, 2);
    sub_100102348(v8, 0x3A98u);
  }

  sub_1000B1838(v44);
  return v11;
}

        sub_1000B1838(v15);
        return v24;
      }

      uint64_t v122 = *a1;
      if (*((_BYTE *)a3 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
      }

      else if ((unsigned __int16)*v16 > v27)
      {
        if (*v653 == 2)
        {
          uint64_t v123 = *((void *)a1 + 1);
          uint64_t v124 = *a3;
          *((_WORD *)a3 + 6) = v26 + 3;
          *(_BYTE *)(v124 + (unsigned __int16)(v26 + 2)) = 3 * v122 + 1;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else
          {
            unsigned int v125 = (unsigned __int16)*v652;
            if ((unsigned __int16)*v16 > v125)
            {
              if (*v653 == 2)
              {
                unint64_t v126 = *a3;
                *((_WORD *)a3 + 6) = v125 + 1;
                *(_BYTE *)(v126 + v125) = v122;
                uint64_t v127 = v122;
                if ((_BYTE)v122)
                {
                  while (!*((_BYTE *)a3 + 15))
                  {
                    int v128 = (unsigned __int16)*v652;
                    if (*v653 != 2)
                    {
                      v486 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                      goto LABEL_649;
                    }

                    int v86 = 0;
                    *(_BYTE *)(*a3 + v128) = *(_DWORD *)v123;
                    *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(*(_DWORD *)v123);
                    *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 2) = *(_WORD *)(v123 + 2);
                    *((_WORD *)a3 + 6) += 3;
                    v123 += 4LL;
                    if (!--v127) {
                      goto LABEL_622;
                    }
                  }

                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_647:
                  v486 = "ByteStream_NumReadBytesAvail(*pBs) >= 3";
LABEL_649:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1607,  v486);
                }

                goto LABEL_596;
              }

              v556 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_930:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1604,  v556);
            }
          }

          v556 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_930;
        }

        v555 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_926:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1601,  v555);
      }

      v555 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      goto LABEL_926;
    }

    if (v17 != 56)
    {
      if (v17 != 62)
      {
        if (v17 != 95) {
          goto LABEL_61;
        }
        uint64_t v43 = *a1;
        if (*((_BYTE *)a3 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
        }

        else if ((unsigned __int16)*v16 > v27)
        {
          if (*v653 == 2)
          {
            uint64_t v44 = a1[2];
            uint64_t v45 = *(_BYTE *)(a2 + 6);
            uint64_t v46 = *a3;
            *((_WORD *)a3 + 6) = v26 + 3;
            *(_BYTE *)(v46 + (unsigned __int16)(v26 + 2)) = v45;
            if (*((_BYTE *)a3 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }

            else
            {
              uint64_t v47 = (unsigned __int16)*v652;
              if ((unsigned __int16)*v16 > v47)
              {
                if (*v653 == 2)
                {
                  uint64_t v48 = *a3;
                  *((_WORD *)a3 + 6) = v47 + 1;
                  *(_BYTE *)(v48 + v47) = 1;
                  if (*((_BYTE *)a3 + 15))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                  }

                  else
                  {
                    uint64_t v49 = (unsigned __int16)*v652;
                    if ((unsigned __int16)*v16 - (int)v49 > 1)
                    {
                      if (*v653 == 2)
                      {
                        *(_BYTE *)(*a3 + v49) = v43;
                        *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v43);
                        uint64_t v50 = *((_WORD *)a3 + 6) + 2;
                        *((_WORD *)a3 + 6) = v50;
                        if (*((_BYTE *)a3 + 15))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corest"
                                                 "ack/hci/hcicmdapi.c");
                        }

                        else if ((unsigned __int16)*v16 - v50 > 1)
                        {
                          if (*v653 == 2)
                          {
                            *(_BYTE *)(*a3 + v50) = v44;
                            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v44);
                            *((_WORD *)a3 + 6) += 2;
LABEL_126:
                            int v86 = 1;
                            goto LABEL_622;
                          }

                          v545 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_884:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1582,  v545);
                        }

                        v545 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
                        goto LABEL_884;
                      }

                      v544 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_880:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1581,  v544);
                    }
                  }

                  v544 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
                  goto LABEL_880;
                }

                v543 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_876:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1580,  v543);
              }
            }

            v543 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
            goto LABEL_876;
          }

          v542 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_872:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1578,  v542);
        }

        v542 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
        goto LABEL_872;
      }

      uint64_t v114 = *(void *)a1;
      if (*((_BYTE *)a3 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
      }

      else if ((unsigned __int16)*v16 > v27)
      {
        if (*v653 == 2)
        {
          uint64_t v115 = (_OWORD *)*((void *)a1 + 1);
          uint64_t v116 = *(_BYTE *)(a2 + 6);
          uint64_t v117 = *a3;
          *((_WORD *)a3 + 6) = v26 + 3;
          *(_BYTE *)(v117 + (unsigned __int16)(v26 + 2)) = v116;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else
          {
            uint64_t v118 = (unsigned __int16)*v652;
            if ((unsigned __int16)*v16 > v118)
            {
              if (*v653 == 2)
              {
                uint64_t v119 = *a3;
                *((_WORD *)a3 + 6) = v118 + 1;
                *(_BYTE *)(v119 + v118) = 1;
                if (*((_BYTE *)a3 + 15))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                }

                else
                {
                  uint64_t v120 = (unsigned __int16)*v652;
                  if ((unsigned __int16)*v16 - (int)v120 > 5)
                  {
                    if (*v653 == 2)
                    {
                      sub_1001F0050(*a3 + v120, v114, 6uLL);
                      uint64_t v121 = *((_WORD *)a3 + 6) + 6;
                      *((_WORD *)a3 + 6) = v121;
                      if (*((_BYTE *)a3 + 15))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestac"
                                               "k/hci/hcicmdapi.c");
                      }

                      else
                      {
                        uint64_t v23 = (_WORD *)a3 + 6;
                        uint64_t v18 = (char *)a3 + 14;
                        if ((unsigned __int16)*v16 - (unint64_t)v121 > 0xF)
                        {
                          if (*v653 == 2)
                          {
                            *(_OWORD *)(*a3 + v121) = *v115;
                            *v652 += 16;
                            goto LABEL_126;
                          }

                          v552 = "((*pBs)).__RWFlag == BYTESTREAM_WRITE";
LABEL_912:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1558,  v552);
                        }
                      }

                      v552 = "ByteStream_NumReadBytesAvail((*pBs)) >= (sizeof(*pLinkKey))";
                      goto LABEL_912;
                    }

                    v551 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_908:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1557,  v551);
                  }
                }

                v551 = "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE";
                goto LABEL_908;
              }

              v550 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_904:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1556,  v550);
            }
          }

          v550 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_904;
        }

        v549 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_900:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1554,  v549);
      }

      v549 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      goto LABEL_900;
    }

    uint64_t v105 = *a1;
    uint64_t v106 = a1[2];
    uint64_t v107 = a1[4];
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    }

    else if ((unsigned __int16)*v16 > v27)
    {
      if (*v653 == 2)
      {
        uint64_t v61 = (const void *)*((void *)a1 + 3);
        uint64_t v108 = *a3;
        *((_WORD *)a3 + 6) = v26 + 3;
        *(_BYTE *)(v108 + (unsigned __int16)(v26 + 2)) = v107 + 2;
        if (*((_BYTE *)a3 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
        }

        else
        {
          int v109 = (unsigned __int16)*v652;
          if ((unsigned __int16)*v16 > v109)
          {
            if (*v653 == 2)
            {
              __int128 v110 = *a3;
              *((_WORD *)a3 + 6) = v109 + 1;
              *(_BYTE *)(v110 + v109) = v105;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
              }

              else
              {
                uint64_t v111 = (unsigned __int16)*v652;
                if ((unsigned __int16)*v16 > v111)
                {
                  if (*v653 == 2)
                  {
                    uint64_t v70 = v107;
                    uint64_t v112 = *a3;
                    *((_WORD *)a3 + 6) = v111 + 1;
                    *(_BYTE *)(v112 + v111) = v106;
                    uint64_t v72 = *a3;
                    uint64_t v73 = *((unsigned __int16 *)a3 + 6);
                    if (*((_BYTE *)a3 + 15))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                      uint64_t v18 = (char *)a3 + 14;
                      uint64_t v113 = 0;
                    }

                    else
                    {
                      uint64_t v113 = (unsigned __int16)*v16 - (_DWORD)v73;
                    }

                    if (v113 < (int)v70)
                    {
                      size_t v129 = "ByteStream_NumReadBytesAvail(*pBs) >= (conditionLength)";
LABEL_914:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1530,  v129);
                    }

                    if (*v18 != 2)
                    {
                      size_t v129 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                      goto LABEL_914;
                    }

                    goto LABEL_350;
                  }

                  v548 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_896:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1529,  v548);
                }
              }

              v548 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              goto LABEL_896;
            }

            v547 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_892:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1528,  v547);
          }
        }

        v547 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
        goto LABEL_892;
      }

      v546 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_888:
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1525,  v546);
    }

    v546 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_888;
  }

  switch(v17)
  {
    case 205:
    case 206:
      uint64_t v57 = *a1;
      uint64_t v58 = a1[2];
      uint64_t v59 = a1[4];
      uint64_t v60 = a1[6];
      if (*((_BYTE *)a3 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
      }

      else if ((unsigned __int16)*v16 > v27)
      {
        if (*v653 == 2)
        {
          uint64_t v61 = (const void *)*((void *)a1 + 4);
          uint64_t v62 = *a3;
          *((_WORD *)a3 + 6) = v26 + 3;
          *(_BYTE *)(v62 + (unsigned __int16)(v26 + 2)) = v60 + 4;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else
          {
            uint64_t v63 = (unsigned __int16)*v652;
            if ((unsigned __int16)*v16 > v63)
            {
              if (*v653 == 2)
              {
                uint64_t v64 = *a3;
                *((_WORD *)a3 + 6) = v63 + 1;
                *(_BYTE *)(v64 + v63) = v57;
                if (*((_BYTE *)a3 + 15))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                }

                else
                {
                  uint64_t v65 = (unsigned __int16)*v652;
                  if ((unsigned __int16)*v16 > v65)
                  {
                    if (*v653 == 2)
                    {
                      uint64_t v66 = *a3;
                      *((_WORD *)a3 + 6) = v65 + 1;
                      *(_BYTE *)(v66 + v65) = v58;
                      if (*((_BYTE *)a3 + 15))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestac"
                                               "k/hci/hcicmdapi.c");
                      }

                      else
                      {
                        uint64_t v67 = (unsigned __int16)*v652;
                        if ((unsigned __int16)*v16 > v67)
                        {
                          if (*v653 == 2)
                          {
                            uint64_t v68 = *a3;
                            *((_WORD *)a3 + 6) = v67 + 1;
                            *(_BYTE *)(v68 + v67) = v59;
                            if (*((_BYTE *)a3 + 15))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/co"
                                                     "restack/hci/hcicmdapi.c");
                            }

                            else
                            {
                              uint64_t v69 = (unsigned __int16)*v652;
                              if ((unsigned __int16)*v16 > v69)
                              {
                                if (*v653 == 2)
                                {
                                  uint64_t v70 = v60;
                                  uint64_t v71 = *a3;
                                  *((_WORD *)a3 + 6) = v69 + 1;
                                  *(_BYTE *)(v71 + v69) = v60;
                                  uint64_t v72 = *a3;
                                  uint64_t v73 = *((unsigned __int16 *)a3 + 6);
                                  if (*((_BYTE *)a3 + 15))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/corestack/hci/hcicmdapi.c");
                                    uint64_t v18 = (char *)a3 + 14;
                                    uint64_t v74 = 0;
                                  }

                                  else
                                  {
                                    uint64_t v74 = (unsigned __int16)*v16 - (_DWORD)v73;
                                  }

                                  if (v74 < (int)v70) {
                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1846,  "ByteStream_NumReadBytesAvail(*pBs) >= (dataLength)");
                                  }
                                  if (*v18 != 2) {
                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1846,  "(*pBs).__RWFlag == BYTESTREAM_WRITE");
                                  }
                                  goto LABEL_350;
                                }

                                v561 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_950:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1845,  v561);
                              }
                            }

                            v561 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                            goto LABEL_950;
                          }

                          v560 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_946:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1844,  v560);
                        }
                      }

                      v560 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                      goto LABEL_946;
                    }

                    v559 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_942:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1843,  v559);
                  }
                }

                v559 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                goto LABEL_942;
              }

              v558 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_938:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1842,  v558);
            }
          }

          v558 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_938;
        }

        v557 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_934:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1841,  v557);
      }

      v557 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      goto LABEL_934;
    case 207:
      BOOL v130 = a1;
      uint64_t v131 = *a1;
      v658 = a1 + 4;
      int v132 = v130[2];
      uint64_t v133 = v132;
      if ((_BYTE)v132)
      {
        uint64_t v134 = *(char **)v658;
        uint64_t v135 = (_BYTE *)*((void *)v658 + 1);
        uint64_t v136 = (char *)*((void *)v658 + 2);
      }

      else
      {
        uint64_t v136 = 0LL;
        uint64_t v135 = 0LL;
        uint64_t v134 = 0LL;
      }

      if (*((_BYTE *)a3 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
      }

      else if ((unsigned __int16)*v16 > v27)
      {
        if (*v653 == 2)
        {
          v320 = *a3;
          *((_WORD *)a3 + 6) = v26 + 3;
          *(_BYTE *)(v320 + (unsigned __int16)(v26 + 2)) = (4 * v132) | 2;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else
          {
            uint64_t v321 = (unsigned __int16)*v652;
            if ((unsigned __int16)*v16 > v321)
            {
              if (*v653 == 2)
              {
                v322 = *a3;
                *((_WORD *)a3 + 6) = v321 + 1;
                *(_BYTE *)(v322 + v321) = v131;
                if (*((_BYTE *)a3 + 15))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                }

                else
                {
                  uint64_t v323 = (unsigned __int16)*v652;
                  if ((unsigned __int16)*v16 > v323)
                  {
                    if (*v653 == 2)
                    {
                      v324 = *a3;
                      *((_WORD *)a3 + 6) = v323 + 1;
                      *(_BYTE *)(v324 + v323) = v132;
                      if ((_BYTE)v132)
                      {
                        while (!*((_BYTE *)a3 + 15))
                        {
                          size_t v325 = (unsigned __int16)*v652;
                          if (*v653 != 2)
                          {
                            v491 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                            goto LABEL_669;
                          }

                          v326 = *v134;
                          uint64_t v327 = *a3;
                          *((_WORD *)a3 + 6) = v325 + 1;
                          *(_BYTE *)(v327 + v325) = v326;
                          if (*((_BYTE *)a3 + 15))
                          {
                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/core"
                                                   "stack/hci/hcicmdapi.c");
LABEL_671:
                            v492 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_673:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1758,  v492);
                          }

                          uint64_t v328 = (unsigned __int16)*v652;
                          if (*v653 != 2)
                          {
                            v492 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                            goto LABEL_673;
                          }

                          *(_BYTE *)(*a3 + v328) = *v135;
                          *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = v135[1];
                          uint64_t v329 = *((_WORD *)a3 + 6);
                          *((_WORD *)a3 + 6) = v329 + 2;
                          if (*((_BYTE *)a3 + 15))
                          {
                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/core"
                                                   "stack/hci/hcicmdapi.c");
LABEL_675:
                            v493 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_677:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1759,  v493);
                          }

                          if (*v653 != 2)
                          {
                            v493 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                            goto LABEL_677;
                          }

                          int v86 = 0;
                          uint64_t v330 = *v136++;
                          uint64_t v331 = *a3;
                          *((_WORD *)a3 + 6) = v329 + 3;
                          *(_BYTE *)(v331 + (unsigned __int16)(v329 + 2)) = v330;
                          v135 += 2;
                          ++v134;
                          if (!--v133) {
                            goto LABEL_622;
                          }
                        }

                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestac"
                                               "k/hci/hcicmdapi.c");
LABEL_667:
                        v491 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_669:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1757,  v491);
                      }

                      goto LABEL_596;
                    }

                    v587 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1057:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1754,  v587);
                  }
                }

                v587 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                goto LABEL_1057;
              }

              v586 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1053:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1753,  v586);
            }
          }

          v586 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_1053;
        }

        v585 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1049:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1752,  v585);
      }

      v585 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      goto LABEL_1049;
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 214:
    case 216:
      goto LABEL_61;
    case 213:
      uint64_t v137 = *a1;
      uint64_t v138 = a1[2];
      uint64_t v139 = a1[4];
      if (*((_BYTE *)a3 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
      }

      else if ((unsigned __int16)*v16 > v27)
      {
        if (*v653 == 2)
        {
          uint64_t v61 = (const void *)*((void *)a1 + 3);
          BOOL v140 = *a3;
          *((_WORD *)a3 + 6) = v26 + 3;
          *(_BYTE *)(v140 + (unsigned __int16)(v26 + 2)) = v139 + 3;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else
          {
            uint64_t v141 = (unsigned __int16)*v652;
            if ((unsigned __int16)*v16 > v141)
            {
              if (*v653 == 2)
              {
                char v142 = *a3;
                *((_WORD *)a3 + 6) = v141 + 1;
                *(_BYTE *)(v142 + v141) = v137;
                if (*((_BYTE *)a3 + 15))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                }

                else
                {
                  uint64_t v143 = (unsigned __int16)*v652;
                  if ((unsigned __int16)*v16 > v143)
                  {
                    if (*v653 == 2)
                    {
                      int v144 = *a3;
                      *((_WORD *)a3 + 6) = v143 + 1;
                      *(_BYTE *)(v144 + v143) = v138;
                      if (*((_BYTE *)a3 + 15))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestac"
                                               "k/hci/hcicmdapi.c");
                      }

                      else
                      {
                        unsigned int v145 = (unsigned __int16)*v652;
                        if ((unsigned __int16)*v16 > v145)
                        {
                          if (*v653 == 2)
                          {
                            uint64_t v70 = v139;
                            uint64_t v146 = *a3;
                            *((_WORD *)a3 + 6) = v145 + 1;
                            *(_BYTE *)(v146 + v145) = v139;
                            uint64_t v72 = *a3;
                            uint64_t v73 = *((unsigned __int16 *)a3 + 6);
                            if (*((_BYTE *)a3 + 15))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/co"
                                                     "restack/hci/hcicmdapi.c");
                              uint64_t v18 = (char *)a3 + 14;
                              unint64_t v147 = 0;
                            }

                            else
                            {
                              unint64_t v147 = (unsigned __int16)*v16 - (_DWORD)v73;
                            }

                            if (v147 < (int)v70)
                            {
                              v588 = "ByteStream_NumReadBytesAvail(*pBs) >= (dataLength)";
                            }

                            else
                            {
                              if (*v18 == 2)
                              {
LABEL_350:
                                memmove((void *)(v72 + v73), v61, v70);
                                int v86 = 0;
                                uint64_t v23 = (_WORD *)a3 + 6;
                                uint64_t v332 = *v652 + v70;
LABEL_620:
                                os_log_s *v23 = v332;
LABEL_621:
                                uint64_t v18 = (char *)a3 + 14;
                                goto LABEL_622;
                              }

                              v588 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                            }

                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1877,  v588);
                          }

                          v565 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_967:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1876,  v565);
                        }
                      }

                      v565 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                      goto LABEL_967;
                    }

                    v564 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_963:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1875,  v564);
                  }
                }

                v564 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                goto LABEL_963;
              }

              v563 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_959:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1874,  v563);
            }
          }

          v563 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_959;
        }

        v562 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_955:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1873,  v562);
      }

      v562 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      goto LABEL_955;
    case 215:
      unsigned int v148 = 0;
      int v149 = *a1;
      unsigned int v150 = a1[2];
      uint64_t v151 = a1[4];
      char v152 = (char *)*((void *)a1 + 3);
      v153 = (_BYTE *)*((void *)a1 + 4);
      uint64_t v154 = (_BYTE *)*((void *)a1 + 5);
      uint64_t v155 = 8;
      unsigned int v156 = v151;
      do
      {
        v148 += v156 & 1;
        v156 >>= 1;
        --v155;
      }

      while (v155);
      if (*((_BYTE *)a3 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
      }

      else if ((unsigned __int16)*v16 > v27)
      {
        if (*v653 == 2)
        {
          uint64_t v157 = *a3;
          *((_WORD *)a3 + 6) = v26 + 3;
          *(_BYTE *)(v157 + (unsigned __int16)(v26 + 2)) = 5 * v148 + 4;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else
          {
            int v158 = (unsigned __int16)*v652;
            if ((unsigned __int16)*v16 > v158)
            {
              if (*v653 == 2)
              {
                uint64_t v159 = *a3;
                *((_WORD *)a3 + 6) = v158 + 1;
                *(_BYTE *)(v159 + v158) = v149;
                if (*((_BYTE *)a3 + 15))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                }

                else
                {
                  uint64_t v160 = (unsigned __int16)*v652;
                  if ((unsigned __int16)*v16 > v160)
                  {
                    if (*v653 == 2)
                    {
                      int v161 = *a3;
                      *((_WORD *)a3 + 6) = v160 + 1;
                      *(_BYTE *)(v161 + v160) = v150;
                      if (*((_BYTE *)a3 + 15))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestac"
                                               "k/hci/hcicmdapi.c");
                      }

                      else
                      {
                        unsigned __int16 v162 = (unsigned __int16)*v652;
                        if ((unsigned __int16)*v16 > v162)
                        {
                          if (*v653 == 2)
                          {
                            uint64_t v163 = *a3;
                            *((_WORD *)a3 + 6) = v162 + 1;
                            *(_BYTE *)(v163 + v162) = v151;
                            if (v148)
                            {
                              uint64_t v164 = v148;
                              while (!*((_BYTE *)a3 + 15))
                              {
                                v165 = (unsigned __int16)*v652;
                                if (*v653 != 2)
                                {
                                  v488 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                  goto LABEL_657;
                                }

                                uint64_t v166 = *v152;
                                int v167 = *a3;
                                *((_WORD *)a3 + 6) = v165 + 1;
                                *(_BYTE *)(v167 + v165) = v166;
                                if (*((_BYTE *)a3 + 15))
                                {
                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/corestack/hci/hcicmdapi.c");
LABEL_659:
                                  v489 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_661:
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1808,  v489);
                                }

                                v168 = (unsigned __int16)*v652;
                                if (*v653 != 2)
                                {
                                  v489 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                  goto LABEL_661;
                                }

                                *(_BYTE *)(*a3 + v168) = *v153;
                                *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = v153[1];
                                uint64_t v169 = *((_WORD *)a3 + 6) + 2;
                                *((_WORD *)a3 + 6) = v169;
                                if (*((_BYTE *)a3 + 15))
                                {
                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/corestack/hci/hcicmdapi.c");
LABEL_663:
                                  v490 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_665:
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1809,  v490);
                                }

                                if (*v653 != 2)
                                {
                                  v490 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                  goto LABEL_665;
                                }

                                int v86 = 0;
                                *(_BYTE *)(*a3 + v169) = *v154;
                                *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = v154[1];
                                *((_WORD *)a3 + 6) += 2;
                                v154 += 2;
                                v153 += 2;
                                ++v152;
                                if (!--v164) {
                                  goto LABEL_622;
                                }
                              }

                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/co"
                                                     "restack/hci/hcicmdapi.c");
LABEL_655:
                              v488 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_657:
                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1807,  v488);
                            }

                            goto LABEL_596;
                          }

                          v569 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_983:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1803,  v569);
                        }
                      }

                      v569 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                      goto LABEL_983;
                    }

                    v568 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_979:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1802,  v568);
                  }
                }

                v568 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                goto LABEL_979;
              }

              v567 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_975:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1801,  v567);
            }
          }

          v567 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_975;
        }

        v566 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_971:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1800,  v566);
      }

      v566 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      goto LABEL_971;
    case 217:
      uint64_t v170 = 0;
      v171 = *a1;
      v172 = a1[2];
      v173 = a1[4];
      int v174 = *((void *)a1 + 3);
      uint64_t v175 = a1[8];
      uint64_t v176 = *((void *)a1 + 5);
      uint64_t v177 = *((void *)a1 + 6);
      uint64_t v178 = *((void *)a1 + 7);
      uint64_t v179 = *((void *)a1 + 8);
      uint64_t v180 = *((void *)a1 + 9);
      uint64_t v181 = *((void *)a1 + 10);
      v182 = *((void *)a1 + 11);
      uint64_t v183 = *((void *)a1 + 12);
      v184 = 8;
      size_t v185 = v175;
      do
      {
        v170 += v185 & 1;
        v185 >>= 1;
        --v184;
      }

      while (v184);
      if (*((_BYTE *)a3 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
      }

      else if ((unsigned __int16)*v16 > v27)
      {
        if (*v653 == 2)
        {
          v186 = *a3;
          *((_WORD *)a3 + 6) = v26 + 3;
          *(_BYTE *)(v186 + (unsigned __int16)(v26 + 2)) = (16 * v170) | 0xA;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else
          {
            v187 = (unsigned __int16)*v652;
            if ((unsigned __int16)*v16 > v187)
            {
              if (*v653 == 2)
              {
                v188 = *a3;
                *((_WORD *)a3 + 6) = v187 + 1;
                *(_BYTE *)(v188 + v187) = v171;
                if (*((_BYTE *)a3 + 15))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                }

                else
                {
                  char v189 = (unsigned __int16)*v652;
                  if ((unsigned __int16)*v16 > v189)
                  {
                    if (*v653 == 2)
                    {
                      v190 = *a3;
                      *((_WORD *)a3 + 6) = v189 + 1;
                      *(_BYTE *)(v190 + v189) = v172;
                      if (*((_BYTE *)a3 + 15))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestac"
                                               "k/hci/hcicmdapi.c");
                      }

                      else
                      {
                        uint64_t v191 = (unsigned __int16)*v652;
                        if ((unsigned __int16)*v16 > v191)
                        {
                          if (*v653 == 2)
                          {
                            uint64_t v192 = *a3;
                            *((_WORD *)a3 + 6) = v191 + 1;
                            *(_BYTE *)(v192 + v191) = v173;
                            if (*((_BYTE *)a3 + 15))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/co"
                                                     "restack/hci/hcicmdapi.c");
                            }

                            else
                            {
                              size_t v193 = (unsigned __int16)*v652;
                              if ((unsigned __int16)*v16 - (int)v193 > 5)
                              {
                                v646 = v182;
                                v649 = v181;
                                if (*v653 == 2)
                                {
                                  sub_1001F0050(*a3 + v193, v174, 6uLL);
                                  uint64_t v194 = *((_WORD *)a3 + 6);
                                  *((_WORD *)a3 + 6) = v194 + 6;
                                  if (*((_BYTE *)a3 + 15))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/corestack/hci/hcicmdapi.c");
                                  }

                                  else
                                  {
                                    uint64_t v18 = (char *)a3 + 14;
                                    if ((unsigned __int16)*v16 > (unsigned __int16)(v194 + 6))
                                    {
                                      uint64_t v23 = (_WORD *)a3 + 6;
                                      if (*v653 == 2)
                                      {
                                        v195 = 0LL;
                                        v196 = *a3;
                                        *((_WORD *)a3 + 6) = v194 + 7;
                                        *(_BYTE *)(v196 + (unsigned __int16)(v194 + 6)) = v175;
                                        while (1)
                                        {
                                          if ((v175 & 1) != 0)
                                          {
                                            if (*((_BYTE *)a3 + 15))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_802:
                                              v525 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_804:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/coresta ck/hci/hcicmdapi.c",  1953,  v525);
                                            }

                                            uint64_t v197 = (unsigned __int16)*v652;
                                            if (*v653 != 2)
                                            {
                                              v525 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                              goto LABEL_804;
                                            }

                                            *(_BYTE *)(*a3 + v197) = *(_BYTE *)(v176 + v195);
                                            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v176 + v195 + 1);
                                            uint64_t v198 = *((_WORD *)a3 + 6) + 2;
                                            *((_WORD *)a3 + 6) = v198;
                                            if (*((_BYTE *)a3 + 15))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_806:
                                              v526 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_808:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/coresta ck/hci/hcicmdapi.c",  1954,  v526);
                                            }

                                            if (*v653 != 2)
                                            {
                                              v526 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                              goto LABEL_808;
                                            }

                                            *(_BYTE *)(*a3 + v198) = *(_BYTE *)(v177 + v195);
                                            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v177 + v195 + 1);
                                            uint64_t v199 = *((_WORD *)a3 + 6) + 2;
                                            *((_WORD *)a3 + 6) = v199;
                                            if (*((_BYTE *)a3 + 15))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_810:
                                              v527 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_812:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/coresta ck/hci/hcicmdapi.c",  1955,  v527);
                                            }

                                            if (*v653 != 2)
                                            {
                                              v527 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                              goto LABEL_812;
                                            }

                                            *(_BYTE *)(*a3 + v199) = *(_BYTE *)(v178 + v195);
                                            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v178 + v195 + 1);
                                            uint64_t v200 = *((_WORD *)a3 + 6) + 2;
                                            *((_WORD *)a3 + 6) = v200;
                                            if (*((_BYTE *)a3 + 15))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_814:
                                              v528 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_816:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/coresta ck/hci/hcicmdapi.c",  1956,  v528);
                                            }

                                            if (*v653 != 2)
                                            {
                                              v528 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                              goto LABEL_816;
                                            }

                                            *(_BYTE *)(*a3 + v200) = *(_BYTE *)(v179 + v195);
                                            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v179 + v195 + 1);
                                            uint64_t v201 = *((_WORD *)a3 + 6) + 2;
                                            *((_WORD *)a3 + 6) = v201;
                                            if (*((_BYTE *)a3 + 15))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_818:
                                              v529 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_820:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/coresta ck/hci/hcicmdapi.c",  1957,  v529);
                                            }

                                            if (*v653 != 2)
                                            {
                                              v529 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                              goto LABEL_820;
                                            }

                                            *(_BYTE *)(*a3 + v201) = *(_BYTE *)(v180 + v195);
                                            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v180 + v195 + 1);
                                            uint64_t v202 = *((_WORD *)a3 + 6) + 2;
                                            *((_WORD *)a3 + 6) = v202;
                                            if (*((_BYTE *)a3 + 15))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_822:
                                              v530 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_824:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/coresta ck/hci/hcicmdapi.c",  1958,  v530);
                                            }

                                            if (*v653 != 2)
                                            {
                                              v530 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                              goto LABEL_824;
                                            }

                                            *(_BYTE *)(*a3 + v202) = *(_BYTE *)(v649 + v195);
                                            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v649 + v195 + 1);
                                            uint64_t v203 = *((_WORD *)a3 + 6) + 2;
                                            *((_WORD *)a3 + 6) = v203;
                                            if (*((_BYTE *)a3 + 15))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_826:
                                              v531 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_828:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/coresta ck/hci/hcicmdapi.c",  1959,  v531);
                                            }

                                            if (*v653 != 2)
                                            {
                                              v531 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                              goto LABEL_828;
                                            }

                                            *(_BYTE *)(*a3 + v203) = *(_BYTE *)(v646 + v195);
                                            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v646 + v195 + 1);
                                            uint64_t v204 = *((_WORD *)a3 + 6) + 2;
                                            *((_WORD *)a3 + 6) = v204;
                                            if (*((_BYTE *)a3 + 15))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_830:
                                              v532 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_832:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/coresta ck/hci/hcicmdapi.c",  1960,  v532);
                                            }

                                            if (*v653 != 2)
                                            {
                                              v532 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                              goto LABEL_832;
                                            }

                                            *(_BYTE *)(*a3 + v204) = *(_BYTE *)(v183 + v195);
                                            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v183 + v195 + 1);
                                            *((_WORD *)a3 + 6) += 2;
                                          }

                                          int v86 = 0;
                                          LOBYTE(v175) = v175 >> 1;
                                          v195 += 2LL;
                                          if (v195 == 16) {
                                            goto LABEL_622;
                                          }
                                        }
                                      }

                                      v575 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1007:
                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1947,  v575);
                                    }
                                  }

                                  v575 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                  goto LABEL_1007;
                                }

                                v574 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1003:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1946,  v574);
                              }
                            }

                            v574 = "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE";
                            goto LABEL_1003;
                          }

                          v573 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_999:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1945,  v573);
                        }
                      }

                      v573 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                      goto LABEL_999;
                    }

                    v572 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_995:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1944,  v572);
                  }
                }

                v572 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                goto LABEL_995;
              }

              v571 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_991:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1943,  v571);
            }
          }

          v571 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_991;
        }

        v570 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_987:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1942,  v570);
      }

      v570 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      goto LABEL_987;
    default:
      switch(v17)
      {
        case 253:
          uint64_t v34 = a1;
          int v35 = *a1;
          v656 = a1 + 4;
          uint64_t v36 = v34[2];
          uint64_t v37 = v36;
          if ((_BYTE)v36)
          {
            char v38 = *(_BYTE **)v656;
            uint64_t v39 = (_BYTE *)*((void *)v656 + 1);
            uint64_t v40 = (char *)*((void *)v656 + 2);
            uint64_t v41 = (unsigned __int8 *)*((void *)v656 + 3);
            uint64_t v42 = (char *)*((void *)v656 + 4);
          }

          else
          {
            char v38 = 0LL;
            uint64_t v39 = 0LL;
            uint64_t v40 = 0LL;
            uint64_t v41 = 0LL;
            uint64_t v42 = 0LL;
          }

          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else if ((unsigned __int16)*v16 > v27)
          {
            if (*v653 == 2)
            {
              v426 = *a3;
              v427 = (unsigned __int16)(v26 + 2);
              *((_WORD *)a3 + 6) = v26 + 3;
              *(_BYTE *)(v426 + v427) = (4 * v36) | 2;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
              }

              else
              {
                v428 = (unsigned __int16)*v652;
                if ((unsigned __int16)*v16 > v428)
                {
                  if (*v653 == 2)
                  {
                    v429 = *a3;
                    *((_WORD *)a3 + 6) = v428 + 1;
                    *(_BYTE *)(v429 + v428) = v35;
                    if (*((_BYTE *)a3 + 15))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                    }

                    else
                    {
                      v430 = (unsigned __int16)*v652;
                      if ((unsigned __int16)*v16 > v430)
                      {
                        if (*v653 == 2)
                        {
                          v639 = v427;
                          v641 = v426;
                          v643 = (4 * v36) | 2;
                          v431 = *a3;
                          *((_WORD *)a3 + 6) = v430 + 1;
                          *(_BYTE *)(v431 + v430) = v36;
                          v432 = 0;
                          if ((_BYTE)v36)
                          {
                            while (!*((_BYTE *)a3 + 15))
                            {
                              v433 = (unsigned __int16)*v23;
                              v434 = (char *)a3 + 14;
                              if (*v653 != 2)
                              {
                                v519 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                goto LABEL_781;
                              }

                              v435 = *v38;
                              v436 = *a3;
                              *((_WORD *)a3 + 6) = v433 + 1;
                              *(_BYTE *)(v436 + v433) = v435;
                              if (*((_BYTE *)a3 + 15))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "corestack/hci/hcicmdapi.c");
LABEL_783:
                                v520 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_785:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2291,  v520);
                              }

                              v437 = (unsigned __int16)*v23;
                              if (*v653 != 2)
                              {
                                v520 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                goto LABEL_785;
                              }

                              v438 = *v39;
                              v439 = *a3;
                              *((_WORD *)a3 + 6) = v437 + 1;
                              *(_BYTE *)(v439 + v437) = v438;
                              if (*((_BYTE *)a3 + 15))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "corestack/hci/hcicmdapi.c");
LABEL_787:
                                v521 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_789:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2292,  v521);
                              }

                              v440 = (unsigned __int16)*v23;
                              if (*v653 != 2)
                              {
                                v521 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                goto LABEL_789;
                              }

                              v441 = *v40;
                              v442 = *a3;
                              *((_WORD *)a3 + 6) = v440 + 1;
                              *(_BYTE *)(v442 + v440) = v441;
                              if (*((_BYTE *)a3 + 15))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "corestack/hci/hcicmdapi.c");
LABEL_791:
                                v522 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_793:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2294,  v522);
                              }

                              v443 = (unsigned __int16)*v23;
                              if (*v653 != 2)
                              {
                                v522 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                goto LABEL_793;
                              }

                              v645 = v39;
                              v648 = v38;
                              v651 = v37;
                              v444 = *v41;
                              v445 = *a3;
                              *((_WORD *)a3 + 6) = v443 + 1;
                              *(_BYTE *)(v445 + v443) = v444;
                              v446 = *a3;
                              v447 = *((unsigned __int16 *)a3 + 6);
                              if (*((_BYTE *)a3 + 15))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "corestack/hci/hcicmdapi.c");
                                v434 = (char *)a3 + 14;
                                v448 = 0;
                              }

                              else
                              {
                                v448 = (unsigned __int16)*v16 - (_DWORD)v447;
                              }

                              v449 = *v41;
                              if (v448 < (int)v449)
                              {
                                v523 = "ByteStream_NumReadBytesAvail(*pBs) >= (subeventDataLength[i])";
                                goto LABEL_796;
                              }

                              if (*v434 != 2)
                              {
                                v523 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_796:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2295,  v523);
                              }

                              v432 += v444;
                              memmove((void *)(v446 + v447), v42, v449);
                              v450 = *v41++;
                              uint64_t v23 = (_WORD *)a3 + 6;
                              v42 += v432;
                              *v652 += v450;
                              ++v40;
                              uint64_t v39 = v645 + 1;
                              char v38 = v648 + 1;
                              uint64_t v37 = v651 - 1;
                              if (v651 == 1) {
                                goto LABEL_552;
                              }
                            }

                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/core"
                                                   "stack/hci/hcicmdapi.c");
LABEL_779:
                            v519 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_781:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2290,  v519);
                          }

  if (*(_BYTE *)(a1 + 64))
  {
    if ((*(_BYTE *)(a1 + 64) & 1) != 0 && !*(void *)(a1 + 176) && (*(_BYTE *)(a1 + 144) & 0x10) != 0)
    {
      if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR)) {
        sub_10065CEF4();
      }
      return 1401LL;
    }

    else
    {
      uint64_t v28 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0LL, 0LL, 0LL);
      uint64_t v29 = dispatch_time(0LL, 4000000000LL);
      dispatch_source_set_timer(v28, v29, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
      dispatch_source_set_event_handler(v28, &stru_100886CF0);
      dispatch_resume(v28);
      if (qword_1008D6788 != -1) {
        dispatch_once(&qword_1008D6788, &stru_100886D50);
      }
      unsigned __int16 v16 = sub_10040DD44((uint64_t)off_1008D6780);
      dispatch_source_cancel(v28);
      dispatch_release(v28);
      if ((_DWORD)v16)
      {
        uint64_t v30 = (os_log_s *)qword_1008F7750;
        if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = v16;
          _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "PowerManager::getInstance()->powerHostlessMode failed with error %d",  buf,  8u);
        }

        byte_1008F7098 = 0;
        return v16;
      }

      uint64_t v31 = *(_DWORD *)(a1 + 216);
      uint64_t v32 = (os_log_s *)qword_1008F7750;
      if (v31 == -1)
      {
        if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR)) {
          sub_10065CDAC(v32, v33, v34, v35, v36, v37, v38, v39);
        }
      }

      else
      {
        if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136315138;
          *(void *)&uint8_t buf[4] = "com.apple.bluetooth.low-power-mode";
          _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "Notifying %s", buf, 0xCu);
          uint64_t v31 = *(_DWORD *)(a1 + 216);
        }

        if (notify_set_state(v31, a2))
        {
          if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR)) {
            sub_10065CE88();
          }
        }

        else if (notify_post("com.apple.bluetooth.low-power-mode") {
               && os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR))
        }
        {
          sub_10065CE1C();
        }
      }

      Current = CFAbsoluteTimeGetCurrent();
      if ((*(_BYTE *)(a1 + 64) & 2) != 0)
      {
        uint64_t v41 = (os_log_s *)qword_1008F7750;
        if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "Waiting for offline ADV data", buf, 2u);
        }

        *(void *)__int128 buf = 0LL;
        *(void *)&uint8_t buf[8] = 0LL;
        sub_100242F28((uint64_t)buf, (uint64_t)&unk_1008F7058);
        if (byte_1008F7098 && !*(_BYTE *)(a1 + 27) && !*(_BYTE *)(a1 + 28))
        {
          uint64_t v42 = (os_log_s *)qword_1008F7750;
          if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(valuePtr) = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "fOfflineADVDataPending = true",  (uint8_t *)&valuePtr,  2u);
          }

          if (!sub_1002431A4(&stru_1008F7028, (pthread_mutex_t **)buf, 0x1F40uLL))
          {
            if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR)) {
              sub_10065CD80();
            }
            sub_100242FAC((uint64_t)buf);
            return 1403LL;
          }
        }

        sub_100242F54((uint64_t)buf);
        uint64_t v43 = (os_log_s *)qword_1008F7750;
        if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v44 = (unsigned __int16)[*(id *)(a1 + 192) count];
          uint64_t v45 = (unsigned __int16)[*(id *)(a1 + 200) count];
          __int16 valuePtr = 67109376;
          uint64_t v65 = v44;
          uint64_t v66 = 1024;
          uint64_t v67 = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEFAULT,  "Done waiting, count set1Data:%d, count set2Data:%d",  (uint8_t *)&valuePtr,  0xEu);
        }

        sub_100242FAC((uint64_t)buf);
      }

      uint64_t v46 = CFAbsoluteTimeGetCurrent();
      uint64_t v60 = 0;
      uint64_t v59 = 0;
      uint64_t v58 = 0;
      LODWORD(p_valuePtr) = 0;
      uint64_t v47 = sub_1002E8D54();
      (*(void (**)(uint64_t, char *, __int16 *, char *, __int16 *, char *, const unsigned __int8 *__attribute__((__org_typedef(uuid_t))) *))(*(void *)v47 + 48LL))( v47,  (char *)&v60 + 1,  &v60,  (char *)&v59 + 1,  &v59,  &v58,  &p_valuePtr);
      uint64_t v48 = (v46 - Current) * 1000.0;
      if (v48 < 8000.0)
      {
        uint64_t v49 = 8000 - v48;
        uint64_t v50 = (os_log_s *)qword_1008F7750;
        if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 67109376;
          *(_DWORD *)&uint8_t buf[4] = v59;
          *(_WORD *)&uint8_t buf[8] = 1024;
          *(_DWORD *)&_DWORD buf[10] = v49;
          _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "wifiIsOn:%d duration:%u", buf, 0xEu);
        }

        if ((_BYTE)v59)
        {
          *(void *)__int128 buf = 0LL;
          *(void *)&uint8_t buf[8] = 0LL;
          sub_100242F28((uint64_t)buf, (uint64_t)&unk_1008F70D0);
          byte_1008F7110 = 1;
          uint64_t v51 = (os_log_s *)qword_1008F7750;
          if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(valuePtr) = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "fWaitForWifiOffPending = true",  (uint8_t *)&valuePtr,  2u);
          }

          if (!sub_1002431A4(&stru_1008F70A0, (pthread_mutex_t **)buf, v49)
            && os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR))
          {
            sub_10065CD54();
          }

          sub_100242FAC((uint64_t)buf);
        }
      }

      if (*(_BYTE *)(a1 + 28))
      {
        sub_1001F9394((_BYTE *)a1);
LABEL_115:
        *(void *)__int128 buf = 0LL;
        *(void *)&uint8_t buf[8] = 0LL;
        sub_100242F28((uint64_t)buf, (uint64_t)&unk_1008F7118);
        uint64_t v52 = (os_log_s *)qword_1008F7750;
        if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_DEFAULT))
        {
          __int16 valuePtr = 67109120;
          uint64_t v65 = byte_1008F7111;
          _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEFAULT,  "fIsSystemSleep = %d",  (uint8_t *)&valuePtr,  8u);
        }

        if (byte_1008F7111)
        {
          uint64_t v53 = 1000 * (CFAbsoluteTimeGetCurrent() - Current);
          uint64_t v54 = (os_log_s *)qword_1008F7750;
          if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_DEFAULT))
          {
            __int16 valuePtr = 67109120;
            uint64_t v65 = v53;
            _os_log_impl( (void *)&_mh_execute_header,  v54,  OS_LOG_TYPE_DEFAULT,  "fIsSystemSleep = true, lpmEntryTimeUsedMs=%u",  (uint8_t *)&valuePtr,  8u);
          }

          if (v53 >> 6 <= 0x7C
            && !sub_1002431A4(&stru_1008F7158, (pthread_mutex_t **)buf, 8000 - v53)
            && os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR))
          {
            sub_10065CCC8();
          }
        }

        sub_100242F54((uint64_t)buf);
        unsigned __int16 v16 = sub_1001F97B8(a1);
        if ((_DWORD)v16)
        {
          if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR)) {
            sub_10065CC68();
          }
        }

        else
        {
          if (*(_BYTE *)(a1 + 26) && ((*(_BYTE *)(a1 + 144) & 1) == 0 || (*(_BYTE *)(a1 + 184) & 8) != 0))
          {
            uint64_t v55 = (os_log_s *)qword_1008F7750;
            if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_INFO))
            {
              LOWORD(valuePtr) = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_INFO,  "Enable sniff mode only",  (uint8_t *)&valuePtr,  2u);
            }

            if ((sub_1000B9B18() & 1) == 0 && os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR)) {
              sub_10065CC10();
            }
          }

          uint64_t v56 = sub_1001F9008(1);
          uint64_t v57 = (os_log_s *)qword_1008F7750;
          if (v56)
          {
            if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR)) {
              sub_10065CBE4();
            }
            unsigned __int16 v16 = 1LL;
          }

          else
          {
            unsigned __int16 v16 = 0LL;
            if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(valuePtr) = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEFAULT,  "BT_FW_OK flag is set. Entering LPM...",  (uint8_t *)&valuePtr,  2u);
              unsigned __int16 v16 = 0LL;
            }
          }
        }

        sub_100242FAC((uint64_t)buf);
        return v16;
      }

      unsigned __int16 v16 = sub_1001F94CC(a1);
      if (!(_DWORD)v16) {
        goto LABEL_115;
      }
      if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR)) {
        sub_10065CCF4();
      }
    }
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008F7750, OS_LOG_TYPE_ERROR)) {
      sub_10065CBB8();
    }
    return 1402LL;
  }

  return v16;
}

  uint64_t v28 = 0LL;
LABEL_89:

  return v28;
}

  uint64_t v45 = 0;
  uint64_t v24 = sub_1002E6E00();
  sub_10002418C(buf, "Magnet");
  sub_10002418C(__p, "DisableClassic");
  (*(void (**)(uint64_t, _BYTE *, void **, char *))(*(void *)v24 + 72LL))(v24, buf, __p, &v45);
  if (v47 < 0) {
    operator delete(__p[0]);
  }
  if (v50 < 0) {
    operator delete(*(void **)buf);
  }
  if (v45) {
    *(_BYTE *)(a1 + 1193) = 1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 3280LL))(a1);
  *(_WORD *)(a1 + 1200) = 0;
  uint64_t v25 = sub_1002E6E00();
  sub_10002418C(buf, "LE");
  sub_10002418C(__p, "forceHostSlowDownLEScanOnACLProtectMode");
  uint64_t v26 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, uint64_t))(*(void *)v25 + 72LL))( v25,  buf,  __p,  a1 + 1201);
  if (v47 < 0) {
    operator delete(__p[0]);
  }
  if (v50 < 0)
  {
    operator delete(*(void **)buf);
    if (!v26) {
      goto LABEL_79;
    }
  }

  else if (!v26)
  {
    goto LABEL_79;
  }

  uint64_t v27 = (os_log_s *)qword_1008F7578;
  if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT))
  {
    if (*(_BYTE *)(a1 + 1201)) {
      uint64_t v28 = "Yes";
    }
    else {
      uint64_t v28 = "No";
    }
    *(_DWORD *)__int128 buf = 136446210;
    *(void *)&uint8_t buf[4] = v28;
    _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Overriding HostSlowDownLEScanOnACLProtectMode - %{public}s",  buf,  0xCu);
  }

  *(_BYTE *)(a1 + 1200) = 1;
LABEL_79:
  *(_BYTE *)(a1 + 1202) = 87;
  uint64_t v44 = 0;
  uint64_t v29 = sub_1002E6E00();
  sub_10002418C(buf, "Zone");
  sub_10002418C(__p, "CuffoffRSSIValue");
  uint64_t v30 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, int *))(*(void *)v29 + 88LL))(v29, buf, __p, &v44);
  if (v47 < 0) {
    operator delete(__p[0]);
  }
  if (v50 < 0)
  {
    operator delete(*(void **)buf);
    if (!v30) {
      goto LABEL_87;
    }
  }

  else if (!v30)
  {
    goto LABEL_87;
  }

  uint64_t v31 = v44;
  *(_BYTE *)(a1 + 1202) = v44;
  uint64_t v32 = (os_log_s *)qword_1008F7578;
  if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v31;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "Zone Cutoff RSSI value = -%d dBm", buf, 8u);
  }

  return sub_100242FAC((uint64_t)v33);
}

  *(_BYTE *)(a1 + 2222) = 0;
  *(_OWORD *)(a1 + 2136) = 0u;
  *(_OWORD *)(a1 + 2152) = 0u;
  uint64_t v136 = 0;
  *(_WORD *)(a1 + 2232) = 0;
  *(_BYTE *)(a1 + 2234) = 0;
  *(_DWORD *)(a1 + 2224) = 0;
  *(_DWORD *)(a1 + 2227) = 0;
  uint64_t v27 = sub_1002E6E00();
  sub_10002418C(buf, "BLESCAN");
  sub_10002418C(__p, "IsScanParamsOverriden");
  if ((*(unsigned int (**)(uint64_t, _BYTE *, void **, uint64_t))(*(void *)v27 + 72LL))( v27,  buf,  __p,  a1 + 2222))
  {
    uint64_t v28 = *(unsigned __int8 *)(a1 + 2222);
    if (v140 < 0) {
      operator delete(__p[0]);
    }
    if ((v142[3] & 0x80000000) != 0)
    {
      operator delete(*(void **)buf);
      if (!v28) {
        goto LABEL_191;
      }
    }

    else if (!v28)
    {
      goto LABEL_191;
    }

    uint64_t v29 = (os_log_s *)qword_1008F75B8;
    if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "Overriding BLE Scan Parameters.", buf, 2u);
    }

    uint64_t v30 = sub_1002E6E00();
    sub_10002418C(buf, "BLESCAN");
    sub_10002418C(__p, "Interval");
    uint64_t v31 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, unsigned int *))(*(void *)v30 + 88LL))( v30,  buf,  __p,  &v136);
    if (v136) {
      uint64_t v32 = v31;
    }
    else {
      uint64_t v32 = 0;
    }
    if (v140 < 0) {
      operator delete(__p[0]);
    }
    if ((v142[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    if (v32)
    {
      uint64_t v33 = v136;
      *(_WORD *)(a1 + 2224) = v136;
      uint64_t v34 = (os_log_s *)qword_1008F75B8;
      if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v33;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "Overriding BLE Scan Parameters Interval %d.",  buf,  8u);
      }
    }

    int v35 = sub_1002E6E00();
    sub_10002418C(buf, "BLESCAN");
    sub_10002418C(__p, "WindowMainCoreELNAOn");
    uint64_t v36 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, unsigned int *))(*(void *)v35 + 88LL))( v35,  buf,  __p,  &v136);
    if (v136) {
      uint64_t v37 = v36;
    }
    else {
      uint64_t v37 = 0;
    }
    if (v140 < 0) {
      operator delete(__p[0]);
    }
    if ((v142[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    if (v37)
    {
      char v38 = v136;
      *(_WORD *)(a1 + 2226) = v136;
      uint64_t v39 = (os_log_s *)qword_1008F75B8;
      if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v38;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "Overriding BLE Scan Parameters WindowMainCoreELNAOn %d.",  buf,  8u);
      }
    }

    uint64_t v40 = sub_1002E6E00();
    sub_10002418C(buf, "BLESCAN");
    sub_10002418C(__p, "WindowMainCoreELNABypass");
    uint64_t v41 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, unsigned int *))(*(void *)v40 + 88LL))( v40,  buf,  __p,  &v136);
    if (v136) {
      uint64_t v42 = v41;
    }
    else {
      uint64_t v42 = 0;
    }
    if (v140 < 0) {
      operator delete(__p[0]);
    }
    if ((v142[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    if (v42)
    {
      uint64_t v43 = v136;
      *(_WORD *)(a1 + 2228) = v136;
      uint64_t v44 = (os_log_s *)qword_1008F75B8;
      if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v43;
        _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "Overriding BLE Scan Parameters WindowMainCoreELNABypass %d.",  buf,  8u);
      }
    }

    uint64_t v45 = sub_1002E6E00();
    sub_10002418C(buf, "BLESCAN");
    sub_10002418C(__p, "IsScanCoreELNAOn");
    uint64_t v46 = (unsigned __int8 *)(a1 + 2230);
    if ((*(unsigned int (**)(uint64_t, _BYTE *, void **, uint64_t))(*(void *)v45 + 72LL))( v45,  buf,  __p,  a1 + 2230))
    {
      uint64_t v47 = *v46;
      if (v140 < 0) {
        operator delete(__p[0]);
      }
      if ((v142[3] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      if (v47)
      {
        uint64_t v48 = (os_log_s *)qword_1008F75B8;
        if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEFAULT,  "Overriding BLE Scan Parameters ScanCore ELNA is On",  buf,  2u);
        }
      }
    }

    else
    {
      if (v140 < 0) {
        operator delete(__p[0]);
      }
      if ((v142[3] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    uint64_t v49 = sub_1002E6E00();
    sub_10002418C(buf, "BLESCAN");
    sub_10002418C(__p, "WindowScanCore");
    uint64_t v50 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, unsigned int *))(*(void *)v49 + 88LL))( v49,  buf,  __p,  &v136);
    if (v136) {
      uint64_t v51 = v50;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v140 < 0) {
      operator delete(__p[0]);
    }
    if ((v142[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    if (v51)
    {
      uint64_t v52 = v136;
      *(_WORD *)(a1 + 2232) = v136;
      uint64_t v53 = (os_log_s *)qword_1008F75B8;
      if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v52;
        _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_DEFAULT,  "Overriding BLE Scan Parameters WindowScancore %d",  buf,  8u);
      }
    }

    uint64_t v54 = sub_1002E6E00();
    sub_10002418C(buf, "BLESCAN");
    sub_10002418C(__p, "IsScanCoreELNAOn");
    if ((*(unsigned int (**)(uint64_t, _BYTE *, void **, uint64_t))(*(void *)v54 + 72LL))( v54,  buf,  __p,  a1 + 2230))
    {
      uint64_t v55 = *v46;
      if (v140 < 0) {
        operator delete(__p[0]);
      }
      if ((v142[3] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      if (v55)
      {
        uint64_t v56 = (os_log_s *)qword_1008F75B8;
        if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEFAULT,  "Overriding BLE Scan Parameters ScanCore ELNA is On",  buf,  2u);
        }
      }
    }

    else
    {
      if (v140 < 0) {
        operator delete(__p[0]);
      }
      if ((v142[3] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    uint64_t v57 = sub_1002E6E00();
    sub_10002418C(buf, "BLESCAN");
    sub_10002418C(__p, "IsScanCoreConcurrent");
    if ((*(unsigned int (**)(uint64_t, _BYTE *, void **, uint64_t))(*(void *)v57 + 72LL))( v57,  buf,  __p,  a1 + 2234))
    {
      uint64_t v58 = *(unsigned __int8 *)(a1 + 2234);
      if (v140 < 0) {
        operator delete(__p[0]);
      }
      if ((v142[3] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      if (v58)
      {
        uint64_t v59 = (os_log_s *)qword_1008F75B8;
        if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEFAULT,  "Overriding BLE Scan Parameters ScanCore Concurrent",  buf,  2u);
        }
      }
    }

    else
    {
      if (v140 < 0) {
        operator delete(__p[0]);
      }
      if ((v142[3] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    *(_BYTE *)(a1 + 2235) = 0;
    uint64_t v60 = sub_1002E6E00();
    sub_10002418C(buf, "BLESCAN");
    sub_10002418C(__p, "IsScanCoreCompensated");
    uint64_t v61 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, uint64_t))(*(void *)v60 + 72LL))( v60,  buf,  __p,  a1 + 2238);
    if (v140 < 0) {
      operator delete(__p[0]);
    }
    if ((v142[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    if (v61)
    {
      *(_BYTE *)(a1 + 2235) = 1;
      uint64_t v62 = (os_log_s *)qword_1008F75B8;
      if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
      {
        if (*(_BYTE *)(a1 + 2238)) {
          uint64_t v63 = "Yes";
        }
        else {
          uint64_t v63 = "No";
        }
        *(_DWORD *)__int128 buf = 136446210;
        *(void *)&uint8_t buf[4] = v63;
        _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEFAULT,  "Overriding BLE Scan Parameters ScanCore Compensated: %{public}s",  buf,  0xCu);
      }
    }

    *(_BYTE *)(a1 + 2236) = 0;
    uint64_t v64 = sub_1002E6E00();
    sub_10002418C(buf, "BLESCAN");
    sub_10002418C(__p, "ScanCoreCompensationPercent");
    uint64_t v65 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, unsigned int *))(*(void *)v64 + 88LL))( v64,  buf,  __p,  &v136);
    if (v140 < 0) {
      operator delete(__p[0]);
    }
    if ((v142[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    if (v65)
    {
      uint64_t v66 = v136;
      if (v136 > 0x64)
      {
        uint64_t v67 = (os_log_s *)qword_1008F75B8;
        if (!os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_171;
        }
        *(_DWORD *)__int128 buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v66;
        uint64_t v68 = "Overriding BLE ScanCore Compensation Percent %d failed (0<= ScanCoreCompensationPercent <=100)";
      }

      else
      {
        *(_BYTE *)(a1 + 2236) = 1;
        *(_WORD *)(a1 + 2240) = v66;
        uint64_t v67 = (os_log_s *)qword_1008F75B8;
        if (!os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_171;
        }
        *(_DWORD *)__int128 buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v66;
        uint64_t v68 = "Overriding BLE ScanCore Compensation Percent %d";
      }

      _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEFAULT, v68, buf, 8u);
    }

uint64_t sub_1000B3CAC(uint64_t a1, uint64_t a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"BT_AAP_Client_Connect", v4, v5, v6, v7, v8, v9, v10, v68);
    uint64_t v11 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(v68) = 136446210;
      *(void *)((char *)&v68 + 4) = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&v68, 0xCu);
    }
  }

  uint64_t v12 = 0LL;
  unsigned __int16 v13 = 0;
  uint64_t v14 = 0LL;
  char v15 = 0;
  do
  {
    if (*(_DWORD *)&word_1008DEBF0[v12 + 2] == *(_DWORD *)a1 && word_1008DEBF0[v12 + 4] == *(_WORD *)(a1 + 4))
    {
      unsigned int v17 = LOBYTE(word_1008DEBF0[v12 + 12]);
      if (v17 == 2) {
        return 0LL;
      }
      BOOL v18 = v17 > 2;
      if (word_1008DEBF0[v12] == *(_WORD *)(a2 + 8)) {
        return 133LL;
      }
      unsigned __int16 v13 = word_1008DEBF0[v12 + 1];
      v15 |= v18;
      uint64_t v14 = &word_1008DEBF0[v12];
    }

    v12 += 36LL;
  }

  while (v12 != 1080);
  if (v14 || (uint64_t v14 = sub_1000B3360((int *)a1, v13, a2)) != 0LL)
  {
    if ((v15 & 1) == 0)
    {
      int v37 = (unsigned __int16)v14[21];
      int v38 = sub_1000A86F0();
      if (v37)
      {
        if (v38)
        {
          sub_1001EE134((uint64_t)"PSM is already available, connect L2CAP", v39, v40, v41, v42, v43, v44, v45, v68);
          uint64_t v46 = (os_log_s *)sub_100086554(0x52u);
          if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v47 = sub_1001EDDCC();
            LODWORD(v68) = 136446210;
            *(void *)((char *)&v68 + 4) = v47;
            _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&v68, 0xCu);
          }
        }

        sub_1000B40D0((uint64_t)v14);
        return 0LL;
      }

      if (v38)
      {
        sub_1001EE134((uint64_t)"AAP_CLIENT_Connect initiating SDP", v39, v40, v41, v42, v43, v44, v45, v68);
        uint64_t v48 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v49 = sub_1001EDDCC();
          LODWORD(v68) = 136446210;
          *(void *)((char *)&v68 + 4) = v49;
          _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&v68, 0xCu);
        }
      }

      uint64_t v50 = sub_1001DF224((uint64_t)sub_1000B42A4, (uint64_t)sub_1000B4350, a1);
      if (!(_DWORD)v50)
      {
        *((_BYTE *)v14 + 24) = 1;
        *((void *)&v68 + 1) = v14;
        *(void *)&__int128 v68 = 8LL;
        return sub_1001EE6E8((uint64_t)sub_1000B43DC, (const void **)&v68, 30, (int *)v14 + 16);
      }

      uint64_t v28 = v50;
      sub_1001EE134((uint64_t)"Failed to connect SDP", v51, v52, v53, v54, v55, v56, v57, v68);
      uint64_t v58 = (os_log_s *)sub_100086554(0x52u);
      if (!os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)) {
        goto LABEL_38;
      }
LABEL_37:
      sub_10065A878();
LABEL_38:
      *((void *)v14 + 8) = 0LL;
      *((_OWORD *)v14 + 2) = 0u;
      *((_OWORD *)v14 + 3) = 0u;
      *(_OWORD *)uint64_t v14 = 0u;
      *((_OWORD *)v14 + 1) = 0u;
      return v28;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"AAP_Client: L2CAP connected, beginning AAP connection",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v68);
      uint64_t v26 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v27 = sub_1001EDDCC();
        LODWORD(v68) = 136446210;
        *(void *)((char *)&v68 + 4) = v27;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&v68, 0xCu);
      }
    }

    *((_BYTE *)v14 + 24) = 3;
    uint64_t v28 = sub_1000B33D0( (int *)a1,  v13,  *(unsigned __int16 *)(a2 + 8),  *(_WORD *)(a2 + 10),  *(_WORD *)(a2 + 12),  (void **)(a2 + 14));
    if ((_DWORD)v28)
    {
      sub_1001EE134((uint64_t)"sendConnectReqPacket failed", v29, v30, v31, v32, v33, v34, v35, v68);
      uint64_t v36 = (os_log_s *)sub_100086554(0x52u);
      if (!os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        goto LABEL_38;
      }
      goto LABEL_37;
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"allocateConnection failed", v59, v60, v61, v62, v63, v64, v65, v68);
      uint64_t v66 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
        sub_10065AA1C();
      }
    }

    return 104LL;
  }

  return v28;
}

void sub_1000B40D0(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Connecting L2CAP for %:", v2, v3, v4, v5, v6, v7, v8, a1 + 4);
    uint64_t v9 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v31 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  int v10 = *(unsigned __int16 *)(a1 + 42);
  if (*(_WORD *)(a1 + 42))
  {
    *(_BYTE *)(a1 + 24) = 2;
    uint64_t v11 = sub_1000876EC();
    uint64_t v12 = sub_100087710();
    if (sub_100174028( (uint64_t)sub_1000B4DB4,  (uint64_t)sub_1000B4E20,  (uint64_t)sub_1000B3610,  v10,  a1 + 4,  (uint64_t)v11,  (_WORD *)(a1 + 2),  (uint64_t)v12))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_L2CAP_Connect failed", v13, v14, v15, v16, v17, v18, v19, v29);
        uint64_t v20 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }

      *(void *)(a1 + 64) = 0LL;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"SDP disconnected without a valid PSM", v21, v22, v23, v24, v25, v26, v27, v29);
      uint64_t v28 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EEB14(*(unsigned int *)(a1 + 64));
    *(_BYTE *)(a1 + 24) = 0;
  }

uint64_t sub_1000B42A4(uint64_t result)
{
  __int128 v4 = unk_100882570;
  __int128 v3 = xmmword_1006BBEA0;
  if (!(_DWORD)result)
  {
    v2[1] = &v4;
    v2[0] = 65542LL;
    v1[1] = &v3;
    v1[0] = 65542LL;
    double result = sub_1001E0050((uint64_t)sub_1000B618C, (unsigned __int8 *)v2, (unsigned __int8 *)v1);
    if ((_DWORD)result) {
      return sub_1001DF894();
    }
  }

  return result;
}

void sub_1000B4350()
{
  for (uint64_t i = 0LL; i != 1080; i += 36LL)
  {
    if (LOBYTE(word_1008DEBF0[i + 12]) == 1)
    {
      sub_1000B40D0((uint64_t)&word_1008DEBF0[i]);
      return;
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"No connection Entry for this SDP search resp", v1, v2, v3, v4, v5, v6, v7, v9);
    uint64_t v8 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_1000B43DC(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Couldn't connect SDP for AAP!", v2, v3, v4, v5, v6, v7, v8, v10);
    uint64_t v9 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  sub_1000B55E0(**(unsigned __int16 **)(a1 + 8), *(unsigned __int16 *)(*(void *)(a1 + 8) + 2LL), 3572LL);
}

uint64_t sub_1000B444C(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v6 = 0LL;
  while (1)
  {
    uint64_t v7 = &word_1008DEBF0[v6];
    int v8 = (unsigned __int16)word_1008DEBF0[v6];
    int v9 = (unsigned __int16)word_1008DEBF0[v6 + 1];
    if ((v9 | (v8 << 16)) == (_DWORD)a1) {
      break;
    }
    v6 += 36LL;
    if (v6 == 1080)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Invalid handle %x", v10, v11, v12, v13, v14, v15, v16, a1);
        uint64_t v17 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 414LL;
    }
  }

  if ((unsigned __int16)v7[22] >= a3)
  {
    uint64_t v27 = (int *)&word_1008DEBF0[v6 + 2];
    uint64_t v28 = sub_100087DC8((uint64_t)&unk_1008DF460, 30LL, v9);
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = sub_10008784C(v8, v9, v27, 4, a3);
      uint64_t v50 = 0LL;
      __int16 v31 = *((_WORD *)v30 + 1);
      LOWORD(v50) = *((_WORD *)v30 + 5);
      WORD1(v50) = v31;
      sub_1001EF520((uint64_t)(v30 + 1), 2u);
      sub_1001EFB10((unsigned __int8 *)v30 + 16, (char *)&v50, 4uLL, 0);
      sub_1001EFB10((unsigned __int8 *)v30 + 16, a2, a3, 0);
      *((void *)v30 + 17) = a2;
      *((void *)v30 + 19) = v29;
      uint64_t v18 = sub_10008799C((uint64_t)v30, (uint64_t)sub_1000B4924);
      if (!(_DWORD)v18) {
        return v18;
      }
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"sendDataPacket channel not found: addr=%: cid=%d sid=%d len=%d",  v32,  v33,  v34,  v35,  v36,  v37,  v38,  (uint64_t)v27);
        uint64_t v39 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
          sub_10065A9B4();
        }
      }

      uint64_t v18 = 406LL;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"sendDataPacket failed", v40, v41, v42, v43, v44, v45, v46, v49);
      uint64_t v47 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"MTU=%d", v19, v20, v21, v22, v23, v24, v25, (unsigned __int16)v7[22]);
      uint64_t v26 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_10065AA84();
      }
    }

    return 142LL;
  }

  return v18;
}

uint64_t sub_1000B46E0(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v6 = 0LL;
  while (1)
  {
    uint64_t v7 = &word_1008DEBF0[v6];
    int v8 = (unsigned __int16)word_1008DEBF0[v6 + 1];
    v6 += 36LL;
    if (v6 == 1080)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Invalid handle %x", v9, v10, v11, v12, v13, v14, v15, a1);
        uint64_t v16 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 414LL;
    }
  }

  if ((unsigned __int16)v7[22] >= a3)
  {
    uint64_t v26 = sub_100087DC8((uint64_t)&unk_1008DF460, 30LL, v8);
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = sub_10008784C(word_1008DEBF0[v6], v7[1], (int *)&word_1008DEBF0[v6 + 2], 4, a3);
      uint64_t v38 = 0LL;
      __int16 v29 = *((_WORD *)v28 + 1);
      LOWORD(v38) = *((_WORD *)v28 + 5);
      WORD1(v38) = v29;
      sub_1001EF520((uint64_t)(v28 + 1), 2u);
      sub_1001EFB10((unsigned __int8 *)v28 + 16, (char *)&v38, 4uLL, 0);
      sub_1001EFB10((unsigned __int8 *)v28 + 16, a2, a3, 0);
      *((void *)v28 + 17) = a2;
      *((void *)v28 + 19) = v27;
      return sub_100087950((unsigned __int16 *)v28, (uint64_t)sub_1000B4924);
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"BT_AAP_Client_SendUnstallableData channel not found: addr=%: cid=%d sid=%d len=%d",  v30,  v31,  v32,  v33,  v34,  v35,  v36,  (uint64_t)&word_1008DEBF0[v6 + 2]);
        uint64_t v37 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
          sub_10065A9B4();
        }
      }

      return 406LL;
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"MTU=%d", v18, v19, v20, v21, v22, v23, v24, (unsigned __int16)v7[22]);
      uint64_t v25 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_10065AA84();
      }
    }

    return 142LL;
  }

void sub_1000B4924(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    sub_1001EE2A0();
  }
  uint64_t v7 = *(unsigned __int16 **)(a2 + 8);
  if (!v7) {
    sub_1001EE2A0();
  }
  int v8 = v7[5];
  switch(v8)
  {
    case 2:
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"l2capWriteCfm: BT_AAP_DISCONNECT_REQ", v18, v19, v20, v21, v22, v23, v24, v28);
        uint64_t v25 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136446210;
          uint64_t v30 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      break;
    case 3:
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"BT_AAP_DISCONNECT_RSP from l2capWriteCfm for cid=%d, result=%d",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  a1);
        uint64_t v17 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 136446210;
          uint64_t v30 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      sub_1000B55E0(v7[1], *v7, a4);
      break;
    case 4:
      uint64_t v9 = 0LL;
      while (((unsigned __int16)word_1008DEBF0[v9 + 1] | ((unsigned __int16)word_1008DEBF0[v9] << 16)) != *(_DWORD *)v7)
      {
        v9 += 36LL;
        if (v9 == 1080) {
          return;
        }
      }

      uint64_t v26 = *(void *)&word_1008DEBF0[v9 + 8];
      if (v26)
      {
        uint64_t v27 = *(void (**)(void))(v26 + 24);
        if (v27) {
          v27();
        }
      }

      break;
  }

uint64_t sub_1000B4B2C(uint64_t result, int a2, int a3)
{
  int v3 = a3 | (a2 << 16);
  if (v3)
  {
    uint64_t v4 = 0LL;
    while (((unsigned __int16)word_1008DEBF0[v4 + 1] | ((unsigned __int16)word_1008DEBF0[v4] << 16)) != v3)
    {
      v4 += 36LL;
      if (v4 == 1080) {
        return result;
      }
    }

    word_1008DEBF0[v4 + 22] = result;
  }

  return result;
}

uint64_t sub_1000B4B70(uint64_t a1, __int16 a2, uint64_t a3, unsigned __int16 *a4, int *a5)
{
  for (uint64_t i = 0LL; i != 1080; i += 36LL)
  {
    BOOL v11 = *(_DWORD *)&word_1008DEBF0[i + 2] == *(_DWORD *)a1 && word_1008DEBF0[i + 4] == *(_WORD *)(a1 + 4);
    if (v11 && word_1008DEBF0[i] == *(_WORD *)(a3 + 8)) {
      return 133LL;
    }
  }

  uint64_t v12 = sub_1000B3360((int *)a1, 0, a3);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_1000876EC();
    uint64_t v15 = sub_100087710();
    __int128 v16 = v14[1];
    v47[0] = *v14;
    v47[1] = v16;
    uint64_t v17 = sub_100173838( a2,  (uint64_t)v47,  a1,  (uint64_t)sub_1000B4DB4,  (uint64_t)sub_1000B4E20,  (uint64_t)sub_1000B3610,  a4,  (uint64_t)v15);
    if ((_DWORD)v17)
    {
      uint64_t v18 = v17;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"BT_AAP_Client_FastConnect error creating AAP signaling",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v46);
        uint64_t v26 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
LABEL_13:
        }
          sub_100657858();
      }
    }

    else
    {
      *(void *)&v47[0] = 0LL;
      uint64_t v18 = sub_100171EC4(*a4, (uint64_t *)v47);
      if ((_DWORD)v18 || !sub_10017AB4C(*(unsigned int **)&v47[0]))
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Can't find channel %d", v36, v37, v38, v39, v40, v41, v42, (uint64_t)a4);
          uint64_t v43 = (os_log_s *)sub_100086554(0x52u);
          if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
            goto LABEL_13;
          }
        }
      }

      else
      {
        *((_BYTE *)v13 + 24) = 4;
        v13[22] = *(_WORD *)(sub_10017AB4C(*(unsigned int **)&v47[0]) + 32) - 4;
        int v44 = *a4;
        v13[1] = v44;
        int v45 = *(unsigned __int16 *)(a3 + 8);
        __int16 *v13 = v45;
        *a5 = v44 | (v45 << 16);
        return sub_100087C18(word_1008DF460, 0x1Eu, *a4, 0);
      }
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"allocateConnection failed", v27, v28, v29, v30, v31, v32, v33, v46);
      uint64_t v34 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
        sub_10065AA1C();
      }
    }

    return 104LL;
  }

  return v18;
}

double sub_1000B4DB4(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!(_DWORD)a4)
  {
    uint64_t v4 = sub_100087C18(word_1008DF460, 0x1Eu, a1, 0);
    if ((_DWORD)v4) {
      sub_1001759FC(a1, 436LL);
    }
  }

  return sub_1000B5B9C(a1, a2, a3, v4);
}

void sub_1000B4E20(uint64_t a1, uint64_t a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"l2capDisconnectInd from aap_client cid=%d reason=%d",  v4,  v5,  v6,  v7,  v8,  v9,  v10,  a1);
    BOOL v11 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v13 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  sub_100087CCC((uint64_t)word_1008DF460, 30LL, a1);
  sub_1000B5EE4(a1, a2);
}

void sub_1000B4F10(uint64_t a1, unsigned int a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"BT_AAP_Client_cleanFastConnect cid=%d", v4, v5, v6, v7, v8, v9, v10, a2);
    BOOL v11 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  sub_100087CCC((uint64_t)word_1008DF460, 30LL, a2);
  if (a2)
  {
    *(void *)__int128 buf = 0LL;
    if (!sub_100171EC4(a2, (uint64_t *)buf))
    {
      if (*(void *)buf)
      {
        sub_1001734D8(*(uint64_t *)buf);
        uint64_t v12 = sub_10012D890(a1);
        if (v12)
        {
          sub_10011286C(v12);
        }

        else if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"BT_AAP_Client_cleanFastConnectAAP NULL Handle",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  v24);
          uint64_t v20 = (os_log_s *)sub_100086554(0x52u);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }
    }
  }

  for (uint64_t i = 0LL; i != 1080; i += 36LL)
  {
    uint64_t v22 = &word_1008DEBF0[i];
    if (*(_DWORD *)&word_1008DEBF0[i + 2] == *(_DWORD *)a1 && word_1008DEBF0[i + 4] == *(_WORD *)(a1 + 4))
    {
      *((void *)v22 + 8) = 0LL;
      *((_OWORD *)v22 + 2) = 0uLL;
      *((_OWORD *)v22 + 3) = 0uLL;
      *(_OWORD *)uint64_t v22 = 0uLL;
      *((_OWORD *)v22 + 1) = 0uLL;
    }
  }

uint64_t sub_1000B50B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"l2capConnectInd (%:, %d)", v5, v6, v7, v8, v9, v10, v11, a2);
    uint64_t v12 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  uint64_t v13 = &dword_100000004;
  do
  {
    if (*(_DWORD *)((char *)word_1008DEBF0 + v13) == *(_DWORD *)a2
      && *(__int16 *)((char *)&word_1008DEBF0[2] + v13) == *(_WORD *)(a2 + 4))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"l2capConnectInd already (%:, %d)", v22, v23, v24, v25, v26, v27, v28, a2);
        uint64_t v29 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return sub_100174B2C(0LL, 0LL, 0LL, a3, 0LL, 0, 0LL);
    }

    v13 += 72LL;
  }

  while (v13 != 2164);
  uint64_t v15 = sub_1000B3360((int *)a2, a3, (uint64_t)&xmmword_1008DF738);
  if (!v15)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"allocateConnection failed", v30, v31, v32, v33, v34, v35, v36, v38);
      uint64_t v37 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        sub_10065AA1C();
      }
    }

    return sub_100174B2C(0LL, 0LL, 0LL, a3, 0LL, 0, 0LL);
  }

  uint64_t v16 = v15;
  *((_BYTE *)v15 + 24) = 2;
  uint64_t v17 = sub_1000876EC();
  uint64_t v18 = sub_100087710();
  uint64_t result = sub_100174B2C( (uint64_t)sub_1000B4DB4,  (uint64_t)sub_1000B4E20,  (uint64_t)sub_1000B3610,  a3,  (uint64_t)v17,  1,  (uint64_t)v18);
  uint64_t v20 = (uint64_t (**)(uint64_t, uint64_t))*((void *)v16 + 2);
  if (v20)
  {
    uint64_t v21 = *v20;
    if (v21) {
      return v21(a2, a3);
    }
  }

  return result;
}

void sub_1000B5288(__int16 a1, uint64_t a2)
{
  uint64_t v3 = 0LL;
  uint64_t v22 = 0LL;
  v23[0] = 0LL;
  while (1)
  {
    uint64_t v4 = &word_1008DEBF0[v3];
    v3 += 36LL;
    if (v3 == 1080)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"AAPConnectSetTimeout: No AAP connection associated with handle %d",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  a2);
        uint64_t v12 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return;
    }
  }

  LODWORD(v22) = a2;
  WORD2(v22) = a1;
  v23[1] = &v22;
  LOWORD(v23[0]) = 8;
  uint64_t v13 = (unsigned int *)(v4 + 30);
  if (sub_1001EE6DC((uint64_t)sub_1000B53C0, v23, (int *)v4 + 15))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"AAPConnectSetTimeout: Error registering timeout handler for handle %d status %d",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  a2);
      uint64_t v21 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else if (sub_1001EE978(*v13, 60))
  {
    sub_1000B553C(a2);
  }

void sub_1000B53C0(uint64_t a1)
{
  uint64_t v1 = 0LL;
  uint64_t v2 = *(unsigned int **)(a1 + 8);
  uint64_t v3 = *v2;
  uint64_t v4 = *((unsigned __int16 *)v2 + 2);
  do
  {
    uint64_t v5 = &word_1008DEBF0[v1];
    if (((unsigned __int16)word_1008DEBF0[v1 + 1] | ((unsigned __int16)word_1008DEBF0[v1] << 16)) == (_DWORD)v3)
    {
      *((_DWORD *)v5 + 15) = 0;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"AAP connection timeout for cmd %d, handle %d", v14, v15, v16, v17, v18, v19, v20, v4);
        uint64_t v21 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      if ((_DWORD)v4 == 2)
      {
        sub_1000B55E0((unsigned __int16)*v5, (unsigned __int16)v5[1], 3571LL);
        return;
      }

      if ((_DWORD)v4) {
        return;
      }
      if (LOBYTE(word_1008DEBF0[v1 + 12]) == 3)
      {
        sub_1000B312C(v3);
        return;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"False AAP connection timeout for handle %d state %d",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  v3);
        uint64_t v29 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
          goto LABEL_17;
        }
      }

      return;
    }

    v1 += 36LL;
  }

  while (v1 != 1080);
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AAP connection timeout for unknown handle %d", v6, v7, v8, v9, v10, v11, v12, v3);
    uint64_t v13 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
LABEL_17:
    }
      sub_100657858();
  }

void sub_1000B553C(uint64_t a1)
{
  for (uint64_t i = 0LL; i != 1080; i += 36LL)
  {
    uint64_t v3 = &word_1008DEBF0[i];
    if (((unsigned __int16)word_1008DEBF0[i + 1] | ((unsigned __int16)word_1008DEBF0[i] << 16)) == (_DWORD)a1)
    {
      sub_1001EEB14(*((unsigned int *)v3 + 15));
      *((_DWORD *)v3 + 15) = 0;
      return;
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"AAPConnectCancelTimeout: No AAP connection associated with handle %d",  v4,  v5,  v6,  v7,  v8,  v9,  v10,  a1);
    uint64_t v11 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_1000B55E0(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = a2 | (a1 << 16);
  if ((_DWORD)a3) {
    uint64_t v8 = a3;
  }
  else {
    uint64_t v8 = 114LL;
  }
  do
  {
    uint64_t v9 = &word_1008DEBF0[v6];
    if ((unsigned __int16)word_1008DEBF0[v6] == a1 && (unsigned __int16)v9[1] == (_DWORD)a2)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"disconnectRspCleanup result %d handle %d state %d",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  a3);
        uint64_t v17 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v18 = sub_1001EDDCC();
          *(_DWORD *)__int128 buf = 136446210;
          uint64_t v33 = v18;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      uint64_t v19 = *(void *)&word_1008DEBF0[v6 + 8];
      if (LOBYTE(word_1008DEBF0[v6 + 12]) == 4)
      {
        if (!v19)
        {
LABEL_16:
          *((void *)v9 + 8) = 0LL;
          *((_OWORD *)v9 + 2) = 0u;
          *((_OWORD *)v9 + 3) = 0u;
          *(_OWORD *)uint64_t v9 = 0u;
          *((_OWORD *)v9 + 1) = 0u;
          goto LABEL_17;
        }

        uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
        if (v20)
        {
          v20(v7, a3);
          goto LABEL_16;
        }
      }

      else if (!v19)
      {
        goto LABEL_16;
      }

      uint64_t v21 = *(void (**)(__int16 *, uint64_t, void, void, void, void, void))(v19 + 8);
      if (v21) {
        v21(&word_1008DEBF0[v6 + 2], v8, 0LL, 0LL, 0LL, 0LL, 0LL);
      }
      goto LABEL_16;
    }

void sub_1000B5834()
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"idleChannelCleanupCB", v0, v1, v2, v3, v4, v5, v6, v43);
    uint64_t v7 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      int v45 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  for (uint64_t i = 0LL; i != 30; ++i)
  {
    uint64_t v9 = &word_1008DEBF0[12 * i];
    int v10 = (unsigned __int16)v9[1080];
    if (v9[1080])
    {
      uint64_t v11 = (unsigned __int16 *)(v9 + 1080);
      uint64_t v12 = &_mh_execute_header.magic + 2;
      while (*(unsigned __int16 *)((char *)word_1008DEBF0 + v12) != v10)
      {
        v12 += 72LL;
        if (v12 == 2162)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Connection CID=%d is going down", v13, v14, v15, v16, v17, v18, v19, *v11);
            uint64_t v20 = (os_log_s *)sub_100086554(0x52u);
            if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v21 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446210;
              int v45 = v21;
              _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          unsigned int v22 = *v11;
          if (LOBYTE(word_1008DEBF0[12 * i + 1081])) {
            int v23 = sub_100175D08(v22);
          }
          else {
            int v23 = sub_1001759FC(v22, 436LL);
          }
          int v33 = v23;
          sub_100087CCC((uint64_t)&unk_1008DF460, 30LL, *v11);
          if (v33 && sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Failed to disconnect L2CAP Channel", v34, v35, v36, v37, v38, v39, v40, v43);
            uint64_t v41 = (os_log_s *)sub_100086554(0x52u);
            if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
            {
              uint64_t v42 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446466;
              int v45 = v42;
              __int16 v46 = 1024;
              int v47 = v33;
              _os_log_error_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
            }
          }

          goto LABEL_22;
        }
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Channel with CID=%d not idle, still have connection to %: sid=%d cid=%d",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  (uint64_t)v11);
        uint64_t v31 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v32 = sub_1001EDDCC();
          *(_DWORD *)__int128 buf = 136446210;
          int v45 = v32;
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }

void sub_1000B5B20()
{
  if (sub_1001EE6E8((uint64_t)sub_1000B5834, 0LL, 50, 0LL) && sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_Dispatch_RegisterTimedFunc failed ", v0, v1, v2, v3, v4, v5, v6, v8);
    uint64_t v7 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

double sub_1000B5B9C(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"genericL2CAPConnectCompleteCB cid=%x inmtu=%d outmtu=%d result=%d",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  a1);
    uint64_t v13 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v52 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v50 = 0LL;
  if ((_DWORD)a4)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"l2capConnectCompleteCb failed", v14, v15, v16, v17, v18, v19, v20, v49);
      unsigned int v22 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    uint64_t v23 = 0LL;
    while (1)
    {
      uint64_t v24 = *(void *)&word_1008DEBF0[v23 + 8];
      if (v24)
      {
        if (LOBYTE(word_1008DEBF0[v23 + 12]) != 4) {
          break;
        }
      }

      v23 += 36LL;
      if (v23 == 1080) {
        return result;
      }
    }

    int v47 = &word_1008DEBF0[v23];
    uint64_t v48 = *(void (**)(__int16 *, uint64_t, void, void, void, void, void))(v24 + 8);
    if (v48) {
      v48(v47 + 2, a4, 0LL, 0LL, 0LL, 0LL, 0LL);
    }
    *((void *)v47 + 8) = 0LL;
    double result = 0.0;
    *((_OWORD *)v47 + 2) = 0u;
    *((_OWORD *)v47 + 3) = 0u;
    *(_OWORD *)int v47 = 0u;
    *((_OWORD *)v47 + 1) = 0u;
  }

  else
  {
    sub_100171EC4(a1, &v50);
    for (uint64_t i = 0LL; i != 1080; i += 36LL)
    {
      uint64_t v26 = &word_1008DEBF0[i];
      if ((unsigned __int16)word_1008DEBF0[i + 1] == a1 && *((_BYTE *)v26 + 24) == 2)
      {
        sub_1001EEB14(*(unsigned int *)&word_1008DEBF0[i + 32]);
        *((_BYTE *)v26 + 24) = 3;
        int v27 = sub_1000B33D0( (int *)&word_1008DEBF0[i + 2],  (unsigned __int16)v26[1],  (unsigned __int16)word_1008DEBF0[i],  word_1008DEBF0[i + 24],  word_1008DEBF0[i + 25],  (void **)&word_1008DEBF0[i + 26]);
        if (v27)
        {
          int v28 = v27;
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"sendConnectReqPacket failed", v29, v30, v31, v32, v33, v34, v35, v49);
            uint64_t v36 = (os_log_s *)sub_100086554(0x52u);
            if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
            {
              uint64_t v37 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446466;
              uint64_t v52 = v37;
              __int16 v53 = 1024;
              int v54 = v28;
              _os_log_error_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
            }
          }

          *((void *)v26 + 8) = 0LL;
          *((_OWORD *)v26 + 2) = 0u;
          *((_OWORD *)v26 + 3) = 0u;
          *(_OWORD *)uint64_t v26 = 0u;
          *((_OWORD *)v26 + 1) = 0u;
        }
      }
    }

    if ((sub_1000A86F0() & 1) != 0)
    {
      sub_1001EE134( (uint64_t)"scheduleIdleChannelCleanup at genericL2CAPConnectCompleteCB",  v38,  v39,  v40,  v41,  v42,  v43,  v44,  v49);
      int v45 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v46 = sub_1001EDDCC();
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v52 = v46;
        _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    sub_1000B5B20();
  }

  return result;
}

void sub_1000B5EE4(uint64_t a1, uint64_t a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"genericL2CAPDisconnectInd cid=%d reason=%d", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(0x52u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v18 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  for (uint64_t i = 0LL; i != 1080; i += 36LL)
  {
    uint64_t v13 = &word_1008DEBF0[i];
    int v14 = (unsigned __int16)word_1008DEBF0[i + 1];
    if (v14 == (_DWORD)a1)
    {
      if (*((_DWORD *)v13 + 15)) {
        sub_1000B553C(v14 | ((unsigned __int16)*v13 << 16));
      }
      uint64_t v15 = *(void *)&word_1008DEBF0[i + 8];
      if (v15)
      {
        uint64_t v16 = *(void (**)(void, uint64_t))(v15 + 16);
        if (v16) {
          v16(a1 | ((unsigned __int16)*v13 << 16), a2);
        }
      }

      *((void *)v13 + 8) = 0LL;
      *((_OWORD *)v13 + 2) = 0u;
      *((_OWORD *)v13 + 3) = 0u;
      *(_OWORD *)uint64_t v13 = 0u;
      *((_OWORD *)v13 + 1) = 0u;
    }
  }

uint64_t sub_1000B6028(int *a1, int a2, __int16 a3)
{
  __int16 v4 = a2;
  uint64_t v6 = sub_100087DC8((uint64_t)&unk_1008DF460, 30LL, a2);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_10008784C(a3, v4, a1, 3, 2);
    uint64_t v20 = 0LL;
    __int16 v19 = 0;
    __int16 v9 = *((_WORD *)v8 + 1);
    LOWORD(v20) = *((_WORD *)v8 + 5);
    WORD1(v20) = v9;
    sub_1001EF520((uint64_t)(v8 + 1), 2u);
    sub_1001EFB10((unsigned __int8 *)v8 + 16, (char *)&v20, 4uLL, 2u);
    sub_1001EFB10((unsigned __int8 *)v8 + 16, (char *)&v19, *((unsigned __int16 *)v8 + 64), 2u);
    *((void *)v8 + 19) = v7;
    return sub_10008799C((uint64_t)v8, (uint64_t)sub_1000B4924);
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"sendDisconnectRspPacket channel not found: addr=%: cid=%d sid=%d result=%d",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  (uint64_t)a1);
      uint64_t v18 = (os_log_s *)sub_100086554(0x52u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_10065A9B4();
      }
    }

    return 406LL;
  }

void sub_1000B618C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0LL;
  while (LOBYTE(word_1008DEBF0[v3 + 12]) != 1)
  {
    v3 += 36LL;
    if (v3 == 1080)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"No connection Entry for this SDP search resp", v4, v5, v6, v7, v8, v9, v10, v68);
        uint64_t v11 = (os_log_s *)sub_100086554(0x52u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return;
    }
  }

  if (!a3)
  {
    if (*(_BYTE *)a1 == 6 && *(_WORD *)(a1 + 2))
    {
      uint64_t v12 = *(void *)(a1 + 8);
      if (*(_BYTE *)v12 == 6)
      {
        if (!*(_WORD *)(v12 + 2)) {
          goto LABEL_20;
        }
        goto LABEL_27;
      }

      if (*(_WORD *)(v12 + 2) == 4)
      {
LABEL_27:
        uint64_t v37 = *(void *)(v12 + 8);
        int v38 = *(unsigned __int16 *)(v37 + 8);
        uint64_t v39 = 1LL;
        if (v38 == 4)
        {
LABEL_28:
          word_1008DEBF0[v3 + 21] = *(_DWORD *)(*(void *)(*(void *)(v37 + 16 * v39 + 8) + 8LL) + 24LL);
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Got data PSM (0x%x)\n",  v40,  v41,  v42,  v43,  v44,  v45,  v46,  (unsigned __int16)word_1008DEBF0[v3 + 21]);
            int v47 = (os_log_s *)sub_100086554(0x52u);
            if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v48 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446210;
              uint64_t v70 = v48;
              _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          if (v38 == 4) {
            goto LABEL_20;
          }
        }

        else
        {
          uint64_t v49 = 40LL;
          while (1)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"Unknown attribute", v50, v51, v52, v53, v54, v55, v56, v68);
              uint64_t v57 = (os_log_s *)sub_100086554(0x52u);
              if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
              {
                uint64_t v59 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446466;
                uint64_t v70 = v59;
                __int16 v71 = 1024;
                int v72 = 0xFFFF;
                _os_log_error_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
              }
            }

            uint64_t v37 = *(void *)(v12 + 8);
            int v58 = *(unsigned __int16 *)(v37 + v49);
            v39 += 2LL;
            v49 += 32LL;
            if (v58 == 4) {
              goto LABEL_28;
            }
          }
        }

        goto LABEL_16;
      }

      if (!sub_1000A86F0()
        || (sub_1001EE134( (uint64_t)"SDP response is not a sequence or has wrong number of elements\n",  v60,  v61,  v62,  v63,  v64,  v65,  v66,  v68),  uint64_t v67 = (os_log_s *)sub_100086554(0x52u),  !os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)))
      {
LABEL_16:
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Didn't find what we were looking for, zap PSM's to prevent AAP connections when SDP disconnect completes",  v21,  v22,  v23,  v24,  v25,  v26,  v27,  v68);
          int v28 = (os_log_s *)sub_100086554(0x52u);
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        word_1008DEBF0[v3 + 21] = 0;
        goto LABEL_20;
      }
    }

    else
    {
      sub_1001EE134( (uint64_t)"SDP search response has no responses, failing connection",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  v68);
      uint64_t v20 = (os_log_s *)sub_100086554(0x52u);
      if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        goto LABEL_16;
      }
    }

    sub_100657858();
    goto LABEL_16;
  }

uint64_t sub_1000B6578()
{
  return 0LL;
}

FILE *sub_1000B6580(unsigned __int8 *a1, uint64_t a2)
{
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  *(_OWORD *)__filename = 0u;
  __int128 v9 = 0u;
  double result = fopen(__filename, "r");
  if (result)
  {
    uint64_t v5 = result;
    sub_1001EE0E4("link key request: retrieving stored key for %:\n", a1);
    int v6 = fread((void *)(a2 + 6), 1uLL, 0x10uLL, v5);
    fread((void *)(a2 + 24), 4uLL, 1uLL, v5);
    fclose(v5);
    if (v6 == 16)
    {
      int v7 = *(_DWORD *)a1;
      *(_WORD *)(a2 + 4) = *((_WORD *)a1 + 2);
      *(_DWORD *)a2 = v7;
      return (FILE *)1;
    }

    return 0LL;
  }

  return result;
}

uint64_t sub_1000B66B4(unsigned __int8 *a1, char *a2)
{
  uint64_t v4 = getenv("HOME");
  if (v4)
  {
    snprintf( a2,  0x1FFuLL,  "%s/Library/Preferences/Bluetooth/%02X-%02X-%02X-%02X-%02X-%02X.key",  v4,  *a1,  a1[1],  a1[2],  a1[3],  a1[4],  a1[5]);
    uint64_t result = 0LL;
    a2[511] = 0;
  }

  else
  {
    fwrite("GetFilenameFromAddress: $HOME not set\n", 0x26uLL, 1uLL, __stderrp);
    return 0xFFFFFFFFLL;
  }

  return result;
}

uint64_t sub_1000B6758(unsigned __int8 *a1, const void *a2, int a3)
{
  int __ptr = a3;
  memset(__s, 0, sizeof(__s));
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  *(_OWORD *)__filename = 0u;
  __int128 v10 = 0u;
  uint64_t result = sub_1000B66B4(a1, __filename);
  if (!(_DWORD)result)
  {
    __strlcpy_chk(__s, __filename, 512LL, 512LL);
    int v6 = strrchr((const char *)__s, 47);
    if (v6) {
      *int v6 = 0;
    }
    if (mkdir((const char *)__s, 0x1EDu))
    {
      if (*__error() != 17) {
        return fprintf(__stderrp, "OI_LinkKeyStorage_WriteKey: could not create directory %s\n", (const char *)__s);
      }
    }

    else
    {
      sub_1001EE0E4("OI_LinkKeyStorage_WriteKey: created directory %s\n", (const char *)__s);
    }

    uint64_t result = remove(__filename);
    if (a2)
    {
      uint64_t result = (uint64_t)fopen(__filename, "w");
      if (result)
      {
        int v7 = (FILE *)result;
        sub_1001EE0E4("new link key created for %:\n", a1);
        fwrite(a2, 1uLL, 0x10uLL, v7);
        fwrite(&__ptr, 4uLL, 1uLL, v7);
        return fclose(v7);
      }
    }
  }

  return result;
}

unsigned __int16 *sub_1000B6934(int a1)
{
  uint64_t v1 = 0LL;
  while (1)
  {
    uint64_t v2 = (unsigned __int16 *)qword_1008DF768[v1];
    if (v2)
    {
      if (*v2 == a1) {
        break;
      }
    }

    if (++v1 == 16)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"GetContextByRfcommHandle - context not found", v3, v4, v5, v6, v7, v8, v9, v12);
        __int128 v10 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 0LL;
    }
  }

  return v2;
}

unsigned __int16 *sub_1000B69C0(int a1)
{
  uint64_t v1 = 0LL;
  while (1)
  {
    uint64_t v2 = (unsigned __int16 *)qword_1008DF768[v1];
    if (v2)
    {
      if (*v2 == a1) {
        break;
      }
    }

    if (++v1 == 16)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"GetConnectionByCid - context not found", v3, v4, v5, v6, v7, v8, v9, v12);
        __int128 v10 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 0LL;
    }
  }

  return v2;
}

uint64_t sub_1000B6A4C(int a1)
{
  uint64_t v1 = 0LL;
  while (1)
  {
    uint64_t v2 = qword_1008DF768[v1];
    if (v2)
    {
    }

    if (++v1 == 16)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"GetConnectionByPsm - context not found", v3, v4, v5, v6, v7, v8, v9, v12);
        __int128 v10 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 0LL;
    }
  }

  return v2;
}

void sub_1000B6AD8(int a1)
{
  uint64_t v1 = 0LL;
  while (1)
  {
    uint64_t v2 = qword_1008DF768[v1];
    if (v2)
    {
    }

    if (++v1 == 16)
    {
      sub_1001EE2A0();
      return;
    }
  }

  sub_1000B1838((void *)qword_1008DF768[v1]);
  qword_1008DF768[v1] = 0LL;
}

uint64_t sub_1000B6B34(uint64_t a1)
{
  for (uint64_t i = 0LL; i != 16; ++i)
  {
    if (!qword_1008DF768[i])
    {
      uint64_t result = 0LL;
      qword_1008DF768[i] = a1;
      *(_WORD *)(a1 + 208) = i;
      return result;
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"No more OBEX handles available!", v3, v4, v5, v6, v7, v8, v9, v12);
    __int128 v10 = (os_log_s *)sub_100086554(0x18u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 104LL;
}

uint64_t sub_1000B6BC4(unsigned int a1)
{
  if (a1 >= 0x10) {
    sub_1001EE2A0();
  }
  return qword_1008DF768[a1];
}

void sub_1000B6BF8(uint64_t a1, void *a2, uint64_t a3)
{
  if (a1)
  {
    *(void *)(a1 + 40) = 0LL;
    sub_1001EF69C(a2);
    if ((_DWORD)a3)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OBEX server RFCOMM write error %! - disconnecting", v5, v6, v7, v8, v9, v10, v11, a3);
        uint64_t v12 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

void sub_1000B6DFC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 32) != 2) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)(a1 + 31))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c");
    goto LABEL_228;
  }

  uint64_t v2 = *(unsigned __int16 *)(a1 + 26);
  uint64_t v3 = *(unsigned __int16 *)(a1 + 28);
  if (v2 <= v3)
  {
LABEL_228:
    uint64_t v191 = "ByteStream_NumReadBytesAvail(connection->common.rcvPacket) >= 1";
    goto LABEL_230;
  }

  if (*(_BYTE *)(a1 + 30) != 1)
  {
    uint64_t v191 = "(connection->common.rcvPacket).__RWFlag == BYTESTREAM_READ";
LABEL_230:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c",  1200,  v191);
  }

  uint64_t v4 = *(void *)(a1 + 16);
  *(_WORD *)(a1 + 28) = v3 + 1;
  if (v2 - (unint64_t)(unsigned __int16)(v3 + 1) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c",  1201,  "ByteStream_NumReadBytesAvail(connection->common.rcvPacket) >= (sizeof(uint16_t))");
  }
  int v5 = *(unsigned __int8 *)(v4 + v3);
  unsigned __int16 v6 = v3 + 3;
  *(_WORD *)(a1 + 28) = v3 + 3;
  int v7 = *(_DWORD *)(a1 + 204);
  if (v7 == 2 && (v5 & 0x7F) != 0)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received invalid command after OBEX disconnect. Terminating underlying transport.",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v192);
      uint64_t v15 = (os_log_s *)sub_100086554(0x18u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1000B7BB8((unsigned __int16 *)a1, 0);
    return;
  }

  uint64_t v16 = 1717LL;
  uint64_t v17 = (uint64_t *)(a1 + 16);
  switch(v5 | 0x80)
  {
    case 0x80:
      ptr = 0LL;
      uint64_t v194 = 0LL;
      if (v7 != 11 && v7 != 2)
      {
        uint64_t v16 = 1715LL;
        goto LABEL_83;
      }

      if (v2 <= v6)
      {
        uint64_t v19 = 0LL;
        *(_BYTE *)(a1 + 31) = 1;
      }

      else
      {
        *(_WORD *)(a1 + 28) = v3 + 4;
        uint64_t v19 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 3)) >> 4;
        if ((_DWORD)v19 == 1)
        {
          if (v2 <= (unsigned __int16)(v3 + 4))
          {
            *(_BYTE *)(a1 + 31) = 1;
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c");
          }

          else
          {
            *(_WORD *)(a1 + 28) = v3 + 5;
            if (*(_BYTE *)(v4 + (unsigned __int16)(v3 + 4)))
            {
              uint64_t v16 = 1702LL;
              goto LABEL_83;
            }

            if ((int)(v2 - (unsigned __int16)(v3 + 5)) > 1)
            {
              unsigned int v114 = __rev16(*(unsigned __int16 *)(v4 + (unsigned __int16)(v3 + 5)));
              *(_WORD *)(a1 + 28) = v3 + 7;
              int v115 = *(_DWORD *)(a1 + 4);
              if (v115)
              {
                if (v115 != 1)
                {
                  unsigned int v116 = *(unsigned __int16 *)(a1 + 76);
LABEL_176:
                  if (v116 <= 0xC7)
                  {
                    if (sub_1000A86F0())
                    {
                      sub_1001EE134( (uint64_t)"OBEX Server connect - packet size too small %d",  v126,  v127,  v128,  v129,  v130,  v131,  v132,  *(unsigned __int16 *)(a1 + 76));
                      uint64_t v133 = (os_log_s *)sub_100086554(0x18u);
                      if (os_log_type_enabled(v133, OS_LOG_TYPE_ERROR)) {
                        sub_100657858();
                      }
                    }

                    uint64_t v16 = 1736LL;
                    goto LABEL_83;
                  }

                  uint64_t v134 = sub_1000FB804((uint64_t)&ptr, v17);
                  if ((_DWORD)v134)
                  {
                    uint64_t v16 = v134;
                    sub_1001EE134( (uint64_t)"OI_OBEXCOMMON_ParseHeaderList failed!",  v135,  v136,  v137,  v138,  v139,  v140,  v141,  v192);
                    char v142 = (os_log_s *)sub_100086554(0x18u);
                    if (!os_log_type_enabled(v142, OS_LOG_TYPE_ERROR)) {
                      goto LABEL_83;
                    }
                    goto LABEL_215;
                  }

                  uint64_t v143 = sub_1000FB7D8((unsigned __int8 **)&ptr, 70);
                  if (v143) {
                    int v144 = (const void **)(v143 + 8);
                  }
                  else {
                    int v144 = 0LL;
                  }
                  uint64_t v145 = sub_1000B7C80(a1, v144);
                  if ((_DWORD)v145)
                  {
                    uint64_t v16 = v145;
                    sub_1001EE134( (uint64_t)"No matching server target was found",  v146,  v147,  v148,  v149,  v150,  v151,  v152,  v192);
                    v153 = (os_log_s *)sub_100086554(0x18u);
                    if (!os_log_type_enabled(v153, OS_LOG_TYPE_ERROR)) {
                      goto LABEL_83;
                    }
                    goto LABEL_215;
                  }

                  uint64_t v154 = sub_1000FB7D8((unsigned __int8 **)&ptr, 77);
                  if (v154)
                  {
                    uint64_t v155 = (uint64_t)v154;
                    if (!*(void *)(a1 + 64))
                    {
                      unsigned int v156 = sub_1000B1814(0x9BuLL);
                      *(void *)(a1 + 64) = v156;
                      if (!v156)
                      {
                        sub_1001EE134( (uint64_t)"OBEX server could not allocate authentication state",  v174,  v175,  v176,  v177,  v178,  v179,  v180,  v192);
                        uint64_t v181 = (os_log_s *)sub_100086554(0x18u);
                        if (!os_log_type_enabled(v181, OS_LOG_TYPE_ERROR)) {
                          goto LABEL_222;
                        }
                        goto LABEL_221;
                      }
                    }

                    sub_1000FA834(a1, v155);
                    char v157 = 1;
                  }

                  else
                  {
                    char v157 = 0;
                  }

                  *(_BYTE *)(a1 + 200) = v157;
                  int v158 = *(_DWORD *)(*(void *)(a1 + 168) + 24LL);
                  if (!v158)
                  {
                    uint64_t v162 = 0LL;
                    uint64_t v163 = 0LL;
                    *(_BYTE *)(a1 + 56) = 0;
                    *(_BYTE *)(a1 + 199) = 0;
                    goto LABEL_209;
                  }

                  *(_BYTE *)(a1 + 56) = 1;
                  *(_BYTE *)(a1 + 199) = 1;
                  uint64_t v159 = *(_BYTE **)(a1 + 64);
                  if (v159)
                  {
LABEL_201:
                    if (v158 == 2) {
                      v159[59] = 1;
                    }
                    uint64_t v160 = sub_1000FB7D8((unsigned __int8 **)&ptr, 78);
                    if (!v160)
                    {
                      int v165 = *(unsigned __int8 *)(a1 + 199);
                      *(_DWORD *)(a1 + 204) = 3;
                      if (v165)
                      {
                        uint64_t v16 = sub_1000B82E0(*(unsigned __int16 *)(a1 + 208), 1LL, 0LL);
                        if (!(_DWORD)v16) {
                          goto LABEL_133;
                        }
                        sub_1001EE134( (uint64_t)"OBEX server could not accept connection",  v166,  v167,  v168,  v169,  v170,  v171,  v172,  v192);
                        v173 = (os_log_s *)sub_100086554(0x18u);
                        if (!os_log_type_enabled(v173, OS_LOG_TYPE_ERROR)) {
                          goto LABEL_83;
                        }
LABEL_215:
                        sub_100657858();
                        goto LABEL_83;
                      }

                      uint64_t v162 = 0LL;
                      uint64_t v163 = 0LL;
LABEL_210:
                      ++*(_BYTE *)(a1 + 193);
                      uint64_t v164 = sub_1000FB7D8((unsigned __int8 **)&ptr, 76);
                      *(_BYTE *)(a1 + 201) = 1;
                      (**(void (***)(void, void, uint64_t, uint64_t, unsigned __int8 *))(*(void *)(a1 + 168) + 16LL))( *(unsigned __int16 *)(a1 + 208),  *(unsigned __int8 *)(a1 + 200) | *(unsigned __int8 *)(a1 + 199),  v163,  v162,  v164);
                      uint64_t v16 = 0LL;
LABEL_92:
                      if (ptr) {
                        sub_1000B1838(ptr);
                      }
                      goto LABEL_133;
                    }

                    sub_1000FA908(a1, (uint64_t)v160);
                    uint64_t v161 = *(void *)(a1 + 64);
                    uint64_t v162 = *(unsigned __int8 *)(v161 + 58);
                    if (*(_BYTE *)(v161 + 59) && !*(_BYTE *)(v161 + 58))
                    {
LABEL_207:
                      sub_1000FA768(a1);
                      uint64_t v16 = 1735LL;
                      goto LABEL_83;
                    }

                    uint64_t v190 = v161 + 38;
                    if ((_DWORD)v162) {
                      uint64_t v163 = v190;
                    }
                    else {
                      uint64_t v163 = 0LL;
                    }
LABEL_209:
                    *(_DWORD *)(a1 + 204) = 3;
                    goto LABEL_210;
                  }

                  uint64_t v159 = sub_1000B1814(0x9BuLL);
                  *(void *)(a1 + 64) = v159;
                  if (v159)
                  {
                    int v158 = *(_DWORD *)(*(void *)(a1 + 168) + 24LL);
                    goto LABEL_201;
                  }

                  if (!sub_1000A86F0()
                    || (sub_1001EE134( (uint64_t)"OBEX server could not allocate authentication state",  v182,  v183,  v184,  v185,  v186,  v187,  v188,  v192),  char v189 = (os_log_s *)sub_100086554(0x18u),  !os_log_type_enabled(v189, OS_LOG_TYPE_ERROR)))
                  {
LABEL_222:
                    uint64_t v16 = 0LL;
LABEL_83:
                    if (sub_1000A86F0())
                    {
                      sub_1001EE134((uint64_t)"ConnectCommand error %!", v67, v68, v69, v70, v71, v72, v73, v16);
                      uint64_t v74 = (os_log_s *)sub_100086554(0x18u);
                      if (os_log_type_enabled(v74, OS_LOG_TYPE_ERROR)) {
                        sub_100657858();
                      }
                    }

                    uint64_t v75 = sub_1000B83C4(*(unsigned __int16 *)(a1 + 208), 0LL, v16);
                    if ((_DWORD)v75)
                    {
                      uint64_t v76 = v75;
                      if (sub_1000A86F0())
                      {
                        sub_1001EE134( (uint64_t)"OBEX server failed to accept connection %!",  v77,  v78,  v79,  v80,  v81,  v82,  v83,  v76);
                        uint64_t v84 = (os_log_s *)sub_100086554(0x18u);
                        if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR)) {
                          sub_100657858();
                        }
                      }
                    }

                    __int16 v85 = *(void **)(a1 + 64);
                    if (v85)
                    {
                      sub_1000B1838(v85);
                      *(void *)(a1 + 64) = 0LL;
                    }

                    goto LABEL_92;
                  }

LABEL_221:
                  sub_100657858();
                  goto LABEL_222;
                }

                unsigned int v116 = *(unsigned __int16 *)(a1 + 76);
                if (v116 <= v114) {
                  goto LABEL_176;
                }
              }

              *(_WORD *)(a1 + 76) = v114;
              unsigned int v116 = v114;
              goto LABEL_176;
            }
          }

          *(_BYTE *)(a1 + 31) = 1;
          uint64_t v16 = 1707LL;
          goto LABEL_83;
        }
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OBEX Server connect - version mismatch %d.%d", v59, v60, v61, v62, v63, v64, v65, v19);
        uint64_t v66 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      uint64_t v16 = 1718LL;
      goto LABEL_83;
    case 0x81:
      *(_DWORD *)(a1 + 204) = 11;
      uint64_t v20 = sub_1000B7F78(a1, 160);
      if (!(_DWORD)v20)
      {
        *(_DWORD *)(a1 + 32) = 0;
        return;
      }

      uint64_t v16 = v20;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_OBEXCOMMON_SendOk failed %!", v21, v22, v23, v24, v25, v26, v27, v16);
        __int128 v28 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1000B7BB8((unsigned __int16 *)a1, 0);
LABEL_31:
      *(_DWORD *)(a1 + 32) = 0;
      goto LABEL_134;
    case 0x82:
      ptr = 0LL;
      uint64_t v194 = 0LL;
      uint64_t v16 = sub_1000FB804((uint64_t)&ptr, v17);
      if ((_DWORD)v16) {
        goto LABEL_33;
      }
      int v54 = *(_DWORD *)(a1 + 204);
      if (v54 == 8) {
        goto LABEL_71;
      }
      if (v54 != 5)
      {
        uint64_t v16 = 1711LL;
        goto LABEL_33;
      }

      if (!*(_BYTE *)(a1 + 120)) {
        goto LABEL_70;
      }
      uint64_t v55 = sub_1000FB7D8((unsigned __int8 **)&ptr, 203);
      if (v55)
      {
        if (*((_DWORD *)v55 + 2) == (_DWORD)a1)
        {
LABEL_70:
          *(_DWORD *)(a1 + 204) = 8;
LABEL_71:
          uint64_t v56 = *(uint64_t (**)(void, void **, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16LL) + 24LL);
          if (v56)
          {
            if ((v5 & 0x80u) == 0) {
              uint64_t v57 = 1701LL;
            }
            else {
              uint64_t v57 = 0LL;
            }
            int v58 = v56(*(unsigned __int16 *)(a1 + 208), &ptr, v57);
            if (v58) {
              goto LABEL_147;
            }
            goto LABEL_148;
          }
        }

        uint64_t v16 = 1715LL;
      }

      else
      {
        uint64_t v16 = 1714LL;
      }

        uint64_t v128 = "(null)";
        goto LABEL_252;
      }

      uint64_t v108 = a3++;
      if (!v107) {
        goto LABEL_221;
      }
      uint64_t v109 = *(_DWORD *)v108;
      if ((_WORD)v109)
      {
        sub_1001F4BD8(a1, v107, (unsigned __int16)v109);
        goto LABEL_254;
      }

      uint64_t v128 = "(empty)";
LABEL_252:
      uint64_t v127 = a1;
      goto LABEL_253;
    case 0x41u:
      uint64_t v110 = a3++;
      uint64_t v111 = *(_DWORD *)v110;
      if ((v146 & 1) != 0)
      {
        uint64_t v112 = (int *)a3++;
        int v7 = *v112;
        if (*v112 << 16 > 0x200000) {
          return result;
        }
      }

      else if (!(_WORD)v7)
      {
        int v7 = 32;
        goto LABEL_234;
      }

    if (os_log_type_enabled((os_log_t)qword_1008F7598, OS_LOG_TYPE_ERROR)) {
      sub_100681DF4((_DWORD *)a2);
    }
    return;
  }

  if (v8 <= 26)
  {
    if (v8 == 17)
    {
      uint64_t v29 = (os_log_s *)qword_1008F7598;
      if (os_log_type_enabled((os_log_t)qword_1008F7598, OS_LOG_TYPE_DEFAULT))
      {
        if (v7)
        {
          sub_1003CF00C(v7, __p);
          if (SHIBYTE(v125[0]) >= 0) {
            uint64_t v30 = __p;
          }
          else {
            uint64_t v30 = (void **)__p[0];
          }
          uint64_t v31 = *(unsigned __int8 *)(a2 + 8);
          *(_DWORD *)__int128 buf = 136446466;
          *(void *)&uint8_t buf[4] = v30;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = v31;
          _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "Received mic gain event from device %{public}s - new gain is %d",  buf,  0x12u);
          if (SHIBYTE(v125[0]) < 0) {
            operator delete(__p[0]);
          }
        }

        else
        {
          uint64_t v78 = *(unsigned __int8 *)(a2 + 8);
          *(_DWORD *)__int128 buf = 136446466;
          *(void *)&uint8_t buf[4] = "NULL";
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = v78;
          _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "Received mic gain event from device %{public}s - new gain is %d",  buf,  0x12u);
        }
      }

      sub_1002073EC(v5, *(_BYTE *)(a2 + 8));
      if (v4)
      {
        LOBYTE(v79) = *(_BYTE *)(a2 + 8);
        sub_100270158((uint64_t)v4, (float)v79 / 15.0);
      }

      goto LABEL_149;
    }

    if (v8 == 18)
    {
      sub_1002073FC(v5, *(_BYTE *)(a2 + 8));
      uint64_t v12 = (os_log_s *)qword_1008F7598;
      if (os_log_type_enabled((os_log_t)qword_1008F7598, OS_LOG_TYPE_DEFAULT))
      {
        if (v7)
        {
          sub_1003CF00C(v7, __p);
          if (SHIBYTE(v125[0]) >= 0) {
            uint64_t v14 = __p;
          }
          else {
            uint64_t v14 = (void **)__p[0];
          }
          uint64_t v15 = *(unsigned __int8 *)(a2 + 8);
          *(_DWORD *)__int128 buf = 136446466;
          *(void *)&uint8_t buf[4] = v14;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Received speaker gain event from device %{public}s - new gain is %d",  buf,  0x12u);
          if (SHIBYTE(v125[0]) < 0) {
            operator delete(__p[0]);
          }
        }

        else
        {
          uint64_t v76 = *(unsigned __int8 *)(a2 + 8);
          *(_DWORD *)__int128 buf = 136446466;
          *(void *)&uint8_t buf[4] = "NULL";
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = v76;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Received speaker gain event from device %{public}s - new gain is %d",  buf,  0x12u);
        }
      }

      if (v4)
      {
        LOBYTE(v13) = *(_BYTE *)(a2 + 8);
        sub_10026F638((uint64_t)v4, (float)v13 / 15.0);
      }

  uint64_t v98 = sub_1002E6E00();
  sub_10002418C(buf, "LeBroadcaster");
  sub_10002418C(__p, "HoldStablePrivateAddressThreshold");
  uint64_t v99 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, uint64_t))(*(void *)v98 + 128LL))( v98,  buf,  __p,  v5 + 202);
  if (v110 < 0) {
    operator delete(__p[0]);
  }
  if (SBYTE3(v114) < 0)
  {
    operator delete(*(void **)buf);
    if (!v99) {
      goto LABEL_229;
    }
  }

  else if (!v99)
  {
    goto LABEL_229;
  }

  uint64_t v100 = (os_log_s *)qword_1008F7648;
  if (os_log_type_enabled((os_log_t)qword_1008F7648, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v101 = *(_DWORD *)(v5 + 202);
    *(_DWORD *)__int128 buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v101;
    _os_log_impl( (void *)&_mh_execute_header,  v100,  OS_LOG_TYPE_DEFAULT,  "Warning: HoldStablePrivateAddressThreshold overridden to %u",  buf,  8u);
  }

LABEL_143:
          if ((v5 & 0x80u) == 0) {
            uint64_t v112 = 1752LL;
          }
          else {
            uint64_t v112 = 1701LL;
          }
          int v58 = (*(uint64_t (**)(void, void **, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16LL) + 16LL))( *(unsigned __int16 *)(a1 + 208),  &ptr,  v112);
          if (v58)
          {
LABEL_147:
            *(_DWORD *)(a1 + 204) = 5;
            char v113 = sub_1000B8238(v58);
            sub_1000B7F78(a1, v113);
          }

          goto LABEL_148;
        }

        if (!sub_1000FB7D8((unsigned __int8 **)&ptr, 1) && !sub_1000FB7D8((unsigned __int8 **)&ptr, 66))
        {
          uint64_t v16 = 1714LL;
          goto LABEL_101;
        }

        if (*(_BYTE *)(a1 + 120))
        {
          uint64_t v94 = sub_1000FB7D8((unsigned __int8 **)&ptr, 203);
          if (v94)
          {
            if (*((_DWORD *)v94 + 2) == (_DWORD)a1) {
              goto LABEL_119;
            }
            uint64_t v16 = 1715LL;
          }

          else
          {
            uint64_t v16 = 1714LL;
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"VerifyConnectionId failed %!", v117, v118, v119, v120, v121, v122, v123, v16);
            uint64_t v124 = (os_log_s *)sub_100086554(0x18u);
            if (os_log_type_enabled(v124, OS_LOG_TYPE_ERROR)) {
              goto LABEL_62;
            }
          }

          goto LABEL_101;
        }

LABEL_101:
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OBEX get command error %!", v86, v87, v88, v89, v90, v91, v92, v16);
        uint64_t v93 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      if (ptr)
      {
        sub_1000B1838(ptr);
        ptr = 0LL;
      }

      if ((*(_DWORD *)(a1 + 204) - 5) <= 2)
      {
        __int128 v38 = *(void (**)(void, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16LL) + 16LL);
        if (v38) {
LABEL_41:
        }
          v38(*(unsigned __int16 *)(a1 + 208), 0LL, v16);
LABEL_42:
        *(_DWORD *)(a1 + 204) = 5;
      }

LABEL_132:
      char v103 = sub_1000B8238(v16);
      sub_1000B7F78(a1, v103);
LABEL_133:
      *(_DWORD *)(a1 + 32) = 0;
      if ((_DWORD)v16)
      {
LABEL_134:
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OBEX request error %!", v104, v105, v106, v107, v108, v109, v110, v16);
          uint64_t v111 = (os_log_s *)sub_100086554(0x18u);
          if (os_log_type_enabled(v111, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }

      return;
    case 0x84:
      goto LABEL_31;
    case 0x85:
      ptr = 0LL;
      uint64_t v194 = 0LL;
      if (v7 != 5)
      {
        uint64_t v16 = 1711LL;
        goto LABEL_125;
      }

      if (!*(void *)(*(void *)(*(void *)(a1 + 168) + 16LL) + 32LL)) {
        goto LABEL_109;
      }
      if (v2 <= v6)
      {
        *(_BYTE *)(a1 + 31) = 1;
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c");
      }

      else
      {
        *(_WORD *)(a1 + 28) = v3 + 4;
        if (v2 > (unsigned __int16)(v3 + 4))
        {
          char v39 = *(_BYTE *)(v4 + (unsigned __int16)(v3 + 3));
          *(_WORD *)(a1 + 28) = v3 + 5;
          uint64_t v16 = sub_1000FB804((uint64_t)&ptr, v17);
          if ((_DWORD)v16) {
            goto LABEL_125;
          }
          if (*(_BYTE *)(a1 + 120))
          {
            __int128 v40 = sub_1000FB7D8((unsigned __int8 **)&ptr, 203);
            if (!v40)
            {
              uint64_t v16 = 1714LL;
LABEL_125:
              if (sub_1000A86F0())
              {
                sub_1001EE134((uint64_t)"SetPathCommand error %!", v95, v96, v97, v98, v99, v100, v101, v16);
                uint64_t v102 = (os_log_s *)sub_100086554(0x18u);
                if (os_log_type_enabled(v102, OS_LOG_TYPE_ERROR)) {
                  sub_100657858();
                }
              }

              if (*(_DWORD *)(a1 + 204) == 10) {
                *(_DWORD *)(a1 + 204) = 5;
              }
              if (ptr)
              {
                sub_1000B1838(ptr);
                ptr = 0LL;
              }

              goto LABEL_132;
            }

            if (*((_DWORD *)v40 + 2) != (_DWORD)a1)
            {
LABEL_109:
              uint64_t v16 = 1715LL;
              goto LABEL_125;
            }
          }

          uint64_t v41 = sub_1000FB7D8((unsigned __int8 **)&ptr, 1);
          if (v41)
          {
            int v43 = *((unsigned __int16 *)v41 + 4);
            uint64_t v42 = v41 + 8;
            if (v43) {
              uint64_t v44 = v42;
            }
            else {
              uint64_t v44 = 0LL;
            }
          }

          else
          {
            uint64_t v44 = 0LL;
          }

          if (v44 || (v39 & 2) != 0)
          {
            if ((v44 == 0LL) | v39 & 1) {
              unsigned int v125 = 0LL;
            }
            else {
              unsigned int v125 = v44;
            }
            *(_DWORD *)(a1 + 204) = 10;
            uint64_t v16 = (*(uint64_t (**)(void, unsigned __int8 *, void, BOOL))(*(void *)(*(void *)(a1 + 168)
                                                                                                 + 16LL)
                                                                                     + 32LL))( *(unsigned __int16 *)(a1 + 208),  v125,  v39 & 1,  (v39 & 2) == 0);
            if (!(_DWORD)v16)
            {
LABEL_148:
              if (ptr) {
                sub_1000B1838(ptr);
              }
              uint64_t v16 = 0LL;
              goto LABEL_133;
            }
          }

          else
          {
            uint64_t v16 = 1736LL;
          }

          goto LABEL_125;
        }
      }

      *(_BYTE *)(a1 + 31) = 1;
      uint64_t v16 = 1721LL;
      goto LABEL_125;
    case 0x86:
    case 0x87:
      sub_1000B7F78(a1, 209);
      uint64_t v16 = 1717LL;
      goto LABEL_31;
    default:
      if ((v5 | 0x80) != 0xFF) {
        goto LABEL_31;
      }
      if ((v7 - 6) < 2)
      {
        *(_DWORD *)(a1 + 204) = 5;
        uint64_t v18 = (void (**)(void, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16LL) + 16LL);
      }

      else
      {
        *(_DWORD *)(a1 + 204) = 5;
        uint64_t v18 = (void (**)(void, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16LL) + 24LL);
      }

      (*v18)(*(unsigned __int16 *)(a1 + 208), 0LL, 1719LL);
LABEL_96:
      if (*(_DWORD *)(a1 + 4) == 1) {
        sub_1001EC0C4(*(void *)(a1 + 112));
      }
      uint64_t v16 = sub_1000B7F78(a1, 160);
      goto LABEL_133;
  }

          if ((a5 & 0xFFFFFFFE) == 2 && v10)
          {
            uint64_t v59 = sub_100404EB8();
            v86[0] = _NSConcreteStackBlock;
            v86[1] = 3221225472LL;
            v86[2] = sub_100216EB4;
            v86[3] = &unk_10087EB20;
            v86[4] = a2;
            sub_100405384(v59, v86);
          }

          uint64_t v60 = sub_1002E6BF0();
          v85[0] = 0LL;
          v85[1] = 0LL;
          sub_100242F28((uint64_t)v85, a1 + 360);
          if (a2)
          {
            for (uint64_t i = *(void *)(a1 + 336); i != *(void *)(a1 + 344); i += 8LL)
            {
              if (**(void **)i == a2)
              {
                uint64_t v16 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(*(void *)i + 768LL)
                                                                                   + 24LL))( *(void *)(*(void *)i + 768LL),  a2,  a3,  a4);
                uint64_t v62 = (os_log_s *)qword_1008F7560;
                if ((_DWORD)v16) {
                  goto LABEL_145;
                }
                uint64_t v65 = os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT);
                if (v65)
                {
                  uint64_t v66 = sub_100216F08(v65, a3);
                  sub_100216F34(a1, a3, a4, v83);
                  uint64_t v67 = v84;
                  uint64_t v68 = (void **)v83[0];
                  sub_1003CF00C(a2, v87);
                  uint64_t v69 = v83;
                  if (v67 < 0) {
                    uint64_t v69 = v68;
                  }
                  uint64_t v70 = v87;
                  if (v88 < 0) {
                    uint64_t v70 = (void **)v87[0];
                  }
                  if (a5 > 4) {
                    uint64_t v71 = "Unknown";
                  }
                  else {
                    uint64_t v71 = off_100888F70[a5 - 1];
                  }
                  *(_DWORD *)__int128 buf = 136448002;
                  *(void *)&uint8_t buf[4] = v66;
                  *(_WORD *)&_BYTE buf[12] = 1024;
                  *(_DWORD *)uint64_t v90 = a3;
                  *(_WORD *)&v90[4] = 2082;
                  uint64_t v91 = v69;
                  *(_WORD *)uint64_t v92 = 2082;
                  *(void *)&v92[2] = v70;
                  uint64_t v93 = 2082;
                  uint64_t v94 = v71;
                  uint64_t v95 = 1024;
                  uint64_t v96 = v14;
                  uint64_t v97 = 1024;
                  uint64_t v98 = v15;
                  uint64_t v99 = 1024;
                  uint64_t v100 = v10;
                  _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEFAULT,  "Sent %{public}s (control cmd 0x%02X) as %{public}s to %{public}s, reqType = %{public}s, magnet from watch = %d, magnet to watch = %d, cloud sync = %d",  buf,  0x42u);
                  if (v88 < 0) {
                    operator delete(v87[0]);
                  }
                  if (v84 < 0) {
                    operator delete(v83[0]);
                  }
                  uint64_t v16 = 0LL;
                }

                goto LABEL_146;
              }
            }
          }

          uint64_t v62 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_ERROR))
          {
            sub_1003CF00C(a2, v83);
            sub_10065F63C((char *)v83, (uint64_t)v101, (uint64_t)v62, buf);
            uint64_t v62 = *(os_log_s **)buf;
          }

          uint64_t v16 = 312LL;
LABEL_145:
          uint64_t v63 = os_log_type_enabled(v62, OS_LOG_TYPE_ERROR);
          if (v63)
          {
            uint64_t v72 = sub_100216F08(v63, a3);
            sub_100216F34(a1, a3, a4, v87);
            uint64_t v73 = v88;
            uint64_t v74 = (void **)v87[0];
            sub_1003CF00C(a2, __p);
            uint64_t v75 = v87;
            if (v73 < 0) {
              uint64_t v75 = v74;
            }
            if (v82 >= 0) {
              uint64_t v76 = __p;
            }
            else {
              uint64_t v76 = (void **)__p[0];
            }
            *(_DWORD *)__int128 buf = 136447234;
            *(void *)&uint8_t buf[4] = v72;
            *(_WORD *)&_BYTE buf[12] = 1024;
            *(_DWORD *)uint64_t v90 = a3;
            *(_WORD *)&v90[4] = 2082;
            uint64_t v91 = v75;
            *(_WORD *)uint64_t v92 = 2082;
            *(void *)&v92[2] = v76;
            uint64_t v93 = 1024;
            LODWORD(v94) = v16;
            _os_log_error_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_ERROR,  "Failed to send %{public}s (control cmd 0x%02X) as %{public}s to %{public}s, error %d",  buf,  0x2Cu);
            if (v82 < 0) {
              operator delete(__p[0]);
            }
            if (v88 < 0) {
              operator delete(v87[0]);
            }
          }

    uint64_t v88 = *(unsigned __int8 *)(v2 + 69);
    if (v88 != v12 || v81 != *(unsigned __int8 *)(v2 + 145))
    {
      uint64_t v89 = (os_log_s *)qword_1008F76F8;
      if (os_log_type_enabled((os_log_t)qword_1008F76F8, OS_LOG_TYPE_DEFAULT))
      {
        else {
          uint64_t v90 = off_10088A020[v12];
        }
        else {
          uint64_t v91 = off_10088A020[(char)v88];
        }
        *(_DWORD *)uint64_t v93 = 136315394;
        *(void *)&v93[4] = v90;
        *(_WORD *)&v93[12] = 2080;
        *(void *)&v93[14] = v91;
        _os_log_impl( (void *)&_mh_execute_header,  v89,  OS_LOG_TYPE_DEFAULT,  "BandSwitchManager change channel map: ---------- Changing HRB Bands from %s to %s ----------",  v93,  0x16u);
      }

      uint64_t v92 = sub_100404EB8();
      *(void *)uint64_t v93 = _NSConcreteStackBlock;
      *(void *)&v93[8] = 3221225472LL;
      *(void *)&v93[16] = sub_10025A730;
      *(void *)&v93[24] = &unk_10087EB68;
      uint64_t v94 = v2;
      uint64_t v95 = 15;
      sub_100405384(v92, v93);
    }
  }

  else
  {
    *(_DWORD *)(v2 + 96) = (unint64_t)(v80 - v79) >> 2;
  }

    sub_100242FAC((uint64_t)v107);
    goto LABEL_133;
  }

  uint64_t v105 = 0;
  sub_100242CA4(&v105);
  uint64_t v15 = *(void *)(a2 + 8);
  uint64_t v16 = *(unsigned __int8 *)(a2 + 96);
  __int128 buf = *(__n128 *)(a2 + 72);
  uint64_t v168 = *(_DWORD *)(a2 + 88);
  sub_100634334(&v164, &buf);
  uint64_t v159 = v164;
  uint64_t v160 = v165;
  if (sub_1001C4D14(v15, v16 != 0, (unsigned __int8 *)&v159, (unsigned __int16)v6))
  {
    if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_ERROR)) {
      sub_100674F68();
    }
    uint64_t v17 = 0LL;
LABEL_28:
    uint64_t v14 = 1LL;
    goto LABEL_29;
  }

  for (j = (char *)v111; j != v112; j += 8)
  {
    uint64_t v21 = sub_100384CDC(a1, *(_DWORD *)(*(void *)j + 104LL));
    if (!v21)
    {
      if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_ERROR)) {
        sub_100674EDC();
      }
      uint64_t v14 = 904LL;
LABEL_124:
      sub_1001C4E78(*(unsigned __int16 **)(a2 + 8));
      uint64_t v17 = 0LL;
LABEL_29:
      sub_100242CD8(&v105);
      goto LABEL_30;
    }

    if (sub_1001C4E8C( *(void *)(*(void *)j + 8LL),  **(unsigned __int16 **)(a2 + 8),  *(void *)(v21 + 8)))
    {
      if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_ERROR)) {
        sub_100674F08();
      }
      uint64_t v14 = 1LL;
      goto LABEL_124;
    }
  }

  uint64_t v25 = (char *)__p;
  if (__p == v109)
  {
    uint64_t v26 = 0LL;
    goto LABEL_115;
  }

  uint64_t v26 = 0LL;
  while (2)
  {
    uint64_t v27 = *(void *)(*(void *)v25 + 96LL);
    uint64_t v104 = *(void *)v25;
    sub_100240540(&buf, *(void *)v25 + 104LL);
    if (v26) {
      operator delete(v26);
    }
    __int128 v28 = buf.n128_u64[1];
    uint64_t v17 = (char *)buf.n128_u64[0];
    __int128 buf = *(__n128 *)(v104 + 76);
    uint64_t v168 = *(_DWORD *)(v104 + 92);
    uint64_t v101 = v25;
    uint64_t v102 = v17;
    sub_100634334(&v164, &buf);
    char v157 = xmmword_1006BD89C;
    int v158 = 0;
    uint64_t v30 = (__n128 *)(v104 + 76);
    __int128 buf = *v30;
    uint64_t v168 = *(_DWORD *)(v104 + 92);
    sub_100634334(&v170, &buf);
    uint64_t v155 = xmmword_1006BD8B0;
    unsigned int v156 = 0;
    __int128 buf = *v30;
    uint64_t v168 = *(_DWORD *)(v104 + 92);
    sub_100634334(&v163, &buf);
    v153 = xmmword_1006BD8C4;
    uint64_t v154 = 0;
    __int128 buf = *v30;
    uint64_t v168 = *(_DWORD *)(v104 + 92);
    sub_100634334(&v152, &buf);
    uint64_t v150 = xmmword_1006BD8D8;
    uint64_t v151 = 0;
    __int128 buf = *v30;
    uint64_t v168 = *(_DWORD *)(v104 + 92);
    sub_100634334(&v149, &buf);
    uint64_t v147 = xmmword_1006BD8EC;
    uint64_t v148 = 0;
    __int128 buf = *v30;
    uint64_t v168 = *(_DWORD *)(v104 + 92);
    sub_100634334(&v146, &buf);
    int v144 = xmmword_1006BD900;
    uint64_t v145 = 0;
    __int128 buf = *v30;
    uint64_t v168 = *(_DWORD *)(v104 + 92);
    sub_100634334(&v143, &buf);
    uint64_t v141 = xmmword_1006BD914;
    char v142 = 0;
    __int128 buf = *v30;
    uint64_t v168 = *(_DWORD *)(v104 + 92);
    sub_100634334(&v140, &buf);
    uint64_t v138 = xmmword_1006BD928;
    uint64_t v139 = 0;
    __int128 buf = *v30;
    uint64_t v168 = *(_DWORD *)(v104 + 92);
    sub_100634334(&v137, &buf);
    uint64_t v135 = xmmword_1006BD93C;
    uint64_t v136 = 0;
    if (sub_1001BEC7C((unsigned __int8 *)&v137, (unsigned __int8 *)&v135)
      || (__int128 buf = *v30,
          uint64_t v168 = *(_DWORD *)(v104 + 92),
          sub_100634334(&v134, &buf),
          uint64_t v132 = xmmword_1006BD950,
          uint64_t v133 = 0,
          sub_1001BEC7C((unsigned __int8 *)&v134, (unsigned __int8 *)&v132)))
    {
LABEL_187:
      if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_ERROR))
      {
        __int128 buf = *v30;
        uint64_t v168 = *(_DWORD *)(v104 + 92);
        sub_100634334(&v164, &buf);
        sub_1006344B4(v85, &buf);
        sub_100674C48();
      }

      sub_1001C4E78(*(unsigned __int16 **)(a2 + 8));
      uint64_t v14 = 905LL;
      goto LABEL_29;
    }

    if (!sub_10056AAC8(v27 + 72))
    {
      if (*(_BYTE *)(v104 + 72) != 2)
      {
        if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_ERROR)) {
          sub_100674EB0();
        }
        sub_1001C4E78(*(unsigned __int16 **)(a2 + 8));
        uint64_t v14 = 910LL;
        goto LABEL_29;
      }

      if ((*(_BYTE *)(*(void *)(v27 + 8) + 26LL) & 0x2A) != 0)
      {
        if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_ERROR)) {
          sub_100674E84();
        }
        sub_1001C4E78(*(unsigned __int16 **)(a2 + 8));
        uint64_t v14 = 911LL;
        goto LABEL_29;
      }
    }

    if (v17 == (char *)v28)
    {
      uint64_t v41 = *(_BYTE *)(v104 + 72);
      if (v41 < 0) {
        goto LABEL_83;
      }
      if ((*(_BYTE *)(v104 + 72) & 1) == 0)
      {
        if ((*(_BYTE *)(v104 + 72) & 0x30) != 0) {
          goto LABEL_95;
        }
        goto LABEL_96;
      }

uint64_t sub_1000B7BB8(unsigned __int16 *a1, char a2)
{
  int v4 = *((_DWORD *)a1 + 1);
  if (v4 == 1)
  {
    uint64_t v5 = sub_1001759FC(*a1, 436LL);
  }

  else
  {
    if (v4)
    {
      uint64_t v6 = 101LL;
      goto LABEL_9;
    }

    uint64_t v5 = sub_1001DA5AC(*a1, 926);
  }

  uint64_t v6 = v5;
  if (!(_DWORD)v5)
  {
    if ((a2 & 1) != 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

uint64_t sub_1000B7C80(uint64_t a1, const void **a2)
{
  *(_BYTE *)(a1 + 120) = a2 != 0LL;
  int v4 = (unsigned __int16 *)(a1 + 128);
  while (1)
  {
    size_t v5 = *v4;
    if (a2) {
      break;
    }
    if (!*v4) {
      goto LABEL_11;
    }
LABEL_9:
    int v4 = (unsigned __int16 *)*((void *)v4 + 4);
    if (!v4) {
      return 1715LL;
    }
  }

  int v6 = *(unsigned __int16 *)a2;
  if (v6 == (_DWORD)v5)
  {
    goto LABEL_9;
  }

uint64_t sub_1000B7D08(unsigned __int16 *a1)
{
  int v2 = *((_DWORD *)a1 + 1);
  if (v2 == 1)
  {
    uint64_t v3 = sub_1001F6200((uint64_t)a1);
LABEL_5:
    uint64_t v4 = v3;
    if (!(_DWORD)v3) {
      return v4;
    }
    goto LABEL_8;
  }

  if (!v2)
  {
    uint64_t v3 = sub_1001D9D2C((uint64_t)sub_1000FBF20, *a1, *((void *)a1 + 5));
    goto LABEL_5;
  }

  uint64_t v4 = 101LL;
LABEL_8:
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"ServerSendPacket failed with %! for transport type %d", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = (os_log_s *)sub_100086554(0x18u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  sub_1001EF69C(*((void **)a1 + 5));
  *((void *)a1 + 5) = 0LL;
  return v4;
}

void sub_1000B7DCC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 204);
  *(_DWORD *)(a1 + 204) = 0;
  *(_BYTE *)(a1 + 193) = 0;
  *(_BYTE *)(a1 + 198) = 0;
  uint64_t v3 = *(unsigned int *)(a1 + 176);
  if ((_DWORD)v3)
  {
    sub_1001EEB14(v3);
    *(_DWORD *)(a1 + 176) = 0;
  }

  if ((v2 - 6) < 2)
  {
    uint64_t v4 = (void (**)(void, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16LL) + 16LL);
  }

  else
  {
    uint64_t v4 = (void (**)(void, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16LL) + 24LL);
  }

  (*v4)(*(unsigned __int16 *)(a1 + 208), 0LL, 1709LL);
LABEL_8:
  uint64_t v5 = *(void **)(a1 + 64);
  if (v5)
  {
    sub_1000B1838(v5);
    *(void *)(a1 + 64) = 0LL;
  }

  uint64_t v6 = *(void **)(a1 + 8);
  if (v6)
  {
    sub_1000B1838(v6);
    *(void *)(a1 + 8) = 0LL;
  }

  if (*(_BYTE *)(a1 + 201))
  {
    *(_BYTE *)(a1 + 201) = 0;
    (*(void (**)(void))(*(void *)(*(void *)(a1 + 168) + 16LL) + 8LL))(*(unsigned __int16 *)(a1 + 208));
  }

void sub_1000B7E98(uint64_t a1, void *a2, size_t a3)
{
  if (a1)
  {
    uint64_t v4 = sub_1000FB484(a1, a2, a3);
    if ((_DWORD)v4)
    {
      uint64_t v5 = v4;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_OBEXCOMMON_ReassemblePacket failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
        uint64_t v13 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
LABEL_5:
        }
          sub_100657858();
      }
    }

    else if (*(_DWORD *)(a1 + 32) == 2 && !*(void *)(a1 + 40))
    {
      sub_1000B6DFC(a1);
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OBEX received data for unknown connection", v14, v15, v16, v17, v18, v19, v20, v22);
    uint64_t v21 = (os_log_s *)sub_100086554(0x18u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      goto LABEL_5;
    }
  }

uint64_t sub_1000B7F78(uint64_t a1, char a2)
{
  v15[0] = 0LL;
  v15[1] = 0LL;
  memset(v14, 0, sizeof(v14));
  sub_1000FB450(a1, a2, (uint64_t)v15);
  uint64_t v3 = sub_1000FAD7C(a1, (uint64_t)v15, (unsigned __int8 *)v14, 0, 0LL);
  if (!(_DWORD)v3) {
    return sub_1000B7D08(a1);
  }
  uint64_t v4 = v3;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Marshalling packet failed with %!", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = (os_log_s *)sub_100086554(0x18u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return v4;
}

uint64_t sub_1000B8024(unsigned int a1, uint64_t a2, int a3)
{
  LODWORD(v3) = a3;
  if (a1 >= 0x10) {
    sub_1001EE2A0();
  }
  uint64_t v6 = qword_1008DF768[a1];
  if (!v6) {
    return 101LL;
  }
  if (*(_DWORD *)(v6 + 204) == 6)
  {
    v29[0] = 0LL;
    v29[1] = 0LL;
    if ((_DWORD)v3 == 1701)
    {
      char v7 = -112;
    }

    else
    {
      if ((_DWORD)v3)
      {
        uint64_t v8 = 0LL;
LABEL_21:
        *(_DWORD *)(v6 + 204) = 5;
        char v27 = sub_1000B8238(v3);
        sub_1000B7F78(v6, v27);
        return v8;
      }

      *(_DWORD *)(v6 + 204) = 7;
      char v7 = -96;
    }

    sub_1000FB450(v6, v7, (uint64_t)v29);
    uint64_t v9 = sub_1000FAD7C(v6, (uint64_t)v29, 0LL, 0, a2);
    if ((_DWORD)v9)
    {
      uint64_t v8 = v9;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_OBEXCOMMON_MarshalPacket failed with status %!",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v8);
        uint64_t v17 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    else
    {
      uint64_t v18 = sub_1000B7D08((unsigned __int16 *)v6);
      if (!(_DWORD)v18) {
        return 0LL;
      }
      uint64_t v3 = v18;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_OBEXSRV_GetResponse failed %!", v19, v20, v21, v22, v23, v24, v25, v3);
        uint64_t v26 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      uint64_t v8 = v3;
    }

    goto LABEL_21;
  }

  return 1711LL;
}

uint64_t sub_1000B81AC(uint64_t a1)
{
  uint64_t v2 = sub_1000FB3C0(a1);
  if (!(_DWORD)v2) {
    return sub_1000B7D08(a1);
  }
  uint64_t v3 = v2;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_OBEXCOMMON_MarshalBodySegment failed %!", v4, v5, v6, v7, v8, v9, v10, v3);
    uint64_t v11 = (os_log_s *)sub_100086554(0x18u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return v3;
}

uint64_t sub_1000B8238(int a1)
{
  switch(a1)
  {
    case 1707:
    case 1714:
    case 1718:
    case 1720:
    case 1721:
      uint64_t result = 192LL;
      break;
    case 1708:
      uint64_t result = 203LL;
      break;
    case 1709:
    case 1710:
    case 1712:
    case 1713:
    case 1716:
    case 1719:
    case 1722:
    case 1723:
    case 1725:
    case 1726:
    case 1727:
    case 1728:
    case 1729:
    case 1730:
    case 1731:
    case 1732:
    case 1733:
    case 1734:
    case 1737:
    case 1738:
    case 1739:
    case 1740:
    case 1744:
    case 1745:
    case 1748:
      goto LABEL_7;
    case 1711:
    case 1735:
      uint64_t result = 195LL;
      break;
    case 1715:
      uint64_t result = 211LL;
      break;
    case 1717:
    case 1743:
      uint64_t result = 209LL;
      break;
    case 1724:
      uint64_t result = 196LL;
      break;
    case 1736:
      uint64_t result = 198LL;
      break;
    case 1741:
      uint64_t result = 204LL;
      break;
    case 1742:
      uint64_t result = 193LL;
      break;
    case 1746:
      uint64_t result = 224LL;
      break;
    case 1747:
      uint64_t result = 225LL;
      break;
    case 1749:
      uint64_t result = 207LL;
      break;
    case 1750:
      uint64_t result = 166LL;
      break;
    case 1751:
      uint64_t result = 197LL;
      break;
    default:
      if (a1) {
LABEL_7:
      }
        uint64_t result = 208LL;
      else {
        uint64_t result = 160LL;
      }
      break;
  }

  return result;
}

uint64_t sub_1000B82E0(unsigned int a1, int a2, int a3)
{
  if (!dword_1008F6F68) {
    return 103LL;
  }
  if (a1 >= 0x10) {
    sub_1001EE2A0();
  }
  uint64_t v6 = qword_1008DF768[a1];
  if (!v6 || *(_DWORD *)(v6 + 204) != 3) {
    return 1745LL;
  }
  if ((a3 == 0) == a2) {
    return sub_1000B83C4(a1, a2, a3);
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Invalid combination of accept and status", v7, v8, v9, v10, v11, v12, v13, v16);
    uint64_t v14 = (os_log_s *)sub_100086554(0x18u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 101LL;
}

uint64_t sub_1000B83C4(unsigned int a1, int a2, int a3)
{
  if (a1 >= 0x10) {
    sub_1001EE2A0();
  }
  uint64_t v33 = 0LL;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  uint64_t v27 = 0LL;
  uint64_t v28 = 0LL;
  uint64_t v6 = qword_1008DF768[a1];
  if (a2)
  {
    if (*(_BYTE *)(v6 + 199))
    {
      *(_DWORD *)(v6 + 204) = 2;
      uint64_t v7 = sub_1001EDBA0(0x18u);
      sub_1000FAAE0(*(char **)(v7 + 16), v6, (uint64_t)&v29);
      char v8 = -63;
      unsigned int v9 = 1;
    }

    else
    {
      *(_DWORD *)(v6 + 204) = 4;
      if (*(_BYTE *)(v6 + 120))
      {
        LOBYTE(v29) = -53;
        DWORD2(v29) = v6;
        BYTE8(v30) = 74;
        uint64_t v23 = *(void *)(v6 + 168);
        LOWORD(v31) = *(_WORD *)v23;
        *((void *)&v31 + 1) = *(void *)(v23 + 8);
        unsigned int v9 = 2;
      }

      else
      {
        unsigned int v9 = 0;
      }

      if (*(_BYTE *)(v6 + 200))
      {
        sub_1000FA9F8(v6, (uint64_t)&v29 + 24 * v9);
        char v8 = -96;
        v9 |= 1u;
      }

      else
      {
        char v8 = -96;
      }
    }
  }

  else
  {
    *(_DWORD *)(v6 + 204) = 2;
    char v8 = sub_1000B8238(a3);
    unsigned int v9 = 0;
  }

  sub_1000FB450(v6, v8, (uint64_t)&v27);
  if (HIBYTE(v28))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c");
    goto LABEL_31;
  }

  uint64_t v10 = WORD2(v28);
  if (WORD1(v28) <= WORD2(v28))
  {
LABEL_31:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(pkt) >= 1";
    goto LABEL_33;
  }

  if (BYTE6(v28) != 2)
  {
    uint64_t v24 = "(pkt).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c",  534,  v24);
  }

  ++WORD2(v28);
  *(_BYTE *)(v27 + v10) = 16;
  if (HIBYTE(v28))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c");
    goto LABEL_35;
  }

  uint64_t v11 = WORD2(v28);
  if (WORD1(v28) <= WORD2(v28))
  {
LABEL_35:
    uint64_t v25 = "ByteStream_NumReadBytesAvail(pkt) >= 1";
    goto LABEL_37;
  }

  if (BYTE6(v28) != 2)
  {
    uint64_t v25 = "(pkt).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c",  535,  v25);
  }

  ++WORD2(v28);
  *(_BYTE *)(v27 + v11) = 0;
  if (HIBYTE(v28))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c");
    goto LABEL_39;
  }

  if (WORD1(v28) - WORD2(v28) <= 1)
  {
LABEL_39:
    uint64_t v26 = "ByteStream_NumReadBytesAvail(pkt) >= 2";
    goto LABEL_41;
  }

  if (BYTE6(v28) != 2)
  {
    uint64_t v26 = "(pkt).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c",  536,  v26);
  }

  *(_BYTE *)(v27 + WORD2(v28) + 1) = *(_BYTE *)(v6 + 74);
  *(_BYTE *)(v27 + WORD2(v28)) = *(_BYTE *)(v6 + 75);
  WORD2(v28) += 2;
  uint64_t v12 = sub_1000FAD7C(v6, (uint64_t)&v27, (unsigned __int8 *)&v29, v9, 0LL);
  if ((_DWORD)v12 || (uint64_t v12 = sub_1000B7D08((unsigned __int16 *)v6), (_DWORD)v12))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"acceptConnect error %!", v13, v14, v15, v16, v17, v18, v19, v12);
      uint64_t v20 = (os_log_s *)sub_100086554(0x18u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    *(_DWORD *)(v6 + 204) = 2;
    uint64_t v21 = *(void **)(v6 + 64);
    if (v21)
    {
      sub_1000B1838(v21);
      *(void *)(v6 + 64) = 0LL;
    }
  }

  return v12;
}

uint64_t sub_1000B8740(unsigned int a1, const void *a2, unsigned int a3, char *a4, char a5)
{
  if (!dword_1008F6F68) {
    return 103LL;
  }
  if (a1 >= 0x10) {
    sub_1001EE2A0();
  }
  uint64_t v10 = qword_1008DF768[a1];
  uint64_t v32 = v10;
  if (!v10 || *(_DWORD *)(v10 + 204) != 3 || !*(_BYTE *)(v10 + 199) && !*(_BYTE *)(v10 + 200)) {
    return 1745LL;
  }
  v33[0] = 0LL;
  if (a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = (char *)&unk_1006BBEED;
  }
  *(_BYTE *)(v10 + 57) = a5;
  uint64_t v12 = sub_1000FA78C(v10, a2, a3, v11);
  if (!(_DWORD)v12)
  {
    if (!*(_BYTE *)(v10 + 199)) {
      goto LABEL_26;
    }
    if (!sub_1000FABE0(v10))
    {
      *(_BYTE *)(v10 + 199) = 0;
      v33[1] = &v32;
      LOWORD(v33[0]) = 8;
      sub_1001EE6DC((uint64_t)sub_1000B8938, v33, 0LL);
      return 0LL;
    }

    if (*(unsigned __int8 *)(v10 + 193) > 2u)
    {
      uint64_t v12 = 1735LL;
    }

    else
    {
LABEL_26:
      uint64_t v12 = sub_1000B82E0(a1, 1, 0);
      if (!(_DWORD)v12) {
        return v12;
      }
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_OBEXSRV_AuthenticationRsp error %!", v13, v14, v15, v16, v17, v18, v19, v12);
    uint64_t v20 = (os_log_s *)sub_100086554(0x18u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  uint64_t v21 = sub_1000B83C4(a1, 0, v12);
  if ((_DWORD)v21)
  {
    uint64_t v22 = v21;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_OBEXSRV_AuthenticationRsp: Failure to send error response %!",  v23,  v24,  v25,  v26,  v27,  v28,  v29,  v22);
      __int128 v30 = (os_log_s *)sub_100086554(0x18u);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  *(_DWORD *)(v10 + 204) = 2;
  sub_1000FA768(v10);
  return v12;
}

uint64_t sub_1000B8938(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 8);
  if (*(_BYTE *)(v1 + 199)) {
    sub_1001EE2A0();
  }
  *(_BYTE *)(v1 + 201) = 1;
  return (**(uint64_t (***)(void, void, void, void, void))(*(void *)(v1 + 168) + 16LL))( *(unsigned __int16 *)(v1 + 208),  0LL,  0LL,  0LL,  0LL);
}

uint64_t sub_1000B898C(unsigned int a1, uint64_t a2)
{
  if (a1 >= 0x10) {
    sub_1001EE2A0();
  }
  uint64_t v4 = qword_1008DF768[a1];
  if (!v4) {
    return 1709LL;
  }
  uint64_t result = 0LL;
  int v6 = *(_DWORD *)(v4 + 104);
  *(_WORD *)(a2 + 4) = *(_WORD *)(v4 + 108);
  *(_DWORD *)a2 = v6;
  return result;
}

uint64_t sub_1000B89E4(unsigned int a1, _DWORD *a2)
{
  if (a1 >= 0x10) {
    sub_1001EE2A0();
  }
  uint64_t v4 = qword_1008DF768[a1];
  if (!v4) {
    return 1709LL;
  }
  uint64_t result = 0LL;
  *a2 = *(_DWORD *)(v4 + 4);
  return result;
}

uint64_t sub_1000B8A34(unsigned int a1)
{
  if (a1 >= 0x10) {
    sub_1001EE2A0();
  }
  uint64_t v2 = qword_1008DF768[a1];
  if (!v2) {
    return 101LL;
  }
  if (*(_DWORD *)(v2 + 204))
  {
    *(_BYTE *)(v2 + 198) = 1;
    return sub_1000B7BB8((unsigned __int16 *)v2, 1);
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Service is registered but not connected!", v4, v5, v6, v7, v8, v9, v10, v12);
      uint64_t v11 = (os_log_s *)sub_100086554(0x18u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 1709LL;
  }

void sub_1000B8AD8(char a1, char a2, char a3, int a4, int a5, char a6, char a7, char a8, char a9, char a10)
{
  if (qword_1008DF9A0 != -1) {
    dispatch_once(&qword_1008DF9A0, &stru_100882698);
  }
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 0x40000000LL;
  v18[2] = sub_1000B8BC8;
  v18[3] = &unk_100882580;
  char v21 = a1;
  char v22 = a2;
  int v19 = a4;
  int v20 = a5;
  char v23 = a6;
  char v24 = a7;
  char v25 = a8;
  char v26 = a9;
  char v27 = a10;
  char v28 = a3;
  dispatch_sync((dispatch_queue_t)qword_1008DF998, v18);
}

void sub_1000B8BC8(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1008DF7E8;
  BOOL v3 = os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT);
  uint64_t v4 = (_DWORD *)&unk_1008D7000;
  uint64_t v5 = (_DWORD *)&unk_1008D7000;
  if (v3)
  {
    uint64_t v6 = "enabled";
    if (byte_1008DF7F0) {
      uint64_t v7 = "enabled";
    }
    else {
      uint64_t v7 = "disabled";
    }
    if (*(_BYTE *)(a1 + 40)) {
      uint64_t v8 = "enabled";
    }
    else {
      uint64_t v8 = "disabled";
    }
    if (byte_1008DF7F1) {
      uint64_t v9 = "enabled";
    }
    else {
      uint64_t v9 = "disabled";
    }
    if (*(_BYTE *)(a1 + 41)) {
      uint64_t v10 = "enabled";
    }
    else {
      uint64_t v10 = "disabled";
    }
    int v11 = *(_DWORD *)(a1 + 36);
    int v12 = *(_DWORD *)(a1 + 32) / 1000000;
    if (byte_1008DF7F2) {
      uint64_t v13 = "enabled";
    }
    else {
      uint64_t v13 = "disabled";
    }
    if (*(_BYTE *)(a1 + 42)) {
      uint64_t v14 = "enabled";
    }
    else {
      uint64_t v14 = "disabled";
    }
    if (byte_1008DF7F3) {
      uint64_t v15 = "enabled";
    }
    else {
      uint64_t v15 = "disabled";
    }
    int v16 = *(unsigned __int8 *)(a1 + 45);
    if (*(_BYTE *)(a1 + 43)) {
      uint64_t v17 = "enabled";
    }
    else {
      uint64_t v17 = "disabled";
    }
    if (byte_1008DF7F4) {
      uint64_t v18 = "enabled";
    }
    else {
      uint64_t v18 = "disabled";
    }
    if (*(_BYTE *)(a1 + 44)) {
      int v19 = "enabled";
    }
    else {
      int v19 = "disabled";
    }
    int v20 = *(unsigned __int8 *)(a1 + 46);
    if (byte_1008DF7F5) {
      char v21 = "enabled";
    }
    else {
      char v21 = "disabled";
    }
    int v25 = 136319490;
    if (v16) {
      char v22 = "enabled";
    }
    else {
      char v22 = "disabled";
    }
    char v26 = v7;
    __int16 v27 = 2080;
    if (byte_1008DF7F6) {
      char v23 = "enabled";
    }
    else {
      char v23 = "disabled";
    }
    char v28 = v8;
    if (!v20) {
      uint64_t v6 = "disabled";
    }
    __int16 v29 = 2080;
    __int128 v30 = v9;
    __int16 v31 = 2080;
    uint64_t v32 = v10;
    __int16 v33 = 1024;
    int v34 = dword_1008D7150 / 1000000;
    __int16 v35 = 1024;
    int v36 = v12;
    __int16 v37 = 1024;
    int v38 = dword_1008D7154;
    __int16 v39 = 1024;
    int v40 = v11;
    __int16 v41 = 2080;
    uint64_t v42 = v13;
    __int16 v43 = 2080;
    uint64_t v44 = v14;
    __int16 v45 = 2080;
    uint64_t v46 = v15;
    __int16 v47 = 2080;
    uint64_t v48 = v17;
    __int16 v49 = 2080;
    uint64_t v50 = v18;
    __int16 v51 = 2080;
    uint64_t v52 = v19;
    __int16 v53 = 2080;
    int v54 = v21;
    __int16 v55 = 2080;
    uint64_t v56 = v22;
    __int16 v57 = 2080;
    int v58 = v23;
    __int16 v59 = 2080;
    uint64_t v60 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Change HCI config settings to rawAudio:%s->%s HID:%s->%s fileSize:%dMB->%dMB #ofTraces:%d->%d liveHCI:%s->%s fileH CI:%s->%s audioTimeSync:%s->%s gEnableENPacketLogging:%s->%s hciLiteLogging:%s->%s",  (uint8_t *)&v25,  0xA6u);
    uint64_t v5 = &unk_1008D7000;
    uint64_t v4 = &unk_1008D7000;
    uint64_t v2 = (os_log_s *)qword_1008DF7E8;
  }

  byte_1008DF7F0 = *(_BYTE *)(a1 + 40);
  byte_1008DF7F1 = *(_BYTE *)(a1 + 41);
  byte_1008DF7F7 = *(_BYTE *)(a1 + 47);
  int v24 = *(_DWORD *)(a1 + 36);
  v4[84] = *(_DWORD *)(a1 + 32);
  v5[85] = v24;
  byte_1008DF7F2 = *(_BYTE *)(a1 + 42);
  byte_1008DF7F3 = *(_BYTE *)(a1 + 43);
  byte_1008DF7F4 = *(_BYTE *)(a1 + 44);
  byte_1008DF7F5 = *(_BYTE *)(a1 + 45);
  byte_1008DF7F6 = *(_BYTE *)(a1 + 46);
  sub_10009DFD4((uint64_t)v2);
  if (!byte_1008DF7F2) {
    sub_1000B8EAC();
  }
}

void sub_1000B8EAC()
{
  if (qword_1008DF9D8 && CFSetGetCount((CFSetRef)qword_1008DF9D8) >= 1)
  {
    uint64_t v0 = (os_log_s *)qword_1008DF7E8;
    if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "Terminate Live Logging - lockdown", buf, 2u);
    }

    if (&lockdown_copy_checkin_info) {
      CFSetApplyFunction((CFSetRef)qword_1008DF9D8, (CFSetApplierFunction)&j__lockdown_disconnect, 0LL);
    }
    CFRelease((CFTypeRef)qword_1008DF9D8);
    qword_1008DF9D8 = 0LL;
    if (off_1008DF800) {
      off_1008DF800(0LL);
    }
  }

  if (qword_1008DF9E0 && CFSetGetCount((CFSetRef)qword_1008DF9E0) >= 1)
  {
    uint64_t v1 = (os_log_s *)qword_1008DF7E8;
    if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v2 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Terminate Live Logging - XPC", v2, 2u);
    }

    CFSetApplyFunction((CFSetRef)qword_1008DF9E0, (CFSetApplierFunction)j__xpc_release, 0LL);
    CFRelease((CFTypeRef)qword_1008DF9E0);
    qword_1008DF9E0 = 0LL;
    if (off_1008DF800) {
      off_1008DF800(0LL);
    }
  }

void sub_1000B8FF0(int a1)
{
  uint64_t v2 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
  {
    v3[0] = 67109376;
    v3[1] = byte_1008DF7F8;
    __int16 v4 = 1024;
    int v5 = a1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Setting skipAuth %d->%d", (uint8_t *)v3, 0xEu);
  }

  byte_1008DF7F8 = a1;
}

uint64_t sub_1000B90AC(uint64_t result)
{
  word_1008DF808 = result;
  return result;
}

uint64_t sub_1000B90B8(uint64_t a1)
{
  return 1LL;
}

uint64_t sub_1000B90D8(uint64_t a1, char a2, int a3)
{
  if (qword_1008DF9A0 != -1) {
    dispatch_once(&qword_1008DF9A0, &stru_100882698);
  }
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 0x40000000LL;
  _DWORD v8[2] = sub_1000B91E8;
  _OWORD v8[3] = &unk_1008825A0;
  char v10 = a2;
  v8[4] = a1;
  int v9 = a3;
  dispatch_sync((dispatch_queue_t)qword_1008DF998, v8);
  uint64_t v6 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Watch for calendar changes", buf, 2u);
  }

  if (qword_1008DF9A8 != -1) {
    dispatch_once(&qword_1008DF9A8, &stru_1008826D8);
  }
  return 1LL;
}

void sub_1000B91E8(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v3 = " [HCILite Logging]";
    uint64_t v4 = *(void *)(a1 + 32);
    if (!*(_BYTE *)(a1 + 44)) {
      BOOL v3 = "[Full Logging]";
    }
    *(_DWORD *)__int128 buf = 136446723;
    __int16 v31 = v3;
    __int16 v32 = 2080;
    uint64_t v33 = v4;
    __int16 v34 = 2081;
    uint64_t v35 = qword_1008DF810;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Init sniff%{public}s %s gLogPath:%{private}s",  buf,  0x20u);
    uint64_t v2 = (os_log_s *)qword_1008DF7E8;
  }

  sub_10009DFD4((uint64_t)v2);
  sub_10009E050(*(_DWORD *)(a1 + 40));
  if (!qword_1008DF810) {
    byte_1008DF7F6 = *(_BYTE *)(a1 + 44);
  }
  sysdir_search_path_enumeration_state started = sysdir_start_search_path_enumeration_private(5LL, 16LL);
  sysdir_get_next_search_path_enumeration(started, byte_1008DF818);
  __int128 v28 = 0u;
  memset(v29, 0, sizeof(v29));
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  *(_OWORD *)uint64_t v15 = 0u;
  __strlcpy_chk(v15, byte_1008DF818, 255LL, 255LL);
  __strlcat_chk(v15, "/Logs", 255LL, 255LL);
  __strlcat_chk(byte_1008DF818, "/Logs/Bluetooth", 256LL, 256LL);
  if (qword_1008DF810) {
    goto LABEL_10;
  }
  uint64_t v6 = *(const char **)(a1 + 32);
  if (v6)
  {
    qword_1008DF810 = (uint64_t)strdup(v6);
LABEL_10:
    sub_1000B9554();
    return;
  }

  if (mkdir(v15, 0x1EDu) && *__error() != 17)
  {
    if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR)) {
      sub_10065AB9C();
    }
  }

  else
  {
    if (!mkdir(byte_1008DF818, 0x1EDu) || *__error() == 17)
    {
      qword_1008DF810 = (uint64_t)calloc(0x400uLL, 1uLL);
      __strlcpy_chk(qword_1008DF810, byte_1008DF818, 1024LL, 1024LL);
      if (byte_1008DF7F6) {
        uint64_t v7 = "/bluetoothd-hcilite-latest.pklg";
      }
      else {
        uint64_t v7 = "/bluetoothd-hci-latest.pklg";
      }
      strlcat((char *)qword_1008DF810, v7, 0x400uLL);
      int v8 = byte_1008DF7F6;
      if (byte_1008DF7F6) {
        int v9 = "bluetoothd-hci-";
      }
      else {
        int v9 = "bluetoothd-hcilite-";
      }
      bzero(buf, 0x400uLL);
      chdir(byte_1008DF818);
      char v10 = opendir(byte_1008DF818);
      if (v10)
      {
        int v11 = v10;
        int v12 = readdir(v10);
        if (v12)
        {
          if (v8) {
            size_t v13 = 15LL;
          }
          else {
            size_t v13 = 19LL;
          }
          do
          {
            d_name = v12->d_name;
            if (!strncmp(v12->d_name, v9, v13))
            {
              snprintf((char *)buf, 0x400uLL, "%s/%s", byte_1008DF818, d_name);
              remove((const char *)buf);
            }

            int v12 = readdir(v11);
          }

          while (v12);
        }

        closedir(v11);
      }

      else if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR))
      {
        sub_10065AAEC();
      }

      goto LABEL_10;
    }

    if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR)) {
      sub_10065AB18();
    }
  }

void sub_1000B9554()
{
  if (&lockdown_copy_checkin_info)
  {
    if (qword_1008DF9A0 != -1) {
      dispatch_once(&qword_1008DF9A0, &stru_100882698);
    }
    int v0 = lockdown_checkin_xpc("com.apple.bluetooth.BTPacketLogger", 0LL, qword_1008DF998, &stru_100882798);
    if (v0)
    {
      int v1 = v0;
      uint64_t v2 = (os_log_s *)qword_1008DF7E8;
      if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR)) {
        sub_10065AC1C(v1, v2);
      }
    }
  }

  if (!qword_1008DF9E8)
  {
    if (qword_1008DF9A0 != -1) {
      dispatch_once(&qword_1008DF9A0, &stru_100882698);
    }
    qword_1008DF9E8 = (uint64_t)xpc_connection_create_mach_service( "com.apple.bluetooth.BTPacketLogger.ios",  (dispatch_queue_t)qword_1008DF998,  1uLL);
    xpc_connection_set_event_handler((xpc_connection_t)qword_1008DF9E8, &stru_1008827D8);
    xpc_connection_resume((xpc_connection_t)qword_1008DF9E8);
  }

uint64_t sub_1000B9654()
{
  if (qword_1008DF9A0 != -1) {
    dispatch_once(&qword_1008DF9A0, &stru_100882698);
  }
  dispatch_sync((dispatch_queue_t)qword_1008DF998, &stru_1008825E0);
  return 1LL;
}

void sub_1000B96A4(id a1)
{
  int v1 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Terminate sniff", buf, 2u);
  }

  if (dword_1008D7158 != -1)
  {
    close(dword_1008D7158);
    dword_1008D7158 = -1;
  }

  if (qword_1008DF810)
  {
    free((void *)qword_1008DF810);
    qword_1008DF810 = 0LL;
  }

  sub_1000B8EAC();
  uint64_t v2 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)BOOL v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Sniff terminated", v3, 2u);
  }

void sub_1000B9774(const char *a1)
{
  word_1008DF918 = 0;
  free((void *)qword_1008DF920);
  if (a1)
  {
    size_t v2 = strlen(a1);
    if (v2 <= 0x800)
    {
      if (v2)
      {
        int v3 = 1;
        uint64_t v4 = a1;
        do
        {
          int v5 = *(unsigned __int8 *)v4++;
          if (v5 == 10) {
            ++v3;
          }
          --v2;
        }

        while (v2);
        uint64_t v6 = (13 * v3);
      }

      else
      {
        uint64_t v6 = 13LL;
      }

      __lasts = 0LL;
      if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEBUG)) {
        sub_10065AC8C();
      }
      uint64_t v7 = strdup(a1);
      size_t v8 = strlen(a1);
      __int16 v9 = v8 + v6;
      qword_1008DF920 = (uint64_t)malloc(v8 + v6);
      if (qword_1008DF920)
      {
        char v10 = strtok_r(v7, "\n", &__lasts);
        if (v10)
        {
          int v11 = v10;
          do
          {
            unsigned __int16 v12 = strlen(v11);
            sub_1000BA500(v11, v12, 0, 0xFCu);
            unsigned __int16 v13 = strlen(v11);
            word_1008DF918 += sub_1000B9944( (_BYTE *)(qword_1008DF920 + (unsigned __int16)word_1008DF918),  (unsigned __int16)(v9 - word_1008DF918),  v11,  v13,  0xFCu);
            int v11 = strtok_r(0LL, "\n", &__lasts);
          }

          while (v11);
        }

        free(v7);
        qword_1008DF920 = (uint64_t)realloc((void *)qword_1008DF920, (unsigned __int16)word_1008DF918);
      }

      else
      {
        free(v7);
      }
    }
  }

void sub_1000B9914(const char *a1)
{
  signed int v2 = (unsigned __int16)strlen(a1);
  sub_1000BA500(a1, v2, 0, 0xFCu);
}

uint64_t sub_1000B9944(_BYTE *a1, unsigned int a2, const void *a3, signed int a4, unsigned int a5)
{
  signed int v5 = a2 - 13;
  if (a2 >= 0xD && (!byte_1008DF7F6 || a5 - 250 < 4 || a5 <= 1))
  {
    *a1 = 0;
    a1[1] = (a4 + 9) >> 16;
    a1[2] = (unsigned __int16)(a4 + 9) >> 8;
    a1[3] = a4 + 9;
    if (byte_1008DF930 == 1) {
      unint64_t v11 = qword_1008DF9D0;
    }
    else {
      unint64_t v11 = sub_1000BB560();
    }
    uint64_t v18 = 0LL;
    sub_1000B0400((uint64_t)&v18);
    int v12 = v18 + v11;
    unsigned int v13 = 1000 * (SWORD2(v18) + ((int)(v11 >> 16) >> 16));
    if (v13 > 0xF423F) {
      ++v12;
    }
    a1[4] = HIBYTE(v12);
    a1[5] = BYTE2(v12);
    a1[6] = BYTE1(v12);
    a1[7] = v12;
    if (v13 <= 0xF423F) {
      unsigned int v14 = v13;
    }
    else {
      unsigned int v14 = v13 - 1000000;
    }
    a1[8] = HIBYTE(v14);
    a1[9] = BYTE2(v14);
    a1[10] = BYTE1(v14);
    a1[11] = v14;
    a1[12] = a5;
    if (v5 < a4)
    {
      if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR)) {
        sub_10065ACF8();
      }
      return 0;
    }

    memcpy(a1 + 13, a3, a4);
    if (!byte_1008DF7F6 || a5 - 250 < 4) {
      return (unsigned __int16)(a4 + 13);
    }
    if (!a5)
    {
      int v17 = sub_10009FCB8((uint64_t)a1, a2);
      unsigned __int16 v15 = 0;
      if (!v17) {
        return v15;
      }
      return (unsigned __int16)(a4 + 13);
    }
  }

  return 0;
}

uint64_t sub_1000B9B18()
{
  uint64_t v3 = 0LL;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2000000000LL;
  char v6 = 1;
  if (qword_1008DF9A0 != -1) {
    dispatch_once(&qword_1008DF9A0, &stru_100882698);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000LL;
  block[2] = sub_1000B9BD8;
  block[3] = &unk_100882608;
  void block[4] = &v3;
  dispatch_sync((dispatch_queue_t)qword_1008DF998, block);
  uint64_t v0 = *((unsigned __int8 *)v4 + 24);
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1000B9BD8(uint64_t a1)
{
  signed int v2 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Start logging", buf, 2u);
  }

  qword_1008DF9D0 = sub_1000BB560();
  char v3 = 1;
  byte_1008DF930 = 1;
  sub_1000B9554();
  if (byte_1008DF7F3)
  {
    if (dword_1008D7158 != -1)
    {
      if (!stat((const char *)qword_1008DF810, &v6))
      {
LABEL_10:
        char v3 = 1;
        goto LABEL_14;
      }

      close(dword_1008D7158);
    }

    dword_1008D7158 = open((const char *)qword_1008DF810, 521, 420LL);
    if (dword_1008D7158 != -1)
    {
      goto LABEL_10;
    }

    uint64_t v4 = (os_log_s *)qword_1008DF7E8;
    if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR)) {
      sub_10065AD24(v4);
    }
    char v3 = 0;
  }

uint64_t sub_1000B9D24()
{
  LODWORD(result) = sub_1000B9D48();
  if (dword_1008D7158 == -1) {
    return result;
  }
  else {
    return 1LL;
  }
}

uint64_t sub_1000B9D48()
{
  if (qword_1008DF9D8 && CFSetGetCount((CFSetRef)qword_1008DF9D8) > 0) {
    return 1LL;
  }
  uint64_t result = qword_1008DF9E0;
  if (qword_1008DF9E0) {
    return CFSetGetCount((CFSetRef)qword_1008DF9E0) > 0;
  }
  return result;
}

uint64_t sub_1000B9D90(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = 0LL;
  size_t v8 = &v7;
  uint64_t v9 = 0x2000000000LL;
  char v10 = 1;
  if (qword_1008DF9A0 != -1) {
    dispatch_once(&qword_1008DF9A0, &stru_100882698);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000LL;
  block[2] = sub_1000B9E5C;
  block[3] = &unk_100882630;
  void block[5] = a1;
  void block[6] = a2;
  void block[4] = &v7;
  dispatch_sync((dispatch_queue_t)qword_1008DF998, block);
  uint64_t v4 = *((unsigned __int8 *)v8 + 24);
  _Block_object_dispose(&v7, 8);
  return v4;
}

void sub_1000B9E5C(void *a1)
{
  signed int v2 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Stop logging", buf, 2u);
  }

  __int128 v20 = 0u;
  memset(v21, 0, sizeof(v21));
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v15 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  *(_OWORD *)__int128 buf = 0u;
  __int128 v8 = 0u;
  if (dword_1008D7158 != -1)
  {
    close(dword_1008D7158);
    dword_1008D7158 = -1;
    uint64_t v6 = 0LL;
    sub_1000B0400((uint64_t)&v6);
    if (byte_1008DF7F6) {
      char v3 = "%s/bluetoothd-hcilite-%d.pklg";
    }
    else {
      char v3 = "%s/bluetoothd-hci-%d.pklg";
    }
    uint64_t v4 = (char *)a1[5];
    if (!v4) {
      uint64_t v4 = byte_1008DF818;
    }
    snprintf((char *)buf, 0xFFuLL, v3, v4, v6);
    if (rename((const char *)qword_1008DF810, (const char *)buf))
    {
      *(_BYTE *)(*(void *)(a1[4] + 8LL) + 24LL) = 0;
    }

    else
    {
      uint64_t v5 = (char *)a1[6];
      if (v5) {
        strlcpy(v5, (const char *)buf, 0xFFuLL);
      }
    }
  }

  sub_1000B8EAC();
}

uint64_t sub_1000B9FCC(uint64_t a1)
{
  uint64_t v5 = 0LL;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2000000000LL;
  char v8 = 0;
  if (qword_1008DF9A0 != -1) {
    dispatch_once(&qword_1008DF9A0, &stru_100882698);
  }
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 0x40000000LL;
  void v4[2] = sub_1000BA08C;
  void v4[3] = &unk_100882658;
  v4[4] = &v5;
  v4[5] = a1;
  dispatch_sync((dispatch_queue_t)qword_1008DF998, v4);
  uint64_t v2 = *((unsigned __int8 *)v6 + 24);
  _Block_object_dispose(&v5, 8);
  return v2;
}

uint64_t sub_1000BA08C(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Stop and rotate logging", v4, 2u);
  }

  uint64_t result = dword_1008D7158;
  if (dword_1008D7158 != -1)
  {
    close(dword_1008D7158);
    dword_1008D7158 = -1;
    uint64_t result = rename((const char *)qword_1008DF810, *(const char **)(a1 + 40));
    *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = (_DWORD)result == 0;
  }

  return result;
}

void sub_1000BA130()
{
  byte_1008DF930 = 0;
}

void sub_1000BA160(const char *a1)
{
  signed int v2 = (unsigned __int16)strlen(a1);
  sub_1000BA500(a1, v2, 0, 0xFBu);
}

void sub_1000BA190(int a1)
{
  qword_1008DF9D0 = sub_1000BB560();
  byte_1008DF930 = 1;
  if (a1) {
    signed int v2 = "AP Wake - Bluetooth";
  }
  else {
    signed int v2 = "AP Wake - Other";
  }
  if (a1) {
    signed int v3 = 19;
  }
  else {
    signed int v3 = 15;
  }
  sub_1000BA500(v2, v3, 0, 0xFBu);
}

void sub_1000BA1F0()
{
  unsigned int v0 = __chkstk_darwin();
  if (!v1) {
    return;
  }
  uint64_t v4 = v3;
  size_t v5 = v2;
  uint64_t v6 = v1;
  unsigned int v7 = v0;
  bzero(&v12, 0x20006uLL);
  if ((_DWORD)v4 != 4 || byte_1008DF7F4)
  {
    if ((_DWORD)v4 == 1 && !byte_1008DF7F5)
    {
      int v8 = sub_1000BA44C(v6, v5);
      goto LABEL_11;
    }

    __int16 v12 = v7;
    switch((_DWORD)v4)
    {
      case 0xF3:
        __int16 v13 = v5;
        uint64_t v10 = 4LL;
        if (!byte_1008DF7F0)
        {
          unsigned __int16 v9 = 4;
LABEL_31:
          unsigned int v11 = sub_1000BA668(v4, 1);
          sub_1000BA500(&v12, v9, 0, v11);
          return;
        }

        unsigned __int16 v9 = v5 + 4;
        int v8 = -1;
        goto LABEL_27;
      case 5:
        __int16 v13 = v5;
        if (!byte_1008DF7F0)
        {
          uint64_t v10 = 4LL;
          if (((v7 >> 8) & 0x40) != 0) {
            LODWORD(v5) = 8;
          }
          else {
            LODWORD(v5) = 4;
          }
          if (((v7 >> 8) & 0x40) != 0) {
            unsigned __int16 v9 = 12;
          }
          else {
            unsigned __int16 v9 = 8;
          }
          int v8 = -1;
          goto LABEL_28;
        }

        break;
      case 2:
        __int16 v13 = v5;
        if (v5 >= 4 && !byte_1008DF7F0 && word_1008DF808 && word_1008DF808 == v6[1])
        {
          int v8 = -1;
          LODWORD(v5) = 21;
          unsigned __int16 v9 = 25;
          uint64_t v10 = 4LL;
LABEL_28:
          memcpy((char *)&v12 + v10, v6, v5);
LABEL_29:
          if (v8 >= 1) {
            bzero((char *)&v12 + v10 + v8, (int)v5 - v8);
          }
          goto LABEL_31;
        }

        break;
      default:
        int v8 = -1;
        goto LABEL_12;
    }

    unsigned __int16 v9 = v5 + 4;
    int v8 = -1;
    uint64_t v10 = 4LL;
    goto LABEL_27;
  }

  if ((v5 & 0xFC) == 0 || *(unsigned __int8 *)v6 != 255 || *((unsigned __int8 *)v6 + 2) != 181)
  {
    int v8 = -1;
LABEL_11:
    __int16 v12 = v7;
LABEL_12:
    LOBYTE(v13) = v5;
    unsigned __int16 v9 = v5 + 3;
    uint64_t v10 = 3LL;
    if ((_DWORD)v4 == 3 && !byte_1008DF7F0)
    {
      LODWORD(v5) = 0;
      unsigned __int16 v9 = 3;
      goto LABEL_29;
    }

uint64_t sub_1000BA44C(const void *a1, size_t __n)
{
  __int16 v2 = __n;
  uint64_t v4 = memchr(a1, 3, __n);
  if (!v4) {
    return -1;
  }
  size_t v5 = a1;
  while ((unsigned __int16)((_WORD)a1 - (_WORD)v4 + v2) < 8u)
  {
    if (!((_WORD)a1 - (_WORD)v4 + v2))
    {
      unsigned __int16 v6 = 0;
      goto LABEL_8;
    }

void sub_1000BA500(const void *a1, signed int a2, signed int a3, unsigned int a4)
{
  if (a3) {
    signed int v7 = a3;
  }
  else {
    signed int v7 = a2;
  }
  if ((sub_1000B9D48() & 1) != 0 || dword_1008D7158 != -1)
  {
    int v8 = malloc((v7 + 13));
    if (v8)
    {
      unsigned __int16 v9 = v8;
      uint64_t v10 = malloc((a2 + 13));
      if (v10)
      {
        unsigned int v11 = v10;
        int v12 = sub_1000B9944(v10, (unsigned __int16)(a2 + 13), a1, a2, a4);
        int v13 = sub_1000B9944(v9, (unsigned __int16)(v7 + 13), a1, v7, a4);
        if (v12 | v13)
        {
          __int16 v14 = v13;
          if (qword_1008DF9A0 != -1) {
            dispatch_once(&qword_1008DF9A0, &stru_100882698);
          }
          block[0] = _NSConcreteStackBlock;
          block[1] = 0x40000000LL;
          block[2] = sub_1000BB5E8;
          block[3] = &unk_100882758;
          void block[4] = v9;
          void block[5] = v11;
          __int16 v16 = v14;
          __int16 v17 = v12;
          dispatch_async((dispatch_queue_t)qword_1008DF998, block);
        }

        else
        {
          free(v9);
          free(v11);
        }
      }

      else
      {
        free(v9);
      }
    }
  }

uint64_t sub_1000BA668(uint64_t result, int a2)
{
  if (!(_DWORD)result && (a2 & 1) != 0) {
    return 255LL;
  }
  char v2 = a2;
  if ((_DWORD)result != 1) {
    char v2 = 0;
  }
  if ((v2 & 1) != 0) {
    return 0LL;
  }
  if ((_DWORD)result == 1 && !a2) {
    return 1LL;
  }
  char v3 = a2;
  if ((_DWORD)result != 2) {
    char v3 = 0;
  }
  if ((v3 & 1) != 0) {
    return 2LL;
  }
  if ((_DWORD)result == 2 && !a2) {
    return 3LL;
  }
  char v4 = a2;
  if ((_DWORD)result != 3) {
    char v4 = 0;
  }
  if ((v4 & 1) != 0) {
    return 8LL;
  }
  if ((_DWORD)result == 3 && !a2) {
    return 9LL;
  }
  char v5 = a2;
  if ((_DWORD)result != 243) {
    char v5 = 0;
  }
  if ((v5 & 1) != 0) {
    return 24LL;
  }
  if ((_DWORD)result == 243 && !a2) {
    return 25LL;
  }
  if ((_DWORD)result == 4) {
    return 1LL;
  }
  char v6 = a2;
  if ((_DWORD)result != 5) {
    char v6 = 0;
  }
  if ((v6 & 1) != 0) {
    return 12LL;
  }
  if ((_DWORD)result == 5 && !a2) {
    return 13LL;
  }
  if ((_DWORD)result == 7) {
    return 10LL;
  }
  if ((_DWORD)result != 32)
  {
    if ((_DWORD)result == 8 && (a2 & 1) == 0) {
      return 11LL;
    }
    return 255LL;
  }

  return result;
}

void sub_1000BA78C()
{
  unsigned int v0 = (unsigned __int8 *)__chkstk_darwin();
  uint64_t v3 = v2;
  size_t v4 = v1;
  char v5 = v0;
  if ((_DWORD)v2 != 3 || byte_1008DF7F0)
  {
    if ((_DWORD)v2 == 243 && !byte_1008DF7F0)
    {
      if (v1 >= 4)
      {
        signed int v6 = 0;
        LODWORD(v4) = 4;
        goto LABEL_45;
      }

      return;
    }

    if ((_DWORD)v2 == 5 && !byte_1008DF7F0)
    {
      if (v1 < 0xD)
      {
        if (v1 >= 9)
        {
          if ((v0[1] & 0x40) != 0) {
            LODWORD(v4) = v1;
          }
          else {
            LODWORD(v4) = 8;
          }
        }
      }

      else
      {
        if ((v0[1] & 0x40) != 0)
        {
          signed int v6 = 0;
          LODWORD(v4) = 12;
          goto LABEL_45;
        }

        LODWORD(v4) = 8;
      }

      signed int v6 = 0;
LABEL_45:
      unsigned int v12 = sub_1000BA668(v3, 0);
      sub_1000BA500(v5, v4, v6, v12);
      return;
    }

    signed int v6 = 0;
    BOOL v7 = v2 == 2;
    if ((_DWORD)v2 == 2 && !byte_1008DF7F1)
    {
      if (v1 >= 0xB && sub_1000BAA64(v0, 1))
      {
        signed int v6 = 11;
        goto LABEL_36;
      }

      signed int v6 = 0;
      BOOL v7 = 1;
      if ((v4 - 8) >= 2u && (v5[8] & 0xFC) == 0xA0)
      {
        int v8 = v5[9];
        if (v8 == 17)
        {
        }

        else if (v8 == 1 && (v4 & 0xFE) == 0x12 && !v5[11])
        {
LABEL_46:
          signed int v6 = 8;
          goto LABEL_36;
        }

        signed int v6 = 0;
      }
    }

    if (!v7)
    {
LABEL_40:
      if ((_DWORD)v3 != 4) {
        goto LABEL_45;
      }
      if (byte_1008DF7F5) {
        goto LABEL_45;
      }
      int v9 = sub_1000BA44C(v5, v4);
      if (v9 < 1) {
        goto LABEL_45;
      }
      unsigned __int16 v10 = v9;
      bzero(v13, 0x20006uLL);
      __memcpy_chk(v13, v5, v10, 131078LL);
      unsigned int v11 = sub_1000BA668(4LL, 0);
      sub_1000BA500(v13, v4, 0, v11);
      return;
    }

LABEL_36:
    goto LABEL_40;
  }

  if (v1 >= 3)
  {
    signed int v6 = 0;
    LODWORD(v4) = 3;
    goto LABEL_45;
  }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Get caps received for unknown seid %d", v26, v27, v28, v29, v30, v31, v32, v23);
          uint64_t v33 = (os_log_s *)sub_100086554(3u);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        LODWORD(v6) = 18;
LABEL_34:
        sub_1000E6010(a1, 2u, a3, 0LL, 0, v6);
        return v6;
      }
    }

    *(_BYTE *)(v6 + 15) = 1;
    LODWORD(v6) = 17;
    goto LABEL_34;
  }

  if (a4 == 3)
  {
    if (*(_BYTE *)(v6 + 14) != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3655,  "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(_BYTE *)(v6 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }

    else
    {
      __int128 v18 = *(unsigned __int16 *)(v6 + 12);
      if (*(unsigned __int16 *)(v6 + 10) > v18)
      {
        __int128 v19 = *(void *)v6;
        *(_WORD *)(v6 + 12) = v18 + 1;
        __int128 v20 = *(_BYTE *)(v19 + v18);
        if (v20) {
          LOBYTE(v6) = v20;
        }
        else {
          LOBYTE(v6) = 24;
        }
        goto LABEL_26;
      }
    }

    *(_BYTE *)(v6 + 15) = 1;
    LOBYTE(v6) = 17;
LABEL_26:
    (*(void (**)(uint64_t, void, void, void, void, void))(*(void *)(qword_1008DFDB0 + 24) + 32LL))( a3,  v60,  *(unsigned __int8 *)(qword_1008DFDB0 + 99),  0LL,  0LL,  v6);
    return v6;
  }

  if (a4 != 2)
  {
LABEL_57:
    LOBYTE(v6) = 0;
    return v6;
  }

  *(void *)__int128 buf = 0LL;
  uint64_t v61 = 0;
  signed int v6 = sub_1000DDDFC((uint64_t *)v6, (void **)buf, &v61);
  __int16 v17 = v61;
  (*(void (**)(uint64_t, void, void, void, void, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 32LL))( a3,  v60,  *(unsigned __int8 *)(qword_1008DFDB0 + 99),  *(void *)buf,  v61,  v6);
  sub_1000D88A0((void **)buf, v17);
  return v6;
}

  uint64_t v56 = 0u;
  __int16 v57 = 0u;
  LOBYTE(v56) = 1;
  WORD1(v56) = 4;
  DWORD2(v56) = 1;
  LOBYTE(v57) = 1;
  WORD1(v57) = 4;
  DWORD2(v57) = v8;
  memcpy(buf, "state", sizeof(buf));
  sub_1000B142C("Magnet Operation", (const char *)buf, &v56, 2);
}

  if (!*(_BYTE *)(a1 + 446))
  {
    sub_1001EE134((uint64_t)"No action pending on upgrade", v30, v31, v32, v33, v34, v35, v36, v47);
    __int16 v37 = (os_log_s *)sub_100086554(0x56u);
    if (!os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_47;
    }
LABEL_46:
    uint64_t v46 = sub_1001EDDCC();
    *(_DWORD *)__int128 buf = 136446210;
    uint64_t v50 = v46;
    _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    goto LABEL_47;
  }

  __int16 v29 = sub_1001007C4(a1);
  if (sub_10012D514(v29))
  {
    sub_1000FFF6C(*(_BYTE *)(a1 + 447) != 0);
    *(_BYTE *)(a1 + 446) = 0;
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Invalid connection handle.", v38, v39, v40, v41, v42, v43, v44, v47);
    __int16 v45 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

    if (!sub_1001F4468(qword_1008E1EF0 + 32))
    {
      __int16 v43 = sub_1001EE6E8((uint64_t)sub_10010FC74, 0LL, 1, &dword_1008E20D0);
      if ((_DWORD)v43)
      {
        __int16 v53 = v43;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_Dispatch_RegisterFunc failed", v54, v55, v56, v57, v58, v59, v60, v62);
          uint64_t v61 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR)) {
            sub_10065A878();
          }
        }

        sub_1000AFE20(v53);
        sub_100110108();
      }

      return;
    }

    sub_1000BAAF0("Busy-failure: outgoing connection deferred too long");
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Connection attempt on %: deferred too long, giving up",  v27,  v28,  v29,  v30,  v31,  v32,  v33,  qword_1008E1EF0 + 8);
      __int16 v34 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    BOOL v7 = 118LL;
LABEL_41:
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"deferredConnectionRequestCallback: (%:)",  v35,  v36,  v37,  v38,  v39,  v40,  v41,  qword_1008E1EF0 + 8);
      uint64_t v42 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    sub_1001106E8(0LL, v7);
    return;
  }

  uint64_t v3 = v2;
  switch(*(_BYTE *)(v2 + 54))
  {
    case 0:
    case 4:
    case 5:
      sub_1001106E8(v2, 0LL);
      break;
    case 1:
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"request inconsistency - connection creation already in progress",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  v62);
        __int128 v24 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      break;
    case 2:
    case 3:
      return;
    case 6:
      goto LABEL_36;
    default:
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"deferredConnectionRequestCallback (%d)",  v9,  v10,  v11,  v12,  v13,  v14,  v15,  *(unsigned __int8 *)(v3 + 54));
        __int16 v16 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_10065BA50();
        }
      }

      sub_1001E6EB8(v3, 1361LL);
      sub_1001E1B88(v3);
      sub_10012E320((unsigned __int16 *)v3);
      sub_1001EE2A0();
      BOOL v7 = 105LL;
      goto LABEL_41;
  }

        int v8 = 4800LL;
        goto LABEL_37;
    }

  *(void *)((char *)&v28[-1]
  *(void *)&v28[0] = v24;
  if (SHIBYTE(v30) < 0) {
    operator delete(__p[1]);
  }
  std::streambuf::~streambuf((char *)v28 + 8);
  std::ios::~ios(v32);
}

  CFDictionaryRemoveValue(v5, @"MagicAccHint");
  if ((a2 & 0x100) == 0)
  {
LABEL_21:
    if ((a2 & 0x200) == 0) {
      goto LABEL_22;
    }
    goto LABEL_38;
  }

        if (++v7 == Count) {
          goto LABEL_41;
        }
      }
    }

    goto LABEL_41;
  }

  if (v4 != -25300)
  {
    if (os_log_type_enabled((os_log_t)qword_1008F75E0, OS_LOG_TYPE_ERROR)) {
      sub_100667194();
    }
LABEL_41:
    char v5 = result;
  }

  if (v5) {
    CFRelease(v5);
  }
  CFRelease(v3);
  return 0LL;
}

  __int16 v55 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedChar:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedChar:",  *(unsigned __int8 *)(a1 + 352)));
  -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v55, @"isGHSServicePresent");

  sub_1002EFD68(v2, 0x30u, v3);
}

  sub_100242FAC((uint64_t)v30);
  return v16;
}

  sub_100242FAC((uint64_t)buf);
  return v4;
}

  __int128 v20 = (os_log_s *)qword_1008F7570;
  if (os_log_type_enabled((os_log_t)qword_1008F7570, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v21 = "Enable";
    if (!*(_BYTE *)(a1 + 68)) {
      __int128 v21 = "Disable";
    }
    *(_DWORD *)__int128 buf = 136315394;
    *(void *)&uint8_t buf[4] = v21;
    *(_WORD *)&_BYTE buf[12] = 1024;
    *(_DWORD *)&buf[14] = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Audio Timesync: Enable/Disable Remote Timesync operation %s: Status %x ",  buf,  0x12u);
  }

  if (qword_1008D60B0 != -1) {
    dispatch_once(&qword_1008D60B0, &stru_1008A17B8);
  }
  sub_1001FC5E4((uint64_t)off_1008D60A8 + 80, v2);
  if (qword_1008D9278 != -1) {
    dispatch_once(&qword_1008D9278, &stru_1008A17D8);
  }
  sub_100413CBC(qword_1008D9270, a1);
  if (qword_1008D5F50 != -1) {
    dispatch_once(&qword_1008D5F50, &stru_1008A17F8);
  }
  sub_10000876C((uint64_t)off_1008D5F48 + 240, v3);
  if (qword_1008D5F20 != -1) {
    dispatch_once(&qword_1008D5F20, &stru_1008A1818);
  }
  sub_1006225C0((void *)qword_1008D5F18, v4);
  return a1;
}

  __int128 v15 = sub_1002E6BF0();
  *(_BYTE *)(a1 + 1376) = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 840LL))(v15);
  __int16 v16 = sub_1002E6BF0();
  *(_BYTE *)(a1 + 1377) = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 880LL))(v16);
  __int16 v17 = sub_1002E6BF0();
  *(_BYTE *)(a1 + 1378) = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 928LL))(v17);
  if (*(_BYTE *)(a1 + 1377))
  {
    __int16 v31 = *(unsigned __int16 *)(a1 + 1382);
    __int128 v18 = sub_1002E6E00();
    sub_10002418C(__p, "LE");
    sub_10002418C(v32, "LEInstantFactorMacAU");
    __int128 v19 = (*(uint64_t (**)(uint64_t, void **, void **, unsigned int *))(*(void *)v18 + 88LL))( v18,  __p,  v32,  &v31);
    if (v33 < 0) {
      operator delete(v32[0]);
    }
    if (v36 < 0)
    {
      operator delete(__p[0]);
      if (!v19) {
        goto LABEL_47;
      }
    }

    else if (!v19)
    {
      goto LABEL_47;
    }

    if (HIWORD(v31))
    {
      if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_ERROR)) {
        sub_1006972E8();
      }
    }

    else
    {
      *(_WORD *)(a1 + 1382) = v31;
    }
  }

  __int128 v15 = sub_1002E6E00();
  sub_10002418C(buf, "LE");
  sub_10002418C(__p, "ForceRSSIDetectionVar1");
  __int16 v16 = (*(uint64_t (**)(uint64_t, uint8_t *, void **, char *))(*(void *)v15 + 88LL))( v15,  buf,  __p,  (char *)&v60 + 4);
  if (v56 < 0) {
    operator delete(__p[0]);
  }
  if (v66 < 0)
  {
    operator delete(*(void **)buf);
    if (!v16) {
      goto LABEL_44;
    }
  }

  else if (!v16)
  {
    goto LABEL_44;
  }

  __int16 v17 = (os_log_s *)qword_1008F7620;
  if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = HIDWORD(v60);
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Using override value for  ForceRSSIDetectionVar1 (%d)",  buf,  8u);
  }

BOOL sub_1000BAA64(unsigned __int8 *a1, int a2)
{
  unint64_t v2 = 0LL;
  unsigned int v3 = *(unsigned __int16 *)(a1 + 9);
  BOOL v4 = 1;
  char v5 = &word_1008DF936;
  do
  {
    if (*((_BYTE *)v5 + 5)
      && a1[8] == *((unsigned __int8 *)v5 - 2)
      && *(v5 - 2) == (*a1 | ((a1[1] & 0xF) << 8))
      && v3 >= (unsigned __int16)*v5
      && v3 <= (unsigned __int16)v5[1]
      && *((unsigned __int8 *)v5 + 4) == a2)
    {
      break;
    }

    v5 += 5;
    BOOL v4 = v2++ < 9;
  }

  while (v2 != 10);
  return v4;
}

void sub_1000BAAF0(const char *a1)
{
  signed int v2 = (unsigned __int16)strlen(a1);
  sub_1000BA500(a1, v2, 0, 0xFAu);
}

void sub_1000BAB20( uint64_t a1, const char *a2, unsigned int a3, unsigned int a4, unsigned int a5, __int16 a6)
{
  if (!byte_1008DF7F6)
  {
    memset(v20, 0, sizeof(v20));
    __int16 v16 = 0LL;
    else {
      uint64_t v12 = *v16;
    }
    sub_1001EE0E4("Classic Device: handle 0x%x, Name %s, Addr %:, codec %d pid/vid", v12, a2, a1, a3, a5, a4);
    size_t v13 = strlen(a2);
    if (v13 >= 0x52) {
      uint64_t v14 = 82LL;
    }
    else {
      uint64_t v14 = v13;
    }
    char v17 = 0;
    __int16 v18 = v12;
    char v19 = v14;
    __memmove_chk(v20, a2, v14, 96LL);
    __int128 v15 = &v17 + v14;
    sub_1001F0050((uint64_t)(&v17 + v14 + 4), a1, 6uLL);
    *((_WORD *)v15 + 5) = a3;
    *((_WORD *)v15 + 6) = a4;
    *((_WORD *)v15 + 7) = a5;
    *((_WORD *)v15 + 8) = a6;
    sub_1000BA500(&v17, v14 + 18, 0, 0xFDu);
  }

void sub_1000BACA0(_DWORD *a1, char *__s, _OWORD *a3)
{
  if (!byte_1008DF7F6)
  {
    unsigned __int8 v6 = strlen(__s);
    memset(v13, 0, sizeof(v13));
    BOOL v7 = (unsigned __int16 *)sub_10012D98C(a1);
    if (v7) {
      uint64_t v8 = *v7;
    }
    else {
      uint64_t v8 = 0LL;
    }
    uint64_t v9 = (uint64_t)a1 + 1;
    sub_1001EE0E4("LE Device: handle 0x%x, Name %s, Addr %:, pUUID %@", v8, __s, v9, a3, 16LL);
    char v10 = 1;
    __int16 v11 = v8;
    unsigned __int8 v12 = v6;
    if (v6 > 0x4AuLL) {
      unsigned __int8 v6 = 74;
    }
    __memmove_chk(v13, __s, v6, 96LL);
    sub_1001F0050((uint64_t)(&v10 + v6 + 4), v9, 6uLL);
    *(_OWORD *)(&v10 + v6 + 10) = *a3;
    sub_1000BA500(&v10, v6 + 26, 0, 0xFDu);
  }

void sub_1000BADF8(_BYTE *a1, signed int a2)
{
  if (!byte_1008DF7F6)
  {
    char v2 = -1;
    *a1 = 2;
    sub_1000BA500(a1, a2, 0, 0xFDu);
    sub_1000BA500(&v2, 1, 0, 0xFDu);
  }

void sub_1000BAE4C(_BYTE *a1, signed int a2)
{
  if (!byte_1008DF7F6)
  {
    char v2 = -1;
    *a1 = 3;
    sub_1000BA500(a1, a2, 0, 0xFDu);
    sub_1000BA500(&v2, 1, 0, 0xFDu);
  }

void sub_1000BAEA0(_BYTE *a1, signed int a2)
{
  if (!byte_1008DF7F6)
  {
    char v2 = -1;
    *a1 = 4;
    sub_1000BA500(a1, a2, 0, 0xFDu);
    sub_1000BA500(&v2, 1, 0, 0xFDu);
  }

void *sub_1000BAEF4(void *result)
{
  off_1008F2998 = result;
  return result;
}

uint64_t sub_1000BAF00(__int16 a1, __int16 a2, __int16 a3)
{
  unsigned int v3 = &byte_1008DF93B;
  if (byte_1008DF93B)
  {
    uint64_t v4 = 0LL;
    while (v4 != 9)
    {
      int v5 = v3[10];
      v3 += 10;
      ++v4;
      if (!v5) {
        goto LABEL_7;
      }
    }

    return 0LL;
  }

  else
  {
    uint64_t v4 = 0LL;
LABEL_7:
    uint64_t v6 = 1LL;
    char *v3 = 1;
    BOOL v7 = (char *)&unk_1008DF932 + 10 * v4;
    *(_WORD *)BOOL v7 = a1;
    v7[2] = 27;
    *((_WORD *)v7 + 2) = a2;
    *((_WORD *)v7 + 3) = a3;
    char v7[8] = 1;
  }

  return v6;
}

uint64_t sub_1000BAF70(__int16 a1, __int16 a2, __int16 a3)
{
  unsigned int v3 = &byte_1008DF93B;
  if (byte_1008DF93B)
  {
    uint64_t v4 = 0LL;
    while (v4 != 9)
    {
      int v5 = v3[10];
      v3 += 10;
      ++v4;
      if (!v5) {
        goto LABEL_7;
      }
    }

    return 0LL;
  }

  else
  {
    uint64_t v4 = 0LL;
LABEL_7:
    uint64_t v6 = 1LL;
    char *v3 = 1;
    BOOL v7 = (char *)&unk_1008DF932 + 10 * v4;
    *(_WORD *)BOOL v7 = a1;
    v7[2] = 27;
    *((_WORD *)v7 + 2) = a2;
    *((_WORD *)v7 + 3) = a3;
    char v7[8] = 2;
  }

  return v6;
}

uint64_t sub_1000BAFE4(int a1)
{
  uint64_t v1 = 0LL;
  char v2 = 0;
  do
  {
    unsigned int v3 = (unsigned __int16 *)((char *)&unk_1008DF932 + v1);
    if (*((_BYTE *)&unk_1008DF932 + v1 + 9) && *v3 == a1)
    {
      v3[4] = 0;
      *(void *)unsigned int v3 = 0LL;
      char v2 = 1;
    }

    v1 += 10LL;
  }

  while (v1 != 100);
  return v2 & 1;
}

uint64_t sub_1000BB02C()
{
  dword_1008DF992 = 0;
  xmmword_1008DF972 = 0u;
  unk_1008DF982 = 0u;
  xmmword_1008DF952 = 0u;
  unk_1008DF962 = 0u;
  unk_1008DF932 = 0u;
  unk_1008DF942 = 0u;
  return 1LL;
}

void sub_1000BB050(id a1)
{
  qword_1008DF7E8 = (uint64_t)os_log_create("com.apple.bluetooth", "PacketLogger.HCI");
  uint64_t v1 = dispatch_queue_attr_make_with_qos_class(0LL, QOS_CLASS_UTILITY, 0);
  qword_1008DF998 = (uint64_t)dispatch_queue_create("HCI Tracing", v1);
}

void sub_1000BB0A4(id a1)
{
  kern_return_t v2;
  kern_return_t v3;
  uint64_t v4;
  const char *v5;
  os_log_s *v6;
  uint32_t v7;
  uint64_t v8;
  uintptr_t v9;
  uintptr_t v10;
  void v11[4];
  mach_port_name_t v12;
  host_t v13;
  mach_port_name_t name;
  uint8_t buf[4];
  kern_return_t v16;
  name = 0;
  if (qword_1008DF9C0 != -1) {
    dispatch_once(&qword_1008DF9C0, &stru_100882738);
  }
  host_t v1 = dword_1008DF9B8;
  if (!dword_1008DF9B8)
  {
    uint64_t v8 = qword_1008DF7E8;
    if (!os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_WORD *)__int128 buf = 0;
    int v5 = "Failed to get host port for calendar changes";
    uint64_t v6 = (os_log_s *)v8;
    BOOL v7 = 2;
    goto LABEL_9;
  }

  char v2 = mach_port_allocate(mach_task_self_, 1u, &name);
  if (v2)
  {
    unsigned int v3 = v2;
    uint64_t v4 = qword_1008DF7E8;
    if (!os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)__int128 buf = 67109120;
    __int16 v16 = v3;
    int v5 = "Failed to allocate mach port for calendar changes: error %d";
    uint64_t v6 = (os_log_s *)v4;
    BOOL v7 = 8;
LABEL_9:
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v5, buf, v7);
    return;
  }

  uint64_t v9 = name;
  if (qword_1008DF9A0 != -1)
  {
    char v10 = name;
    dispatch_once(&qword_1008DF9A0, &stru_100882698);
    uint64_t v9 = v10;
  }

  qword_1008DF9B0 = (uint64_t)dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_mach_recv,  v9,  0LL,  (dispatch_queue_t)qword_1008DF998);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 0x40000000LL;
  v11[2] = sub_1000BB280;
  _OWORD v11[3] = &unk_1008826F8;
  unsigned __int8 v12 = name;
  size_t v13 = v1;
  dispatch_source_set_event_handler((dispatch_source_t)qword_1008DF9B0, v11);
  dispatch_activate((dispatch_object_t)qword_1008DF9B0);
  sub_1000BB374(v1, name);
}

void sub_1000BB280(uint64_t a1)
{
  mach_msg_return_t v3;
  os_log_s *v4;
  _BYTE v5[32];
  uint8_t buf[4];
  mach_msg_return_t v7;
  memset(v5, 0, sizeof(v5));
  int v2 = *(_DWORD *)(a1 + 32);
  *(_DWORD *)&v5[4] = 24;
  *(_DWORD *)&v5[12] = v2;
  unsigned int v3 = mach_msg_receive((mach_msg_header_t *)v5);
  uint64_t v4 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67109120;
    BOOL v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "resetTimeReference, %X", buf, 8u);
  }

  qword_1008DF9D0 = sub_1000BB560();
  byte_1008DF930 = 1;
  sub_1000BB374(*(_DWORD *)(a1 + 36), *(_DWORD *)(a1 + 32));
  if (!v3) {
    mach_msg_destroy((mach_msg_header_t *)v5);
  }
}

void sub_1000BB374(host_t a1, mach_port_t notify_port)
{
  kern_return_t v4;
  os_log_s *v5;
  _DWORD v6[2];
  uint64_t v4 = host_request_notification(a1, (byte_1008DF9C8 & 1) == 0, notify_port);
  if (v4 == 4 && (byte_1008DF9C8 & 1) == 0)
  {
    byte_1008DF9C8 = 1;
    uint64_t v4 = host_request_notification(a1, 0, notify_port);
  }

  if (v4)
  {
    int v5 = (os_log_s *)qword_1008DF7E8;
    if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
    {
      v6[0] = 67109120;
      v6[1] = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Failed to register for calendar changes: error %d",  (uint8_t *)v6,  8u);
    }
  }

void sub_1000BB468(id a1)
{
  kern_return_t special_port;
  kern_return_t v3;
  os_log_s *v4;
  mach_port_t port;
  uint8_t buf[4];
  kern_return_t v7;
  mach_port_t v1 = mach_host_self();
  port = 0;
  special_port = host_get_special_port(v1, -1, 1, &port);
  unsigned int v3 = special_port;
  if (special_port != 4)
  {
    if (special_port)
    {
      if (dword_1008DF9B8) {
        return;
      }
      goto LABEL_7;
    }

    mach_port_deallocate(mach_task_self_, v1);
    mach_port_t v1 = port;
  }

  dword_1008DF9B8 = v1;
  if (v1) {
    return;
  }
LABEL_7:
  uint64_t v4 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67109120;
    BOOL v7 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Failed to get mach host port: error %d",  buf,  8u);
  }

unint64_t sub_1000BB560()
{
  int v4 = 0;
  __darwin_suseconds_t v3 = 0;
  uint64_t v2 = 0LL;
  sub_1000B0740(&v4, &v3);
  sub_1000B0400((uint64_t)&v2);
  int v0 = v3 / 1000;
  return (v4 - (_DWORD)v2 - ((__int16)(v3 / 1000) < SWORD2(v2))) | ((unint64_t)(unsigned __int16)(v0 - WORD2(v2)) << 32);
}

void sub_1000BB5E8(uint64_t a1)
{
  int v2 = dword_1008D7158;
  if (dword_1008D7158 == -1) {
    goto LABEL_42;
  }
  if (qword_1008DF928 <= (unint64_t)dword_1008D7150)
  {
LABEL_41:
    write(v2, *(const void **)(a1 + 32), *(unsigned __int16 *)(a1 + 48));
    qword_1008DF928 += *(unsigned __int16 *)(a1 + 48);
LABEL_42:
    sub_1000BBA3C(*(void *)(a1 + 40), *(_WORD *)(a1 + 50));
    goto LABEL_43;
  }

  __darwin_suseconds_t v3 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Rotate log file", buf, 2u);
    int v2 = dword_1008D7158;
  }

  bzero(buf, 0x400uLL);
  close(v2);
  int v4 = CFDateFormatterCreate(kCFAllocatorDefault, 0LL, kCFDateFormatterShortStyle, kCFDateFormatterFullStyle);
  CFDateFormatterSetFormat(v4, @"yyyy-MM-dd_HH-mm-ss");
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t v6 = CFDateCreate(kCFAllocatorDefault, Current);
  CFStringRef StringWithDate = CFDateFormatterCreateStringWithDate(kCFAllocatorDefault, v4, v6);
  CFRelease(v6);
  CFRelease(v4);
  if (byte_1008DF7F6) {
    uint64_t v8 = CFStringCreateWithFormat( kCFAllocatorDefault,  0LL,  @"%s/bluetoothd-hcilite-%@.pklg",  byte_1008DF818,  StringWithDate);
  }
  else {
    uint64_t v8 = CFStringCreateWithFormat( kCFAllocatorDefault,  0LL,  @"%s/bluetoothd-hci-%@.pklg",  byte_1008DF818,  StringWithDate);
  }
  uint64_t v9 = v8;
  CFStringGetCString(v8, (char *)buf, 1024LL, 0x8000100u);
  if (rename((const char *)qword_1008DF810, (const char *)buf))
  {
    char v10 = (os_log_s *)qword_1008DF7E8;
    if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR)) {
      sub_10065AE48((uint64_t)buf, v10);
    }
  }

  CFRelease(v9);
  CFRelease(StringWithDate);
  memset(&v23, 0, sizeof(v23));
  chdir(byte_1008DF818);
  __int16 v11 = opendir(byte_1008DF818);
  if (v11)
  {
    unsigned __int8 v12 = v11;
    memset(v24, 0, 255);
    size_t v13 = readdir(v11);
    if (v13)
    {
      __darwin_time_t tv_sec = 0LL;
      __darwin_ino64_t st_ino = 0LL;
      int v16 = 0;
      while (1)
      {
        d_name = v13->d_name;
        if (stat(v13->d_name, &v23) < 0)
        {
          __int16 v18 = (os_log_s *)qword_1008DF7E8;
          if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR)) {
            sub_10065AE0C(&v21, v22, v18);
          }
          goto LABEL_24;
        }

        if (!strncmp(d_name, "bluetoothd-hci", 0xEuLL)) {
          break;
        }
LABEL_24:
        size_t v13 = readdir(v12);
        if (!v13) {
          goto LABEL_29;
        }
      }

      if (st_ino)
      {
        if (tv_sec <= v23.st_birthtimespec.tv_sec)
        {
LABEL_23:
          ++v16;
          goto LABEL_24;
        }

        __darwin_ino64_t st_ino = v23.st_ino;
        __darwin_time_t tv_sec = v23.st_birthtimespec.tv_sec;
      }

      else
      {
        __darwin_ino64_t st_ino = v23.st_ino;
        __darwin_time_t tv_sec = v23.st_birthtimespec.tv_sec;
      }

      __strlcpy_chk(v24, d_name, 255LL, 255LL);
      goto LABEL_23;
    }

    int v16 = 0;
LABEL_29:
    if (v16 > dword_1008D7154 && dword_1008D7154)
    {
      snprintf((char *)buf, 0x400uLL, "%s/%s", byte_1008DF818, (const char *)v24);
      remove((const char *)buf);
    }

    closedir(v12);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR))
  {
    sub_10065AAEC();
  }

  int v19 = open((const char *)qword_1008DF810, 521, 420LL);
  dword_1008D7158 = v19;
  if (v19 != -1)
  {
    qword_1008DF928 = 0LL;
    if (off_1008F2998)
    {
      off_1008F2998();
      int v2 = dword_1008D7158;
    }

    else
    {
      int v2 = v19;
    }

    if (word_1008DF918)
    {
      write(v2, (const void *)qword_1008DF920, (unsigned __int16)word_1008DF918);
      qword_1008DF928 += (unsigned __int16)word_1008DF918;
      int v2 = dword_1008D7158;
    }

    goto LABEL_41;
  }

  __int128 v20 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR)) {
    sub_10065AD98(v20);
  }
LABEL_43:
  free(*(void **)(a1 + 32));
  free(*(void **)(a1 + 40));
}

void sub_1000BBA3C(uint64_t a1, unsigned __int16 a2)
{
  if (qword_1008DF9D8)
  {
    if (CFSetGetCount((CFSetRef)qword_1008DF9D8) >= 1 && &lockdown_copy_checkin_info != 0LL)
    {
      uint64_t v5 = a1;
      uint64_t v6 = a2;
      CFSetApplyFunction((CFSetRef)qword_1008DF9D8, (CFSetApplierFunction)sub_1000BBAEC, &v5);
      if (BYTE2(v6)) {
        sub_1000B8EAC();
      }
    }
  }

  if (qword_1008DF9E0)
  {
    if (CFSetGetCount((CFSetRef)qword_1008DF9E0) >= 1)
    {
      uint64_t v5 = a1;
      uint64_t v6 = a2;
      CFSetApplyFunction((CFSetRef)qword_1008DF9E0, (CFSetApplierFunction)sub_1000BBB38, &v5);
    }
  }

uint64_t sub_1000BBAEC(uint64_t a1, uint64_t a2)
{
  uint64_t result = lockdown_send(a1, *(void *)a2, *(unsigned __int16 *)(a2 + 8));
  if (result == -1) {
    *(_BYTE *)(a2 + 10) = 1;
  }
  return result;
}

void sub_1000BBB38(_xpc_connection_s *a1, uint64_t a2)
{
  xpc_object_t v4 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_data(v4, "packet", *(const void **)a2, *(unsigned __int16 *)(a2 + 8));
  xpc_connection_send_message(a1, v4);
  xpc_release(v4);
}

void sub_1000BBB98(id a1, _lockdown_connection *a2, __CFDictionary *a3)
{
}

void sub_1000BBBA4(void *a1, char a2)
{
  xpc_object_t v4 = (os_log_s *)qword_1008DF7E8;
  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Starting Live Logging", buf, 2u);
  }

  if (byte_1008DF7F2)
  {
    if ((a2 & 1) != 0)
    {
      Mutable = (const __CFSet *)qword_1008DF9E0;
      if (!qword_1008DF9E0)
      {
        Mutable = CFSetCreateMutable(0LL, 0LL, 0LL);
        qword_1008DF9E0 = (uint64_t)Mutable;
      }

      CFIndex Count = CFSetGetCount(Mutable);
      CFSetSetValue((CFMutableSetRef)qword_1008DF9E0, a1);
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 0x40000000LL;
      handler[2] = sub_1000BBF14;
      handler[3] = &unk_1008827F8;
      handler[4] = a1;
      xpc_connection_set_event_handler((xpc_connection_t)a1, handler);
      if (qword_1008DF9A0 != -1) {
        dispatch_once(&qword_1008DF9A0, &stru_100882698);
      }
      xpc_connection_set_target_queue((xpc_connection_t)a1, (dispatch_queue_t)qword_1008DF998);
      xpc_connection_resume((xpc_connection_t)a1);
      if (Count) {
        goto LABEL_20;
      }
    }

    else
    {
      __int16 v11 = (const __CFSet *)qword_1008DF9D8;
      if (!qword_1008DF9D8)
      {
        __int16 v11 = CFSetCreateMutable(0LL, 0LL, 0LL);
        qword_1008DF9D8 = (uint64_t)v11;
      }

      CFIndex v12 = CFSetGetCount(v11);
      CFSetSetValue((CFMutableSetRef)qword_1008DF9D8, a1);
      if (v12) {
        goto LABEL_20;
      }
    }

    if (off_1008DF800) {
      uint64_t v7 = off_1008DF800(1LL);
    }
LABEL_20:
    if (off_1008F2998) {
      off_1008F2998(v7);
    }
    if (word_1008DF918) {
      sub_1000BBA3C(qword_1008DF920, word_1008DF918);
    }
    return;
  }

  if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR)) {
    sub_10065AEFC();
  }
  uint64_t v8 = malloc(0x27uLL);
  if (v8)
  {
    uint64_t v9 = v8;
    unsigned __int16 v10 = sub_1000B9944(v8, 0x27u, "Bluetooth Profile Required", 26, 0xFCu);
    sub_1000BBA3C((uint64_t)v9, v10);
    free(v9);
  }

void sub_1000BBDA8(id a1, void *a2)
{
  xpc_type_t type = xpc_get_type(a2);
  if (type == (xpc_type_t)&_xpc_type_connection)
  {
    if (byte_1008DF7F8)
    {
      xpc_object_t v4 = (os_log_s *)qword_1008DF7E8;
      if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        uint64_t v5 = buf;
LABEL_9:
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "PacketLogger skipping authentication",  v5,  2u);
      }
    }

    else
    {
      *(_OWORD *)__int128 buf = 0u;
      __int128 v11 = 0u;
      xpc_connection_get_audit_token(a2, buf);
      uint64_t v6 = (void *)xpc_copy_entitlement_for_token(0LL, buf);
      if (!v6) {
        return;
      }
      uint64_t v7 = v6;
      BOOL v8 = xpc_dictionary_get_BOOL(v6, "com.apple.bluetooth.internal");
      xpc_release(v7);
      if (!v8) {
        return;
      }
      xpc_object_t v4 = (os_log_s *)qword_1008DF7E8;
      if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v9 = 0;
        uint64_t v5 = (uint8_t *)&v9;
        goto LABEL_9;
      }
    }

    sub_1000BBBA4(a2, 1);
    return;
  }

  if (type == (xpc_type_t)&_xpc_type_error)
  {
    xpc_dictionary_get_string(a2, _xpc_error_key_description);
    if (os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR)) {
      sub_10065AF28();
    }
    sub_1000B8EAC();
  }

void sub_1000BBF14(uint64_t a1, xpc_object_t object)
{
  xpc_type_t type = xpc_get_type(object);
  if (type == (xpc_type_t)&_xpc_type_error)
  {
    if (qword_1008DF9E0) {
      CFSetRemoveValue((CFMutableSetRef)qword_1008DF9E0, *(const void **)(a1 + 32));
    }
    xpc_dictionary_get_string(object, _xpc_error_key_description);
    if (object != &_xpc_error_connection_invalid && os_log_type_enabled((os_log_t)qword_1008DF7E8, OS_LOG_TYPE_ERROR)) {
      sub_10065AF8C();
    }
  }

  else if (type == (xpc_type_t)&_xpc_type_dictionary && xpc_dictionary_expects_reply(object))
  {
    xpc_object_t reply = xpc_dictionary_create_reply(object);
    if (reply)
    {
      uint64_t v6 = reply;
      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
      xpc_release(v6);
    }
  }

void sub_1000BC000(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

char *sub_1000BC00C(int *a1)
{
  return strerror(*a1);
}

void sub_1000BC014( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

int *sub_1000BC028()
{
  return __error();
}

uint64_t sub_1000BC030(pthread_mutex_t *a1)
{
  v3.__sig = 0LL;
  *(void *)v3.__opaque = 0LL;
  if (pthread_mutexattr_init(&v3))
  {
    fprintf(__stderrp, "(0x%p) Failed to init mutex attr - %d!");
  }

  else if (pthread_mutexattr_settype(&v3, 2))
  {
    fprintf(__stderrp, "(0x%p) Failed to set mutex attr type - %d!");
  }

  else
  {
    if (!pthread_mutex_init(a1, &v3)) {
      return 1LL;
    }
    fprintf(__stderrp, "(0x%p) Failed to init mutex - %d!");
  }

  return 0LL;
}

BOOL sub_1000BC11C(pthread_mutex_t *a1)
{
  int v2 = pthread_mutex_destroy(a1);
  if (v2) {
    fprintf(__stderrp, "(%p) Failed to destroy mutex - %d!", a1, v2);
  }
  return v2 == 0;
}

BOOL sub_1000BC170(pthread_t *a1, void *(__cdecl *a2)(void *), void *a3)
{
  return pthread_create(a1, &v7, a2, a3) == 0;
}

BOOL sub_1000BC20C(_opaque_pthread_t *a1, int a2)
{
  v3.sched_priority = a2;
  *(_DWORD *)v3.__opaque = 0;
  return pthread_setschedparam(a1, 2, &v3) == 0;
}

BOOL sub_1000BC23C(_opaque_pthread_t *a1, integer_t a2, integer_t a3, int a4, int a5)
{
  thread_inspect_t v9 = pthread_mach_thread_np(a1);
  BOOLean_t get_default = 1;
  mach_msg_type_number_t policy_infoCnt = 4;
  *(void *)policy_mach_timebase_info info = 0LL;
  uint64_t v12 = 0LL;
  if (thread_policy_get(v9, 2u, policy_info, &policy_infoCnt, &get_default)) {
    return 0LL;
  }
  if (a2)
  {
    policy_info[0] = a2;
    policy_info[1] = a3;
    LODWORD(v1pthread_attr_setdetachstate(&v7, 2) = a4;
  }

  HIDWORD(v1pthread_attr_setdetachstate(&v7, 2) = a5;
  return thread_policy_set(v9, 2u, policy_info, 4u) == 0;
}

BOOL sub_1000BC2E0(const char *a1)
{
  return pthread_setname_np(a1) == 0;
}

BOOL sub_1000BC2FC(pthread_cond_t *a1)
{
  return pthread_cond_init(a1, 0LL) == 0;
}

BOOL sub_1000BC320(pthread_cond_t *a1)
{
  return pthread_cond_destroy(a1) == 0;
}

uint64_t sub_1000BC33C(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(65437, v10, BYTE4(v11), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
        }

        thread_inspect_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2293, v9);
      }
    }

    thread_inspect_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

void sub_1000BC408(uint64_t a1, void (*a2)(uint64_t))
{
  if ((_DWORD)a1
    && sub_1000A86F0()
    && (sub_1001EE134((uint64_t)"status %d, hlCb 0x%x", v4, v5, v6, v7, v8, v9, v10, a1),
        uint64_t v11 = (os_log_s *)sub_100086554(0x54u),
        os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)))
  {
    sub_100657F74();
    if (!a2) {
      return;
    }
  }

  else if (!a2)
  {
    return;
  }

  a2(a1);
}

void sub_1000BC490(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 0LL;
    if (a2) {
      goto LABEL_6;
    }
    return;
  }

  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_14;
  }

  uint64_t v14 = *(unsigned __int16 *)(a3 + 12);
  if (*(unsigned __int16 *)(a3 + 10) - (int)v14 <= 3)
  {
LABEL_14:
    __int128 v15 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    goto LABEL_16;
  }

  if (*(_BYTE *)(a3 + 14) != 1)
  {
    __int128 v15 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_16:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2815, v15);
  }

  uint64_t v13 = *(unsigned int *)(*(void *)a3 + v14);
  *(_WORD *)(a3 + 1pthread_attr_setdetachstate(&v7, 2) = v14 + 4;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13);
}

void sub_1000BC59C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      int v15 = *((unsigned __int16 *)a3 + 5);
      uint64_t v16 = *((unsigned __int16 *)a3 + 6);
      if (v15 - (int)v16 > 1)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v17 = *a3;
          __int16 v18 = (unsigned __int8 *)(*a3 + v16);
          int v19 = *v18;
          int v20 = v18[1];
          *((_WORD *)a3 + 6) = v16 + 2;
          if (v15 - (unsigned __int16)(v16 + 2) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2846,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v13 = v19 | (v20 << 8);
          uint64_t v14 = *(unsigned int *)(v17 + (unsigned __int16)(v16 + 2));
          *((_WORD *)a3 + 6) = v16 + 6;
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        uint8_t v21 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_17:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2845, v21);
      }
    }

    uint8_t v21 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_17;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14);
}

uint64_t sub_1000BC6F0(unint64_t a1, uint64_t a2)
{
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t result = sub_10018BCDC(&v15);
  if (!(_DWORD)result)
  {
    uint64_t v5 = sub_1001BCDB0(a1);
    int v12 = v5;
    char v14 = BYTE6(v5);
    __int16 v13 = WORD2(v5);
    if (HIBYTE(v16))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v6 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16))
      {
        if (BYTE6(v16) == 2)
        {
          ++WORD2(v16);
          *(_BYTE *)(v15 + v6) = v5;
          if (HIBYTE(v16))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v16) - WORD2(v16) > 5)
          {
            if (BYTE6(v16) == 2)
            {
              sub_1001F0050(v15 + WORD2(v16), (uint64_t)&v12 + 1, 6uLL);
              WORD2(v16) += 6;
              return sub_10018BD78(65485, v15, BYTE4(v16), a2, (uint64_t)sub_1000BC408, v7, v8, v9);
            }

            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4380,  v11);
          }

          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_17;
        }

        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4379, v10);
      }
    }

    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000BC868(unint64_t a1, uint64_t a2)
{
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t result = sub_10018BCDC(&v15);
  if (!(_DWORD)result)
  {
    uint64_t v5 = sub_1001BCDB0(a1);
    int v12 = v5;
    char v14 = BYTE6(v5);
    __int16 v13 = WORD2(v5);
    if (HIBYTE(v16))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v6 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16))
      {
        if (BYTE6(v16) == 2)
        {
          ++WORD2(v16);
          *(_BYTE *)(v15 + v6) = v5;
          if (HIBYTE(v16))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v16) - WORD2(v16) > 5)
          {
            if (BYTE6(v16) == 2)
            {
              sub_1001F0050(v15 + WORD2(v16), (uint64_t)&v12 + 1, 6uLL);
              WORD2(v16) += 6;
              return sub_10018BD78(65486, v15, BYTE4(v16), a2, (uint64_t)sub_1000BC408, v7, v8, v9);
            }

            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4395,  v11);
          }

          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_17;
        }

        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4394, v10);
      }
    }

    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000BC9E0(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = sub_10018BCDC(&v6);
  if (!(_DWORD)result) {
    return sub_10018BD78(65484, v6, BYTE4(v7), a1, (uint64_t)sub_1000BC408, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1000BCA30(char a1, char a2, char a3, char a4, char a5, uint64_t a6)
{
  uint64_t v26 = 0LL;
  uint64_t v27 = 0LL;
  uint64_t result = sub_10018BCDC(&v26);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v27))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v16 = WORD2(v27);
      if (WORD1(v27) > WORD2(v27))
      {
        if (BYTE6(v27) == 2)
        {
          ++WORD2(v27);
          *(_BYTE *)(v26 + v16) = a1;
          if (HIBYTE(v27))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v17 = WORD2(v27);
            if (WORD1(v27) > WORD2(v27))
            {
              if (BYTE6(v27) == 2)
              {
                ++WORD2(v27);
                *(_BYTE *)(v26 + v17) = a2;
                if (HIBYTE(v27))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else
                {
                  uint64_t v18 = WORD2(v27);
                  if (WORD1(v27) > WORD2(v27))
                  {
                    if (BYTE6(v27) == 2)
                    {
                      ++WORD2(v27);
                      *(_BYTE *)(v26 + v18) = a3;
                      if (HIBYTE(v27))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }

                      else
                      {
                        uint64_t v19 = WORD2(v27);
                        if (WORD1(v27) > WORD2(v27))
                        {
                          if (BYTE6(v27) == 2)
                          {
                            ++WORD2(v27);
                            *(_BYTE *)(v26 + v19) = a4;
                            if (HIBYTE(v27))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }

                            else
                            {
                              uint64_t v20 = WORD2(v27);
                              if (WORD1(v27) > WORD2(v27))
                              {
                                if (BYTE6(v27) == 2)
                                {
                                  ++WORD2(v27);
                                  *(_BYTE *)(v26 + v20) = a5;
                                  return sub_10018BD78( 64978,  v26,  BYTE4(v27),  a6,  (uint64_t)sub_1000BC408,  v13,  v14,  v15);
                                }

                                __int128 v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4424,  v25);
                              }
                            }

                            __int128 v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_38;
                          }

                          __int128 v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4423,  v24);
                        }
                      }

                      __int128 v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_34;
                    }

                    stat v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4422,  v23);
                  }
                }

                stat v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_30;
              }

              __int128 v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4421,  v22);
            }
          }

          __int128 v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_26;
        }

        uint8_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4420, v21);
      }
    }

    uint8_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_22;
  }

  return result;
}

uint64_t sub_1000BCCFC(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(64810, v10, BYTE4(v11), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4437, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000BCDC8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v9 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(_BYTE *)(v11 + v9) = a1;
          return sub_10018BD78(64810, v11, BYTE4(v12), a3, (uint64_t)sub_1000BCE94, v6, v7, v8);
        }

        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4450, v10);
      }
    }

    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

void sub_1000BCE94(uint64_t a1, void (*a2)(uint64_t, uint64_t, void), uint64_t a3)
{
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_4;
  }

  if (*(unsigned __int16 *)(a3 + 10) - *(unsigned __int16 *)(a3 + 12) <= 1)
  {
LABEL_4:
    if (sub_1000A86F0())
    {
      if (*(_BYTE *)(a3 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        uint64_t v11 = 0LL;
      }

      else
      {
        uint64_t v11 = *(unsigned __int16 *)(a3 + 10) - *(unsigned __int16 *)(a3 + 12);
      }

      sub_1001EE134((uint64_t)"Invalid data size %d", v4, v5, v6, v7, v8, v9, v10, v11);
      uint8_t v21 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  if (*(_BYTE *)(a3 + 15)) {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
  }
  sub_1001EE134((uint64_t)"hlCb 0x%x, data %@", v14, v15, v16, v17, v18, v19, v20, (uint64_t)a2);
  __int128 v22 = (os_log_s *)sub_100086554(0x54u);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
  {
    sub_100657F74();
    if (!a2) {
      return;
    }
  }

  else
  {
LABEL_15:
    if (!a2) {
      return;
    }
  }

  uint64_t v23 = *(unsigned __int16 *)(a3 + 12);
  uint64_t v24 = *(void *)a3 + v23;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    unsigned __int8 v25 = 0;
  }

  else
  {
    unsigned __int8 v25 = *(_BYTE *)(a3 + 10) - v23;
  }

  a2(a1, v24, v25);
}

void (**sub_1000BD054( void (**result)(uint64_t *a1, uint64_t a2), const void *a2))(uint64_t *a1, uint64_t a2)
{
  *uint64_t result = sub_1000BD15C;
  if (a2) {
    return (void (**)(uint64_t *, uint64_t))memcpy(&off_1008DF9F0, a2, 0x1C8uLL);
  }
  return result;
}

void *sub_1000BD078(void *a1)
{
  return sub_100132474(sub_1000BD0A0);
}

BOOL sub_1000BD0A0(uint64_t a1, __int16 a2)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!, opcode 0x%x, subOpcode %x, myopcode %x", v4, v5, v6, v7, v8, v9, v10, a1);
      uint64_t v11 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  return !(_DWORD)a1 && (a2 & 0x3FF) == 552;
}

void *sub_1000BD140(void *__src)
{
  if (__src) {
    return memcpy(&unk_1008DFBB8, __src, 0x1C8uLL);
  }
  return __src;
}

void sub_1000BD15C(uint64_t *a1, uint64_t a2)
{
  if (*((_BYTE *)a1 + 14) != 1)
  {
    uint64_t v182 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_336;
  }

  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_335;
  }

  uint64_t v4 = (unsigned __int16 *)a1 + 6;
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  uint64_t v5 = *((unsigned __int16 *)a1 + 5);
  if ((int)v5 - (int)v3 <= 1)
  {
LABEL_335:
    uint64_t v182 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_336:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 243, v182);
  }

  uint64_t v6 = *a1;
  uint64_t v7 = *(unsigned __int16 *)(*a1 + v3);
  unsigned __int16 v8 = v3 + 2;
  *((_WORD *)a1 + 6) = v3 + 2;
  if ((int)v7 > 65280)
  {
    if ((int)v7 <= 65421)
    {
      switch((int)v7)
      {
        case 65281:
        case 65288:
          goto LABEL_331;
        case 65286:
          uint64_t v9 = (void (*)(__int128 *))qword_1008DFAE0;
          if (!qword_1008DFAE0) {
            goto LABEL_331;
          }
          uint64_t v10 = (__int128 *)(v6 + v8);
          unsigned __int16 *v4 = v3 + 182;
          if ((_DWORD)v5 != (unsigned __int16)(v3 + 182))
          {
            sub_1001EE2A0();
            uint64_t v9 = (void (*)(__int128 *))qword_1008DFAE0;
          }

          goto LABEL_156;
        case 65287:
          uint64_t v9 = (void (*)(__int128 *))qword_1008DFAE8;
          if (!qword_1008DFAE8) {
            goto LABEL_331;
          }
          uint64_t v10 = (__int128 *)(v6 + v8);
          unsigned __int16 *v4 = v3 + 112;
          if ((_DWORD)v5 != (unsigned __int16)(v3 + 112))
          {
            sub_1001EE2A0();
            uint64_t v9 = (void (*)(__int128 *))qword_1008DFAE8;
          }

          goto LABEL_156;
        case 65289:
          uint64_t v9 = (void (*)(__int128 *))off_1008DFA28;
          if (!off_1008DFA28) {
            goto LABEL_331;
          }
          unsigned __int16 v82 = v3 + 253;
          unsigned __int16 *v4 = v82;
          if ((_DWORD)v5 != v82) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  518,  "ByteStream_NumReadBytesAvail(*pBs) == 0");
          }
          goto LABEL_149;
        case 65290:
          uint64_t v9 = (void (*)(__int128 *))qword_1008DFA30;
          if (!qword_1008DFA30) {
            goto LABEL_331;
          }
          unsigned __int16 v83 = v3 + 222;
          unsigned __int16 *v4 = v83;
          if ((_DWORD)v5 != v83) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  532,  "ByteStream_NumReadBytesAvail(*pBs) == 0");
          }
          goto LABEL_149;
        case 65297:
          uint64_t v9 = (void (*)(__int128 *))qword_1008DFA38;
          if (!qword_1008DFA38) {
            goto LABEL_331;
          }
          unsigned __int16 v84 = v3 + 66;
          unsigned __int16 *v4 = v84;
          if ((_DWORD)v5 != v84) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  546,  "ByteStream_NumReadBytesAvail(*pBs) == 0");
          }
          goto LABEL_149;
        case 65298:
          uint64_t v9 = (void (*)(__int128 *))qword_1008DFA40;
          if (!qword_1008DFA40) {
            goto LABEL_331;
          }
          unsigned __int16 v85 = v3 + 226;
          unsigned __int16 *v4 = v85;
          if ((_DWORD)v5 != v85) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  560,  "ByteStream_NumReadBytesAvail(*pBs) == 0");
          }
          goto LABEL_149;
        case 65299:
          uint64_t v9 = (void (*)(__int128 *))qword_1008DFA48;
          if (!qword_1008DFA48) {
            goto LABEL_331;
          }
          unsigned __int16 v86 = v3 + 220;
          unsigned __int16 *v4 = v86;
          if ((_DWORD)v5 != v86) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  574,  "ByteStream_NumReadBytesAvail(*pBs) == 0");
          }
          goto LABEL_149;
        case 65300:
          uint64_t v9 = (void (*)(__int128 *))qword_1008DFA50;
          if (!qword_1008DFA50) {
            goto LABEL_331;
          }
          unsigned __int16 v87 = v3 + 242;
          unsigned __int16 *v4 = v87;
          if ((_DWORD)v5 != v87) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  588,  "ByteStream_NumReadBytesAvail(*pBs) == 0");
          }
LABEL_149:
          uint64_t v88 = (__int128 *)(v6 + v8);
          goto LABEL_284;
        case 65301:
          uint64_t v9 = (void (*)(__int128 *))qword_1008DFB28;
          if (!qword_1008DFB28) {
            goto LABEL_331;
          }
          uint64_t v10 = (__int128 *)(v6 + v8);
          unsigned __int16 *v4 = v3 + 35;
          if ((_DWORD)v5 != (unsigned __int16)(v3 + 35))
          {
            sub_1001EE2A0();
            uint64_t v9 = (void (*)(__int128 *))qword_1008DFB28;
          }

          goto LABEL_156;
        case 65302:
          uint64_t v9 = (void (*)(__int128 *))qword_1008DFB30;
          if (!qword_1008DFB30) {
            goto LABEL_331;
          }
          uint64_t v10 = (__int128 *)(v6 + v8);
          unsigned __int16 *v4 = v3 + 32;
          if ((_DWORD)v5 != (unsigned __int16)(v3 + 32))
          {
            sub_1001EE2A0();
            uint64_t v9 = (void (*)(__int128 *))qword_1008DFB30;
          }

LABEL_156:
          uint64_t v88 = v10;
          break;
        default:
          goto LABEL_328;
      }

      goto LABEL_284;
    }

    uint64_t v13 = a2;
    switch((int)v7)
    {
      case 65422:
        uint64_t v14 = (void (*)(uint64_t, uint64_t))qword_1008DFA70;
        if (!qword_1008DFA70) {
          goto LABEL_331;
        }
        unint64_t v15 = v5 - v8;
        if (v15 > 0xCD) {
          goto LABEL_294;
        }
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"BT_VSE_ACI_PHY_STATISTIC - Invalid data size %zu",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v15);
          uint64_t v23 = (os_log_s *)sub_100086554(0x54u);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
            goto LABEL_321;
          }
        }

        goto LABEL_331;
      case 65423:
        uint64_t v14 = (void (*)(uint64_t, uint64_t))off_1008DFAF0;
        if (!off_1008DFAF0) {
          goto LABEL_331;
        }
        goto LABEL_168;
      case 65424:
      case 65425:
      case 65427:
      case 65429:
      case 65431:
        goto LABEL_328;
      case 65426:
        if ((int)(v5 - v8) <= 1)
        {
          uint64_t v183 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
        }

        else
        {
          if (*((_BYTE *)a1 + 14) == 1)
          {
            int v40 = (unsigned __int8 *)(v6 + v8);
            int v41 = *v40;
            int v42 = v40[1];
            unsigned __int16 *v4 = v3 + 4;
            if (v5 <= (unsigned __int16)(v3 + 4)) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  279,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
            }
            *((_WORD *)a1 + 6) = v3 + 5;
            int v43 = *(unsigned __int8 *)(v6 + (unsigned __int16)(v3 + 4));
            uint64_t v44 = sub_10012D6D8(v41 | (v42 << 8));
            if (*((_BYTE *)a1 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else
            {
              int v45 = *((unsigned __int16 *)a1 + 5);
              uint64_t v46 = *((unsigned __int16 *)a1 + 6);
              if (v45 - (int)v46 > 3)
              {
                if (*((_BYTE *)a1 + 14) == 1)
                {
                  uint64_t v47 = *a1;
                  uint64_t v48 = *(unsigned int *)(*a1 + v46);
                  *((_WORD *)a1 + 6) = v46 + 4;
                  if (v45 - (unsigned __int16)(v46 + 4) <= 3) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  282,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
                  }
                  uint64_t v49 = *(unsigned int *)(v47 + (unsigned __int16)(v46 + 4));
                  unsigned __int16 *v4 = v46 + 8;
                  if (v45 - (unsigned __int16)(v46 + 8) <= 1) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  283,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
                  }
                  unsigned __int16 v50 = *(_WORD *)(v47 + (unsigned __int16)(v46 + 8));
                  unsigned __int16 *v4 = v46 + 10;
                  if (v45 - (unsigned __int16)(v46 + 10) <= 1) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  284,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
                  }
                  __int16 v51 = v44;
                  unsigned __int8 v52 = *(_BYTE *)(v47 + (unsigned __int16)(v46 + 10));
                  unsigned __int16 *v4 = v46 + 12;
                  if ((v52 & (v43 == 10)) != 0) {
                    unsigned __int8 v53 = -118;
                  }
                  else {
                    unsigned __int8 v53 = v43;
                  }
                  unsigned int v199 = 0;
                  LODWORD(v200) = 0;
                  sub_1000B0740(&v200, (__darwin_suseconds_t *)&v199);
                  BOOL v55 = v53 != 1 && v53 != 0 && v51 == 0LL;
                  if (!v55 && v53 != 10)
                  {
                    if (off_1008DFB48) {
                      off_1008DFB48(v51, v53, (v49 << 32) | v48, 0LL, v50, v200, v199);
                    }
                    goto LABEL_331;
                  }

                  if (sub_1000A86F0())
                  {
                    sub_1001EE134( (uint64_t)"updateBTControllerClockCB size is zero",  v117,  v118,  v119,  v120,  v121,  v122,  v123,  v198);
                    uint64_t v124 = (os_log_s *)sub_100086554(0x54u);
                    if (os_log_type_enabled(v124, OS_LOG_TYPE_ERROR)) {
                      sub_100657858();
                    }
                  }

LABEL_327:
    sub_100657858();
    goto LABEL_328;
  }

  if ((int)v7 > 9471)
  {
    if ((int)v7 <= 59667)
    {
      if ((_DWORD)v7 == 9472)
      {
        uint64_t v14 = (void (*)(uint64_t, uint64_t))qword_1008DFB00;
        if (!qword_1008DFB00) {
          goto LABEL_328;
        }
LABEL_168:
        uint64_t v96 = v6 + v8;
        a2 = (v5 - v8);
LABEL_295:
        v14(v96, a2);
        goto LABEL_331;
      }

      if ((_DWORD)v7 != 59659)
      {
        if ((_DWORD)v7 != 59660) {
          goto LABEL_328;
        }
        if ((int)(v5 - v8) <= 1)
        {
          uint64_t v188 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
        }

        else
        {
          if (*((_BYTE *)a1 + 14) == 1)
          {
            unsigned __int16 v24 = *(_WORD *)(v6 + (unsigned __int16)(v3 + 2));
            unsigned __int16 *v4 = v3 + 4;
            if (v5 <= (unsigned __int16)(v3 + 4)) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  644,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
            }
            unsigned __int16 *v4 = v3 + 5;
            uint64_t v25 = *(unsigned __int8 *)(v6 + (unsigned __int16)(v3 + 4));
            if (off_1008DFBD8) {
              off_1008DFBD8(v24, v25);
            }
            if (!(_DWORD)v25) {
              goto LABEL_331;
            }
            uint64_t v26 = (void (*)(uint64_t, uint64_t))off_1008DFA10;
            if (!off_1008DFA10) {
              goto LABEL_331;
            }
            uint64_t v27 = v24;
            uint64_t v28 = v25;
LABEL_193:
            v26(v27, v28);
            goto LABEL_331;
          }

          uint64_t v188 = "(*pBs).__RWFlag == BYTESTREAM_READ";
        }

        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 643, v188);
      }

      if (v5 <= v8)
      {
        uint64_t v191 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      }

      else
      {
        if (*((_BYTE *)a1 + 14) == 1)
        {
          unsigned __int16 *v4 = v3 + 3;
          uint64_t v97 = *(unsigned __int8 *)(v6 + (unsigned __int16)(v3 + 2));
          if ((_DWORD)v97 != 2)
          {
            sub_1001EE134( (uint64_t)"HCI_VSE_BLE_SCAN_CORE_EVENT - unexpected subEvent %u",  v125,  v126,  v127,  v128,  v129,  v130,  v131,  v97);
            uint64_t v132 = (os_log_s *)sub_100086554(0x54u);
            if (!os_log_type_enabled(v132, OS_LOG_TYPE_ERROR)) {
              goto LABEL_328;
            }
            goto LABEL_327;
          }

          uint64_t v9 = (void (*)(__int128 *))qword_1008DFB70;
          if (!qword_1008DFB70) {
            goto LABEL_328;
          }
          LODWORD(v201[1]) = 0;
          if ((int)(v5 - (unsigned __int16)(v3 + 3)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  773,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 3));
          unsigned __int16 *v4 = v3 + 7;
          if ((int)(v5 - (unsigned __int16)(v3 + 7)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  774,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 7));
          unsigned __int16 *v4 = v3 + 11;
          if ((int)(v5 - (unsigned __int16)(v3 + 11)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  775,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 11));
          unsigned __int16 *v4 = v3 + 15;
          if ((int)(v5 - (unsigned __int16)(v3 + 15)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  776,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 15));
          unsigned __int16 *v4 = v3 + 19;
          if ((int)(v5 - (unsigned __int16)(v3 + 19)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  777,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 19));
          unsigned __int16 *v4 = v3 + 23;
          if ((int)(v5 - (unsigned __int16)(v3 + 23)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  778,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 23));
          unsigned __int16 *v4 = v3 + 27;
          if ((int)(v5 - (unsigned __int16)(v3 + 27)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  779,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 27));
          unsigned __int16 *v4 = v3 + 31;
          if ((int)(v5 - (unsigned __int16)(v3 + 31)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  780,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 31));
          unsigned __int16 *v4 = v3 + 35;
          if (v5 <= (unsigned __int16)(v3 + 35)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  781,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          unsigned __int16 *v4 = v3 + 36;
          LOBYTE(v201[1]) = *(_BYTE *)(v6 + (unsigned __int16)(v3 + 35));
LABEL_283:
          uint64_t v88 = &v200;
LABEL_284:
          v9(v88);
          goto LABEL_331;
        }

        uint64_t v191 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 767, v191);
    }

    if ((_DWORD)v7 == 59668)
    {
      uint64_t v9 = (void (*)(__int128 *))qword_1008DFBA0;
      if (!qword_1008DFBA0) {
        goto LABEL_328;
      }
      *(void *)&__int128 v202 = 0LL;
      memset(v201, 0, sizeof(v201));
      __int128 v200 = 0u;
      if (v5 <= v8)
      {
        uint64_t v194 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      }

      else
      {
        if (*((_BYTE *)a1 + 14) == 1)
        {
          unsigned __int16 *v4 = v3 + 3;
          LOBYTE(v200) = *(_BYTE *)(v6 + (unsigned __int16)(v3 + 2));
          if ((int)(v5 - (unsigned __int16)(v3 + 3)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  798,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 3));
          unsigned __int16 *v4 = v3 + 7;
          if (v5 <= (unsigned __int16)(v3 + 7)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  799,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          unsigned __int16 *v4 = v3 + 8;
          BYTE8(v200) = *(_BYTE *)(v6 + (unsigned __int16)(v3 + 7));
          if ((int)(v5 - (unsigned __int16)(v3 + 8)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  800,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 8));
          unsigned __int16 *v4 = v3 + 12;
          if ((int)(v5 - (unsigned __int16)(v3 + 12)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  801,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 12));
          unsigned __int16 *v4 = v3 + 16;
          if ((int)(v5 - (unsigned __int16)(v3 + 16)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  802,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 16));
          unsigned __int16 *v4 = v3 + 20;
          if ((int)(v5 - (unsigned __int16)(v3 + 20)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  803,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 20));
          unsigned __int16 *v4 = v3 + 24;
          if ((int)(v5 - (unsigned __int16)(v3 + 24)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  804,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 24));
          unsigned __int16 *v4 = v3 + 28;
          if ((int)(v5 - (unsigned __int16)(v3 + 28)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  805,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 28));
          unsigned __int16 *v4 = v3 + 32;
          if ((int)(v5 - (unsigned __int16)(v3 + 32)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  806,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 32));
          unsigned __int16 *v4 = v3 + 36;
          if ((int)(v5 - (unsigned __int16)(v3 + 36)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  807,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 36));
          unsigned __int16 *v4 = v3 + 40;
          if ((int)(v5 - (unsigned __int16)(v3 + 40)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  808,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 40));
          unsigned __int16 *v4 = v3 + 44;
          if ((int)(v5 - (unsigned __int16)(v3 + 44)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  809,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v20pthread_attr_setdetachstate(&v7, 2) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 44));
          unsigned __int16 *v4 = v3 + 48;
          if (v5 <= (unsigned __int16)(v3 + 48)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  810,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          unsigned __int16 *v4 = v3 + 49;
          BYTE4(v20pthread_attr_setdetachstate(&v7, 2) = *(_BYTE *)(v6 + (unsigned __int16)(v3 + 48));
          if (v5 <= (unsigned __int16)(v3 + 49)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  811,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          unsigned __int16 *v4 = v3 + 50;
          BYTE5(v20pthread_attr_setdetachstate(&v7, 2) = *(_BYTE *)(v6 + (unsigned __int16)(v3 + 49));
          if (v5 <= (unsigned __int16)(v3 + 50)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  812,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          unsigned __int16 *v4 = v3 + 51;
          BYTE6(v20pthread_attr_setdetachstate(&v7, 2) = *(_BYTE *)(v6 + (unsigned __int16)(v3 + 50));
          goto LABEL_283;
        }

        uint64_t v194 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 797, v194);
    }

    if ((_DWORD)v7 != 59671)
    {
      if ((_DWORD)v7 != 59672) {
        goto LABEL_328;
      }
      uint64_t v9 = (void (*)(__int128 *))qword_1008DFB60;
      if (!qword_1008DFB60) {
        goto LABEL_328;
      }
      __int128 v200 = 0u;
      memset(v201, 0, 28);
      if (v5 <= v8)
      {
        *((_BYTE *)a1 + 15) = 1;
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
      }

      else
      {
        unsigned __int16 *v4 = v3 + 3;
        LOBYTE(v200) = *(_BYTE *)(v6 + (unsigned __int16)(v3 + 2));
        if ((int)(v5 - (unsigned __int16)(v3 + 3)) > 3)
        {
          DWORD1(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 3));
          unsigned __int16 *v4 = v3 + 7;
          if ((int)(v5 - (unsigned __int16)(v3 + 7)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  906,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 7));
          unsigned __int16 *v4 = v3 + 11;
          if ((int)(v5 - (unsigned __int16)(v3 + 11)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  907,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 11));
          unsigned __int16 *v4 = v3 + 15;
          if ((int)(v5 - (unsigned __int16)(v3 + 15)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  908,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 15));
          unsigned __int16 *v4 = v3 + 19;
          if ((int)(v5 - (unsigned __int16)(v3 + 19)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  909,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 19));
          unsigned __int16 *v4 = v3 + 23;
          if ((int)(v5 - (unsigned __int16)(v3 + 23)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  910,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 23));
          unsigned __int16 *v4 = v3 + 27;
          if ((int)(v5 - (unsigned __int16)(v3 + 27)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  911,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 27));
          unsigned __int16 *v4 = v3 + 31;
          if ((int)(v5 - (unsigned __int16)(v3 + 31)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  912,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 31));
          unsigned __int16 *v4 = v3 + 35;
          if ((int)(v5 - (unsigned __int16)(v3 + 35)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  913,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 35));
          unsigned __int16 *v4 = v3 + 39;
          if ((int)(v5 - (unsigned __int16)(v3 + 39)) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  914,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 39));
          unsigned __int16 v30 = v3 + 43;
          goto LABEL_282;
        }
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  905,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }

    uint64_t v9 = (void (*)(__int128 *))qword_1008DFB58;
    if (!qword_1008DFB58) {
      goto LABEL_328;
    }
    int v215 = 0;
    __int128 v213 = 0u;
    __int128 v214 = 0u;
    __int128 v211 = 0u;
    __int128 v212 = 0u;
    __int128 v209 = 0u;
    __int128 v210 = 0u;
    __int128 v207 = 0u;
    __int128 v208 = 0u;
    __int128 v205 = 0u;
    __int128 v206 = 0u;
    __int128 v203 = 0u;
    __int128 v204 = 0u;
    __int128 v202 = 0u;
    __int128 v200 = 0u;
    memset(v201, 0, sizeof(v201));
    if ((int)(v5 - v8) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  823,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 2));
    unsigned __int16 *v4 = v3 + 6;
    if ((int)(v5 - (unsigned __int16)(v3 + 6)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  824,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 6));
    unsigned __int16 *v4 = v3 + 10;
    if ((int)(v5 - (unsigned __int16)(v3 + 10)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  825,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 10));
    unsigned __int16 *v4 = v3 + 14;
    if ((int)(v5 - (unsigned __int16)(v3 + 14)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  826,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 14));
    unsigned __int16 *v4 = v3 + 18;
    if ((int)(v5 - (unsigned __int16)(v3 + 18)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  827,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 18));
    unsigned __int16 *v4 = v3 + 22;
    if ((int)(v5 - (unsigned __int16)(v3 + 22)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  828,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 22));
    unsigned __int16 *v4 = v3 + 26;
    if ((int)(v5 - (unsigned __int16)(v3 + 26)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  829,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 26));
    unsigned __int16 *v4 = v3 + 30;
    if ((int)(v5 - (unsigned __int16)(v3 + 30)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  830,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 30));
    unsigned __int16 *v4 = v3 + 34;
    if ((int)(v5 - (unsigned __int16)(v3 + 34)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  831,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 34));
    unsigned __int16 *v4 = v3 + 38;
    if ((int)(v5 - (unsigned __int16)(v3 + 38)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  832,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 38));
    unsigned __int16 *v4 = v3 + 42;
    int v103 = v5 - (unsigned __int16)(v3 + 42);
    if ((v103 & 0x1FFFE) == 0) {
      goto LABEL_283;
    }
    if (v103 <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  836,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 42));
    unsigned __int16 *v4 = v3 + 46;
    if ((int)(v5 - (unsigned __int16)(v3 + 46)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  837,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 46));
    unsigned __int16 *v4 = v3 + 50;
    if ((int)(v5 - (unsigned __int16)(v3 + 50)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  838,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v20pthread_attr_setdetachstate(&v7, 2) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 50));
    unsigned __int16 *v4 = v3 + 54;
    if ((int)(v5 - (unsigned __int16)(v3 + 54)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  839,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v20pthread_attr_setdetachstate(&v7, 2) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 54));
    unsigned __int16 *v4 = v3 + 58;
    if ((int)(v5 - (unsigned __int16)(v3 + 58)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  840,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v20pthread_attr_setdetachstate(&v7, 2) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 58));
    unsigned __int16 *v4 = v3 + 62;
    if ((int)(v5 - (unsigned __int16)(v3 + 62)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  841,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v20pthread_attr_setdetachstate(&v7, 2) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 62));
    unsigned __int16 *v4 = v3 + 66;
    if ((int)(v5 - (unsigned __int16)(v3 + 66)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  842,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v203) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 66));
    unsigned __int16 *v4 = v3 + 70;
    if ((int)(v5 - (unsigned __int16)(v3 + 70)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  843,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v203) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 70));
    unsigned __int16 *v4 = v3 + 74;
    if ((int)(v5 - (unsigned __int16)(v3 + 74)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  844,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v203) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 74));
    unsigned __int16 *v4 = v3 + 78;
    if ((int)(v5 - (unsigned __int16)(v3 + 78)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  846,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v203) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 78));
    unsigned __int16 *v4 = v3 + 82;
    if ((int)(v5 - (unsigned __int16)(v3 + 82)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  847,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v204) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 82));
    unsigned __int16 *v4 = v3 + 86;
    if ((int)(v5 - (unsigned __int16)(v3 + 86)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  848,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v204) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 86));
    unsigned __int16 *v4 = v3 + 90;
    if ((int)(v5 - (unsigned __int16)(v3 + 90)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  849,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v204) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 90));
    unsigned __int16 *v4 = v3 + 94;
    if ((int)(v5 - (unsigned __int16)(v3 + 94)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  850,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v204) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 94));
    unsigned __int16 *v4 = v3 + 98;
    if ((int)(v5 - (unsigned __int16)(v3 + 98)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  851,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v205) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 98));
    unsigned __int16 *v4 = v3 + 102;
    if ((int)(v5 - (unsigned __int16)(v3 + 102)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  852,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v205) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 102));
    unsigned __int16 *v4 = v3 + 106;
    if ((int)(v5 - (unsigned __int16)(v3 + 106)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  853,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v205) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 106));
    unsigned __int16 *v4 = v3 + 110;
    if ((int)(v5 - (unsigned __int16)(v3 + 110)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  854,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v205) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 110));
    unsigned __int16 *v4 = v3 + 114;
    if ((int)(v5 - (unsigned __int16)(v3 + 114)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  855,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v206) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 114));
    unsigned __int16 *v4 = v3 + 118;
    if ((int)(v5 - (unsigned __int16)(v3 + 118)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  856,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v206) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 118));
    unsigned __int16 *v4 = v3 + 122;
    if ((int)(v5 - (unsigned __int16)(v3 + 122)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  857,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v206) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 122));
    unsigned __int16 *v4 = v3 + 126;
    if ((int)(v5 - (unsigned __int16)(v3 + 126)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  858,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v206) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 126));
    unsigned __int16 *v4 = v3 + 130;
    if ((int)(v5 - (unsigned __int16)(v3 + 130)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  859,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v207) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 130));
    unsigned __int16 *v4 = v3 + 134;
    if ((int)(v5 - (unsigned __int16)(v3 + 134)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  860,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v207) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 134));
    unsigned __int16 *v4 = v3 + 138;
    if ((int)(v5 - (unsigned __int16)(v3 + 138)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  861,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v207) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 138));
    unsigned __int16 *v4 = v3 + 142;
    if ((int)(v5 - (unsigned __int16)(v3 + 142)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  862,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v207) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 142));
    unsigned __int16 *v4 = v3 + 146;
    if ((int)(v5 - (unsigned __int16)(v3 + 146)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  863,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v208) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 146));
    unsigned __int16 *v4 = v3 + 150;
    if ((int)(v5 - (unsigned __int16)(v3 + 150)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  864,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v208) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 150));
    unsigned __int16 *v4 = v3 + 154;
    if ((int)(v5 - (unsigned __int16)(v3 + 154)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  865,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v208) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 154));
    unsigned __int16 *v4 = v3 + 158;
    if ((int)(v5 - (unsigned __int16)(v3 + 158)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  866,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v208) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 158));
    unsigned __int16 *v4 = v3 + 162;
    if ((int)(v5 - (unsigned __int16)(v3 + 162)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  867,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v209) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 162));
    unsigned __int16 *v4 = v3 + 166;
    if ((int)(v5 - (unsigned __int16)(v3 + 166)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  868,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v209) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 166));
    unsigned __int16 *v4 = v3 + 170;
    if ((int)(v5 - (unsigned __int16)(v3 + 170)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  869,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v209) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 170));
    unsigned __int16 *v4 = v3 + 174;
    if ((int)(v5 - (unsigned __int16)(v3 + 174)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  870,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    HIDWORD(v209) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 174));
    unsigned __int16 *v4 = v3 + 176;
    if ((int)(v5 - (unsigned __int16)(v3 + 176)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  871,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    LODWORD(v210) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 176));
    unsigned __int16 *v4 = v3 + 178;
    if ((int)(v5 - (unsigned __int16)(v3 + 178)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  872,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    DWORD1(v210) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 178));
    unsigned __int16 *v4 = v3 + 180;
    if ((int)(v5 - (unsigned __int16)(v3 + 180)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  873,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    DWORD2(v210) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 180));
    unsigned __int16 *v4 = v3 + 182;
    if ((int)(v5 - (unsigned __int16)(v3 + 182)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  874,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v210) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 182));
    unsigned __int16 *v4 = v3 + 186;
    if ((int)(v5 - (unsigned __int16)(v3 + 186)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  875,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v211) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 186));
    unsigned __int16 *v4 = v3 + 190;
    if ((int)(v5 - (unsigned __int16)(v3 + 190)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  876,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    DWORD1(v211) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 190));
    unsigned __int16 *v4 = v3 + 192;
    if ((int)(v5 - (unsigned __int16)(v3 + 192)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  877,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    DWORD2(v211) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 192));
    unsigned __int16 *v4 = v3 + 194;
    if ((int)(v5 - (unsigned __int16)(v3 + 194)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  878,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    HIDWORD(v211) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 194));
    unsigned __int16 *v4 = v3 + 196;
    if ((int)(v5 - (unsigned __int16)(v3 + 196)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  879,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    LODWORD(v21pthread_attr_setdetachstate(&v7, 2) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 196));
    unsigned __int16 *v4 = v3 + 198;
    if ((int)(v5 - (unsigned __int16)(v3 + 198)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  880,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v21pthread_attr_setdetachstate(&v7, 2) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 198));
    unsigned __int16 *v4 = v3 + 202;
    if ((int)(v5 - (unsigned __int16)(v3 + 202)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  881,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v21pthread_attr_setdetachstate(&v7, 2) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 202));
    unsigned __int16 *v4 = v3 + 206;
    if ((int)(v5 - (unsigned __int16)(v3 + 206)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  882,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v21pthread_attr_setdetachstate(&v7, 2) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 206));
    unsigned __int16 *v4 = v3 + 210;
    if ((int)(v5 - (unsigned __int16)(v3 + 210)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  883,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v213) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 210));
    unsigned __int16 *v4 = v3 + 214;
    if ((int)(v5 - (unsigned __int16)(v3 + 214)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  884,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v213) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 214));
    unsigned __int16 *v4 = v3 + 218;
    if ((int)(v5 - (unsigned __int16)(v3 + 218)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  885,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v213) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 218));
    unsigned __int16 *v4 = v3 + 222;
    if ((int)(v5 - (unsigned __int16)(v3 + 222)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  886,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v213) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 222));
    unsigned __int16 *v4 = v3 + 226;
    if ((int)(v5 - (unsigned __int16)(v3 + 226)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  887,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v214) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 226));
    unsigned __int16 *v4 = v3 + 230;
    if ((int)(v5 - (unsigned __int16)(v3 + 230)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  888,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v214) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 230));
    unsigned __int16 *v4 = v3 + 234;
    if ((int)(v5 - (unsigned __int16)(v3 + 234)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  889,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v214) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 234));
    unsigned __int16 *v4 = v3 + 238;
    if ((int)(v5 - (unsigned __int16)(v3 + 238)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  890,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v214) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 238));
    unsigned __int16 *v4 = v3 + 242;
    if ((int)(v5 - (unsigned __int16)(v3 + 242)) <= 3)
    {
      v195 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    }

    else
    {
      if (*((_BYTE *)a1 + 14) == 1)
      {
        int v215 = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 242));
        unsigned __int16 v30 = v3 + 246;
LABEL_282:
        unsigned __int16 *v4 = v30;
        goto LABEL_283;
      }

      v195 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    }

    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 891, v195);
  }

  if ((int)v7 > 6399)
  {
    if ((_DWORD)v7 == 6400)
    {
      if (!byte_1008DFD80) {
        goto LABEL_328;
      }
      if ((int)(v5 - v8) <= 1)
      {
        size_t v193 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
      }

      else
      {
        if (*((_BYTE *)a1 + 14) == 1)
        {
          unsigned __int16 *v4 = v3 + 4;
          if (v5 - (unint64_t)(unsigned __int16)(v3 + 4) <= 0x1D) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  630,  "ByteStream_NumReadBytesAvail(*pBs) >= (sizeof(reason))");
          }
          uint64_t v98 = (__int128 *)(v6 + (unsigned __int16)(v3 + 4));
          __int128 v99 = *v98;
          uint64_t v100 = *((void *)v98 + 2);
          int v101 = *((_DWORD *)v98 + 6);
          BYTE12(v201[0]) = *((_WORD *)v98 + 14);
          DWORD2(v201[0]) = v101;
          *(void *)&v201[0] = v100;
          __int128 v200 = v99;
          unsigned __int16 *v4 = v3 + 34;
          BYTE13(v201[0]) = 0;
          sub_1001EE334();
          goto LABEL_331;
        }

        size_t v193 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 629, v193);
    }

    if ((_DWORD)v7 != 8960)
    {
      if ((_DWORD)v7 != 9216) {
        goto LABEL_328;
      }
      if ((int)(v5 - v8) <= 1)
      {
        char v189 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
      }

      else
      {
        if (*((_BYTE *)a1 + 14) == 1)
        {
          unsigned __int16 v29 = *(_WORD *)(v6 + (unsigned __int16)(v3 + 2));
          unsigned __int16 *v4 = v3 + 4;
          if (v5 <= (unsigned __int16)(v3 + 4)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  709,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          unsigned __int16 *v4 = v3 + 5;
          if (off_1008DFA98) {
            off_1008DFA98(v29, *(unsigned __int8 *)(v6 + (unsigned __int16)(v3 + 4)));
          }
          goto LABEL_331;
        }

        char v189 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 708, v189);
    }

    if ((int)(v5 - v8) <= 1)
    {
      uint64_t v192 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    }

    else
    {
      if (*((_BYTE *)a1 + 14) == 1)
      {
        unsigned __int16 v102 = *(_WORD *)(v6 + (unsigned __int16)(v3 + 2));
        unsigned __int16 *v4 = v3 + 4;
        if ((int)(v5 - (unsigned __int16)(v3 + 4)) <= 3) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  726,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
        }
        uint64_t v28 = *(unsigned int *)(v6 + (unsigned __int16)(v3 + 4));
        unsigned __int16 *v4 = v3 + 8;
        uint64_t v26 = (void (*)(uint64_t, uint64_t))qword_1008DFAA0;
        if (!qword_1008DFAA0) {
          goto LABEL_331;
        }
        uint64_t v27 = v102;
        goto LABEL_193;
      }

      uint64_t v192 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    }

    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 725, v192);
  }

  if ((_DWORD)v7 == 2048)
  {
    if ((int)(v5 - v8) <= 1)
    {
      uint64_t v190 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    }

    else
    {
      if (*((_BYTE *)a1 + 14) == 1)
      {
        uint64_t v89 = (unsigned __int8 *)(v6 + v8);
        int v90 = *v89;
        int v91 = v89[1];
        unsigned __int16 *v4 = v3 + 4;
        if ((int)(v5 - (unsigned __int16)(v3 + 4)) <= 1) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  416,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
        }
        unsigned __int16 *v4 = v3 + 6;
        if (off_1008DF9F0) {
          off_1008DF9F0();
        }
        goto LABEL_331;
      }

      uint64_t v190 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    }

    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 415, v190);
  }

  if ((_DWORD)v7 != 4866)
  {
    if ((_DWORD)v7 != 5632) {
      goto LABEL_328;
    }
    if (v5 <= v8)
    {
      uint64_t v187 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    }

    else
    {
      if (*((_BYTE *)a1 + 14) == 1)
      {
        unsigned __int16 v11 = v3 + 3;
        unsigned __int16 *v4 = v11;
        if (*(_BYTE *)(v6 + v8) != 1) {
          goto LABEL_328;
        }
        unsigned int v12 = v5 - v11;
        if ((v12 & 0x1FFFE) != 0)
        {
          if (off_1008DF9F8) {
            off_1008DF9F8( v6 + v11,  (v12 >> 1),  v6 + v11 + (unsigned __int16)(v12 >> 1),  (v12 >> 1));
          }
          goto LABEL_331;
        }

        sub_1001EE134((uint64_t)"LostDevice size is zero", v156, v157, v158, v159, v160, v161, v162, v198);
        uint64_t v163 = (os_log_s *)sub_100086554(0x54u);
        if (!os_log_type_enabled(v163, OS_LOG_TYPE_ERROR)) {
          goto LABEL_328;
        }
        goto LABEL_327;
      }

      uint64_t v187 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    }

    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 383, v187);
  }

  uint64_t v92 = (void (*)(void, BOOL))off_1008DFD50;
  if (!off_1008DFD50) {
    goto LABEL_328;
  }
  if ((int)(v5 - v8) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  942,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v93 = (unsigned __int8 *)(v6 + v8);
  int v94 = *v93;
  int v95 = v93[1];
  unsigned __int16 *v4 = v3 + 4;
  if (v5 <= (unsigned __int16)(v3 + 4)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  943,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  unsigned __int16 *v4 = v3 + 5;
  v92(v94 | (v95 << 8), *(_BYTE *)(v6 + (unsigned __int16)(v3 + 4)) != 0);
LABEL_331:
  if (*((_BYTE *)a1 + 15)) {
    sub_1000AFE20(136LL);
  }
}

uint64_t sub_1000BFC60(void (*a1)(void, uint64_t))
{
  return 0LL;
}

uint64_t sub_1000BFC84(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(64941, v10, BYTE4(v11), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1711, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000BFD50(_WORD *a1, char a2, char a3, uint64_t a4)
{
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  if (!sub_10018BCDC(&v20))
  {
    if (HIBYTE(v21))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v21) - WORD2(v21) > 3)
    {
      if (BYTE6(v21) == 2)
      {
        *(_DWORD *)(v20 + WORD2(v21)) = 0;
        unsigned __int16 v12 = WORD2(v21) + 4;
        WORD2(v21) += 4;
        if (HIBYTE(v21))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v21) > v12)
        {
          if (BYTE6(v21) == 2)
          {
            *(_BYTE *)(v20 + v1pthread_attr_setdetachstate(&v7, 2) = 0;
            __int16 v13 = WORD2(v21);
            unsigned __int16 v14 = ++WORD2(v21);
            if (HIBYTE(v21))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v21) > v14)
            {
              if (BYTE6(v21) == 2)
              {
                WORD2(v21) = v13 + 2;
                *(_BYTE *)(v20 + v14) = a3 | (16 * a2);
                if (HIBYTE(v21))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v21) - WORD2(v21) > 1)
                {
                  if (BYTE6(v21) == 2)
                  {
                    *(_WORD *)(v20 + WORD2(v21)) = *a1;
                    unsigned __int8 v11 = BYTE4(v21) + 2;
                    WORD2(v21) += 2;
                    return sub_10018BD78(65456, v20, v11, a4, (uint64_t)sub_1000BC408, v8, v9, v10);
                  }

                  uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3732,  v19);
                }

                uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_32;
              }

              uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3731,  v18);
            }

            uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_28;
          }

          uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3730, v17);
        }

        uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
        goto LABEL_24;
      }

      uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3729, v16);
    }

    uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= (4)";
    goto LABEL_20;
  }

  unsigned __int8 v11 = BYTE4(v21);
  return sub_10018BD78(65456, v20, v11, a4, (uint64_t)sub_1000BC408, v8, v9, v10);
}

uint64_t sub_1000BFFCC(int a1, uint64_t a2)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if (a1 == 255) {
    return 101LL;
  }
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(_BYTE *)(v11 + v8) = a1;
          if (HIBYTE(v12))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v12) - WORD2(v12) > 1)
          {
            if (BYTE6(v12) == 2)
            {
              *(_BYTE *)(v11 + WORD2(v12)) = -1;
              *(_BYTE *)(v11 + WORD2(v12) + 1) = -1;
              return sub_10018BD78( 65277,  v11,  (BYTE4(v12) + 2),  a2,  (uint64_t)sub_1000BC408,  v5,  v6,  v7);
            }

            uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1078,  v10);
          }

          uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_19;
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_15:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1077, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_15;
  }

  return result;
}

uint64_t sub_1000C013C(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(64838, v10, BYTE4(v11), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1727, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000C0208(_WORD *a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = *a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(_BYTE *)(v14 + v11) = a2;
            return sub_10018BD78(65446, v14, BYTE4(v15), a3, (uint64_t)sub_1000BC408, v7, v8, v9);
          }

          __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1696, v13);
        }

        __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }

      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1695, v12);
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000C0378(unsigned int a1, uint64_t a2)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (a1 > 4) {
    return 101LL;
  }
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v14) - WORD2(v14) > 1)
    {
      if (BYTE6(v14) == 2)
      {
        *(_BYTE *)(v13 + WORD2(v14)) = -1;
        *(_BYTE *)(v13 + WORD2(v14) + 1) = -1;
        __int16 v8 = WORD2(v14);
        unsigned __int16 v9 = WORD2(v14) + 2;
        WORD2(v14) += 2;
        if (HIBYTE(v14))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v14) > v9)
        {
          if (BYTE6(v14) == 2)
          {
            WORD2(v14) = v8 + 3;
            *(_BYTE *)(v13 + v9) = a1;
            if (HIBYTE(v14))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v14) - WORD2(v14) > 1)
            {
              if (BYTE6(v14) == 2)
              {
                *(_BYTE *)(v13 + WORD2(v14)) = -1;
                *(_BYTE *)(v13 + WORD2(v14) + 1) = -1;
                WORD2(v14) += 2;
                return sub_10018BD78(64893, v13, BYTE4(v14), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
              }

              uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  990,  v12);
            }

            uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
            goto LABEL_26;
          }

          unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 989, v11);
        }

        unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_22;
      }

      __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_18:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 988, v10);
    }

    __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_18;
  }

  return result;
}

uint64_t sub_1000C057C(char a1, _WORD *a2, uint64_t a3)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v10 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(_BYTE *)(v13 + v10) = a1;
          if (HIBYTE(v14))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v14) - WORD2(v14) > 1)
          {
            if (BYTE6(v14) == 2)
            {
              *(_WORD *)(v13 + WORD2(v14)) = *a2;
              WORD2(v14) += 2;
              return sub_10018BD78(64872, v13, BYTE4(v14), a3, (uint64_t)sub_1000BC408, v7, v8, v9);
            }

            uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1008,  v12);
          }

          uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_17;
        }

        unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1007, v11);
      }
    }

    unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000C06EC(int a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (a1 && !(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v11 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(_BYTE *)(v13 + v11) = a2;
          return sub_10018BD78(64817, v13, BYTE4(v14), a4, (uint64_t)sub_1000BC408, v8, v9, v10);
        }

        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_11:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1518, v12);
      }
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_11;
  }

  return result;
}

uint64_t sub_1000C07C8(char a1, uint64_t a2)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(_BYTE *)(v13 + v8) = a1;
          if (HIBYTE(v14))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v14) - WORD2(v14) > 3)
          {
            if (BYTE6(v14) == 2)
            {
              *(_BYTE *)(v13 + WORD2(v14)) = -1;
              *(_BYTE *)(v13 + WORD2(v14) + 1) = -1;
              *(_BYTE *)(v13 + WORD2(v14) + pthread_attr_setdetachstate(&v7, 2) = -1;
              *(_BYTE *)(v13 + WORD2(v14) + 3) = -1;
              unsigned __int16 v9 = WORD2(v14) + 4;
              WORD2(v14) += 4;
              if (HIBYTE(v14))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v14) - v9 > 3)
              {
                if (BYTE6(v14) == 2)
                {
                  *(_BYTE *)(v13 + v9) = -1;
                  *(_BYTE *)(v13 + WORD2(v14) + 1) = -1;
                  *(_BYTE *)(v13 + WORD2(v14) + pthread_attr_setdetachstate(&v7, 2) = -1;
                  *(_BYTE *)(v13 + WORD2(v14) + 3) = -1;
                  WORD2(v14) += 4;
                  return sub_10018BD78(64984, v13, BYTE4(v14), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
                }

                uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1681,  v12);
              }

              uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_24;
            }

            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1680,  v11);
          }

          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_20;
        }

        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1679, v10);
      }
    }

    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000C09F8(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = -a1;
          return sub_10018BD78(64855, v10, BYTE4(v11), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
        }

        unsigned __int16 v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1744, v9);
      }
    }

    unsigned __int16 v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000C0AC8(_WORD *a1, __int16 a2, __int16 a3, __int16 a4, __int16 a5, uint64_t a6)
{
  uint64_t v25 = 0LL;
  uint64_t v26 = 0LL;
  uint64_t result = sub_10018BCDC(&v25);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v26))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v26) - WORD2(v26) > 1)
    {
      if (BYTE6(v26) == 2)
      {
        *(_WORD *)(v25 + WORD2(v26)) = *a1;
        unsigned __int16 v16 = WORD2(v26) + 2;
        WORD2(v26) += 2;
        if (HIBYTE(v26))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v26) - v16 > 1)
        {
          if (BYTE6(v26) == 2)
          {
            *(_BYTE *)(v25 + v16) = a2;
            *(_BYTE *)(v25 + WORD2(v26) + 1) = HIBYTE(a2);
            unsigned __int16 v17 = WORD2(v26) + 2;
            WORD2(v26) += 2;
            if (HIBYTE(v26))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v26) - v17 > 1)
            {
              if (BYTE6(v26) == 2)
              {
                *(_BYTE *)(v25 + v17) = a3;
                *(_BYTE *)(v25 + WORD2(v26) + 1) = HIBYTE(a3);
                unsigned __int16 v18 = WORD2(v26) + 2;
                WORD2(v26) += 2;
                if (HIBYTE(v26))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v26) - v18 > 1)
                {
                  if (BYTE6(v26) == 2)
                  {
                    *(_BYTE *)(v25 + v18) = a4;
                    *(_BYTE *)(v25 + WORD2(v26) + 1) = HIBYTE(a4);
                    unsigned __int16 v19 = WORD2(v26) + 2;
                    WORD2(v26) += 2;
                    if (HIBYTE(v26))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }

                    else if (WORD1(v26) - v19 > 1)
                    {
                      if (BYTE6(v26) == 2)
                      {
                        *(_BYTE *)(v25 + v19) = a5;
                        *(_BYTE *)(v25 + WORD2(v26) + 1) = HIBYTE(a5);
                        WORD2(v26) += 2;
                        return sub_10018BD78(64835, v25, BYTE4(v26), a6, (uint64_t)sub_1000BC408, v13, v14, v15);
                      }

                      unsigned __int16 v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1783,  v24);
                    }

                    unsigned __int16 v24 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                    goto LABEL_38;
                  }

                  uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1782,  v23);
                }

                uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_34;
              }

              uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1781,  v22);
            }

            uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 2";
            goto LABEL_30;
          }

          uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1780, v21);
        }

        uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_26;
      }

      uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1779, v20);
    }

    uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_22;
  }

  return result;
}

uint64_t sub_1000C0E24(__int16 a1, __int16 a2, __int16 a3, __int16 a4, uint64_t a5)
{
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t result = sub_10018BCDC(&v21);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v22))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v22) - WORD2(v22) > 1)
    {
      if (BYTE6(v22) == 2)
      {
        *(_WORD *)(v21 + WORD2(v22)) = a1;
        unsigned __int16 v14 = WORD2(v22) + 2;
        WORD2(v22) += 2;
        if (HIBYTE(v22))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v22) - v14 > 1)
        {
          if (BYTE6(v22) == 2)
          {
            *(_BYTE *)(v21 + v14) = a2;
            *(_BYTE *)(v21 + WORD2(v22) + 1) = HIBYTE(a2);
            unsigned __int16 v15 = WORD2(v22) + 2;
            WORD2(v22) += 2;
            if (HIBYTE(v22))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v22) - v15 > 1)
            {
              if (BYTE6(v22) == 2)
              {
                *(_BYTE *)(v21 + v15) = a3;
                *(_BYTE *)(v21 + WORD2(v22) + 1) = HIBYTE(a3);
                unsigned __int16 v16 = WORD2(v22) + 2;
                WORD2(v22) += 2;
                if (HIBYTE(v22))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v22) - v16 > 1)
                {
                  if (BYTE6(v22) == 2)
                  {
                    *(_BYTE *)(v21 + v16) = a4;
                    *(_BYTE *)(v21 + WORD2(v22) + 1) = HIBYTE(a4);
                    WORD2(v22) += 2;
                    return sub_10018BD78(64837, v21, BYTE4(v22), a5, (uint64_t)sub_1000BC408, v11, v12, v13);
                  }

                  uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1801,  v20);
                }

                uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_31;
              }

              unsigned __int16 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1800,  v19);
            }

            unsigned __int16 v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
            goto LABEL_27;
          }

          unsigned __int16 v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1799, v18);
        }

        unsigned __int16 v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_23;
      }

      unsigned __int16 v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1798, v17);
    }

    unsigned __int16 v17 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000C10E4(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = sub_10018BCDC(&v6);
  if (!(_DWORD)result) {
    return sub_10018BD78(64836, v6, BYTE4(v7), a1, (uint64_t)sub_1000BC408, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1000C1134(_WORD *a1, int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  uint64_t result = sub_10018BCDC(&v20);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v21))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v12 = WORD2(v21);
      if (WORD1(v21) > WORD2(v21))
      {
        if (BYTE6(v21) == 2)
        {
          ++WORD2(v21);
          *(_BYTE *)(v20 + v1pthread_attr_setdetachstate(&v7, 2) = 1;
          if (HIBYTE(v21))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v21) - WORD2(v21) > 1)
          {
            if (BYTE6(v21) == 2)
            {
              *(_WORD *)(v20 + WORD2(v21)) = *a1;
              unsigned __int16 v13 = WORD2(v21) + 2;
              WORD2(v21) += 2;
              if (HIBYTE(v21))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v21) - v13 > 3)
              {
                if (BYTE6(v21) == 2)
                {
                  *(_BYTE *)(v20 + v13) = a2;
                  *(_BYTE *)(v20 + WORD2(v21) + 1) = BYTE1(a2);
                  *(_BYTE *)(v20 + WORD2(v21) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a2);
                  *(_BYTE *)(v20 + WORD2(v21) + 3) = HIBYTE(a2);
                  unsigned __int16 v14 = WORD2(v21) + 4;
                  WORD2(v21) += 4;
                  if (HIBYTE(v21))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else if (WORD1(v21) - v14 > 1)
                  {
                    if (BYTE6(v21) == 2)
                    {
                      double v15 = (double)a3 * 1.25;
                      *(_BYTE *)(v20 + v14) = (int)v15;
                      *(_BYTE *)(v20 + WORD2(v21) + 1) = (unsigned __int16)(int)v15 >> 8;
                      WORD2(v21) += 2;
                      return sub_10018BD78(65474, v20, BYTE4(v21), a4, (uint64_t)sub_1000BC408, v9, v10, v11);
                    }

                    unsigned __int16 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1765,  v19);
                  }

                  unsigned __int16 v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                  goto LABEL_31;
                }

                unsigned __int16 v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1764,  v18);
              }

              unsigned __int16 v18 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_27;
            }

            unsigned __int16 v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1763,  v17);
          }

          unsigned __int16 v17 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_23;
        }

        unsigned __int16 v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1762, v16);
      }
    }

    unsigned __int16 v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000C140C(char a1, char a2, char a3, char a4, char a5, __int16 a6, __int16 a7, uint64_t a8)
{
  uint64_t v33 = 0LL;
  uint64_t v34 = 0LL;
  uint64_t result = sub_10018BCDC(&v33);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v34))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v20 = WORD2(v34);
      if (WORD1(v34) > WORD2(v34))
      {
        if (BYTE6(v34) == 2)
        {
          ++WORD2(v34);
          *(_BYTE *)(v33 + v20) = a1;
          if (HIBYTE(v34))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v21 = WORD2(v34);
            if (WORD1(v34) > WORD2(v34))
            {
              if (BYTE6(v34) == 2)
              {
                ++WORD2(v34);
                *(_BYTE *)(v33 + v21) = a2;
                if (HIBYTE(v34))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else
                {
                  uint64_t v22 = WORD2(v34);
                  if (WORD1(v34) > WORD2(v34))
                  {
                    if (BYTE6(v34) == 2)
                    {
                      ++WORD2(v34);
                      *(_BYTE *)(v33 + v2pthread_attr_setdetachstate(&v7, 2) = a3;
                      if (HIBYTE(v34))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }

                      else
                      {
                        uint64_t v23 = WORD2(v34);
                        if (WORD1(v34) > WORD2(v34))
                        {
                          if (BYTE6(v34) == 2)
                          {
                            ++WORD2(v34);
                            *(_BYTE *)(v33 + v23) = a4;
                            if (HIBYTE(v34))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }

                            else
                            {
                              uint64_t v24 = WORD2(v34);
                              if (WORD1(v34) > WORD2(v34))
                              {
                                if (BYTE6(v34) == 2)
                                {
                                  ++WORD2(v34);
                                  *(_BYTE *)(v33 + v24) = a5;
                                  if (HIBYTE(v34))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/aci/aci_vsc.c");
                                  }

                                  else if (WORD1(v34) - WORD2(v34) > 1)
                                  {
                                    if (BYTE6(v34) == 2)
                                    {
                                      *(_WORD *)(v33 + WORD2(v34)) = a7;
                                      unsigned __int16 v25 = WORD2(v34) + 2;
                                      WORD2(v34) += 2;
                                      if (HIBYTE(v34))
                                      {
                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/aci/aci_vsc.c");
                                      }

                                      else if (WORD1(v34) - v25 > 1)
                                      {
                                        if (BYTE6(v34) == 2)
                                        {
                                          *(_BYTE *)(v33 + v25) = a6;
                                          *(_BYTE *)(v33 + WORD2(v34) + 1) = HIBYTE(a6);
                                          WORD2(v34) += 2;
                                          return sub_10018BD78( 65342,  v33,  BYTE4(v34),  a8,  (uint64_t)sub_1000BC408,  v17,  v18,  v19);
                                        }

                                        uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2153,  v32);
                                      }

                                      uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                      goto LABEL_52;
                                    }

                                    unint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2152,  v31);
                                  }

                                  unint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                  goto LABEL_48;
                                }

                                unsigned __int16 v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2151,  v30);
                              }
                            }

                            unsigned __int16 v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_44;
                          }

                          unsigned __int16 v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2150,  v29);
                        }
                      }

                      unsigned __int16 v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_40;
                    }

                    uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2149,  v28);
                  }
                }

                uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_36;
              }

              uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2148,  v27);
            }
          }

          uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_32;
        }

        uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2147, v26);
      }
    }

    uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_28;
  }

  return result;
}

uint64_t sub_1000C1810( char a1, char a2, unsigned __int8 a3, char *a4, _WORD *a5, _BYTE *a6, char a7, char a8, _BYTE *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v46 = 0LL;
  uint64_t v47 = 0LL;
  uint64_t result = sub_10018BCDC(&v46);
  if ((_DWORD)result) {
    return result;
  }
  LOBYTE(v23) = 0;
  int v25 = 3;
  unsigned __int8 v26 = a3;
  do
  {
    LOBYTE(v23) = (v26 & 1) + v23;
    v26 >>= 1;
    --v25;
  }

  while (v25);
  if (HIBYTE(v47))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_55;
  }

  uint64_t v27 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_55:
    int v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_57;
  }

  if (BYTE6(v47) != 2)
  {
    int v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_57:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2181, v41);
  }

  ++WORD2(v47);
  *(_BYTE *)(v46 + v27) = a1;
  if (HIBYTE(v47))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_59;
  }

  uint64_t v28 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_59:
    int v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_61;
  }

  if (BYTE6(v47) != 2)
  {
    int v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2182, v42);
  }

  ++WORD2(v47);
  *(_BYTE *)(v46 + v28) = a2;
  if (HIBYTE(v47))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_63;
  }

  uint64_t v29 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_63:
    int v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_65;
  }

  if (BYTE6(v47) != 2)
  {
    int v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_65:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2183, v43);
  }

  ++WORD2(v47);
  *(_BYTE *)(v46 + v29) = a3;
  if (HIBYTE(v47))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_67;
  }

  uint64_t v30 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_67:
    uint64_t v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_69;
  }

  if (BYTE6(v47) != 2)
  {
    uint64_t v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_69:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2184, v44);
  }

  ++WORD2(v47);
  *(_BYTE *)(v46 + v30) = a7;
  if (HIBYTE(v47))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_71;
  }

  uint64_t v31 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_71:
    int v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_73;
  }

  if (BYTE6(v47) != 2)
  {
    int v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_73:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2185, v45);
  }

  ++WORD2(v47);
  *(_BYTE *)(v46 + v31) = a8;
  if ((_BYTE)v23)
  {
    uint64_t v23 = v23;
    while (!HIBYTE(v47))
    {
      uint64_t v32 = WORD2(v47);
      if (BYTE6(v47) != 2)
      {
        uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_41;
      }

      char v33 = *a4;
      ++WORD2(v47);
      *(_BYTE *)(v46 + v3pthread_attr_setdetachstate(&v7, 2) = v33;
      if (HIBYTE(v47))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_43:
        uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_45:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2189, v38);
      }

      if (WORD1(v47) - WORD2(v47) <= 1) {
        goto LABEL_43;
      }
      if (BYTE6(v47) != 2)
      {
        uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_45;
      }

      *(_WORD *)(v46 + WORD2(v47)) = *a5;
      unsigned __int16 v34 = WORD2(v47) + 2;
      WORD2(v47) += 2;
      if (HIBYTE(v47))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_47:
        __int16 v39 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_49:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2190, v39);
      }

      if (WORD1(v47) - v34 <= 1) {
        goto LABEL_47;
      }
      if (BYTE6(v47) != 2)
      {
        __int16 v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_49;
      }

      *(_BYTE *)(v46 + v34) = *a6;
      *(_BYTE *)(v46 + WORD2(v47) + 1) = a6[1];
      unsigned __int16 v35 = WORD2(v47) + 2;
      WORD2(v47) += 2;
      if (HIBYTE(v47))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_51:
        int v40 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_53:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2191, v40);
      }

      if (WORD1(v47) - v35 <= 1) {
        goto LABEL_51;
      }
      if (BYTE6(v47) != 2)
      {
        int v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_53;
      }

      *(_BYTE *)(v46 + v35) = *a9;
      *(_BYTE *)(v46 + WORD2(v47) + 1) = a9[1];
      unsigned __int8 v36 = BYTE4(v47) + 2;
      a9 += 2;
      WORD2(v47) += 2;
      a6 += 2;
      ++a5;
      ++a4;
      if (!--v23) {
        return sub_10018BD78(65346, v46, v36, a11, (uint64_t)sub_1000BC408, v20, v21, v22);
      }
    }

    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_39:
    uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_41:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2188, v37);
  }

  unsigned __int8 v36 = BYTE4(v47);
  return sub_10018BD78(65346, v46, v36, a11, (uint64_t)sub_1000BC408, v20, v21, v22);
}

uint64_t sub_1000C1D80(char a1, __int16 a2, char a3, __int16 a4, char a5, uint64_t a6)
{
  uint64_t v26 = 0LL;
  uint64_t v27 = 0LL;
  uint64_t result = sub_10018BCDC(&v26);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v27))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v16 = WORD2(v27);
      if (WORD1(v27) > WORD2(v27))
      {
        if (BYTE6(v27) == 2)
        {
          ++WORD2(v27);
          *(_BYTE *)(v26 + v16) = a1;
          if (HIBYTE(v27))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v27) - WORD2(v27) > 1)
          {
            if (BYTE6(v27) == 2)
            {
              *(_WORD *)(v26 + WORD2(v27)) = a2;
              __int16 v17 = WORD2(v27);
              unsigned __int16 v18 = WORD2(v27) + 2;
              WORD2(v27) += 2;
              if (HIBYTE(v27))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v27) > v18)
              {
                if (BYTE6(v27) == 2)
                {
                  WORD2(v27) = v17 + 3;
                  *(_BYTE *)(v26 + v18) = a3;
                  if (HIBYTE(v27))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else if (WORD1(v27) - WORD2(v27) > 1)
                  {
                    if (BYTE6(v27) == 2)
                    {
                      *(_WORD *)(v26 + WORD2(v27)) = a4;
                      __int16 v19 = WORD2(v27);
                      unsigned __int16 v20 = WORD2(v27) + 2;
                      WORD2(v27) += 2;
                      if (HIBYTE(v27))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }

                      else if (WORD1(v27) > v20)
                      {
                        if (BYTE6(v27) == 2)
                        {
                          WORD2(v27) = v19 + 3;
                          *(_BYTE *)(v26 + v20) = a5;
                          return sub_10018BD78(65354, v26, BYTE4(v27), a6, (uint64_t)sub_1000BC408, v13, v14, v15);
                        }

                        int v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3980,  v25);
                      }

                      int v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_38;
                    }

                    uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3979,  v24);
                  }

                  uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                  goto LABEL_34;
                }

                uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3978,  v23);
              }

              uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_30;
            }

            uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3977,  v22);
          }

          uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_26;
        }

        uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3976, v21);
      }
    }

    uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_22;
  }

  return result;
}

uint64_t sub_1000C2084(__int16 a1, char a2, char a3, uint64_t a4)
{
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t result = sub_10018BCDC(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v19) - WORD2(v19) > 1)
    {
      if (BYTE6(v19) == 2)
      {
        *(_WORD *)(v18 + WORD2(v19)) = a1;
        __int16 v12 = WORD2(v19);
        unsigned __int16 v13 = WORD2(v19) + 2;
        WORD2(v19) += 2;
        if (HIBYTE(v19))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v19) > v13)
        {
          if (BYTE6(v19) == 2)
          {
            WORD2(v19) = v12 + 3;
            *(_BYTE *)(v18 + v13) = a2;
            if (HIBYTE(v19))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else
            {
              uint64_t v14 = WORD2(v19);
              if (WORD1(v19) > WORD2(v19))
              {
                if (BYTE6(v19) == 2)
                {
                  ++WORD2(v19);
                  *(_BYTE *)(v18 + v14) = a3;
                  return sub_10018BD78(65072, v18, BYTE4(v19), a4, (uint64_t)sub_1000BC408, v9, v10, v11);
                }

                __int16 v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3878,  v17);
              }
            }

            __int16 v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_24;
          }

          uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3877, v16);
        }

        uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_20;
      }

      uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3876, v15);
    }

    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000C226C(__int16 a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(_BYTE *)(v14 + v11) = a2;
            return sub_10018BD78(65339, v14, BYTE4(v15), a3, (uint64_t)sub_1000BC408, v7, v8, v9);
          }

          unsigned __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3015, v13);
        }

        unsigned __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }

      __int16 v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3014, v12);
    }

    __int16 v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000C23D8(int a1, uint64_t a2)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  unsigned int v8 = (a1 << 15 >> 31) & 0x80000002;
  if ((a1 & 0x40000) != 0) {
    unsigned int v8 = (a1 << 15 >> 31) & 2 | 0x80000004;
  }
  if ((a1 & 0x100000) != 0) {
    v8 |= 0x80000001;
  }
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v12) - WORD2(v12) > 3)
    {
      if (BYTE6(v12) == 2)
      {
        int v9 = v8 | a1 & 0x15000002;
        *(_BYTE *)(v11 + WORD2(v12)) = v9;
        *(_BYTE *)(v11 + WORD2(v12) + 1) = BYTE1(v8);
        *(_BYTE *)(v11 + WORD2(v12) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(v8);
        *(_BYTE *)(v11 + WORD2(v12) + 3) = HIBYTE(v9);
        WORD2(v12) += 4;
        return sub_10018BD78(65345, v11, BYTE4(v12), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
      }

      __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_14:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1095, v10);
    }

    __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_14;
  }

  return result;
}

uint64_t sub_1000C2524(int a1, int a2, uint64_t a3)
{
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t result = sub_10018BCDC(&v17);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v18))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v18) - WORD2(v18) > 3)
    {
      if (BYTE6(v18) == 2)
      {
        *(_WORD *)(v17 + WORD2(v18)) = a1;
        *(_BYTE *)(v17 + WORD2(v18) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a1);
        *(_BYTE *)(v17 + WORD2(v18) + 3) = HIBYTE(a1);
        unsigned __int16 v10 = WORD2(v18) + 4;
        WORD2(v18) += 4;
        if (HIBYTE(v18))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v18) - v10 > 3)
        {
          if (BYTE6(v18) == 2)
          {
            *(_BYTE *)(v17 + v10) = a2;
            *(_BYTE *)(v17 + WORD2(v18) + 1) = BYTE1(a2);
            *(_BYTE *)(v17 + WORD2(v18) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a2);
            *(_BYTE *)(v17 + WORD2(v18) + 3) = HIBYTE(a2);
            unsigned __int16 v11 = WORD2(v18) + 4;
            WORD2(v18) += 4;
            if (HIBYTE(v18))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v18) - v11 > 3)
            {
              if (BYTE6(v18) == 2)
              {
                *(_BYTE *)(v17 + v11) = 0;
                *(_WORD *)(v17 + WORD2(v18) + 1) = 0;
                *(_BYTE *)(v17 + WORD2(v18) + 3) = 0;
                unsigned __int16 v12 = WORD2(v18) + 4;
                WORD2(v18) += 4;
                if (HIBYTE(v18))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v18) - v12 > 3)
                {
                  if (BYTE6(v18) == 2)
                  {
                    *(_BYTE *)(v17 + v1pthread_attr_setdetachstate(&v7, 2) = 0;
                    *(_WORD *)(v17 + WORD2(v18) + 1) = 0;
                    *(_BYTE *)(v17 + WORD2(v18) + 3) = 0;
                    WORD2(v18) += 4;
                    return sub_10018BD78(64957, v17, BYTE4(v18), a3, (uint64_t)sub_1000BC408, v7, v8, v9);
                  }

                  uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1115,  v16);
                }

                uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                goto LABEL_31;
              }

              uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1114,  v15);
            }

            uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_27;
          }

          uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1113, v14);
        }

        uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_23;
      }

      unsigned __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1112, v13);
    }

    unsigned __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000C285C(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v22 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t result = sub_10018BCDC(&v22);
  if (a1) {
    char v11 = 2;
  }
  else {
    char v11 = 0;
  }
  if (!(_DWORD)result)
  {
    if (HIBYTE(v23))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v12 = WORD2(v23);
      if (WORD1(v23) > WORD2(v23))
      {
        if (BYTE6(v23) == 2)
        {
          ++WORD2(v23);
          *(_BYTE *)(v22 + v1pthread_attr_setdetachstate(&v7, 2) = v11;
          if (HIBYTE(v23))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v23) - WORD2(v23) > 5)
          {
            if (BYTE6(v23) == 2)
            {
              sub_1001F0050(v22 + WORD2(v23), a2, 6uLL);
              unsigned __int16 v13 = WORD2(v23) + 6;
              WORD2(v23) += 6;
              uint64_t v14 = v22;
              if (HIBYTE(v23))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                int v15 = 0;
              }

              else
              {
                int v15 = WORD1(v23) - v13;
              }

              if (v15 < a4)
              {
                uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= (IrkLength)";
              }

              else
              {
                if (BYTE6(v23) == 2)
                {
                  sub_1001F0050(v14 + v13, a3, a4);
                  WORD2(v23) += a4;
                  return sub_10018BD78(65279, v22, BYTE4(v23), a5, (uint64_t)sub_1000BC408, v16, v17, v18);
                }

                uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
              }

              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1196,  v21);
            }

            unsigned __int16 v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1195,  v20);
          }

          unsigned __int16 v20 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_25;
        }

        uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_21:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1194, v19);
      }
    }

    uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_21;
  }

  return result;
}

uint64_t sub_1000C2A6C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (a1) {
    char v7 = 3;
  }
  else {
    char v7 = 1;
  }
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(_BYTE *)(v14 + v8) = v7;
          if (HIBYTE(v15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v15) - WORD2(v15) > 5)
          {
            if (BYTE6(v15) == 2)
            {
              sub_1001F0050(v14 + WORD2(v15), a2, 6uLL);
              WORD2(v15) += 6;
              return sub_10018BD78(65279, v14, BYTE4(v15), a3, (uint64_t)sub_1000BC408, v9, v10, v11);
            }

            unsigned __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1216,  v13);
          }

          unsigned __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_20;
        }

        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1215, v12);
      }
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000C2BDC(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = sub_10018BCDC(&v6);
  if (!(_DWORD)result) {
    return sub_10018BD78(65274, v6, BYTE4(v7), a1, (uint64_t)sub_1000BC408, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1000C2C2C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t result = sub_10018BCDC(&v17);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v18))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v7 = WORD2(v18);
      if (WORD1(v18) > WORD2(v18))
      {
        if (BYTE6(v18) == 2)
        {
          ++WORD2(v18);
          *(_BYTE *)(v17 + v7) = a1;
          v16[0] = BYTE5(a2);
          v16[1] = BYTE4(a2);
          void v16[2] = BYTE3(a2);
          v16[3] = BYTE2(a2);
          v16[4] = BYTE1(a2);
          v16[5] = a2;
          if (HIBYTE(v18))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v18) - WORD2(v18) > 5)
          {
            if (BYTE6(v18) == 2)
            {
              sub_1001F0050(v17 + WORD2(v18), (uint64_t)v16, 6uLL);
              __int16 v11 = WORD2(v18);
              unsigned __int16 v12 = WORD2(v18) + 6;
              WORD2(v18) += 6;
              if (HIBYTE(v18))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v18) > v12)
              {
                if (BYTE6(v18) == 2)
                {
                  WORD2(v18) = v11 + 7;
                  *(_BYTE *)(v17 + v1pthread_attr_setdetachstate(&v7, 2) = BYTE6(a2);
                  return sub_10018BD78(65312, v17, BYTE4(v18), a3, (uint64_t)sub_1000BC408, v8, v9, v10);
                }

                uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1245,  v15);
              }

              uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_24;
            }

            uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1244,  v14);
          }

          uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_20;
        }

        unsigned __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1241, v13);
      }
    }

    unsigned __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000C2E38(uint64_t a1)
{
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t result = sub_10018BCDC(&v19);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v20))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v6 = WORD2(v20);
      if (WORD1(v20) > WORD2(v20))
      {
        if (BYTE6(v20) == 2)
        {
          ++WORD2(v20);
          *(_BYTE *)(v19 + v6) = 2;
          if (HIBYTE(v20))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v7 = WORD2(v20);
            if (WORD1(v20) > WORD2(v20))
            {
              if (BYTE6(v20) == 2)
              {
                ++WORD2(v20);
                *(_BYTE *)(v19 + v7) = 1;
                if (HIBYTE(v20))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else
                {
                  uint64_t v8 = WORD2(v20);
                  if (WORD1(v20) > WORD2(v20))
                  {
                    if (BYTE6(v20) == 2)
                    {
                      ++WORD2(v20);
                      *(_BYTE *)(v19 + v8) = 2;
                      if (HIBYTE(v20))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }

                      else
                      {
                        uint64_t v9 = WORD2(v20);
                        if (WORD1(v20) > WORD2(v20))
                        {
                          if (BYTE6(v20) == 2)
                          {
                            ++WORD2(v20);
                            *(_BYTE *)(v19 + v9) = 0;
                            if (HIBYTE(v20))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }

                            else if (WORD1(v20) - WORD2(v20) > 1)
                            {
                              if (BYTE6(v20) == 2)
                              {
                                *(_WORD *)(v19 + WORD2(v20)) = 0;
                                unsigned __int16 v10 = WORD2(v20) + 2;
                                WORD2(v20) += 2;
                                if (HIBYTE(v20))
                                {
                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/aci/aci_vsc.c");
                                }

                                else if (WORD1(v20) - v10 > 3)
                                {
                                  if (BYTE6(v20) == 2)
                                  {
                                    *(_BYTE *)(v19 + v10) = -1;
                                    *(_BYTE *)(v19 + WORD2(v20) + 1) = -1;
                                    *(_BYTE *)(v19 + WORD2(v20) + pthread_attr_setdetachstate(&v7, 2) = -1;
                                    *(_BYTE *)(v19 + WORD2(v20) + 3) = -1;
                                    unsigned __int16 v11 = WORD2(v20) + 4;
                                    WORD2(v20) += 4;
                                    if (HIBYTE(v20))
                                    {
                                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }

                                    else if (WORD1(v20) - v11 > 3)
                                    {
                                      if (BYTE6(v20) == 2)
                                      {
                                        *(_BYTE *)(v19 + v11) = -1;
                                        *(_BYTE *)(v19 + WORD2(v20) + 1) = -1;
                                        *(_BYTE *)(v19 + WORD2(v20) + pthread_attr_setdetachstate(&v7, 2) = -1;
                                        *(_BYTE *)(v19 + WORD2(v20) + 3) = -1;
                                        WORD2(v20) += 4;
                                        return sub_10018BD78( 64998,  v19,  BYTE4(v20),  a1,  (uint64_t)sub_1000BC408,  v3,  v4,  v5);
                                      }

                                      uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1269,  v18);
                                    }

                                    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                    goto LABEL_52;
                                  }

                                  uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1268,  v17);
                                }

                                uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                goto LABEL_48;
                              }

                              uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1267,  v16);
                            }

                            uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= (2)";
                            goto LABEL_44;
                          }

                          uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1266,  v15);
                        }
                      }

                      uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_40;
                    }

                    uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1265,  v14);
                  }
                }

                uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_36;
              }

              unsigned __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1264,  v13);
            }
          }

          unsigned __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_32;
        }

        unsigned __int16 v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1263, v12);
      }
    }

    unsigned __int16 v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_28;
  }

  return result;
}

uint64_t sub_1000C3258(void (*a1)(void))
{
  return 0LL;
}

uint64_t sub_1000C3278(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v31 = 0LL;
  uint64_t v32 = 0LL;
  uint64_t result = sub_10018BCDC(&v31);
  if (!(_DWORD)result)
  {
    if (a3)
    {
      if (HIBYTE(v32))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
      }

      else
      {
        unsigned int v12 = WORD2(v32);
        if (WORD1(v32) > WORD2(v32))
        {
          if (BYTE6(v32) == 2)
          {
            char v13 = 0;
            goto LABEL_11;
          }

          uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_68:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1296, v28);
        }
      }

      uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
      goto LABEL_68;
    }

    if (HIBYTE(v32))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      unsigned int v12 = WORD2(v32);
      if (WORD1(v32) > WORD2(v32))
      {
        if (BYTE6(v32) == 2)
        {
          char v13 = 1;
LABEL_11:
          WORD2(v3pthread_attr_setdetachstate(&v7, 2) = v12 + 1;
          *(_BYTE *)(v31 + v1pthread_attr_setdetachstate(&v7, 2) = v13;
          if (a2 != 2)
          {
            if (a2 != 16) {
              sub_1001EE2A0();
            }
            if (HIBYTE(v32))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else
            {
              unsigned int v14 = WORD2(v32);
              if (WORD1(v32) > WORD2(v32))
              {
                char v15 = BYTE6(v32);
                if (BYTE6(v32) != 2)
                {
                  uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                  goto LABEL_64;
                }

uint64_t sub_1000C37B0(uint64_t a1)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t result = sub_10018BCDC(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v10) - WORD2(v10) > 3)
    {
      if (BYTE6(v10) == 2)
      {
        *(_BYTE *)(v9 + WORD2(v10)) = -1;
        *(_BYTE *)(v9 + WORD2(v10) + 1) = -1;
        *(_BYTE *)(v9 + WORD2(v10) + pthread_attr_setdetachstate(&v7, 2) = -1;
        *(_BYTE *)(v9 + WORD2(v10) + 3) = -1;
        unsigned __int16 v6 = WORD2(v10) + 4;
        WORD2(v10) += 4;
        if (HIBYTE(v10))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v10) - v6 > 3)
        {
          if (BYTE6(v10) == 2)
          {
            *(_BYTE *)(v9 + v6) = -1;
            *(_BYTE *)(v9 + WORD2(v10) + 1) = -1;
            *(_BYTE *)(v9 + WORD2(v10) + pthread_attr_setdetachstate(&v7, 2) = -1;
            *(_BYTE *)(v9 + WORD2(v10) + 3) = -1;
            WORD2(v10) += 4;
            return sub_10018BD78(64993, v9, BYTE4(v10), a1, (uint64_t)sub_1000D2FD0, v3, v4, v5);
          }

          uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1428, v8);
        }

        uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_17;
      }

      uint64_t v7 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1427, v7);
    }

    uint64_t v7 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000C3964(const void *a1, int a2, char a3, uint64_t a4)
{
  LODWORD(v6) = a2;
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t result = sub_10018BCDC(&v21);
  else {
    size_t v6 = v6;
  }
  if ((_DWORD)result) {
    return result;
  }
  uint64_t v9 = v21;
  uint64_t v10 = WORD2(v22);
  if (HIBYTE(v22))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v11 = 0;
  }

  else
  {
    int v11 = WORD1(v22) - WORD2(v22);
  }

  if (v11 < (int)v6)
  {
    uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    goto LABEL_25;
  }

  if (BYTE6(v22) != 2)
  {
    uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1450, v19);
  }

  memmove((void *)(v9 + v10), a1, v6);
  WORD2(v22) += v6;
  if (WORD1(v22) <= 0x15u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1451,  "(size_t)(22) <= (size_t)((bs).__size)");
  }
  WORD2(v2pthread_attr_setdetachstate(&v7, 2) = 22;
  uint64_t v12 = v21;
  if (HIBYTE(v22))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    unsigned int v13 = 0;
  }

  else
  {
    unsigned int v13 = WORD1(v22) - 22;
  }

  if (v13 < v6)
  {
    uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    goto LABEL_29;
  }

  if (BYTE6(v22) != 2)
  {
    uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1452, v20);
  }

  memset((void *)(v12 + 22), 255, v6);
  WORD2(v22) += v6;
  unsigned int v17 = WORD1(v22);
  if (WORD1(v22) <= 0x2Au) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1453,  "(size_t)(43) <= (size_t)((bs).__size)");
  }
  WORD2(v2pthread_attr_setdetachstate(&v7, 2) = 43;
  if (HIBYTE(v22))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_32:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1454,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }

  if (WORD1(v22) <= 0x2Bu) {
    goto LABEL_32;
  }
  uint64_t v18 = v21;
  WORD2(v2pthread_attr_setdetachstate(&v7, 2) = 44;
  *(_BYTE *)(v21 + 43) = a3;
  if ((v17 & 0xFFFC) == 0x2C) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1455,  "ByteStream_NumReadBytesAvail(bs) >= 4");
  }
  *(_DWORD *)(v18 + 44) = -1;
  WORD2(v2pthread_attr_setdetachstate(&v7, 2) = 48;
  if (v17 <= 0x33) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1456,  "ByteStream_NumReadBytesAvail(bs) >= 4");
  }
  *(_DWORD *)(v18 + 48) = -1;
  WORD2(v2pthread_attr_setdetachstate(&v7, 2) = 52;
  return sub_10018BD78(64992, v18, 52LL, a4, (uint64_t)sub_1000BC408, v14, v15, v16);
}

uint64_t sub_1000C3C00(const void *a1, int a2, uint64_t a3)
{
  LODWORD(v4) = a2;
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t result = sub_10018BCDC(&v19);
  else {
    size_t v4 = v4;
  }
  if ((_DWORD)result) {
    return result;
  }
  uint64_t v7 = v19;
  uint64_t v8 = WORD2(v20);
  if (HIBYTE(v20))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v9 = 0;
  }

  else
  {
    int v9 = WORD1(v20) - WORD2(v20);
  }

  if (v9 < (int)v4)
  {
    unsigned int v17 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    goto LABEL_24;
  }

  if (BYTE6(v20) != 2)
  {
    unsigned int v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1477, v17);
  }

  memmove((void *)(v7 + v8), a1, v4);
  WORD2(v20) += v4;
  if (WORD1(v20) <= 0x15u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1478,  "(size_t)(22) <= (size_t)((bs).__size)");
  }
  WORD2(v20) = 22;
  uint64_t v10 = v19;
  if (HIBYTE(v20))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    unsigned int v11 = 0;
  }

  else
  {
    unsigned int v11 = WORD1(v20) - 22;
  }

  if (v11 < v4)
  {
    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    goto LABEL_28;
  }

  if (BYTE6(v20) != 2)
  {
    uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1479, v18);
  }

  memset((void *)(v10 + 22), 255, v4);
  WORD2(v20) += v4;
  int v15 = WORD1(v20);
  if (WORD1(v20) <= 0x2Au) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1480,  "(size_t)(43) <= (size_t)((bs).__size)");
  }
  WORD2(v20) = 43;
  if (HIBYTE(v20))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_31:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1481,  "ByteStream_NumReadBytesAvail(bs) >= 4");
  }

  if (WORD1(v20) <= 0x2Eu) {
    goto LABEL_31;
  }
  uint64_t v16 = v19;
  *(_DWORD *)(v19 + 43) = -1;
  WORD2(v20) = 47;
  if ((v15 - 51) >= 0xFFFFFFFC) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1482,  "ByteStream_NumReadBytesAvail(bs) >= 4");
  }
  *(_DWORD *)(v16 + 47) = -1;
  WORD2(v20) = 51;
  return sub_10018BD78(64955, v16, 51LL, a3, (uint64_t)sub_1000BC408, v12, v13, v14);
}

uint64_t sub_1000C3E6C(uint64_t a1)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t result = sub_10018BCDC(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v10) - WORD2(v10) > 3)
    {
      if (BYTE6(v10) == 2)
      {
        *(_BYTE *)(v9 + WORD2(v10)) = -1;
        *(_BYTE *)(v9 + WORD2(v10) + 1) = -1;
        *(_BYTE *)(v9 + WORD2(v10) + pthread_attr_setdetachstate(&v7, 2) = -1;
        *(_BYTE *)(v9 + WORD2(v10) + 3) = -1;
        unsigned __int16 v6 = WORD2(v10) + 4;
        WORD2(v10) += 4;
        if (HIBYTE(v10))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v10) - v6 > 3)
        {
          if (BYTE6(v10) == 2)
          {
            *(_BYTE *)(v9 + v6) = -1;
            *(_BYTE *)(v9 + WORD2(v10) + 1) = -1;
            *(_BYTE *)(v9 + WORD2(v10) + pthread_attr_setdetachstate(&v7, 2) = -1;
            *(_BYTE *)(v9 + WORD2(v10) + 3) = -1;
            WORD2(v10) += 4;
            return sub_10018BD78(64985, v9, BYTE4(v10), a1, (uint64_t)sub_1000BC408, v3, v4, v5);
          }

          uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1502, v8);
        }

        uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_17;
      }

      uint64_t v7 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1501, v7);
    }

    uint64_t v7 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000C4020( const void *a1, int a2, const void *a3, int a4, char a5, char a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  LODWORD(v13) = a4;
  LODWORD(v15) = a2;
  uint64_t v39 = 0LL;
  uint64_t v40 = 0LL;
  uint64_t result = sub_10018BCDC(&v39);
  else {
    size_t v15 = v15;
  }
  else {
    size_t v13 = v13;
  }
  if ((_DWORD)result) {
    return result;
  }
  if (HIBYTE(v40))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_43;
  }

  uint64_t v18 = WORD2(v40);
  if (WORD1(v40) <= WORD2(v40))
  {
LABEL_43:
    unsigned __int16 v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_45;
  }

  if (BYTE6(v40) != 2)
  {
    unsigned __int16 v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1836, v34);
  }

  else {
    char v19 = v13;
  }
  ++WORD2(v40);
  *(_BYTE *)(v39 + v18) = v19;
  uint64_t v20 = v39;
  uint64_t v21 = WORD2(v40);
  if (HIBYTE(v40))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v22 = 0;
  }

  else
  {
    int v22 = WORD1(v40) - WORD2(v40);
  }

  if (v22 < (int)v15)
  {
    unsigned __int16 v35 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    goto LABEL_48;
  }

  if (BYTE6(v40) != 2)
  {
    unsigned __int16 v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1837, v35);
  }

  memmove((void *)(v20 + v21), a1, v15);
  WORD2(v40) += v15;
  if (WORD1(v40) <= 0x16u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1838,  "(size_t)(23) <= (size_t)((bs).__size)");
  }
  WORD2(v40) = 23;
  uint64_t v23 = v39;
  if (HIBYTE(v40))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    unsigned int v24 = 0;
  }

  else
  {
    unsigned int v24 = WORD1(v40) - 23;
  }

  if (v24 < v13)
  {
    unsigned __int8 v36 = "ByteStream_NumReadBytesAvail(bs) >= (maskLen)";
    goto LABEL_52;
  }

  if (BYTE6(v40) != 2)
  {
    unsigned __int8 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1839, v36);
  }

  memmove((void *)(v23 + 23), a3, v13);
  WORD2(v40) += v13;
  unsigned int v28 = WORD1(v40);
  if (WORD1(v40) <= 0x2Cu) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1840,  "(size_t)(45) <= (size_t)((bs).__size)");
  }
  WORD2(v40) = 45;
  if (HIBYTE(v40))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_55;
  }

  if (WORD1(v40) == 45)
  {
LABEL_55:
    uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_57;
  }

  if (BYTE6(v40) != 2)
  {
    uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_57:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1841, v37);
  }

  uint64_t v29 = v39;
  WORD2(v40) = 46;
  *(_BYTE *)(v39 + 45) = a5;
  if (v28 <= 0x2E) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1842,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  unsigned int v30 = 47;
  WORD2(v40) = 47;
  *(_BYTE *)(v29 + 46) = a6;
  if (a7)
  {
    if (v28 <= 0x30) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1844,  "ByteStream_NumReadBytesAvail(bs) >= 2");
    }
    *(_WORD *)(v29 + 47) = 0;
    unsigned int v30 = 49;
    WORD2(v40) = 49;
  }

  if ((int)(v28 - v30) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1845,  "ByteStream_NumReadBytesAvail(bs) >= 4");
  }
  *(_BYTE *)(v29 + v30) = -1;
  *(_BYTE *)(v39 + WORD2(v40) + 1) = -1;
  *(_BYTE *)(v39 + WORD2(v40) + pthread_attr_setdetachstate(&v7, 2) = -1;
  *(_BYTE *)(v39 + WORD2(v40) + 3) = -1;
  unsigned __int16 v31 = WORD2(v40) + 4;
  WORD2(v40) += 4;
  if (HIBYTE(v40))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_61;
  }

  if (WORD1(v40) - v31 <= 3)
  {
LABEL_61:
    uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_63;
  }

  if (BYTE6(v40) != 2)
  {
    uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_63:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1846, v38);
  }

  *(_BYTE *)(v39 + v31) = -1;
  *(_BYTE *)(v39 + WORD2(v40) + 1) = -1;
  *(_BYTE *)(v39 + WORD2(v40) + pthread_attr_setdetachstate(&v7, 2) = -1;
  *(_BYTE *)(v39 + WORD2(v40) + 3) = -1;
  unsigned __int8 v32 = BYTE4(v40) + 4;
  WORD2(v40) += 4;
  if (a7) {
    __int16 v33 = -553;
  }
  else {
    __int16 v33 = -554;
  }
  return sub_10018BD78(v33, v39, v32, a10, (uint64_t)sub_1000BC408, v25, v26, v27);
}

uint64_t sub_1000C44A4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t result = sub_10018BCDC(&v19);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v20))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v7 = WORD2(v20);
      if (WORD1(v20) > WORD2(v20))
      {
        if (BYTE6(v20) == 2)
        {
          ++WORD2(v20);
          *(_BYTE *)(v19 + v7) = 12;
          v18[0] = BYTE5(a1);
          v18[1] = BYTE4(a1);
          v18[2] = BYTE3(a1);
          v18[3] = BYTE2(a1);
          void v18[4] = BYTE1(a1);
          v18[5] = a1;
          if (HIBYTE(v20))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v20) - WORD2(v20) > 5)
          {
            if (BYTE6(v20) == 2)
            {
              sub_1001F0050(v19 + WORD2(v20), (uint64_t)v18, 6uLL);
              __int16 v11 = WORD2(v20);
              unsigned __int16 v12 = WORD2(v20) + 6;
              WORD2(v20) += 6;
              if (HIBYTE(v20))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v20) > v12)
              {
                if (BYTE6(v20) == 2)
                {
                  WORD2(v20) = v11 + 7;
                  *(_BYTE *)(v19 + v1pthread_attr_setdetachstate(&v7, 2) = BYTE6(a1);
                  if (HIBYTE(v20))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else
                  {
                    uint64_t v13 = WORD2(v20);
                    if (WORD1(v20) > WORD2(v20))
                    {
                      if (BYTE6(v20) == 2)
                      {
                        ++WORD2(v20);
                        *(_BYTE *)(v19 + v13) = a2;
                        return sub_10018BD78(65017, v19, BYTE4(v20), a3, (uint64_t)sub_1000D2FD0, v8, v9, v10);
                      }

                      unsigned int v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2059,  v17);
                    }
                  }

                  unsigned int v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_31;
                }

                uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2058,  v16);
              }

              uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_27;
            }

            size_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2057,  v15);
          }

          size_t v15 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_23;
        }

        uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2054, v14);
      }
    }

    uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000C472C(uint64_t a1)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t result = sub_10018BCDC(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v10) - WORD2(v10) > 3)
    {
      if (BYTE6(v10) == 2)
      {
        *(_BYTE *)(v9 + WORD2(v10)) = -1;
        *(_BYTE *)(v9 + WORD2(v10) + 1) = -1;
        *(_BYTE *)(v9 + WORD2(v10) + pthread_attr_setdetachstate(&v7, 2) = -1;
        *(_BYTE *)(v9 + WORD2(v10) + 3) = -1;
        unsigned __int16 v6 = WORD2(v10) + 4;
        WORD2(v10) += 4;
        if (HIBYTE(v10))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v10) - v6 > 3)
        {
          if (BYTE6(v10) == 2)
          {
            *(_BYTE *)(v9 + v6) = -1;
            *(_BYTE *)(v9 + WORD2(v10) + 1) = -1;
            *(_BYTE *)(v9 + WORD2(v10) + pthread_attr_setdetachstate(&v7, 2) = -1;
            *(_BYTE *)(v9 + WORD2(v10) + 3) = -1;
            WORD2(v10) += 4;
            return sub_10018BD78(64946, v9, BYTE4(v10), a1, (uint64_t)sub_1000BC408, v3, v4, v5);
          }

          uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1871, v8);
        }

        uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_17;
      }

      uint64_t v7 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1870, v7);
    }

    uint64_t v7 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000C48E0(char a1, uint64_t a2)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_BYTE *)(v14 + WORD2(v15)) = -1;
        *(_BYTE *)(v14 + WORD2(v15) + 1) = -1;
        __int16 v8 = WORD2(v15);
        unsigned __int16 v9 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v15) > v9)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v8 + 3;
            *(_BYTE *)(v14 + v9) = a1;
            if (HIBYTE(v15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else
            {
              uint64_t v10 = WORD2(v15);
              if (WORD1(v15) > WORD2(v15))
              {
                if (BYTE6(v15) == 2)
                {
                  ++WORD2(v15);
                  *(_BYTE *)(v14 + v10) = 2;
                  return sub_10018BD78(64958, v14, BYTE4(v15), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
                }

                uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1180,  v13);
              }
            }

            uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_24;
          }

          unsigned __int16 v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1179, v12);
        }

        unsigned __int16 v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_20;
      }

      __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1178, v11);
    }

    __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000C4ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = 0LL;
  uint64_t v25 = 0LL;
  uint64_t result = sub_10018BCDC(&v24);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v25))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v5 = WORD2(v25);
      if (WORD1(v25) > WORD2(v25))
      {
        if (BYTE6(v25) == 2)
        {
          char v6 = *(_BYTE *)(a1 + 20);
          ++WORD2(v25);
          *(_BYTE *)(v24 + v5) = v6;
          if (HIBYTE(v25))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v25) - WORD2(v25) > 5)
          {
            if (BYTE6(v25) == 2)
            {
              sub_1001F0050(v24 + WORD2(v25), *(void *)a1, 6uLL);
              unsigned __int16 v10 = WORD2(v25) + 6;
              WORD2(v25) += 6;
              if (HIBYTE(v25))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v25) - v10 > 1)
              {
                if (BYTE6(v25) == 2)
                {
                  *(_BYTE *)(v24 + v10) = *(_BYTE *)(a1 + 8);
                  *(_BYTE *)(v24 + WORD2(v25) + 1) = *(_BYTE *)(a1 + 9);
                  unsigned __int16 v11 = WORD2(v25) + 2;
                  WORD2(v25) += 2;
                  if (HIBYTE(v25))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else if (WORD1(v25) - v11 > 1)
                  {
                    if (BYTE6(v25) == 2)
                    {
                      *(_BYTE *)(v24 + v11) = *(_BYTE *)(a1 + 10);
                      *(_BYTE *)(v24 + WORD2(v25) + 1) = *(_BYTE *)(a1 + 11);
                      unsigned __int16 v12 = WORD2(v25) + 2;
                      WORD2(v25) += 2;
                      if (HIBYTE(v25))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }

                      else if (WORD1(v25) - v12 > 1)
                      {
                        if (BYTE6(v25) == 2)
                        {
                          *(_BYTE *)(v24 + v1pthread_attr_setdetachstate(&v7, 2) = *(_BYTE *)(a1 + 12);
                          *(_BYTE *)(v24 + WORD2(v25) + 1) = *(_BYTE *)(a1 + 13);
                          unsigned __int16 v13 = WORD2(v25) + 2;
                          WORD2(v25) += 2;
                          if (HIBYTE(v25))
                          {
                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                          }

                          else if (WORD1(v25) - v13 > 1)
                          {
                            if (BYTE6(v25) == 2)
                            {
                              *(_BYTE *)(v24 + v13) = *(_BYTE *)(a1 + 14);
                              *(_BYTE *)(v24 + WORD2(v25) + 1) = *(_BYTE *)(a1 + 15);
                              unsigned __int16 v14 = WORD2(v25) + 2;
                              WORD2(v25) += 2;
                              if (HIBYTE(v25))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }

                              else if (WORD1(v25) - v14 > 1)
                              {
                                if (BYTE6(v25) == 2)
                                {
                                  *(_BYTE *)(v24 + v14) = *(_BYTE *)(a1 + 16);
                                  *(_BYTE *)(v24 + WORD2(v25) + 1) = *(_BYTE *)(a1 + 17);
                                  unsigned __int16 v15 = WORD2(v25) + 2;
                                  WORD2(v25) += 2;
                                  if (HIBYTE(v25))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/aci/aci_vsc.c");
                                  }

                                  else if (WORD1(v25) - v15 > 1)
                                  {
                                    if (BYTE6(v25) == 2)
                                    {
                                      *(_BYTE *)(v24 + v15) = *(_BYTE *)(a1 + 18);
                                      *(_BYTE *)(v24 + WORD2(v25) + 1) = *(_BYTE *)(a1 + 19);
                                      WORD2(v25) += 2;
                                      return sub_10018BD78( 65278,  v24,  BYTE4(v25),  a2,  (uint64_t)sub_1000BC408,  v7,  v8,  v9);
                                    }

                                    uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1892,  v23);
                                  }

                                  uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                  goto LABEL_59;
                                }

                                int v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1891,  v22);
                              }

                              int v22 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                              goto LABEL_55;
                            }

                            uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1890,  v21);
                          }

                          uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_51;
                        }

                        uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_47:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1889,  v20);
                      }

                      uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_47;
                    }

                    uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1888,  v19);
                  }

                  uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                  goto LABEL_43;
                }

                uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_39:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1887,  v18);
              }

              uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_39;
            }

            unsigned int v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1886,  v17);
          }

          unsigned int v17 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_35;
        }

        uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1885, v16);
      }
    }

    uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_31;
  }

  return result;
}

uint64_t sub_1000C4FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  uint64_t result = sub_10018BCDC(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v5 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13))
      {
        if (BYTE6(v13) == 2)
        {
          ++WORD2(v13);
          *(_BYTE *)(v12 + v5) = BYTE6(a1);
          v11[0] = BYTE5(a1);
          v11[1] = BYTE4(a1);
          v11[2] = BYTE3(a1);
          _OWORD v11[3] = BYTE2(a1);
          v11[4] = BYTE1(a1);
          v11[5] = a1;
          if (HIBYTE(v13))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v13) - WORD2(v13) > 5)
          {
            if (BYTE6(v13) == 2)
            {
              sub_1001F0050(v12 + WORD2(v13), (uint64_t)v11, 6uLL);
              WORD2(v13) += 6;
              return sub_10018BD78(64986, v12, BYTE4(v13), a2, (uint64_t)sub_1000BC408, v6, v7, v8);
            }

            unsigned __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1913,  v10);
          }

          unsigned __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_17;
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1909, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000C5130(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  uint64_t result = sub_10018BCDC(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v5 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13))
      {
        if (BYTE6(v13) == 2)
        {
          ++WORD2(v13);
          *(_BYTE *)(v12 + v5) = BYTE6(a1);
          v11[0] = BYTE5(a1);
          v11[1] = BYTE4(a1);
          v11[2] = BYTE3(a1);
          _OWORD v11[3] = BYTE2(a1);
          v11[4] = BYTE1(a1);
          v11[5] = a1;
          if (HIBYTE(v13))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v13) - WORD2(v13) > 5)
          {
            if (BYTE6(v13) == 2)
            {
              sub_1001F0050(v12 + WORD2(v13), (uint64_t)v11, 6uLL);
              WORD2(v13) += 6;
              return sub_10018BD78(64991, v12, BYTE4(v13), a2, (uint64_t)sub_1000BC408, v6, v7, v8);
            }

            unsigned __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1933,  v10);
          }

          unsigned __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_17;
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1929, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000C52B8(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = sub_10018BCDC(&v6);
  if (!(_DWORD)result) {
    return sub_10018BD78(64969, v6, BYTE4(v7), a1, (uint64_t)sub_1000BC408, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1000C5308( const void *a1, int a2, const void *a3, int a4, char a5, char a6, int a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, __int16 a15, char a16, char a17, char a18, uint64_t a19)
{
  uint64_t v64 = 0LL;
  uint64_t v65 = 0LL;
  uint64_t result = sub_10018BCDC(&v64);
  if ((_DWORD)result) {
    return result;
  }
  if (HIBYTE(v65))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_49;
  }

  uint64_t v28 = WORD2(v65);
  if (WORD1(v65) <= WORD2(v65))
  {
LABEL_49:
    unsigned __int8 v52 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_51;
  }

  if (BYTE6(v65) != 2)
  {
    unsigned __int8 v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1961, v52);
  }

  ++WORD2(v65);
  *(_BYTE *)(v64 + v28) = a8;
  v63[0] = a14;
  v63[1] = a13;
  v63[2] = a12;
  v63[3] = a11;
  v63[4] = a10;
  v63[5] = a9;
  if (HIBYTE(v65))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_53;
  }

  if (WORD1(v65) - WORD2(v65) <= 5)
  {
LABEL_53:
    unsigned __int8 v53 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
    goto LABEL_55;
  }

  if (BYTE6(v65) != 2)
  {
    unsigned __int8 v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1964, v53);
  }

  sub_1001F0050(v64 + WORD2(v65), (uint64_t)v63, 6uLL);
  unsigned __int16 v29 = WORD2(v65) + 6;
  WORD2(v65) += 6;
  uint64_t v30 = v64;
  if (HIBYTE(v65))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v31 = 0;
  }

  else
  {
    int v31 = WORD1(v65) - v29;
  }

  if (v31 < a2)
  {
    int v54 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    goto LABEL_58;
  }

  if (BYTE6(v65) != 2)
  {
    int v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1965, v54);
  }

  memmove((void *)(v30 + v29), a1, a2);
  unsigned __int16 v32 = WORD2(v65) + a2;
  WORD2(v65) += a2;
  uint64_t v33 = v64;
  if (HIBYTE(v65))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v34 = 0;
  }

  else
  {
    int v34 = WORD1(v65) - v32;
  }

  int v35 = 25 - a2;
  if (v34 < v35)
  {
    BOOL v55 = "ByteStream_NumReadBytesAvail(bs) >= (((22)+(3)) - dataLen)";
    goto LABEL_61;
  }

  if (BYTE6(v65) != 2)
  {
    BOOL v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1966, v55);
  }

  bzero((void *)(v33 + v32), v35);
  unsigned __int16 v36 = WORD2(v65) + v35;
  WORD2(v65) = v36;
  uint64_t v37 = v64;
  if (HIBYTE(v65))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v38 = 0;
  }

  else
  {
    int v38 = WORD1(v65) - v36;
  }

  if (v38 < a4)
  {
    unint64_t v56 = "ByteStream_NumReadBytesAvail(bs) >= (maskLen)";
    goto LABEL_64;
  }

  if (BYTE6(v65) != 2)
  {
    unint64_t v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_64:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1967, v56);
  }

  memmove((void *)(v37 + v36), a3, a4);
  unsigned __int16 v39 = WORD2(v65) + a4;
  WORD2(v65) += a4;
  uint64_t v40 = v64;
  if (HIBYTE(v65))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v41 = 0;
  }

  else
  {
    int v41 = WORD1(v65) - v39;
  }

  int v42 = 25 - a4;
  if (v41 < v42)
  {
    uint64_t v57 = "ByteStream_NumReadBytesAvail(bs) >= (((22)+(3)) - maskLen)";
    goto LABEL_67;
  }

  if (BYTE6(v65) != 2)
  {
    uint64_t v57 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_67:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1968, v57);
  }

  bzero((void *)(v40 + v39), v42);
  unsigned __int16 v46 = WORD2(v65) + v42;
  WORD2(v65) += v42;
  if (HIBYTE(v65))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_69;
  }

  if (WORD1(v65) <= v46)
  {
LABEL_69:
    uint64_t v58 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_71;
  }

  if (BYTE6(v65) != 2)
  {
    uint64_t v58 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_71:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1969, v58);
  }

  WORD2(v65) = v46 + 1;
  *(_BYTE *)(v64 + v46) = a6;
  if (HIBYTE(v65))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_73;
  }

  uint64_t v47 = WORD2(v65);
  if (WORD1(v65) <= WORD2(v65))
  {
LABEL_73:
    uint64_t v59 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_75;
  }

  if (BYTE6(v65) != 2)
  {
    uint64_t v59 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_75:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1970, v59);
  }

  ++WORD2(v65);
  *(_BYTE *)(v64 + v47) = a5;
  if (HIBYTE(v65))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_77;
  }

  uint64_t v48 = WORD2(v65);
  if (WORD1(v65) <= WORD2(v65))
  {
LABEL_77:
    uint64_t v60 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_79;
  }

  if (BYTE6(v65) != 2)
  {
    uint64_t v60 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_79:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1971, v60);
  }

  ++WORD2(v65);
  *(_BYTE *)(v64 + v48) = a16;
  if (HIBYTE(v65))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_81;
  }

  uint64_t v49 = WORD2(v65);
  if (WORD1(v65) <= WORD2(v65))
  {
LABEL_81:
    uint64_t v61 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_83;
  }

  if (BYTE6(v65) != 2)
  {
    uint64_t v61 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_83:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1972, v61);
  }

  ++WORD2(v65);
  *(_BYTE *)(v64 + v49) = a17;
  if (HIBYTE(v65))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_85;
  }

  uint64_t v50 = WORD2(v65);
  if (WORD1(v65) <= WORD2(v65))
  {
LABEL_85:
    uint64_t v62 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_87;
  }

  if (BYTE6(v65) != 2)
  {
    uint64_t v62 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_87:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1973, v62);
  }

  ++WORD2(v65);
  *(_BYTE *)(v64 + v50) = a18;
  if (a7) {
    __int16 v51 = -83;
  }
  else {
    __int16 v51 = -84;
  }
  return sub_10018BD78(v51, v64, BYTE4(v65), a19, (uint64_t)sub_1000BC408, v43, v44, v45);
}

uint64_t sub_1000C597C(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = sub_10018BCDC(&v6);
  if (!(_DWORD)result) {
    return sub_10018BD78(65341, v6, BYTE4(v7), a1, (uint64_t)sub_1000D2FD0, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1000C59CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  uint64_t result = sub_10018BCDC(&v8);
  if (!(_DWORD)result) {
    return sub_10018BD78(64924, v8, BYTE4(v9), a3, (uint64_t)sub_1000D30DC, v5, v6, v7);
  }
  return result;
}

uint64_t sub_1000C5A1C(char a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v10 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(_BYTE *)(v14 + v10) = a1;
          if (HIBYTE(v15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v11 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(_BYTE *)(v14 + v11) = a2;
                return sub_10018BD78(65064, v14, BYTE4(v15), a3, (uint64_t)sub_1000BC408, v7, v8, v9);
              }

              uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3824,  v13);
            }
          }

          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_17;
        }

        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3823, v12);
      }
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000C5B6C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t result = sub_10018BCDC(&v19);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v20))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v9 = WORD2(v20);
      if (WORD1(v20) > WORD2(v20))
      {
        if (BYTE6(v20) == 2)
        {
          ++WORD2(v20);
          *(_BYTE *)(v19 + v9) = a1;
          v18[0] = BYTE5(a2);
          v18[1] = BYTE4(a2);
          v18[2] = BYTE3(a2);
          v18[3] = BYTE2(a2);
          void v18[4] = BYTE1(a2);
          v18[5] = a2;
          if (HIBYTE(v20))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v20) - WORD2(v20) > 5)
          {
            if (BYTE6(v20) == 2)
            {
              sub_1001F0050(v19 + WORD2(v20), (uint64_t)v18, 6uLL);
              __int16 v13 = WORD2(v20);
              unsigned __int16 v14 = WORD2(v20) + 6;
              WORD2(v20) += 6;
              if (HIBYTE(v20))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v20) > v14)
              {
                if (BYTE6(v20) == 2)
                {
                  WORD2(v20) = v13 + 7;
                  *(_BYTE *)(v19 + v14) = a3;
                  return sub_10018BD78(65344, v19, BYTE4(v20), a4, (uint64_t)sub_1000BC408, v10, v11, v12);
                }

                unsigned int v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2098,  v17);
              }

              unsigned int v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_24;
            }

            uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2097,  v16);
          }

          uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_20;
        }

        uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2094, v15);
      }
    }

    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000C5D78(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(65343, v10, BYTE4(v11), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2112, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000C5E44(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t result = sub_10018BCDC(&v21);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v22))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v5 = WORD2(v22);
      if (WORD1(v22) > WORD2(v22))
      {
        if (BYTE6(v22) == 2)
        {
          char v6 = *(_BYTE *)(a1 + 16);
          ++WORD2(v22);
          *(_BYTE *)(v21 + v5) = v6;
          if (HIBYTE(v22))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v22) - WORD2(v22) > 5)
          {
            if (BYTE6(v22) == 2)
            {
              sub_1001F0050(v21 + WORD2(v22), *(void *)(a1 + 8), 6uLL);
              __int16 v10 = WORD2(v22);
              unsigned __int16 v11 = WORD2(v22) + 6;
              WORD2(v22) += 6;
              if (HIBYTE(v22))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v22) > v11)
              {
                if (BYTE6(v22) == 2)
                {
                  char v12 = *(_BYTE *)(a1 + 17);
                  WORD2(v2pthread_attr_setdetachstate(&v7, 2) = v10 + 7;
                  *(_BYTE *)(v21 + v11) = v12;
                  if (HIBYTE(v22))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else if (WORD1(v22) > WORD2(v22))
                  {
                    if (BYTE6(v22) == 2)
                    {
                      *(_BYTE *)(v21 + WORD2(v22)) = *(_BYTE *)(a1 + 18);
                      __int16 v13 = WORD2(v22);
                      unsigned __int16 v14 = ++WORD2(v22);
                      if (HIBYTE(v22))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }

                      else if (WORD1(v22) > v14)
                      {
                        if (BYTE6(v22) == 2)
                        {
                          char v15 = *(_BYTE *)(a1 + 19);
                          WORD2(v2pthread_attr_setdetachstate(&v7, 2) = v13 + 2;
                          *(_BYTE *)(v21 + v14) = v15;
                          return sub_10018BD78(65470, v21, BYTE4(v22), a2, (uint64_t)sub_1000BC408, v7, v8, v9);
                        }

                        uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2131,  v20);
                      }

                      uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_38;
                    }

                    uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2130,  v19);
                  }

                  uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                  goto LABEL_34;
                }

                uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2129,  v18);
              }

              uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_30;
            }

            unsigned int v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2128,  v17);
          }

          unsigned int v17 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_26;
        }

        uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2127, v16);
      }
    }

    uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_22;
  }

  return result;
}

uint64_t sub_1000C611C(uint64_t a1, unsigned int a2, unsigned int a3, char a4, char a5, char a6, uint64_t a7)
{
  BOOL v14 = a2 == 2;
  uint64_t v46 = 0LL;
  uint64_t v47 = 0LL;
  uint64_t result = sub_10018BCDC(&v46);
  if ((_DWORD)result) {
    return result;
  }
  if (HIBYTE(v47))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_60;
  }

  uint64_t v19 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_60:
    unsigned __int16 v39 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_62;
  }

  if (BYTE6(v47) != 2)
  {
    unsigned __int16 v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1336, v39);
  }

  ++WORD2(v47);
  *(_BYTE *)(v46 + v19) = a3;
  if (HIBYTE(v47))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_64;
  }

  if (WORD1(v47) - WORD2(v47) <= 5)
  {
LABEL_64:
    uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= (6)";
    goto LABEL_66;
  }

  if (BYTE6(v47) != 2)
  {
    uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1337, v40);
  }

  uint64_t v20 = v46 + WORD2(v47);
  *(_WORD *)(v20 + 4) = 0;
  *(_DWORD *)uint64_t v20 = 0;
  __int16 v21 = WORD2(v47);
  unsigned __int16 v22 = WORD2(v47) + 6;
  WORD2(v47) += 6;
  if (HIBYTE(v47))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_68;
  }

  if (WORD1(v47) <= v22)
  {
LABEL_68:
    int v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_70;
  }

  if (BYTE6(v47) != 2)
  {
    int v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_70:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1338, v41);
  }

  WORD2(v47) = v21 + 7;
  *(_BYTE *)(v46 + v2pthread_attr_setdetachstate(&v7, 2) = 2;
  if (HIBYTE(v47))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_72;
  }

  uint64_t v23 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_72:
    int v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_74;
  }

  if (BYTE6(v47) != 2)
  {
    int v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_74:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1339, v42);
  }

  ++WORD2(v47);
  *(_BYTE *)(v46 + v23) = 2 * v14;
  if (HIBYTE(v47))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_76;
  }

  uint64_t v24 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_76:
    uint64_t v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_78;
  }

  if (BYTE6(v47) != 2)
  {
    uint64_t v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_78:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1341, v43);
  }

  ++WORD2(v47);
  *(_BYTE *)(v46 + v24) = a4;
  if (HIBYTE(v47))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_80;
  }

  uint64_t v25 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_80:
    uint64_t v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_82;
  }

  if (BYTE6(v47) != 2)
  {
    uint64_t v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_82:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1342, v44);
  }

  ++WORD2(v47);
  *(_BYTE *)(v46 + v25) = a5;
  if (HIBYTE(v47))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_84;
  }

  uint64_t v26 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_84:
    uint64_t v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_86;
  }

  if (BYTE6(v47) != 2)
  {
    uint64_t v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_86:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1343, v45);
  }

  ++WORD2(v47);
  *(_BYTE *)(v46 + v26) = a6;
  if (a3 <= 1)
  {
    if (a2 == 16 || a2 == 2)
    {
      if (a2 == 2)
      {
        uint64_t v27 = 1LL;
        while (!HIBYTE(v47))
        {
          uint64_t v28 = WORD2(v47);
          if (BYTE6(v47) != 2)
          {
            uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_54;
          }

          char v29 = *(_BYTE *)(a1 + v27);
          ++WORD2(v47);
          *(_BYTE *)(v46 + v28) = v29;
          if (--v27 == -1)
          {
            int v30 = -14;
            while (!HIBYTE(v47))
            {
              uint64_t v31 = WORD2(v47);
              if (BYTE6(v47) != 2)
              {
                int v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                goto LABEL_58;
              }

              ++WORD2(v47);
              *(_BYTE *)(v46 + v31) = 0;
              if (__CFADD__(v30++, 1)) {
                return sub_10018BD78(64998, v46, BYTE4(v47), a7, (uint64_t)sub_1000BC408, v16, v17, v18);
              }
            }

            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_56:
            int v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_58:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1353,  v38);
          }
        }

        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_52:
        uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_54:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1350, v37);
      }

      goto LABEL_40;
    }

    sub_1001EE2A0();
    if (a2)
    {
LABEL_40:
      uint64_t v33 = a2;
      while (!HIBYTE(v47))
      {
        uint64_t v34 = WORD2(v47);
        if (BYTE6(v47) != 2)
        {
          unsigned __int16 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_50;
        }

        char v35 = *(_BYTE *)(a1 - 1 + v33--);
        ++WORD2(v47);
        *(_BYTE *)(v46 + v34) = v35;
      }

      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_48:
      unsigned __int16 v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_50:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1358, v36);
    }
  }

  return sub_10018BD78(64998, v46, BYTE4(v47), a7, (uint64_t)sub_1000BC408, v16, v17, v18);
}

uint64_t sub_1000C66D4( uint64_t a1, unsigned int a2, unsigned int a3, char a4, char a5, char a6, int a7, const void *a8, void *__src, uint64_t a10)
{
  LODWORD(v11) = a7;
  BOOL v18 = a2 == 2;
  uint64_t v60 = 0LL;
  uint64_t v61 = 0LL;
  uint64_t result = sub_10018BCDC(&v60);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v61))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v23 = WORD2(v61);
      if (WORD1(v61) > WORD2(v61))
      {
        if (BYTE6(v61) == 2)
        {
          ++WORD2(v61);
          *(_BYTE *)(v60 + v23) = a3;
          if (HIBYTE(v61))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v61) - WORD2(v61) > 5)
          {
            if (BYTE6(v61) == 2)
            {
              uint64_t v24 = v60 + WORD2(v61);
              *(_WORD *)(v24 + 4) = 0;
              *(_DWORD *)uint64_t v24 = 0;
              __int16 v25 = WORD2(v61);
              unsigned __int16 v26 = WORD2(v61) + 6;
              WORD2(v61) += 6;
              if (HIBYTE(v61))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v61) > v26)
              {
                if (BYTE6(v61) == 2)
                {
                  WORD2(v61) = v25 + 7;
                  *(_BYTE *)(v60 + v26) = 2;
                  if (HIBYTE(v61))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else
                  {
                    uint64_t v27 = WORD2(v61);
                    if (WORD1(v61) > WORD2(v61))
                    {
                      if (BYTE6(v61) == 2)
                      {
                        ++WORD2(v61);
                        *(_BYTE *)(v60 + v27) = 2 * v18;
                        if (HIBYTE(v61))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }

                        else
                        {
                          uint64_t v28 = WORD2(v61);
                          if (WORD1(v61) > WORD2(v61))
                          {
                            if (BYTE6(v61) == 2)
                            {
                              ++WORD2(v61);
                              *(_BYTE *)(v60 + v28) = a4;
                              if (HIBYTE(v61))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }

                              else
                              {
                                uint64_t v29 = WORD2(v61);
                                if (WORD1(v61) > WORD2(v61))
                                {
                                  if (BYTE6(v61) == 2)
                                  {
                                    ++WORD2(v61);
                                    *(_BYTE *)(v60 + v29) = a5;
                                    if (HIBYTE(v61))
                                    {
                                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }

                                    else
                                    {
                                      uint64_t v30 = WORD2(v61);
                                      if (WORD1(v61) > WORD2(v61))
                                      {
                                        if (BYTE6(v61) == 2)
                                        {
                                          ++WORD2(v61);
                                          *(_BYTE *)(v60 + v30) = a6;
                                          if (a3 >= 2)
                                          {
                                            unsigned __int8 v37 = BYTE4(v61);
                                            return sub_10018BD78( 64985,  v60,  v37,  a10,  (uint64_t)sub_1000BC408,  v20,  v21,  v22);
                                          }

                                          if (a2 == 16 || a2 == 2)
                                          {
                                            if (a2 == 2)
                                            {
                                              uint64_t v31 = 1LL;
                                              while (!HIBYTE(v61))
                                              {
                                                uint64_t v32 = WORD2(v61);
                                                if (BYTE6(v61) != 2)
                                                {
                                                  uint64_t v48 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                                  goto LABEL_72;
                                                }

                                                char v33 = *(_BYTE *)(a1 + v31);
                                                ++WORD2(v61);
                                                *(_BYTE *)(v60 + v3pthread_attr_setdetachstate(&v7, 2) = v33;
                                                if (--v31 == -1)
                                                {
                                                  int v34 = -14;
                                                  while (!HIBYTE(v61))
                                                  {
                                                    uint64_t v35 = WORD2(v61);
                                                    if (BYTE6(v61) != 2)
                                                    {
                                                      uint64_t v49 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                                      goto LABEL_76;
                                                    }

                                                    ++WORD2(v61);
                                                    *(_BYTE *)(v60 + v35) = 0;
                                                    if (__CFADD__(v34++, 1)) {
                                                      goto LABEL_46;
                                                    }
                                                  }

                                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_74:
                                                  uint64_t v49 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_76:
                                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1396,  v49);
                                                }
                                              }

                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/aci/aci_vsc.c");
LABEL_70:
                                              uint64_t v48 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_72:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1393,  v48);
                                            }

                                            goto LABEL_41;
                                          }

                                          sub_1001EE2A0();
                                          if (a2)
                                          {
LABEL_41:
                                            uint64_t v38 = a2;
                                            while (!HIBYTE(v61))
                                            {
                                              uint64_t v39 = WORD2(v61);
                                              if (BYTE6(v61) != 2)
                                              {
                                                uint64_t v47 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                                goto LABEL_68;
                                              }

                                              char v40 = *(_BYTE *)(a1 - 1 + v38--);
                                              ++WORD2(v61);
                                              *(_BYTE *)(v60 + v39) = v40;
                                            }

                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/aci/aci_vsc.c");
LABEL_66:
                                            uint64_t v47 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_68:
                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1401,  v47);
                                          }

uint64_t sub_1000C6E5C(__int16 a1, char a2, char a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  uint64_t v27 = 0LL;
  uint64_t v28 = 0LL;
  uint64_t result = sub_10018BCDC(&v27);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v28))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v28) - WORD2(v28) > 1)
    {
      if (BYTE6(v28) == 2)
      {
        *(_WORD *)(v27 + WORD2(v28)) = a1;
        __int16 v17 = WORD2(v28);
        unsigned __int16 v18 = WORD2(v28) + 2;
        WORD2(v28) += 2;
        if (HIBYTE(v28))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v28) > v18)
        {
          if (BYTE6(v28) == 2)
          {
            WORD2(v28) = v17 + 3;
            *(_BYTE *)(v27 + v18) = a2;
            if (HIBYTE(v28))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else
            {
              uint64_t v19 = WORD2(v28);
              if (WORD1(v28) > WORD2(v28))
              {
                if (BYTE6(v28) == 2)
                {
                  ++WORD2(v28);
                  *(_BYTE *)(v27 + v19) = a3;
                  if (HIBYTE(v28))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else
                  {
                    uint64_t v20 = WORD2(v28);
                    if (WORD1(v28) > WORD2(v28))
                    {
                      if (BYTE6(v28) == 2)
                      {
                        ++WORD2(v28);
                        *(_BYTE *)(v27 + v20) = a5;
                        if (HIBYTE(v28))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }

                        else
                        {
                          uint64_t v21 = WORD2(v28);
                          if (WORD1(v28) > WORD2(v28))
                          {
                            if (BYTE6(v28) == 2)
                            {
                              ++WORD2(v28);
                              *(_BYTE *)(v27 + v21) = a6;
                              return sub_10018BD78(65051, v27, BYTE4(v28), a7, (uint64_t)sub_1000BC408, v14, v15, v16);
                            }

                            unsigned __int16 v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2078,  v26);
                          }
                        }

                        unsigned __int16 v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_38;
                      }

                      __int16 v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2077,  v25);
                    }
                  }

                  __int16 v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_34;
                }

                uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2075,  v24);
              }
            }

            uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_30;
          }

          uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2074, v23);
        }

        uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_26;
      }

      uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2073, v22);
    }

    uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_22;
  }

  return result;
}

uint64_t sub_1000C7144(char a1, uint64_t a2)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(_BYTE *)(v11 + v8) = a1;
          if (HIBYTE(v12))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v12) > WORD2(v12))
          {
            if (BYTE6(v12) == 2)
            {
              *(_BYTE *)(v11 + WORD2(v12)) = 0;
              ++WORD2(v12);
              return sub_10018BD78(64928, v11, BYTE4(v12), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
            }

            __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2279,  v10);
          }

          __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
          goto LABEL_17;
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2278, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000C728C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = 0LL;
  unsigned __int16 v26 = 0LL;
  uint64_t v24 = 0LL;
  uint64_t v6 = sub_10010EEE0(a1, (uint64_t *)&v26);
  if (!(_DWORD)v6)
  {
    uint64_t v7 = sub_10018BCDC(&v24);
    if ((_DWORD)v7) {
      return v7;
    }
    if (HIBYTE(v25))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v25) - WORD2(v25) > 1)
    {
      if (BYTE6(v25) == 2)
      {
        *(_WORD *)(v24 + WORD2(v25)) = *v26;
        __int16 v19 = WORD2(v25);
        unsigned __int16 v20 = WORD2(v25) + 2;
        WORD2(v25) += 2;
        if (HIBYTE(v25))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v25) > v20)
        {
          if (BYTE6(v25) == 2)
          {
            WORD2(v25) = v19 + 3;
            *(_BYTE *)(v24 + v20) = a2;
            return sub_10018BD78(65065, v24, BYTE4(v25), a4, (uint64_t)sub_1000BC408, v16, v17, v18);
          }

          uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_21:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2316, v23);
        }

        uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_21;
      }

      uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2315, v22);
    }

    uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_17;
  }

  uint64_t v7 = v6;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"VSC Error %!", v8, v9, v10, v11, v12, v13, v14, v7);
    uint64_t v15 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  return v7;
}

uint64_t sub_1000C7464(char a1, _WORD *a2, uint64_t a3)
{
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t result = sub_10018BCDC(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v10 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16))
      {
        if (BYTE6(v16) == 2)
        {
          ++WORD2(v16);
          *(_BYTE *)(v15 + v10) = a1;
          if (HIBYTE(v16))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v16) - WORD2(v16) > 1)
          {
            if (BYTE6(v16) == 2)
            {
              *(_WORD *)(v15 + WORD2(v16)) = *a2;
              unsigned __int16 v11 = WORD2(v16) + 2;
              WORD2(v16) += 2;
              if (HIBYTE(v16))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v16) - v11 > 3)
              {
                if (BYTE6(v16) == 2)
                {
                  *(_BYTE *)(v15 + v11) = -1;
                  *(_BYTE *)(v15 + WORD2(v16) + 1) = -1;
                  *(_BYTE *)(v15 + WORD2(v16) + pthread_attr_setdetachstate(&v7, 2) = -1;
                  *(_BYTE *)(v15 + WORD2(v16) + 3) = -1;
                  WORD2(v16) += 4;
                  return sub_10018BD78(65041, v15, BYTE4(v16), a3, (uint64_t)sub_1000BC408, v7, v8, v9);
                }

                uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2334,  v14);
              }

              uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_24;
            }

            uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2333,  v13);
          }

          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_20;
        }

        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2332, v12);
      }
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000C7688(int a1, uint64_t a2)
{
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  uint64_t result = sub_10018BCDC(&v20);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v21))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v21);
      if (WORD1(v21) > WORD2(v21))
      {
        if (BYTE6(v21) == 2)
        {
          ++WORD2(v21);
          *(_BYTE *)(v20 + v8) = a1 == 1;
          if (HIBYTE(v21))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v9 = WORD2(v21);
            if (WORD1(v21) > WORD2(v21))
            {
              if (BYTE6(v21) == 2)
              {
                ++WORD2(v21);
                *(_BYTE *)(v20 + v9) = 0;
                if (HIBYTE(v21))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else
                {
                  uint64_t v10 = WORD2(v21);
                  if (WORD1(v21) > WORD2(v21))
                  {
                    if (BYTE6(v21) == 2)
                    {
                      ++WORD2(v21);
                      *(_BYTE *)(v20 + v10) = -1;
                      if (HIBYTE(v21))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }

                      else
                      {
                        uint64_t v11 = WORD2(v21);
                        if (WORD1(v21) > WORD2(v21))
                        {
                          if (BYTE6(v21) == 2)
                          {
                            ++WORD2(v21);
                            *(_BYTE *)(v20 + v11) = -1;
                            if (HIBYTE(v21))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }

                            else
                            {
                              uint64_t v12 = WORD2(v21);
                              if (WORD1(v21) > WORD2(v21))
                              {
                                if (BYTE6(v21) == 2)
                                {
                                  ++WORD2(v21);
                                  *(_BYTE *)(v20 + v1pthread_attr_setdetachstate(&v7, 2) = -1;
                                  if (HIBYTE(v21))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/aci/aci_vsc.c");
                                  }

                                  else
                                  {
                                    uint64_t v13 = WORD2(v21);
                                    if (WORD1(v21) > WORD2(v21))
                                    {
                                      if (BYTE6(v21) == 2)
                                      {
                                        ++WORD2(v21);
                                        *(_BYTE *)(v20 + v13) = -1;
                                        return sub_10018BD78( 65040,  v20,  BYTE4(v21),  a2,  (uint64_t)sub_1000BC408,  v5,  v6,  v7);
                                      }

                                      __int16 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2378,  v19);
                                    }
                                  }

                                  __int16 v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_45;
                                }

                                uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2377,  v18);
                              }
                            }

                            uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_41;
                          }

                          uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2376,  v17);
                        }
                      }

                      uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_37;
                    }

                    uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2375,  v16);
                  }
                }

                uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_33;
              }

              uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2374,  v15);
            }
          }

          uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_29;
        }

        uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2373, v14);
      }
    }

    uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_25;
  }

  return result;
}

uint64_t sub_1000C79C4(_WORD *a1, uint64_t a2)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t result = sub_10018BCDC(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = *a1;
        WORD2(v10) += 2;
        return sub_10018BD78(65020, v9, BYTE4(v10), a2, (uint64_t)sub_1000D3A00, v5, v6, v7);
      }

      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3141, v8);
    }

    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000C7AB0(_WORD *a1, char a2, __int16 a3, __int16 a4, __int16 a5, __int16 a6, uint64_t a7)
{
  uint64_t v31 = 0LL;
  uint64_t v32 = 0LL;
  uint64_t result = sub_10018BCDC(&v31);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v32))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v32) - WORD2(v32) > 1)
    {
      if (BYTE6(v32) == 2)
      {
        *(_WORD *)(v31 + WORD2(v32)) = *a1;
        __int16 v18 = WORD2(v32);
        unsigned __int16 v19 = WORD2(v32) + 2;
        WORD2(v32) += 2;
        if (HIBYTE(v32))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v32) > v19)
        {
          if (BYTE6(v32) == 2)
          {
            WORD2(v3pthread_attr_setdetachstate(&v7, 2) = v18 + 3;
            *(_BYTE *)(v31 + v19) = a2;
            if (HIBYTE(v32))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else
            {
              uint64_t v20 = WORD2(v32);
              if (WORD1(v32) > WORD2(v32))
              {
                if (BYTE6(v32) == 2)
                {
                  ++WORD2(v32);
                  *(_BYTE *)(v31 + v20) = 0;
                  if (HIBYTE(v32))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else if (WORD1(v32) - WORD2(v32) > 1)
                  {
                    if (BYTE6(v32) == 2)
                    {
                      *(_WORD *)(v31 + WORD2(v32)) = a3;
                      unsigned __int16 v21 = WORD2(v32) + 2;
                      WORD2(v32) += 2;
                      if (HIBYTE(v32))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }

                      else if (WORD1(v32) - v21 > 1)
                      {
                        if (BYTE6(v32) == 2)
                        {
                          *(_BYTE *)(v31 + v21) = a4;
                          *(_BYTE *)(v31 + WORD2(v32) + 1) = HIBYTE(a4);
                          unsigned __int16 v22 = WORD2(v32) + 2;
                          WORD2(v32) += 2;
                          if (HIBYTE(v32))
                          {
                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                          }

                          else if (WORD1(v32) - v22 > 1)
                          {
                            if (BYTE6(v32) == 2)
                            {
                              *(_BYTE *)(v31 + v2pthread_attr_setdetachstate(&v7, 2) = a5;
                              *(_BYTE *)(v31 + WORD2(v32) + 1) = HIBYTE(a5);
                              unsigned __int16 v23 = WORD2(v32) + 2;
                              WORD2(v32) += 2;
                              if (HIBYTE(v32))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }

                              else if (WORD1(v32) - v23 > 1)
                              {
                                if (BYTE6(v32) == 2)
                                {
                                  *(_BYTE *)(v31 + v23) = a6;
                                  *(_BYTE *)(v31 + WORD2(v32) + 1) = HIBYTE(a6);
                                  WORD2(v32) += 2;
                                  return sub_10018BD78( 65294,  v31,  BYTE4(v32),  a7,  (uint64_t)sub_1000BC408,  v15,  v16,  v17);
                                }

                                uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2580,  v30);
                              }

                              uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                              goto LABEL_52;
                            }

                            uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2579,  v29);
                          }

                          uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_48;
                        }

                        uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2578,  v28);
                      }

                      uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_44;
                    }

                    uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2577,  v27);
                  }

                  uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                  goto LABEL_40;
                }

                unsigned __int16 v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2576,  v26);
              }
            }

            unsigned __int16 v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_36;
          }

          uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2575, v25);
        }

        uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_32;
      }

      uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2574, v24);
    }

    uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_28;
  }

  return result;
}

uint64_t sub_1000C7F08(__int16 a1, uint64_t a2)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t result = sub_10018BCDC(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        WORD2(v10) += 2;
        return sub_10018BD78(64916, v9, BYTE4(v10), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
      }

      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2634, v8);
    }

    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000C7FF0(int a1, uint64_t a2)
{
  uint64_t v39 = 0LL;
  uint64_t v40 = 0LL;
  uint64_t result = sub_10018BCDC(&v39);
  if (!(_DWORD)result)
  {
    switch(a1)
    {
      case 145:
        LOWORD(result) = -731;
        return sub_10018BD78(result, v39, BYTE4(v40), a2, (uint64_t)sub_1000BCE94, v5, v6, v7);
      case 146:
        LOWORD(result) = -730;
        return sub_10018BD78(result, v39, BYTE4(v40), a2, (uint64_t)sub_1000BCE94, v5, v6, v7);
      case 147:
        LOWORD(result) = -729;
        return sub_10018BD78(result, v39, BYTE4(v40), a2, (uint64_t)sub_1000BCE94, v5, v6, v7);
      case 148:
      case 149:
      case 150:
      case 151:
      case 152:
      case 153:
        if (HIBYTE(v40))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else
        {
          uint64_t v8 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              ++WORD2(v40);
              *(_BYTE *)(v39 + v8) = 0;
              if (HIBYTE(v40))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else
              {
                uint64_t v9 = WORD2(v40);
                if (WORD1(v40) > WORD2(v40))
                {
                  if (BYTE6(v40) == 2)
                  {
                    ++WORD2(v40);
                    *(_BYTE *)(v39 + v9) = 1;
                    if (HIBYTE(v40))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }

                    else
                    {
                      uint64_t v10 = WORD2(v40);
                      if (WORD1(v40) > WORD2(v40))
                      {
                        if (BYTE6(v40) == 2)
                        {
                          ++WORD2(v40);
                          *(_BYTE *)(v39 + v10) = 2;
                          if (HIBYTE(v40))
                          {
                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                          }

                          else
                          {
                            uint64_t v11 = WORD2(v40);
                            if (WORD1(v40) > WORD2(v40))
                            {
                              if (BYTE6(v40) == 2)
                              {
                                ++WORD2(v40);
                                *(_BYTE *)(v39 + v11) = 3;
                                if (HIBYTE(v40))
                                {
                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/aci/aci_vsc.c");
                                }

                                else
                                {
                                  uint64_t v12 = WORD2(v40);
                                  if (WORD1(v40) > WORD2(v40))
                                  {
                                    if (BYTE6(v40) == 2)
                                    {
                                      ++WORD2(v40);
                                      *(_BYTE *)(v39 + v1pthread_attr_setdetachstate(&v7, 2) = 4;
                                      if (HIBYTE(v40))
                                      {
                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/aci/aci_vsc.c");
                                      }

                                      else
                                      {
                                        uint64_t v13 = WORD2(v40);
                                        if (WORD1(v40) > WORD2(v40))
                                        {
                                          if (BYTE6(v40) == 2)
                                          {
                                            ++WORD2(v40);
                                            *(_BYTE *)(v39 + v13) = 5;
                                            LOWORD(result) = -724;
                                            return sub_10018BD78( result,  v39,  BYTE4(v40),  a2,  (uint64_t)sub_1000BCE94,  v5,  v6,  v7);
                                          }

                                          uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_98:
                                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3178,  v27);
                                        }
                                      }

                                      uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                      goto LABEL_98;
                                    }

                                    unsigned __int16 v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_94:
                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3177,  v26);
                                  }
                                }

                                unsigned __int16 v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                goto LABEL_94;
                              }

                              uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_90:
                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3176,  v25);
                            }
                          }

                          uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                          goto LABEL_90;
                        }

                        uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_86:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3175,  v24);
                      }
                    }

                    uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_86;
                  }

                  unsigned __int16 v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_82:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3174,  v23);
                }
              }

              unsigned __int16 v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_82;
            }

            unsigned __int16 v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_78:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3173,  v22);
          }
        }

        unsigned __int16 v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_78;
      case 154:
        if (HIBYTE(v40))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else
        {
          uint64_t v14 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              ++WORD2(v40);
              *(_BYTE *)(v39 + v14) = 0;
LABEL_58:
              LOWORD(result) = -722;
              return sub_10018BD78(result, v39, BYTE4(v40), a2, (uint64_t)sub_1000BCE94, v5, v6, v7);
            }

            uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_102:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3183,  v28);
          }
        }

        uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_102;
      case 155:
        if (HIBYTE(v40))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 1;
LABEL_57:
              *(_BYTE *)(v16 + v15) = v17;
              goto LABEL_58;
            }

            uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_106:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3187,  v29);
          }
        }

        uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_106;
      case 156:
        if (HIBYTE(v40))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 2;
              goto LABEL_57;
            }

            uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_110:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3191,  v30);
          }
        }

        uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_110;
      case 157:
        if (HIBYTE(v40))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 3;
              goto LABEL_57;
            }

            uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_114:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3195,  v31);
          }
        }

        uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_114;
      case 158:
        if (HIBYTE(v40))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 4;
              goto LABEL_57;
            }

            uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_118:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3199,  v32);
          }
        }

        uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_118;
      case 159:
        if (HIBYTE(v40))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 5;
              goto LABEL_57;
            }

            char v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_122:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3203,  v33);
          }
        }

        char v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_122;
      case 161:
        if (HIBYTE(v40))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 6;
              goto LABEL_57;
            }

            int v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_126:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3207,  v34);
          }
        }

        int v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_126;
      case 162:
        if (HIBYTE(v40))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 7;
              goto LABEL_57;
            }

            uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_142:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3211,  v35);
          }
        }

        uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_142;
      case 163:
        if (HIBYTE(v40))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else
        {
          uint64_t v18 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              ++WORD2(v40);
              *(_BYTE *)(v39 + v18) = 0;
LABEL_72:
              LOWORD(result) = -736;
              return sub_10018BD78(result, v39, BYTE4(v40), a2, (uint64_t)sub_1000BCE94, v5, v6, v7);
            }

            unsigned __int16 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_132:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3216,  v36);
          }
        }

        unsigned __int16 v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_132;
      case 164:
        if (HIBYTE(v40))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else
        {
          uint64_t v19 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v20 = v39;
              ++WORD2(v40);
              char v21 = 1;
LABEL_71:
              *(_BYTE *)(v20 + v19) = v21;
              goto LABEL_72;
            }

            unsigned __int8 v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_136:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3220,  v37);
          }
        }

        unsigned __int8 v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_136;
      case 165:
        if (HIBYTE(v40))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else
        {
          uint64_t v19 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v20 = v39;
              ++WORD2(v40);
              char v21 = 2;
              goto LABEL_71;
            }

            uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_140:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3224,  v38);
          }
        }

        uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_140;
      default:
        return sub_10018BD78(result, v39, BYTE4(v40), a2, (uint64_t)sub_1000BCE94, v5, v6, v7);
    }
  }

  return result;
}

uint64_t sub_1000C88C8(_WORD *a1, char a2, char a3, char a4, uint64_t a5)
{
  uint64_t v22 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t result = sub_10018BCDC(&v22);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v23))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v23) - WORD2(v23) > 1)
    {
      if (BYTE6(v23) == 2)
      {
        *(_WORD *)(v22 + WORD2(v23)) = *a1;
        __int16 v14 = WORD2(v23);
        unsigned __int16 v15 = WORD2(v23) + 2;
        WORD2(v23) += 2;
        if (HIBYTE(v23))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v23) > v15)
        {
          if (BYTE6(v23) == 2)
          {
            WORD2(v23) = v14 + 3;
            *(_BYTE *)(v22 + v15) = a2;
            if (HIBYTE(v23))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else
            {
              uint64_t v16 = WORD2(v23);
              if (WORD1(v23) > WORD2(v23))
              {
                if (BYTE6(v23) == 2)
                {
                  ++WORD2(v23);
                  *(_BYTE *)(v22 + v16) = a3;
                  if (HIBYTE(v23))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else
                  {
                    uint64_t v17 = WORD2(v23);
                    if (WORD1(v23) > WORD2(v23))
                    {
                      if (BYTE6(v23) == 2)
                      {
                        ++WORD2(v23);
                        *(_BYTE *)(v22 + v17) = a4;
                        return sub_10018BD78(65276, v22, BYTE4(v23), a5, (uint64_t)sub_1000BC408, v11, v12, v13);
                      }

                      char v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2398,  v21);
                    }
                  }

                  char v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_31;
                }

                uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2397,  v20);
              }
            }

            uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_27;
          }

          uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2396, v19);
        }

        uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_23;
      }

      uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2395, v18);
    }

    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000C8B38(char *a1, uint64_t a2)
{
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  uint64_t result = sub_10018BCDC(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v5 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13))
      {
        if (BYTE6(v13) == 2)
        {
          char v6 = *a1;
          ++WORD2(v13);
          *(_BYTE *)(v12 + v5) = v6;
          if (HIBYTE(v13))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v13) - WORD2(v13) > 5)
          {
            if (BYTE6(v13) == 2)
            {
              sub_1001F0050(v12 + WORD2(v13), (uint64_t)(a1 + 1), 6uLL);
              WORD2(v13) += 6;
              return sub_10018BD78(64826, v12, BYTE4(v13), a2, (uint64_t)sub_1000D3B58, v7, v8, v9);
            }

            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2414,  v11);
          }

          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_17;
        }

        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2413, v10);
      }
    }

    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000C8C94(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(64827, v10, BYTE4(v11), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2429, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000C8D60(char a1, __int16 a2, __int16 a3, char a4, char a5, char a6, uint64_t a7)
{
  uint64_t v30 = 0LL;
  uint64_t v31 = 0LL;
  uint64_t result = sub_10018BCDC(&v30);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v31))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v18 = WORD2(v31);
      if (WORD1(v31) > WORD2(v31))
      {
        if (BYTE6(v31) == 2)
        {
          ++WORD2(v31);
          *(_BYTE *)(v30 + v18) = a1;
          if (HIBYTE(v31))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v31) - WORD2(v31) > 1)
          {
            if (BYTE6(v31) == 2)
            {
              *(_WORD *)(v30 + WORD2(v31)) = a2;
              unsigned __int16 v19 = WORD2(v31) + 2;
              WORD2(v31) += 2;
              if (HIBYTE(v31))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v31) - v19 > 1)
              {
                if (BYTE6(v31) == 2)
                {
                  *(_BYTE *)(v30 + v19) = a3;
                  *(_BYTE *)(v30 + WORD2(v31) + 1) = HIBYTE(a3);
                  __int16 v20 = WORD2(v31);
                  unsigned __int16 v21 = WORD2(v31) + 2;
                  WORD2(v31) += 2;
                  if (HIBYTE(v31))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else if (WORD1(v31) > v21)
                  {
                    if (BYTE6(v31) == 2)
                    {
                      WORD2(v31) = v20 + 3;
                      *(_BYTE *)(v30 + v21) = a4;
                      if (HIBYTE(v31))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }

                      else
                      {
                        uint64_t v22 = WORD2(v31);
                        if (WORD1(v31) > WORD2(v31))
                        {
                          if (BYTE6(v31) == 2)
                          {
                            ++WORD2(v31);
                            *(_BYTE *)(v30 + v2pthread_attr_setdetachstate(&v7, 2) = a5;
                            if (HIBYTE(v31))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }

                            else
                            {
                              uint64_t v23 = WORD2(v31);
                              if (WORD1(v31) > WORD2(v31))
                              {
                                if (BYTE6(v31) == 2)
                                {
                                  ++WORD2(v31);
                                  *(_BYTE *)(v30 + v23) = a6;
                                  return sub_10018BD78( 64828,  v30,  BYTE4(v31),  a7,  (uint64_t)sub_1000BC408,  v15,  v16,  v17);
                                }

                                uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2449,  v29);
                              }
                            }

                            uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_45;
                          }

                          uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2448,  v28);
                        }
                      }

                      uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_41;
                    }

                    uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2447,  v27);
                  }

                  uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_37;
                }

                unsigned __int16 v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2446,  v26);
              }

              unsigned __int16 v26 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_33;
            }

            uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2445,  v25);
          }

          uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_29;
        }

        uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2444, v24);
      }
    }

    uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_25;
  }

  return result;
}

uint64_t sub_1000C90E8(char a1, unsigned int a2, const void *a3, uint64_t a4)
{
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t result = sub_10018BCDC(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v9 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19))
      {
        if (BYTE6(v19) == 2)
        {
          ++WORD2(v19);
          *(_BYTE *)(v18 + v9) = a1;
          if (HIBYTE(v19))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v10 = WORD2(v19);
            if (WORD1(v19) > WORD2(v19))
            {
              if (BYTE6(v19) == 2)
              {
                if (a2 >= 0x1F) {
                  char v11 = 31;
                }
                else {
                  char v11 = a2;
                }
                ++WORD2(v19);
                *(_BYTE *)(v18 + v10) = v11;
                if (HIBYTE(v19))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v19) - WORD2(v19) > 30)
                {
                  if (BYTE6(v19) == 2)
                  {
                    memmove((void *)(v18 + WORD2(v19)), a3, 0x1FuLL);
                    WORD2(v19) += 31;
                    return sub_10018BD78(64829, v18, BYTE4(v19), a4, (uint64_t)sub_1000BC408, v12, v13, v14);
                  }

                  uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2466,  v17);
                }

                uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= (31)";
                goto LABEL_27;
              }

              uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2465,  v16);
            }
          }

          uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }

        uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2464, v15);
      }
    }

    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000C92D4(char a1, unsigned int a2, const void *a3, uint64_t a4)
{
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t result = sub_10018BCDC(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v9 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19))
      {
        if (BYTE6(v19) == 2)
        {
          ++WORD2(v19);
          *(_BYTE *)(v18 + v9) = a1;
          if (HIBYTE(v19))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v10 = WORD2(v19);
            if (WORD1(v19) > WORD2(v19))
            {
              if (BYTE6(v19) == 2)
              {
                if (a2 >= 0x1F) {
                  char v11 = 31;
                }
                else {
                  char v11 = a2;
                }
                ++WORD2(v19);
                *(_BYTE *)(v18 + v10) = v11;
                if (HIBYTE(v19))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v19) - WORD2(v19) > 30)
                {
                  if (BYTE6(v19) == 2)
                  {
                    memmove((void *)(v18 + WORD2(v19)), a3, 0x1FuLL);
                    WORD2(v19) += 31;
                    return sub_10018BD78(64830, v18, BYTE4(v19), a4, (uint64_t)sub_1000BC408, v12, v13, v14);
                  }

                  uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2483,  v17);
                }

                uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= (31)";
                goto LABEL_27;
              }

              uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2482,  v16);
            }
          }

          uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }

        uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2481, v15);
      }
    }

    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000C94C0(char a1, char a2, int a3, char a4, uint64_t a5)
{
  uint64_t v22 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t result = sub_10018BCDC(&v22);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v23))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v14 = WORD2(v23);
      if (WORD1(v23) > WORD2(v23))
      {
        if (BYTE6(v23) == 2)
        {
          ++WORD2(v23);
          *(_BYTE *)(v22 + v14) = a1;
          if (HIBYTE(v23))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v15 = WORD2(v23);
            if (WORD1(v23) > WORD2(v23))
            {
              if (BYTE6(v23) == 2)
              {
                ++WORD2(v23);
                *(_BYTE *)(v22 + v15) = a2;
                if (HIBYTE(v23))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v23) - WORD2(v23) > 3)
                {
                  if (BYTE6(v23) == 2)
                  {
                    *(_WORD *)(v22 + WORD2(v23)) = a3;
                    *(_BYTE *)(v22 + WORD2(v23) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a3);
                    *(_BYTE *)(v22 + WORD2(v23) + 3) = HIBYTE(a3);
                    __int16 v16 = WORD2(v23);
                    unsigned __int16 v17 = WORD2(v23) + 4;
                    WORD2(v23) += 4;
                    if (HIBYTE(v23))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }

                    else if (WORD1(v23) > v17)
                    {
                      if (BYTE6(v23) == 2)
                      {
                        WORD2(v23) = v16 + 5;
                        *(_BYTE *)(v22 + v17) = a4;
                        return sub_10018BD78(64831, v22, BYTE4(v23), a5, (uint64_t)sub_1000BC408, v11, v12, v13);
                      }

                      unsigned __int16 v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2501,  v21);
                    }

                    unsigned __int16 v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_31;
                  }

                  __int16 v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2500,  v20);
                }

                __int16 v20 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                goto LABEL_27;
              }

              uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2499,  v19);
            }
          }

          uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }

        uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2498, v18);
      }
    }

    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000C9754(char a1, char *a2, uint64_t a3)
{
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  uint64_t result = sub_10018BCDC(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v7 = WORD2(v17);
      if (WORD1(v17) > WORD2(v17))
      {
        if (BYTE6(v17) == 2)
        {
          ++WORD2(v17);
          *(_BYTE *)(v16 + v7) = a1;
          if (HIBYTE(v17))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v8 = WORD2(v17);
            if (WORD1(v17) > WORD2(v17))
            {
              if (BYTE6(v17) == 2)
              {
                char v9 = *a2;
                ++WORD2(v17);
                *(_BYTE *)(v16 + v8) = v9;
                if (HIBYTE(v17))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v17) - WORD2(v17) > 5)
                {
                  if (BYTE6(v17) == 2)
                  {
                    sub_1001F0050(v16 + WORD2(v17), (uint64_t)(a2 + 1), 6uLL);
                    WORD2(v17) += 6;
                    return sub_10018BD78(64833, v16, BYTE4(v17), a3, (uint64_t)sub_1000BC408, v10, v11, v12);
                  }

                  uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2519,  v15);
                }

                uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
                goto LABEL_24;
              }

              uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2518,  v14);
            }
          }

          uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_20;
        }

        uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2517, v13);
      }
    }

    uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000C9934(char a1, __int16 a2, uint64_t a3)
{
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t result = sub_10018BCDC(&v17);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v18))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v18) - WORD2(v18) > 1)
    {
      if (BYTE6(v18) == 2)
      {
        *(_WORD *)(v17 + WORD2(v18)) = a2;
        __int16 v10 = WORD2(v18);
        unsigned __int16 v11 = WORD2(v18) + 2;
        WORD2(v18) += 2;
        if (HIBYTE(v18))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v18) > v11)
        {
          if (BYTE6(v18) == 2)
          {
            WORD2(v18) = v10 + 3;
            *(_BYTE *)(v17 + v11) = a1;
            if (HIBYTE(v18))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else
            {
              uint64_t v12 = WORD2(v18);
              if (WORD1(v18) > WORD2(v18))
              {
                if (BYTE6(v18) == 2)
                {
                  ++WORD2(v18);
                  *(_BYTE *)(v17 + v1pthread_attr_setdetachstate(&v7, 2) = -1;
                  if (HIBYTE(v18))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else if (WORD1(v18) - WORD2(v18) > 1)
                  {
                    if (BYTE6(v18) == 2)
                    {
                      *(_BYTE *)(v17 + WORD2(v18)) = -1;
                      *(_BYTE *)(v17 + WORD2(v18) + 1) = -1;
                      WORD2(v18) += 2;
                      return sub_10018BD78(64960, v17, BYTE4(v18), a3, (uint64_t)sub_1000BC408, v7, v8, v9);
                    }

                    uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2540,  v16);
                  }

                  uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                  goto LABEL_31;
                }

                uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2539,  v15);
              }
            }

            uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_27;
          }

          uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2538, v14);
        }

        uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_23;
      }

      uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2537, v13);
    }

    uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000C9BAC(char a1, uint64_t a2)
{
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  uint64_t result = sub_10018BCDC(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13))
      {
        if (BYTE6(v13) == 2)
        {
          ++WORD2(v13);
          *(_BYTE *)(v12 + v8) = 1;
          if (HIBYTE(v13))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v9 = WORD2(v13);
            if (WORD1(v13) > WORD2(v13))
            {
              if (BYTE6(v13) == 2)
              {
                ++WORD2(v13);
                *(_BYTE *)(v12 + v9) = a1;
                return sub_10018BD78(65384, v12, BYTE4(v13), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
              }

              unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2559,  v11);
            }
          }

          unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_17;
        }

        __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2555, v10);
      }
    }

    __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000C9CF4(_WORD *a1, __int16 a2, __int16 a3, uint64_t a4)
{
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t result = sub_10018BCDC(&v17);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v18))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v18) - WORD2(v18) > 1)
    {
      if (BYTE6(v18) == 2)
      {
        *(_WORD *)(v17 + WORD2(v18)) = *a1;
        unsigned __int16 v12 = WORD2(v18) + 2;
        WORD2(v18) += 2;
        if (HIBYTE(v18))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v18) - v12 > 1)
        {
          if (BYTE6(v18) == 2)
          {
            *(_BYTE *)(v17 + v1pthread_attr_setdetachstate(&v7, 2) = a2;
            *(_BYTE *)(v17 + WORD2(v18) + 1) = HIBYTE(a2);
            unsigned __int16 v13 = WORD2(v18) + 2;
            WORD2(v18) += 2;
            if (HIBYTE(v18))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v18) - v13 > 1)
            {
              if (BYTE6(v18) == 2)
              {
                *(_BYTE *)(v17 + v13) = a3;
                *(_BYTE *)(v17 + WORD2(v18) + 1) = HIBYTE(a3);
                WORD2(v18) += 2;
                return sub_10018BD78(65383, v17, BYTE4(v18), a4, (uint64_t)sub_1000BC408, v9, v10, v11);
              }

              uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2620,  v16);
            }

            uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 2";
            goto LABEL_24;
          }

          uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2619, v15);
        }

        uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_20;
      }

      uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2618, v14);
    }

    uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000C9F18(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(65396, v10, BYTE4(v11), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2648, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000C9FE4(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = sub_10018BCDC(&v6);
  if (!(_DWORD)result) {
    return sub_10018BD78(65510, v6, BYTE4(v7), a1, (uint64_t)sub_1000D3C5C, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1000CA034(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = sub_10018BCDC(&v6);
  if (!(_DWORD)result) {
    return sub_10018BD78(65512, v6, BYTE4(v7), a1, (uint64_t)sub_1000BC408, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1000CA084(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = sub_10018BCDC(&v6);
  if (!(_DWORD)result) {
    return sub_10018BD78(64932, v6, BYTE4(v7), a1, (uint64_t)sub_1000D4078, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1000CA0D4(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = sub_10018BCDC(&v6);
  if (!(_DWORD)result) {
    return sub_10018BD78(64933, v6, BYTE4(v7), a1, (uint64_t)sub_1000BC408, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1000CA124(uint64_t a1, char a2, char a3, char a4, char a5, uint64_t a6)
{
  uint64_t v36 = 0LL;
  uint64_t v37 = 0LL;
  uint64_t v35 = 0LL;
  uint64_t v11 = sub_10010EEE0(a1, (uint64_t *)&v35);
  if (!(_DWORD)v11)
  {
    uint64_t v12 = sub_10018BCDC(&v36);
    if ((_DWORD)v12) {
      return v12;
    }
    if (HIBYTE(v37))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v24 = WORD2(v37);
      if (WORD1(v37) > WORD2(v37))
      {
        if (BYTE6(v37) == 2)
        {
          ++WORD2(v37);
          *(_BYTE *)(v36 + v24) = a2;
          if (HIBYTE(v37))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v37) - WORD2(v37) > 1)
          {
            if (BYTE6(v37) == 2)
            {
              *(_WORD *)(v36 + WORD2(v37)) = *v35;
              __int16 v25 = WORD2(v37);
              unsigned __int16 v26 = WORD2(v37) + 2;
              WORD2(v37) += 2;
              if (HIBYTE(v37))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v37) > v26)
              {
                if (BYTE6(v37) == 2)
                {
                  WORD2(v37) = v25 + 3;
                  *(_BYTE *)(v36 + v26) = a3;
                  if (HIBYTE(v37))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else
                  {
                    uint64_t v27 = WORD2(v37);
                    if (WORD1(v37) > WORD2(v37))
                    {
                      if (BYTE6(v37) == 2)
                      {
                        ++WORD2(v37);
                        *(_BYTE *)(v36 + v27) = a4;
                        if (HIBYTE(v37))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }

                        else
                        {
                          uint64_t v28 = WORD2(v37);
                          if (WORD1(v37) > WORD2(v37))
                          {
                            if (BYTE6(v37) == 2)
                            {
                              ++WORD2(v37);
                              *(_BYTE *)(v36 + v28) = a5;
                              return sub_10018BD78(64808, v36, BYTE4(v37), a6, (uint64_t)sub_1000BC408, v21, v22, v23);
                            }

                            int v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2786,  v34);
                          }
                        }

                        int v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_42;
                      }

                      char v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2785,  v33);
                    }
                  }

                  char v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_38;
                }

                uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2784,  v32);
              }

              uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_34;
            }

            uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2783,  v31);
          }

          uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_30;
        }

        uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2782, v30);
      }
    }

    uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_26;
  }

  uint64_t v12 = v11;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"VSC Error %!", v13, v14, v15, v16, v17, v18, v19, v12);
    __int16 v20 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  return v12;
}

uint64_t sub_1000CA470(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t result = sub_10018BCDC(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        WORD2(v10) += 2;
        return sub_10018BD78(64876, v9, BYTE4(v10), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
      }

      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3716, v8);
    }

    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000CA554(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(65011, v10, BYTE4(v11), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2799, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000CA620(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = sub_10018BCDC(&v6);
  if (!(_DWORD)result) {
    return sub_10018BD78(65443, v6, BYTE4(v7), a1, (uint64_t)sub_1000BC490, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1000CA670(__int16 a1, uint64_t a2)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t result = sub_10018BCDC(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        WORD2(v10) += 2;
        return sub_10018BD78(65444, v9, BYTE4(v10), a2, (uint64_t)sub_1000BC59C, v5, v6, v7);
      }

      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2860, v8);
    }

    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000CA758(__int16 a1, int a2, uint64_t a3)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v14) - WORD2(v14) > 1)
    {
      if (BYTE6(v14) == 2)
      {
        *(_WORD *)(v13 + WORD2(v14)) = a1;
        unsigned __int16 v10 = WORD2(v14) + 2;
        WORD2(v14) += 2;
        if (HIBYTE(v14))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v14) - v10 > 3)
        {
          if (BYTE6(v14) == 2)
          {
            *(_BYTE *)(v13 + v10) = a2;
            *(_BYTE *)(v13 + WORD2(v14) + 1) = BYTE1(a2);
            *(_BYTE *)(v13 + WORD2(v14) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a2);
            *(_BYTE *)(v13 + WORD2(v14) + 3) = HIBYTE(a2);
            WORD2(v14) += 4;
            return sub_10018BD78(65425, v13, BYTE4(v14), a3, (uint64_t)sub_1000BC408, v7, v8, v9);
          }

          uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2874, v12);
        }

        uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_17;
      }

      uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2873, v11);
    }

    uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000CA908(__int16 a1, int a2, int a3, __int16 a4, __int16 a5, char a6, int a7, uint64_t a8)
{
  uint64_t v38 = 0LL;
  uint64_t v39 = 0LL;
  uint64_t result = sub_10018BCDC(&v38);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v39))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v39) - WORD2(v39) > 1)
    {
      if (BYTE6(v39) == 2)
      {
        *(_WORD *)(v38 + WORD2(v39)) = a1;
        unsigned __int16 v20 = WORD2(v39) + 2;
        WORD2(v39) += 2;
        if (HIBYTE(v39))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v39) - v20 > 3)
        {
          if (BYTE6(v39) == 2)
          {
            *(_BYTE *)(v38 + v20) = a2;
            *(_BYTE *)(v38 + WORD2(v39) + 1) = BYTE1(a2);
            *(_BYTE *)(v38 + WORD2(v39) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a2);
            *(_BYTE *)(v38 + WORD2(v39) + 3) = HIBYTE(a2);
            unsigned __int16 v21 = WORD2(v39) + 4;
            WORD2(v39) += 4;
            if (HIBYTE(v39))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v39) - v21 > 3)
            {
              if (BYTE6(v39) == 2)
              {
                *(_BYTE *)(v38 + v21) = a3;
                *(_BYTE *)(v38 + WORD2(v39) + 1) = BYTE1(a3);
                *(_BYTE *)(v38 + WORD2(v39) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a3);
                *(_BYTE *)(v38 + WORD2(v39) + 3) = HIBYTE(a3);
                unsigned __int16 v22 = WORD2(v39) + 4;
                WORD2(v39) += 4;
                if (HIBYTE(v39))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v39) - v22 > 1)
                {
                  if (BYTE6(v39) == 2)
                  {
                    *(_BYTE *)(v38 + v2pthread_attr_setdetachstate(&v7, 2) = a4;
                    *(_BYTE *)(v38 + WORD2(v39) + 1) = HIBYTE(a4);
                    unsigned __int16 v23 = WORD2(v39) + 2;
                    WORD2(v39) += 2;
                    if (HIBYTE(v39))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }

                    else if (WORD1(v39) - v23 > 1)
                    {
                      if (BYTE6(v39) == 2)
                      {
                        *(_BYTE *)(v38 + v23) = a5;
                        *(_BYTE *)(v38 + WORD2(v39) + 1) = HIBYTE(a5);
                        __int16 v24 = WORD2(v39);
                        unsigned __int16 v25 = WORD2(v39) + 2;
                        WORD2(v39) += 2;
                        if (HIBYTE(v39))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }

                        else if (WORD1(v39) > v25)
                        {
                          if (BYTE6(v39) == 2)
                          {
                            WORD2(v39) = v24 + 3;
                            *(_BYTE *)(v38 + v25) = a6;
                            if (HIBYTE(v39))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }

                            else
                            {
                              uint64_t v26 = WORD2(v39);
                              if (WORD1(v39) > WORD2(v39))
                              {
                                if (BYTE6(v39) == 2)
                                {
                                  ++WORD2(v39);
                                  *(_BYTE *)(v38 + v26) = a7;
                                  if (HIBYTE(v39))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/aci/aci_vsc.c");
                                  }

                                  else
                                  {
                                    uint64_t v27 = WORD2(v39);
                                    if (WORD1(v39) > WORD2(v39))
                                    {
                                      if (BYTE6(v39) == 2)
                                      {
                                        ++WORD2(v39);
                                        *(_BYTE *)(v38 + v27) = BYTE1(a7);
                                        if (HIBYTE(v39))
                                        {
                                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/aci/aci_vsc.c");
                                        }

                                        else
                                        {
                                          uint64_t v28 = WORD2(v39);
                                          if (WORD1(v39) > WORD2(v39))
                                          {
                                            if (BYTE6(v39) == 2)
                                            {
                                              ++WORD2(v39);
                                              *(_BYTE *)(v38 + v28) = BYTE2(a7);
                                              return sub_10018BD78( 64967,  v38,  BYTE4(v39),  a8,  (uint64_t)sub_1000BC408,  v17,  v18,  v19);
                                            }

                                            uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2902,  v37);
                                          }
                                        }

                                        uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                        goto LABEL_66;
                                      }

                                      uint64_t v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2900,  v36);
                                    }
                                  }

                                  uint64_t v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_62;
                                }

                                uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2898,  v35);
                              }
                            }

                            uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_58;
                          }

                          int v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_54:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2895,  v34);
                        }

                        int v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_54;
                      }

                      char v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_50:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2894,  v33);
                    }

                    char v33 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                    goto LABEL_50;
                  }

                  uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_46:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2893,  v32);
                }

                uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_46;
              }

              uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2892,  v31);
            }

            uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_42;
          }

          uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2891, v30);
        }

        uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_38;
      }

      uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2890, v29);
    }

    uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_34;
  }

  return result;
}

uint64_t sub_1000CAEA8(uint64_t a1, int a2, int a3, __int16 a4, __int16 a5, char a6, int a7, uint64_t a8)
{
  uint64_t v38 = 0LL;
  uint64_t v39 = 0LL;
  uint64_t result = sub_10018BCDC(&v38);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v39))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v39) - WORD2(v39) > 5)
    {
      if (BYTE6(v39) == 2)
      {
        sub_1001F0050(v38 + WORD2(v39), a1, 6uLL);
        unsigned __int16 v20 = WORD2(v39) + 6;
        WORD2(v39) += 6;
        if (HIBYTE(v39))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v39) - v20 > 3)
        {
          if (BYTE6(v39) == 2)
          {
            *(_BYTE *)(v38 + v20) = a2;
            *(_BYTE *)(v38 + WORD2(v39) + 1) = BYTE1(a2);
            *(_BYTE *)(v38 + WORD2(v39) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a2);
            *(_BYTE *)(v38 + WORD2(v39) + 3) = HIBYTE(a2);
            unsigned __int16 v21 = WORD2(v39) + 4;
            WORD2(v39) += 4;
            if (HIBYTE(v39))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v39) - v21 > 3)
            {
              if (BYTE6(v39) == 2)
              {
                *(_BYTE *)(v38 + v21) = a3;
                *(_BYTE *)(v38 + WORD2(v39) + 1) = BYTE1(a3);
                *(_BYTE *)(v38 + WORD2(v39) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a3);
                *(_BYTE *)(v38 + WORD2(v39) + 3) = HIBYTE(a3);
                unsigned __int16 v22 = WORD2(v39) + 4;
                WORD2(v39) += 4;
                if (HIBYTE(v39))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v39) - v22 > 1)
                {
                  if (BYTE6(v39) == 2)
                  {
                    *(_BYTE *)(v38 + v2pthread_attr_setdetachstate(&v7, 2) = a4;
                    *(_BYTE *)(v38 + WORD2(v39) + 1) = HIBYTE(a4);
                    unsigned __int16 v23 = WORD2(v39) + 2;
                    WORD2(v39) += 2;
                    if (HIBYTE(v39))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }

                    else if (WORD1(v39) - v23 > 1)
                    {
                      if (BYTE6(v39) == 2)
                      {
                        *(_BYTE *)(v38 + v23) = a5;
                        *(_BYTE *)(v38 + WORD2(v39) + 1) = HIBYTE(a5);
                        __int16 v24 = WORD2(v39);
                        unsigned __int16 v25 = WORD2(v39) + 2;
                        WORD2(v39) += 2;
                        if (HIBYTE(v39))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }

                        else if (WORD1(v39) > v25)
                        {
                          if (BYTE6(v39) == 2)
                          {
                            WORD2(v39) = v24 + 3;
                            *(_BYTE *)(v38 + v25) = a6;
                            if (HIBYTE(v39))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }

                            else
                            {
                              uint64_t v26 = WORD2(v39);
                              if (WORD1(v39) > WORD2(v39))
                              {
                                if (BYTE6(v39) == 2)
                                {
                                  ++WORD2(v39);
                                  *(_BYTE *)(v38 + v26) = a7;
                                  if (HIBYTE(v39))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/aci/aci_vsc.c");
                                  }

                                  else
                                  {
                                    uint64_t v27 = WORD2(v39);
                                    if (WORD1(v39) > WORD2(v39))
                                    {
                                      if (BYTE6(v39) == 2)
                                      {
                                        ++WORD2(v39);
                                        *(_BYTE *)(v38 + v27) = BYTE1(a7);
                                        if (HIBYTE(v39))
                                        {
                                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/aci/aci_vsc.c");
                                        }

                                        else
                                        {
                                          uint64_t v28 = WORD2(v39);
                                          if (WORD1(v39) > WORD2(v39))
                                          {
                                            if (BYTE6(v39) == 2)
                                            {
                                              ++WORD2(v39);
                                              *(_BYTE *)(v38 + v28) = BYTE2(a7);
                                              return sub_10018BD78( 65016,  v38,  BYTE4(v39),  a8,  (uint64_t)sub_1000BC408,  v17,  v18,  v19);
                                            }

                                            uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2928,  v37);
                                          }
                                        }

                                        uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                        goto LABEL_66;
                                      }

                                      uint64_t v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2926,  v36);
                                    }
                                  }

                                  uint64_t v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_62;
                                }

                                uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2924,  v35);
                              }
                            }

                            uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_58;
                          }

                          int v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_54:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2921,  v34);
                        }

                        int v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_54;
                      }

                      char v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_50:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2920,  v33);
                    }

                    char v33 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                    goto LABEL_50;
                  }

                  uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_46:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2919,  v32);
                }

                uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_46;
              }

              uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2918,  v31);
            }

            uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_42;
          }

          uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2917, v30);
        }

        uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_38;
      }

      uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2916, v29);
    }

    uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
    goto LABEL_34;
  }

  return result;
}

uint64_t sub_1000CB440(_WORD *a1, __int16 a2, char a3, uint64_t a4)
{
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t result = sub_10018BCDC(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v19) - WORD2(v19) > 1)
    {
      if (BYTE6(v19) == 2)
      {
        *(_WORD *)(v18 + WORD2(v19)) = *a1;
        unsigned __int16 v12 = WORD2(v19) + 2;
        WORD2(v19) += 2;
        if (HIBYTE(v19))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v19) - v12 > 1)
        {
          if (BYTE6(v19) == 2)
          {
            *(_BYTE *)(v18 + v1pthread_attr_setdetachstate(&v7, 2) = a2;
            *(_BYTE *)(v18 + WORD2(v19) + 1) = HIBYTE(a2);
            __int16 v13 = WORD2(v19);
            unsigned __int16 v14 = WORD2(v19) + 2;
            WORD2(v19) += 2;
            if (HIBYTE(v19))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v19) > v14)
            {
              if (BYTE6(v19) == 2)
              {
                WORD2(v19) = v13 + 3;
                *(_BYTE *)(v18 + v14) = a3;
                return sub_10018BD78(65378, v18, BYTE4(v19), a4, (uint64_t)sub_1000BC408, v9, v10, v11);
              }

              uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2943,  v17);
            }

            uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_24;
          }

          uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2942, v16);
        }

        uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_20;
      }

      uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2941, v15);
    }

    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000CB648(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(65450, v10, BYTE4(v11), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2970, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000CB714(_WORD *a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = *a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(_BYTE *)(v14 + v11) = a2;
            return sub_10018BD78(64820, v14, BYTE4(v15), a3, (uint64_t)sub_1000BC408, v7, v8, v9);
          }

          __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3000, v13);
        }

        __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }

      unsigned __int16 v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2999, v12);
    }

    unsigned __int16 v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000CB884(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(65385, v10, BYTE4(v11), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2957, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000CB950(unsigned int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t result = sub_10018BCDC(&v18);
  if ((_DWORD)result) {
    return result;
  }
  if (HIBYTE(v19))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_27;
  }

  uint64_t v10 = WORD2(v19);
  if (WORD1(v19) <= WORD2(v19))
  {
LABEL_27:
    uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_29;
  }

  if (BYTE6(v19) != 2)
  {
    uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3253, v17);
  }

  unint64_t v11 = 0LL;
  ++WORD2(v19);
  *(_BYTE *)(v18 + v10) = a1;
  do
  {
    if (v11 >= a1)
    {
      if (HIBYTE(v19))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_23:
        uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_25:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3258, v16);
      }

      if (WORD1(v19) - WORD2(v19) <= 1) {
        goto LABEL_23;
      }
      if (BYTE6(v19) != 2)
      {
        uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_25;
      }

      char v13 = 0;
      *(_BYTE *)(v18 + WORD2(v19)) = 0;
    }

    else
    {
      if (HIBYTE(v19))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_19:
        uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_21:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3256, v15);
      }

      if (WORD1(v19) - WORD2(v19) <= 1) {
        goto LABEL_19;
      }
      if (BYTE6(v19) != 2)
      {
        uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_21;
      }

      uint64_t v12 = a2 + 2 * v11;
      *(_BYTE *)(v18 + WORD2(v19)) = *(_WORD *)v12;
      char v13 = *(_BYTE *)(v12 + 1);
    }

    *(_BYTE *)(v18 + WORD2(v19) + 1) = v13;
    unsigned __int8 v14 = BYTE4(v19) + 2;
    WORD2(v19) += 2;
    ++v11;
  }

  while (v11 != 4);
  return sub_10018BD78(64896, v18, v14, a3, (uint64_t)sub_1000BC408, v7, v8, v9);
}

uint64_t sub_1000CBB58( __int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t result = sub_10018BCDC(&v21);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v22))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v15 = WORD2(v22);
      if (WORD1(v22) > WORD2(v22))
      {
        if (BYTE6(v22) == 2)
        {
          ++WORD2(v22);
          *(_BYTE *)(v21 + v15) = 1;
          if (HIBYTE(v22))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v22) - WORD2(v22) > 1)
          {
            if (BYTE6(v22) == 2)
            {
              *(_WORD *)(v21 + WORD2(v22)) = a1;
              __int16 v16 = WORD2(v22);
              unsigned __int16 v17 = WORD2(v22) + 2;
              WORD2(v22) += 2;
              if (HIBYTE(v22))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v22) > v17)
              {
                if (BYTE6(v22) == 2)
                {
                  WORD2(v2pthread_attr_setdetachstate(&v7, 2) = v16 + 3;
                  *(_BYTE *)(v21 + v17) = a8;
                  return sub_10018BD78(65014, v21, BYTE4(v22), a9, (uint64_t)sub_1000D4240, v12, v13, v14);
                }

                unsigned __int16 v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3297,  v20);
              }

              unsigned __int16 v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_24;
            }

            uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3296,  v19);
          }

          uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_20;
        }

        uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3295, v18);
      }
    }

    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000CBD34(__int16 a1, uint64_t a2)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(_BYTE *)(v11 + v8) = 2;
          if (HIBYTE(v12))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v12) - WORD2(v12) > 1)
          {
            if (BYTE6(v12) == 2)
            {
              *(_WORD *)(v11 + WORD2(v12)) = a1;
              WORD2(v12) += 2;
              return sub_10018BD78(65014, v11, BYTE4(v12), a2, (uint64_t)sub_1000D43A8, v5, v6, v7);
            }

            uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3336,  v10);
          }

          uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_17;
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3335, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000CBE98(__int16 a1, char a2, char a3, __int16 a4, char a5, char a6, char a7, uint64_t a8)
{
  uint64_t v36 = 0LL;
  uint64_t v37 = 0LL;
  uint64_t result = sub_10018BCDC(&v36);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v37))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v20 = WORD2(v37);
      if (WORD1(v37) > WORD2(v37))
      {
        if (BYTE6(v37) == 2)
        {
          ++WORD2(v37);
          *(_BYTE *)(v36 + v20) = 3;
          if (HIBYTE(v37))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v37) - WORD2(v37) > 1)
          {
            if (BYTE6(v37) == 2)
            {
              *(_WORD *)(v36 + WORD2(v37)) = a1;
              __int16 v21 = WORD2(v37);
              unsigned __int16 v22 = WORD2(v37) + 2;
              WORD2(v37) += 2;
              if (HIBYTE(v37))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v37) > v22)
              {
                if (BYTE6(v37) == 2)
                {
                  WORD2(v37) = v21 + 3;
                  *(_BYTE *)(v36 + v2pthread_attr_setdetachstate(&v7, 2) = a2;
                  if (HIBYTE(v37))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else
                  {
                    uint64_t v23 = WORD2(v37);
                    if (WORD1(v37) > WORD2(v37))
                    {
                      if (BYTE6(v37) == 2)
                      {
                        ++WORD2(v37);
                        *(_BYTE *)(v36 + v23) = a3;
                        if (HIBYTE(v37))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }

                        else if (WORD1(v37) - WORD2(v37) > 1)
                        {
                          if (BYTE6(v37) == 2)
                          {
                            *(_WORD *)(v36 + WORD2(v37)) = a4;
                            __int16 v24 = WORD2(v37);
                            unsigned __int16 v25 = WORD2(v37) + 2;
                            WORD2(v37) += 2;
                            if (HIBYTE(v37))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }

                            else if (WORD1(v37) > v25)
                            {
                              if (BYTE6(v37) == 2)
                              {
                                WORD2(v37) = v24 + 3;
                                *(_BYTE *)(v36 + v25) = a5;
                                if (HIBYTE(v37))
                                {
                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/aci/aci_vsc.c");
                                }

                                else
                                {
                                  uint64_t v26 = WORD2(v37);
                                  if (WORD1(v37) > WORD2(v37))
                                  {
                                    if (BYTE6(v37) == 2)
                                    {
                                      ++WORD2(v37);
                                      *(_BYTE *)(v36 + v26) = a6;
                                      if (HIBYTE(v37))
                                      {
                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/aci/aci_vsc.c");
                                      }

                                      else
                                      {
                                        uint64_t v27 = WORD2(v37);
                                        if (WORD1(v37) > WORD2(v37))
                                        {
                                          if (BYTE6(v37) == 2)
                                          {
                                            ++WORD2(v37);
                                            *(_BYTE *)(v36 + v27) = a7;
                                            return sub_10018BD78( 65014,  v36,  BYTE4(v37),  a8,  (uint64_t)sub_1000D45C8,  v17,  v18,  v19);
                                          }

                                          uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
                                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3375,  v35);
                                        }
                                      }

                                      uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                      goto LABEL_59;
                                    }

                                    int v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3374,  v34);
                                  }
                                }

                                int v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                goto LABEL_55;
                              }

                              char v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3373,  v33);
                            }

                            char v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_51;
                          }

                          uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_47:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3372,  v32);
                        }

                        uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                        goto LABEL_47;
                      }

                      uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3371,  v31);
                    }
                  }

                  uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_43;
                }

                uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_39:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3370,  v30);
              }

              uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_39;
            }

            uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3369,  v29);
          }

          uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_35;
        }

        uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3368, v28);
      }
    }

    uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_31;
  }

  return result;
}

uint64_t sub_1000CC318( __int16 a1, __int16 a2, char a3, __int16 a4, char a5, char a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v46 = 0LL;
  uint64_t v47 = 0LL;
  uint64_t result = sub_10018BCDC(&v46);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v47))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v21 = WORD2(v47);
      if (WORD1(v47) > WORD2(v47))
      {
        if (BYTE6(v47) == 2)
        {
          ++WORD2(v47);
          *(_BYTE *)(v46 + v21) = 10;
          if (HIBYTE(v47))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v47) - WORD2(v47) > 1)
          {
            if (BYTE6(v47) == 2)
            {
              *(_WORD *)(v46 + WORD2(v47)) = a1;
              unsigned __int16 v22 = WORD2(v47) + 2;
              WORD2(v47) += 2;
              if (HIBYTE(v47))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v47) - v22 > 1)
              {
                if (BYTE6(v47) == 2)
                {
                  *(_BYTE *)(v46 + v2pthread_attr_setdetachstate(&v7, 2) = a2;
                  *(_BYTE *)(v46 + WORD2(v47) + 1) = HIBYTE(a2);
                  __int16 v23 = WORD2(v47);
                  unsigned __int16 v24 = WORD2(v47) + 2;
                  WORD2(v47) += 2;
                  if (HIBYTE(v47))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else if (WORD1(v47) > v24)
                  {
                    if (BYTE6(v47) == 2)
                    {
                      WORD2(v47) = v23 + 3;
                      *(_BYTE *)(v46 + v24) = a3;
                      if (HIBYTE(v47))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }

                      else if (WORD1(v47) - WORD2(v47) > 1)
                      {
                        if (BYTE6(v47) == 2)
                        {
                          *(_WORD *)(v46 + WORD2(v47)) = a4;
                          __int16 v25 = WORD2(v47);
                          unsigned __int16 v26 = WORD2(v47) + 2;
                          WORD2(v47) += 2;
                          if (HIBYTE(v47))
                          {
                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                          }

                          else if (WORD1(v47) > v26)
                          {
                            if (BYTE6(v47) == 2)
                            {
                              WORD2(v47) = v25 + 3;
                              *(_BYTE *)(v46 + v26) = a5;
                              if (HIBYTE(v47))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }

                              else
                              {
                                uint64_t v27 = WORD2(v47);
                                if (WORD1(v47) > WORD2(v47))
                                {
                                  if (BYTE6(v47) == 2)
                                  {
                                    ++WORD2(v47);
                                    *(_BYTE *)(v46 + v27) = a6;
                                    if (HIBYTE(v47))
                                    {
                                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }

                                    else
                                    {
                                      uint64_t v28 = WORD2(v47);
                                      if (WORD1(v47) > WORD2(v47))
                                      {
                                        if (BYTE6(v47) == 2)
                                        {
                                          ++WORD2(v47);
                                          *(_BYTE *)(v46 + v28) = a7;
                                          int v29 = -16;
                                          do
                                          {
                                            if (HIBYTE(v47))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/aci/aci_vsc.c");
LABEL_44:
                                              int v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_46:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3419,  v34);
                                            }

                                            uint64_t v30 = WORD2(v47);
                                            if (BYTE6(v47) != 2)
                                            {
                                              int v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                              goto LABEL_46;
                                            }

                                            ++WORD2(v47);
                                            *(_BYTE *)(v46 + v30) = 0;
                                          }

                                          while (!__CFADD__(v29++, 1));
                                          if (HIBYTE(v47))
                                          {
                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/aci/aci_vsc.c");
                                          }

                                          else
                                          {
                                            uint64_t v32 = WORD2(v47);
                                            if (WORD1(v47) > WORD2(v47))
                                            {
                                              if (BYTE6(v47) == 2)
                                              {
                                                ++WORD2(v47);
                                                *(_BYTE *)(v46 + v3pthread_attr_setdetachstate(&v7, 2) = 0;
                                                if (HIBYTE(v47))
                                                {
                                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/aci/aci_vsc.c");
                                                }

                                                else if (WORD1(v47) - WORD2(v47) > 1)
                                                {
                                                  if (BYTE6(v47) == 2)
                                                  {
                                                    *(_WORD *)(v46 + WORD2(v47)) = 0;
                                                    unsigned __int16 v33 = WORD2(v47) + 2;
                                                    WORD2(v47) += 2;
                                                    if (HIBYTE(v47))
                                                    {
                                                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mobil"
                                                                             "eBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                    }

                                                    else if (WORD1(v47) - v33 > 1)
                                                    {
                                                      if (BYTE6(v47) == 2)
                                                      {
                                                        *(_BYTE *)(v46 + v33) = 0;
                                                        *(_BYTE *)(v46 + WORD2(v47) + 1) = 0;
                                                        WORD2(v47) += 2;
                                                        return sub_10018BD78( 65014,  v46,  BYTE4(v47),  a10,  (uint64_t)sub_1000D4730,  v18,  v19,  v20);
                                                      }

                                                      uint64_t v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_90:
                                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack /vsc/aci/aci_vsc.c",  3423,  v45);
                                                    }

                                                    uint64_t v45 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                    goto LABEL_90;
                                                  }

                                                  unsigned __int16 v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_86:
                                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3422,  v44);
                                                }

                                                unsigned __int16 v44 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                goto LABEL_86;
                                              }

                                              int v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_82:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3421,  v43);
                                            }
                                          }

                                          int v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_82;
                                        }

                                        uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_78:
                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3417,  v42);
                                      }
                                    }

                                    uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_78;
                                  }

                                  unsigned __int16 v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_74:
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3416,  v41);
                                }
                              }

                              unsigned __int16 v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_74;
                            }

                            uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_70:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3415,  v40);
                          }

                          uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                          goto LABEL_70;
                        }

                        uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3414,  v39);
                      }

                      uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_66;
                    }

                    uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3413,  v38);
                  }

                  uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_62;
                }

                uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3412,  v37);
              }

              uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_58;
            }

            uint64_t v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_54:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3411,  v36);
          }

          uint64_t v36 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_54;
        }

        uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_50:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3410, v35);
      }
    }

    uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_50;
  }

  return result;
}

uint64_t sub_1000CC9CC( __int16 a1, __int16 a2, char a3, __int16 a4, char a5, char a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t a15)
{
  uint64_t v69 = 0LL;
  uint64_t v70 = 0LL;
  uint64_t result = sub_10018BCDC(&v69);
  if ((_DWORD)result) {
    return result;
  }
  if (HIBYTE(v70))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_102;
  }

  uint64_t v26 = WORD2(v70);
  if (WORD1(v70) <= WORD2(v70))
  {
LABEL_102:
    uint64_t v58 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_104;
  }

  if (BYTE6(v70) != 2)
  {
    uint64_t v58 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_104:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3463, v58);
  }

  ++WORD2(v70);
  *(_BYTE *)(v69 + v26) = 10;
  if (HIBYTE(v70))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_106;
  }

  if (WORD1(v70) - WORD2(v70) <= 1)
  {
LABEL_106:
    uint64_t v59 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_108;
  }

  if (BYTE6(v70) != 2)
  {
    uint64_t v59 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_108:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3464, v59);
  }

  *(_WORD *)(v69 + WORD2(v70)) = a1;
  unsigned __int16 v27 = WORD2(v70) + 2;
  WORD2(v70) += 2;
  if (HIBYTE(v70))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_110;
  }

  if (WORD1(v70) - v27 <= 1)
  {
LABEL_110:
    uint64_t v60 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_112;
  }

  if (BYTE6(v70) != 2)
  {
    uint64_t v60 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_112:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3465, v60);
  }

  *(_BYTE *)(v69 + v27) = a2;
  *(_BYTE *)(v69 + WORD2(v70) + 1) = HIBYTE(a2);
  __int16 v28 = WORD2(v70);
  unsigned __int16 v29 = WORD2(v70) + 2;
  WORD2(v70) += 2;
  if (HIBYTE(v70))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_114;
  }

  if (WORD1(v70) <= v29)
  {
LABEL_114:
    uint64_t v61 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_116;
  }

  if (BYTE6(v70) != 2)
  {
    uint64_t v61 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_116:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3466, v61);
  }

  WORD2(v70) = v28 + 3;
  *(_BYTE *)(v69 + v29) = a3;
  if (HIBYTE(v70))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_118;
  }

  if (WORD1(v70) - WORD2(v70) <= 1)
  {
LABEL_118:
    uint64_t v62 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_120;
  }

  if (BYTE6(v70) != 2)
  {
    uint64_t v62 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_120:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3467, v62);
  }

  *(_WORD *)(v69 + WORD2(v70)) = a4;
  __int16 v30 = WORD2(v70);
  unsigned __int16 v31 = WORD2(v70) + 2;
  WORD2(v70) += 2;
  if (HIBYTE(v70))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_122;
  }

  if (WORD1(v70) <= v31)
  {
LABEL_122:
    uint64_t v63 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_124;
  }

  if (BYTE6(v70) != 2)
  {
    uint64_t v63 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_124:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3468, v63);
  }

  WORD2(v70) = v30 + 3;
  *(_BYTE *)(v69 + v31) = a5;
  if (HIBYTE(v70))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_126;
  }

  uint64_t v32 = WORD2(v70);
  if (WORD1(v70) <= WORD2(v70))
  {
LABEL_126:
    uint64_t v64 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_128;
  }

  if (BYTE6(v70) != 2)
  {
    uint64_t v64 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_128:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3469, v64);
  }

  ++WORD2(v70);
  *(_BYTE *)(v69 + v3pthread_attr_setdetachstate(&v7, 2) = a6;
  if (HIBYTE(v70))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_130;
  }

  uint64_t v33 = WORD2(v70);
  if (WORD1(v70) <= WORD2(v70))
  {
LABEL_130:
    uint64_t v65 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_132;
  }

  if (BYTE6(v70) != 2)
  {
    uint64_t v65 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_132:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3470, v65);
  }

  ++WORD2(v70);
  *(_BYTE *)(v69 + v33) = a7;
  if (a10)
  {
    uint64_t v34 = 15LL;
    while (!HIBYTE(v70))
    {
      uint64_t v35 = WORD2(v70);
      if (BYTE6(v70) != 2)
      {
        unsigned __int8 v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_80;
      }

      char v36 = *(_BYTE *)(a10 + v34);
      ++WORD2(v70);
      *(_BYTE *)(v69 + v35) = v36;
      if (--v34 == -1) {
        goto LABEL_39;
      }
    }

    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_78:
    unsigned __int8 v52 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_80:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3478, v52);
  }

  int v37 = -16;
  do
  {
    if (HIBYTE(v70))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_90:
      BOOL v55 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_92:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3473, v55);
    }

    uint64_t v38 = WORD2(v70);
    if (BYTE6(v70) != 2)
    {
      BOOL v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
      goto LABEL_92;
    }

    ++WORD2(v70);
    *(_BYTE *)(v69 + v38) = 0;
  }

  while (!__CFADD__(v37++, 1));
LABEL_39:
  if (HIBYTE(v70))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_134;
  }

  uint64_t v40 = WORD2(v70);
  if (WORD1(v70) <= WORD2(v70))
  {
LABEL_134:
    uint64_t v66 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_136;
  }

  if (BYTE6(v70) != 2)
  {
    uint64_t v66 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_136:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3481, v66);
  }

  ++WORD2(v70);
  *(_BYTE *)(v69 + v40) = 0;
  if (HIBYTE(v70))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_138;
  }

  if (WORD1(v70) - WORD2(v70) <= 1)
  {
LABEL_138:
    unsigned int v67 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_140;
  }

  if (BYTE6(v70) != 2)
  {
    unsigned int v67 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_140:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3482, v67);
  }

  *(_WORD *)(v69 + WORD2(v70)) = 0;
  unsigned __int16 v41 = WORD2(v70) + 2;
  WORD2(v70) += 2;
  if (HIBYTE(v70))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_142;
  }

  if (WORD1(v70) - v41 <= 1)
  {
LABEL_142:
    int v68 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_144;
  }

  if (BYTE6(v70) != 2)
  {
    int v68 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_144:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3483, v68);
  }

  uint64_t v42 = a14;
  *(_BYTE *)(v69 + v41) = a14;
  *(_BYTE *)(v69 + WORD2(v70) + 1) = 0;
  WORD2(v70) += 2;
  if (a12)
  {
    if (a14)
    {
      uint64_t v43 = a14;
      while (!HIBYTE(v70))
      {
        uint64_t v44 = WORD2(v70);
        if (BYTE6(v70) != 2)
        {
          unsigned __int8 v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_84;
        }

        char v45 = *(_BYTE *)(a12 - 1 + v43--);
        ++WORD2(v70);
        *(_BYTE *)(v69 + v44) = v45;
      }

      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_82:
      unsigned __int8 v53 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_84:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3491, v53);
    }
  }

  else if (a14)
  {
    int v46 = a14 + 1;
    while (!HIBYTE(v70))
    {
      uint64_t v47 = WORD2(v70);
      if (BYTE6(v70) != 2)
      {
        unint64_t v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_96;
      }

      ++WORD2(v70);
      *(_BYTE *)(v69 + v47) = 0;
    }

    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_94:
    unint64_t v56 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_96:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3486, v56);
  }

uint64_t sub_1000CD378(__int16 a1, char a2, char a3, uint64_t a4)
{
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  uint64_t result = sub_10018BCDC(&v20);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v21))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v12 = WORD2(v21);
      if (WORD1(v21) > WORD2(v21))
      {
        if (BYTE6(v21) == 2)
        {
          ++WORD2(v21);
          *(_BYTE *)(v20 + v1pthread_attr_setdetachstate(&v7, 2) = 7;
          if (HIBYTE(v21))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v21) - WORD2(v21) > 1)
          {
            if (BYTE6(v21) == 2)
            {
              *(_WORD *)(v20 + WORD2(v21)) = a1;
              __int16 v13 = WORD2(v21);
              unsigned __int16 v14 = WORD2(v21) + 2;
              WORD2(v21) += 2;
              if (HIBYTE(v21))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v21) > v14)
              {
                if (BYTE6(v21) == 2)
                {
                  WORD2(v21) = v13 + 3;
                  *(_BYTE *)(v20 + v14) = a2;
                  if (HIBYTE(v21))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else
                  {
                    uint64_t v15 = WORD2(v21);
                    if (WORD1(v21) > WORD2(v21))
                    {
                      if (BYTE6(v21) == 2)
                      {
                        ++WORD2(v21);
                        *(_BYTE *)(v20 + v15) = a3;
                        return sub_10018BD78(65014, v20, BYTE4(v21), a4, (uint64_t)sub_1000D4A00, v9, v10, v11);
                      }

                      uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3657,  v19);
                    }
                  }

                  uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_31;
                }

                uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3656,  v18);
              }

              uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_27;
            }

            uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3655,  v17);
          }

          uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_23;
        }

        __int16 v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3654, v16);
      }
    }

    __int16 v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000CD5DC(__int16 a1, __int16 a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v43 = 0LL;
  uint64_t v44 = 0LL;
  uint64_t result = sub_10018BCDC(&v43);
  if ((_DWORD)result) {
    return result;
  }
  if (HIBYTE(v44))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_68;
  }

  uint64_t v14 = WORD2(v44);
  if (WORD1(v44) <= WORD2(v44))
  {
LABEL_68:
    uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_70;
  }

  if (BYTE6(v44) != 2)
  {
    uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_70:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3535, v39);
  }

  ++WORD2(v44);
  *(_BYTE *)(v43 + v14) = 4;
  if (HIBYTE(v44))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_72;
  }

  if (WORD1(v44) - WORD2(v44) <= 1)
  {
LABEL_72:
    uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_74;
  }

  if (BYTE6(v44) != 2)
  {
    uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_74:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3536, v40);
  }

  *(_WORD *)(v43 + WORD2(v44)) = a1;
  __int16 v15 = WORD2(v44);
  unsigned __int16 v16 = WORD2(v44) + 2;
  WORD2(v44) += 2;
  if (HIBYTE(v44))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_76;
  }

  if (WORD1(v44) <= v16)
  {
LABEL_76:
    unsigned __int16 v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_78;
  }

  if (BYTE6(v44) != 2)
  {
    unsigned __int16 v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_78:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3537, v41);
  }

  WORD2(v44) = v15 + 3;
  *(_BYTE *)(v43 + v16) = a2;
  if (HIBYTE(v44))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_80;
  }

  uint64_t v17 = WORD2(v44);
  if (WORD1(v44) <= WORD2(v44))
  {
LABEL_80:
    uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_82;
  }

  if (BYTE6(v44) != 2)
  {
    uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_82:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3538, v42);
  }

  ++WORD2(v44);
  *(_BYTE *)(v43 + v17) = a3;
  int v18 = (unsigned __int16)(a3 - a2 + 1);
  if (v18)
  {
    while (!HIBYTE(v44))
    {
      if (WORD1(v44) - WORD2(v44) <= 5) {
        goto LABEL_40;
      }
      if (BYTE6(v44) != 2)
      {
        uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_42;
      }

      sub_1001F0050(v43 + WORD2(v44), a4, 6uLL);
      __int16 v19 = WORD2(v44);
      unsigned __int16 v20 = WORD2(v44) + 6;
      WORD2(v44) += 6;
      if (HIBYTE(v44))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_44:
        uint64_t v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_46:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3543, v33);
      }

      if (BYTE6(v44) != 2)
      {
        uint64_t v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_46;
      }

      char v21 = *(_BYTE *)(a4 + 6);
      WORD2(v44) = v19 + 7;
      *(_BYTE *)(v43 + v20) = v21;
      if (HIBYTE(v44))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_48:
        uint64_t v34 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
LABEL_50:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3544, v34);
      }

      if (WORD1(v44) - WORD2(v44) <= 5) {
        goto LABEL_48;
      }
      if (BYTE6(v44) != 2)
      {
        uint64_t v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_50;
      }

      unsigned __int16 v22 = (_BYTE *)(a4 + 7);
      sub_1001F0050(v43 + WORD2(v44), (uint64_t)v22, 6uLL);
      __int16 v23 = WORD2(v44);
      unsigned __int16 v24 = WORD2(v44) + 6;
      WORD2(v44) += 6;
      if (HIBYTE(v44))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_52:
        uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_54:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3545, v35);
      }

      if (BYTE6(v44) != 2)
      {
        uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_54;
      }

      char v25 = v22[6];
      WORD2(v44) = v23 + 7;
      *(_BYTE *)(v43 + v24) = v25;
      if (HIBYTE(v44))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_56:
        char v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_58:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3546, v36);
      }

      uint64_t v26 = WORD2(v44);
      if (BYTE6(v44) != 2)
      {
        char v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_58;
      }

      char v27 = v22[7];
      ++WORD2(v44);
      *(_BYTE *)(v43 + v26) = v27;
      if (HIBYTE(v44))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_60:
        int v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_62:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3547, v37);
      }

      uint64_t v28 = WORD2(v44);
      if (BYTE6(v44) != 2)
      {
        int v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_62;
      }

      char v29 = v22[8];
      ++WORD2(v44);
      *(_BYTE *)(v43 + v28) = v29;
      if (HIBYTE(v44))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_64:
        uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_66:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3548, v38);
      }

      uint64_t v30 = WORD2(v44);
      if (BYTE6(v44) != 2)
      {
        uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_66;
      }

      char v31 = v22[9];
      ++WORD2(v44);
      *(_BYTE *)(v43 + v30) = v31;
      a4 = (uint64_t)(v22 + 10);
      if (!--v18) {
        return sub_10018BD78(65014, v43, BYTE4(v44), a5, (uint64_t)sub_1000D4B68, v11, v12, v13);
      }
    }

    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_40:
    uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
LABEL_42:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3542, v32);
  }

  return sub_10018BD78(65014, v43, BYTE4(v44), a5, (uint64_t)sub_1000D4B68, v11, v12, v13);
}

uint64_t sub_1000CDBF0(__int16 a1, char a2, char a3, char a4, char a5, uint64_t a6)
{
  uint64_t v28 = 0LL;
  uint64_t v29 = 0LL;
  uint64_t result = sub_10018BCDC(&v28);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v29))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v16 = WORD2(v29);
      if (WORD1(v29) > WORD2(v29))
      {
        if (BYTE6(v29) == 2)
        {
          ++WORD2(v29);
          *(_BYTE *)(v28 + v16) = 5;
          if (HIBYTE(v29))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v29) - WORD2(v29) > 1)
          {
            if (BYTE6(v29) == 2)
            {
              *(_WORD *)(v28 + WORD2(v29)) = a1;
              __int16 v17 = WORD2(v29);
              unsigned __int16 v18 = WORD2(v29) + 2;
              WORD2(v29) += 2;
              if (HIBYTE(v29))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v29) > v18)
              {
                if (BYTE6(v29) == 2)
                {
                  WORD2(v29) = v17 + 3;
                  *(_BYTE *)(v28 + v18) = a2;
                  if (HIBYTE(v29))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else
                  {
                    uint64_t v19 = WORD2(v29);
                    if (WORD1(v29) > WORD2(v29))
                    {
                      if (BYTE6(v29) == 2)
                      {
                        ++WORD2(v29);
                        *(_BYTE *)(v28 + v19) = a3;
                        if (HIBYTE(v29))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }

                        else
                        {
                          uint64_t v20 = WORD2(v29);
                          if (WORD1(v29) > WORD2(v29))
                          {
                            if (BYTE6(v29) == 2)
                            {
                              ++WORD2(v29);
                              *(_BYTE *)(v28 + v20) = a4;
                              if (HIBYTE(v29))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }

                              else
                              {
                                uint64_t v21 = WORD2(v29);
                                if (WORD1(v29) > WORD2(v29))
                                {
                                  if (BYTE6(v29) == 2)
                                  {
                                    ++WORD2(v29);
                                    *(_BYTE *)(v28 + v21) = a5;
                                    return sub_10018BD78( 65014,  v28,  BYTE4(v29),  a6,  (uint64_t)sub_1000D4CD0,  v13,  v14,  v15);
                                  }

                                  char v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3587,  v27);
                                }
                              }

                              char v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_45;
                            }

                            uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3586,  v26);
                          }
                        }

                        uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_41;
                      }

                      char v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3585,  v25);
                    }
                  }

                  char v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_37;
                }

                unsigned __int16 v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3584,  v24);
              }

              unsigned __int16 v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_33;
            }

            __int16 v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3583,  v23);
          }

          __int16 v23 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_29;
        }

        unsigned __int16 v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3582, v22);
      }
    }

    unsigned __int16 v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_25;
  }

  return result;
}

uint64_t sub_1000CDF54(__int16 a1, uint64_t a2)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(_BYTE *)(v11 + v8) = 6;
          if (HIBYTE(v12))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v12) - WORD2(v12) > 1)
          {
            if (BYTE6(v12) == 2)
            {
              *(_WORD *)(v11 + WORD2(v12)) = a1;
              WORD2(v12) += 2;
              return sub_10018BD78(65014, v11, BYTE4(v12), a2, (uint64_t)sub_1000D4E38, v5, v6, v7);
            }

            uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3622,  v10);
          }

          uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_17;
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3621, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000CE0B8(char a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v10 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(_BYTE *)(v14 + v10) = a1;
          if (HIBYTE(v15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v11 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(_BYTE *)(v14 + v11) = a2;
                return sub_10018BD78(65476, v14, BYTE4(v15), a3, (uint64_t)sub_1000BC408, v7, v8, v9);
              }

              uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3766,  v13);
            }
          }

          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_17;
        }

        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3765, v12);
      }
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000CE208(__int16 a1, __int16 a2, char a3, char a4, uint64_t a5)
{
  uint64_t v22 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t result = sub_10018BCDC(&v22);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v23))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v23) - WORD2(v23) > 1)
    {
      if (BYTE6(v23) == 2)
      {
        *(_WORD *)(v22 + WORD2(v23)) = a1;
        unsigned __int16 v14 = WORD2(v23) + 2;
        WORD2(v23) += 2;
        if (HIBYTE(v23))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v23) - v14 > 1)
        {
          if (BYTE6(v23) == 2)
          {
            *(_BYTE *)(v22 + v14) = a2;
            *(_BYTE *)(v22 + WORD2(v23) + 1) = HIBYTE(a2);
            __int16 v15 = WORD2(v23);
            unsigned __int16 v16 = WORD2(v23) + 2;
            WORD2(v23) += 2;
            if (HIBYTE(v23))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v23) > v16)
            {
              if (BYTE6(v23) == 2)
              {
                WORD2(v23) = v15 + 3;
                *(_BYTE *)(v22 + v16) = a3;
                if (HIBYTE(v23))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else
                {
                  uint64_t v17 = WORD2(v23);
                  if (WORD1(v23) > WORD2(v23))
                  {
                    if (BYTE6(v23) == 2)
                    {
                      ++WORD2(v23);
                      *(_BYTE *)(v22 + v17) = a4;
                      return sub_10018BD78(65478, v22, BYTE4(v23), a5, (uint64_t)sub_1000BC408, v11, v12, v13);
                    }

                    uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3797,  v21);
                  }
                }

                uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_31;
              }

              uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3796,  v20);
            }

            uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_27;
          }

          uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3795, v19);
        }

        uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_23;
      }

      unsigned __int16 v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3794, v18);
    }

    unsigned __int16 v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000CE490(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(65480, v10, BYTE4(v11), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3780, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000CE55C(char a1, uint64_t a2)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(_BYTE *)(v14 + v8) = 16;
          if (HIBYTE(v15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v9 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(_BYTE *)(v14 + v9) = 16;
                if (HIBYTE(v15))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else
                {
                  uint64_t v10 = WORD2(v15);
                  if (WORD1(v15) > WORD2(v15))
                  {
                    if (BYTE6(v15) == 2)
                    {
                      ++WORD2(v15);
                      *(_BYTE *)(v14 + v10) = a1;
                      return sub_10018BD78(65317, v14, BYTE4(v15), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
                    }

                    uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3673,  v13);
                  }
                }

                uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_24;
              }

              uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3672,  v12);
            }
          }

          uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_20;
        }

        uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3671, v11);
      }
    }

    uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000CE720( char a1, char a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, char a10, __int16 a11, char a12, uint64_t a13)
{
  uint64_t v45 = 0LL;
  uint64_t v46 = 0LL;
  uint64_t result = sub_10018BCDC(&v45);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v46))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v25 = WORD2(v46);
      if (WORD1(v46) > WORD2(v46))
      {
        if (BYTE6(v46) == 2)
        {
          ++WORD2(v46);
          *(_BYTE *)(v45 + v25) = a1;
          if (HIBYTE(v46))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v26 = WORD2(v46);
            if (WORD1(v46) > WORD2(v46))
            {
              if (BYTE6(v46) == 2)
              {
                ++WORD2(v46);
                *(_BYTE *)(v45 + v26) = a2;
                if (HIBYTE(v46))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v46) - WORD2(v46) > 3)
                {
                  if (BYTE6(v46) == 2)
                  {
                    *(_WORD *)(v45 + WORD2(v46)) = a3;
                    *(_BYTE *)(v45 + WORD2(v46) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a3);
                    *(_BYTE *)(v45 + WORD2(v46) + 3) = HIBYTE(a3);
                    unsigned __int16 v27 = WORD2(v46) + 4;
                    WORD2(v46) += 4;
                    if (HIBYTE(v46))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }

                    else if (WORD1(v46) - v27 > 3)
                    {
                      if (BYTE6(v46) == 2)
                      {
                        *(_BYTE *)(v45 + v27) = a4;
                        *(_BYTE *)(v45 + WORD2(v46) + 1) = BYTE1(a4);
                        *(_BYTE *)(v45 + WORD2(v46) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a4);
                        *(_BYTE *)(v45 + WORD2(v46) + 3) = HIBYTE(a4);
                        unsigned __int16 v28 = WORD2(v46) + 4;
                        WORD2(v46) += 4;
                        if (HIBYTE(v46))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }

                        else if (WORD1(v46) - v28 > 3)
                        {
                          if (BYTE6(v46) == 2)
                          {
                            *(_BYTE *)(v45 + v28) = a5;
                            *(_BYTE *)(v45 + WORD2(v46) + 1) = BYTE1(a5);
                            *(_BYTE *)(v45 + WORD2(v46) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a5);
                            *(_BYTE *)(v45 + WORD2(v46) + 3) = HIBYTE(a5);
                            unsigned __int16 v29 = WORD2(v46) + 4;
                            WORD2(v46) += 4;
                            if (HIBYTE(v46))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }

                            else if (WORD1(v46) - v29 > 3)
                            {
                              if (BYTE6(v46) == 2)
                              {
                                *(_BYTE *)(v45 + v29) = a6;
                                *(_BYTE *)(v45 + WORD2(v46) + 1) = BYTE1(a6);
                                *(_BYTE *)(v45 + WORD2(v46) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a6);
                                *(_BYTE *)(v45 + WORD2(v46) + 3) = HIBYTE(a6);
                                unsigned __int16 v30 = WORD2(v46) + 4;
                                WORD2(v46) += 4;
                                if (HIBYTE(v46))
                                {
                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/aci/aci_vsc.c");
                                }

                                else if (WORD1(v46) - v30 > 3)
                                {
                                  if (BYTE6(v46) == 2)
                                  {
                                    *(_BYTE *)(v45 + v30) = a7;
                                    *(_BYTE *)(v45 + WORD2(v46) + 1) = BYTE1(a7);
                                    *(_BYTE *)(v45 + WORD2(v46) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a7);
                                    *(_BYTE *)(v45 + WORD2(v46) + 3) = HIBYTE(a7);
                                    unsigned __int16 v31 = WORD2(v46) + 4;
                                    WORD2(v46) += 4;
                                    if (HIBYTE(v46))
                                    {
                                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }

                                    else if (WORD1(v46) - v31 > 3)
                                    {
                                      if (BYTE6(v46) == 2)
                                      {
                                        *(_BYTE *)(v45 + v31) = a8;
                                        *(_BYTE *)(v45 + WORD2(v46) + 1) = BYTE1(a8);
                                        *(_BYTE *)(v45 + WORD2(v46) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a8);
                                        *(_BYTE *)(v45 + WORD2(v46) + 3) = HIBYTE(a8);
                                        unsigned __int16 v32 = WORD2(v46) + 4;
                                        WORD2(v46) += 4;
                                        if (HIBYTE(v46))
                                        {
                                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/aci/aci_vsc.c");
                                        }

                                        else if (WORD1(v46) - v32 > 3)
                                        {
                                          if (BYTE6(v46) == 2)
                                          {
                                            *(_BYTE *)(v45 + v3pthread_attr_setdetachstate(&v7, 2) = a9;
                                            *(_BYTE *)(v45 + WORD2(v46) + 1) = a10;
                                            *(_WORD *)(v45 + WORD2(v46) + pthread_attr_setdetachstate(&v7, 2) = a11;
                                            __int16 v33 = WORD2(v46);
                                            unsigned __int16 v34 = WORD2(v46) + 4;
                                            WORD2(v46) += 4;
                                            if (HIBYTE(v46))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/aci/aci_vsc.c");
                                            }

                                            else if (WORD1(v46) > v34)
                                            {
                                              if (BYTE6(v46) == 2)
                                              {
                                                WORD2(v46) = v33 + 5;
                                                *(_BYTE *)(v45 + v34) = a12;
                                                return sub_10018BD78( 65049,  v45,  BYTE4(v46),  a13,  (uint64_t)sub_1000BC408,  v22,  v23,  v24);
                                              }

                                              uint64_t v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_73:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3847,  v44);
                                            }

                                            uint64_t v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                            goto LABEL_73;
                                          }

                                          uint64_t v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_69:
                                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3846,  v43);
                                        }

                                        uint64_t v43 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                        goto LABEL_69;
                                      }

                                      uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_65:
                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3845,  v42);
                                    }

                                    uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                    goto LABEL_65;
                                  }

                                  unsigned __int16 v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3844,  v41);
                                }

                                unsigned __int16 v41 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                goto LABEL_61;
                              }

                              uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_57:
                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3843,  v40);
                            }

                            uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                            goto LABEL_57;
                          }

                          uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_53:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3842,  v39);
                        }

                        uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                        goto LABEL_53;
                      }

                      uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_49:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3841,  v38);
                    }

                    uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                    goto LABEL_49;
                  }

                  int v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3840,  v37);
                }

                int v37 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                goto LABEL_45;
              }

              char v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3839,  v36);
            }
          }

          char v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_41;
        }

        uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3838, v35);
      }
    }

    uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_37;
  }

  return result;
}

uint64_t sub_1000CEE38(char a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v10 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(_BYTE *)(v14 + v10) = a1;
          if (HIBYTE(v15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v11 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(_BYTE *)(v14 + v11) = a2;
                return sub_10018BD78(65050, v14, BYTE4(v15), a3, (uint64_t)sub_1000BC408, v7, v8, v9);
              }

              uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3862,  v13);
            }
          }

          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_17;
        }

        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3861, v12);
      }
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000CEF88(char a1, uint64_t a2)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(_BYTE *)(v14 + v8) = 0;
          if (HIBYTE(v15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v9 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(_BYTE *)(v14 + v9) = 1;
                if (HIBYTE(v15))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else
                {
                  uint64_t v10 = WORD2(v15);
                  if (WORD1(v15) > WORD2(v15))
                  {
                    if (BYTE6(v15) == 2)
                    {
                      ++WORD2(v15);
                      *(_BYTE *)(v14 + v10) = a1;
                      return sub_10018BD78(65520, v14, BYTE4(v15), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
                    }

                    uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3036,  v13);
                  }
                }

                uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_24;
              }

              uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3035,  v12);
            }
          }

          uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_20;
        }

        uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3032, v11);
      }
    }

    uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000CF148(char a1, uint64_t a2)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(_BYTE *)(v13 + v8) = a1;
          if (HIBYTE(v14))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v14) - WORD2(v14) > 3)
          {
            if (BYTE6(v14) == 2)
            {
              *(_BYTE *)(v13 + WORD2(v14)) = 0;
              *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
              *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
              unsigned __int16 v9 = WORD2(v14) + 4;
              WORD2(v14) += 4;
              if (HIBYTE(v14))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v14) - v9 > 3)
              {
                if (BYTE6(v14) == 2)
                {
                  *(_BYTE *)(v13 + v9) = 0;
                  *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
                  *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
                  WORD2(v14) += 4;
                  return sub_10018BD78(65428, v13, BYTE4(v14), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
                }

                uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3051,  v12);
              }

              uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_24;
            }

            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3050,  v11);
          }

          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_20;
        }

        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3049, v10);
      }
    }

    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000CF374(char a1, uint64_t a2)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(_BYTE *)(v13 + v8) = a1;
          if (HIBYTE(v14))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v14) - WORD2(v14) > 3)
          {
            if (BYTE6(v14) == 2)
            {
              *(_BYTE *)(v13 + WORD2(v14)) = 0;
              *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
              *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
              unsigned __int16 v9 = WORD2(v14) + 4;
              WORD2(v14) += 4;
              if (HIBYTE(v14))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v14) - v9 > 3)
              {
                if (BYTE6(v14) == 2)
                {
                  *(_BYTE *)(v13 + v9) = 0;
                  *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
                  *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
                  WORD2(v14) += 4;
                  return sub_10018BD78(65429, v13, BYTE4(v14), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
                }

                uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3066,  v12);
              }

              uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_24;
            }

            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3065,  v11);
          }

          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_20;
        }

        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3064, v10);
      }
    }

    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000CF5A0(_OWORD *a1, uint64_t a2)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v15) - (unint64_t)WORD2(v15) > 0x1F)
    {
      if (BYTE6(v15) == 2)
      {
        uint64_t v8 = (_OWORD *)(v14 + WORD2(v15));
        __int128 v9 = a1[1];
        *uint64_t v8 = *a1;
        v8[1] = v9;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 32;
        WORD2(v15) += 32;
        if (HIBYTE(v15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 33;
            *(_BYTE *)(v14 + v11) = -1;
            return sub_10018BD78(64890, v14, BYTE4(v15), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
          }

          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3080, v13);
        }

        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }

      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3079, v12);
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= (sizeof(VSCTraceMask))";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000CF6F8(_OWORD *a1, uint64_t a2)
{
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t result = sub_10018BCDC(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v16) - (unint64_t)WORD2(v16) > 0x1F)
    {
      if (BYTE6(v16) == 2)
      {
        uint64_t v8 = (_OWORD *)(v15 + WORD2(v16));
        __int128 v9 = a1[1];
        *uint64_t v8 = *a1;
        v8[1] = v9;
        unsigned __int16 v10 = WORD2(v16) + 32;
        WORD2(v16) += 32;
        if (HIBYTE(v16))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v16) - v10 > 3)
        {
          if (BYTE6(v16) == 2)
          {
            *(_BYTE *)(v15 + v10) = 0;
            *(_WORD *)(v15 + WORD2(v16) + 1) = 0;
            *(_BYTE *)(v15 + WORD2(v16) + 3) = 0;
            unsigned __int16 v11 = WORD2(v16) + 4;
            WORD2(v16) += 4;
            if (HIBYTE(v16))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v16) - v11 > 3)
            {
              if (BYTE6(v16) == 2)
              {
                *(_BYTE *)(v15 + v11) = 0;
                *(_WORD *)(v15 + WORD2(v16) + 1) = 0;
                *(_BYTE *)(v15 + WORD2(v16) + 3) = 0;
                WORD2(v16) += 4;
                return sub_10018BD78(65430, v15, BYTE4(v16), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
              }

              uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3095,  v14);
            }

            uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_24;
          }

          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3094, v13);
        }

        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_20;
      }

      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3093, v12);
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= (sizeof(VSCTraceMask))";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000CF934(int a1, uint64_t a2)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v14) - WORD2(v14) > 3)
    {
      if (BYTE6(v14) == 2)
      {
        *(_WORD *)(v13 + WORD2(v14)) = a1;
        *(_BYTE *)(v13 + WORD2(v14) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a1);
        *(_BYTE *)(v13 + WORD2(v14) + 3) = HIBYTE(a1);
        unsigned __int16 v8 = WORD2(v14) + 4;
        WORD2(v14) += 4;
        if (HIBYTE(v14))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v14) - v8 > 3)
        {
          if (BYTE6(v14) == 2)
          {
            *(_BYTE *)(v13 + v8) = 0;
            *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
            *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
            unsigned __int16 v9 = WORD2(v14) + 4;
            WORD2(v14) += 4;
            if (HIBYTE(v14))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v14) - v9 > 3)
            {
              if (BYTE6(v14) == 2)
              {
                *(_BYTE *)(v13 + v9) = 0;
                *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
                *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
                WORD2(v14) += 4;
                return sub_10018BD78(65431, v13, BYTE4(v14), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
              }

              uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3110,  v12);
            }

            uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_24;
          }

          unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3109, v11);
        }

        unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_20;
      }

      unsigned __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3108, v10);
    }

    unsigned __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000CFBA4(int a1, uint64_t a2)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t result = sub_10018BCDC(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v10) - WORD2(v10) > 3)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        *(_BYTE *)(v9 + WORD2(v10) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a1);
        *(_BYTE *)(v9 + WORD2(v10) + 3) = HIBYTE(a1);
        WORD2(v10) += 4;
        return sub_10018BD78(65522, v9, BYTE4(v10), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
      }

      unsigned __int16 v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3241, v8);
    }

    unsigned __int16 v8 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000CFCB4(char a1, void (*a2)(void))
{
  byte_1008DFD80 = a1;
  return 0LL;
}

uint64_t sub_1000CFCE4( __int16 a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10018BD78(a1, a2, a3, a4, (uint64_t)sub_1000BC408, a6, a7, a8);
}

uint64_t sub_1000CFCF4(char a1, uint64_t a2)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(_BYTE *)(v13 + v8) = a1;
          if (HIBYTE(v14))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v14) - WORD2(v14) > 3)
          {
            if (BYTE6(v14) == 2)
            {
              *(_BYTE *)(v13 + WORD2(v14)) = -1;
              *(_BYTE *)(v13 + WORD2(v14) + 1) = -1;
              *(_BYTE *)(v13 + WORD2(v14) + pthread_attr_setdetachstate(&v7, 2) = -1;
              *(_BYTE *)(v13 + WORD2(v14) + 3) = -1;
              unsigned __int16 v9 = WORD2(v14) + 4;
              WORD2(v14) += 4;
              if (HIBYTE(v14))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v14) - v9 > 3)
              {
                if (BYTE6(v14) == 2)
                {
                  *(_BYTE *)(v13 + v9) = -1;
                  *(_BYTE *)(v13 + WORD2(v14) + 1) = -1;
                  *(_BYTE *)(v13 + WORD2(v14) + pthread_attr_setdetachstate(&v7, 2) = -1;
                  *(_BYTE *)(v13 + WORD2(v14) + 3) = -1;
                  WORD2(v14) += 4;
                  return sub_10018BD78(64898, v13, BYTE4(v14), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
                }

                uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1157,  v12);
              }

              uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_24;
            }

            unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  1156,  v11);
          }

          unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_20;
        }

        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1155, v10);
      }
    }

    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1000CFF24(__int16 a1, char a2, char a3, char *a4, unsigned int a5, uint64_t a6)
{
  uint64_t v26 = 0LL;
  uint64_t v27 = 0LL;
  uint64_t result = sub_10018BCDC(&v26);
  if ((_DWORD)result) {
    return result;
  }
  if (HIBYTE(v27))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_24;
  }

  if (WORD1(v27) - WORD2(v27) <= 1)
  {
LABEL_24:
    uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_26;
  }

  if (BYTE6(v27) != 2)
  {
    uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2208, v23);
  }

  *(_WORD *)(v26 + WORD2(v27)) = a1;
  __int16 v16 = WORD2(v27);
  unsigned __int16 v17 = WORD2(v27) + 2;
  WORD2(v27) += 2;
  if (HIBYTE(v27))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_28;
  }

  if (WORD1(v27) <= v17)
  {
LABEL_28:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_30;
  }

  if (BYTE6(v27) != 2)
  {
    uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2209, v24);
  }

  WORD2(v27) = v16 + 3;
  *(_BYTE *)(v26 + v17) = a2;
  if (HIBYTE(v27))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_32;
  }

  uint64_t v18 = WORD2(v27);
  if (WORD1(v27) <= WORD2(v27))
  {
LABEL_32:
    uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_34;
  }

  if (BYTE6(v27) != 2)
  {
    uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2210, v25);
  }

  ++WORD2(v27);
  *(_BYTE *)(v26 + v18) = a3;
  if (a5)
  {
    uint64_t v19 = a5;
    while (!HIBYTE(v27))
    {
      uint64_t v20 = WORD2(v27);
      if (BYTE6(v27) != 2)
      {
        uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_22;
      }

      char v21 = *a4++;
      ++WORD2(v27);
      *(_BYTE *)(v26 + v20) = v21;
      if (!--v19) {
        return sub_10018BD78(65475, v26, BYTE4(v27), a6, (uint64_t)sub_1000BC408, v13, v14, v15);
      }
    }

    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_20:
    uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_22:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2212, v22);
  }

  return sub_10018BD78(65475, v26, BYTE4(v27), a6, (uint64_t)sub_1000BC408, v13, v14, v15);
}

uint64_t sub_1000D01A8(int a1, uint64_t a2)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v12) - WORD2(v12) > 3)
    {
      if (BYTE6(v12) == 2)
      {
        *(_WORD *)(v11 + WORD2(v12)) = a1;
        *(_BYTE *)(v11 + WORD2(v12) + pthread_attr_setdetachstate(&v7, 2) = BYTE2(a1);
        *(_BYTE *)(v11 + WORD2(v12) + 3) = HIBYTE(a1);
        unsigned __int16 v8 = WORD2(v12) + 4;
        WORD2(v12) += 4;
        if (HIBYTE(v12))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v12) - v8 > 3)
        {
          if (BYTE6(v12) == 2)
          {
            *(_BYTE *)(v11 + v8) = 1;
            *(_WORD *)(v11 + WORD2(v12) + 1) = 0;
            *(_BYTE *)(v11 + WORD2(v12) + 3) = 0;
            WORD2(v12) += 4;
            return sub_10018BD78(65393, v11, BYTE4(v12), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
          }

          uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1134, v10);
        }

        uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_17;
      }

      unsigned __int16 v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1133, v9);
    }

    unsigned __int16 v9 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1000D036C(char a1, uint64_t a2)
{
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t result = sub_10018BCDC(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16))
      {
        if (BYTE6(v16) == 2)
        {
          ++WORD2(v16);
          *(_BYTE *)(v15 + v8) = a1;
          if (HIBYTE(v16))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v16) - WORD2(v16) > 3)
          {
            if (BYTE6(v16) == 2)
            {
              *(_BYTE *)(v15 + WORD2(v16)) = -1;
              *(_BYTE *)(v15 + WORD2(v16) + 1) = -1;
              *(_BYTE *)(v15 + WORD2(v16) + pthread_attr_setdetachstate(&v7, 2) = -1;
              *(_BYTE *)(v15 + WORD2(v16) + 3) = -1;
              unsigned __int16 v9 = WORD2(v16) + 4;
              WORD2(v16) += 4;
              if (HIBYTE(v16))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v16) - v9 > 3)
              {
                if (BYTE6(v16) == 2)
                {
                  *(_BYTE *)(v15 + v9) = -1;
                  *(_BYTE *)(v15 + WORD2(v16) + 1) = -1;
                  *(_BYTE *)(v15 + WORD2(v16) + pthread_attr_setdetachstate(&v7, 2) = -1;
                  *(_BYTE *)(v15 + WORD2(v16) + 3) = -1;
                  unsigned __int16 v10 = WORD2(v16) + 4;
                  WORD2(v16) += 4;
                  if (HIBYTE(v16))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else if (WORD1(v16) - v10 > 3)
                  {
                    if (BYTE6(v16) == 2)
                    {
                      *(_BYTE *)(v15 + v10) = -1;
                      *(_BYTE *)(v15 + WORD2(v16) + 1) = -1;
                      *(_BYTE *)(v15 + WORD2(v16) + pthread_attr_setdetachstate(&v7, 2) = -1;
                      *(_BYTE *)(v15 + WORD2(v16) + 3) = -1;
                      WORD2(v16) += 4;
                      return sub_10018BD78(64906, v15, BYTE4(v16), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
                    }

                    uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3751,  v14);
                  }

                  uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                  goto LABEL_31;
                }

                uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3750,  v13);
              }

              uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_27;
            }

            uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3749,  v12);
          }

          uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_23;
        }

        uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3748, v11);
      }
    }

    uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000D064C(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = sub_10018BCDC(&v6);
  if (!(_DWORD)result) {
    return sub_10018BD78(65360, v6, BYTE4(v7), a1, (uint64_t)sub_1000BCE94, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1000D069C( char a1, __int16 a2, char a3, char a4, char a5, char a6, char a7, char a8, char a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, int a16, int a17, char a18, char a19, __int16 a20, char a21, int a22, uint64_t a23)
{
  uint64_t v70 = 0LL;
  uint64_t v71 = 0LL;
  uint64_t result = sub_10018BCDC(&v70);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v71))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v35 = WORD2(v71);
      if (WORD1(v71) > WORD2(v71))
      {
        if (BYTE6(v71) == 2)
        {
          ++WORD2(v71);
          *(_BYTE *)(v70 + v35) = a1;
          if (HIBYTE(v71))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v71) - WORD2(v71) > 1)
          {
            if (BYTE6(v71) == 2)
            {
              *(_WORD *)(v70 + WORD2(v71)) = a2;
              __int16 v36 = WORD2(v71);
              unsigned __int16 v37 = WORD2(v71) + 2;
              WORD2(v71) += 2;
              if (HIBYTE(v71))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v71) > v37)
              {
                if (BYTE6(v71) == 2)
                {
                  WORD2(v71) = v36 + 3;
                  *(_BYTE *)(v70 + v37) = a3;
                  if (HIBYTE(v71))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else
                  {
                    uint64_t v38 = WORD2(v71);
                    if (WORD1(v71) > WORD2(v71))
                    {
                      if (BYTE6(v71) == 2)
                      {
                        ++WORD2(v71);
                        *(_BYTE *)(v70 + v38) = a4;
                        if (HIBYTE(v71))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }

                        else
                        {
                          uint64_t v39 = WORD2(v71);
                          if (WORD1(v71) > WORD2(v71))
                          {
                            if (BYTE6(v71) == 2)
                            {
                              ++WORD2(v71);
                              *(_BYTE *)(v70 + v39) = a5;
                              if (HIBYTE(v71))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }

                              else
                              {
                                uint64_t v40 = WORD2(v71);
                                if (WORD1(v71) > WORD2(v71))
                                {
                                  if (BYTE6(v71) == 2)
                                  {
                                    ++WORD2(v71);
                                    *(_BYTE *)(v70 + v40) = a6;
                                    if (HIBYTE(v71))
                                    {
                                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }

                                    else
                                    {
                                      uint64_t v41 = WORD2(v71);
                                      if (WORD1(v71) > WORD2(v71))
                                      {
                                        if (BYTE6(v71) == 2)
                                        {
                                          ++WORD2(v71);
                                          *(_BYTE *)(v70 + v41) = a7;
                                          if (HIBYTE(v71))
                                          {
                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/aci/aci_vsc.c");
                                          }

                                          else
                                          {
                                            uint64_t v42 = WORD2(v71);
                                            if (WORD1(v71) > WORD2(v71))
                                            {
                                              if (BYTE6(v71) == 2)
                                              {
                                                ++WORD2(v71);
                                                *(_BYTE *)(v70 + v4pthread_attr_setdetachstate(&v7, 2) = a8;
                                                if (HIBYTE(v71))
                                                {
                                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/aci/aci_vsc.c");
                                                }

                                                else
                                                {
                                                  uint64_t v43 = WORD2(v71);
                                                  if (WORD1(v71) > WORD2(v71))
                                                  {
                                                    if (BYTE6(v71) == 2)
                                                    {
                                                      ++WORD2(v71);
                                                      *(_BYTE *)(v70 + v43) = a9;
                                                      if (HIBYTE(v71))
                                                      {
                                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                      }

                                                      else if (WORD1(v71) - WORD2(v71) > 1)
                                                      {
                                                        if (BYTE6(v71) == 2)
                                                        {
                                                          *(_WORD *)(v70 + WORD2(v71)) = a10;
                                                          unsigned __int16 v44 = WORD2(v71) + 2;
                                                          WORD2(v71) += 2;
                                                          if (HIBYTE(v71))
                                                          {
                                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources"
                                                                                   "/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                          }

                                                          else if (WORD1(v71) - v44 > 1)
                                                          {
                                                            if (BYTE6(v71) == 2)
                                                            {
                                                              *(_BYTE *)(v70 + v44) = a11;
                                                              *(_BYTE *)(v70 + WORD2(v71) + 1) = a12;
                                                              unsigned __int16 v45 = WORD2(v71) + 2;
                                                              WORD2(v71) += 2;
                                                              if (HIBYTE(v71))
                                                              {
                                                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sou"
                                                                                       "rces/MobileBluetooth_base/Stack/v"
                                                                                       "sc/aci/aci_vsc.c");
                                                              }

                                                              else if (WORD1(v71) - v45 > 1)
                                                              {
                                                                if (BYTE6(v71) == 2)
                                                                {
                                                                  *(_BYTE *)(v70 + v45) = a13;
                                                                  *(_BYTE *)(v70 + WORD2(v71) + 1) = a14;
                                                                  __int16 v46 = WORD2(v71);
                                                                  unsigned __int16 v47 = WORD2(v71) + 2;
                                                                  WORD2(v71) += 2;
                                                                  if (HIBYTE(v71))
                                                                  {
                                                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/vsc/aci/aci_vsc.c");
                                                                  }

                                                                  else if (WORD1(v71) > v47)
                                                                  {
                                                                    if (BYTE6(v71) == 2)
                                                                    {
                                                                      WORD2(v71) = v46 + 3;
                                                                      *(_BYTE *)(v70 + v47) = a15;
                                                                      if (HIBYTE(v71))
                                                                      {
                                                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple"
                                                                                               ".xbs/Sources/MobileBlueto"
                                                                                               "oth_base/Stack/vsc/aci/aci_vsc.c");
                                                                      }

                                                                      else if (WORD1(v71) - WORD2(v71) > 3)
                                                                      {
                                                                        if (BYTE6(v71) == 2)
                                                                        {
                                                                          *(_DWORD *)(v70 + WORD2(v71)) = a16;
                                                                          unsigned __int16 v48 = WORD2(v71) + 4;
                                                                          WORD2(v71) += 4;
                                                                          if (HIBYTE(v71))
                                                                          {
                                                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.a"
                                                                                                   "pple.xbs/Sources/Mobi"
                                                                                                   "leBluetooth_base/Stac"
                                                                                                   "k/vsc/aci/aci_vsc.c");
                                                                          }

                                                                          else if (WORD1(v71) - v48 > 3)
                                                                          {
                                                                            if (BYTE6(v71) == 2)
                                                                            {
                                                                              *(_BYTE *)(v70 + v48) = a17;
                                                                              *(_WORD *)(v70 + WORD2(v71) + 1) = *(_WORD *)((char *)&a17 + 1);
                                                                              *(_BYTE *)(v70 + WORD2(v71) + 3) = HIBYTE(a17);
                                                                              unsigned __int16 v49 = WORD2(v71) + 4;
                                                                              WORD2(v71) += 4;
                                                                              if (HIBYTE(v71))
                                                                              {
                                                                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                                              }

                                                                              else if (WORD1(v71) - v49 > 3)
                                                                              {
                                                                                if (BYTE6(v71) == 2)
                                                                                {
                                                                                  *(_BYTE *)(v70 + v49) = a18;
                                                                                  *(_BYTE *)(v70 + WORD2(v71) + 1) = a19;
                                                                                  *(_WORD *)(v70 + WORD2(v71) + pthread_attr_setdetachstate(&v7, 2) = a20;
                                                                                  __int16 v50 = WORD2(v71);
                                                                                  unsigned __int16 v51 = WORD2(v71) + 4;
                                                                                  WORD2(v71) += 4;
                                                                                  if (HIBYTE(v71))
                                                                                  {
                                                                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                                                  }

                                                                                  else if (WORD1(v71) > v51)
                                                                                  {
                                                                                    if (BYTE6(v71) == 2)
                                                                                    {
                                                                                      WORD2(v71) = v50 + 5;
                                                                                      *(_BYTE *)(v70 + v51) = a21;
                                                                                      if (HIBYTE(v71))
                                                                                      {
                                                                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                                                      }

                                                                                      else if (WORD1(v71) - WORD2(v71) > 3)
                                                                                      {
                                                                                        if (BYTE6(v71) == 2)
                                                                                        {
                                                                                          *(_DWORD *)(v70 + WORD2(v71)) = a22;
                                                                                          WORD2(v71) += 4;
                                                                                          return sub_10018BD78( 65481,  v70,  BYTE4(v71),  a23,  (uint64_t)sub_1000BC408,  v32,  v33,  v34);
                                                                                        }

                                                                                        uint64_t v69 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_129:
                                                                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/ Sources/MobileBluetooth_base/S tack/vsc/aci/aci_vsc.c",  2243,  v69);
                                                                                      }

                                                                                      uint64_t v69 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                                                                      goto LABEL_129;
                                                                                    }

                                                                                    int v68 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_125:
                                                                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sour ces/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2242,  v68);
                                                                                  }

                                                                                  int v68 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                  goto LABEL_125;
                                                                                }

                                                                                unsigned int v67 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_121:
                                                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/ MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2241,  v67);
                                                                              }

                                                                              unsigned int v67 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                                                              goto LABEL_121;
                                                                            }

                                                                            uint64_t v66 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_117:
                                                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mobi leBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2240,  v66);
                                                                          }

                                                                          uint64_t v66 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                                                          goto LABEL_117;
                                                                        }

                                                                        uint64_t v65 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_113:
                                                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBl uetooth_base/Stack/vsc/aci/aci_vsc.c",  2239,  v65);
                                                                      }

                                                                      uint64_t v65 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                                                      goto LABEL_113;
                                                                    }

                                                                    uint64_t v64 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_109:
                                                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBlueto oth_base/Stack/vsc/aci/aci_vsc.c",  2238,  v64);
                                                                  }

                                                                  uint64_t v64 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                  goto LABEL_109;
                                                                }

                                                                uint64_t v63 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_105:
                                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_ base/Stack/vsc/aci/aci_vsc.c",  2237,  v63);
                                                              }

                                                              uint64_t v63 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                              goto LABEL_105;
                                                            }

                                                            uint64_t v62 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_101:
                                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base /Stack/vsc/aci/aci_vsc.c",  2236,  v62);
                                                          }

                                                          uint64_t v62 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                          goto LABEL_101;
                                                        }

                                                        uint64_t v61 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_97:
                                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Sta ck/vsc/aci/aci_vsc.c",  2235,  v61);
                                                      }

                                                      uint64_t v61 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                      goto LABEL_97;
                                                    }

                                                    uint64_t v60 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_93:
                                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/v sc/aci/aci_vsc.c",  2234,  v60);
                                                  }
                                                }

                                                uint64_t v60 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_93;
                                              }

                                              uint64_t v59 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_89:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2233,  v59);
                                            }
                                          }

                                          uint64_t v59 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_89;
                                        }

                                        uint64_t v58 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_85:
                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2232,  v58);
                                      }
                                    }

                                    uint64_t v58 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_85;
                                  }

                                  uint64_t v57 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_81:
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2231,  v57);
                                }
                              }

                              uint64_t v57 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_81;
                            }

                            unint64_t v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_77:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2230,  v56);
                          }
                        }

                        unint64_t v56 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_77;
                      }

                      BOOL v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_73:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2229,  v55);
                    }
                  }

                  BOOL v55 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_73;
                }

                int v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_69:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2228,  v54);
              }

              int v54 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_69;
            }

            unsigned __int8 v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_65:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2227,  v53);
          }

          unsigned __int8 v53 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_65;
        }

        unsigned __int8 v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2226, v52);
      }
    }

    unsigned __int8 v52 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_61;
  }

  return result;
}

uint64_t sub_1000D1138( uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, uint64_t a11)
{
  uint64_t v48 = 0LL;
  uint64_t v49 = 0LL;
  uint64_t result = sub_10018BCDC(&v48);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v49))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v20 = WORD2(v49);
      if (WORD1(v49) > WORD2(v49))
      {
        if (BYTE6(v49) == 2)
        {
          ++WORD2(v49);
          *(_BYTE *)(v48 + v20) = 88;
          v47[0] = BYTE5(a1);
          v47[1] = BYTE4(a1);
          _OWORD v47[2] = BYTE3(a1);
          v47[3] = BYTE2(a1);
          v47[4] = BYTE1(a1);
          v47[5] = a1;
          if (HIBYTE(v49))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v49) - WORD2(v49) > 5)
          {
            if (BYTE6(v49) == 2)
            {
              sub_1001F0050(v48 + WORD2(v49), (uint64_t)v47, 6uLL);
              __int16 v24 = WORD2(v49);
              unsigned __int16 v25 = WORD2(v49) + 6;
              WORD2(v49) += 6;
              if (HIBYTE(v49))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v49) > v25)
              {
                if (BYTE6(v49) == 2)
                {
                  WORD2(v49) = v24 + 7;
                  *(_BYTE *)(v48 + v25) = BYTE6(a1);
                  if (HIBYTE(v49))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else
                  {
                    uint64_t v26 = WORD2(v49);
                    if (WORD1(v49) > WORD2(v49))
                    {
                      if (BYTE6(v49) == 2)
                      {
                        ++WORD2(v49);
                        *(_BYTE *)(v48 + v26) = a2;
                        if (HIBYTE(v49))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }

                        else
                        {
                          uint64_t v27 = WORD2(v49);
                          if (WORD1(v49) > WORD2(v49))
                          {
                            if (BYTE6(v49) == 2)
                            {
                              ++WORD2(v49);
                              *(_BYTE *)(v48 + v27) = a3;
                              if (HIBYTE(v49))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }

                              else
                              {
                                uint64_t v28 = WORD2(v49);
                                if (WORD1(v49) > WORD2(v49))
                                {
                                  if (BYTE6(v49) == 2)
                                  {
                                    ++WORD2(v49);
                                    *(_BYTE *)(v48 + v28) = a4;
                                    if (HIBYTE(v49))
                                    {
                                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }

                                    else
                                    {
                                      uint64_t v29 = WORD2(v49);
                                      if (WORD1(v49) > WORD2(v49))
                                      {
                                        if (BYTE6(v49) == 2)
                                        {
                                          ++WORD2(v49);
                                          *(_BYTE *)(v48 + v29) = a5;
                                          if (HIBYTE(v49))
                                          {
                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/aci/aci_vsc.c");
                                          }

                                          else
                                          {
                                            uint64_t v30 = WORD2(v49);
                                            if (WORD1(v49) > WORD2(v49))
                                            {
                                              if (BYTE6(v49) == 2)
                                              {
                                                ++WORD2(v49);
                                                *(_BYTE *)(v48 + v30) = a6;
                                                if (HIBYTE(v49))
                                                {
                                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/aci/aci_vsc.c");
                                                }

                                                else
                                                {
                                                  uint64_t v31 = WORD2(v49);
                                                  if (WORD1(v49) > WORD2(v49))
                                                  {
                                                    if (BYTE6(v49) == 2)
                                                    {
                                                      ++WORD2(v49);
                                                      *(_BYTE *)(v48 + v31) = a7;
                                                      if (HIBYTE(v49))
                                                      {
                                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                      }

                                                      else
                                                      {
                                                        uint64_t v32 = WORD2(v49);
                                                        if (WORD1(v49) > WORD2(v49))
                                                        {
                                                          if (BYTE6(v49) == 2)
                                                          {
                                                            ++WORD2(v49);
                                                            *(_BYTE *)(v48 + v3pthread_attr_setdetachstate(&v7, 2) = a8;
                                                            if (HIBYTE(v49))
                                                            {
                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sourc"
                                                                                     "es/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                            }

                                                            else
                                                            {
                                                              uint64_t v33 = WORD2(v49);
                                                              if (WORD1(v49) > WORD2(v49))
                                                              {
                                                                if (BYTE6(v49) == 2)
                                                                {
                                                                  ++WORD2(v49);
                                                                  *(_BYTE *)(v48 + v33) = a9;
                                                                  if (HIBYTE(v49))
                                                                  {
                                                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/vsc/aci/aci_vsc.c");
                                                                  }

                                                                  else
                                                                  {
                                                                    uint64_t v34 = WORD2(v49);
                                                                    if (WORD1(v49) > WORD2(v49))
                                                                    {
                                                                      if (BYTE6(v49) == 2)
                                                                      {
                                                                        ++WORD2(v49);
                                                                        *(_BYTE *)(v48 + v34) = a10;
                                                                        return sub_10018BD78( 65017,  v48,  BYTE4(v49),  a11,  (uint64_t)sub_1000D2FD0,  v21,  v22,  v23);
                                                                      }

                                                                      __int16 v46 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_87:
                                                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBlue tooth_base/Stack/vsc/aci/aci_vsc.c",  2019,  v46);
                                                                    }
                                                                  }

                                                                  __int16 v46 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                  goto LABEL_87;
                                                                }

                                                                unsigned __int16 v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_83:
                                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_ base/Stack/vsc/aci/aci_vsc.c",  2018,  v45);
                                                              }
                                                            }

                                                            unsigned __int16 v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                            goto LABEL_83;
                                                          }

                                                          unsigned __int16 v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_79:
                                                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/S tack/vsc/aci/aci_vsc.c",  2017,  v44);
                                                        }
                                                      }

                                                      unsigned __int16 v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                      goto LABEL_79;
                                                    }

                                                    uint64_t v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_75:
                                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/v sc/aci/aci_vsc.c",  2016,  v43);
                                                  }
                                                }

                                                uint64_t v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_75;
                                              }

                                              uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_71:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2015,  v42);
                                            }
                                          }

                                          uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_71;
                                        }

                                        uint64_t v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_67:
                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2014,  v41);
                                      }
                                    }

                                    uint64_t v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_67;
                                  }

                                  uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_63:
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2013,  v40);
                                }
                              }

                              uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_63;
                            }

                            uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2012,  v39);
                          }
                        }

                        uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_59;
                      }

                      uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2011,  v38);
                    }
                  }

                  uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_55;
                }

                unsigned __int16 v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2010,  v37);
              }

              unsigned __int16 v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_51;
            }

            __int16 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_47:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2009,  v36);
          }

          __int16 v36 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_47;
        }

        uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2006, v35);
      }
    }

    uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_43;
  }

  return result;
}

uint64_t sub_1000D17AC(char a1, char a2, __int16 a3, __int16 a4, __int16 a5, __int16 a6, uint64_t a7)
{
  uint64_t v31 = 0LL;
  uint64_t v32 = 0LL;
  uint64_t result = sub_10018BCDC(&v31);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v32))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v18 = WORD2(v32);
      if (WORD1(v32) > WORD2(v32))
      {
        if (BYTE6(v32) == 2)
        {
          ++WORD2(v32);
          *(_BYTE *)(v31 + v18) = 81;
          if (HIBYTE(v32))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v19 = WORD2(v32);
            if (WORD1(v32) > WORD2(v32))
            {
              if (BYTE6(v32) == 2)
              {
                ++WORD2(v32);
                *(_BYTE *)(v31 + v19) = a1;
                if (HIBYTE(v32))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else
                {
                  uint64_t v20 = WORD2(v32);
                  if (WORD1(v32) > WORD2(v32))
                  {
                    if (BYTE6(v32) == 2)
                    {
                      ++WORD2(v32);
                      *(_BYTE *)(v31 + v20) = a2;
                      if (HIBYTE(v32))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }

                      else if (WORD1(v32) - WORD2(v32) > 1)
                      {
                        if (BYTE6(v32) == 2)
                        {
                          *(_WORD *)(v31 + WORD2(v32)) = a3;
                          unsigned __int16 v21 = WORD2(v32) + 2;
                          WORD2(v32) += 2;
                          if (HIBYTE(v32))
                          {
                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                          }

                          else if (WORD1(v32) - v21 > 1)
                          {
                            if (BYTE6(v32) == 2)
                            {
                              *(_BYTE *)(v31 + v21) = a4;
                              *(_BYTE *)(v31 + WORD2(v32) + 1) = HIBYTE(a4);
                              unsigned __int16 v22 = WORD2(v32) + 2;
                              WORD2(v32) += 2;
                              if (HIBYTE(v32))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }

                              else if (WORD1(v32) - v22 > 1)
                              {
                                if (BYTE6(v32) == 2)
                                {
                                  *(_BYTE *)(v31 + v2pthread_attr_setdetachstate(&v7, 2) = a5;
                                  *(_BYTE *)(v31 + WORD2(v32) + 1) = HIBYTE(a5);
                                  unsigned __int16 v23 = WORD2(v32) + 2;
                                  WORD2(v32) += 2;
                                  if (HIBYTE(v32))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/aci/aci_vsc.c");
                                  }

                                  else if (WORD1(v32) - v23 > 1)
                                  {
                                    if (BYTE6(v32) == 2)
                                    {
                                      *(_BYTE *)(v31 + v23) = a6;
                                      *(_BYTE *)(v31 + WORD2(v32) + 1) = HIBYTE(a6);
                                      WORD2(v32) += 2;
                                      return sub_10018BD78( 65017,  v31,  BYTE4(v32),  a7,  (uint64_t)sub_1000D2FD0,  v15,  v16,  v17);
                                    }

                                    uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2039,  v30);
                                  }

                                  uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                  goto LABEL_52;
                                }

                                uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2038,  v29);
                              }

                              uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                              goto LABEL_48;
                            }

                            uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2037,  v28);
                          }

                          uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_44;
                        }

                        uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2036,  v27);
                      }

                      uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_40;
                    }

                    uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2035,  v26);
                  }
                }

                uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_36;
              }

              unsigned __int16 v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2034,  v25);
            }
          }

          unsigned __int16 v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_32;
        }

        __int16 v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2033, v24);
      }
    }

    __int16 v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_28;
  }

  return result;
}

uint64_t sub_1000D1BE8(char a1, char a2, char a3, char a4, uint64_t a5)
{
  uint64_t v22 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t result = sub_10018BCDC(&v22);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v23))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v14 = WORD2(v23);
      if (WORD1(v23) > WORD2(v23))
      {
        if (BYTE6(v23) == 2)
        {
          ++WORD2(v23);
          *(_BYTE *)(v22 + v14) = a1;
          if (HIBYTE(v23))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v15 = WORD2(v23);
            if (WORD1(v23) > WORD2(v23))
            {
              if (BYTE6(v23) == 2)
              {
                ++WORD2(v23);
                *(_BYTE *)(v22 + v15) = a2;
                if (HIBYTE(v23))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else
                {
                  uint64_t v16 = WORD2(v23);
                  if (WORD1(v23) > WORD2(v23))
                  {
                    if (BYTE6(v23) == 2)
                    {
                      ++WORD2(v23);
                      *(_BYTE *)(v22 + v16) = a3;
                      if (HIBYTE(v23))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }

                      else
                      {
                        uint64_t v17 = WORD2(v23);
                        if (WORD1(v23) > WORD2(v23))
                        {
                          if (BYTE6(v23) == 2)
                          {
                            ++WORD2(v23);
                            *(_BYTE *)(v22 + v17) = a4;
                            return sub_10018BD78(64940, v22, BYTE4(v23), a5, (uint64_t)sub_1000BC408, v11, v12, v13);
                          }

                          unsigned __int16 v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2986,  v21);
                        }
                      }

                      unsigned __int16 v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_31;
                    }

                    uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2985,  v20);
                  }
                }

                uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_27;
              }

              uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2984,  v19);
            }
          }

          uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }

        uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2983, v18);
      }
    }

    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000D1E38(int *a1, uint64_t a2)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v12) - WORD2(v12) > 5)
    {
      if (BYTE6(v12) == 2)
      {
        uint64_t v8 = v11 + WORD2(v12);
        int v9 = *a1;
        *(_WORD *)(v8 + 4) = *((_WORD *)a1 + 2);
        *(_DWORD *)uint64_t v8 = v9;
        WORD2(v12) += 6;
        return sub_10018BD78(64518, v11, BYTE4(v12), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
      }

      unsigned __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4559, v10);
    }

    unsigned __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1000D1F1C(uint64_t a1)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else if (WORD1(v14) - WORD2(v14) > 3)
    {
      if (BYTE6(v14) == 2)
      {
        *(_BYTE *)(v13 + WORD2(v14)) = -1;
        *(_BYTE *)(v13 + WORD2(v14) + 1) = -1;
        *(_BYTE *)(v13 + WORD2(v14) + pthread_attr_setdetachstate(&v7, 2) = -1;
        *(_BYTE *)(v13 + WORD2(v14) + 3) = -1;
        unsigned __int16 v6 = WORD2(v14) + 4;
        WORD2(v14) += 4;
        if (HIBYTE(v14))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }

        else if (WORD1(v14) - v6 > 3)
        {
          if (BYTE6(v14) == 2)
          {
            *(_BYTE *)(v13 + v6) = -1;
            *(_BYTE *)(v13 + WORD2(v14) + 1) = -1;
            *(_BYTE *)(v13 + WORD2(v14) + pthread_attr_setdetachstate(&v7, 2) = -1;
            *(_BYTE *)(v13 + WORD2(v14) + 3) = -1;
            unsigned __int16 v7 = WORD2(v14) + 4;
            WORD2(v14) += 4;
            if (HIBYTE(v14))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }

            else if (WORD1(v14) - v7 > 3)
            {
              if (BYTE6(v14) == 2)
              {
                *(_BYTE *)(v13 + v7) = -1;
                *(_BYTE *)(v13 + WORD2(v14) + 1) = -1;
                *(_BYTE *)(v13 + WORD2(v14) + pthread_attr_setdetachstate(&v7, 2) = -1;
                *(_BYTE *)(v13 + WORD2(v14) + 3) = -1;
                unsigned __int16 v8 = WORD2(v14) + 4;
                WORD2(v14) += 4;
                if (HIBYTE(v14))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v14) - v8 > 3)
                {
                  if (BYTE6(v14) == 2)
                  {
                    *(_BYTE *)(v13 + v8) = -1;
                    *(_BYTE *)(v13 + WORD2(v14) + 1) = -1;
                    *(_BYTE *)(v13 + WORD2(v14) + pthread_attr_setdetachstate(&v7, 2) = -1;
                    *(_BYTE *)(v13 + WORD2(v14) + 3) = -1;
                    WORD2(v14) += 4;
                    return sub_10018BD78(65291, v13, BYTE4(v14), a1, (uint64_t)sub_1000BC408, v3, v4, v5);
                  }

                  uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4530,  v12);
                }

                uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                goto LABEL_31;
              }

              uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4529,  v11);
            }

            uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_27;
          }

          unsigned __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4528, v10);
        }

        unsigned __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_23;
      }

      int v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4527, v9);
    }

    int v9 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1000D2230(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = sub_10018BCDC(&v6);
  if (!(_DWORD)result) {
    return sub_10018BD78(65528, v6, BYTE4(v7), a1, (uint64_t)sub_1000D4FDC, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1000D2280(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  uint64_t result = sub_10018BCDC(&v12);
  if (!(_DWORD)result)
  {
    for (uint64_t i = 0LL; i != 24; ++i)
    {
      if (HIBYTE(v13))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_10:
        uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_12:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4545, v11);
      }

      uint64_t v9 = WORD2(v13);
      if (BYTE6(v13) != 2)
      {
        uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_12;
      }

      char v10 = *(_BYTE *)(a1 + i);
      ++WORD2(v13);
      *(_BYTE *)(v12 + v9) = v10;
    }

    return sub_10018BD78(65092, v12, BYTE4(v13), a2, (uint64_t)sub_1000BC408, v5, v6, v7);
  }

  return result;
}

uint64_t sub_1000D2360(char *a1, uint64_t a2)
{
  uint64_t v47 = 0LL;
  uint64_t v48 = 0LL;
  uint64_t result = sub_10018BCDC(&v47);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v48))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v5 = WORD2(v48);
      if (WORD1(v48) > WORD2(v48))
      {
        if (BYTE6(v48) == 2)
        {
          char v6 = *a1;
          ++WORD2(v48);
          *(_BYTE *)(v47 + v5) = v6;
          if (HIBYTE(v48))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else
          {
            uint64_t v7 = WORD2(v48);
            if (WORD1(v48) > WORD2(v48))
            {
              if (BYTE6(v48) == 2)
              {
                char v8 = a1[1];
                ++WORD2(v48);
                *(_BYTE *)(v47 + v7) = v8;
                if (HIBYTE(v48))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }

                else if (WORD1(v48) - WORD2(v48) > 5)
                {
                  if (BYTE6(v48) == 2)
                  {
                    sub_1001F0050(v47 + WORD2(v48), *((void *)a1 + 1), 6uLL);
                    __int16 v9 = WORD2(v48);
                    unsigned __int16 v10 = WORD2(v48) + 6;
                    WORD2(v48) += 6;
                    if (HIBYTE(v48))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }

                    else if (WORD1(v48) > v10)
                    {
                      if (BYTE6(v48) == 2)
                      {
                        char v11 = a1[16];
                        WORD2(v48) = v9 + 7;
                        *(_BYTE *)(v47 + v10) = v11;
                        if (HIBYTE(v48))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }

                        else if (WORD1(v48) - WORD2(v48) > 1)
                        {
                          if (BYTE6(v48) == 2)
                          {
                            *(_WORD *)(v47 + WORD2(v48)) = *((_WORD *)a1 + 9);
                            unsigned __int16 v12 = WORD2(v48) + 2;
                            WORD2(v48) += 2;
                            if (HIBYTE(v48))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }

                            else if (WORD1(v48) - v12 > 1)
                            {
                              if (BYTE6(v48) == 2)
                              {
                                *(_BYTE *)(v47 + v1pthread_attr_setdetachstate(&v7, 2) = a1[20];
                                *(_BYTE *)(v47 + WORD2(v48) + 1) = a1[21];
                                unsigned __int16 v13 = WORD2(v48) + 2;
                                WORD2(v48) += 2;
                                if (HIBYTE(v48))
                                {
                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/aci/aci_vsc.c");
                                }

                                else if (WORD1(v48) - v13 > 1)
                                {
                                  if (BYTE6(v48) == 2)
                                  {
                                    *(_BYTE *)(v47 + v13) = a1[22];
                                    *(_BYTE *)(v47 + WORD2(v48) + 1) = a1[23];
                                    unsigned __int16 v14 = WORD2(v48) + 2;
                                    WORD2(v48) += 2;
                                    if (HIBYTE(v48))
                                    {
                                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }

                                    else if (WORD1(v48) - v14 > 1)
                                    {
                                      if (BYTE6(v48) == 2)
                                      {
                                        *(_BYTE *)(v47 + v14) = a1[24];
                                        *(_BYTE *)(v47 + WORD2(v48) + 1) = a1[25];
                                        unsigned __int16 v15 = WORD2(v48) + 2;
                                        WORD2(v48) += 2;
                                        if (HIBYTE(v48))
                                        {
                                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/aci/aci_vsc.c");
                                        }

                                        else if (WORD1(v48) - v15 > 1)
                                        {
                                          if (BYTE6(v48) == 2)
                                          {
                                            *(_BYTE *)(v47 + v15) = a1[26];
                                            *(_BYTE *)(v47 + WORD2(v48) + 1) = a1[27];
                                            unsigned __int16 v16 = WORD2(v48) + 2;
                                            WORD2(v48) += 2;
                                            if (HIBYTE(v48))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/aci/aci_vsc.c");
                                            }

                                            else if (WORD1(v48) - v16 > 1)
                                            {
                                              if (BYTE6(v48) == 2)
                                              {
                                                *(_BYTE *)(v47 + v16) = a1[28];
                                                *(_BYTE *)(v47 + WORD2(v48) + 1) = a1[29];
                                                __int16 v17 = WORD2(v48);
                                                unsigned __int16 v18 = WORD2(v48) + 2;
                                                WORD2(v48) += 2;
                                                if (HIBYTE(v48))
                                                {
                                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/aci/aci_vsc.c");
                                                }

                                                else if (WORD1(v48) > v18)
                                                {
                                                  if (BYTE6(v48) == 2)
                                                  {
                                                    char v19 = a1[30];
                                                    WORD2(v48) = v17 + 3;
                                                    *(_BYTE *)(v47 + v18) = v19;
                                                    if (HIBYTE(v48))
                                                    {
                                                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mobil"
                                                                             "eBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                    }

                                                    else if (WORD1(v48) - WORD2(v48) > 5)
                                                    {
                                                      if (BYTE6(v48) == 2)
                                                      {
                                                        sub_1001F0050(v47 + WORD2(v48), *((void *)a1 + 4), 6uLL);
                                                        __int16 v23 = WORD2(v48);
                                                        unsigned __int16 v24 = WORD2(v48) + 6;
                                                        WORD2(v48) += 6;
                                                        if (HIBYTE(v48))
                                                        {
                                                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/M"
                                                                                 "obileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                        }

                                                        else if (WORD1(v48) > v24)
                                                        {
                                                          if (BYTE6(v48) == 2)
                                                          {
                                                            char v25 = a1[40];
                                                            WORD2(v48) = v23 + 7;
                                                            *(_BYTE *)(v47 + v24) = v25;
                                                            if (HIBYTE(v48))
                                                            {
                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sourc"
                                                                                     "es/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                            }

                                                            else if (WORD1(v48) > WORD2(v48))
                                                            {
                                                              if (BYTE6(v48) == 2)
                                                              {
                                                                *(_BYTE *)(v47 + WORD2(v48)) = a1[41];
                                                                __int16 v26 = WORD2(v48);
                                                                unsigned __int16 v27 = ++WORD2(v48);
                                                                if (HIBYTE(v48))
                                                                {
                                                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/S"
                                                                                         "ources/MobileBluetooth_base/Sta"
                                                                                         "ck/vsc/aci/aci_vsc.c");
                                                                }

                                                                else if (WORD1(v48) > v27)
                                                                {
                                                                  if (BYTE6(v48) == 2)
                                                                  {
                                                                    char v28 = a1[42];
                                                                    WORD2(v48) = v26 + 2;
                                                                    *(_BYTE *)(v47 + v27) = v28;
                                                                    if (HIBYTE(v48))
                                                                    {
                                                                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.x"
                                                                                             "bs/Sources/MobileBluetooth_"
                                                                                             "base/Stack/vsc/aci/aci_vsc.c");
                                                                    }

                                                                    else
                                                                    {
                                                                      uint64_t v29 = WORD2(v48);
                                                                      if (WORD1(v48) > WORD2(v48))
                                                                      {
                                                                        if (BYTE6(v48) == 2)
                                                                        {
                                                                          char v30 = a1[43];
                                                                          ++WORD2(v48);
                                                                          *(_BYTE *)(v47 + v29) = v30;
                                                                          return sub_10018BD78( 65479,  v47,  BYTE4(v48),  a2,  (uint64_t)sub_1000BC408,  v20,  v21,  v22);
                                                                        }

                                                                        __int16 v46 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_115:
                                                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBl uetooth_base/Stack/vsc/aci/aci_vsc.c",  4366,  v46);
                                                                      }
                                                                    }

                                                                    __int16 v46 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                    goto LABEL_115;
                                                                  }

                                                                  unsigned __int16 v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_111:
                                                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetoot h_base/Stack/vsc/aci/aci_vsc.c",  4365,  v45);
                                                                }

                                                                unsigned __int16 v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                goto LABEL_111;
                                                              }

                                                              unsigned __int16 v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_107:
                                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_ba se/Stack/vsc/aci/aci_vsc.c",  4364,  v44);
                                                            }

                                                            unsigned __int16 v44 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                                                            goto LABEL_107;
                                                          }

                                                          uint64_t v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_103:
                                                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/S tack/vsc/aci/aci_vsc.c",  4363,  v43);
                                                        }

                                                        uint64_t v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                        goto LABEL_103;
                                                      }

                                                      uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_99:
                                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack /vsc/aci/aci_vsc.c",  4362,  v42);
                                                    }

                                                    uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
                                                    goto LABEL_99;
                                                  }

                                                  uint64_t v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_95:
                                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4361,  v41);
                                                }

                                                uint64_t v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_95;
                                              }

                                              uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_91:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4360,  v40);
                                            }

                                            uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                            goto LABEL_91;
                                          }

                                          uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_87:
                                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4359,  v39);
                                        }

                                        uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                        goto LABEL_87;
                                      }

                                      uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_83:
                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4358,  v38);
                                    }

                                    uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                    goto LABEL_83;
                                  }

                                  unsigned __int16 v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_79:
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4357,  v37);
                                }

                                unsigned __int16 v37 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                goto LABEL_79;
                              }

                              __int16 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_75:
                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4356,  v36);
                            }

                            __int16 v36 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                            goto LABEL_75;
                          }

                          uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_71:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4355,  v35);
                        }

                        uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                        goto LABEL_71;
                      }

                      uint64_t v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_67:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4354,  v34);
                    }

                    uint64_t v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_67;
                  }

                  uint64_t v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_63:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4353,  v33);
                }

                uint64_t v33 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
                goto LABEL_63;
              }

              uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4352,  v32);
            }
          }

          uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_59;
        }

        uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4351, v31);
      }
    }

    uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_55;
  }

  return result;
}

uint64_t sub_1000D2C44(_WORD *a1, char a2, char a3, char a4, int a5, const void *a6, uint64_t a7)
{
  uint64_t v32 = 0LL;
  uint64_t v33 = 0LL;
  uint64_t result = sub_10018BCDC(&v32);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v33))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      uint64_t v15 = WORD2(v33);
      if (WORD1(v33) > WORD2(v33))
      {
        if (BYTE6(v33) == 2)
        {
          ++WORD2(v33);
          *(_BYTE *)(v32 + v15) = a2;
          if (HIBYTE(v33))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }

          else if (WORD1(v33) - WORD2(v33) > 1)
          {
            if (BYTE6(v33) == 2)
            {
              *(_WORD *)(v32 + WORD2(v33)) = *a1;
              __int16 v16 = WORD2(v33);
              unsigned __int16 v17 = WORD2(v33) + 2;
              WORD2(v33) += 2;
              if (HIBYTE(v33))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }

              else if (WORD1(v33) > v17)
              {
                if (BYTE6(v33) == 2)
                {
                  WORD2(v33) = v16 + 3;
                  *(_BYTE *)(v32 + v17) = a3;
                  if (HIBYTE(v33))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }

                  else
                  {
                    uint64_t v18 = WORD2(v33);
                    if (WORD1(v33) > WORD2(v33))
                    {
                      if (BYTE6(v33) == 2)
                      {
                        ++WORD2(v33);
                        *(_BYTE *)(v32 + v18) = a4;
                        if (HIBYTE(v33))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }

                        else
                        {
                          uint64_t v19 = WORD2(v33);
                          if (WORD1(v33) > WORD2(v33))
                          {
                            if (BYTE6(v33) == 2)
                            {
                              ++WORD2(v33);
                              *(_BYTE *)(v32 + v19) = a5;
                              uint64_t v20 = v32;
                              uint64_t v21 = WORD2(v33);
                              if (HIBYTE(v33))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                                int v22 = 0;
                              }

                              else
                              {
                                int v22 = WORD1(v33) - WORD2(v33);
                              }

                              if (v22 < a5)
                              {
                                uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= (lenOptFields)";
                              }

                              else
                              {
                                if (BYTE6(v33) == 2)
                                {
                                  memmove((void *)(v20 + v21), a6, a5);
                                  WORD2(v33) += a5;
                                  return sub_10018BD78( 65059,  v32,  BYTE4(v33),  a7,  (uint64_t)sub_1000BC408,  v23,  v24,  v25);
                                }

                                uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                              }

                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4468,  v31);
                            }

                            char v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4467,  v30);
                          }
                        }

                        char v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_43;
                      }

                      uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_39:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4466,  v29);
                    }
                  }

                  uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_39;
                }

                char v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4465,  v28);
              }

              char v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_35;
            }

            unsigned __int16 v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4464,  v27);
          }

          unsigned __int16 v27 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_31;
        }

        __int16 v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4463, v26);
      }
    }

    __int16 v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_27;
  }

  return result;
}

void sub_1000D2FD0(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %d, Byte 0x%x, hlCb 0x%x", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned __int16 v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 0LL;
    if (a2) {
      goto LABEL_6;
    }
    return;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_14;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_14:
    __int16 v16 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_16;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    __int16 v16 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_16:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 58, v16);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if (a2) {
LABEL_6:
  }
    a2(a1, v13);
}

uint64_t sub_1000D30DC( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, void, void, void, void, void, void, void), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    uint64_t v5 = a2;
    uint64_t result = sub_1000A86F0();
    if (!(_DWORD)result
      || (sub_1001EE134((uint64_t)"EnhancedProfilingStats VSC failed with status %!", v7, v8, v9, v10, v11, v12, v13, a1),
          uint64_t v14 = (os_log_s *)sub_100086554(0x54u),
          uint64_t result = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR),
          !(_DWORD)result))
    {
      int v15 = 0;
      unsigned int v16 = 0;
      unsigned int v17 = 0;
      unsigned int v18 = 0;
      uint64_t v57 = 0LL;
      unint64_t v59 = 0LL;
      unsigned int v58 = 0;
      unsigned int v19 = 0;
      unsigned int v20 = 0;
      unsigned int v21 = 0;
      unsigned int v22 = 0;
      unsigned int v23 = 0;
      unsigned int v24 = 0;
      unsigned int v25 = 0;
      unsigned int v26 = 0;
      goto LABEL_46;
    }

    sub_100657F74();
LABEL_45:
    int v15 = 0;
    unsigned int v16 = 0;
    unsigned int v17 = 0;
    unsigned int v18 = 0;
    uint64_t v57 = 0LL;
    unint64_t v59 = 0LL;
    unsigned int v58 = 0;
    unsigned int v19 = 0;
    unsigned int v20 = 0;
    unsigned int v21 = 0;
    unsigned int v22 = 0;
    unsigned int v23 = 0;
    unsigned int v24 = 0;
    unsigned int v25 = 0;
    unsigned int v26 = 0;
    uint64_t result = 0LL;
LABEL_46:
    unsigned int v37 = 0;
    unsigned int v38 = 0;
    unsigned int v39 = 0;
    unsigned int v40 = 0;
    unsigned int v41 = 0;
    unsigned int v42 = 0;
    unsigned int v43 = 0;
    unsigned int v44 = 0;
    unsigned int v45 = 0;
    unsigned int v46 = 0;
    unsigned int v47 = 0;
    unsigned int v48 = 0;
    unsigned int v49 = 0;
    unsigned int v50 = 0;
    unsigned int v51 = 0;
    if (!v5) {
      return result;
    }
    goto LABEL_47;
  }

  if (*((_BYTE *)a3 + 15))
  {
    uint64_t v5 = a2;
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_45;
  }

  int v27 = *((unsigned __int16 *)a3 + 5);
  uint64_t v28 = *((unsigned __int16 *)a3 + 6);
  if (((v27 - (_DWORD)v28) & 0x1FFFE) != 0x9C)
  {
    uint64_t v5 = a2;
    goto LABEL_45;
  }

  if (*((_BYTE *)a3 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  189,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v29 = *a3;
  int v30 = *(_DWORD *)(*a3 + v28);
  *((_WORD *)a3 + 6) = v28 + 4;
  if (v27 - (unsigned __int16)(v28 + 4) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  190,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v56 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 4));
  *((_WORD *)a3 + 6) = v28 + 8;
  if (v27 - (unsigned __int16)(v28 + 8) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  191,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v55 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 8));
  *((_WORD *)a3 + 6) = v28 + 12;
  if (v27 - (unsigned __int16)(v28 + 12) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  192,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v54 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 12));
  *((_WORD *)a3 + 6) = v28 + 16;
  if (v27 - (unsigned __int16)(v28 + 16) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  193,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v31 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 16));
  *((_WORD *)a3 + 6) = v28 + 20;
  if (v27 - (unsigned __int16)(v28 + 20) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  194,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v32 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 20));
  *((_WORD *)a3 + 6) = v28 + 24;
  if (v27 - (unsigned __int16)(v28 + 24) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  195,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v33 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 24));
  *((_WORD *)a3 + 6) = v28 + 28;
  if (v27 - (unsigned __int16)(v28 + 28) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  196,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v34 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 28));
  *((_WORD *)a3 + 6) = v28 + 32;
  if (v27 - (unsigned __int16)(v28 + 32) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  197,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v35 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 32));
  *((_WORD *)a3 + 6) = v28 + 36;
  if (v27 - (unsigned __int16)(v28 + 36) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  199,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v19 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 36));
  *((_WORD *)a3 + 6) = v28 + 40;
  if (v27 - (unsigned __int16)(v28 + 40) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  200,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v20 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 40));
  *((_WORD *)a3 + 6) = v28 + 44;
  if (v27 - (unsigned __int16)(v28 + 44) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  201,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v21 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 44));
  *((_WORD *)a3 + 6) = v28 + 48;
  if (v27 - (unsigned __int16)(v28 + 48) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  202,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v22 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 48));
  *((_WORD *)a3 + 6) = v28 + 52;
  if (v27 - (unsigned __int16)(v28 + 52) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  203,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v23 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 52));
  *((_WORD *)a3 + 6) = v28 + 56;
  if (v27 - (unsigned __int16)(v28 + 56) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  204,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v24 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 56));
  *((_WORD *)a3 + 6) = v28 + 60;
  if (v27 - (unsigned __int16)(v28 + 60) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  205,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v36 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 60));
  *((_WORD *)a3 + 6) = v28 + 64;
  if (v27 - (unsigned __int16)(v28 + 64) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  206,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v26 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 64));
  *((_WORD *)a3 + 6) = v28 + 68;
  if (v27 - (unsigned __int16)(v28 + 68) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  207,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  uint64_t result = *(unsigned int *)(v29 + (unsigned __int16)(v28 + 68));
  *((_WORD *)a3 + 6) = v28 + 72;
  if (v27 - (unsigned __int16)(v28 + 72) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  208,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v37 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 72));
  *((_WORD *)a3 + 6) = v28 + 76;
  if (v27 - (unsigned __int16)(v28 + 76) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  209,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v38 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 76));
  *((_WORD *)a3 + 6) = v28 + 80;
  if (v27 - (unsigned __int16)(v28 + 80) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  210,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v39 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 80));
  *((_WORD *)a3 + 6) = v28 + 84;
  if (v27 - (unsigned __int16)(v28 + 84) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  211,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v40 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 84));
  *((_WORD *)a3 + 6) = v28 + 88;
  if (v27 - (unsigned __int16)(v28 + 88) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  212,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v41 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 88));
  *((_WORD *)a3 + 6) = v28 + 92;
  if (v27 - (unsigned __int16)(v28 + 92) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  213,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v58 = v34;
  unsigned int v42 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 92));
  *((_WORD *)a3 + 6) = v28 + 96;
  if (v27 - (unsigned __int16)(v28 + 96) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  214,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v43 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 96));
  *((_WORD *)a3 + 6) = v28 + 100;
  if (v27 - (unsigned __int16)(v28 + 100) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  215,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unint64_t v59 = __PAIR64__(v32, v33);
  unsigned int v44 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 100));
  *((_WORD *)a3 + 6) = v28 + 104;
  if (v27 - (unsigned __int16)(v28 + 104) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  216,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v53 = v30;
  unsigned int v45 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 104));
  *((_WORD *)a3 + 6) = v28 + 108;
  if (v27 - (unsigned __int16)(v28 + 108) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  217,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v46 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 108));
  *((_WORD *)a3 + 6) = v28 + 112;
  if (v27 - (unsigned __int16)(v28 + 112) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  218,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v25 = v36;
  HIDWORD(v57) = v35;
  unsigned int v47 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 112));
  *((_WORD *)a3 + 6) = v28 + 116;
  if (v27 - (unsigned __int16)(v28 + 116) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  219,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  LODWORD(v57) = v31;
  unsigned int v48 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 116));
  *((_WORD *)a3 + 6) = v28 + 120;
  if (v27 - (unsigned __int16)(v28 + 120) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  220,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  uint64_t v5 = a2;
  unsigned int v49 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 120));
  *((_WORD *)a3 + 6) = v28 + 124;
  if (v27 - (unsigned __int16)(v28 + 124) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  221,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v50 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 124));
  *((_WORD *)a3 + 6) = v28 + 128;
  if (v27 - (unsigned __int16)(v28 + 128) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  222,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v51 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 128));
  *((_WORD *)a3 + 6) = v28 + 132;
  int v15 = v53;
  unsigned int v18 = v54;
  unsigned int v17 = v55;
  unsigned int v16 = v56;
  if (v5)
  {
LABEL_47:
    LODWORD(v5pthread_attr_setdetachstate(&v7, 2) = 0;
    HIDWORD(v5pthread_attr_setdetachstate(&v7, 2) = v15;
    return v5( a1,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  v52,  __PAIR64__(v17, v16),  __PAIR64__(v57, v18),  __PAIR64__(v59, HIDWORD(v59)),  __PAIR64__(HIDWORD(v57), v58),  __PAIR64__(v20, v19),  __PAIR64__(v22, v21),  __PAIR64__(v24, v23),  __PAIR64__(v26, v25),  __PAIR64__(v37, result),  __PAIR64__(v39, v38),  __PAIR64__(v41, v40),  __PAIR64__(v43, v42),  __PAIR64__(v45, v44),  __PAIR64__(v47, v46),  __PAIR64__(v49, v48),  __PAIR64__(v51, v50),  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL);
  }

  return result;
}

void sub_1000D3A00(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      int v15 = *((unsigned __int16 *)a3 + 5);
      uint64_t v16 = *((unsigned __int16 *)a3 + 6);
      if (v15 - (int)v16 > 1)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v17 = *a3;
          unsigned int v18 = (unsigned __int8 *)(*a3 + v16);
          int v19 = *v18;
          int v20 = v18[1];
          *((_WORD *)a3 + 6) = v16 + 2;
          if (v15 - (unsigned __int16)(v16 + 2) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3127,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          uint64_t v13 = v19 | (v20 << 8);
          uint64_t v14 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v16 + 2));
          *((_WORD *)a3 + 6) = v16 + 4;
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        unsigned int v21 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_17:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3126, v21);
      }
    }

    unsigned int v21 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_17;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"status %d, ConnectionHandle 0x%x, rssi 0x%x, hlCb 0x%x", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14);
}

void sub_1000D3B58(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_13;
  }

  uint64_t v3 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v3)
  {
LABEL_13:
    uint64_t v16 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_15;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v16 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_15:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 110, v16);
  }

  uint64_t v6 = *a3;
  *((_WORD *)a3 + 6) = v3 + 1;
  uint64_t v7 = *(unsigned __int8 *)(v6 + v3);
  if (!(_DWORD)a1
    || !sub_1000A86F0()
    || (sub_1001EE134((uint64_t)"status %!", v8, v9, v10, v11, v12, v13, v14, a1),
        int v15 = (os_log_s *)sub_100086554(0x54u),
        !os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)))
  {
    if (!a2) {
      return;
    }
    goto LABEL_8;
  }

  sub_100657F74();
  if (a2) {
LABEL_8:
  }
    a2(a1, v7);
}

void sub_1000D3C5C( uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      int v28 = *((unsigned __int16 *)a3 + 5);
      uint64_t v29 = *((unsigned __int16 *)a3 + 6);
      if (v28 - (int)v29 > 3)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v30 = *a3;
          uint64_t v13 = *(unsigned int *)(*a3 + v29);
          *((_WORD *)a3 + 6) = v29 + 4;
          if (v28 - (unsigned __int16)(v29 + 4) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2680,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v14 = *(unsigned int *)(v30 + (unsigned __int16)(v29 + 4));
          *((_WORD *)a3 + 6) = v29 + 8;
          if (v28 - (unsigned __int16)(v29 + 8) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2681,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v15 = *(unsigned int *)(v30 + (unsigned __int16)(v29 + 8));
          *((_WORD *)a3 + 6) = v29 + 12;
          if (v28 - (unsigned __int16)(v29 + 12) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2682,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v16 = *(unsigned int *)(v30 + (unsigned __int16)(v29 + 12));
          *((_WORD *)a3 + 6) = v29 + 16;
          if (v28 - (unsigned __int16)(v29 + 16) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2683,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v17 = *(unsigned int *)(v30 + (unsigned __int16)(v29 + 16));
          *((_WORD *)a3 + 6) = v29 + 20;
          if (v28 - (unsigned __int16)(v29 + 20) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2684,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v18 = *(unsigned int *)(v30 + (unsigned __int16)(v29 + 20));
          *((_WORD *)a3 + 6) = v29 + 24;
          if (v28 - (unsigned __int16)(v29 + 24) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2685,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v20 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 24));
          *((_WORD *)a3 + 6) = v29 + 28;
          if (v28 - (unsigned __int16)(v29 + 28) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2686,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v19 = *(unsigned int *)(v30 + (unsigned __int16)(v29 + 28));
          *((_WORD *)a3 + 6) = v29 + 32;
          if (v28 - (unsigned __int16)(v29 + 32) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2687,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v21 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 32));
          *((_WORD *)a3 + 6) = v29 + 36;
          if (v28 - (unsigned __int16)(v29 + 36) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2688,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v22 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 36));
          *((_WORD *)a3 + 6) = v29 + 40;
          if (v28 - (unsigned __int16)(v29 + 40) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2689,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v23 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 40));
          *((_WORD *)a3 + 6) = v29 + 44;
          if (v28 - (unsigned __int16)(v29 + 44) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2690,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v24 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 44));
          *((_WORD *)a3 + 6) = v29 + 48;
          if (v28 - (unsigned __int16)(v29 + 48) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2691,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v25 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 48));
          *((_WORD *)a3 + 6) = v29 + 52;
          if (v28 - (unsigned __int16)(v29 + 52) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2692,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          int v26 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 52));
          *((_WORD *)a3 + 6) = v29 + 56;
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        int v31 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_29:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2679, v31);
      }
    }

    int v31 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    goto LABEL_29;
  }

  if (sub_1000A86F0())
  {
    unsigned int v38 = a2;
    __int128 v37 = 0u;
    __int128 v36 = 0u;
    __int128 v35 = 0u;
    __int128 v34 = 0u;
    __int128 v33 = 0u;
    __int128 v32 = 0u;
    sub_1001EE134( (uint64_t)"status %d, durationTotal %d, durationActive %d, durationIdle %d, durationSleep %d disableCounter %d, iPAT xBT %d, ePATxBT %d, iPATxLE %d, ePATxLE %d, connectedRxBT %d, connectedRxLE %d, scanRxBT %d scanRxLE %d, totalPHYCal %d, hlCb 0x%x",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  unsigned int v20 = 0;
  unsigned int v21 = 0;
  unsigned int v22 = 0;
  unsigned int v23 = 0;
  unsigned int v24 = 0;
  unsigned int v25 = 0;
  int v26 = 0;
  if (a2)
  {
LABEL_6:
    LODWORD(v3pthread_attr_setdetachstate(&v7, 2) = v26;
    a2( a1,  v13,  v14,  v15,  v16,  v17,  v18,  v19,  __PAIR64__(v21, v20),  __PAIR64__(v23, v22),  __PAIR64__(v25, v24),  v32,  *((void *)&v32 + 1),  v33,  *((void *)&v33 + 1),  v34,  *((void *)&v34 + 1),  v35,  *((void *)&v35 + 1),  v36,  *((void *)&v36 + 1),  v37,  *((void *)&v37 + 1),  v38);
  }

void sub_1000D4078( uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      int v17 = *((unsigned __int16 *)a3 + 5);
      uint64_t v18 = *((unsigned __int16 *)a3 + 6);
      if (v17 - (int)v18 > 3)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v19 = *a3;
          uint64_t v13 = *(unsigned int *)(*a3 + v18);
          *((_WORD *)a3 + 6) = v18 + 4;
          if (v17 - (unsigned __int16)(v18 + 4) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2736,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v14 = *(unsigned int *)(v19 + (unsigned __int16)(v18 + 4));
          *((_WORD *)a3 + 6) = v18 + 8;
          if (v17 - (unsigned __int16)(v18 + 8) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2737,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v15 = *(unsigned int *)(v19 + (unsigned __int16)(v18 + 8));
          *((_WORD *)a3 + 6) = v18 + 12;
          if (v17 - (unsigned __int16)(v18 + 12) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  2738,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v16 = *(unsigned int *)(v19 + (unsigned __int16)(v18 + 12));
          *((_WORD *)a3 + 6) = v18 + 16;
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        unsigned int v20 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2735, v20);
      }
    }

    unsigned int v20 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    goto LABEL_19;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"status %d, total %d, successful %d, downgraded %d, involuntaryDowngraded %d, hlCb 0x%x",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14, v15, v16);
}

void sub_1000D4240(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"AdvBufConfig status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_12;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    unsigned int v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    unsigned int v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3273, v24);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 1)
  {
    uint64_t v13 = 1LL;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }

void sub_1000D43A8( uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"AdvBufReadCommand status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    unsigned __int16 v13 = 0;
    uint64_t v14 = 0LL;
    uint64_t v15 = 0LL;
    uint64_t v16 = 255LL;
    uint64_t v17 = 255LL;
    goto LABEL_16;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_24;
  }

  unsigned int v18 = *((unsigned __int16 *)a3 + 5);
  uint64_t v19 = *((unsigned __int16 *)a3 + 6);
  if (v18 <= v19)
  {
LABEL_24:
    uint64_t v29 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_26;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v29 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_26:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3312, v29);
  }

  uint64_t v20 = *a3;
  *((_WORD *)a3 + 6) = v19 + 1;
  if (v18 <= (unsigned __int16)(v19 + 1)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3313,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v16 = *(unsigned __int8 *)(v20 + v19);
  *((_WORD *)a3 + 6) = v19 + 2;
  if (v18 <= (unsigned __int16)(v19 + 2)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3314,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v15 = *(unsigned __int8 *)(v20 + v19 + 1);
  *((_WORD *)a3 + 6) = v19 + 3;
  if ((int)(v18 - (v19 + 3)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3315,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v14 = *(unsigned __int8 *)(v20 + v19 + 2);
  unsigned __int16 v13 = *(_WORD *)(v20 + v19 + 3);
  *((_WORD *)a3 + 6) = v19 + 5;
  if ((_DWORD)v16 == 2)
  {
    uint64_t v17 = 2LL;
    if (!a2) {
      return;
    }
    goto LABEL_19;
  }

  uint64_t v17 = v16;
LABEL_16:
  if (!sub_1000A86F0()
    || (sub_1001EE134((uint64_t)"AdvBufReadCommand sub-opcode incorrect: %d, %!", v21, v22, v23, v24, v25, v26, v27, v16),
        int v28 = (os_log_s *)sub_100086554(0x54u),
        !os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)))
  {
    if (!a2) {
      return;
    }
    goto LABEL_19;
  }

  sub_100657F74();
  if (a2) {
LABEL_19:
  }
    a2(a1, v17, v15, v14, v13);
}

void sub_1000D45C8(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"MatchTableConfig status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_12;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3348, v24);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 3)
  {
    uint64_t v13 = 3LL;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }

void sub_1000D4730(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"MatchTableConfigV2 status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_12;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3387, v24);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 10)
  {
    uint64_t v13 = 10LL;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }

void sub_1000D4898(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"MatchTableConfigV3 status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_12;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3441, v24);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 10)
  {
    uint64_t v13 = 10LL;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }

void sub_1000D4A00(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"AdvBufMatchControl status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_12;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3634, v24);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 7)
  {
    uint64_t v13 = 7LL;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }

void sub_1000D4B68(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"MatchTableParams status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_12;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3515, v24);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 4)
  {
    uint64_t v13 = 4LL;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }

void sub_1000D4CD0(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"MatchBufferConfig status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_12;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3562, v24);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 5)
  {
    uint64_t v13 = 5LL;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }

void sub_1000D4E38(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"MatchBufferRead status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 0LL;
    uint64_t v14 = 255LL;
    goto LABEL_13;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_21;
  }

  unsigned int v15 = *((unsigned __int16 *)a3 + 5);
  uint64_t v16 = *((unsigned __int16 *)a3 + 6);
  if (v15 <= v16)
  {
LABEL_21:
    uint64_t v26 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_23;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v26 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_23:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3600, v26);
  }

  uint64_t v17 = *a3;
  *((_WORD *)a3 + 6) = v16 + 1;
  if (v15 <= (int)v16 + 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  3601,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v14 = *(unsigned __int8 *)(v17 + v16);
  *((_WORD *)a3 + 6) = v16 + 2;
  uint64_t v13 = *(unsigned __int8 *)(v17 + v16 + 1);
  if ((_DWORD)v14 == 6)
  {
    uint64_t v14 = 6LL;
    if (!a2) {
      return;
    }
    goto LABEL_16;
  }

void sub_1000D4FDC( uint64_t a1, void (*a2)(uint64_t, void, void, void, void, void, void, uint64_t, int), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }

    else
    {
      int v21 = *((unsigned __int16 *)a3 + 5);
      uint64_t v22 = *((unsigned __int16 *)a3 + 6);
      if (v21 - (int)v22 > 1)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v23 = *a3;
          unsigned __int16 v13 = *(_WORD *)(*a3 + v22);
          *((_WORD *)a3 + 6) = v22 + 2;
          if (v21 - (unsigned __int16)(v22 + 2) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4492,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          unsigned __int16 v14 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 2));
          *((_WORD *)a3 + 6) = v22 + 4;
          if (v21 - (unsigned __int16)(v22 + 4) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4493,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          unsigned __int16 v15 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 4));
          *((_WORD *)a3 + 6) = v22 + 6;
          if (v21 - (unsigned __int16)(v22 + 6) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4494,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          unsigned __int16 v16 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 6));
          *((_WORD *)a3 + 6) = v22 + 8;
          if (v21 - (unsigned __int16)(v22 + 8) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4495,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          unsigned __int16 v17 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 8));
          *((_WORD *)a3 + 6) = v22 + 10;
          if (v21 - (unsigned __int16)(v22 + 10) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4496,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          unsigned __int16 v18 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 10));
          *((_WORD *)a3 + 6) = v22 + 12;
          if (v21 - (unsigned __int16)(v22 + 12) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4497,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          uint64_t v24 = (unsigned __int8 *)(v23 + (unsigned __int16)(v22 + 12));
          int v25 = *v24;
          int v26 = v24[1];
          *((_WORD *)a3 + 6) = v22 + 14;
          if (v21 - (unsigned __int16)(v22 + 14) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c",  4498,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          uint64_t v19 = v25 | (v26 << 8);
          __int16 v20 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 14));
          *((_WORD *)a3 + 6) = v22 + 16;
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        uint64_t v27 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_23:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4491, v27);
      }
    }

    uint64_t v27 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_23;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  unsigned __int16 v13 = 0;
  unsigned __int16 v14 = 0;
  unsigned __int16 v15 = 0;
  unsigned __int16 v16 = 0;
  unsigned __int16 v17 = 0;
  unsigned __int16 v18 = 0;
  uint64_t v19 = 0LL;
  __int16 v20 = 0;
  if (a2)
  {
LABEL_6:
    LOWORD(v28) = v20;
    a2(a1, v13, v14, v15, v16, v17, v18, v19, v28);
  }

unsigned __int8 *sub_1000D5294(uint64_t a1, unsigned __int8 **a2, _WORD *a3)
{
  return sub_1000D529C(a1, a2, a3, 1);
}

unsigned __int8 *sub_1000D529C(uint64_t a1, unsigned __int8 **a2, _WORD *a3, int a4)
{
  uint64_t v4 = *a2;
  if (!*a2) {
    return v4;
  }
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(unsigned __int16 *)(v5 + 18);
  uint64_t v8 = (unsigned __int8 *)(v6 + v7);
  if (*v4) {
    BOOL v9 = v4 > v8;
  }
  else {
    BOOL v9 = 1;
  }
  if (v9) {
    return 0LL;
  }
  unsigned __int16 v13 = *(unsigned __int8 **)(a1 + 8);
  int v14 = sub_1000D5E9C(v13, *(unsigned __int16 *)(a1 + 16));
  if (v14 != 1)
  {
    if (*v13 != 68)
    {
      if (v4 >= v8) {
        return 0LL;
      }
      uint64_t v31 = v6 + v7 - (void)v4;
      uint64_t v8 = v4;
      while (*v8 - 48 <= 9)
      {
        ++v8;
        if (!--v31)
        {
          uint64_t v8 = (unsigned __int8 *)(v6 + v7);
          break;
        }
      }
    }

    uint64_t v19 = v8;
    if (v8 != v4) {
      goto LABEL_37;
    }
    return 0LL;
  }

  int v15 = *(unsigned __int8 *)(v5 + 21);
  if (v4 < v8)
  {
    int v16 = 0;
    unsigned __int16 v17 = (unsigned __int8 *)(v6 + v7);
    uint64_t v18 = v6 + v7 - (void)v4;
    uint64_t v19 = v4;
    while (1)
    {
      if (*v19 == 34)
      {
        v15 ^= 1u;
        *(_BYTE *)(v5 + 21) = v15;
      }

      if (!v15)
      {
        unsigned int v20 = *v19;
        if (v20 > 0x2B)
        {
          if (v20 == 44)
          {
            if (!v16) {
              goto LABEL_37;
            }
          }

          else if (v20 == 59)
          {
            goto LABEL_37;
          }
        }

        else if (v20 == 40)
        {
          ++v16;
        }

        else if (v20 == 41)
        {
          BOOL v21 = __OFSUB__(v16--, 1);
          if (v16 < 0 != v21) {
            goto LABEL_37;
          }
        }
      }

      ++v19;
      if (!--v18) {
        goto LABEL_32;
      }
    }
  }

  int v16 = 0;
  unsigned __int16 v17 = v4;
LABEL_32:
  uint64_t v19 = v17;
  if (v15 | v16)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Unexpected end of parameter!\n", v22, v23, v24, v25, v26, v27, v28, v32);
      uint64_t v29 = (os_log_s *)sub_100086554(0);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v4 = 0LL;
    *a2 = v8;
    return v4;
  }

uint64_t sub_1000D548C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  __int16 v51 = 0;
  if (!a1) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)(a1 + 20) == 5) {
    *(_DWORD *)(a1 + 18) = 0;
  }
  int v6 = sub_1000D5904(a1, a2, a3, &v51);
  if (v6 == 0x7FFFFFFF) {
    return 0LL;
  }
  unsigned int v50 = a3;
  while (1)
  {
    int v8 = *(unsigned __int8 *)(a1 + 20);
    if (v8 != 3)
    {
      if (v8 == 1)
      {
        if (v6 != 65)
        {
          if (v6 == 84)
          {
            if (!*(_BYTE *)(a1 + 21)) {
              *(_BYTE *)(a1 + 20) = 3;
            }
          }

          else if (!*(_BYTE *)(a1 + 21))
          {
            *(_DWORD *)(a1 + 18) = 0;
          }
        }
      }

      else if (!*(_BYTE *)(a1 + 20) && v6 == 65 && !*(_BYTE *)(a1 + 21))
      {
        *(_BYTE *)(a1 + 20) = 1;
      }

      goto LABEL_76;
    }

    if (v6 != 13 || *(_BYTE *)(a1 + 21)) {
      break;
    }
    *(_BYTE *)(a1 + 20) = 5;
    uint64_t v11 = *(unsigned __int16 *)(a1 + 18);
    if (!*(_WORD *)(a1 + 18)) {
      goto LABEL_75;
    }
    uint64_t v12 = 0LL;
    uint64_t v13 = *(void *)(a1 + 8);
    __int16 v52 = 0;
    while (1)
    {
      unsigned int v14 = *(unsigned __int8 *)(v13 + v12);
      BOOL v15 = v14 > 0x3F;
      unint64_t v16 = (1LL << v14) & 0xA800000000000000LL;
      if (!v15 && v16 != 0) {
        break;
      }
      if (v11 == ++v12)
      {
        LOWORD(v1pthread_attr_setdetachstate(&v7, 2) = v11;
        break;
      }
    }

    unsigned int v18 = 0;
    unsigned __int16 v19 = 0;
    while (1)
    {
      memset(buf, 0, sizeof(buf));
      uint64_t v55 = a1;
      *(_DWORD *)__int128 buf = 2;
      unsigned int v20 = (unsigned __int16)v12 >= v19 ? (unsigned __int16)v12 - v19 : 0;
      int v26 = *(unsigned __int8 *)(v13 + v19);
      if (v26 == 38)
      {
        unsigned __int16 v21 = 2;
        goto LABEL_57;
      }

      if (v26 != 59)
      {
        if (v26 == 83 && (unsigned int v27 = v18 + 1, v18 + 1 < v11))
        {
          unsigned __int16 v21 = 1;
          do
          {
            unsigned int v27 = v18 + ++v21;
          }

          while (v27 < v11);
        }

        else
        {
          unsigned __int16 v21 = 1;
        }

        goto LABEL_57;
      }

      ++v19;
LABEL_69:
      unsigned int v18 = v19;
    }

    unsigned __int16 v21 = 0;
    if (v18 < v11)
    {
      unsigned int v22 = v18;
      do
      {
        unsigned int v23 = *(unsigned __int8 *)(v13 + v22);
        BOOL v15 = v23 > 0x3F;
        unint64_t v24 = (1LL << v23) & 0xA800000000000000LL;
        if (!v15 && v24 != 0) {
          break;
        }
        unsigned int v22 = v18 + ++v21;
      }

      while (v22 < v11);
    }

LABEL_75:
    *(_DWORD *)(a1 + 18) = 0;
    a3 = v50;
LABEL_76:
    int v6 = sub_1000D5904(a1, a2, a3, &v51);
    if (v6 == 0x7FFFFFFF) {
      return 0LL;
    }
  }

  uint64_t v9 = *(unsigned __int16 *)(a1 + 18);
  if (v9 < *(unsigned __int16 *)(a1 + 16))
  {
    uint64_t v10 = *(void *)(a1 + 8);
    *(_WORD *)(a1 + 18) = v9 + 1;
    *(_BYTE *)(v10 + v9) = v6;
    goto LABEL_76;
  }

  if ((sub_1000A86F0() & 1) != 0)
  {
    sub_1001EE134((uint64_t)"Receive error - %!\n", v42, v43, v44, v45, v46, v47, v48, 104LL);
    unsigned int v49 = (os_log_s *)sub_100086554(0);
    if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  *(_DWORD *)(a1 + 18) = 0;
  return 104LL;
}

  uint64_t v98 = v27;
  __int128 v99 = &qword_1008F29F0[134 * v27];
  unsigned __int16 v102 = *((unsigned __int8 *)v99 + 10);
  int v101 = (char *)v99 + 10;
  uint64_t v100 = v102;
  if (v102)
  {
    int v103 = &qword_1008F29F0[134 * v98 + 2];
    signed int v104 = v100;
    while (*v103 != a2)
    {
      v103 += 2;
      if (!--v104)
      {
        uint64_t v105 = 0;
        int v106 = &qword_1008F29F0[134 * v98];
        unsigned __int8 v107 = v106 + 4;
        unsigned __int8 v108 = v106 + 5;
        do
        {
          uint64_t v109 = &qword_1008F29F0[134 * v98 + 2 * v105];
          uint64_t v111 = v109[2];
          uint64_t v110 = v109 + 2;
          if (v111 == a2)
          {
            *uint64_t v110 = 0LL;
            if (!v105)
            {
              *uint64_t v110 = *v107;
              LOBYTE(qword_1008F29F0[134 * v98 + 3]) = *v108;
              *unsigned __int8 v107 = 0LL;
            }

            uint64_t v105 = 0;
            LOBYTE(v100) = v100 - 1;
            *int v101 = v100;
          }

          ++v105;
        }

        while (v105 < v100);
        goto LABEL_85;
      }
    }

    goto LABEL_100;
  }

        *((_BYTE *)ptr + v25) = *v22;
        *((_BYTE *)ptr + WORD2(v119) + 1) = v22[1];
        WORD2(v119) += 2;
        v15 += 4;
        goto LABEL_136;
      case 'm':
        unsigned int v49 = v120++;
        unsigned int v22 = (_BYTE *)*v49;
        if (!v22) {
          goto LABEL_136;
        }
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_227:
          uint64_t v97 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_229:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  643,  v97);
        }

        unsigned int v50 = WORD2(v119);
        if (BYTE6(v119) != 2)
        {
          uint64_t v97 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_229;
        }

        ++WORD2(v119);
        *((_BYTE *)ptr + v50) = 1;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_231:
          uint64_t v98 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_233:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  645,  v98);
        }

        __int16 v51 = WORD2(v119);
        if (BYTE6(v119) != 2)
        {
          uint64_t v98 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_233;
        }

        ++WORD2(v119);
        *((_BYTE *)ptr + v51) = 2;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_235:
          __int128 v99 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_237:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  647,  v99);
        }

        uint64_t v25 = WORD2(v119);
        if (WORD1(v119) - WORD2(v119) <= 1) {
          goto LABEL_235;
        }
        if (BYTE6(v119) != 2)
        {
          __int128 v99 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_237;
        }

        goto LABEL_75;
      case 'o':
        int v26 = (char **)v120++;
        unsigned int v27 = *v26;
        if (!v27) {
          goto LABEL_136;
        }
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_179:
          unsigned __int16 v85 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_181:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  756,  v85);
        }

        uint64_t v28 = WORD2(v119);
        if (BYTE6(v119) != 2)
        {
          unsigned __int16 v85 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_181;
        }

        ++WORD2(v119);
        *((_BYTE *)ptr + v28) = 5;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_183:
          unsigned __int16 v86 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_185:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  758,  v86);
        }

        unsigned __int16 v29 = WORD2(v119);
        if (BYTE6(v119) != 2)
        {
          unsigned __int16 v86 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_185;
        }

        ++WORD2(v119);
        *((_BYTE *)ptr + v29) = 1;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_187:
          unsigned __int16 v87 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_189:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  760,  v87);
        }

        uint64_t v30 = WORD2(v119);
        if (BYTE6(v119) != 2)
        {
          unsigned __int16 v87 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_189;
        }

        int v31 = *v27;
        ++WORD2(v119);
        *((_BYTE *)ptr + v30) = v31;
        v15 += 3;
        goto LABEL_136;
      case 'r':
        __int16 v52 = (char **)v120++;
        int v53 = *v52;
        if (!v53) {
          goto LABEL_136;
        }
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_239:
          uint64_t v100 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_241:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  675,  v100);
        }

        unsigned int v54 = WORD2(v119);
        if (BYTE6(v119) != 2)
        {
          uint64_t v100 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_241;
        }

        ++WORD2(v119);
        *((_BYTE *)ptr + v54) = 4;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_243:
          int v101 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_245:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  677,  v101);
        }

        uint64_t v55 = WORD2(v119);
        if (BYTE6(v119) != 2)
        {
          int v101 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_245;
        }

        ++WORD2(v119);
        *((_BYTE *)ptr + v55) = 9;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_247:
          unsigned __int16 v102 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_249:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  679,  v102);
        }

        unsigned int v56 = WORD2(v119);
        if (BYTE6(v119) != 2)
        {
          unsigned __int16 v102 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_249;
        }

        uint64_t v57 = *v53;
        ++WORD2(v119);
        *((_BYTE *)ptr + v56) = v57;
        unsigned int v58 = (char **)v120++;
        unint64_t v59 = *v58;
        if (*v58)
        {
          if (HIBYTE(v119))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_251:
            int v103 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_253:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  684,  v103);
          }

          uint64_t v60 = WORD2(v119);
          if (BYTE6(v119) != 2)
          {
            int v103 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_253;
          }

          uint64_t v61 = *v59;
        }

        else
        {
          if (HIBYTE(v119))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_271:
            unsigned __int8 v108 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_273:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  686,  v108);
          }

          uint64_t v60 = WORD2(v119);
          uint64_t v61 = v16;
          if (BYTE6(v119) != 2)
          {
            unsigned __int8 v108 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_273;
          }
        }

        WORD2(v119) = v60 + 1;
        *((_BYTE *)ptr + v60) = v61;
        uint64_t v62 = (char **)v120++;
        uint64_t v63 = *v62;
        if (*v62)
        {
          if (HIBYTE(v119))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_255:
            signed int v104 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_257:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  690,  v104);
          }

          uint64_t v64 = WORD2(v119);
          if (BYTE6(v119) != 2)
          {
            signed int v104 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_257;
          }

          uint64_t v65 = *v63;
        }

        else
        {
          if (HIBYTE(v119))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_275:
            uint64_t v109 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_277:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  692,  v109);
          }

          uint64_t v64 = WORD2(v119);
          uint64_t v65 = v16;
          if (BYTE6(v119) != 2)
          {
            uint64_t v109 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_277;
          }
        }

        WORD2(v119) = v64 + 1;
        *((_BYTE *)ptr + v64) = v65;
        uint64_t v66 = v120++;
        unsigned int v67 = (_BYTE *)*v66;
        if (v67)
        {
          if (HIBYTE(v119))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_259:
            uint64_t v105 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_261:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  697,  v105);
          }

          if (WORD1(v119) - WORD2(v119) <= 1) {
            goto LABEL_259;
          }
          if (BYTE6(v119) != 2)
          {
            uint64_t v105 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_261;
          }

          *((_BYTE *)ptr + WORD2(v119)) = *v67;
          int v68 = v67[1];
        }

        else
        {
          if (HIBYTE(v119))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_279:
            uint64_t v110 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_281:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  699,  v110);
          }

          if (WORD1(v119) - WORD2(v119) <= 1) {
            goto LABEL_279;
          }
          if (BYTE6(v119) != 2)
          {
            uint64_t v110 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_281;
          }

          *((_BYTE *)ptr + WORD2(v119)) = v16;
          int v68 = v17;
        }

        *((_BYTE *)ptr + WORD2(v119) + 1) = v68;
        uint64_t v69 = WORD2(v119) + 2;
        WORD2(v119) += 2;
        uint64_t v70 = v120++;
        uint64_t v71 = (_BYTE *)*v70;
        if (v71)
        {
          if (HIBYTE(v119))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_263:
            int v106 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_265:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  703,  v106);
          }

          if (WORD1(v119) - v69 <= 1) {
            goto LABEL_263;
          }
          if (BYTE6(v119) != 2)
          {
            int v106 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_265;
          }

          *((_BYTE *)ptr + v69) = *v71;
          BOOL v72 = v71[1];
        }

        else
        {
          if (HIBYTE(v119))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_283:
            uint64_t v111 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_285:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  705,  v111);
          }

          if (WORD1(v119) - v69 <= 1) {
            goto LABEL_283;
          }
          if (BYTE6(v119) != 2)
          {
            uint64_t v111 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_285;
          }

          *((_BYTE *)ptr + v69) = v16;
          BOOL v72 = v17;
        }

        *((_BYTE *)ptr + WORD2(v119) + 1) = v72;
        unsigned int v73 = WORD2(v119) + 2;
        WORD2(v119) += 2;
        uint64_t v74 = v120++;
        unsigned __int16 v75 = (_BYTE *)*v74;
        if (v75)
        {
          if (HIBYTE(v119))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_267:
            unsigned __int8 v107 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_269:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  709,  v107);
          }

          if (WORD1(v119) - v73 <= 1) {
            goto LABEL_267;
          }
          if (BYTE6(v119) != 2)
          {
            unsigned __int8 v107 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_269;
          }

          *((_BYTE *)ptr + v73) = *v75;
          uint64_t v76 = v75[1];
        }

        else
        {
          if (HIBYTE(v119))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_287:
            uint64_t v112 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_289:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  711,  v112);
          }

          if (WORD1(v119) - v73 <= 1) {
            goto LABEL_287;
          }
          if (BYTE6(v119) != 2)
          {
            uint64_t v112 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_289;
          }

          *((_BYTE *)ptr + v73) = v16;
          uint64_t v76 = v17;
        }

        *((_BYTE *)ptr + WORD2(v119) + 1) = v76;
        WORD2(v119) += 2;
        v15 += 11;
        goto LABEL_136;
      case 's':
        uint64_t v32 = (char **)v120++;
        uint64_t v33 = *v32;
        if (!v33) {
          goto LABEL_136;
        }
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_191:
          uint64_t v88 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_193:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  732,  v88);
        }

        uint64_t v34 = WORD2(v119);
        if (BYTE6(v119) != 2)
        {
          uint64_t v88 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_193;
        }

        ++WORD2(v119);
        *((_BYTE *)ptr + v34) = 3;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_195:
          uint64_t v89 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_197:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  734,  v89);
        }

        uint64_t v35 = WORD2(v119);
        if (BYTE6(v119) != 2)
        {
          uint64_t v89 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_197;
        }

        ++WORD2(v119);
        *((_BYTE *)ptr + v35) = 22;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_199:
          int v90 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_201:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  736,  v90);
        }

        uint64_t v36 = WORD2(v119);
        if (BYTE6(v119) != 2)
        {
          int v90 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_201;
        }

        ++WORD2(v119);
        *((_BYTE *)ptr + v36) = 0;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_203:
          int v91 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_205:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  738,  v91);
        }

        uint64_t v37 = WORD2(v119);
        if (BYTE6(v119) != 2)
        {
          int v91 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_205;
        }

        uint64_t v38 = *v33;
        ++WORD2(v119);
        *((_BYTE *)ptr + v37) = v38;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_207:
          uint64_t v92 = "ByteStream_NumReadBytesAvail(bs) >= 4";
LABEL_209:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  740,  v92);
        }

        if (WORD1(v119) - WORD2(v119) <= 3) {
          goto LABEL_207;
        }
        if (BYTE6(v119) != 2)
        {
          uint64_t v92 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_209;
        }

        *((_BYTE *)ptr + WORD2(v119)) = 0;
        *(_WORD *)((char *)ptr + WORD2(v119) + 1) = 0;
        *((_BYTE *)ptr + WORD2(v119) + 3) = 0;
        uint64_t v39 = WORD2(v119) + 4;
        WORD2(v119) += 4;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_211:
          uint64_t v93 = "ByteStream_NumReadBytesAvail(bs) >= 4";
LABEL_213:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  741,  v93);
        }

        if (WORD1(v119) - v39 <= 3) {
          goto LABEL_211;
        }
        if (BYTE6(v119) != 2)
        {
          uint64_t v93 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_213;
        }

        *((_BYTE *)ptr + v39) = 0;
        *(_WORD *)((char *)ptr + WORD2(v119) + 1) = 0;
        *((_BYTE *)ptr + WORD2(v119) + 3) = 0;
        unsigned int v40 = WORD2(v119) + 4;
        WORD2(v119) += 4;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_215:
          int v94 = "ByteStream_NumReadBytesAvail(bs) >= 4";
LABEL_217:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  742,  v94);
        }

        if (WORD1(v119) - v40 <= 3) {
          goto LABEL_215;
        }
        if (BYTE6(v119) != 2)
        {
          int v94 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_217;
        }

        *((_BYTE *)ptr + v40) = 0;
        *(_WORD *)((char *)ptr + WORD2(v119) + 1) = 0;
        *((_BYTE *)ptr + WORD2(v119) + 3) = 0;
        unsigned int v41 = WORD2(v119) + 4;
        WORD2(v119) += 4;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_219:
          int v95 = "ByteStream_NumReadBytesAvail(bs) >= 4";
LABEL_221:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  743,  v95);
        }

        if (WORD1(v119) - v41 <= 3) {
          goto LABEL_219;
        }
        if (BYTE6(v119) != 2)
        {
          int v95 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_221;
        }

        *((_BYTE *)ptr + v41) = -1;
        *((_BYTE *)ptr + WORD2(v119) + 1) = -1;
        *((_BYTE *)ptr + WORD2(v119) + pthread_attr_setdetachstate(&v7, 2) = -1;
        *((_BYTE *)ptr + WORD2(v119) + 3) = -1;
        uint64_t v42 = WORD2(v119) + 4;
        WORD2(v119) += 4;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_223:
          uint64_t v96 = "ByteStream_NumReadBytesAvail(bs) >= 4";
LABEL_225:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  744,  v96);
        }

        if (WORD1(v119) - v42 <= 3) {
          goto LABEL_223;
        }
        if (BYTE6(v119) != 2)
        {
          uint64_t v96 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_225;
        }

        *((_BYTE *)ptr + v4pthread_attr_setdetachstate(&v7, 2) = -1;
        *((_BYTE *)ptr + WORD2(v119) + 1) = -1;
        *((_BYTE *)ptr + WORD2(v119) + pthread_attr_setdetachstate(&v7, 2) = -1;
        *((_BYTE *)ptr + WORD2(v119) + 3) = -1;
        WORD2(v119) += 4;
        v15 += 24;
        goto LABEL_136;
      default:
        if (*a1) {
          goto LABEL_136;
        }
        uint64_t v77 = WORD2(v119);
        WORD2(v119) = 0;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
          goto LABEL_291;
        }

        if (WORD1(v119) <= 1u)
        {
LABEL_291:
          uint64_t v113 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_293;
        }

        if (BYTE6(v119) != 2)
        {
          uint64_t v113 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_293:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  776,  v113);
        }

        *(_BYTE *)ptr = v15 + 4;
        *((_BYTE *)ptr + WORD2(v119) + 1) = (unsigned __int16)(v15 + 4) >> 8;
        WORD2(v119) += 2;
        if (WORD1(v119) <= 5u) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  777,  "(size_t)(6) <= (size_t)((bs).__size)");
        }
        WORD2(v119) = 6;
        if (HIBYTE(v119))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
          goto LABEL_296;
        }

        if (WORD1(v119) <= 7u)
        {
LABEL_296:
          uint64_t v114 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_298;
        }

        if (BYTE6(v119) != 2)
        {
          uint64_t v114 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_298:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  778,  v114);
        }

        *((_BYTE *)ptr + 6) = v15;
        *((_BYTE *)ptr + WORD2(v119) + 1) = BYTE1(v15);
        WORD2(v119) += 2;
        if (v77 > WORD1(v119)) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  779,  "(size_t)(pos) <= (size_t)((bs).__size)");
        }
        WORD2(v119) = v77;
        if (BYTE6(v119) == 2) {
          WORD1(v119) = v77;
        }
        BYTE6(v119) = 15;
        if (a2 <= 6 && ((1 << a2) & 0x54) != 0)
        {
          if (!v115) {
            sub_1001EE2A0();
          }
          __int16 v78 = sub_1001EDBA0(0x2Fu);
          if (sub_10019658C(v115, *(unsigned __int16 *)(v78 + 6)))
          {
            sub_1000B1838(ptr);
            return 104LL;
          }

          *(_BYTE *)(sub_10017AB4C(v115) + 28) = v116;
        }

        return sub_1001980CC(v117, (uint64_t)&ptr);
    }
  }

      (*(void (**)(void, unsigned __int8 *, uint64_t))(*(void *)(v72 + 40) + 8LL))( *(unsigned __int16 *)(v72 + 8),  v35,  v31);
      return;
    }

    if (!a1[44])
    {
      if (!(_DWORD)v31) {
        return;
      }
      goto LABEL_75;
    }

    uint64_t v39 = 0;
    uint64_t v38 = 0;
    a2 = v68;
    goto LABEL_77;
  }

  int v6 = *(void *)(a3 + 240);
  if (!v6)
  {
    uint64_t v7 = (os_log_s *)qword_1008F75F8;
    if (os_log_type_enabled((os_log_t)qword_1008F75F8, OS_LOG_TYPE_FAULT)) {
      sub_100663EB4(v7, v8, v9, v10, v11, v12, v13, v14);
    }
  }

  uint64_t v98 = 0u;
  __int128 v99 = 0u;
  uint64_t v96 = 0u;
  uint64_t v97 = 0u;
  uint64_t next_slot = os_channel_get_next_slot(v6, 0LL, &v96);
  unint64_t v16 = 0LL;
  unsigned int v67 = 0;
  uint64_t v69 = 0;
  int v94 = 0LL;
  int v95 = 0LL;
  while (1)
  {
    if (*(_DWORD *)(a3 + 372) && os_log_type_enabled((os_log_t)qword_1008F75F8, OS_LOG_TYPE_FAULT)) {
      sub_100663E8C(&v76, v77);
    }
    if (next_slot)
    {
      unsigned __int16 v17 = 0;
      while (1)
      {
        unsigned int v18 = next_slot;
        unsigned __int16 v19 = *(_DWORD *)(a3 + 364);
        if (v19) {
          unsigned int v20 = *(_DWORD *)(a3 + 368) == 3;
        }
        else {
          unsigned int v20 = 0;
        }
        if (v20)
        {
          uint64_t v28 = next_slot;
          goto LABEL_36;
        }

        packet = os_channel_slot_get_packet(v6, next_slot);
        next_buflet = os_packet_get_next_buflet(packet, 0LL);
        if (!next_buflet && os_log_type_enabled((os_log_t)qword_1008F75F8, OS_LOG_TYPE_FAULT)) {
          sub_100663E64(&v74, v75);
        }
        data_offset = os_buflet_get_data_offset(next_buflet);
        object_address = os_buflet_get_object_address(next_buflet);
        data_length = os_buflet_get_data_length(next_buflet);
        os_packet_get_flow_uuid(packet, &v94);
        int v26 = WORD1(v96);
        if (*(_DWORD *)(a3 + 368) == 3
          && WORD1(v96) >= 0x2A4u
          && (unsigned int v27 = (os_log_s *)qword_1008F75F8, os_log_type_enabled((os_log_t)qword_1008F75F8, OS_LOG_TYPE_FAULT)))
        {
          *(_DWORD *)__int128 buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = v26;
          _os_log_fault_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_FAULT,  "Payload length %d exceeds supported MTU for isoch channel",  buf,  8u);
          int v26 = WORD1(v96);
          if (data_length)
          {
LABEL_26:
            if (data_length)
            {
              sub_100254688(a3, (const void *)(object_address + data_offset), data_length);
            }

            else if (os_log_type_enabled((os_log_t)qword_1008F75F8, OS_LOG_TYPE_ERROR))
            {
              sub_100663E30(&v72, v73);
            }

            goto LABEL_30;
          }
        }

        else if (data_length)
        {
          goto LABEL_26;
        }

        if (!v26) {
          goto LABEL_26;
        }
        sub_100254688(a3, (const void *)v97, v26);
LABEL_30:
        if (!v17) {
          unsigned __int16 v17 = (unsigned __int16)v95;
        }
        uint64_t next_slot = os_channel_get_next_slot(v6, v18, &v96);
        unint64_t v16 = v18;
        if (!next_slot)
        {
          uint64_t v28 = 0LL;
          unint64_t v16 = v18;
          goto LABEL_36;
        }
      }
    }

    uint64_t v28 = 0LL;
    unsigned __int16 v17 = 0;
LABEL_36:
    unsigned __int16 v19 = *(_DWORD *)(a3 + 364);
    unsigned int v18 = v28;
LABEL_37:
    unsigned __int16 v29 = v19 == 0;
    if (!v19) {
      goto LABEL_96;
    }
    uint64_t v71 = 0;
    sub_100242CA4(&v71);
    uint64_t v30 = sub_100103084(*(void *)(a3 + 112), (int *)&v78);
    if ((_DWORD)v30 && (_DWORD)v30 != 5007) {
      __int16 v78 = 1015;
    }
    int v31 = *(_DWORD *)(a3 + 364);
    if (v78 >= v31) {
      uint64_t v32 = v31;
    }
    else {
      uint64_t v32 = v78;
    }
    if (!*(_BYTE *)(a3 + 378))
    {
      uint64_t v30 = sub_1001859B4(a2);
      uint64_t v69 = v30;
    }

    if (a1[139]) {
      sub_100253658(v30, *(unsigned __int8 **)(a3 + 352), v32, v69, 0, a1[140]);
    }
    uint64_t v33 = sub_10008F3E4( (uint64_t)sub_10025399C,  *(__int128 **)(a3 + 112),  a2,  *(char **)(a3 + 352),  (unsigned __int16)v32,  0);
    if (!*(_BYTE *)(a3 + 378)) {
      unsigned int v67 = sub_1001859B4(a2);
    }
    sub_100242CD0(&v71);
    if (a1[138])
    {
      uint64_t v34 = (unsigned __int16)v95;
      uint64_t v35 = (os_log_s *)qword_1008F7630;
      if (os_log_type_enabled((os_log_t)qword_1008F7630, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v36 = byte_1008F7638++;
        *(_DWORD *)__int128 buf = 67110912;
        *(_DWORD *)&uint8_t buf[4] = 20;
        uint64_t v80 = 1024;
        uint64_t v81 = 60;
        unsigned __int16 v82 = 1024;
        unsigned __int16 v83 = v17;
        unsigned __int16 v84 = 1024;
        unsigned __int16 v85 = v34;
        unsigned __int16 v86 = 1024;
        unsigned __int16 v87 = (unsigned __int16)v32;
        uint64_t v88 = 1024;
        uint64_t v89 = v69;
        int v90 = 1024;
        int v91 = (unsigned __int16)(v67 - 1);
        uint64_t v92 = 1024;
        uint64_t v93 = v36;
        _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "28 {curProtocol: %hhu, prevProtocol: %hhu, prevSeqnStart: %hu, prevSeqnEnd: %hu, prevLen: %hu, curSeqNStart: % hu, curSeqnEnd:%hu, logSeqn: %hhu}",  buf,  0x32u);
      }
    }

    ++*(_DWORD *)(a3 + 268);
    if (v33 != 412) {
      break;
    }
    sub_1002547DC(a3, v32);
    a2 = v68;
    sub_100242CD8(&v71);
    uint64_t next_slot = v18;
  }

  if (v33)
  {
    uint64_t v57 = (os_log_s *)qword_1008F75F8;
    if (os_log_type_enabled((os_log_t)qword_1008F75F8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 67109376;
      *(_DWORD *)&uint8_t buf[4] = v68;
      uint64_t v80 = 1024;
      uint64_t v81 = v33;
      _os_log_error_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_ERROR,  "Failed to transmit data from socket on pipe 0x%04x with result %{bluetooth:OI_STATUS}u",  buf,  0xEu);
    }
  }

  else
  {
    sub_1002547DC(a3, v32);
  }

  sub_100242CD8(&v71);
LABEL_96:
  if (v16) {
    os_channel_advance_slot(v6, v16);
  }
  if (*(_DWORD *)(a3 + 368) == 3
    || *(_DWORD *)(a3 + 268) >= *(_DWORD *)(a3 + 260)
    || os_channel_available_slot_count(v6) <= 1)
  {
    *(_DWORD *)(a3 + 268) = 0;
    os_channel_sync(v66, 1LL);
  }

  return v29;
}

          *(_BYTE *)(*a1 + v9) = *((_DWORD *)a2 + 2);
          *(_BYTE *)(*a1 + *((unsigned __int16 *)a1 + 6) + 1) = BYTE1(*((_DWORD *)a2 + 2));
          *(_BYTE *)(*a1 + *((unsigned __int16 *)a1 + 6) + pthread_attr_setdetachstate(&v7, 2) = *((_WORD *)a2 + 5);
          *(_BYTE *)(*a1 + *((unsigned __int16 *)a1 + 6) + 3) = a2[11];
          unint64_t v16 = *((_WORD *)a1 + 6) + 4;
          goto LABEL_76;
        }

        unsigned int v40 = "ByteStream_NumReadBytesAvail(*pByteStream) >= 4";
LABEL_118:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp",  454,  v40);
      }

      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/Platforms/Darwin/BT_DataElements.cpp");
      }

      else if (*((unsigned __int16 *)a1 + 5) - (unint64_t)v9 > 0xF)
      {
        if (*((_BYTE *)a1 + 14) != 2)
        {
          uint64_t v39 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_115;
        }

  uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 504) objectForKey:v25]);
  if (v46)
  {

LABEL_78:
    uint64_t v47 = qword_1008F75B0;
    if (!os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_73;
    }
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v98 = v25;
    unsigned int v27 = (os_log_s *)v47;
    uint64_t v28 = "Skipping update of device %{public}@ as we're still waiting on an indication response";
    goto LABEL_43;
  }

  uint64_t v48 = 0;
LABEL_82:
  sub_100241F90(buf, v25);
  unsigned int v49 = sub_1001FDB10(v81, buf);
  unsigned int v50 = (os_log_s *)qword_1008F75B0;
  if (v80 == v49)
  {
    if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v98 = v25;
      _os_log_error_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_ERROR,  "Dropping update of device %{public}@ as we have no ATT session",  buf,  0xCu);
    }

        uint64_t v35 = v14 + 72;
        if (!sub_10056AAF0(v14 + 72) && os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_FAULT)) {
          sub_1006754C0();
        }
        if (sub_10056AAD8(v35) >= (unint64_t)a3)
        {
          unsigned __int16 v17 = sub_10056AAD8(v35) - a3;
          if (v17)
          {
            unint64_t v16 = operator new[](v17);
            sub_10056ACE0(v35, v16, a3, v17);
            unsigned int v18 = 0LL;
          }

          else
          {
            unsigned int v18 = 0LL;
            unint64_t v16 = 0LL;
            unsigned __int16 v17 = 0;
          }
        }

        else
        {
          unint64_t v16 = 0LL;
          unsigned __int16 v17 = 0;
          unsigned int v18 = 7LL;
        }

        goto LABEL_10;
      }

      memset(&v36, 0, sizeof(v36));
      if (v39) {
        int v31 = v27;
      }
      else {
        int v31 = 0;
      }
      if ((v31 & 1) != 0)
      {
        uint64_t v32 = &v38;
      }

      else
      {
        if (qword_1008D9278 != -1) {
          dispatch_once(&qword_1008D9278, &stru_100894270);
        }
        uint64_t v32 = (std::string *)(a1 + 304);
      }

      std::string::operator=(&v36, v32);
LABEL_60:
      uint64_t v33 = v36.__r_.__value_.__s.__size_;
      if ((v36.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v33 = v36.__r_.__value_.__l.__size_;
      }
      if (!v33)
      {
        uint64_t v34 = sub_1002E6BF0();
      }

      uint64_t v28 = *(void *)(a1 + 120);
      if ((v36.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        unsigned __int16 v29 = &v36;
      }
      else {
        unsigned __int16 v29 = (std::string *)v36.__r_.__value_.__r.__words[0];
      }
      if ((v36.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        size = v36.__r_.__value_.__s.__size_;
      }
      else {
        size = v36.__r_.__value_.__l.__size_;
      }
      goto LABEL_71;
    }

    std::string::operator=(&v38, &__p);
    goto LABEL_32;
  }

  if (*(void *)(a1 + 104))
  {
    unsigned int v20 = *(_DWORD *)(v14 + 16);
    v38.__r_.__value_.__r.__words[0] = (std::string::size_type)&v43;
    unsigned __int16 v21 = sub_1002DBC4C((uint64_t **)(a1 + 384), &v43, (uint64_t)&unk_1006C2518, &v38);
    *((_DWORD *)v21 + 10) = v20;
    *((_DWORD *)v21 + 11) = 0;
    v21[6] = a6;
    unsigned int v22 = sub_100404FE8();
    unsigned int v23 = operator new(0x40uLL);
    unint64_t v24 = *(void *)(a1 + 104);
    LODWORD(v38.__r_.__value_.__l.__data_) = *(_DWORD *)(v14 + 16);
    sub_10038C9EC((uint64_t)v23, v24, v15, &v38, &v44, v14 + 72, &v43, a7);
    sub_100405744(v22, v23);
    goto LABEL_13;
  }

  unint64_t v16 = 0LL;
  unsigned __int16 v17 = 0;
  unsigned int v18 = 242LL;
LABEL_10:
  v38.__r_.__value_.__s.__data_[0] = 0;
  sub_100242CA4(&v38);
  ((void (*)(uint64_t, uint64_t, void *, void))a6)(a4, v18, v16, v17);
  if (v16) {
    operator delete[](v16);
  }
  sub_100242CD8(&v38);
LABEL_13:
  sub_100242FAC((uint64_t)v40);
}
}

  unsigned __int16 v84 = &off_10089A548;
  if (v85) {
    sub_1002CD254(v85);
  }
}

uint64_t sub_1000D5904(uint64_t a1, uint64_t a2, unsigned int a3, _WORD *a4)
{
  uint64_t v4 = (unsigned __int16)*a4;
  else {
    uint64_t v5 = (unsigned __int16)*a4;
  }
  while (1)
  {
    if (v5 == v4) {
      return 0x7FFFFFFFLL;
    }
    if (*(_BYTE *)(a2 + v4) != 32) {
      break;
    }
    *a4 = ++v4;
    if (*(_BYTE *)(a1 + 21)) {
      return 32LL;
    }
  }

  *a4 = v4 + 1;
  uint64_t v6 = *(unsigned __int8 *)(a2 + (unsigned __int16)v4);
  if ((_DWORD)v6 != 34)
  {
    if (*(_BYTE *)(a1 + 21)) {
      return v6;
    }
    goto LABEL_15;
  }

  int v7 = *(unsigned __int8 *)(a1 + 21);
  if (*(_BYTE *)(a1 + 20) == 3)
  {
    v7 ^= 1u;
    *(_BYTE *)(a1 + 21) = v7;
  }

  if (!v7)
  {
LABEL_15:
    else {
      return (v6 - 32);
    }
  }

  return v6;
}

uint64_t sub_1000D599C(void (**a1)(void **), uint64_t a2, unsigned int a3)
{
  __int16 v53 = 0;
  if (*((_BYTE *)a1 + 20) == 5) {
    *(_DWORD *)((char *)a1 + 18) = 0;
  }
  int v6 = sub_1000D5904((uint64_t)a1, a2, a3, &v53);
  if (v6 != 0x7FFFFFFF)
  {
    int v8 = v6;
    while (2)
    {
      for (char i = *((_BYTE *)a1 + 20); i == 3; char i = 0)
      {
        if (v8 == 13)
        {
          unsigned int v10 = *((unsigned __int16 *)a1 + 9);
          if (!*((_BYTE *)a1 + 21))
          {
            if (*((_WORD *)a1 + 9))
            {
              *((_BYTE *)a1 + 20) = 4;
              goto LABEL_42;
            }

void sub_1000D5E48(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (!a1)
  {
    sub_1001EE2A0();
    if (a3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1001EE2A0();
    goto LABEL_3;
  }

  if (!a3) {
    goto LABEL_5;
  }
LABEL_3:
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(_WORD *)(a1 + 16) = a4;
  *(_DWORD *)(a1 + 18) = 0;
}

uint64_t sub_1000D5E9C(unsigned __int8 *__s1, unsigned int a2)
{
  if (!qword_1008DFD88) {
    return a2
  }
        && ((unsigned int v8 = *__s1 - 42, v9 = v8 > 0x34, v10 = (1LL << v8) & 0x10000000000003LL, !v9)
          ? (BOOL v11 = v10 == 0)
          : (BOOL v11 = 1),
            !v11);
  uint64_t v4 = *(const void **)qword_1008DFD88;
  if (!*(void *)qword_1008DFD88) {
    return a2
  }
        && ((unsigned int v8 = *__s1 - 42, v9 = v8 > 0x34, v10 = (1LL << v8) & 0x10000000000003LL, !v9)
          ? (BOOL v11 = v10 == 0)
          : (BOOL v11 = 1),
            !v11);
  for (char i = (const void **)(qword_1008DFD88 + 16); ; i += 2)
  {
    size_t v6 = *((unsigned __int8 *)i - 8);
    int v7 = *i;
    uint64_t v4 = v7;
    if (!v7) {
      return a2
    }
          && ((unsigned int v8 = *__s1 - 42, v9 = v8 > 0x34, v10 = (1LL << v8) & 0x10000000000003LL, !v9)
            ? (BOOL v11 = v10 == 0)
            : (BOOL v11 = 1),
              !v11);
  }

  return *((unsigned int *)i - 1);
}

uint64_t sub_1000D5F38(int a1, uint64_t *a2)
{
  if (!dword_1008F6F0C)
  {
    qword_1008DFDA0 = (uint64_t)sub_1000B1814(8uLL);
    if (!qword_1008DFDA0) {
      return 106LL;
    }
  }

  uint64_t v7 = 4LL;
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  size_t v6 = &unk_1008830F8;
  uint64_t v8 = *a2;
  LOWORD(v9) = *((_WORD *)a2 + 4);
  if (a1)
  {
    byte_1008DFD90 = 1;
    word_1008DFD92 = 2;
    dword_1008DFD98 = a1;
  }

  else
  {
    LOWORD(v7) = 3;
  }

  uint64_t v4 = sub_1001E139C((uint64_t)&v6, (int *)(qword_1008DFDA0 + 4));
  if ((_DWORD)v4)
  {
    *(_DWORD *)(qword_1008DFDA0 + 4) = 0;
    sub_1000D6030();
  }

  else
  {
    sub_100115688(0x80000);
    dword_1008F6F0C |= 1u;
  }

  return v4;
}

void sub_1000D6030()
{
  if (!*(_DWORD *)qword_1008DFDA0 && !*(_DWORD *)(qword_1008DFDA0 + 4))
  {
    sub_1000B1838((void *)qword_1008DFDA0);
    qword_1008DFDA0 = 0LL;
    dword_1008F6F0C = 0;
  }

uint64_t sub_1000D6074()
{
  if ((dword_1008F6F0C & 1) == 0) {
    return 103LL;
  }
  sub_1001E1520(*(_DWORD *)(qword_1008DFDA0 + 4));
  sub_10011573C(0x80000);
  *(_DWORD *)(qword_1008DFDA0 + 4) = 0;
  dword_1008F6F0C &= 2u;
  sub_1000D6030();
  return 0LL;
}

uint64_t sub_1000D60D8( int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (dword_1008F6F10)
  {
LABEL_2:
    uint64_t v17 = qword_1008DFDA8;
    while (1)
    {
      uint64_t v17 = *(void *)v17;
      if (!v17) {
        break;
      }
    }

    uint64_t v21 = a7;
    unsigned int v22 = sub_1000B1814(0x58uLL);
    if (v22)
    {
      uint64_t v23 = a8;
      uint64_t v18 = 0LL;
      uint64_t v24 = *(void *)qword_1008DFDA8;
      *(void *)qword_1008DFDA8 = v22;
      v22[40] = a1;
      *(void *)unsigned int v22 = v24;
      *((void *)v22 + 1) = a2;
      *((void *)v22 + pthread_attr_setdetachstate(&v7, 2) = a3;
      *((void *)v22 + 3) = a4;
      *((void *)v22 + 4) = a5;
      *((void *)v22 + 5) = a6;
      *((void *)v22 + 6) = v21;
      *((void *)v22 + 7) = v23;
      *((void *)v22 + 8) = a9;
      *((void *)v22 + 9) = a10;
      return v18;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Out of memory space trying to allocate profile.", v25, v26, v27, v28, v29, v30, v31, v34);
      BOOL v32 = (os_log_s *)sub_100086554(2u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 104LL;
  }

  uint64_t v19 = a7;
  qword_1008DFDA8 = (uint64_t)sub_1000B1814(0x10uLL);
  if (!qword_1008DFDA8) {
    return 104LL;
  }
  uint64_t v20 = sub_10017A6F0(23, (uint64_t)sub_1000D7920);
  if (!(_DWORD)v20)
  {
    uint64_t v20 = sub_10017A6F0(27, (uint64_t)sub_1000D7BC8);
    if (!(_DWORD)v20)
    {
      dword_1008F6F10 = 1;
      a7 = v19;
      goto LABEL_2;
    }
  }

  uint64_t v18 = v20;
  if (qword_1008DFDA8)
  {
    sub_1000B1838((void *)qword_1008DFDA8);
    qword_1008DFDA8 = 0LL;
  }

  return v18;
}

uint64_t sub_1000D6264(int a1)
{
  if (!dword_1008F6F10) {
    return 408LL;
  }
  mach_port_t v1 = (void *)qword_1008DFDA8;
  do
  {
    int v2 = v1;
    mach_port_t v1 = (void *)*v1;
    if (!v1) {
      return 120LL;
    }
  }

  while (*((unsigned __int16 *)v1 + 40) != a1);
  void *v2 = *v1;
  sub_1000B1838(v1);
  if (*(void *)qword_1008DFDA8) {
    return 0LL;
  }
  if (!dword_1008F6F10) {
    return 408LL;
  }
  uint64_t result = sub_10017A8B8(23);
  if (!(_DWORD)result)
  {
    uint64_t result = sub_10017A8B8(27);
    if (!(_DWORD)result)
    {
      while (1)
      {
        uint64_t v4 = (void **)qword_1008DFDA8;
        if (!*(void *)(qword_1008DFDA8 + 8)) {
          break;
        }
        sub_1000D68F8(*(void **)(qword_1008DFDA8 + 8));
      }

      while (1)
      {
        uint64_t v5 = *v4;
        if (!*v4) {
          break;
        }
        const void *v4 = (void *)*v5;
        sub_1000B1838(v5);
        uint64_t v4 = (void **)qword_1008DFDA8;
      }

      sub_1000B1838(v4);
      uint64_t result = 0LL;
      qword_1008DFDA8 = 0LL;
      dword_1008F6F10 = 0;
    }
  }

  return result;
}

uint64_t sub_1000D6348(uint64_t a1, int a2, uint64_t a3, char a4)
{
  ptr = 0LL;
  if (!dword_1008F6F10) {
    return 408LL;
  }
  v22[0] = 0LL;
  uint64_t v7 = qword_1008DFDA8;
  do
  {
    uint64_t v7 = *(void *)v7;
    if (!v7) {
      return 120LL;
    }
  }

  while (*(unsigned __int16 *)(v7 + 80) != a2);
  uint64_t v8 = qword_1008DFDA8 + 8;
  while (1)
  {
    uint64_t v8 = *(void *)v8;
    if (!v8) {
      break;
    }
    if (*(_DWORD *)a1 == *(_DWORD *)(v8 + 8) && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(v8 + 12))
    {
      ++*(_WORD *)(v8 + 14);
      *(_WORD *)(v7 + 8pthread_attr_setdetachstate(&v7, 2) = *(_WORD *)(v8 + 24);
      v22[1] = (const void *)(v7 + 80);
      LOWORD(v22[0]) = 2;
      sub_1001EE6DC((uint64_t)sub_1000D6504, v22, 0LL);
      return 0LL;
    }
  }

  uint64_t v10 = sub_1000D660C(&ptr);
  if (!(_DWORD)v10)
  {
    uint64_t v10 = sub_100174028( (uint64_t)sub_1000D66A4,  (uint64_t)sub_1000D67D0,  (uint64_t)sub_1000D685C,  23,  a1,  a3,  (_WORD *)ptr + 12,  (uint64_t)&unk_1006BBFD8);
    if ((_DWORD)v10)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"L2CAP connection failed %!", v11, v12, v13, v14, v15, v16, v17, v10);
        uint64_t v18 = (os_log_s *)sub_100086554(2u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1000D68F8(ptr);
    }

    else
    {
      uint64_t v19 = ptr;
      *(_WORD *)(v7 + 8pthread_attr_setdetachstate(&v7, 2) = *((_WORD *)ptr + 12);
      int v20 = *(_DWORD *)a1;
      v19[6] = *(_WORD *)(a1 + 4);
      *((_DWORD *)v19 + pthread_attr_setdetachstate(&v7, 2) = v20;
      v19[7] = 1;
      *((_BYTE *)v19 + 17) = 0;
      *((_BYTE *)v19 + 18) = a4;
    }
  }

  return v10;
}

void sub_1000D6504(uint64_t a1)
{
  uint64_t v20 = 0LL;
  uint64_t v1 = qword_1008DFDA8;
  while (1)
  {
    uint64_t v1 = *(void *)v1;
    if (!v1) {
      break;
    }
    if (*(unsigned __int16 *)(v1 + 80) == **(unsigned __int16 **)(a1 + 8))
    {
      uint64_t v2 = sub_1000D7780(&v20, *(unsigned __int16 *)(v1 + 82));
      if ((_DWORD)v2)
      {
        uint64_t v3 = v2;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"%! (%d)", v4, v5, v6, v7, v8, v9, v10, v3);
          uint64_t v11 = (os_log_s *)sub_100086554(2u);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }

      else
      {
        (*(void (**)(uint64_t, void, void, void))(v1 + 16))( v20 + 8,  *(unsigned __int16 *)(v20 + 28),  *(unsigned __int16 *)(v20 + 26),  0LL);
      }

      return;
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"%! (%d)", v12, v13, v14, v15, v16, v17, v18, 120LL);
    uint64_t v19 = (os_log_s *)sub_100086554(2u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_1000D660C(void *a1)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  uint64_t v2 = sub_1000B1814(0x88uLL);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t result = 0LL;
    uint64_t v5 = qword_1008DFDA8;
    void *v3 = *(void *)(qword_1008DFDA8 + 8);
    *(void *)(v5 + 8) = v3;
    *a1 = v3;
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Out of memory trying to allocate new AVCTP connetion record",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v14);
      uint64_t v13 = (os_log_s *)sub_100086554(2u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 104LL;
  }

  return result;
}

void sub_1000D66A4(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  ptr = 0LL;
  if (!sub_1000D7780((uint64_t *)&ptr, a1))
  {
    uint64_t v7 = ptr;
    int v19 = *((_DWORD *)ptr + 2);
    __int16 v20 = *((_WORD *)ptr + 6);
    if ((_DWORD)a4)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"L2CAP Connection failed: %!", v8, v9, v10, v11, v12, v13, v14, a4);
        uint64_t v15 = (os_log_s *)sub_100086554(2u);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      uint64_t v16 = ptr;
      if (*((_WORD *)ptr + 40))
      {
        sub_1001759FC(*((unsigned __int16 *)ptr + 40), 436LL);
        uint64_t v16 = ptr;
      }

      sub_1000D68F8(v16);
    }

    else
    {
      *((_WORD *)ptr + 13) = a3;
      v7[14] = a2;
      *((_BYTE *)v7 + 16) = 1;
      if (!*((_BYTE *)v7 + 17) && *((_BYTE *)v7 + 18)) {
        sub_1000D699C((uint64_t)&v19, 4366);
      }
    }

    uint64_t v17 = *(uint64_t **)qword_1008DFDA8;
    if (*(void *)qword_1008DFDA8)
    {
      do
      {
        uint64_t v18 = (uint64_t *)*v17;
        *((_WORD *)v17 + 41) = 0;
        ((void (*)(int *, uint64_t, uint64_t, uint64_t))v17[2])(&v19, a2, a3, a4);
        uint64_t v17 = v18;
      }

      while (v18);
    }
  }

void sub_1000D67D0(int a1, uint64_t a2)
{
  ptr = 0LL;
  if (!sub_1000D7780((uint64_t *)&ptr, a1))
  {
    uint64_t v3 = ptr;
    *((_WORD *)ptr + 14) = 0;
    v3[6] = 0;
    if (!*((_WORD *)v3 + 40))
    {
      int v6 = v3[2];
      __int16 v7 = *((_WORD *)v3 + 6);
      sub_1000D68F8(v3);
      uint64_t v4 = *(uint64_t ***)qword_1008DFDA8;
      if (*(void *)qword_1008DFDA8)
      {
        do
        {
          uint64_t v5 = *v4;
          ((void (*)(int *, uint64_t))v4[3])(&v6, a2);
          uint64_t v4 = (uint64_t **)v5;
        }

        while (v5);
      }
    }
  }

void sub_1000D685C(int a1, unsigned __int8 *a2, unsigned int a3)
{
  uint64_t v14 = 0LL;
  if (a3)
  {
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Zero length packet received", v5, v6, v7, v8, v9, v10, v11, v13);
    uint64_t v12 = (os_log_s *)sub_100086554(2u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_1000D68F8(void *ptr)
{
  uint64_t v2 = (void *)(qword_1008DFDA8 + 8);
  while (1)
  {
    uint64_t v3 = v2;
    uint64_t v2 = (void *)*v2;
    if (!v2) {
      break;
    }
    if (v2 == ptr)
    {
      void *v3 = *ptr;
      uint64_t v4 = (void *)ptr[4];
      if (v4)
      {
        sub_1000B1838(v4);
        ptr[4] = 0LL;
      }

      sub_1000B1838(ptr);
      return;
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Failed to free AVCTP connection", v5, v6, v7, v8, v9, v10, v11, v13);
    uint64_t v12 = (os_log_s *)sub_100086554(2u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_1000D699C(uint64_t a1, int a2)
{
  if (!dword_1008F6F10) {
    return 408LL;
  }
  uint64_t v2 = qword_1008DFDA8;
  do
  {
    uint64_t v2 = *(void *)v2;
    if (!v2) {
      return 120LL;
    }
  }

  while (*(unsigned __int16 *)(v2 + 80) != a2);
  uint64_t v3 = qword_1008DFDA8 + 8;
  while (1)
  {
    uint64_t v3 = *(void *)v3;
    if (!v3) {
      break;
    }
    if (*(_DWORD *)a1 == *(_DWORD *)(v3 + 8) && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(v3 + 12))
    {
      if (*(_WORD *)(v3 + 80)) {
        return 133LL;
      }
      break;
    }
  }

  uint64_t v5 = sub_100174028( (uint64_t)sub_1000D6ABC,  (uint64_t)sub_1000D6BE4,  (uint64_t)sub_1000D6CB8,  27,  a1,  (uint64_t)&unk_100883188,  (_WORD *)(v3 + 80),  (uint64_t)&unk_1006BBFD8);
  if ((_DWORD)v5)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"L2CAP connection failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
      uint64_t v13 = (os_log_s *)sub_100086554(2u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  return v5;
}

void sub_1000D6ABC(int a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  ptr = 0LL;
  if (!sub_1000D7780((uint64_t *)&ptr, a1))
  {
    uint64_t v7 = ptr;
    int v13 = *((_DWORD *)ptr + 2);
    __int16 v14 = *((_WORD *)ptr + 6);
    if ((_DWORD)a4)
    {
      *((_WORD *)ptr + 40) = 0;
    }

    else
    {
      *((_WORD *)ptr + 41) = a3;
      v7[42] = a2;
      *((_BYTE *)v7 + 128) = 1;
    }

    uint64_t v8 = *(uint64_t ***)qword_1008DFDA8;
    if (*(void *)qword_1008DFDA8)
    {
      uint64_t v9 = (unsigned __int16)(a3 - 3);
      do
      {
        uint64_t v10 = *v8;
        ((void (*)(int *, uint64_t, uint64_t, uint64_t))v8[6])(&v13, a2, v9, a4);
        uint64_t v8 = (uint64_t **)v10;
      }

      while (v10);
      uint64_t v7 = ptr;
    }

    if (*((_BYTE *)v7 + 16) && !v7[12])
    {
      if (v7[40])
      {
        sub_1001759FC((unsigned __int16)v7[40], 436LL);
        uint64_t v7 = ptr;
      }

      int v13 = *((_DWORD *)v7 + 2);
      __int16 v14 = v7[6];
      sub_1000D68F8(v7);
      uint64_t v11 = *(uint64_t ***)qword_1008DFDA8;
      if (*(void *)qword_1008DFDA8)
      {
        do
        {
          uint64_t v12 = *v11;
          ((void (*)(int *, uint64_t))v11[3])(&v13, a4);
          uint64_t v11 = (uint64_t **)v12;
        }

        while (v12);
      }
    }
  }

void sub_1000D6BE4(int a1, uint64_t a2)
{
  ptr = 0LL;
  __int16 v9 = 0;
  int v8 = 0;
  if (!sub_1000D7780((uint64_t *)&ptr, a1))
  {
    uint64_t v3 = ptr;
    *((_WORD *)ptr + 4pthread_attr_setdetachstate(&v7, 2) = 0;
    v3[20] = 0;
    uint64_t v4 = *(uint64_t ***)qword_1008DFDA8;
    if (*(void *)qword_1008DFDA8)
    {
      do
      {
        uint64_t v5 = *v4;
        ((void (*)(int *, uint64_t))v4[7])(&v8, a2);
        uint64_t v4 = (uint64_t **)v5;
      }

      while (v5);
      uint64_t v3 = ptr;
    }

    if (*((_BYTE *)v3 + 16))
    {
      if (!*((_WORD *)v3 + 12))
      {
        int v8 = v3[2];
        __int16 v9 = *((_WORD *)v3 + 6);
        sub_1000D68F8(v3);
        uint64_t v6 = *(uint64_t ***)qword_1008DFDA8;
        if (*(void *)qword_1008DFDA8)
        {
          do
          {
            uint64_t v7 = *v6;
            ((void (*)(int *, uint64_t))v6[3])(&v8, a2);
            uint64_t v6 = (uint64_t **)v7;
          }

          while (v7);
        }
      }
    }
  }

void sub_1000D6CB8(int a1, unsigned __int8 *a2, unsigned int a3)
{
  uint64_t v14 = 0LL;
  if (a3)
  {
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Zero length packet received", v5, v6, v7, v8, v9, v10, v11, v13);
    uint64_t v12 = (os_log_s *)sub_100086554(2u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_1000D6D54(uint64_t a1, char a2, char a3)
{
  if (!dword_1008F6F10) {
    return 408LL;
  }
  uint64_t v4 = qword_1008DFDA8 + 8;
  while (1)
  {
    uint64_t v4 = *(void *)v4;
    if (!v4) {
      break;
    }
    if (*(_DWORD *)a1 == *(_DWORD *)(v4 + 8) && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(v4 + 12))
    {
      *(_BYTE *)(v4 + 18) = a3;
      uint64_t v6 = sub_100174B2C( (uint64_t)sub_1000D66A4,  (uint64_t)sub_1000D67D0,  (uint64_t)sub_1000D685C,  *(unsigned __int16 *)(v4 + 24),  0LL,  a2,  (uint64_t)&unk_1006BBFD8);
      uint64_t v7 = v6;
      if (!(_DWORD)v6 && (a2 & 1) != 0) {
        return 0LL;
      }
      if ((_DWORD)v6)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_L2CAP_Accept failed %!", v16, v17, v18, v19, v20, v21, v22, v7);
          uint64_t v23 = (os_log_s *)sub_100086554(2u);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }

      sub_1000D68F8((void *)v4);
      return v7;
    }
  }

  if (sub_1000A86F0())
  {
    uint64_t v7 = 120LL;
    sub_1001EE134((uint64_t)"Could not find connection %!", v8, v9, v10, v11, v12, v13, v14, 120LL);
    uint64_t v15 = (os_log_s *)sub_100086554(2u);
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      return v7;
    }
    sub_100657858();
  }

  return 120LL;
}

uint64_t sub_1000D6EB4(uint64_t a1)
{
  if (!dword_1008F6F10) {
    return 408LL;
  }
  uint64_t v1 = qword_1008DFDA8 + 8;
  do
  {
    uint64_t v1 = *(void *)v1;
    if (!v1) {
      return 120LL;
    }
  }

  while (*(_DWORD *)a1 != *(_DWORD *)(v1 + 8) || *(unsigned __int16 *)(a1 + 4) != *(unsigned __int16 *)(v1 + 12));
  int v3 = *(unsigned __int16 *)(v1 + 14);
  if (!*(_WORD *)(v1 + 14)) {
    return 120LL;
  }
  if (v3 != 1)
  {
LABEL_15:
    uint64_t result = 0LL;
    *(_WORD *)(v1 + 14) = v3 - 1;
    return result;
  }

  if (!*(_WORD *)(v1 + 80) || (uint64_t result = sub_1001759FC(*(unsigned __int16 *)(v1 + 80), 436LL), !(_DWORD)result))
  {
    uint64_t result = sub_1001759FC(*(unsigned __int16 *)(v1 + 24), 436LL);
    if (!(_DWORD)result)
    {
      LOWORD(v3) = *(_WORD *)(v1 + 14);
      goto LABEL_15;
    }
  }

  return result;
}

uint64_t sub_1000D6F60(uint64_t a1, int a2, unsigned int a3, int a4, char *a5, signed int a6)
{
  if (!dword_1008F6F10) {
    return 408LL;
  }
  char v6 = a3;
  uint64_t v7 = 101LL;
  if (a3 <= 0xF && (a4 - 3) >= 0xFFFFFFFE)
  {
    __int16 v11 = a2;
    uint64_t v12 = qword_1008DFDA8;
    do
    {
      uint64_t v12 = *(void *)v12;
      if (!v12) {
        return 121LL;
      }
    }

    while (*(unsigned __int16 *)(v12 + 80) != a2);
    uint64_t v13 = qword_1008DFDA8 + 8;
    do
    {
      uint64_t v13 = *(void *)v13;
      if (!v13) {
        return 120LL;
      }
    }

    while (*(_DWORD *)a1 != *(_DWORD *)(v13 + 8) || *(unsigned __int16 *)(a1 + 4) != *(unsigned __int16 *)(v13 + 12));
    if (*(_BYTE *)(v13 + 16))
    {
      if (*(void *)(v13 + 56)) {
        return 410LL;
      }
      unsigned int v15 = a6 + 3;
      unsigned int v16 = *(unsigned __int16 *)(v13 + 26);
      if (a6 + 3 <= v16) {
        int v17 = 3;
      }
      else {
        int v17 = 4;
      }
      __int16 v18 = v16 - v17;
      *(_WORD *)(v13 + 66) = v18;
      uint64_t v19 = sub_1001EF29C(2u);
      if (v19)
      {
        uint64_t v20 = (unsigned __int8 *)v19;
        uint64_t v21 = (char *)sub_1000B17F4((unsigned __int16)v17);
        if (v21)
        {
          if (v15 <= v16)
          {
            *uint64_t v21 = (16 * v6) | (2 * (a4 != 1));
            uint64_t v29 = 2LL;
            uint64_t v30 = 1LL;
            uint64_t v22 = v20;
          }

          else
          {
            uint64_t v22 = v20;
            char v23 = 0;
            if (a6)
            {
              LOWORD(v24) = a6;
              do
              {
                if (v23) {
                  __int16 v25 = -1;
                }
                else {
                  __int16 v25 = -4;
                }
                unsigned __int16 v26 = *(_WORD *)(v13 + 26) + v25;
                BOOL v27 = (unsigned __int16)v24 >= v26;
                int v24 = (unsigned __int16)v24 - v26;
                BOOL v28 = v24 != 0 && v27;
                if (!v27) {
                  LOWORD(v24) = 0;
                }
                ++v23;
              }

              while (v28);
            }

            *uint64_t v21 = (16 * v6) | (2 * (a4 != 1)) | 4;
            v21[1] = v23;
            uint64_t v29 = 3LL;
            uint64_t v30 = 2LL;
          }

          v21[v29] = v11;
          v21[v30] = HIBYTE(v11);
          uint64_t v31 = v21;
          uint64_t v7 = sub_1001EFB10(v22, v21, (unsigned __int16)v17, 1u);
          if (!(_DWORD)v7)
          {
            uint64_t v7 = sub_1001EFB10(v22, a5, *(unsigned __int16 *)(v13 + 66), 2u);
            if (!(_DWORD)v7)
            {
              uint64_t v7 = sub_100172A98((uint64_t)sub_1000D71CC, *(unsigned __int16 *)(v13 + 24), 0LL, (uint64_t)v22, 0);
              if (!(_DWORD)v7)
              {
                *(_WORD *)(v13 + 70) = v11;
                *(_BYTE *)(v13 + 68) = v6;
                *(_BYTE *)(v13 + 69) = a4;
                *(void *)(v13 + 56) = a5;
                *(_WORD *)(v13 + 64) = a6;
                return v7;
              }
            }
          }

          sub_1000B1838(v31);
        }

        else
        {
          uint64_t v7 = 106LL;
          uint64_t v22 = v20;
        }

        sub_1000B1838(v22);
      }

      else
      {
        return 106LL;
      }
    }

    else
    {
      return 122LL;
    }
  }

  return v7;
}

void sub_1000D71CC(int a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = 0LL;
  sub_1001EF69C(a2);
  if (sub_1000D7780(&v17, a1))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Could not find connection\n", v6, v7, v8, v9, v10, v11, v12, v16);
      uint64_t v13 = (os_log_s *)sub_100086554(2u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    uint64_t v14 = qword_1008DFDA8;
    while (1)
    {
      uint64_t v14 = *(void *)v14;
      if (!v14) {
        break;
      }
      if (*(unsigned __int16 *)(v14 + 80) == *(unsigned __int16 *)(v17 + 70))
      {
        unsigned int v15 = *(void (**)(uint64_t, void, void, void, uint64_t, void, uint64_t))(v14 + 40);
        goto LABEL_10;
      }
    }

    unsigned int v15 = 0LL;
LABEL_10:
    sub_1000D869C((unsigned __int16 *)(v17 + 24), v15, v17 + 8, a4);
  }

uint64_t sub_1000D7290(uint64_t a1, int a2, unsigned int a3, int a4, char *a5, signed int a6)
{
  if (!dword_1008F6F10) {
    return 408LL;
  }
  char v6 = a3;
  uint64_t v7 = 101LL;
  if (a3 <= 0xF && (a4 - 3) >= 0xFFFFFFFE)
  {
    __int16 v11 = a2;
    uint64_t v12 = qword_1008DFDA8;
    do
    {
      uint64_t v12 = *(void *)v12;
      if (!v12) {
        return 121LL;
      }
    }

    while (*(unsigned __int16 *)(v12 + 80) != a2);
    uint64_t v13 = qword_1008DFDA8 + 8;
    do
    {
      uint64_t v13 = *(void *)v13;
      if (!v13) {
        return 120LL;
      }
    }

    while (*(_DWORD *)a1 != *(_DWORD *)(v13 + 8) || *(unsigned __int16 *)(a1 + 4) != *(unsigned __int16 *)(v13 + 12));
    if (!*(_WORD *)(v13 + 80)) {
      return 121LL;
    }
    if (*(void *)(v13 + 112)) {
      return 410LL;
    }
    unsigned int v16 = a6 + 3;
    unsigned int v17 = *(unsigned __int16 *)(v13 + 82);
    if (a6 + 3 <= v17) {
      int v18 = 3;
    }
    else {
      int v18 = 4;
    }
    __int16 v19 = v17 - v18;
    *(_WORD *)(v13 + 12pthread_attr_setdetachstate(&v7, 2) = v19;
    uint64_t v20 = sub_1001EF29C(2u);
    if (v20)
    {
      uint64_t v21 = (unsigned __int8 *)v20;
      uint64_t v22 = (char *)sub_1000B17F4((unsigned __int16)v18);
      if (v22)
      {
        if (v16 <= v17)
        {
          *uint64_t v22 = (16 * v6) | (2 * (a4 != 1));
          uint64_t v30 = 2LL;
          uint64_t v31 = 1LL;
          char v23 = v21;
        }

        else
        {
          char v23 = v21;
          char v24 = 0;
          if (a6)
          {
            LOWORD(v25) = a6;
            do
            {
              if (v24) {
                __int16 v26 = -1;
              }
              else {
                __int16 v26 = -4;
              }
              unsigned __int16 v27 = *(_WORD *)(v13 + 82) + v26;
              BOOL v28 = (unsigned __int16)v25 >= v27;
              int v25 = (unsigned __int16)v25 - v27;
              BOOL v29 = v25 != 0 && v28;
              if (!v28) {
                LOWORD(v25) = 0;
              }
              ++v24;
            }

            while (v29);
          }

          *uint64_t v22 = (16 * v6) | (2 * (a4 != 1)) | 4;
          v22[1] = v24;
          uint64_t v30 = 3LL;
          uint64_t v31 = 2LL;
        }

        v22[v30] = v11;
        v22[v31] = HIBYTE(v11);
        BOOL v32 = v22;
        uint64_t v7 = sub_1001EFB10(v23, v22, (unsigned __int16)v18, 1u);
        if (!(_DWORD)v7)
        {
          uint64_t v7 = sub_1001EFB10(v23, a5, *(unsigned __int16 *)(v13 + 122), 1u);
          if (!(_DWORD)v7)
          {
            uint64_t v7 = sub_100172A98((uint64_t)sub_1000D74F4, *(unsigned __int16 *)(v13 + 80), 0LL, (uint64_t)v23, 0);
            if (!(_DWORD)v7)
            {
              *(_WORD *)(v13 + 126) = v11;
              *(_BYTE *)(v13 + 124) = v6;
              *(_BYTE *)(v13 + 125) = a4;
              *(void *)(v13 + 11pthread_attr_setdetachstate(&v7, 2) = a5;
              *(_WORD *)(v13 + 120) = a6;
              return v7;
            }
          }
        }

        sub_1000B1838(v32);
      }

      else
      {
        uint64_t v7 = 106LL;
        char v23 = v21;
      }

      sub_1000B1838(v23);
    }

    else
    {
      return 106LL;
    }
  }

  return v7;
}

void sub_1000D74F4(int a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = 0LL;
  sub_1001EF69C(a2);
  if (sub_1000D7780(&v17, a1))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Could not find connection\n", v6, v7, v8, v9, v10, v11, v12, v16);
      uint64_t v13 = (os_log_s *)sub_100086554(2u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    uint64_t v14 = qword_1008DFDA8;
    while (1)
    {
      uint64_t v14 = *(void *)v14;
      if (!v14) {
        break;
      }
      if (*(unsigned __int16 *)(v14 + 80) == *(unsigned __int16 *)(v17 + 126))
      {
        uint64_t v15 = *(void *)(v14 + 72);
        goto LABEL_10;
      }
    }

    uint64_t v15 = 0LL;
LABEL_10:
    sub_1000D869C(v17 + 80, v15, v17 + 8, a4);
  }

uint64_t sub_1000D75B8(uint64_t a1, _OWORD *a2, uint64_t a3, __int16 *a4)
{
  __int128 v6 = a2[1];
  v31[0] = *a2;
  v31[1] = v6;
  uint64_t v7 = sub_100173838( 23,  (uint64_t)v31,  a1,  (uint64_t)sub_1000D66A4,  (uint64_t)sub_1000D67D0,  (uint64_t)sub_1000D685C,  a4,  (uint64_t)&unk_1006BBFD8);
  if ((_DWORD)v7)
  {
    uint64_t v8 = v7;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_AVCTP_createAVRCPChannels error creating A2DP signaling",  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v30);
      uint64_t v16 = (os_log_s *)sub_100086554(2u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    *(void *)&v31[0] = 0LL;
    uint64_t v17 = qword_1008DFDA8;
    while (1)
    {
      uint64_t v17 = *(void *)v17;
      if (!v17) {
        break;
      }
      if (*(_WORD *)(v17 + 80) == 4366)
      {
        uint64_t v8 = 0LL;
        uint64_t v26 = *(void *)&v31[0];
        __int16 v27 = *(_WORD *)(a1 + 4);
        *(_DWORD *)(*(void *)&v31[0] + 8LL) = *(_DWORD *)a1;
        *(_WORD *)(v26 + 1pthread_attr_setdetachstate(&v7, 2) = v27;
        __int16 v28 = *a4;
        *(_WORD *)(v26 + 24) = *a4;
        *(_WORD *)(v26 + 14) = 1;
        *(void *)(v26 + 56) = 0LL;
        *(_DWORD *)(v26 + 64) = 0;
        *(_BYTE *)(v26 + 7pthread_attr_setdetachstate(&v7, 2) = 0;
        *(_WORD *)(v26 + 16) = 1;
        *(_WORD *)(v17 + 8pthread_attr_setdetachstate(&v7, 2) = v28;
        return v8;
      }
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"%! (%d)", v18, v19, v20, v21, v22, v23, v24, 120LL);
      int v25 = (os_log_s *)sub_100086554(2u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 114LL;
  }

  return v8;
}

uint64_t sub_1000D7738(int a1, __int16 a2, __int16 a3)
{
  uint64_t v7 = 0LL;
  uint64_t result = sub_1000D7780(&v7, a1);
  if (!(_DWORD)result)
  {
    uint64_t v6 = v7;
    *(_WORD *)(v7 + 26) = a3;
    *(_WORD *)(v6 + 28) = a2;
  }

  return result;
}

uint64_t sub_1000D7780(uint64_t *a1, int a2)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  if (qword_1008DFDA8)
  {
    uint64_t v4 = qword_1008DFDA8 + 8;
    while (1)
    {
      uint64_t v4 = *(void *)v4;
      if (!v4) {
        break;
      }
      if (*(unsigned __int16 *)(v4 + 24) == a2 || *(unsigned __int16 *)(v4 + 80) == a2)
      {
        uint64_t result = 0LL;
        *a1 = v4;
        return result;
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Received AVCTP message after profile has been unregistered",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v14);
    uint64_t v13 = (os_log_s *)sub_100086554(2u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 120LL;
}

uint64_t sub_1000D7828(uint64_t a1, unsigned int a2, unsigned int a3)
{
  ptr = 0LL;
  uint64_t v16 = 0LL;
  uint64_t v5 = sub_10012D890(a1);
  if (!v5)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_AVCTP_cleanFastConnectAVRCP NULL Handle", v6, v7, v8, v9, v10, v11, v12, (uint64_t)ptr);
      uint64_t v13 = (os_log_s *)sub_100086554(2u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  if (a3)
  {
    if (!sub_100171EC4(a3, &v16))
    {
      if (v16)
      {
        sub_1001734D8(v16);
        if (v5) {
          sub_10011286C(v5);
        }
      }
    }
  }

  if (a2)
  {
    if (!sub_100171EC4(a2, &v16))
    {
      if (v16)
      {
        sub_1001734D8(v16);
        if (v5) {
          sub_10011286C(v5);
        }
      }
    }
  }

  return 0LL;
}

uint64_t sub_1000D7920(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v48 = 0LL;
  uint64_t v5 = qword_1008DFDA8 + 8;
  do
  {
    uint64_t v5 = *(void *)v5;
    if (!v5)
    {
      LOBYTE(v17) = 0;
      goto LABEL_23;
    }
  }

  while (*(_DWORD *)a2 != *(_DWORD *)(v5 + 8) || *(unsigned __int16 *)(a2 + 4) != *(unsigned __int16 *)(v5 + 12));
  uint64_t v48 = v5;
  int v7 = *(unsigned __int8 *)(v5 + 16);
  int v8 = sub_1000A86F0();
  if (v7)
  {
    if (v8)
    {
      sub_1001EE134((uint64_t)"AVCTP connection already in progress with %:", v9, v10, v11, v12, v13, v14, v15, a2);
      uint64_t v16 = (os_log_s *)sub_100086554(2u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    LOBYTE(v5) = 0;
    LOBYTE(v17) = 1;
  }

  else
  {
    if (v8)
    {
      sub_1001EE134( (uint64_t)"Rejecting previous pending attempt for incoming AVCTP connection",  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v47);
      uint64_t v18 = (os_log_s *)sub_100086554(2u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    if (*(_BYTE *)(v5 + 17)) {
      sub_100174B2C(0LL, 0LL, 0LL, *(unsigned __int16 *)(v5 + 24), 0LL, 0, 0LL);
    }
    else {
      sub_1001759FC(*(unsigned __int16 *)(v5 + 24), 436LL);
    }
    sub_1000D68F8((void *)v5);
    uint64_t v17 = *(void *)qword_1008DFDA8;
    if (*(void *)qword_1008DFDA8)
    {
      do
      {
        uint64_t v19 = *(void *)v17;
        *(_WORD *)(v17 + 8pthread_attr_setdetachstate(&v7, 2) = 0;
        uint64_t v17 = v19;
      }

      while (v19);
    }

    LOBYTE(v5) = 1;
  }

void sub_1000D7BC8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4 = qword_1008DFDA8 + 8;
  while (1)
  {
    uint64_t v4 = *(void *)v4;
    if (!v4) {
      break;
    }
    if (*(_DWORD *)a2 == *(_DWORD *)(v4 + 8) && *(unsigned __int16 *)(a2 + 4) == *(unsigned __int16 *)(v4 + 12))
    {
      BOOL v6 = *(_BYTE *)(v4 + 18) != 0;
      goto LABEL_13;
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Avctp Signalling channel does not exist, reject connection",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v41);
    uint64_t v14 = (os_log_s *)sub_100086554(2u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  BOOL v6 = 0;
LABEL_13:
  if (*(void *)qword_1008DFDA8)
  {
    if (v6)
    {
      uint64_t v15 = sub_100174B2C( (uint64_t)sub_1000D6ABC,  (uint64_t)sub_1000D6BE4,  (uint64_t)sub_1000D6CB8,  a3,  (uint64_t)&unk_100883188,  1,  (uint64_t)&unk_1006BBFD8);
      if ((_DWORD)v15)
      {
        uint64_t v16 = v15;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Browsing rejected due to error %!", v17, v18, v19, v20, v21, v22, v23, v16);
          uint64_t v24 = (os_log_s *)sub_100086554(2u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            sub_10065AFF0(v24);
          }
        }
      }

      else
      {
        *(_WORD *)(v4 + 80) = a3;
        *(_BYTE *)(v4 + 128) = 1;
      }

      return;
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"No AVCTP profiles registered", v25, v26, v27, v28, v29, v30, v31, v41);
    uint64_t v32 = (os_log_s *)sub_100086554(2u);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Rejecting incoming AVCTP connection request for browsing channel",  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v41);
    uint64_t v40 = (os_log_s *)sub_100086554(2u);
    if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  sub_100174B2C(0LL, 0LL, 0LL, a3, 0LL, 0, 0LL);
}

void sub_1000D7DB8(unsigned __int16 *a1, uint64_t a2, unsigned __int8 *a3, unsigned int a4)
{
  if (!a3)
  {
    uint64_t v38 = "buf";
    goto LABEL_31;
  }

  if (!a4)
  {
    uint64_t v38 = "(length) > 0";
LABEL_31:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avctp/avctp.c",  318,  v38);
  }

  uint64_t v6 = (*a3 >> 2) & 3;
  unsigned int v7 = 1;
  if (!(_DWORD)v6) {
    goto LABEL_8;
  }
  if ((_DWORD)v6 != 1) {
LABEL_12:
  }
    __asm { BR              X11 }

  if (a4 < 2)
  {
    if (*((_BYTE *)a1 + 23))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avctp/avctp.c");
      goto LABEL_15;
    }

void sub_1000D8694(int a1, void *ptr)
{
}

void sub_1000D869C( unsigned __int16 *a1, void (*a2)(uint64_t, void, void, void, uint64_t, void, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!(_DWORD)a4)
  {
    int v8 = a1[20];
    int v9 = a1[21];
    uint64_t v4 = (v8 - v9);
    if (v8 != v9)
    {
      unsigned int v10 = a1[1];
      else {
        unsigned __int16 v11 = v8 - v9;
      }
      uint64_t v12 = sub_1001EF29C(2u);
      if (v12)
      {
        uint64_t v13 = (unsigned __int8 *)v12;
        uint64_t v14 = (char *)sub_1000B17F4(1uLL);
        if (v14)
        {
          else {
            char v15 = 12;
          }
          char *v14 = v15 | (16 * *((_BYTE *)a1 + 44)) | (2 * (*((_BYTE *)a1 + 45) != 1));
          uint64_t v4 = sub_1001EFB10(v13, v14, 1uLL, 1u);
          if (!(_DWORD)v4)
          {
            uint64_t v4 = sub_1001EFB10(v13, (char *)(*((void *)a1 + 4) + a1[21]), v11, 2u);
            if (!(_DWORD)v4)
            {
              uint64_t v16 = *((_BYTE *)a1 + 48)
                  ? sub_1000D74F4
                  : (void (*)(int, void *, uint64_t, uint64_t))sub_1000D71CC;
              uint64_t v4 = sub_100172A98((uint64_t)v16, *a1, 0LL, (uint64_t)v13, 0);
              if (!(_DWORD)v4)
              {
                a1[21] += v11;
                return;
              }
            }
          }
        }

        else
        {
          uint64_t v4 = 106LL;
        }

        sub_1001EF69C(v13);
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Could not allocate mbuf\n", v17, v18, v19, v20, v21, v22, v23, v34);
          uint64_t v24 = (os_log_s *)sub_100086554(2u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        uint64_t v4 = 106LL;
      }
    }
  }

  uint64_t v25 = *((void *)a1 + 4);
  *((void *)a1 + 4) = 0LL;
  if (a2)
  {
    a2(a3, a1[23], *((unsigned __int8 *)a1 + 44), *((unsigned __int8 *)a1 + 45), v25, a1[20], v4);
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Could not find profile %d\n", v26, v27, v28, v29, v30, v31, v32, a1[23]);
    uint64_t v33 = (os_log_s *)sub_100086554(2u);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_1000D88A0(void **a1, unsigned int a2)
{
  int v3 = (void **)*a1;
  if (v3)
  {
    if (!a2) {
      goto LABEL_13;
    }
    uint64_t v4 = v3 + 1;
    uint64_t v5 = a2;
    do
    {
      unsigned int v6 = *((unsigned __int8 *)v4 - 8);
      BOOL v7 = v6 > 8;
      int v8 = (1 << v6) & 0x10E;
      if (v7 || v8 == 0)
      {
        if (*v4)
        {
          sub_1000B1838(*v4);
          void *v4 = 0LL;
        }
      }

      v4 += 2;
      --v5;
    }

    while (v5);
    int v3 = (void **)*a1;
    if (*a1)
    {
LABEL_13:
      sub_1000B1838(v3);
      *a1 = 0LL;
    }
  }

uint64_t sub_1000D8934(uint64_t a1, unsigned int a2, void **a3, _BYTE *a4)
{
  *a4 = 0;
  int v8 = sub_1000B17F4(16LL * a2);
  *a3 = v8;
  if (v8)
  {
    if (a2)
    {
      uint64_t v9 = 0LL;
      uint64_t v10 = 16LL * a2;
      do
      {
        unsigned __int16 v11 = *a3;
        ++*a4;
        v11[v9] = *(_BYTE *)(a1 + v9);
        *(_OWORD *)&v11[v9] = *(_OWORD *)(a1 + v9);
        if (*(_BYTE *)(a1 + v9 + 3))
        {
          uint64_t v12 = sub_1000B17F4(*(unsigned __int8 *)(a1 + v9 + 3));
          *(void *)&v11[v9 + 8] = v12;
          if (!v12) {
            goto LABEL_9;
          }
          memmove(v12, *(const void **)(a1 + v9 + 8), *(unsigned __int8 *)(a1 + v9 + 3));
        }

        v9 += 16LL;
      }

      while (v10 != v9);
    }

    return 0LL;
  }

  else
  {
LABEL_9:
    sub_1000D88A0(a3, *a4);
    *a4 = 0;
    return 106LL;
  }

uint64_t sub_1000D8A0C()
{
  if (qword_1008DFDB0) {
    return *(unsigned __int8 *)(qword_1008DFDB0 + 102);
  }
  else {
    return 0LL;
  }
}

BOOL sub_1000D8A28()
{
  return qword_1008DFDB0 && *(unsigned __int8 *)(qword_1008DFDB0 + 101) != *(unsigned __int8 *)(qword_1008DFDB0 + 102);
}

uint64_t sub_1000D8A50(int a1, _WORD *a2)
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  uint64_t v2 = *(unsigned __int8 *)(qword_1008DFDB0 + 98);
  if (!*(_BYTE *)(qword_1008DFDB0 + 98)) {
    return 120LL;
  }
  for (char i = *(_WORD **)(qword_1008DFDB0 + 16); !i[19] || (unsigned __int16)i[19] != a1; i += 32)
  {
    if (!--v2) {
      return 120LL;
    }
  }

  uint64_t result = 0LL;
  *a2 = *i;
  return result;
}

uint64_t sub_1000D8AB0(uint64_t a1, _WORD *a2)
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  uint64_t v2 = *(unsigned __int8 *)(qword_1008DFDB0 + 98);
  if (!*(_BYTE *)(qword_1008DFDB0 + 98)) {
    return 120LL;
  }
  for (uint64_t i = *(void *)(qword_1008DFDB0 + 16) + 28LL; ; i += 64LL)
  {
    if (*(_WORD *)(i + 10))
    {
    }

    if (!--v2) {
      return 120LL;
    }
  }

  uint64_t result = 0LL;
  *a2 = *(_WORD *)(i + 10);
  return result;
}

uint64_t sub_1000D8B24(uint64_t a1, _WORD *a2)
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  uint64_t v2 = *(unsigned __int8 *)(qword_1008DFDB0 + 98);
  if (!*(_BYTE *)(qword_1008DFDB0 + 98)) {
    return 120LL;
  }
  for (uint64_t i = *(void *)(qword_1008DFDB0 + 16) + 28LL; ; i += 64LL)
  {
    if (*(_WORD *)(i + 10))
    {
    }

    if (!--v2) {
      return 120LL;
    }
  }

  uint64_t result = 0LL;
  *a2 = *(_WORD *)(i - 28);
  return result;
}

uint64_t sub_1000D8B9C(int a1, _WORD *a2)
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  if (a1)
  {
    __int16 v2 = *(_WORD *)(*(void *)(qword_1008DFDB0 + 16) + ((unint64_t)(a1 - 1) << 6) + 38);
    if (v2)
    {
      uint64_t result = 0LL;
      *a2 = v2;
      return result;
    }

    sub_1001EE134((uint64_t)"CID from A2DP Handle not found", v12, v13, v14, v15, v16, v17, v18, v20);
    uint64_t v19 = (os_log_s *)sub_100086554(3u);
    if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      return 120LL;
    }
  }

  else
  {
    sub_1001EE134((uint64_t)"A2DP handle was 0", v4, v5, v6, v7, v8, v9, v10, v20);
    unsigned __int16 v11 = (os_log_s *)sub_100086554(3u);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      return 120LL;
    }
  }

  sub_100657858();
  return 120LL;
}

uint64_t sub_1000D8C7C(__int16 a1, _WORD *a2)
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  uint64_t v2 = *(void *)(qword_1008DFDB0 + 8);
  if (!v2) {
    return 120LL;
  }
  uint64_t v3 = *(unsigned __int8 *)(v2 + 144LL * (unsigned __int16)(a1 - 1) + 135);
  if (v3 == 255) {
    return 120LL;
  }
  uint64_t v4 = *(void *)(qword_1008DFDB0 + 16);
  if (!v4) {
    return 120LL;
  }
  uint64_t result = 0LL;
  *a2 = *(_WORD *)(v4 + (v3 << 6));
  return result;
}

uint64_t sub_1000D8CF0(uint64_t a1, _WORD *a2)
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  __int16 v13 = 0;
  uint64_t result = sub_1000D8B24(a1, &v13);
  if ((_DWORD)result)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"MediaCID from BT Address was not found", v4, v5, v6, v7, v8, v9, v10, v12);
      unsigned __int16 v11 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 120LL;
  }

  else
  {
    *a2 = *(_WORD *)(*(void *)(qword_1008DFDB0 + 8) + 144LL * (unsigned __int16)(v13 - 1) + 128);
  }

  return result;
}

uint64_t sub_1000D8DAC(int a1)
{
  if (!dword_1008F6F14) {
    return 0LL;
  }
  if (!qword_1008DFDB0 || !*(_BYTE *)(qword_1008DFDB0 + 98)) {
    goto LABEL_9;
  }
  uint64_t v1 = 0LL;
  uint64_t v2 = *(void *)(qword_1008DFDB0 + 16);
  while (*(unsigned __int16 *)(v2 + 38) != a1)
  {
    ++v1;
    v2 += 64LL;
  }

  if (v1 == 255)
  {
LABEL_9:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"No signal", v3, v4, v5, v6, v7, v8, v9, v12);
      uint64_t v10 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 0LL;
  }

  return v2;
}

uint64_t sub_1000D8E60(void *a1, char a2, _OWORD *a3, uint64_t a4)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"AVDTP_Register(c=0x%x,sendRsp=%B,pSignalingChannel=0x%x,pMediaChannel=0x%x)",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  (uint64_t)a1);
    uint64_t v15 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v32 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (dword_1008F6F14)
  {
    if (a1) {
      goto LABEL_6;
    }
LABEL_59:
    sub_1001EE2A0();
    return 101LL;
  }

  uint64_t v20 = sub_1001EDBA0(3u);
  if (!v20) {
    goto LABEL_59;
  }
  uint64_t v21 = (unsigned __int8 *)v20;
  qword_1008DFDB0 = (uint64_t)sub_1000B1814(0x68uLL);
  if (!qword_1008DFDB0) {
    return 106LL;
  }
  uint64_t v22 = (char *)sub_1000B1814(40LL * *v21);
  uint64_t v23 = qword_1008DFDB0;
  *(void *)qword_1008DFDB0 = v22;
  if (!v22) {
    goto LABEL_81;
  }
  if (*v21)
  {
    unsigned int v24 = 0;
    do
    {
      sub_1000D9CB4((uint64_t)v22);
      v22[25] = 0;
      ++v24;
      v22 += 40;
    }

    while (v24 < *v21);
  }

  uint64_t v25 = (char *)sub_1000B1814(144LL * v21[1]);
  uint64_t v23 = qword_1008DFDB0;
  *(void *)(qword_1008DFDB0 + 8) = v25;
  if (!v25) {
    goto LABEL_81;
  }
  if (v21[1])
  {
    unsigned int v26 = 0;
    uint64_t v27 = v25 + 137;
    do
    {
      *(v27 - 5) = 0;
      *(_DWORD *)(v27 - 137) = 0;
      *(_WORD *)(v27 - 9) = 0;
      sub_1000B90AC(0LL);
      *uint64_t v27 = -1;
      *((_DWORD *)v27 - 1) = -65281;
      ++v26;
      v27 += 144;
    }

    while (v26 < v21[1]);
  }

  uint64_t v28 = sub_1000B1814((unint64_t)v21[2] << 6);
  uint64_t v23 = qword_1008DFDB0;
  *(void *)(qword_1008DFDB0 + 16) = v28;
  if (!v28)
  {
LABEL_81:
    if (*(void *)(v23 + 8))
    {
      sub_1000B1838(*(void **)(v23 + 8));
      uint64_t v23 = qword_1008DFDB0;
      *(void *)(qword_1008DFDB0 + 8) = 0LL;
    }

    if (*(void *)v23)
    {
      sub_1000B1838(*(void **)v23);
      uint64_t v23 = qword_1008DFDB0;
      *(void *)qword_1008DFDB0 = 0LL;
    }

    sub_1000B1838((void *)v23);
    qword_1008DFDB0 = 0LL;
    return 106LL;
  }

  *(_BYTE *)(v23 + 96) = *v21;
  *(_WORD *)(v23 + 97) = *(_WORD *)(v21 + 1);
  *(_BYTE *)(v23 + 100) = 1;
  dword_1008F6F14 = 1;
  if (!a1) {
    goto LABEL_59;
  }
LABEL_6:
  if (!*a1)
  {
    sub_1001EE2A0();
    if (!*a1) {
      return 101LL;
    }
  }

  if (!a1[1])
  {
    sub_1001EE2A0();
    if (!a1[1]) {
      return 101LL;
    }
  }

  if (!a1[2])
  {
    sub_1001EE2A0();
    if (!a1[2]) {
      return 101LL;
    }
  }

  if (!a1[3])
  {
    sub_1001EE2A0();
    if (!a1[3]) {
      return 101LL;
    }
  }

  if (!a1[4])
  {
    sub_1001EE2A0();
    if (!a1[4]) {
      return 101LL;
    }
  }

  if (!a1[5])
  {
    sub_1001EE2A0();
    if (!a1[5]) {
      return 101LL;
    }
  }

  if (!a1[6])
  {
    sub_1001EE2A0();
    if (!a1[6]) {
      return 101LL;
    }
  }

  if (!a1[7])
  {
    sub_1001EE2A0();
    if (!a1[7]) {
      return 101LL;
    }
  }

  if (!a1[8])
  {
    sub_1001EE2A0();
    if (!a1[8]) {
      return 101LL;
    }
  }

  if (!a1[9])
  {
    sub_1001EE2A0();
    if (!a1[9]) {
      return 101LL;
    }
  }

  if (!a1[10])
  {
    sub_1001EE2A0();
    if (!a1[10]) {
      return 101LL;
    }
  }

  if (!a1[11])
  {
    sub_1001EE2A0();
    if (!a1[11]) {
      return 101LL;
    }
  }

  if (!a1[12])
  {
    sub_1001EE2A0();
    if (!a1[12]) {
      return 101LL;
    }
  }

  if (!a1[13])
  {
    sub_1001EE2A0();
    if (!a1[13]) {
      return 101LL;
    }
  }

  if (!a1[16])
  {
    sub_1001EE2A0();
    if (!a1[16]) {
      return 101LL;
    }
  }

  if (!a1[21])
  {
    sub_1001EE2A0();
    if (!a1[21]) {
      return 101LL;
    }
  }

  if (!a1[22])
  {
    sub_1001EE2A0();
    if (!a1[22]) {
      return 101LL;
    }
  }

  if (!a1[23])
  {
    sub_1001EE2A0();
    if (!a1[23]) {
      return 101LL;
    }
  }

  if (!a1[24])
  {
    sub_1001EE2A0();
    if (!a1[24]) {
      return 101LL;
    }
  }

  uint64_t v16 = qword_1008DFDB0;
  *(void *)(qword_1008DFDB0 + 24) = a1;
  *(_BYTE *)(v16 + 103) = a2;
  if (!a3)
  {
    uint64_t v18 = 0LL;
    goto LABEL_69;
  }

  int v17 = *(unsigned __int16 *)a3;
  if (*(_WORD *)a3)
  {
    uint64_t v18 = 0LL;
    __int128 v19 = a3[1];
    *(_OWORD *)(v16 + 3pthread_attr_setdetachstate(&v7, 2) = *a3;
    *(_OWORD *)(v16 + 48) = v19;
LABEL_69:
    int v17 = 1;
    goto LABEL_71;
  }

  uint64_t v18 = 101LL;
LABEL_71:
  if (a4)
  {
    if (!*(_WORD *)a4)
    {
      uint64_t v18 = 101LL;
LABEL_78:
      sub_1000D97A0();
      return v18;
    }

    __int128 v30 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)(v16 + 64) = *(_OWORD *)a4;
    *(_OWORD *)(v16 + 80) = v30;
  }

  if (!v17) {
    goto LABEL_78;
  }
  uint64_t v18 = sub_10017A6F0(25, (uint64_t)sub_1000D92C0);
  if ((_DWORD)v18) {
    goto LABEL_78;
  }
  return v18;
}

void sub_1000D92C0(uint64_t a1, int *a2, uint64_t a3)
{
  unsigned __int16 v89 = 0;
  uint64_t v5 = qword_1008DFDB0;
  ++*(_BYTE *)(qword_1008DFDB0 + 102);
  ++*(_BYTE *)(v5 + 101);
  if (sub_1000D8AB0((uint64_t)a2, &v89))
  {
    if (sub_1000DA6E0(a3, a2))
    {
      uint64_t v6 = sub_100175954(a3, (uint64_t)sub_1000E48A8);
      if ((_DWORD)v6)
      {
        uint64_t v7 = v6;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"AVDTP disconnect complete not registered with %!",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v7);
          uint64_t v15 = (os_log_s *)sub_100086554(3u);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"AVDTP_CONNECT_IND(addr=%:) cid %d", v16, v17, v18, v19, v20, v21, v22, (uint64_t)a2);
        uint64_t v23 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          unsigned int v24 = sub_1001EDDCC();
          *(_DWORD *)__int128 buf = 136446210;
          int v91 = v24;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      *(_WORD *)__int128 buf = 0;
      uint64_t v25 = sub_1000D8A50(a3, buf);
      if ((_DWORD)v25)
      {
        uint64_t v26 = v25;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"AVDTP did not find a2dp handle from CID with result %!",  v27,  v28,  v29,  v30,  v31,  v32,  v33,  v26);
          uint64_t v34 = (os_log_s *)sub_100086554(3u);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }
      }

      (**(void (***)(int *, void))(qword_1008DFDB0 + 24))(a2, *(unsigned __int16 *)buf);
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"AVDTP signaling channel allocation failed, rejecting",  v56,  v57,  v58,  v59,  v60,  v61,  v62,  v88);
        uint64_t v63 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      sub_100174B2C( (uint64_t)sub_1000DA9EC,  (uint64_t)sub_1000D9FA4,  (uint64_t)sub_1000DA244,  a3,  qword_1008DFDB0 + 32,  0,  (uint64_t)&unk_1008831A8);
    }

    return;
  }

  uint64_t v35 = *(unsigned __int8 *)(v5 + 97);
  if (*(_BYTE *)(v5 + 97))
  {
    uint64_t v36 = *(void *)(v5 + 8) + 128LL;
    while (1)
    {
      uint64_t v37 = *(unsigned __int8 *)(v36 + 7);
      if (v37 != 255
        && *(_BYTE *)(v36 + 6) == 2
        && *(unsigned __int16 *)(*(void *)(v5 + 16) + (v37 << 6) + 38) == v89)
      {
        break;
      }

      v36 += 144LL;
      if (!--v35) {
        goto LABEL_21;
      }
    }

    if (*(_WORD *)v36)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Invalid ConnectInd Received: (mediaCID != 0)", v64, v65, v66, v67, v68, v69, v70, v88);
        uint64_t v71 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR)) {
LABEL_40:
        }
          sub_100657858();
      }
    }

    else
    {
      *(_WORD *)uint64_t v36 = a3;
      sub_1000B90AC(a3);
      if (!sub_100174B2C( (uint64_t)sub_1000E3718,  (uint64_t)sub_1000E3928,  (uint64_t)sub_1000E3B30,  a3,  qword_1008DFDB0 + 64,  1,  (uint64_t)&unk_1008831A8))
      {
        sub_100171E24(a3, (uint64_t)sub_1000E4790);
        return;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_L2CAP_Accept failed! cid=%d error = %!",  v72,  v73,  v74,  v75,  v76,  v77,  v78,  a3);
        unsigned int v79 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v79, OS_LOG_TYPE_ERROR)) {
          goto LABEL_40;
        }
      }
    }

    sub_1001EE134( (uint64_t)"Unknown Connect Indication Received. cid=%d psm=%d addr=%:",  v80,  v81,  v82,  v83,  v84,  v85,  v86,  a3);
    unsigned __int16 v87 = (os_log_s *)sub_100086554(3u);
    if (!os_log_type_enabled(v87, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_27:
    sub_100657858();
    return;
  }

uint64_t sub_1000D97A0()
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  int v0 = (void **)qword_1008DFDB0;
  if (*(void *)(qword_1008DFDB0 + 16))
  {
    sub_1000B1838(*(void **)(qword_1008DFDB0 + 16));
    int v0 = (void **)qword_1008DFDB0;
    *(void *)(qword_1008DFDB0 + 16) = 0LL;
  }

  if (v0[1])
  {
    sub_1000B1838(v0[1]);
    int v0 = (void **)qword_1008DFDB0;
    *(void *)(qword_1008DFDB0 + 8) = 0LL;
  }

  if (*v0)
  {
    sub_1000B1838(*v0);
    int v0 = (void **)qword_1008DFDB0;
    *(void *)qword_1008DFDB0 = 0LL;
  }

  sub_1000B1838(v0);
  uint64_t result = 0LL;
  qword_1008DFDB0 = 0LL;
  dword_1008F6F14 = 0;
  return result;
}

uint64_t sub_1000D9830()
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_Deregister", v0, v1, v2, v3, v4, v5, v6, *(uint64_t *)v13);
    uint64_t v7 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v13 = 136446210;
      *(void *)&v13[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", v13, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  uint64_t v8 = *(unsigned __int8 *)(qword_1008DFDB0 + 96);
  if (*(_BYTE *)(qword_1008DFDB0 + 96))
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)qword_1008DFDB0 + 25LL);
    while (1)
    {
      int v10 = *v9;
      v9 += 40;
      if (v10) {
        return 145LL;
      }
      if (!--v8) {
        goto LABEL_9;
      }
    }
  }

  else
  {
LABEL_9:
    unsigned int v11 = sub_10017A8B8(25);
    LODWORD(result) = sub_1000D97A0();
    if (v11) {
      return v11;
    }
    else {
      return result;
    }
  }

uint64_t sub_1000D9948(unsigned int a1, char a2, uint64_t a3, int a4, char a5, _BYTE *a6)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"AVDTP_RegisterMultipoint(mediaType=%d,count=%d,endpointType=%d,caps=0x%x,numCaps=%d)",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  a1);
    uint64_t v19 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v35 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  if (a6 && a3 && a4)
  {
    uint64_t v20 = qword_1008DFDB0;
    int v21 = *(unsigned __int8 *)(qword_1008DFDB0 + 100);
    if (v21 == 63 || v21 == 0)
    {
      LOBYTE(v21) = 1;
      *(_BYTE *)(qword_1008DFDB0 + 100) = 1;
    }

    unsigned int v23 = 0;
    uint64_t v24 = *(unsigned __int8 *)(v20 + 96);
    uint64_t v25 = *(void *)v20 + 25LL;
    uint64_t v26 = *(void *)v20 + 30LL;
    uint64_t result = 104LL;
    while (!(_DWORD)v24)
    {
LABEL_24:
      LOBYTE(v21) = v21 + 1;
      *(_BYTE *)(v20 + 100) = v21;
      if (v23++ >= 0xFE) {
        return result;
      }
    }

    uint64_t v28 = 0LL;
    uint64_t v29 = (unsigned __int8 *)v25;
    while (1)
    {
      int v30 = *v29;
      v29 += 40;
      if (v24 == ++v28) {
        goto LABEL_21;
      }
    }

    if (v28 != 255) {
      goto LABEL_24;
    }
LABEL_21:
    unsigned int v31 = 0;
    uint64_t v32 = (_BYTE *)v26;
    while (*(v32 - 5))
    {
      ++v31;
      v32 += 40;
    }

    if (*(void *)(v32 - 22)) {
      sub_1001EE2A0();
    }
    if (*(void *)(v32 - 14)) {
      sub_1001EE2A0();
    }
    uint64_t result = 0LL;
    *(v32 - 5) = v21;
    *(_DWORD *)(v32 - pthread_attr_setdetachstate(&v7, 2) = 0;
    v32[2] = 0;
    *(v32 - 6) = -1;
    *(v32 - 4) = a1;
    *(v32 - 3) = a2;
    *(void *)(v32 - 30) = a3;
    *uint64_t v32 = a4;
    *(v32 - pthread_attr_setdetachstate(&v7, 2) = a5;
    *a6 = *(_BYTE *)(qword_1008DFDB0 + 100);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

  return result;
}

uint64_t sub_1000D9B78(unsigned int a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_DeregisterEndpoint(seid=%d)", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v14 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  if (!*(_BYTE *)(qword_1008DFDB0 + 96)) {
    return 120LL;
  }
  uint64_t v10 = 0LL;
  for (uint64_t i = *(void *)qword_1008DFDB0; *(unsigned __int8 *)(i + 25) != a1; i += 40LL)
  {
  }

  if (v10 == 255) {
    return 120LL;
  }
  sub_1000D9CB4(i);
  sub_1000D9CB4(i);
  uint64_t result = 0LL;
  *(_BYTE *)(i + 25) = 0;
  return result;
}

void sub_1000D9CB4(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"ResetEndpoint %lx", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      unsigned int v11 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  *(_BYTE *)(a1 + 29) = 0;
  sub_1000D88A0((void **)(a1 + 8), *(unsigned __int8 *)(a1 + 31));
  *(_BYTE *)(a1 + 31) = 0;
  sub_1000D88A0((void **)(a1 + 16), *(unsigned __int8 *)(a1 + 32));
  *(_BYTE *)(a1 + 3pthread_attr_setdetachstate(&v7, 2) = 0;
  *(_BYTE *)(a1 + 24) = -1;
}

uint64_t sub_1000D9DA0(void *a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  int v4 = (int)a1;
  uint64_t v5 = qword_1008DFDB0;
  ++*(_BYTE *)(qword_1008DFDB0 + 102);
  if (!dword_1008F6F14)
  {
    uint64_t v7 = 408LL;
    goto LABEL_8;
  }

  uint64_t v6 = *(unsigned __int8 *)(v5 + 98);
  if (!*(_BYTE *)(v5 + 98))
  {
LABEL_6:
    uint64_t v7 = 120LL;
LABEL_8:
    sub_1000DAC50(a1);
    __int16 v33 = 0;
    int v32 = 0;
    goto LABEL_9;
  }

  uint64_t v7 = a4;
  uint64_t v9 = *(void *)(v5 + 16) + 28LL;
  while (*(unsigned __int16 *)(v9 + 10) != (_DWORD)a1)
  {
    v9 += 64LL;
    if (!--v6) {
      goto LABEL_6;
    }
  }

  int v30 = *(_DWORD *)v9;
  __int16 v33 = *(_WORD *)(v9 + 4);
  int v32 = v30;
  if ((_DWORD)a4)
  {
    sub_1000DAC50(a1);
  }

  else
  {
    uint64_t v31 = sub_1000D8DAC((int)a1);
    if (!v31) {
      sub_1001EE2A0();
    }
    uint64_t v7 = 0LL;
    *(_WORD *)(v31 + 34) = a3;
  }

void sub_1000D9FA4(void *a1, uint64_t a2)
{
  if (dword_1008F6F14)
  {
    uint64_t v4 = *(void *)(qword_1008DFDB0 + 8);
    __int16 v37 = 0;
    int v36 = 0;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Signaling channel disconnected (CID %d) %!",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  a1);
      uint64_t v12 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v39 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    uint64_t v13 = sub_1000D8DAC((int)a1);
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = qword_1008DFDB0;
      int v16 = *(unsigned __int8 *)(qword_1008DFDB0 + 97);
      if (*(_BYTE *)(qword_1008DFDB0 + 97))
      {
        do
        {
          if (*(void *)(v15 + 16) + ((unint64_t)*(unsigned __int8 *)(v4 + 135) << 6) == v14)
          {
            if (*(_WORD *)(v4 + 128))
            {
              if (!sub_1001759FC(*(unsigned __int16 *)(v4 + 128), 436LL))
              {
                sub_1000DD6D8(v4, 7);
                return;
              }

              if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"L2CAP_Disconnect: (CID %d) %!",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  *(unsigned __int16 *)(v4 + 128));
                uint64_t v24 = (os_log_s *)sub_100086554(3u);
                if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v25 = sub_1001EDDCC();
                  *(_DWORD *)__int128 buf = 136446210;
                  uint64_t v39 = v25;
                  _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }

              sub_1000E3928(*(unsigned __int16 *)(v4 + 128), a2);
            }

            sub_1000DC6BC(v4);
            uint64_t v15 = qword_1008DFDB0;
          }

          v4 += 144LL;
          --v16;
        }

        while (v16);
      }

      int v36 = *(_DWORD *)(v14 + 28);
      __int16 v37 = *(_WORD *)(v14 + 32);
    }

    *(_WORD *)__int128 buf = 0;
    uint64_t v26 = sub_1000D8A50((int)a1, buf);
    if ((_DWORD)v26)
    {
      uint64_t v27 = v26;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Signaling disconnect error %!", v28, v29, v30, v31, v32, v33, v34, v27);
        uint64_t v35 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    else
    {
      sub_1000DAC50(a1);
      (*(void (**)(int *, void, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 16LL))( &v36,  *(unsigned __int16 *)buf,  a2);
    }
  }

void sub_1000DA244(unsigned int a1, unsigned __int8 *a2, unsigned int a3)
{
  if (a2)
  {
    if (a3) {
      goto LABEL_3;
    }
LABEL_11:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Invalid packet length!", v17, v18, v19, v20, v21, v22, v23, v106);
      uint64_t v24 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        goto LABEL_13;
      }
    }

    return;
  }

  sub_1001EE2A0();
  if (!a3) {
    goto LABEL_11;
  }
LABEL_3:
  int v6 = *a2 & 0xC;
  if ((*a2 & 0xC) == 0)
  {
    sub_1000DE8D0(a1, a2, a3);
    return;
  }

  uint64_t v7 = sub_1000D8DAC(a1);
  if (v7)
  {
    uint64_t v8 = v7;
    if (v6 == 4)
    {
      if (a3 <= 2)
      {
        sub_1001EE134((uint64_t)"Invalid packet length!", v9, v10, v11, v12, v13, v14, v15, v106);
        int v16 = (os_log_s *)sub_100086554(3u);
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          goto LABEL_54;
        }
        goto LABEL_48;
      }

      if (*(void *)(v7 + 16))
      {
        sub_1001EE134( (uint64_t)"Unexpected START fragment! - discarding previous packet",  v46,  v47,  v48,  v49,  v50,  v51,  v52,  v106);
        uint64_t v53 = (os_log_s *)sub_100086554(3u);
        if (!os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
          goto LABEL_54;
        }
        goto LABEL_48;
      }

      int v70 = a2[1];
      if (a2[1])
      {
        *(_BYTE *)(v7 + 4pthread_attr_setdetachstate(&v7, 2) = v70;
        unsigned int v71 = a3 - 1;
        uint64_t v72 = sub_1000B1814((a3 - 1) * v70);
        *(void *)(v8 + 16) = v72;
        *(_DWORD *)(v8 + 48) = (a3 - 1) * *(unsigned __int8 *)(v8 + 42);
        *(_WORD *)(v8 + 36) = 0;
        *(_WORD *)(v8 + 56) = a3 - 1;
        if (v72)
        {
          *(_BYTE *)(v8 + 43) = *a2 & 0xF0;
          *uint64_t v72 = *a2;
          *(_BYTE *)(*(void *)(v8 + 16) + 1LL) = a2[2];
          memmove((void *)(*(void *)(v8 + 16) + 2LL), a2 + 3, a3 - 3);
          *(_DWORD *)(v8 + 48) -= v71;
          *(_WORD *)(v8 + 36) += v71;
          --*(_BYTE *)(v8 + 42);
          return;
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Could not allocate reassembly buffer!", v97, v98, v99, v100, v101, v102, v103, v106);
          signed int v104 = (os_log_s *)sub_100086554(3u);
          if (os_log_type_enabled(v104, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        sub_1000E50DC(a1, a2[2], *a2 >> 4, 129);
        goto LABEL_54;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Invalid number of packets (0)!", v89, v90, v91, v92, v93, v94, v95, v106);
        uint64_t v96 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v96, OS_LOG_TYPE_ERROR)) {
LABEL_48:
        }
          sub_100657858();
      }
    }

    else
    {
      uint64_t v33 = *(void *)(v7 + 16);
      if (!v33)
      {
        sub_1001EE134((uint64_t)"Unexpected packet fragment!", v54, v55, v56, v57, v58, v59, v60, v106);
        uint64_t v61 = (os_log_s *)sub_100086554(3u);
        if (!os_log_type_enabled(v61, OS_LOG_TYPE_ERROR)) {
          goto LABEL_54;
        }
        goto LABEL_48;
      }

      if ((*a2 & 0xF0) != *(unsigned __int8 *)(v7 + 43))
      {
        sub_1001EE134((uint64_t)"Invalid transaction number in fragment", v62, v63, v64, v65, v66, v67, v68, v106);
        uint64_t v69 = (os_log_s *)sub_100086554(3u);
        if (!os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
          goto LABEL_54;
        }
        goto LABEL_48;
      }

      size_t v34 = a3 - 1;
      int v35 = *(_DWORD *)(v7 + 48) - v34;
      *(_DWORD *)(v7 + 48) = v35;
      if (v35 < 0)
      {
        sub_1001EE134((uint64_t)"Buffer overflow !", v73, v74, v75, v76, v77, v78, v79, v106);
        uint64_t v80 = (os_log_s *)sub_100086554(3u);
        if (!os_log_type_enabled(v80, OS_LOG_TYPE_ERROR)) {
          goto LABEL_54;
        }
        goto LABEL_48;
      }

      memmove((void *)(v33 + *(unsigned __int16 *)(v7 + 36)), a2 + 1, v34);
      unsigned __int16 v36 = *(_WORD *)(v8 + 36) + v34;
      *(_WORD *)(v8 + 36) = v36;
      char v37 = *(_BYTE *)(v8 + 42) - 1;
      *(_BYTE *)(v8 + 4pthread_attr_setdetachstate(&v7, 2) = v37;
      if (v6 != 12)
      {
        sub_1001EE134((uint64_t)"CONTINUE fragment has invalid packet length", v81, v82, v83, v84, v85, v86, v87, v106);
        uint64_t v88 = (os_log_s *)sub_100086554(3u);
        if (!os_log_type_enabled(v88, OS_LOG_TYPE_ERROR)) {
          goto LABEL_54;
        }
        goto LABEL_48;
      }

      if (v37)
      {
        sub_1001EE134( (uint64_t)"Incorrect number of packet fragments - dropping packet!",  v38,  v39,  v40,  v41,  v42,  v43,  v44,  v106);
        uint64_t v45 = (os_log_s *)sub_100086554(3u);
        if (!os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
          goto LABEL_54;
        }
        goto LABEL_48;
      }

      sub_1000DE8D0(a1, *(unsigned __int8 **)(v8 + 16), v36);
    }

uint64_t sub_1000DA6E0(__int16 a1, int *a2)
{
  if (!*(_BYTE *)(qword_1008DFDB0 + 98)) {
    return 0LL;
  }
  uint64_t v3 = 0LL;
  for (uint64_t result = *(void *)(qword_1008DFDB0 + 16); *(_WORD *)(result + 38); result += 64LL)
  {
  }

  *(_WORD *)uint64_t result = v3 + 1;
  int v5 = *a2;
  *(_WORD *)(result + 3pthread_attr_setdetachstate(&v7, 2) = *((_WORD *)a2 + 2);
  *(_DWORD *)(result + 28) = v5;
  *(_WORD *)(result + 38) = a1;
  *(_BYTE *)(result + 44) = -1;
  *(_DWORD *)(result + 5pthread_attr_setdetachstate(&v7, 2) = -1;
  return result;
}

uint64_t sub_1000DA74C(int *a1)
{
  __int16 v11 = 0;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_Connect(addr=%:)", v2, v3, v4, v5, v6, v7, v8, (uint64_t)a1);
    uint64_t v9 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v13 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  uint64_t result = sub_100174028( (uint64_t)sub_1000D9DA0,  (uint64_t)sub_1000D9FA4,  (uint64_t)sub_1000DA244,  25,  (uint64_t)a1,  qword_1008DFDB0 + 32,  &v11,  (uint64_t)&unk_1008831A8);
  if (!(_DWORD)result)
  {
    ++*(_BYTE *)(qword_1008DFDB0 + 101);
    sub_1000DA6E0(v11, a1);
    return 0LL;
  }

  return result;
}

uint64_t sub_1000DA8A0(unsigned int a1, int a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_Accept(a2dpHandle=%d,accept=%B)", v4, v5, v6, v7, v8, v9, v10, a1);
    __int16 v11 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      int v16 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  *(_WORD *)__int128 buf = 0;
  uint64_t v13 = (void *)*(unsigned __int16 *)buf;
  uint64_t v12 = sub_100174B2C( (uint64_t)sub_1000DA9EC,  (uint64_t)sub_1000D9FA4,  (uint64_t)sub_1000DA244,  *(unsigned __int16 *)buf,  qword_1008DFDB0 + 32,  a2,  (uint64_t)&unk_1008831A8);
  if (!(_DWORD)v12 && (a2 & 1) != 0) {
    return 0LL;
  }
  sub_1000DAC50(v13);
  return v12;
}

void *sub_1000DA9EC(void *a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v7 = qword_1008DFDB0;
  ++*(_BYTE *)(qword_1008DFDB0 + 102);
  ++*(_BYTE *)(v7 + 101);
  uint64_t v8 = sub_1000D8DAC((int)a1);
  if (!v8) {
    sub_1001EE2A0();
  }
  __int16 v40 = 0;
  int v39 = 0;
  *(_WORD *)(v8 + 34) = a3;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"ConnectCfmAcp: %!", v9, v10, v11, v12, v13, v14, v15, a4);
    int v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v42 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return sub_1000DAC50(a1);
  }
  uint64_t v17 = *(unsigned __int8 *)(qword_1008DFDB0 + 98);
  if (!*(_BYTE *)(qword_1008DFDB0 + 98)) {
    return sub_1000DAC50(a1);
  }
  for (uint64_t i = *(void *)(qword_1008DFDB0 + 16) + 28LL; *(unsigned __int16 *)(i + 10) != (_DWORD)a1; i += 64LL)
  {
    if (!--v17) {
      return sub_1000DAC50(a1);
    }
  }

  int v20 = *(_DWORD *)i;
  __int16 v40 = *(_WORD *)(i + 4);
  int v39 = v20;
  if ((_DWORD)a4) {
    sub_1000DAC50(a1);
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_CONNECT_CFM(addr=%:,result=%!)", v21, v22, v23, v24, v25, v26, v27, (uint64_t)&v39);
    uint64_t v28 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v29 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v42 = v29;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  *(_WORD *)__int128 buf = 0;
  uint64_t v30 = sub_1000D8A50((int)a1, buf);
  if ((_DWORD)v30 && sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"AVDTP did not find a2dp handle from CID with result %!",  v31,  v32,  v33,  v34,  v35,  v36,  v37,  v30);
    uint64_t v38 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  return (void *)(*(uint64_t (**)(int *, void, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 8LL))( &v39,  *(unsigned __int16 *)buf,  v30);
}

void *sub_1000DAC50(void *result)
{
  if (dword_1008F6F14)
  {
    uint64_t result = (void *)sub_1000D8DAC((int)result);
    if (result)
    {
      uint64_t v1 = result;
      uint64_t result = (void *)result[1];
      if (result)
      {
        do
        {
          uint64_t v2 = (void *)result[1];
          sub_1001EF69C(result);
          uint64_t result = v2;
        }

        while (v2);
      }

      v1[1] = 0LL;
      *((_BYTE *)v1 + 40) = 0;
      *((_WORD *)v1 + 19) = 0;
    }
  }

  return result;
}

uint64_t sub_1000DACA8(unsigned int a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_Disconnect(a2dpHandle=%d)", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v12 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  *(_WORD *)__int128 buf = 0;
  else {
    return sub_1001759FC(*(unsigned __int16 *)buf, 436LL);
  }
}

uint64_t sub_1000DAD94(unsigned int a1, _BYTE *a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_Discover(a2dpHandle=%d)", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      int v39 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  unsigned __int16 v37 = 0;
  uint64_t v12 = sub_1000D8B9C(a1, &v37);
  if ((_DWORD)v12)
  {
    uint64_t v13 = v12;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"AVDT_Discover_Req\n\tTransaction=%d\n\tRSP=0x.4x\n",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  v13);
      uint64_t v21 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v22 = sub_1001EDDCC();
        *(_DWORD *)__int128 buf = 136446210;
        int v39 = v22;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }

  else
  {
    unsigned int v23 = v37;
    uint64_t v24 = sub_1000D8DAC(v37);
    unsigned int v25 = sub_1000DAFAC(v24);
    unsigned int v26 = v25;
    if (a2) {
      *a2 = v25;
    }
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"AVDT_Discover_Req\n\tTransaction=%d\n\tRSP=0x0000\n",  v27,  v28,  v29,  v30,  v31,  v32,  v33,  v26);
      uint64_t v34 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v35 = sub_1001EDDCC();
        *(_DWORD *)__int128 buf = 136446210;
        int v39 = v35;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    return sub_1000E54C8(v23, v26);
  }

  return v13;
}

uint64_t sub_1000DAFAC(uint64_t a1)
{
  if (a1)
  {
    char v1 = *(_BYTE *)(a1 + 46) + 1;
    *(_BYTE *)(a1 + 46) = v1;
    return v1 & 0xF;
  }

  else
  {
    uint64_t result = sub_1000A86F0();
    if ((_DWORD)result)
    {
      sub_1001EE134((uint64_t)"Signal was NULL", v3, v4, v5, v6, v7, v8, v9, v11);
      uint64_t v10 = (os_log_s *)sub_100086554(3u);
      uint64_t result = os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);
      if ((_DWORD)result)
      {
        sub_100657858();
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_1000DB020(unsigned int a1, unsigned int a2, _BYTE *a3)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_GetCap(a2dp handle=%d,seid=%d)", v6, v7, v8, v9, v10, v11, v12, a1);
    uint64_t v13 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v19 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  *(_WORD *)__int128 buf = 0;
  uint64_t result = sub_1000D8B9C(a1, buf);
  if (!(_DWORD)result)
  {
    unsigned int v15 = *(unsigned __int16 *)buf;
    uint64_t v16 = sub_1000D8DAC(*(unsigned __int16 *)buf);
    unsigned int v17 = sub_1000DAFAC(v16);
    if (a3) {
      *a3 = v17;
    }
    *(_BYTE *)(qword_1008DFDB0 + 99) = a2;
    return sub_1000E4E80(v15, 2u, v17, a2);
  }

  return result;
}

uint64_t sub_1000DB15C(unsigned int a1, unsigned int a2, _BYTE *a3)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_GetAllCaps(a2dpHandle=%d:,seid=%d)", v6, v7, v8, v9, v10, v11, v12, a1);
    uint64_t v13 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v30 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  unsigned __int16 v28 = 0;
  uint64_t v14 = sub_1000D8B9C(a1, &v28);
  if (!(_DWORD)v14)
  {
    unsigned int v15 = v28;
    uint64_t v16 = sub_1000D8DAC(v28);
    unsigned int v17 = sub_1000DAFAC(v16);
    if (a3) {
      *a3 = v17;
    }
    *(_BYTE *)(qword_1008DFDB0 + 99) = a2;
    uint64_t v14 = sub_1000E4E80(v15, 0xCu, v17, a2);
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_GetAllCaps returning %d", v18, v19, v20, v21, v22, v23, v24, v14);
    unsigned int v25 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v26 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v30 = v26;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  return v14;
}

uint64_t sub_1000DB314(unsigned int a1, char a2, int a3, uint64_t a4, unsigned int a5, _BYTE *a6, _WORD *a7)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"AVDTP_SetConfig(a2dpHandle=%d,remoteSEID=%d,localSEID=%d,caps=0x%x,numCaps=%d)",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  a1);
    uint64_t v21 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v54 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  unsigned __int16 v52 = 0;
  uint64_t v22 = sub_1000D8B9C(a1, &v52);
  if (!(_DWORD)v22)
  {
    if (!*(_BYTE *)(qword_1008DFDB0 + 96)) {
      return 120LL;
    }
    uint64_t v23 = 0LL;
    uint64_t v24 = *(void *)qword_1008DFDB0;
    uint64_t v25 = 255LL;
    while (*(unsigned __int8 *)(v24 + v23 + 25) != a3)
    {
      v23 += 40LL;
      --v25;
    }

    if (v25)
    {
      if (*(void *)(v24 + v23 + 16) && (sub_1001EE2A0(), *(void *)(v24 + v23 + 16)))
      {
        return 118LL;
      }

      else
      {
        uint64_t v51 = (void **)(v24 + v23 + 16);
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"In SetConfig, allocating endpoint", v27, v28, v29, v30, v31, v32, v33, v50);
          uint64_t v34 = (os_log_s *)sub_100086554(3u);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v35 = sub_1001EDDCC();
            *(_DWORD *)__int128 buf = 136446210;
            uint64_t v54 = v35;
            _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        uint64_t v36 = sub_1000DB674(a2);
        if (v36)
        {
          unsigned int v37 = v52;
          uint64_t v38 = qword_1008DFDB0;
          if (qword_1008DFDB0)
          {
            uint64_t v39 = v36;
            if (*(_BYTE *)(qword_1008DFDB0 + 98))
            {
              uint64_t v40 = 0LL;
              uint64_t v41 = (unsigned __int16 *)(*(void *)(qword_1008DFDB0 + 16) + 38LL);
              while (1)
              {
                int v42 = *v41;
                v41 += 32;
                if (v42 == v52) {
                  break;
                }
              }
            }

            else
            {
LABEL_27:
              LOBYTE(v40) = -1;
            }
          }

          else
          {
            LOBYTE(v40) = -1;
            uint64_t v39 = v36;
          }

          *(_BYTE *)(v39 + 135) = v40;
          uint64_t v43 = *(unsigned __int8 *)(v38 + 96);
          if (*(_BYTE *)(v38 + 96))
          {
            uint64_t v44 = 0LL;
            uint64_t v45 = (unsigned __int8 *)(*(void *)v38 + 25LL);
            while (1)
            {
              int v46 = *v45;
              v45 += 40;
              if (v46 == a3) {
                break;
              }
              if (v43 == ++v44) {
                goto LABEL_34;
              }
            }
          }

          else
          {
LABEL_34:
            LOBYTE(v44) = -1;
          }

          *(_BYTE *)(v39 + 136) = v44;
          *a7 = sub_1000DB7D8(v39);
          uint64_t v47 = sub_1000D8DAC(v37);
          unsigned int v48 = sub_1000DAFAC(v47);
          unsigned int v49 = v48;
          if (a6) {
            *a6 = v48;
          }
          uint64_t v22 = sub_1000D8934(a4, a5, v51, (_BYTE *)(v24 + v23 + 32));
          if ((_DWORD)v22 || (uint64_t v22 = sub_1000E6200(v37, v49, a2, a3, (unsigned __int8 *)*v51, a5), (_DWORD)v22))
          {
            sub_1000D88A0(v51, a5);
            *(_BYTE *)(v39 + 13pthread_attr_setdetachstate(&v7, 2) = 0;
            *(_DWORD *)uint64_t v39 = 0;
            *(_WORD *)(v39 + 128) = 0;
            sub_1000B90AC(0LL);
            *(_DWORD *)(v39 + 134) = -256;
            LOBYTE(v49) = -1;
          }

          *(_BYTE *)(v39 + 133) = v49;
        }

        else
        {
          return 2902LL;
        }
      }
    }

    else
    {
      return 120LL;
    }
  }

  return v22;
}

uint64_t sub_1000DB674(char a1)
{
  if (*(_BYTE *)(qword_1008DFDB0 + 97))
  {
    uint64_t v2 = 0LL;
    uint64_t v3 = *(void *)(qword_1008DFDB0 + 8);
    while (*(_BYTE *)(v3 + 132))
    {
      uint64_t v2 = (v2 + 1);
      v3 += 144LL;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Allocating endpoint at index: %d for seid: %d", v12, v13, v14, v15, v16, v17, v18, v2);
      uint64_t v19 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v23 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    *(_BYTE *)(v3 + 13pthread_attr_setdetachstate(&v7, 2) = a1;
    *(_WORD *)(v3 + 128) = 0;
    *(_DWORD *)uint64_t v3 = 0;
    *(_BYTE *)(v3 + 137) = -1;
    *(_DWORD *)(v3 + 133) = -65281;
  }

  else
  {
LABEL_5:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Did not allocate endpoint", v4, v5, v6, v7, v8, v9, v10, v21);
      uint64_t v11 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 0LL;
  }

  return v3;
}

uint64_t sub_1000DB7D8(uint64_t a1)
{
  if (*(_BYTE *)(qword_1008DFDB0 + 97))
  {
    uint64_t v2 = 0LL;
    uint64_t v3 = *(void *)(qword_1008DFDB0 + 8) - 144LL;
    while (1)
    {
      v3 += 144LL;
      if (v3 == a1) {
        break;
      }
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"In GetHandleFromRemote, found handle for seid: %d, returning %d",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  *(unsigned __int8 *)(a1 + 132));
      uint64_t v20 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v24 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    return (unsigned __int16)(v2 + 1);
  }

  else
  {
LABEL_5:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"In GetHandleFromRemote, couldn't find handle", v4, v5, v6, v7, v8, v9, v10, v22);
      uint64_t v11 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 0;
  }

uint64_t sub_1000DB924(unsigned int a1, _BYTE *a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_Open(handle=%d)", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v28 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  uint64_t v12 = *(void *)(qword_1008DFDB0 + 8);
  if (!v12) {
    return 120LL;
  }
  unsigned int v13 = (unsigned __int16)(a1 - 1);
  if (!*(_BYTE *)(v12 + 144LL * (unsigned __int16)(a1 - 1) + 134))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"AVDTP_Open called on handle %d when it's in idle state. Aborting.",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  a1);
      uint64_t v24 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 408LL;
  }

  uint64_t v14 = *(unsigned __int8 *)(v12 + 144LL * (unsigned __int16)(a1 - 1) + 135);
  if (v14 == 255) {
    uint64_t v15 = 0LL;
  }
  else {
    uint64_t v15 = *(void *)(qword_1008DFDB0 + 16) + (v14 << 6);
  }
  unsigned int v25 = sub_1000DAFAC(v15);
  char v26 = v25;
  if (a2) {
    *a2 = v25;
  }
  uint64_t result = sub_1000E4E80(*(unsigned __int16 *)(v15 + 38), 6u, v25, *(unsigned __int8 *)(v12 + 144LL * v13 + 132));
  if (!(_DWORD)result) {
    *(_BYTE *)(v12 + 144LL * v13 + 133) = v26;
  }
  return result;
}

uint64_t sub_1000DBAFC(unsigned int a1, __int16 a2, int a3)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_OpenRsp(transaction=%d,handle=%d,error=%d)", v6, v7, v8, v9, v10, v11, v12, a1);
    unsigned int v13 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v19 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  if (*(unsigned __int8 *)(qword_1008DFDB0 + 97) > (unsigned __int16)(a2 - 1))
  {
    uint64_t v14 = *(void *)(qword_1008DFDB0 + 8);
    if (v14)
    {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 144LL * (unsigned __int16)(a2 - 1) + 135);
      if (v15 != 255)
      {
        uint64_t v16 = *(void *)(qword_1008DFDB0 + 16);
        if (v16) {
          return sub_1000E50DC(*(unsigned __int16 *)(v16 + (v15 << 6) + 38), 6u, a1, a3);
        }
      }
    }
  }

  return 120LL;
}

uint64_t sub_1000DBC54(_WORD *a1, unsigned int a2, _BYTE *a3)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_Start(handles=0x%x,num=%x)", v6, v7, v8, v9, v10, v11, v12, (uint64_t)a1);
    unsigned int v13 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v40 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (dword_1008F6F14)
  {
    uint64_t v14 = sub_1000B17F4(a2);
    if (!v14) {
      return 106LL;
    }
    uint64_t v15 = v14;
    if (*(unsigned __int8 *)(qword_1008DFDB0 + 97) > (unsigned __int16)(*a1 - 1))
    {
      uint64_t v16 = *(void *)(qword_1008DFDB0 + 8);
      if (v16)
      {
        uint64_t v17 = *(unsigned __int8 *)(v16 + 144LL * (unsigned __int16)(*a1 - 1) + 135);
        if (v17 != 255)
        {
          uint64_t v18 = *(void *)(qword_1008DFDB0 + 16);
          if (v18)
          {
            uint64_t v19 = v18 + (v17 << 6);
            unsigned int v37 = *(unsigned __int16 *)(v19 + 38);
            uint64_t v38 = v19;
            unsigned int v20 = sub_1000DAFAC(v19);
            unsigned int v21 = v20;
            if (a3) {
              *a3 = v20;
            }
            if (!a2)
            {
LABEL_27:
              uint64_t v35 = sub_1000E5348(v37, 7u, v21, (uint64_t)v15, a2);
LABEL_30:
              sub_1000B1838(v15);
              return v35;
            }

            unsigned __int8 v22 = 0;
            uint64_t v23 = qword_1008DFDB0;
            while (1)
            {
              uint64_t v24 = v22;
              unsigned __int16 v25 = a1[v22] - 1;
              uint64_t v26 = *(void *)(v23 + 8);
              if (!v26) {
                break;
              }
              unsigned int v27 = v25;
              if (*(_BYTE *)(v26 + 144LL * v25 + 134) != 3)
              {
                uint64_t v35 = 408LL;
                goto LABEL_30;
              }

              uint64_t v28 = v26 + 144LL * v25;
              int v31 = *(unsigned __int8 *)(v28 + 132);
              uint64_t v30 = (char *)(v28 + 132);
              char v29 = v31;
              if (!v31)
              {
                sub_1001EE2A0();
                uint64_t v23 = qword_1008DFDB0;
                char v29 = *v30;
              }

              *((_BYTE *)v15 + v24) = v29;
              *(_BYTE *)(v26 + 144LL * v27 + 133) = v21;
              if ((_DWORD)v24)
              {
                if (*(unsigned __int8 *)(v23 + 97) <= (unsigned __int16)(a1[v24] - 1)
                  || (uint64_t v32 = *(void *)(v23 + 8)) == 0
                  || (uint64_t v33 = *(unsigned __int8 *)(v32 + 144LL * (unsigned __int16)(a1[v24] - 1) + 135), v33 == 255))
                {
                  uint64_t v34 = 0LL;
                }

                else
                {
                  uint64_t v34 = *(void *)(v23 + 16) + (v33 << 6);
                }

                if (v34 != v38)
                {
                  uint64_t v35 = 101LL;
                  goto LABEL_30;
                }
              }

              unsigned __int8 v22 = v24 + 1;
            }
          }
        }
      }
    }

    uint64_t v35 = 120LL;
    goto LABEL_30;
  }

  return 408LL;
}

uint64_t sub_1000DBED8(unsigned int a1, __int16 *a2, unsigned int a3, __int16 a4, int a5)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"AVDTP_StartRsp(transaction=%d,handles=0x%x,numHandles=%d,errorHandle=%d,error=%d)",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  a1);
    uint64_t v17 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v30 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  unsigned int v18 = *(unsigned __int8 *)(qword_1008DFDB0 + 97);
  uint64_t v19 = *(void *)(qword_1008DFDB0 + 8);
  if (!v19) {
    return 120LL;
  }
  uint64_t v20 = *(unsigned __int8 *)(v19 + 144LL * (unsigned __int16)(*a2 - 1) + 135);
  if (v20 == 255) {
    return 120LL;
  }
  uint64_t v21 = *(void *)(qword_1008DFDB0 + 16);
  if (!v21) {
    return 120LL;
  }
  if (a5)
  {
    if (v18 > (unsigned __int16)(a4 - 1))
    {
      uint64_t v22 = *(unsigned __int8 *)(v19 + 144LL * (unsigned __int16)(a4 - 1) + 136);
      if (v22 != 255)
      {
        if (*(void *)qword_1008DFDB0)
        {
          char v23 = *(_BYTE *)(*(void *)qword_1008DFDB0 + 40LL * v22 + 25);
          return sub_1000DC0F4(*(unsigned __int16 *)(v21 + (v20 << 6) + 38), a1, a2, a3, v23, a5);
        }
      }
    }

uint64_t sub_1000DC0F4(unsigned int a1, unsigned int a2, __int16 *a3, unsigned int a4, char a5, int a6)
{
  uint64_t v9 = sub_1000E541C(a1, 7u, a2, a5, a6);
  uint64_t v10 = v9;
  if (!a6 && !(_DWORD)v9) {
    sub_1000E4A78(a3, a4, 4);
  }
  return v10;
}

uint64_t sub_1000DC154(unsigned int a1, _BYTE *a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_Close(handle=%d)", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v21 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  uint64_t v12 = *(void *)(qword_1008DFDB0 + 8);
  if (!v12) {
    return 120LL;
  }
  unsigned int v13 = (unsigned __int16)(a1 - 1);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 144LL * (unsigned __int16)(a1 - 1) + 135);
  if (v14 == 255) {
    return 408LL;
  }
  uint64_t v15 = *(void *)(qword_1008DFDB0 + 16);
  if (!v15) {
    return 408LL;
  }
  uint64_t v16 = v15 + (v14 << 6);
  char v17 = *(_BYTE *)(v16 + 46) + 1;
  *(_BYTE *)(v16 + 46) = v17;
  char v18 = v17 & 0xF;
  if (a2) {
    *a2 = v18;
  }
  uint64_t result = sub_1000E4E80(*(unsigned __int16 *)(v16 + 38), 8u, v17 & 0xF, *(unsigned __int8 *)(v12 + 144LL * v13 + 132));
  if (!(_DWORD)result) {
    *(_BYTE *)(v12 + 144LL * v13 + 133) = v18;
  }
  return result;
}

uint64_t sub_1000DC2E4(unsigned int a1, __int16 a2, int a3)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_CloseRsp(transaction=%d,handle=%d)", v6, v7, v8, v9, v10, v11, v12, a1);
    unsigned int v13 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v19 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  if (*(unsigned __int8 *)(qword_1008DFDB0 + 97) > (unsigned __int16)(a2 - 1))
  {
    uint64_t v14 = *(void *)(qword_1008DFDB0 + 8);
    if (v14)
    {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 144LL * (unsigned __int16)(a2 - 1) + 135);
      if (v15 != 255)
      {
        uint64_t v16 = *(void *)(qword_1008DFDB0 + 16);
        if (v16) {
          return sub_1000E50DC(*(unsigned __int16 *)(v16 + (v15 << 6) + 38), 8u, a1, a3);
        }
      }
    }
  }

  return 120LL;
}

uint64_t sub_1000DC434(unsigned int a1, __int16 a2)
{
  uint64_t v40 = 0LL;
  uint64_t v41 = 0LL;
  uint64_t v38 = 0LL;
  uint64_t v39 = 0LL;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_AbortRsp(transaction=%d,handle=%d)", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v43 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  uint64_t v12 = *(void *)(qword_1008DFDB0 + 8);
  if (!v12) {
    return 120LL;
  }
  unsigned int v13 = (unsigned __int16)(a2 - 1);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 144LL * (unsigned __int16)(a2 - 1) + 135);
  if (v14 == 255) {
    return 120LL;
  }
  uint64_t v15 = *(void *)(qword_1008DFDB0 + 16);
  if (!v15) {
    return 120LL;
  }
  uint64_t result = sub_1000E50DC(*(unsigned __int16 *)(v15 + (v14 << 6) + 38), 0xAu, a1, 0);
  if (!(_DWORD)result)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"AVDT_Abort_Rsp\n\tTransaction=%d\n\tErrorCode=0x%.2x\n\tStreamHandles=%d\n",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  a1);
      uint64_t v24 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v25 = sub_1001EDDCC();
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v43 = v25;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    uint64_t v26 = v12 + 144LL * v13;
    unsigned int v28 = *(unsigned __int16 *)(v26 + 128);
    __int16 v27 = (_WORD *)(v26 + 128);
    uint64_t result = sub_1001759FC(v28, 436LL);
    if ((_DWORD)result)
    {
      if (*v27)
      {
        uint64_t v29 = result;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Error disconnecting media transport - %!", v30, v31, v32, v33, v34, v35, v36, v29);
          unsigned int v37 = (os_log_s *)sub_100086554(3u);
          if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        *__int16 v27 = 0;
        sub_1000B90AC(0LL);
      }

      sub_1000DC6BC(v12 + 144LL * v13);
      LOBYTE(v40) = a1;
      uint64_t v41 = (int *)(v12 + 144LL * v13);
      uint64_t v39 = &v40;
      LOWORD(v38) = 16;
      return sub_1001EE6DC((uint64_t)sub_1000DC8F0, &v38, v41);
    }
  }

  return result;
}

void sub_1000DC6BC(uint64_t a1)
{
  else {
    uint64_t v2 = *(void *)qword_1008DFDB0 + 40LL * *(unsigned __int8 *)(a1 + 136);
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"ResetRemote %lx", v3, v4, v5, v6, v7, v8, v9, a1);
    uint64_t v10 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v29 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (*(_DWORD *)a1)
  {
    sub_1001EECE0(*(_DWORD *)a1);
    *(_DWORD *)a1 = 0;
  }

  sub_1000DD6D8(a1, 0);
  *(_BYTE *)(a1 + 13pthread_attr_setdetachstate(&v7, 2) = 0;
  sub_1001759FC(*(unsigned __int16 *)(a1 + 128), 436LL);
  if (v2)
  {
    char v11 = *(_BYTE *)(v2 + 29);
    if ((v11 & 0x3F) != 0)
    {
      *(_BYTE *)(v2 + 29) = v11 - 1;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Endpoint Remotes: %d", v12, v13, v14, v15, v16, v17, v18, *(unsigned __int8 *)(v2 + 29));
        uint64_t v19 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v20 = sub_1001EDDCC();
          *(_DWORD *)__int128 buf = 136446210;
          uint64_t v29 = v20;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      uint64_t v22 = (_BYTE *)(v2 + 24);
      uint64_t v21 = *(unsigned __int8 *)(v2 + 24);
      uint64_t v23 = *(void *)(qword_1008DFDB0 + 8);
      if (v23 + 144 * v21 != a1)
      {
        unsigned int v24 = *(unsigned __int8 *)(qword_1008DFDB0 + 97);
        if (v21 < v24)
        {
          do
          {
            uint64_t v25 = v23 + 144 * v21;
            unsigned int v26 = *(unsigned __int8 *)(v25 + 137);
            uint64_t v22 = (_BYTE *)(v25 + 137);
            uint64_t v21 = v26;
          }

          while (v23 + 144LL * v26 != a1 && v21 < v24);
        }
      }

      if ((_DWORD)v21 != 255) {
        *uint64_t v22 = *(_BYTE *)(v23 + 144LL * v21 + 137);
      }
      *(_WORD *)(a1 + 135) = -1;
      *(_BYTE *)(a1 + 137) = -1;
      char v11 = *(_BYTE *)(v2 + 29);
    }

    if ((v11 & 0x3F) == 0) {
      sub_1000D9CB4(v2);
    }
  }

uint64_t sub_1000DC8F0(uint64_t a1)
{
  char v1 = *(unsigned __int8 **)(a1 + 8);
  uint64_t v2 = *v1;
  uint64_t v3 = (_DWORD *)*((void *)v1 + 1);
  if (sub_1000A86F0())
  {
    sub_1000DB7D8((uint64_t)v3);
    sub_1001EE134((uint64_t)"AVDTP_ABORT_CFM(transaction=%d,handle=%d,error=%d)", v4, v5, v6, v7, v8, v9, v10, v2);
    char v11 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v16 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  _DWORD *v3 = 0;
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(qword_1008DFDB0 + 24) + 176LL);
  uint64_t v13 = sub_1000DB7D8((uint64_t)v3);
  return v12(v2, v13, 0LL);
}

uint64_t sub_1000DC9FC(__int16 *a1, unsigned int a2, _BYTE *a3)
{
  uint64_t v13 = a2;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_Suspend(handles=0x%x,numHandles=%d)", v6, v7, v8, v9, v10, v11, v12, (uint64_t)a1);
    uint64_t v14 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v51 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (dword_1008F6F14)
  {
    if (!*(void *)(*(void *)(qword_1008DFDB0 + 24) + 120LL))
    {
      sub_1001EE2A0();
      if (!*(void *)(*(void *)(qword_1008DFDB0 + 24) + 120LL)) {
        return 101LL;
      }
    }

    uint64_t v15 = sub_1000B17F4(a2);
    if (!v15) {
      return 106LL;
    }
    uint64_t v16 = v15;
    if (*(unsigned __int8 *)(qword_1008DFDB0 + 97) > (unsigned __int16)(*a1 - 1))
    {
      uint64_t v17 = *(void *)(qword_1008DFDB0 + 8);
      if (v17)
      {
        uint64_t v18 = *(unsigned __int8 *)(v17 + 144LL * (unsigned __int16)(*a1 - 1) + 135);
        if (v18 != 255)
        {
          uint64_t v19 = *(void *)(qword_1008DFDB0 + 16);
          if (v19)
          {
            uint64_t v47 = *(void *)(qword_1008DFDB0 + 16);
            uint64_t v48 = *(unsigned __int8 *)(v17 + 144LL * (unsigned __int16)(*a1 - 1) + 135);
            uint64_t v20 = v19 + (v18 << 6);
            char v21 = *(_BYTE *)(v20 + 46) + 1;
            uint64_t v49 = v20;
            *(_BYTE *)(v20 + 46) = v21;
            uint64_t v22 = v21 & 0xF;
            if (a3) {
              *a3 = v21 & 0xF;
            }
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"AVDT_Suspend_Req\n\tTransaction=%d\n\tRSP=0x0000\n",  v23,  v24,  v25,  v26,  v27,  v28,  v29,  v22);
              uint64_t v30 = (os_log_s *)sub_100086554(3u);
              if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v31 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446210;
                uint64_t v51 = v31;
                _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }

            if (!a2)
            {
LABEL_29:
              uint64_t v45 = sub_1000E5348(*(unsigned __int16 *)(v47 + (v48 << 6) + 38), 9u, v22, (uint64_t)v16, a2);
LABEL_32:
              sub_1000B1838(v16);
              return v45;
            }

            uint64_t v32 = v16;
            while (1)
            {
              __int16 v33 = *a1++;
              unsigned __int16 v34 = v33 - 1;
              uint64_t v35 = *(void *)(qword_1008DFDB0 + 8);
              if (!v35) {
                break;
              }
              unsigned int v36 = v34;
              if (*(_BYTE *)(v35 + 144LL * v34 + 134) != 4)
              {
                uint64_t v45 = 408LL;
                goto LABEL_32;
              }

              uint64_t v37 = *(unsigned __int8 *)(v35 + 144LL * v34 + 135);
              if (v37 == 255) {
                uint64_t v38 = 0LL;
              }
              else {
                uint64_t v38 = *(void *)(qword_1008DFDB0 + 16) + (v37 << 6);
              }
              if (v49 != v38)
              {
                uint64_t v45 = 101LL;
                goto LABEL_32;
              }

              uint64_t v39 = v22;
              uint64_t v40 = v35 + 144LL * v36;
              int v43 = *(unsigned __int8 *)(v40 + 132);
              int v42 = (char *)(v40 + 132);
              char v41 = v43;
              if (!v43)
              {
                sub_1001EE2A0();
                char v41 = *v42;
              }

              *v32++ = v41;
              uint64_t v44 = v35 + 144LL * v36;
              uint64_t v22 = v39;
              *(_BYTE *)(v44 + 133) = v39;
              sub_10018A8D8(*(unsigned __int16 *)(v44 + 128));
              if (!--v13) {
                goto LABEL_29;
              }
            }
          }
        }
      }
    }

    uint64_t v45 = 120LL;
    goto LABEL_32;
  }

  return 408LL;
}

uint64_t sub_1000DCD10(unsigned int a1, __int16 *a2, unsigned int a3, __int16 a4, int a5)
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  unsigned int v5 = *(unsigned __int8 *)(qword_1008DFDB0 + 97);
  uint64_t v6 = *(void *)(qword_1008DFDB0 + 8);
  if (!v6) {
    return 120LL;
  }
  uint64_t v7 = *(unsigned __int8 *)(v6 + 144LL * (unsigned __int16)(*a2 - 1) + 135);
  if (v7 == 255) {
    return 120LL;
  }
  uint64_t v8 = *(void *)(qword_1008DFDB0 + 16);
  if (!v8) {
    return 120LL;
  }
  if (a5)
  {
    if (v5 > (unsigned __int16)(a4 - 1))
    {
      uint64_t v10 = *(unsigned __int8 *)(v6 + 144LL * (unsigned __int16)(a4 - 1) + 136);
      if (v10 != 255)
      {
        if (*(void *)qword_1008DFDB0)
        {
          char v11 = *(_BYTE *)(*(void *)qword_1008DFDB0 + 40LL * v10 + 25);
          return sub_1000DCEB8(*(unsigned __int16 *)(v8 + (v7 << 6) + 38), a1, a2, a3, v11, a5);
        }
      }
    }

uint64_t sub_1000DCEB8(unsigned int a1, unsigned int a2, __int16 *a3, unsigned int a4, char a5, int a6)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"AVDT_Suspend_Rsp\n\tTransaction=%d\n\tErrorCode=0x%.2x\n",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  a2);
    uint64_t v19 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v24 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v20 = sub_1000E541C(a1, 9u, a2, a5, a6);
  uint64_t v21 = v20;
  if (!a6 && !(_DWORD)v20) {
    sub_1000E4A78(a3, a4, 3);
  }
  return v21;
}

uint64_t sub_1000DCFE4(__int16 *a1, unsigned int a2, _BYTE *a3)
{
  uint64_t v13 = a2;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_Transition(handles=0x%x, numHandles=%d", v6, v7, v8, v9, v10, v11, v12, (uint64_t)a1);
    uint64_t v14 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      int v42 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!dword_1008F6F14) {
    return 408LL;
  }
  if (!*(void *)(*(void *)(qword_1008DFDB0 + 24) + 128LL))
  {
    sub_1001EE2A0();
    if (!*(void *)(*(void *)(qword_1008DFDB0 + 24) + 128LL)) {
      return 101LL;
    }
  }

  uint64_t v15 = sub_1000B1814(a2);
  uint64_t v16 = v15;
  if (*(unsigned __int8 *)(qword_1008DFDB0 + 97) <= (unsigned __int16)(*a1 - 1)
    || (uint64_t v17 = *(void *)(qword_1008DFDB0 + 8)) == 0
    || (uint64_t v18 = *(unsigned __int8 *)(v17 + 144LL * (unsigned __int16)(*a1 - 1) + 135), v18 == 255)
    || (uint64_t v19 = *(void *)(qword_1008DFDB0 + 16)) == 0)
  {
    uint64_t v36 = 120LL;
    if (!v15) {
      return v36;
    }
LABEL_28:
    sub_1000B1838(v16);
    return v36;
  }

  uint64_t v38 = *(void *)(qword_1008DFDB0 + 16);
  uint64_t v39 = *(unsigned __int8 *)(v17 + 144LL * (unsigned __int16)(*a1 - 1) + 135);
  uint64_t v20 = v19 + (v18 << 6);
  char v21 = *(_BYTE *)(v20 + 46) + 1;
  uint64_t v40 = v20;
  *(_BYTE *)(v20 + 46) = v21;
  uint64_t v22 = v21 & 0xF;
  if (a3) {
    *a3 = v21 & 0xF;
  }
  if (a2)
  {
    uint64_t v23 = v15;
    do
    {
      __int16 v24 = *a1++;
      unsigned __int16 v25 = v24 - 1;
      uint64_t v26 = *(void *)(qword_1008DFDB0 + 8);
      if (!v26) {
        break;
      }
      unsigned int v27 = v25;
      if (*(_BYTE *)(v26 + 144LL * v25 + 134) != 4) {
        break;
      }
      uint64_t v28 = *(unsigned __int8 *)(v26 + 144LL * v25 + 135);
      uint64_t v29 = v28 == 255 ? 0LL : *(void *)(qword_1008DFDB0 + 16) + (v28 << 6);
      if (v40 != v29) {
        break;
      }
      uint64_t v30 = v22;
      uint64_t v31 = v26 + 144LL * v27;
      int v34 = *(unsigned __int8 *)(v31 + 132);
      uint64_t v33 = (char *)(v31 + 132);
      char v32 = v34;
      if (!v34)
      {
        sub_1001EE2A0();
        char v32 = *v33;
      }

      *v23++ = v32;
      uint64_t v35 = v26 + 144LL * v27;
      uint64_t v22 = v30;
      *(_BYTE *)(v35 + 133) = v30;
      sub_10018A8D8(*(unsigned __int16 *)(v35 + 128));
      --v13;
    }

    while (v13);
  }

  uint64_t v36 = sub_1000E5348(*(unsigned __int16 *)(v38 + (v39 << 6) + 38), 0xFEu, v22, (uint64_t)v16, a2);
  if (v16) {
    goto LABEL_28;
  }
  return v36;
}

uint64_t sub_1000DD278(unsigned __int8 *a1, unsigned int a2, uint64_t a3, int a4, void **a5, _BYTE *a6)
{
  int v8 = a4;
  unsigned int v10 = a2;
  int v12 = a4 + a2;
  *a6 = a4 + a2;
  if (a4)
  {
    for (uint64_t i = 0LL; i != a4; ++i)
    {
      uint64_t v14 = (unsigned __int8 *)(a3 + 16 * i);
      int v15 = *v14;
      if (v15 == 4 || v15 == 7)
      {
        *a6 = --v12;
      }

      else
      {
        uint64_t v17 = a2;
        uint64_t v18 = a1;
        if (a2)
        {
          do
          {
            int v19 = *v18;
            v18 += 16;
            if (*v14 == v19) {
              *a6 = --v12;
            }
            --v17;
          }

          while (v17);
        }
      }
    }
  }

  uint64_t v20 = sub_1000B1814(16LL * v12);
  *a5 = v20;
  if (!v20) {
    goto LABEL_54;
  }
  int v21 = *a6;
  if (!(v21 | v8 | v10)) {
    return 0LL;
  }
  BOOL v22 = v10 != 0;
  BOOL v23 = v8 != 0;
  while (1)
  {
    if (v22)
    {
      LOBYTE(v10) = v10 - 1;
      __int16 v24 = (const void **)&a1[16 * v10];
      goto LABEL_19;
    }

    if (!v23)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Mis-Count of merged caps: %d", v38, v39, v40, v41, v42, v43, v44, *a6);
        uint64_t v45 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
          goto LABEL_53;
        }
      }

      goto LABEL_54;
    }

    LOBYTE(v8) = v8 - 1;
    __int16 v24 = (const void **)(a3 + 16LL * v8);
    int v31 = *(unsigned __int8 *)v24;
    if (v31 == 4 || v31 == 7)
    {
      LOBYTE(v10) = 0;
      goto LABEL_36;
    }

    uint64_t v33 = *a6;
    int v34 = (unsigned __int8 *)*a5 + 16 * v21;
    uint64_t v35 = v33 - v21;
    do
    {
      int v36 = *v34;
      v34 += 16;
      if (v31 == v36) {
        __int16 v24 = 0LL;
      }
      --v35;
    }

    while (v35);
LABEL_19:
    if (v24) {
      break;
    }
LABEL_36:
    BOOL v23 = v8 != 0;
    BOOL v22 = v10 != 0;
    if (!v21 && !(_BYTE)v8 && !(_BYTE)v10) {
      return 0LL;
    }
  }

  if (v21 > 0)
  {
    uint64_t v25 = (uint64_t)*a5 + 16 * --v21;
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v24;
    unsigned int v26 = *(unsigned __int8 *)v24;
    BOOL v27 = v26 > 8;
    int v28 = (1 << v26) & 0x10E;
    if (v27 || v28 == 0)
    {
      if (*((_BYTE *)v24 + 3))
      {
        uint64_t v30 = sub_1000B17F4(*((unsigned __int8 *)v24 + 3));
        *(void *)(v25 + 8) = v30;
        if (!v30) {
          goto LABEL_54;
        }
        memmove(v30, v24[1], *((unsigned __int8 *)v24 + 3));
      }

      else
      {
        *(void *)(v25 + 8) = 0LL;
      }
    }

    goto LABEL_36;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Mis-Count of merged caps: %d", v46, v47, v48, v49, v50, v51, v52, *a6);
    uint64_t v53 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
LABEL_53:
    }
      sub_100657858();
  }

uint64_t sub_1000DD518(__int16 a1, unsigned int a2, char a3, int a4)
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  char v4 = a1 - 1;
  uint64_t v5 = *(void *)(qword_1008DFDB0 + 8);
  if (!v5) {
    return 120LL;
  }
  unsigned int v9 = (unsigned __int16)(a1 - 1);
  uint64_t v10 = *(unsigned __int8 *)(v5 + 144LL * (unsigned __int16)(a1 - 1) + 136) == 255LL
      ? 0LL
      : *(void *)qword_1008DFDB0 + 40LL * *(unsigned __int8 *)(v5 + 144LL * (unsigned __int16)(a1 - 1) + 136);
  uint64_t v12 = *(unsigned __int8 *)(v5 + 144LL * (unsigned __int16)(a1 - 1) + 135);
  if (v12 == 255) {
    return 120LL;
  }
  uint64_t result = 120LL;
  if (v10)
  {
    uint64_t v13 = *(void *)(qword_1008DFDB0 + 16);
    if (v13)
    {
      uint64_t v14 = (_DWORD *)(v5 + 144LL * v9);
      if (a4)
      {
        sub_1000D88A0((void **)(v10 + 16), *(unsigned __int8 *)(v10 + 32));
        *(_BYTE *)(v10 + 3pthread_attr_setdetachstate(&v7, 2) = 0;
        uint64_t v15 = v5 + 144LL * v9;
        *(_BYTE *)(v15 + 13pthread_attr_setdetachstate(&v7, 2) = 0;
        _DWORD *v14 = 0;
        *(_WORD *)(v15 + 128) = 0;
        sub_1000B90AC(0LL);
        *(_BYTE *)(v15 + 137) = -1;
        *(_DWORD *)(v15 + 133) = -65281;
        return sub_1000E63A0(*(unsigned __int16 *)(v13 + (v12 << 6) + 38), 3, a2, a3, a4);
      }

      else
      {
        uint64_t result = sub_1000E63A0(*(unsigned __int16 *)(v13 + (v12 << 6) + 38), 3, a2, a3, 0);
        if (!(_DWORD)result)
        {
          sub_1000DD6D8(v5 + 144LL * v9, 1);
          sub_1000D88A0((void **)(v10 + 8), *(unsigned __int8 *)(v10 + 31));
          uint64_t result = 0LL;
          *(_BYTE *)(v10 + 31) = *(_BYTE *)(v10 + 32);
          *(void *)(v10 + 8) = *(void *)(v10 + 16);
          *(void *)(v10 + 16) = 0LL;
          ++*(_BYTE *)(v10 + 29);
          *(_BYTE *)(v10 + 3pthread_attr_setdetachstate(&v7, 2) = 0;
          *(_BYTE *)(v5 + 144LL * v9 + 137) = *(_BYTE *)(v10 + 24);
          *(_BYTE *)(v10 + 24) = v4;
        }
      }
    }
  }

  return result;
}

void sub_1000DD6D8(uint64_t a1, int a2)
{
  if (sub_1000A86F0())
  {
    uint64_t v4 = sub_1000DB7D8(a1);
    sub_1001EE134((uint64_t)"State transition Handle %d: %s -> %s", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v18 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  int v13 = *(unsigned __int8 *)(a1 + 134);
  if (a2 == 4)
  {
    if (v13 != 4)
    {
      int v14 = *(unsigned __int16 *)(a1 + 128);
      unsigned int v15 = 12;
      unsigned int v16 = 70;
LABEL_9:
      sub_1001895BC(v14, v15, v16);
    }
  }

  else if (v13 == 4)
  {
    int v14 = *(unsigned __int16 *)(a1 + 128);
    unsigned int v15 = 9;
    unsigned int v16 = -1;
    goto LABEL_9;
  }

  *(_BYTE *)(a1 + 134) = a2;
}

uint64_t sub_1000DD830(__int16 a1, unsigned int a2, char a3, int a4)
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  uint64_t v4 = *(void *)(qword_1008DFDB0 + 8);
  if (!v4) {
    return 120LL;
  }
  unsigned int v8 = (unsigned __int16)(a1 - 1);
  uint64_t v9 = *(unsigned __int8 *)(v4 + 144LL * (unsigned __int16)(a1 - 1) + 136) == 255LL
     ? 0LL
     : *(void *)qword_1008DFDB0 + 40LL * *(unsigned __int8 *)(v4 + 144LL * (unsigned __int16)(a1 - 1) + 136);
  uint64_t v10 = *(unsigned __int8 *)(v4 + 144LL * (unsigned __int16)(a1 - 1) + 135);
  if (v10 == 255) {
    return 120LL;
  }
  uint64_t result = 120LL;
  if (v9)
  {
    uint64_t v12 = *(void *)(qword_1008DFDB0 + 16);
    if (v12)
    {
      if (*(_BYTE *)(v4 + 144LL * v8 + 134) == 3)
      {
        if (a4)
        {
          unsigned int v14 = *(unsigned __int8 *)(v9 + 32);
          int v13 = (void **)(v9 + 32);
          sub_1000D88A0(v13 - 2, v14);
          unsigned int v15 = v13;
        }

        else
        {
          sub_1000D88A0((void **)(v9 + 8), *(unsigned __int8 *)(v9 + 31));
          unsigned int v15 = (void **)(v9 + 32);
          char v16 = *(_BYTE *)(v9 + 32);
          *(void *)(v9 + 8) = *(void *)(v9 + 16);
          *(_BYTE *)(v9 + 31) = v16;
          *(void *)(v9 + 16) = 0LL;
        }

        *(_BYTE *)unsigned int v15 = 0;
        return sub_1000E63A0(*(unsigned __int16 *)(v12 + (v10 << 6) + 38), 5, a2, a3, a4);
      }

      return 408LL;
    }
  }

  return result;
}

uint64_t sub_1000DD970(__int16 a1, unsigned int a2, const void *a3, unsigned int a4, int a5)
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  uint64_t v5 = *(void *)(qword_1008DFDB0 + 8);
  if (!v5) {
    return 120LL;
  }
  uint64_t v6 = *(unsigned __int8 *)(v5 + 144LL * (unsigned __int16)(a1 - 1) + 135);
  if (v6 == 255) {
    return 120LL;
  }
  uint64_t v7 = *(void *)(qword_1008DFDB0 + 16);
  if (!v7) {
    return 120LL;
  }
  unsigned int v8 = *(unsigned __int8 *)(v5 + 144LL * (unsigned __int16)(a1 - 1) + 134);
  BOOL v9 = v8 > 6;
  int v10 = (1 << v8) & 0x61;
  if (!v9 && v10 != 0) {
    return 408LL;
  }
  return sub_1000E6454(*(unsigned __int16 *)(v7 + (v6 << 6) + 38), a2, a3, a4, a5);
}

uint64_t sub_1000DDA04(__int16 a1, unsigned int a2, int a3, char a4)
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  uint64_t v4 = *(void *)(qword_1008DFDB0 + 8);
  if (!v4) {
    return 120LL;
  }
  uint64_t v5 = *(unsigned __int8 *)(v4 + 144LL * (unsigned __int16)(a1 - 1) + 135);
  if (v5 == 255) {
    return 120LL;
  }
  uint64_t v6 = *(void *)(qword_1008DFDB0 + 16);
  if (!v6) {
    return 120LL;
  }
  uint64_t result = sub_1000E65CC(*(unsigned __int16 *)(v6 + (v5 << 6) + 38), a2, a3, a4);
  if (!(_DWORD)result)
  {
    int v16 = sub_1000A86F0();
    uint64_t result = 0LL;
    if (v16)
    {
      sub_1001EE134( (uint64_t)"AVDTP_DelayReport_Rsp: Transaction=%d, ErrorCode=0x%x,StreamHandles=%d",  v9,  v10,  v11,  v12,  v13,  v14,  v15,  a2);
      uint64_t v17 = (os_log_s *)sub_100086554(3u);
      BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
      uint64_t result = 0LL;
      if (v18)
      {
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v20 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        return 0LL;
      }
    }
  }

  return result;
}

BOOL sub_1000DDB64(uint64_t a1)
{
  unsigned __int16 v4 = 0;
  uint64_t v3 = 0LL;
  int v1 = sub_1000D8AB0(a1, &v4);
  BOOL result = 0LL;
  if (!v1) {
    return !sub_1001723A0(v4, &v3) && *(_BYTE *)(v3 + 227) != 0;
  }
  return result;
}

uint64_t sub_1000DDBC0(__int16 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(qword_1008DFDB0 + 8);
  if (!v2) {
    return 0LL;
  }
  unsigned int v3 = (unsigned __int16)(a1 - 1);
  uint64_t v5 = (unsigned __int8 *)(v2 + 144LL * (unsigned __int16)(a1 - 1) + 16);
  uint64_t result = sub_1001EF520((uint64_t)v5, 3u);
  if (!(_DWORD)result)
  {
    uint64_t result = sub_1001EFB10(v5, (char *)a2, 0xCuLL, 2u);
    if (!(_DWORD)result)
    {
      if (!*(_BYTE *)(a2 + 12) || (uint64_t result = sub_1001EFB10(v5, (char *)(a2 + 12), 1uLL, 2u), !(_DWORD)result))
      {
        uint64_t result = sub_1001EFB10(v5, *(char **)(a2 + 24), *(unsigned __int16 *)(a2 + 16), 2u);
        if (!(_DWORD)result)
        {
          uint64_t result = sub_100172A98( (uint64_t)sub_1000DDCD4,  *(unsigned __int16 *)(v2 + 144LL * v3 + 128),  0LL,  (uint64_t)v5,  1);
          if (!(_DWORD)result) {
            *(void *)(v2 + 144LL * v3 + 24) = v2 + 144LL * v3;
          }
        }
      }
    }
  }

  return result;
}

void sub_1000DDCD4(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = 0LL;
}

void sub_1000DDCDC(__int16 a1)
{
  if (*(unsigned __int8 *)(qword_1008DFDB0 + 97) > (unsigned __int16)(a1 - 1))
  {
    uint64_t v1 = *(void *)(qword_1008DFDB0 + 8);
    if (v1) {
      sub_10018859C(*(unsigned __int16 *)(v1 + 144LL * (unsigned __int16)(a1 - 1) + 128));
    }
  }

uint64_t sub_1000DDD14(__int16 a1)
{
  if (*(unsigned __int8 *)(qword_1008DFDB0 + 97) > (unsigned __int16)(a1 - 1)
    && (uint64_t v1 = *(void *)(qword_1008DFDB0 + 8)) != 0)
  {
    uint64_t v2 = sub_1001875E0(*(unsigned __int16 *)(v1 + 144LL * (unsigned __int16)(a1 - 1) + 128));
    if ((_DWORD)v2)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"FreeHeadOfList Failed Status %d", v3, v4, v5, v6, v7, v8, v9, v2);
        uint64_t v10 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Invalid AVDTP Handle", v11, v12, v13, v14, v15, v16, v17, v20);
      BOOL v18 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 2903LL;
  }

  return v2;
}

uint64_t sub_1000DDDFC(uint64_t *a1, void **a2, unsigned __int8 *a3)
{
  *a2 = 0LL;
  *a3 = 0;
  uint64_t v127 = 0LL;
  char v128 = 0;
  unsigned int v5 = *((unsigned __int16 *)a1 + 6);
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"ParseCaps", v6, v7, v8, v9, v10, v11, v12, v121);
    uint64_t v13 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v126 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v124 = a2;
  if (*((_BYTE *)a1 + 15))
  {
    unsigned __int8 v14 = 0;
    uint64_t v15 = 0LL;
LABEL_6:
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    if (*((_BYTE *)a1 + 15))
    {
      unsigned __int8 v16 = 0;
      uint64_t v17 = a2;
      goto LABEL_126;
    }

    goto LABEL_25;
  }

  unsigned int v18 = *((unsigned __int16 *)a1 + 5);
  unsigned int v19 = *((unsigned __int16 *)a1 + 6);
  if (v18 > v19)
  {
    unsigned __int8 v14 = 0;
    int v20 = 0;
    while (1)
    {
      if (*((_BYTE *)a1 + 14) != 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3478,  "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      uint64_t v21 = *a1;
      uint64_t v22 = v19 + 1LL;
      *((_WORD *)a1 + 6) = v22;
      uint64_t v15 = *(unsigned __int8 *)(v21 + v19);
      if (v18 <= v22)
      {
        *((_BYTE *)a1 + 15) = 1;
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        signed int v25 = 0;
      }

      else
      {
        uint64_t v23 = *a1;
        unsigned int v24 = v19 + 2;
        *((_WORD *)a1 + 6) = v24;
        int v20 = *(unsigned __int8 *)(v23 + v22);
        signed int v25 = v18 - v24;
      }

      if (v25 >= v20) {
        *((_WORD *)a1 + 6) += v20;
      }
      else {
        *((_BYTE *)a1 + 15) = 1;
      }
      char v26 = 1;
      if (!v20 && v15 <= 8 && ((1 << v15) & 0x107) != 0)
      {
        int v27 = *((unsigned __int8 *)&v127 + v15);
        *((_BYTE *)&v127 + v15) = v27 + 1;
        char v26 = v27 == 0;
      }

      v14 += v26;
      if (*((_BYTE *)a1 + 15)) {
        goto LABEL_6;
      }
      unsigned int v18 = *((unsigned __int16 *)a1 + 5);
      unsigned int v19 = *((unsigned __int16 *)a1 + 6);
      if (v18 <= v19) {
        goto LABEL_25;
      }
    }
  }

  uint64_t v15 = 0LL;
  unsigned __int8 v14 = 0;
LABEL_25:
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"ParseCaps - got count %d", v28, v29, v30, v31, v32, v33, v34, v14);
    uint64_t v35 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
    {
      int v36 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v126 = v36;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v17 = a2;
  if (v14)
  {
    uint64_t v37 = sub_1000B1814(16LL * v14);
    *a2 = v37;
    if (!v37)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"ParseCaps: Could not allocate memory for %d capabilities",  v96,  v97,  v98,  v99,  v100,  v101,  v102,  v14);
        uint64_t v103 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v103, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      char v47 = 0;
      unsigned __int8 v16 = 0;
      goto LABEL_123;
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"numCaps = %d", v38, v39, v40, v41, v42, v43, v44, v14);
    uint64_t v45 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v46 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v126 = v46;
      _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (v5 > *((unsigned __int16 *)a1 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3507,  "(size_t)(pos) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v5;
  char v47 = 1;
  if (!v14)
  {
    unsigned __int8 v14 = 0;
    uint64_t v95 = 0LL;
    unsigned __int8 v16 = 0;
    goto LABEL_125;
  }

  unsigned __int8 v16 = 0;
  int v48 = 0;
  while (1)
  {
    if (*((_BYTE *)a1 + 15)) {
      goto LABEL_126;
    }
    if (*((_BYTE *)a1 + 14) != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3513,  "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    uint64_t v49 = (char *)*v17;
    unsigned int v50 = *((unsigned __int16 *)a1 + 5);
    uint64_t v51 = *((unsigned __int16 *)a1 + 6);
    uint64_t v52 = *a1;
    *((_WORD *)a1 + 6) = v51 + 1;
    uint64_t v15 = *(unsigned __int8 *)(v52 + v51);
    uint64_t v53 = *a1;
    *((_WORD *)a1 + 6) = v51 + 2;
    unsigned int v54 = *(unsigned __int8 *)(v53 + v51 + 1);
LABEL_43:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"got capability %d", v55, v56, v57, v58, v59, v60, v61, v15);
      uint64_t v62 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v63 = sub_1001EDDCC();
        *(_DWORD *)__int128 buf = 136446210;
        uint64_t v126 = v63;
        _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    uint64_t v64 = &v49[16 * v48];
    *uint64_t v64 = v15;
    switch((int)v15)
    {
      case 1:
      case 2:
      case 8:
        if (v54) {
          goto LABEL_124;
        }
        char v65 = *((_BYTE *)&v127 + v15) - 1;
        *((_BYTE *)&v127 + v15) = v65;
        v48 -= v65 != 0;
        goto LABEL_116;
      case 3:
        if (v54 != 3) {
          goto LABEL_124;
        }
        if (*((_BYTE *)a1 + 14) != 1) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3564,  "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }

        else
        {
          uint64_t v89 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v89)
          {
            uint64_t v90 = *a1;
            *((_WORD *)a1 + 6) = v89 + 1;
            v64[1] = *(_BYTE *)(v90 + v89);
            goto LABEL_104;
          }
        }

        *((_BYTE *)a1 + 15) = 1;
LABEL_104:
        if (*((_BYTE *)a1 + 14) != 1) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3565,  "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }

        else
        {
          uint64_t v91 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v91)
          {
            uint64_t v92 = *a1;
            *((_WORD *)a1 + 6) = v91 + 1;
            v64[2] = *(_BYTE *)(v92 + v91);
            goto LABEL_110;
          }
        }

        *((_BYTE *)a1 + 15) = 1;
LABEL_110:
        if (*((_BYTE *)a1 + 14) != 1) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3566,  "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }

        else
        {
          uint64_t v93 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v93)
          {
            uint64_t v94 = *a1;
            *((_WORD *)a1 + 6) = v93 + 1;
            v64[3] = *(_BYTE *)(v94 + v93);
            goto LABEL_116;
          }
        }

        *((_BYTE *)a1 + 15) = 1;
        goto LABEL_116;
      case 4:
      case 7:
        if (*((_BYTE *)a1 + 14) != 1) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3540,  "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }

        else
        {
          uint64_t v66 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v66)
          {
            uint64_t v67 = *a1;
            *((_WORD *)a1 + 6) = v66 + 1;
            v64[1] = *(_BYTE *)(v67 + v66);
            goto LABEL_65;
          }
        }

        *((_BYTE *)a1 + 15) = 1;
LABEL_65:
        if (*((_BYTE *)a1 + 14) != 1) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3541,  "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }

        else
        {
          uint64_t v68 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v68)
          {
            uint64_t v69 = *a1;
            *((_WORD *)a1 + 6) = v68 + 1;
            v64[2] = *(_BYTE *)(v69 + v68);
            goto LABEL_71;
          }
        }

        *((_BYTE *)a1 + 15) = 1;
LABEL_71:
        v64[3] = v54 - 2;
        if (v54 < 2)
        {
LABEL_124:
          char v47 = 0;
          uint64_t v95 = 24LL;
          goto LABEL_125;
        }

        if ((_BYTE)v54 != 2)
        {
          int v70 = sub_1000B17F4((v54 - 2));
          *((void *)v64 + 1) = v70;
          if (v70)
          {
            if (*((_BYTE *)a1 + 14) != 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3552,  "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
            unsigned int v71 = v70;
            uint64_t v122 = *a1;
            uint64_t v72 = *((unsigned __int16 *)a1 + 6);
            uint64_t v73 = v64[3];
            if (*((_BYTE *)a1 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
              int v74 = 0;
            }

            else
            {
              int v74 = *((unsigned __int16 *)a1 + 5) - (_DWORD)v72;
            }

            int v75 = v64[3];
            if (v74 < v75) {
              goto LABEL_94;
            }
            if ((_DWORD)v73)
            {
              uint64_t v86 = (char *)(v122 + v72);
              uint64_t v87 = &v71[v73];
              do
              {
                char v88 = *v86++;
                *v71++ = v88;
              }

              while (v71 < v87);
              LOWORD(v75) = v64[3];
            }

            *((_WORD *)a1 + 6) += v75;
            goto LABEL_100;
          }

          char v47 = 0;
LABEL_123:
          uint64_t v95 = 129LL;
          goto LABEL_125;
        }

        *((void *)v64 + 1) = 0LL;
LABEL_116:
        ++v16;
        if (++v48 >= v14)
        {
          uint64_t v95 = 0LL;
          char v47 = 1;
          goto LABEL_125;
        }

        break;
      case 5:
        if (v54 != 1) {
          goto LABEL_124;
        }
        goto LABEL_59;
      case 6:
        if (!v54) {
          goto LABEL_124;
        }
LABEL_59:
        if (*((_BYTE *)a1 + 14) != 1) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3586,  "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }

        else
        {
          uint64_t v76 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v76)
          {
            uint64_t v77 = *a1;
            *((_WORD *)a1 + 6) = v76 + 1;
            v64[1] = *(_BYTE *)(v77 + v76);
            goto LABEL_80;
          }
        }

        *((_BYTE *)a1 + 15) = 1;
LABEL_80:
        LOBYTE(v54) = v54 - 1;
LABEL_81:
        if (!(_BYTE)v54) {
          goto LABEL_116;
        }
        v64[3] = v54;
        uint64_t v78 = sub_1000B17F4(v54);
        *((void *)v64 + 1) = v78;
        if (v78)
        {
          if (*((_BYTE *)a1 + 14) != 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3596,  "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          uint64_t v79 = v78;
          uint64_t v80 = *a1;
          uint64_t v81 = *((unsigned __int16 *)a1 + 6);
          if (*((_BYTE *)a1 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
            int v82 = 0;
          }

          else
          {
            int v82 = *((unsigned __int16 *)a1 + 5) - (_DWORD)v81;
          }

          if (v82 >= v54)
          {
            uint64_t v83 = (char *)(v80 + v81);
            uint64_t v84 = &v79[v54];
            do
            {
              char v85 = *v83++;
              *v79++ = v85;
            }

            while (v79 < v84);
            *((_WORD *)a1 + 6) += v54;
            uint64_t v17 = v124;
            goto LABEL_116;
          }

void sub_1000DE8D0(unsigned int a1, unsigned __int8 *a2, int a3)
{
  unsigned __int8 v75 = 0;
  if (!a2)
  {
    uint64_t v73 = "data";
    goto LABEL_47;
  }

  if (!a3)
  {
    uint64_t v73 = "(dataLen) > 0";
LABEL_47:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  5009,  v73);
  }

  uint64_t v76 = a2;
  __int16 v77 = a3;
  __int16 v80 = 1;
  __int16 v78 = a3;
  unsigned int v4 = *a2;
  uint64_t v5 = v4 >> 4;
  if (a3 == 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Error parsing AVDTP Signal header", v6, v7, v8, v9, v10, v11, v12, v74);
      uint64_t v13 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    goto LABEL_7;
  }

  __int16 v79 = 2;
  unsigned __int8 v75 = a2[1];
  unsigned int v14 = v4 & 3;
  if ((v4 & 3) != 0) {
    sub_1000E4E38(a1, v4 >> 4);
  }
  if (sub_1000A86F0())
  {
    uint64_t v21 = sub_1001EDE54((uint64_t)&v75, 1LL, v15, v16, v17, v18, v19, v20);
    sub_1001EE134((uint64_t)"AVDTP receive %s msgType:%d transaction:%d)\n", v22, v23, v24, v25, v26, v27, v28, v21);
    uint64_t v29 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v30 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      int v82 = v30;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v31 = sub_1000DECC4;
  switch(v75)
  {
    case 1u:
      goto LABEL_33;
    case 2u:
      int v32 = sub_1000DF230(a1, (uint64_t)&v76, v5, v14);
      goto LABEL_34;
    case 3u:
      int v32 = sub_1000DF704(a1, (uint64_t)&v76, v5, v14);
      goto LABEL_34;
    case 4u:
      int v32 = sub_1000DFE00(a1, (uint64_t)&v76, v5, v14);
      goto LABEL_34;
    case 5u:
      int v32 = sub_1000E0220(a1, (uint64_t)&v76, v5, v14);
      goto LABEL_34;
    case 6u:
      int v32 = sub_1000E0790(a1, (uint64_t *)&v76, v5, v14);
      goto LABEL_34;
    case 7u:
      int v32 = sub_1000E0CF0(a1, (uint64_t *)&v76, v5, v14);
      goto LABEL_34;
    case 8u:
      int v32 = sub_1000E121C(a1, (uint64_t)&v76, v5, v14);
      goto LABEL_34;
    case 9u:
      int v32 = sub_1000E1740(a1, (uint64_t *)&v76, v5, v14);
      goto LABEL_34;
    case 0xAu:
      int v32 = sub_1000E1D9C(a1, (uint64_t *)&v76, v5, v14);
      goto LABEL_34;
    case 0xBu:
      uint64_t v31 = (uint64_t (*)(unsigned int, uint64_t, uint64_t, unsigned int))sub_1000E22E4;
LABEL_33:
      int v32 = v31(a1, (uint64_t)&v76, v5, v14);
      goto LABEL_34;
    case 0xCu:
      int v32 = sub_1000E2AC8(a1, (uint64_t)&v76, v5, v14);
      goto LABEL_34;
    case 0xDu:
      int v32 = sub_1000E2724(a1, (uint64_t *)&v76, v5, v14);
      goto LABEL_34;
    default:
      if (sub_1000DECC4 != 254)
      {
        if (sub_1000DECC4 == 255)
        {
          if (v14)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"Got general reject message", v33, v34, v35, v36, v37, v38, v39, v74);
              uint64_t v40 = (os_log_s *)sub_100086554(3u);
              if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v41 = sub_1001EDDCC();
                *(_DWORD *)__int128 buf = 136446210;
                int v82 = v41;
                _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }

            return;
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Unrecognized command %d!", v65, v66, v67, v68, v69, v70, v71, v75);
            uint64_t v72 = (os_log_s *)sub_100086554(3u);
            if (os_log_type_enabled(v72, OS_LOG_TYPE_ERROR)) {
LABEL_41:
            }
              sub_100657858();
          }
        }

        else if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Unrecognized command %d!", v57, v58, v59, v60, v61, v62, v63, v75);
          uint64_t v64 = (os_log_s *)sub_100086554(3u);
          if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR)) {
            goto LABEL_41;
          }
        }

uint64_t sub_1000DECC4(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (sub_1000A86F0())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received DISCOVER - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v70 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!a2) {
    sub_1001EE2A0();
  }
  unsigned __int16 v68 = 0;
  if (a4)
  {
    if (a4 != 3)
    {
      if (a4 != 2)
      {
LABEL_16:
        LOBYTE(apthread_attr_setdetachstate(&v7, 2) = 0;
        return a2;
      }

      if (*(_BYTE *)(a2 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        goto LABEL_16;
      }

      __int16 v25 = *(_WORD *)(a2 + 10) - *(_WORD *)(a2 + 12);
      int v26 = (__int16)(v25 + ((unsigned __int16)(v25 & 0x8000) >> 15)) >> 1;
      if (!(_BYTE)v26) {
        goto LABEL_16;
      }
      uint64_t v27 = (char *)sub_1000B17F4( 4 * ((__int16)(v25 + ((unsigned __int16)(v25 & 0x8000) >> 15)) >> 1));
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v29 = 0LL;
        do
        {
          if (*(_BYTE *)(a2 + 14) != 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3375,  "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          if (*(_BYTE *)(a2 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_61:
            *(_BYTE *)(a2 + 15) = 1;
            a2 = 17LL;
            goto LABEL_62;
          }

          unsigned int v30 = *(unsigned __int16 *)(a2 + 10);
          uint64_t v31 = *(unsigned __int16 *)(a2 + 12);
          uint64_t v32 = *(void *)a2;
          *(_WORD *)(a2 + 1pthread_attr_setdetachstate(&v7, 2) = v31 + 1;
          unsigned __int8 v33 = *(_BYTE *)(v32 + v31);
          uint64_t v34 = &v28[v29];
          v34[2] = v33 >> 2;
          v34[3] = (v33 & 2) != 0;
          *(_WORD *)(a2 + 1pthread_attr_setdetachstate(&v7, 2) = v31 + 2;
          char v35 = *(_BYTE *)(v32 + v31 + 1);
          *uint64_t v34 = v35 & 0xF0;
          v34[1] = (v35 & 8) != 0;
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"seid %2d - inUse %B - mediaType %d - dir %s",  v36,  v37,  v38,  v39,  v40,  v41,  v42,  v34[2]);
            uint64_t v43 = (os_log_s *)sub_100086554(3u);
            if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v44 = sub_1001EDDCC();
              *(_DWORD *)__int128 buf = 136446210;
              uint64_t v70 = v44;
              _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          v29 += 4LL;
        }

        while (4LL * v26 != v29);
        if (*(_BYTE *)(a2 + 15)) {
          a2 = 17LL;
        }
        else {
          a2 = 0LL;
        }
LABEL_62:
        (*(void (**)(uint64_t, void, char *, void, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 24LL))( a3,  v68,  v28,  v26,  a2);
        uint64_t v57 = v28;
        goto LABEL_54;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Error - out of memory", v59, v60, v61, v62, v63, v64, v65, v67);
        uint64_t v66 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      LOBYTE(apthread_attr_setdetachstate(&v7, 2) = -127;
      return a2;
    }

    if (*(_BYTE *)(a2 + 14) != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3403,  "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(_BYTE *)(a2 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }

    else
    {
      uint64_t v45 = *(unsigned __int16 *)(a2 + 12);
      if (*(unsigned __int16 *)(a2 + 10) > v45)
      {
        uint64_t v46 = *(void *)a2;
        *(_WORD *)(a2 + 1pthread_attr_setdetachstate(&v7, 2) = v45 + 1;
        char v47 = *(_BYTE *)(v46 + v45);
        if (v47) {
          LOBYTE(apthread_attr_setdetachstate(&v7, 2) = v47;
        }
        else {
          LOBYTE(apthread_attr_setdetachstate(&v7, 2) = 24;
        }
        goto LABEL_47;
      }
    }

    *(_BYTE *)(a2 + 15) = 1;
    LOBYTE(apthread_attr_setdetachstate(&v7, 2) = 17;
LABEL_47:
    (*(void (**)(uint64_t, void, void, void, void))(*(void *)(qword_1008DFDB0 + 24) + 24LL))( a3,  v68,  0LL,  0LL,  a2);
    return a2;
  }

  uint64_t v17 = *(void *)qword_1008DFDB0;
  uint64_t v18 = (char *)sub_1000B17F4(4LL * *(unsigned __int8 *)(qword_1008DFDB0 + 96));
  uint64_t v19 = (uint64_t)v18;
  if (v18)
  {
    uint64_t v20 = *(unsigned __int8 *)(qword_1008DFDB0 + 96);
    if (*(_BYTE *)(qword_1008DFDB0 + 96))
    {
      unsigned __int8 v21 = 0;
      uint64_t v22 = (unsigned __int8 *)(v17 + 29);
      do
      {
        char v23 = *(v22 - 4);
        if (v23)
        {
          uint64_t v24 = &v18[4 * v21];
          *(_WORD *)uint64_t v24 = *(_WORD *)(v22 - 3);
          v24[2] = v23;
          _OWORD v24[3] = *v22 >= *(v22 - 1);
          ++v21;
        }

        v22 += 40;
        --v20;
      }

      while (v20);
      LODWORD(apthread_attr_setdetachstate(&v7, 2) = 0;
    }

    else
    {
      LODWORD(apthread_attr_setdetachstate(&v7, 2) = 0;
      unsigned __int8 v21 = 0;
    }
  }

  else
  {
    unsigned __int8 v21 = 0;
    LODWORD(apthread_attr_setdetachstate(&v7, 2) = 129;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Returning %d endpoints", v48, v49, v50, v51, v52, v53, v54, v21);
    uint64_t v55 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v56 = sub_1001EDDCC();
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v70 = v56;
      _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  sub_1000E5534(a1, a3, v19, v21, a2);
  if (v19)
  {
    uint64_t v57 = (void *)v19;
LABEL_54:
    sub_1000B1838(v57);
  }

  return a2;
}

uint64_t sub_1000DF230(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v6 = a2;
  if (!a2) {
    sub_1001EE2A0();
  }
  if (sub_1000A86F0())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received GET CAPS - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  unsigned __int16 v60 = 0;
  if (!a4)
  {
    if (*(_BYTE *)(v6 + 14) != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3672,  "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(_BYTE *)(v6 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }

    else
    {
      uint64_t v21 = *(unsigned __int16 *)(v6 + 12);
      if (*(unsigned __int16 *)(v6 + 10) > v21)
      {
        uint64_t v22 = *(void *)v6;
        *(_WORD *)(v6 + 1pthread_attr_setdetachstate(&v7, 2) = v21 + 1;
        uint64_t v23 = *(unsigned __int8 *)(v22 + v21) >> 2;
        if (*(_BYTE *)(qword_1008DFDB0 + 96))
        {
          uint64_t v24 = 0LL;
          __int16 v25 = (unsigned __int8 *)(*(void *)qword_1008DFDB0 + 31LL);
          while (*(v25 - 6) != (_DWORD)v23)
          {
            v25 += 40;
          }

          if (v24 != 255)
          {
            if (*(v25 - 4) || !*(void *)(v25 - 23) || *(v25 - 3) == 1)
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134((uint64_t)"Returning Capabilities", v34, v35, v36, v37, v38, v39, v40, v59);
                uint64_t v41 = (os_log_s *)sub_100086554(3u);
                if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v42 = sub_1001EDDCC();
                  *(_DWORD *)__int128 buf = 136446210;
                  *(void *)&uint8_t buf[4] = v42;
                  _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }

              if (*(v25 - 1))
              {
                uint64_t v43 = 0LL;
                unint64_t v44 = 0LL;
                do
                {
                  sub_1000E3040(a1, *(void *)(v25 - 31) + v43);
                  ++v44;
                  unint64_t v45 = *(v25 - 1);
                  v43 += 16LL;
                }

                while (v44 < v45);
              }

              else
              {
                LODWORD(v45) = 0;
              }

              uint64_t v55 = *(unsigned __int8 **)(v25 - 31);
              unsigned int v56 = a1;
              unsigned int v57 = a3;
            }

            else
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"2-Play Source: Returning Config as Caps",  v46,  v47,  v48,  v49,  v50,  v51,  v52,  v59);
                uint64_t v53 = (os_log_s *)sub_100086554(3u);
                if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v54 = sub_1001EDDCC();
                  *(_DWORD *)__int128 buf = 136446210;
                  *(void *)&uint8_t buf[4] = v54;
                  _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }

              uint64_t v55 = *(unsigned __int8 **)(v25 - 23);
              LODWORD(v45) = *v25;
              unsigned int v56 = a1;
              unsigned int v57 = a3;
            }

            sub_1000E6010(v56, 2u, v57, v55, v45, 0);
            goto LABEL_57;
          }
        }

uint64_t sub_1000DF704(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (sub_1000A86F0())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received SET CONFIG - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      uint64_t v81 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!a2) {
    sub_1001EE2A0();
  }
  unsigned __int16 v77 = 0;
  if (!sub_1000D8A50(a1, &v77)
    || !sub_1000A86F0()
    || (sub_1001EE134( (uint64_t)"AVDTP did not find a2dp handle from CID with result %!",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  0LL),  uint64_t v24 = (os_log_s *)sub_100086554(3u),  !os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)))
  {
    if (a4) {
      goto LABEL_13;
    }
LABEL_47:
    if (*(_BYTE *)(a2 + 14) != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3804,  "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(_BYTE *)(a2 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
      int v43 = *(unsigned __int8 *)(a2 + 14);
      *(_BYTE *)(a2 + 15) = 1;
      if (v43 != 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3805,  "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
    }

    else
    {
      uint64_t v44 = *(unsigned __int16 *)(a2 + 12);
      if (*(unsigned __int16 *)(a2 + 10) > v44)
      {
        uint64_t v45 = *(void *)a2;
        *(_WORD *)(a2 + 1pthread_attr_setdetachstate(&v7, 2) = v44 + 1;
        uint64_t v46 = *(unsigned __int8 *)(v45 + v44) >> 2;
        if (*(unsigned __int16 *)(a2 + 10) > (v44 + 1))
        {
          uint64_t v47 = *(void *)a2;
          *(_WORD *)(a2 + 1pthread_attr_setdetachstate(&v7, 2) = v44 + 2;
          uint64_t v48 = *(unsigned __int8 *)(v47 + v44 + 1) >> 2;
          goto LABEL_57;
        }

uint64_t sub_1000DFE00(int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v47 = 0LL;
  unsigned __int8 v46 = 0;
  if (sub_1000A86F0())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received GET CONFIG - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446210;
      unsigned int v49 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (a2)
  {
    if (a4) {
      goto LABEL_9;
    }
  }

  else
  {
    sub_1001EE2A0();
    if (a4)
    {
LABEL_9:
      if (a4 != 3)
      {
        if (a4 == 2)
        {
          uint64_t v17 = sub_1000E4B00(a3, a1);
          if ((_DWORD)v17)
          {
            a2 = sub_1000DDDFC((uint64_t *)a2, &v47, &v46);
            uint64_t v18 = v47;
            uint64_t v19 = v46;
          }

          else
          {
            uint64_t v19 = 0LL;
            uint64_t v18 = 0LL;
            a2 = 18LL;
          }

          (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 56LL))( a3,  v17,  v18,  v19,  a2);
          sub_1000D88A0(&v47, v19);
        }

        else
        {
          LOBYTE(apthread_attr_setdetachstate(&v7, 2) = 0;
        }

        return a2;
      }

      uint64_t v20 = sub_1000E4B00(a3, a1);
      if ((_DWORD)v20)
      {
        if (*(_BYTE *)(a2 + 14) != 1) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4055,  "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*(_BYTE *)(a2 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }

        else
        {
          uint64_t v42 = *(unsigned __int16 *)(a2 + 12);
          if (*(unsigned __int16 *)(a2 + 10) > v42)
          {
            uint64_t v43 = *(void *)a2;
            *(_WORD *)(a2 + 1pthread_attr_setdetachstate(&v7, 2) = v42 + 1;
            char v44 = *(_BYTE *)(v43 + v42);
            if (v44) {
              LOBYTE(apthread_attr_setdetachstate(&v7, 2) = v44;
            }
            else {
              LOBYTE(apthread_attr_setdetachstate(&v7, 2) = 24;
            }
            goto LABEL_44;
          }
        }

        *(_BYTE *)(a2 + 15) = 1;
        LOBYTE(apthread_attr_setdetachstate(&v7, 2) = 17;
      }

      else
      {
        LOBYTE(apthread_attr_setdetachstate(&v7, 2) = 1;
      }