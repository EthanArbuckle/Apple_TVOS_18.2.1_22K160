uint64_t sub_1000E0220(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  os_log_s *v17;
  uint64_t v18;
  unsigned __int16 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void **v43;
  uint64_t v44;
  unsigned __int8 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v57)(uint64_t, uint64_t, unsigned __int8 *, uint64_t);
  uint64_t v58;
  unsigned __int8 v59;
  unsigned __int8 *v60;
  uint8_t buf[4];
  void *v62;
  v60 = 0LL;
  v59 = 0;
  if (!dword_1008F6F14) {
    return 49LL;
  }
  if (sub_1000A86F0())
  {
    v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received RECONFIGURE - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    v17 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v62 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!a2) {
    sub_1001EE2A0();
  }
  if (dword_1008F6F14 && (v18 = *(unsigned __int8 *)(qword_1008DFDB0 + 98), *(_BYTE *)(qword_1008DFDB0 + 98)))
  {
    v19 = (unsigned __int16 *)(*(void *)(qword_1008DFDB0 + 16) + 38LL);
    while (1)
    {
      v20 = *v19;
      v19 += 32;
      if (v20 == a1) {
        break;
      }
      if (!--v18) {
        goto LABEL_16;
      }
    }
  }

  else
  {
LABEL_16:
    sub_1001EE2A0();
  }

  if (!a4)
  {
    if (!*(void *)(*(void *)(qword_1008DFDB0 + 24) + 136LL))
    {
      v16 = 25LL;
      goto LABEL_76;
    }

    if (*(_BYTE *)(a2 + 14) != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  3970,  "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(_BYTE *)(a2 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }

    else
    {
      v35 = *(unsigned __int16 *)(a2 + 12);
      if (*(unsigned __int16 *)(a2 + 10) > v35)
      {
        v36 = *(void *)a2;
        *(_WORD *)(a2 + 12) = v35 + 1;
        v37 = *(unsigned __int8 *)(v36 + v35) >> 2;
        goto LABEL_45;
      }
    }

    v37 = 0;
    *(_BYTE *)(a2 + 15) = 1;
LABEL_45:
    v16 = sub_1000DDDFC((uint64_t *)a2, (void **)&v60, &v59);
    if (!(_DWORD)v16)
    {
      v38 = sub_1000E4C8C(v37, a1);
      if (v38
        && (v39 = v38, v40 = *(unsigned __int8 *)(v38 + 136), v40 != 255)
        && (v41 = *(void *)qword_1008DFDB0) != 0)
      {
        if (*(_BYTE *)(v38 + 134) == 3)
        {
          v42 = v41 + 40LL * *(unsigned __int8 *)(v38 + 136);
          v44 = *(void *)(v42 + 16);
          v43 = (void **)(v42 + 16);
          if (!v44)
          {
            v45 = v60;
            v46 = v59;
            if (!sub_1000DD278( v60,  v59,  *(void *)(v41 + 40LL * *(unsigned __int8 *)(v38 + 136) + 8),  *(unsigned __int8 *)(v41 + 40LL * *(unsigned __int8 *)(v38 + 136) + 31),  v43,  (_BYTE *)(v41 + 40LL * *(unsigned __int8 *)(v38 + 136) + 32)))
            {
              v58 = sub_1000DB7D8(v39);
              v57(a3, v58, v45, v46);
              v16 = 0LL;
              goto LABEL_77;
            }
          }

          v16 = 129LL;
        }

        else
        {
          v16 = 49LL;
        }

        v55 = v41 + 40LL * v40;
        sub_1000D88A0((void **)(v55 + 16), *(unsigned __int8 *)(v55 + 32));
        *(_BYTE *)(v55 + 32) = 0;
      }

      else
      {
        v16 = 20LL;
      }
    }

uint64_t sub_1000E0790(unsigned int a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  if (sub_1000A86F0())
  {
    v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received OPEN - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v66 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (a2)
  {
    if (a4) {
      goto LABEL_9;
    }
  }

  else
  {
    sub_1001EE2A0();
    if (a4)
    {
LABEL_9:
      if (a4 != 3)
      {
        if (a4 == 2)
        {
          uint64_t v17 = sub_1000E4B00(a3, a1);
          uint64_t v18 = v17;
          uint64_t v19 = qword_1008DFDB0;
          if (!(_DWORD)v17)
          {
            uint64_t v44 = 1LL;
            goto LABEL_43;
          }

          if (*(unsigned __int8 *)(qword_1008DFDB0 + 97) <= (unsigned __int16)(v17 - 1)
            || (uint64_t v20 = *(void *)(qword_1008DFDB0 + 8)) == 0)
          {
            uint64_t v44 = 18LL;
            goto LABEL_43;
          }

          unsigned int v21 = (unsigned __int16)(v17 - 1);
          uint64_t v22 = v20 + 144LL * (unsigned __int16)(v17 - 1);
          if (sub_1000A86F0())
          {
            unsigned int v23 = sub_1000DB7D8(v22);
            sub_1001EE134((uint64_t)"CreateMediaTransport(%d)\n", v24, v25, v26, v27, v28, v29, v30, v23);
            v31 = (os_log_s *)sub_100086554(3u);
            if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
            {
              v32 = sub_1001EDDCC();
              *(_DWORD *)buf = 136446210;
              v66 = v32;
              _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          uint64_t v33 = *(unsigned __int8 *)(v20 + 144LL * v21 + 135);
          uint64_t v19 = qword_1008DFDB0;
          if (v33 == 255 || (uint64_t v34 = *(void *)(qword_1008DFDB0 + 16)) == 0)
          {
LABEL_24:
            uint64_t v44 = 129LL;
LABEL_43:
            (*(void (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)(v19 + 24) + 64LL))( a3,  v18,  0LL,  v44);
            return v44;
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Opening media channel to %:\n",  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v34 + (v33 << 6) + 28);
            v42 = (os_log_s *)sub_100086554(3u);
            if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
            {
              v43 = sub_1001EDDCC();
              *(_DWORD *)buf = 136446210;
              v66 = v43;
              _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          if (sub_100174028( (uint64_t)sub_1000E3718,  (uint64_t)sub_1000E3928,  (uint64_t)sub_1000E3B30,  25,  v34 + (v33 << 6) + 28,  qword_1008DFDB0 + 64,  (_WORD *)(v20 + 144LL * v21 + 128),  (uint64_t)&unk_1008831A8))
          {
            uint64_t v19 = qword_1008DFDB0;
            goto LABEL_24;
          }

          sub_100171E24(*(unsigned __int16 *)(v20 + 144LL * v21 + 128), (uint64_t)sub_1000E4790);
          *(_BYTE *)(v20 + 144LL * v21 + 133) = a3;
          sub_1000DD6D8(v22, 2);
        }

        return 0LL;
      }

      uint64_t v45 = sub_1000E4B00(a3, a1);
      if (*((_BYTE *)a2 + 14) != 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4147,  "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      uint64_t v18 = v45;
      if (*((_BYTE *)a2 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
      }

      else
      {
        uint64_t v46 = *((unsigned __int16 *)a2 + 6);
        if (*((unsigned __int16 *)a2 + 5) > v46)
        {
          uint64_t v47 = *a2;
          *((_WORD *)a2 + 6) = v46 + 1;
          unsigned int v48 = *(unsigned __int8 *)(v47 + v46);
LABEL_37:
          if (!v48) {
            unsigned int v48 = 24;
          }
          if ((_DWORD)v18) {
            uint64_t v44 = v48;
          }
          else {
            uint64_t v44 = 1LL;
          }
          uint64_t v19 = qword_1008DFDB0;
          goto LABEL_43;
        }
      }

      *((_BYTE *)a2 + 15) = 1;
      unsigned int v48 = 17;
      goto LABEL_37;
    }
  }

  if (*((_BYTE *)a2 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4166,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*((_BYTE *)a2 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
  }

  else
  {
    uint64_t v49 = *((unsigned __int16 *)a2 + 6);
    if (*((unsigned __int16 *)a2 + 5) > v49)
    {
      uint64_t v50 = *a2;
      *((_WORD *)a2 + 6) = v49 + 1;
      uint64_t v51 = sub_1000E4C8C(*(unsigned __int8 *)(v50 + v49) >> 2, a1);
      uint64_t v52 = v51;
      if (v51 && *(_BYTE *)(v51 + 134) == 1)
      {
        sub_1000DD6D8(v51, 2);
        v53 = *(void (**)(uint64_t, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 72LL);
        uint64_t v54 = sub_1000DB7D8(v52);
        v53(a3, v54);
        uint64_t v44 = 0LL;
        if (!*(_BYTE *)(qword_1008DFDB0 + 103)) {
          return v44;
        }
      }

      else
      {
        uint64_t v44 = 49LL;
      }

      goto LABEL_50;
    }
  }

  uint64_t v52 = 0LL;
  *((_BYTE *)a2 + 15) = 1;
  uint64_t v44 = 17LL;
LABEL_50:
  if (sub_1000A86F0())
  {
    sub_1000DB7D8(v52);
    sub_1001EE134( (uint64_t)"AVDT_Open_Rsp\n\tTransaction=%d\n\tStreamHandle=%d\n\tError=0x%.2x\n",  v55,  v56,  v57,  v58,  v59,  v60,  v61,  a3);
    v62 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
    {
      v63 = sub_1001EDDCC();
      *(_DWORD *)buf = 136446210;
      v66 = v63;
      _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  sub_1000E50DC(a1, 6u, a3, v44);
  return v44;
}

uint64_t sub_1000E0CF0(unsigned int a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  if (sub_1000A86F0())
  {
    v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received START - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v49 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!a2) {
    sub_1001EE2A0();
  }
  unsigned __int8 v47 = 0;
  if (a4)
  {
    if (a4 != 3)
    {
      LOBYTE(v17) = 0;
      if (a4 == 2)
      {
        sub_1000E4D20(a3, a1, v50, &v47);
        uint64_t v18 = v47;
        if (v47)
        {
          sub_1000E4A78((__int16 *)v50, v47, 4);
          uint64_t v17 = 0LL;
        }

        else
        {
          uint64_t v17 = 1LL;
        }

        (*(void (**)(uint64_t, _OWORD *, uint64_t, void, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 104LL))( a3,  v50,  v18,  0LL,  v17);
      }

      return v17;
    }

    sub_1000E4D20(a3, a1, v50, &v47);
    uint64_t v21 = v47;
    if (v47)
    {
      if (*((_BYTE *)a2 + 14) != 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4233,  "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      if (*((_BYTE *)a2 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        int v22 = *((unsigned __int8 *)a2 + 14);
        *((_BYTE *)a2 + 15) = 1;
        if (v22 != 1) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4234,  "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        goto LABEL_54;
      }

      uint64_t v36 = *((unsigned __int16 *)a2 + 6);
      if (*((unsigned __int16 *)a2 + 5) <= v36)
      {
        *((_BYTE *)a2 + 15) = 1;
LABEL_54:
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        int v35 = 0;
        goto LABEL_55;
      }

      uint64_t v37 = *a2;
      *((_WORD *)a2 + 6) = v36 + 1;
      int v35 = *(unsigned __int8 *)(v37 + v36) >> 2;
      if (*((unsigned __int16 *)a2 + 5) <= (v36 + 1))
      {
LABEL_55:
        *((_BYTE *)a2 + 15) = 1;
LABEL_56:
        uint64_t v17 = 24LL;
        goto LABEL_57;
      }

      uint64_t v38 = *a2;
      *((_WORD *)a2 + 6) = v36 + 2;
      if (*(unsigned __int8 *)(v38 + v36 + 1) == 255)
      {
        uint64_t v17 = 255LL;
        goto LABEL_57;
      }

      if (!*(_BYTE *)(v38 + v36 + 1)) {
        goto LABEL_56;
      }
      uint64_t v17 = 253LL;
    }

    else
    {
      int v35 = 0;
      uint64_t v17 = 1LL;
    }

uint64_t sub_1000E121C(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (sub_1000A86F0())
  {
    v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received CLOSE - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v70 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (a2)
  {
    if (a4) {
      goto LABEL_9;
    }
LABEL_23:
    if (*(_BYTE *)(a2 + 14) != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4385,  "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(_BYTE *)(a2 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }

    else
    {
      uint64_t v46 = *(unsigned __int16 *)(a2 + 12);
      if (*(unsigned __int16 *)(a2 + 10) > v46)
      {
        uint64_t v47 = *(void *)a2;
        *(_WORD *)(a2 + 12) = v46 + 1;
        uint64_t v48 = sub_1000E4C8C(*(unsigned __int8 *)(v47 + v46) >> 2, a1);
        uint64_t v49 = v48;
        if (v48)
        {
          if (*(unsigned __int8 *)(v48 + 134) - 3 <= 1)
          {
            if (*(_WORD *)(v48 + 128)) {
              sub_1000DD6D8(v48, 5);
            }
            else {
              sub_1000DC6BC(v48);
            }
            uint64_t v61 = qword_1008DFDB0;
            if (!*(_BYTE *)(qword_1008DFDB0 + 103))
            {
              LOBYTE(a2) = 0;
              goto LABEL_47;
            }

            LODWORD(a2) = 0;
            int v51 = 1;
LABEL_42:
            if (sub_1000A86F0())
            {
              sub_1000DB7D8(v49);
              sub_1001EE134( (uint64_t)"AVDT_Close_Rsp\n\tTransaction=%d\n\tStreamHandle=%d\n\tErrorCode=0x%.2x\n",  v52,  v53,  v54,  v55,  v56,  v57,  v58,  a3);
              uint64_t v59 = (os_log_s *)sub_100086554(3u);
              if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v60 = sub_1001EDDCC();
                *(_DWORD *)buf = 136446210;
                v70 = v60;
                _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }

            sub_1000E50DC(a1, 8u, a3, a2);
            if (!v51) {
              return a2;
            }
            uint64_t v61 = qword_1008DFDB0;
LABEL_47:
            v62 = *(void (**)(uint64_t, uint64_t))(*(void *)(v61 + 24) + 80LL);
            uint64_t v63 = sub_1000DB7D8(v49);
            v62(a3, v63);
            return a2;
          }

          int v50 = 49;
        }

        else
        {
          int v50 = 18;
        }

uint64_t sub_1000E1740(unsigned int a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  if (sub_1000A86F0())
  {
    v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received SUSPEND - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v41 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!a2) {
    sub_1001EE2A0();
  }
  buf[0] = 0;
  if (a4)
  {
    if (a4 != 3)
    {
      LOBYTE(v17) = 0;
      if (a4 == 2)
      {
        sub_1000E4D20(a3, a1, v42, buf);
        uint64_t v18 = buf[0];
        if (buf[0])
        {
          sub_1000E4A78((__int16 *)v42, buf[0], 3);
          uint64_t v17 = 0LL;
        }

        else
        {
          uint64_t v17 = 1LL;
        }

        if (v23) {
          v23(a3, v42, v18, 0LL, v17);
        }
      }

      return v17;
    }

    sub_1000E4D20(a3, a1, v42, buf);
    uint64_t v21 = buf[0];
    if (!buf[0])
    {
      int v27 = 0;
      LOBYTE(v17) = 1;
      goto LABEL_42;
    }

    if (*((_BYTE *)a2 + 14) != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4459,  "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((_BYTE *)a2 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
      int v22 = *((unsigned __int8 *)a2 + 14);
      *((_BYTE *)a2 + 15) = 1;
      if (v22 != 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4460,  "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
    }

    else
    {
      uint64_t v28 = *((unsigned __int16 *)a2 + 6);
      if (*((unsigned __int16 *)a2 + 5) > v28)
      {
        uint64_t v29 = *a2;
        uint64_t v30 = v28 + 1;
        *((_WORD *)a2 + 6) = v28 + 1;
        int v27 = *(unsigned __int8 *)(v29 + v28) >> 2;
        if (*((unsigned __int16 *)a2 + 5) > (v28 + 1))
        {
          uint64_t v31 = *a2;
          *((_WORD *)a2 + 6) = v28 + 2;
          if (*(_BYTE *)(v31 + v30)) {
            LOBYTE(v17) = *(_BYTE *)(v31 + v30);
          }
          else {
            LOBYTE(v17) = 24;
          }
LABEL_42:
          if (v32)
          {
            uint64_t v33 = sub_1000E4D84(v27, a1);
            v32(a3, v42, v21, v33, v17);
          }

          return v17;
        }

uint64_t sub_1000E1C50(int a1, uint64_t a2, uint64_t a3)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Received TRANSITION", v5, v6, v7, v8, v9, v10, v11, v17);
    uint64_t v12 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  __int128 v24 = 0u;
  memset(v25, 0, sizeof(v25));
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  *(_OWORD *)buf = 0u;
  unsigned __int8 v18 = 0;
  sub_1000E4D20(a3, a1, buf, &v18);
  uint64_t v13 = v18;
  if (v18)
  {
    sub_1000E4A78((__int16 *)buf, v18, 3);
    uint64_t v14 = 0LL;
  }

  else
  {
    uint64_t v14 = 1LL;
  }

  v15 = *(void (**)(uint64_t, uint8_t *, uint64_t, void, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 128LL);
  if (v15) {
    v15(a3, buf, v13, 0LL, v14);
  }
  return v14;
}

uint64_t sub_1000E1D9C(unsigned int a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  if (sub_1000A86F0())
  {
    v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received ABORT - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v81 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (a2)
  {
    if (a4) {
      goto LABEL_9;
    }
LABEL_15:
    if (*(_BYTE *)(qword_1008DFDB0 + 103)) {
      sub_1000E50DC(a1, 0xAu, a3, 0);
    }
    if (*((_BYTE *)a2 + 14) != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4660,  "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((_BYTE *)a2 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }

    else
    {
      uint64_t v63 = *((unsigned __int16 *)a2 + 6);
      if (*((unsigned __int16 *)a2 + 5) > v63)
      {
        uint64_t v64 = *a2;
        *((_WORD *)a2 + 6) = v63 + 1;
        uint64_t v65 = sub_1000E4C8C(*(unsigned __int8 *)(v64 + v63) >> 2, a1);
        if (!v65) {
          return 18LL;
        }
        uint64_t v66 = v65;
        sub_1000DD6D8(v65, 6);
        uint64_t v67 = sub_1000DB7D8(v66);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 168LL))(a3, v67);
        if (*(_BYTE *)(qword_1008DFDB0 + 103))
        {
          uint64_t v68 = sub_1001759FC(*(unsigned __int16 *)(v66 + 128), 436LL);
          if ((_DWORD)v68)
          {
            if (*(_WORD *)(v66 + 128))
            {
              uint64_t v69 = v68;
              if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"Error disconnecting media transport - %!",  v70,  v71,  v72,  v73,  v74,  v75,  v76,  v69);
                v77 = (os_log_s *)sub_100086554(3u);
                if (os_log_type_enabled(v77, OS_LOG_TYPE_ERROR)) {
                  sub_100657858();
                }
              }

              *(_WORD *)(v66 + 128) = 0;
              sub_1000B90AC(0LL);
            }

            sub_1000DC6BC(v66);
            (*(void (**)(uint64_t, uint64_t, void))(*(void *)(qword_1008DFDB0 + 24) + 176LL))(a3, v67, 0LL);
          }
        }

        return 0LL;
      }
    }

    *((_BYTE *)a2 + 15) = 1;
    return 17LL;
  }

  sub_1001EE2A0();
  if (!a4) {
    goto LABEL_15;
  }
LABEL_9:
  if (a4 == 2) {
    goto LABEL_27;
  }
  if (a4 != 3) {
    return 0LL;
  }
  if (*((_BYTE *)a2 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4582,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*((_BYTE *)a2 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
  }

  else
  {
    uint64_t v17 = *((unsigned __int16 *)a2 + 6);
    if (*((unsigned __int16 *)a2 + 5) > v17)
    {
      uint64_t v18 = *a2;
      *((_WORD *)a2 + 6) = v17 + 1;
      uint64_t v19 = *(unsigned __int8 *)(v18 + v17);
      if ((_DWORD)v19 == 255) {
        goto LABEL_27;
      }
      goto LABEL_24;
    }
  }

  *((_BYTE *)a2 + 15) = 1;
  uint64_t v19 = 17LL;
LABEL_24:
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Remote Abort Reject RXed (illegal) - %d", v20, v21, v22, v23, v24, v25, v26, v19);
    int v27 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_1000E22E4(unsigned int a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  if (sub_1000A86F0())
  {
    v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received SECURITY CONTROL - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v49 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (a2)
  {
    if (a4) {
      goto LABEL_9;
    }
  }

  else
  {
    sub_1001EE2A0();
    if (a4)
    {
LABEL_9:
      if (a4 != 3)
      {
        if (a4 == 2)
        {
          uint64_t v17 = sub_1000E4B00(a3, a1);
          uint64_t v18 = (_DWORD)v17 == 0;
          if (v19)
          {
            uint64_t v20 = v17;
            uint64_t v21 = *((unsigned __int16 *)a2 + 6);
            uint64_t v22 = *a2 + v21;
            if (*((_BYTE *)a2 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
              unsigned __int16 v23 = 0;
            }

            else
            {
              unsigned __int16 v23 = *((_WORD *)a2 + 5) - v21;
            }

            v19(a3, v20, v22, v23, v18);
          }

          return v18;
        }

LABEL_48:
        LOBYTE(v18) = 0;
        return v18;
      }

      uint64_t v25 = sub_1000E4B00(a3, a1);
      if (!(_DWORD)v25)
      {
        LOBYTE(v18) = 1;
        goto LABEL_32;
      }

      if (*((_BYTE *)a2 + 14) != 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4737,  "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      if (*((_BYTE *)a2 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
      }

      else
      {
        uint64_t v27 = *((unsigned __int16 *)a2 + 6);
        if (*((unsigned __int16 *)a2 + 5) > v27)
        {
          uint64_t v28 = *a2;
          *((_WORD *)a2 + 6) = v27 + 1;
          char v29 = *(_BYTE *)(v28 + v27);
          if (v29) {
            LOBYTE(v18) = v29;
          }
          else {
            LOBYTE(v18) = 24;
          }
LABEL_32:
          if (v30) {
            v30(a3, v25, 0LL, 0LL, v18);
          }
          return v18;
        }
      }

      *((_BYTE *)a2 + 15) = 1;
      LOBYTE(v18) = 17;
      goto LABEL_32;
    }
  }

  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(qword_1008DFDB0 + 24) + 152LL);
  if (v24)
  {
    if (*((_BYTE *)a2 + 14) != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4760,  "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((_BYTE *)a2 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }

    else
    {
      uint64_t v31 = *((unsigned __int16 *)a2 + 6);
      if (*((unsigned __int16 *)a2 + 5) > v31)
      {
        uint64_t v32 = *a2;
        *((_WORD *)a2 + 6) = v31 + 1;
        uint64_t v33 = sub_1000E4C8C(*(unsigned __int8 *)(v32 + v31) >> 2, a1);
        uint64_t v26 = v33;
        if (v33)
        {
          if (*(_BYTE *)(v33 + 134))
          {
            uint64_t v34 = sub_1000DB7D8(v33);
            uint64_t v35 = *((unsigned __int16 *)a2 + 6);
            uint64_t v36 = *a2 + v35;
            if (*((_BYTE *)a2 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
              unsigned __int16 v37 = 0;
            }

            else
            {
              unsigned __int16 v37 = *((_WORD *)a2 + 5) - v35;
            }

            v24(a3, v34, v36, v37);
            goto LABEL_48;
          }

          LODWORD(v18) = 49;
        }

        else
        {
          LODWORD(v18) = 18;
        }

        goto LABEL_40;
      }
    }

    uint64_t v26 = 0LL;
    *((_BYTE *)a2 + 15) = 1;
    LODWORD(v18) = 17;
  }

  else
  {
    uint64_t v26 = 0LL;
    LODWORD(v18) = 25;
  }

        if (v19 == 3301) {
          uint64_t v17 = 8;
        }
        else {
          uint64_t v17 = 10;
        }
        goto LABEL_51;
      }

      if (v6 == 49)
      {
        uint64_t v61 = -249;
        v62 = -1;
        uint64_t v58 = 822550272LL;
        uint64_t v59 = &v61;
        uint64_t v60 = 5LL;
        if (*((_WORD *)a3 + 8) == 5 && ((uint64_t v48 = **((unsigned __int8 **)a3 + 1), v48 == 255) || v48 == 7))
        {
          LOBYTE(v58) = 12;
          BYTE1(v61) = 72;
        }

        else
        {
          LOBYTE(v58) = 10;
        }
      }

      else
      {
        if (v6 != 48) {
          return;
        }
        LOWORD(v61) = 18439;
        uint64_t v58 = 805773068LL;
        uint64_t v59 = &v61;
        uint64_t v60 = 5LL;
        uint64_t v28 = *(void *)(qword_1008F29A0 + 24);
        HIWORD(v61) = *(_WORD *)(v28 + 16);
        v62 = *(_BYTE *)(v28 + 18);
      }

      uint64_t v30 = sub_1000E7E40(a1, a2, (unsigned __int8 *)&v58);
LABEL_44:
      uint64_t v19 = v30;
      if (!v30) {
        return;
      }
      goto LABEL_45;
    }

    if (v6 != 124) {
      return;
    }
    char v29 = *((unsigned __int16 *)a3 + 8);
    if (*((_WORD *)a3 + 8) && (**((_BYTE **)a3 + 1) & 0x7F) == 0x7E)
    {
      uint64_t v30 = sub_1000ECE48(a1, a2, (uint64_t)a3);
      goto LABEL_44;
    }

    if (a3[1] != 9 || a3[2])
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Rejecting PASS THROUGH command directed at subunit <%d,%d>",  v39,  v40,  v41,  v42,  v43,  v44,  v45,  a3[1]);
        uint64_t v46 = (os_log_s *)sub_100086554(4u);
        if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      *a3 = 10;
      sub_1000E7E40(a1, a2, (unsigned __int8 *)a3);
      char v29 = *((unsigned __int16 *)a3 + 8);
    }

    if (v29 >= 2)
    {
      uint64_t v47 = (unsigned __int8 *)*((void *)a3 + 1);
      if (!v47[1])
      {
        (**(void (***)(uint64_t, uint64_t, void))(qword_1008F29A0 + 16))(a1, a2, *v47);
        return;
      }
    }

    if (!v10) {
      goto LABEL_52;
    }
    goto LABEL_49;
  }

  if (v10 || (_DWORD)a4 != 0) {
    goto LABEL_48;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"OI_HCIEventHandler_ConnectionComplete - unknown SCO connection (%:)",  v23,  v24,  v25,  v26,  v27,  v28,  v29,  v7 + 48);
    uint64_t v30 = (os_log_s *)sub_100086554(0x3Eu);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
    {
      sub_100657858();
      if (v7) {
        goto LABEL_45;
      }
      goto LABEL_44;
    }
  }

  if (!v7) {
LABEL_44:
  }
    sub_1001EE2A0();
LABEL_45:
  uint64_t v31 = sub_10010C9D4(v7);
  if (!(_DWORD)v31) {
    goto LABEL_48;
  }
  uint64_t v32 = v31;
  sub_1001EE134((uint64_t)"OI_LP_ConnectionAdded failed: %! (%d)", v33, v34, v35, v36, v37, v38, v39, v32);
  uint64_t v40 = (os_log_s *)sub_100086554(0x3Eu);
  if (!os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
    goto LABEL_48;
  }
  sub_100657858();
  if (!v10) {
    goto LABEL_52;
  }
LABEL_49:
  if (HIBYTE(word_1008E2239)) {
    HIBYTE(word_1008E2239) = 0;
  }
  else {
    LOBYTE(word_1008E2239) = 0;
  }
LABEL_52:
  if (v7) {
    uint64_t v41 = *(void (***)(uint64_t, uint64_t, uint64_t))(v7 + 80);
  }
  else {
    uint64_t v41 = 0LL;
  }
  if (!v41) {
    uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t))qword_1008E2218;
  }
  if (v41)
  {
    uint64_t v42 = *v41;
    if (v42)
    {
      if ((_DWORD)a4 && HIBYTE(word_1008E2239) == 1) {
        goto LABEL_66;
      }
      if (v7) {
        uint64_t v43 = v7 + 48;
      }
      else {
        uint64_t v43 = 0LL;
      }
      v42(a4, a1, v43);
    }
  }

  if ((_DWORD)a4) {
LABEL_66:
  }
    sub_10012E320((unsigned __int16 *)a1);
}

            uint64_t v20 = 0LL;
            uint64_t v31 = *a3;
            *((_WORD *)a3 + 6) = v21 + 1;
            *(_DWORD *)a1 = *(unsigned __int8 *)(v31 + v21);
            goto LABEL_80;
          case '2':
            if (v14 < 2) {
              goto LABEL_64;
            }
            if (*((_BYTE *)a3 + 14) != 1)
            {
              uint64_t v51 = "(*pBs).__RWFlag == BYTESTREAM_READ";
              goto LABEL_124;
            }

            if (*((_BYTE *)a3 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_123:
              uint64_t v51 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_124:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  374,  v51);
            }

            uint64_t v32 = *((unsigned __int16 *)a3 + 6);
            uint64_t v20 = 0LL;
            uint64_t v33 = *(unsigned __int16 *)(*a3 + v32);
            *((_WORD *)a3 + 6) = v32 + 2;
            *(_DWORD *)a1 = v33;
            break;
          case '3':
            if (v14 < 3) {
              goto LABEL_64;
            }
            if (*((_BYTE *)a3 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_126:
              uint64_t v52 = "ByteStream_NumReadBytesAvail(*pBs) >= 3";
LABEL_128:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  384,  v52);
            }

            uint64_t v34 = *((unsigned __int16 *)a3 + 6);
            if (*((_BYTE *)a3 + 14) != 1)
            {
              uint64_t v52 = "(*pBs).__RWFlag == BYTESTREAM_READ";
              goto LABEL_128;
            }

            uint64_t v20 = 0LL;
            *(_DWORD *)a1 = *(unsigned __int16 *)(*a3 + v34) | (*(unsigned __int8 *)(*a3 + v34 + 2) << 16);
            unsigned __int16 v23 = *((_WORD *)a3 + 6) + 3;
LABEL_71:
            *((_WORD *)a3 + 6) = v23;
            goto LABEL_80;
          case '4':
            if (v14 < 4) {
              goto LABEL_64;
            }
            if (*((_BYTE *)a3 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_130:
              uint64_t v53 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
LABEL_132:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  393,  v53);
            }

            uint64_t v35 = *((unsigned __int16 *)a3 + 6);
            if (*((_BYTE *)a3 + 14) != 1)
            {
              uint64_t v53 = "(*pBs).__RWFlag == BYTESTREAM_READ";
              goto LABEL_132;
            }

            uint64_t v20 = 0LL;
            *(_DWORD *)a1 = *(_DWORD *)(*a3 + v35);
            unsigned __int16 v23 = *((_WORD *)a3 + 6) + 4;
            goto LABEL_71;
          case '8':
            if (v14 < 8) {
              goto LABEL_72;
            }
            *(void *)a1 = *a3 + *((unsigned __int16 *)a3 + 6);
            if (*((_BYTE *)a3 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_134:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  495,  "ByteStream_NumReadBytesAvail(*pBs) >= (8)");
            }

            uint64_t v24 = *((unsigned __int16 *)a3 + 6);
LABEL_70:
            uint64_t v20 = 0LL;
            unsigned __int16 v23 = v24 + 8;
            goto LABEL_71;
          default:
            goto LABEL_93;
        }

        goto LABEL_80;
    }
  }

    *a3 = v21;
    return v5;
  }

  if (v11)
  {
    *a3 = a4;
  }

  else
  {
    *a3 = a2;
    return a2 + 1;
  }

  return a4;
}

      goto LABEL_15;
    }
  }

  uint64_t v19 = (os_log_s *)qword_1008F7628;
  if (os_log_type_enabled((os_log_t)qword_1008F7628, OS_LOG_TYPE_INFO))
  {
    LOWORD(__p[0]) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "Received GATT indication for unregistered central session",  (uint8_t *)__p,  2u);
  }

    *a3 = v21;
    return v5;
  }

  if (v11)
  {
    *a3 = a4;
  }

  else
  {
    *a3 = a2;
    return a2 + 1;
  }

  return a4;
}

        if (v10 != a3) {
          *(_OWORD *)&v10->__r_.__value_.__l.__data_ = *(_OWORD *)&a3->__r_.__value_.__l.__data_;
        }
        goto LABEL_50;
      }

      if (!memcmp(*p_data, p_str, a1[10].__r_.__value_.__l.__size_)) {
        goto LABEL_48;
      }
    }
  }

  unsigned __int16 v23 = sub_1003D2E50(a1, &v36, 4u);
LABEL_49:
  uint64_t v5 = v17 | v23;
  uint64_t v24 = (os_log_s *)qword_1008F7578;
  if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v25 = (_DWORD)v5 ? "" : "not ";
    sub_1003CF00C(a1, __p);
    uint64_t v26 = v38 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)buf = 136315906;
    *(void *)&uint8_t buf[4] = v25;
    *(_WORD *)&buf[12] = 2082;
    *(void *)&buf[14] = v26;
    *(_WORD *)&buf[22] = 1024;
    *(_DWORD *)&buf[24] = v17;
    *(_WORD *)&buf[28] = 1024;
    *(_DWORD *)&buf[30] = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Classic GATT service is %ssupported for device %{public}s. appleDeviceAllowedForCatt %d, nonAppleWithSdpAttribute %d",  buf,  0x22u);
    if (v38 < 0) {
      operator delete(__p[0]);
    }
  }

  uint64_t v47 = 0LL;
  uint64_t v46 = 0u;
  memset(v45, 0, sizeof(v45));
  uint64_t v43 = 0u;
  *(_OWORD *)uint64_t v44 = 0u;
  *(_OWORD *)uint64_t v42 = 0u;
  memset(buf, 0, sizeof(buf));
  sub_100532DC0((uint64_t)&buf[1]);
  buf[18] = 0;
  buf[20] = 0;
  BYTE2(v42[0]) = 0;
  BYTE4(v42[0]) = 0;
  DWORD1(v45[1]) = 0;
  memset(&buf[24], 0, 24);
  LOBYTE(v42[0]) = 0;
  uint64_t v43 = 0uLL;
  v42[1] = 0LL;
  LOBYTE(v44[0]) = 0;
  memset(v45, 0, 19);
  v44[1] = 0LL;
  BYTE8(v45[1]) = 1;
  BYTE2(v47) = 0;
  *(void *)((char *)&v45[1] + 14) = 0LL;
  *(void *)((char *)&v45[1] + 9) = 0LL;
  uint64_t v46 = 0uLL;
  *((void *)&v45[2] + 1) = 0LL;
  LOBYTE(v47) = 0;
  uint64_t v27 = sub_1003D2408(a1, (uint64_t)buf);
  if (BYTE12(v46)) {
    uint64_t v28 = v27;
  }
  else {
    uint64_t v28 = 0;
  }
  char v29 = sub_1003D3064(a1);
  __p[0] = 0LL;
  __p[1] = 0LL;
  sub_100242F28((uint64_t)__p, a1);
  uint64_t v30 = *(_DWORD *)(a1 + 176);
  sub_100242FAC((uint64_t)__p);
  uint64_t v32 = (v30 == 22 || v30 == 17) && *(_BYTE *)(a1 + 1068) == 0;
  if (((v28 | v29) & 1) != 0 || v32)
  {
    uint64_t v33 = (os_log_s *)qword_1008F7578;
    uint64_t v5 = 0LL;
    if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT))
    {
      sub_1003CF00C(a1, __p);
      if (v38 >= 0) {
        uint64_t v34 = __p;
      }
      else {
        uint64_t v34 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t v39 = 136446210;
      uint64_t v40 = v34;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "Override CATT feature to disable for %{public}s",  v39,  0xCu);
      if (v38 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v5 = 0LL;
    }
  }

  if (SHIBYTE(v45[0]) < 0) {
    operator delete(v44[1]);
  }
  if (SHIBYTE(v43) < 0) {
    operator delete(v42[1]);
  }
  nullsub_63(&buf[1], v31);
  return v5;
}

            char v29 = 0;
            goto LABEL_49;
          }

    *a3 = v21;
    return v5;
  }

  if (v11)
  {
    *a3 = a4;
  }

  else
  {
    *a3 = a2;
    return a2 + 1;
  }

  return a4;
}

    *a3 = v21;
    return v5;
  }

  if (v11)
  {
    *a3 = a4;
  }

  else
  {
    *a3 = a2;
    return a2 + 1;
  }

  return a4;
}

  if (sub_10020755C(a2 + 400) == 256 || sub_10020755C(a2 + 400) == 127 || v4)
  {
    uint64_t v26 = HIWORD(v43);
    else {
      uint64_t v27 = 60;
    }
    if (v27 <= v26)
    {
      if (!sub_1002075D4(a2 + 400))
      {
        uint64_t v30 = 60;
        goto LABEL_66;
      }

      goto LABEL_60;
    }

    *a3 = v21;
    return v5;
  }

  if (v11)
  {
    *a3 = a4;
  }

  else
  {
    *a3 = a2;
    return a2 + 1;
  }

  return a4;
}

  uint64_t v18 = sub_1002E6E00();
  sub_10002418C(buf, "LE");
  sub_10002418C(__p, "LeConnectionLatencyMediumMaxInterval");
  uint64_t v19 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, int *))(*(void *)v18 + 88LL))(v18, buf, __p, &v95);
  if (v93 < 0) {
    operator delete(__p[0]);
  }
  if (v100 < 0)
  {
    operator delete(*(void **)buf);
    if (!v19) {
      goto LABEL_59;
    }
  }

  else if (!v19)
  {
    goto LABEL_59;
  }

  uint64_t v20 = v95;
  uint64_t v21 = (os_log_s *)qword_1008F7620;
  if ((v95 - 8) >= 0xF9A && os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v20;
    _os_log_fault_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_FAULT,  "Override rejected latency maxInterval:%d LeConnectionLatencyMedium",  buf,  8u);
    LOWORD(v20) = v95;
    uint64_t v21 = (os_log_s *)qword_1008F7620;
  }

  *(_WORD *)(a1 + 1088) = v20;
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = (unsigned __int16)v20;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Override latency maxInterval:%d LeConnectionLatencyMedium",  buf,  8u);
  }

      uint64_t v41 = (unsigned __int8 *)*((void *)v6 + 1);
      if (v41)
      {
        do
        {
          uint64_t v42 = (const unsigned __int8 **)v41;
          uint64_t v41 = *(unsigned __int8 **)v41;
        }

        while (v41);
      }

      else
      {
        do
        {
          uint64_t v42 = (const unsigned __int8 **)*((void *)v6 + 2);
          uint64_t v43 = *v42 == v6;
          uint64_t v6 = (const unsigned __int8 *)v42;
        }

        while (!v43);
      }

      uint64_t v6 = (const unsigned __int8 *)v42;
    }

    uint64_t v19 = v64;
LABEL_26:
    uint64_t v71 = v19;
    goto LABEL_27;
  }

  uint64_t v65 = 0;
  uint64_t v8 = 0.0;
LABEL_56:
  uint64_t v44 = sub_1001FD17C(v75, (uint64_t)"now:", 4LL);
  v90 = 0u;
  memset(v89, 0, sizeof(v89));
  snprintf((char *)v89, 0x3FuLL, "%0llu.%0llu", v67, v66);
  uint64_t v45 = &v69;
  sub_10002418C(&v69, (char *)v89);
  if ((v69.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    uint64_t v45 = (std::stringbuf::string_type *)v69.__r_.__value_.__r.__words[0];
  }
  uint64_t v46 = strlen((const char *)v45);
  uint64_t v47 = sub_1001FD17C(v44, (uint64_t)v45, v46);
  sub_1001FD17C(v47, (uint64_t)" duration:", 10LL);
  uint64_t v48 = (void *)std::ostream::operator<<(v8);
  sub_1001FD17C(v48, (uint64_t)"sec", 3LL);
  uint64_t v49 = (os_log_s *)qword_1008F7620;
  if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
  {
    std::stringbuf::str(&v69, (const std::stringbuf *)((char *)v75 + 8));
    uint64_t v50 = (char)v69.__r_.__value_.__s.__size_;
    uint64_t v51 = v69.__r_.__value_.__r.__words[0];
    std::stringbuf::str(&__p, (const std::stringbuf *)((char *)v83 + 8));
    uint64_t v52 = &v69;
    if (v50 < 0) {
      uint64_t v52 = (std::stringbuf::string_type *)v51;
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v53 = &__p;
    }
    else {
      uint64_t v53 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)v89 = 67109634;
    *(_DWORD *)&v89[4] = v65 & 1;
    *(_WORD *)&v89[8] = 2082;
    *(void *)&v89[10] = v52;
    *(_WORD *)&v89[18] = 2082;
    *(void *)&v89[20] = v53;
    _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEFAULT,  "shouldEnableFastConnectionScan:%d %{public}s%{public}s",  v89,  0x1Cu);
  }

  if (*(_DWORD *)(a1 + 864) != 1 || !*(void *)(a1 + 352)) {
    goto LABEL_74;
  }
  LOWORD(v69.__r_.__value_.__l.__data_) = 0;
  LOWORD(__p.__r_.__value_.__l.__data_) = 0;
  LOWORD(v72) = 0;
  LOBYTE(v71) = 0;
  sub_1005AC4A0(a1, &v69, (unsigned __int16 *)&__p, &v72, (unsigned __int8 *)&v71);
  uint64_t v70 = 0;
  sub_100242CA4(&v70);
  data_low = LOWORD(v69.__r_.__value_.__l.__data_);
  uint64_t v55 = LOWORD(__p.__r_.__value_.__l.__data_);
  uint64_t v56 = sub_1001ABA08(LOWORD(v69.__r_.__value_.__l.__data_), LOWORD(__p.__r_.__value_.__l.__data_));
  sub_100242CD0(&v70);
  if (v56)
  {
    sub_100242CD8(&v70);
LABEL_74:
    if ((v65 & 1) != 0)
    {
      if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEBUG)) {
        sub_100699ADC();
      }
      if (*(void *)(a1 + 352) && *(_BYTE *)(a1 + 184) && v8 > 0.0)
      {
        sub_1005AAF2C(a1);
        uint64_t v57 = (os_log_s *)qword_1008F7620;
        if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)v89 = 134217984;
          *(double *)&v89[4] = v8;
          _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEFAULT,  "Setting scan level expiration %f ms from now",  v89,  0xCu);
        }

        sub_1005AB004(a1, v8);
      }
    }

    else if (*(void *)(a1 + 896))
    {
      sub_10059172C(a1);
      if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEBUG)) {
        sub_100699B40();
      }
      if (*(_DWORD *)(a1 + 864) == 1 && *(void *)(a1 + 352))
      {
        uint64_t v58 = (os_log_s *)qword_1008F7620;
        if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v89 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEFAULT,  "Reducing connection timing for current connections",  v89,  2u);
        }

        sub_100590B30(a1, 0);
      }
    }

    goto LABEL_94;
  }

  uint64_t v59 = (os_log_s *)qword_1008F7620;
  if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)v89 = 67109376;
    *(_DWORD *)&v89[4] = v55;
    *(_WORD *)&v89[8] = 1024;
    *(_DWORD *)&v89[10] = data_low;
    _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEFAULT,  "Cancelling connections due to connection scan params: window - 0x%x, interval - 0x%x",  v89,  0xEu);
  }

  sub_100590B30(a1, 0);
  sub_100242CD8(&v70);
LABEL_94:
                            - 24LL)] = v62;
  *(void *)&v83[0] = v61;
  if (SHIBYTE(v85) < 0) {
    operator delete(v84[1]);
  }
  std::streambuf::~streambuf((char *)v83 + 8);
  std::ios::~ios(v87);
  *(void *)&uint64_t v74 = v60;
  *(void *)((char *)&v75[-1] + *(void *)(v60 - 24)) = v62;
  *(void *)&v75[0] = v61;
  if (SHIBYTE(v77) < 0) {
    operator delete(v76[1]);
  }
  std::streambuf::~streambuf((char *)v75 + 8);
  std::ios::~ios(v79);
  return sub_100242FAC((uint64_t)v81);
}

    *a3 = v21;
    return v5;
  }

  if (v11)
  {
    *a3 = a4;
  }

  else
  {
    *a3 = a2;
    return a2 + 1;
  }

  return a4;
}

    sub_100242CD0(&v36);
    sub_100242CD8(&v36);
LABEL_49:
    uint64_t v33 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_string(v33, "kWCMBTAudioConfiguration_Address", v15);
    xpc_dictionary_set_uint64(v33, "kWCMBTAudioConfiguration_ConnectionState", a7);
    xpc_dictionary_set_uint64(v33, "kWCMBTAudioConfiguration_Type", a3);
    if (a4 != 0x10000 && a4 != 0x400000)
    {
      xpc_dictionary_set_uint64(v33, "kWCMBTAudioConfiguration_Role", v17);
      xpc_dictionary_set_uint64(v33, "kWCMBTAudioConfiguration_PacketType", v18);
    }

    uint64_t v34 = (os_log_s *)qword_1008F7580;
    if (os_log_type_enabled((os_log_t)qword_1008F7580, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136316930;
      *(void *)&uint8_t buf[4] = v15;
      uint64_t v43 = 1024;
      *(_DWORD *)uint64_t v44 = a7;
      *(_WORD *)&v44[4] = 2048;
      *(void *)&v44[6] = a3;
      uint64_t v45 = 1024;
      uint64_t v46 = a4;
      uint64_t v47 = 1024;
      uint64_t v48 = a5;
      uint64_t v49 = 1024;
      uint64_t v50 = a6;
      uint64_t v51 = 2048;
      uint64_t v52 = v17;
      uint64_t v53 = 2048;
      uint64_t v54 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "Sending Audio Config: Address: %s, Connection: %d, Type: %llu, ServiceId: %u, Event: %u, Result: %d, Role: %llu, PacketType: %llu",  buf,  0x42u);
    }

    sub_10064F4EC(a1, 0x1F5uLL, v33);
    xpc_release(v33);
    return;
  }

  if (a5 != 101)
  {
    if (a5 == 102)
    {
      uint64_t v20 = *(void **)(a1 + 432);
      if (!v20) {
        goto LABEL_27;
      }
      uint64_t v21 = a1 + 432;
      do
      {
        uint64_t v22 = v20[4];
        unsigned __int16 v23 = v22 >= v41;
        if (v22 >= v41) {
          uint64_t v24 = v20;
        }
        else {
          uint64_t v24 = v20 + 1;
        }
        if (v23) {
          uint64_t v21 = (uint64_t)v20;
        }
        uint64_t v20 = (void *)*v24;
      }

      while (*v24);
      if (v21 != a1 + 432 && v41 >= *(void *)(v21 + 32))
      {
        *(void *)buf = &v41;
        uint64_t v18 = sub_100029574((uint64_t **)(a1 + 424), &v41, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[5];
        uint64_t v32 = (os_log_s *)qword_1008F7580;
        if (os_log_type_enabled((os_log_t)qword_1008F7580, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = v15;
          uint64_t v43 = 2048;
          *(void *)uint64_t v44 = v18;
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "Found device %{public}s in fScoPacketTypeMap. Sending packet type %llu",  buf,  0x16u);
        }

        sub_10020166C(a1 + 424, &v41);
      }

      else
      {
LABEL_27:
        uint64_t v25 = (os_log_s *)qword_1008F7580;
        if (os_log_type_enabled((os_log_t)qword_1008F7580, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = v15;
          uint64_t v43 = 2048;
          *(void *)uint64_t v44 = 0LL;
          _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Did not find device %{public}s in fScoPacketTypeMap. Sending packet type %llu",  buf,  0x16u);
        }

        uint64_t v18 = 0LL;
      }
    }

    goto LABEL_48;
  }

  if (!sub_10010F048((uint64_t)&v37, &v39))
  {
    uint64_t v18 = v39;
    *(void *)buf = &v41;
    sub_100029574((uint64_t **)(a1 + 424), &v41, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[5] = v18;
    uint64_t v31 = qword_1008F7580;
    if (os_log_type_enabled((os_log_t)qword_1008F7580, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218242;
      *(void *)&uint8_t buf[4] = v18;
      uint64_t v43 = 2082;
      *(void *)uint64_t v44 = v15;
      uint64_t v27 = "Got voice connection info. Sending packet type %llu for device %{public}s";
      uint64_t v28 = (os_log_s *)v31;
      char v29 = 22;
      goto LABEL_44;
    }

    goto LABEL_48;
  }

  if (os_log_type_enabled((os_log_t)qword_1008F7580, OS_LOG_TYPE_ERROR)) {
    sub_1006A1868();
  }
  sub_100242CD8(&v36);
}

uint64_t sub_1000E2724(int a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  if (sub_1000A86F0())
  {
    v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received Delay Report - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v63 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!a2) {
    sub_1001EE2A0();
  }
  switch(a4)
  {
    case 3u:
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Source rejected the delay report indication", v17, v18, v19, v20, v21, v22, v23, v61);
        uint64_t v24 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 25LL;
    case 2u:
      int v33 = sub_1000A86F0();
      uint64_t result = 0LL;
      if (v33)
      {
        sub_1001EE134((uint64_t)"Source accepted the delay report indication", v26, v27, v28, v29, v30, v31, v32, v61);
        uint64_t v34 = (os_log_s *)sub_100086554(3u);
        BOOL v35 = os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT);
        uint64_t result = 0LL;
        if (v35)
        {
          uint64_t v36 = sub_1001EDDCC();
          *(_DWORD *)buf = 136446210;
          uint64_t v63 = v36;
          _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          return 0LL;
        }
      }

      return result;
    case 0u:
      if (*((_BYTE *)a2 + 14) != 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4908,  "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      if (*((_BYTE *)a2 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_30:
        *((_BYTE *)a2 + 15) = 1;
        return 17LL;
      }

      uint64_t v45 = *((unsigned __int16 *)a2 + 6);
      uint64_t v46 = *a2;
      *((_WORD *)a2 + 6) = v45 + 1;
      uint64_t v47 = sub_1000E4C8C(*(unsigned __int8 *)(v46 + v45) >> 2, a1);
      if (!v47) {
        return 18LL;
      }
      uint64_t v48 = sub_1000DB7D8(v47);
      if (*((_BYTE *)a2 + 14) != 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4921,  "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      uint64_t v49 = v48;
      if (*((_BYTE *)a2 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
      }

      else
      {
        uint64_t v50 = *((unsigned __int16 *)a2 + 6);
        if (*((unsigned __int16 *)a2 + 5) - (int)v50 >= 2)
        {
          uint64_t v51 = bswap32(*(unsigned __int16 *)(*a2 + v50)) >> 16;
          *((_WORD *)a2 + 6) = v50 + 2;
          goto LABEL_35;
        }
      }

      uint64_t v51 = 0LL;
      *((_BYTE *)a2 + 15) = 1;
LABEL_35:
      uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 208LL);
      if (v52)
      {
        v52(v49, a3, v51);
        return 0LL;
      }

      uint64_t result = sub_1000A86F0();
      if ((_DWORD)result)
      {
        sub_1001EE134( (uint64_t)"avdtp delay reporting callback has not been registered!",  v53,  v54,  v55,  v56,  v57,  v58,  v59,  v61);
        uint64_t v60 = (os_log_s *)sub_100086554(3u);
        uint64_t result = os_log_type_enabled(v60, OS_LOG_TYPE_ERROR);
        if ((_DWORD)result) {
          goto LABEL_24;
        }
      }

      return result;
  }

  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result)
  {
    sub_1001EE134((uint64_t)"Bad message type for delay reporting", v37, v38, v39, v40, v41, v42, v43, v61);
    uint64_t v44 = (os_log_s *)sub_100086554(3u);
    uint64_t result = os_log_type_enabled(v44, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
LABEL_24:
      sub_100657858();
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000E2AC8(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v6 = a2;
  if (!a2) {
    sub_1001EE2A0();
  }
  if (sub_1000A86F0())
  {
    v15 = a4 > 3 ? "" : (&off_100883218)[(char)a4];
    sub_1001EE134((uint64_t)"Received GET ALL CAPS - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    v16 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  unsigned __int16 v63 = 0;
  if (!a4)
  {
    if (*(_BYTE *)(v6 + 14) != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  4845,  "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(_BYTE *)(v6 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }

    else
    {
      uint64_t v23 = *(unsigned __int16 *)(v6 + 12);
      if (*(unsigned __int16 *)(v6 + 10) > v23)
      {
        uint64_t v24 = *(void *)v6;
        *(_WORD *)(v6 + 12) = v23 + 1;
        uint64_t v25 = *(unsigned __int8 *)(v24 + v23) >> 2;
        if (*(_BYTE *)(qword_1008DFDB0 + 96))
        {
          uint64_t v26 = 0LL;
          uint64_t v27 = (unsigned __int8 *)(*(void *)qword_1008DFDB0 + 31LL);
          while (*(v27 - 6) != (_DWORD)v25)
          {
            v27 += 40;
          }

          if (v26 != 255)
          {
            if (*(v27 - 4) || !*(void *)(v27 - 23) || *(v27 - 3) == 1)
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134((uint64_t)"Returning All Capabilities", v36, v37, v38, v39, v40, v41, v42, v62);
                uint64_t v43 = (os_log_s *)sub_100086554(3u);
                if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v44 = sub_1001EDDCC();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = v44;
                  _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }

              if (*(v27 - 1))
              {
                uint64_t v45 = 0LL;
                unint64_t v46 = 0LL;
                do
                {
                  sub_1000E3040(a1, *(void *)(v27 - 31) + v45);
                  ++v46;
                  unint64_t v47 = *(v27 - 1);
                  v45 += 16LL;
                }

                while (v46 < v47);
              }

              else
              {
                LODWORD(v47) = 0;
              }

              uint64_t v57 = *(unsigned __int8 **)(v27 - 31);
              unsigned int v58 = a1;
              unsigned int v59 = 12;
              unsigned int v60 = a3;
            }

            else
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"2-Play Source: Returning Config as Caps",  v48,  v49,  v50,  v51,  v52,  v53,  v54,  v62);
                uint64_t v55 = (os_log_s *)sub_100086554(3u);
                if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v56 = sub_1001EDDCC();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = v56;
                  _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }

              uint64_t v57 = *(unsigned __int8 **)(v27 - 23);
              LODWORD(v47) = *v27;
              unsigned int v58 = a1;
              unsigned int v59 = 2;
              unsigned int v60 = a3;
            }

            sub_1000E6010(v58, v59, v60, v57, v47, 0);
            goto LABEL_60;
          }
        }

uint64_t sub_1000E2FA4(unsigned int a1, int a2)
{
  unsigned __int16 v14 = 0;
  uint64_t v4 = sub_1000D8B9C(a1, &v14);
  if ((_DWORD)v4)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_AVDTP_Disable48KHz failed to obtain CID for A2DP handle %d",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  a1);
      uint64_t v12 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    *(_DWORD *)(sub_1000D8DAC(v14) + 52) = a2;
  }

  return v4;
}

void sub_1000E3040(int a1, uint64_t a2)
{
  if (*(_BYTE *)a2 == 7)
  {
    uint64_t v3 = sub_1000D8DAC(a1);
    if (v3)
    {
      uint64_t v4 = *(unsigned int *)(v3 + 52);
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_AVDTP_Update48KHzCap was not able to read the disable48KHz signal",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  v70);
        uint64_t v12 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      uint64_t v4 = 0xFFFFFFFFLL;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"AVDTP_Update48KHzCap: disable48KHz is %x, codec is %x, codecData.dataLen is %x",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  v4);
      uint64_t v20 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v72 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    if (*(_BYTE *)(a2 + 2) == 2)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"AVDTP_Update48KHzCap: AAC-LC codecData->data[1] was %x, [2] was %x",  v34,  v35,  v36,  v37,  v38,  v39,  v40,  *(unsigned __int8 *)(*(void *)(a2 + 8) + 1LL));
        uint64_t v41 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v42 = sub_1001EDDCC();
          *(_DWORD *)buf = 136446210;
          uint64_t v72 = v42;
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      uint64_t v43 = *(void *)(a2 + 8);
      char v44 = *(_BYTE *)(v43 + 1);
      if ((v4 & 2) != 0)
      {
        *(_BYTE *)(v43 + 1) = v44 | 1;
        uint64_t v45 = *(void *)(a2 + 8);
        char v46 = *(_BYTE *)(v45 + 2) & 0x7F;
      }

      else
      {
        *(_BYTE *)(v43 + 1) = v44 & 0xFE;
        uint64_t v45 = *(void *)(a2 + 8);
        char v46 = *(_BYTE *)(v45 + 2) | 0x80;
      }

      *(_BYTE *)(v45 + 2) = v46;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"AVDTP_Update48KHzCap: AAC-LC codecData->data[1] updated to %x, [2] to %x",  v62,  v63,  v64,  v65,  v66,  v67,  v68,  *(unsigned __int8 *)(*(void *)(a2 + 8) + 1LL));
        uint64_t v54 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_33;
        }
      }
    }

    else if (*(_BYTE *)(a2 + 2))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"AVDTP_Update48KHzCap: codecData->data remains untouched for this codec type",  v47,  v48,  v49,  v50,  v51,  v52,  v53,  v70);
        uint64_t v54 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
        {
LABEL_33:
          uint64_t v69 = sub_1001EDDCC();
          *(_DWORD *)buf = 136446210;
          uint64_t v72 = v69;
          _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"AVDTP_Update48KHzCap: SBC codecData->data[0] was %x",  v21,  v22,  v23,  v24,  v25,  v26,  v27,  **(unsigned __int8 **)(a2 + 8));
        uint64_t v28 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v29 = sub_1001EDDCC();
          *(_DWORD *)buf = 136446210;
          uint64_t v72 = v29;
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      uint64_t v30 = *(char **)(a2 + 8);
      char v31 = *v30;
      if ((v4 & 1) != 0)
      {
        *uint64_t v30 = v31 | 0x20;
        uint64_t v32 = *(_BYTE **)(a2 + 8);
        char v33 = *v32 & 0xEF;
      }

      else
      {
        *uint64_t v30 = v31 & 0xDF;
        uint64_t v32 = *(_BYTE **)(a2 + 8);
        char v33 = *v32 | 0x10;
      }

      _BYTE *v32 = v33;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"AVDTP_Update48KHzCap: SBC codecData->data[0] updated to %x",  v55,  v56,  v57,  v58,  v59,  v60,  v61,  **(unsigned __int8 **)(a2 + 8));
        uint64_t v54 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_33;
        }
      }
    }
  }

uint64_t sub_1000E3428(int *a1, _OWORD *a2, _OWORD *a3, __int16 *a4, _WORD *a5)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"AVDTP_createA2DPChannels", v10, v11, v12, v13, v14, v15, v16, v58);
    uint64_t v17 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  __int128 v18 = a2[1];
  *(_OWORD *)buf = *a2;
  __int128 v60 = v18;
  uint64_t v19 = sub_100173838( 25,  (uint64_t)buf,  (uint64_t)a1,  (uint64_t)sub_1000DA9EC,  (uint64_t)sub_1000D9FA4,  (uint64_t)sub_1000DA244,  a4,  (uint64_t)&unk_1008831A8);
  if ((_DWORD)v19)
  {
    uint64_t v20 = v19;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"AVDTP_createA2DPChannels error creating A2DP signaling",  v21,  v22,  v23,  v24,  v25,  v26,  v27,  v58);
      uint64_t v28 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
LABEL_7:
      }
        sub_100657858();
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"AVDTP_createA2DPChannels signaling channel created",  v29,  v30,  v31,  v32,  v33,  v34,  v35,  v58);
      uint64_t v36 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v37 = sub_1001EDDCC();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = v37;
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    __int128 v38 = a3[1];
    *(_OWORD *)buf = *a3;
    __int128 v60 = v38;
    uint64_t v39 = sub_100173838( 25,  (uint64_t)buf,  (uint64_t)a1,  (uint64_t)sub_1000E3718,  (uint64_t)sub_1000E3928,  (uint64_t)sub_1000E3B30,  a5,  (uint64_t)&unk_1008831A8);
    if ((_DWORD)v39)
    {
      uint64_t v20 = v39;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_AVDTP_createA2DPChannels error creating A2DP media",  v40,  v41,  v42,  v43,  v44,  v45,  v46,  v58);
        uint64_t v47 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
          goto LABEL_7;
        }
      }
    }

    else if (sub_1000DA6E0(*a4, a1))
    {
      uint64_t v20 = 0LL;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"AVDTP_createA2DPChannels created signal for cid 0x%x with a2dp handle %d",  v48,  v49,  v50,  v51,  v52,  v53,  v54,  (unsigned __int16)*a4);
        uint64_t v55 = (os_log_s *)sub_100086554(3u);
        uint64_t v20 = 0LL;
        if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v56 = sub_1001EDDCC();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = v56;
          _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          return 0LL;
        }
      }
    }

    else
    {
      return 2902LL;
    }
  }

  return v20;
}

void sub_1000E3718(unsigned int a1, uint64_t a2, uint64_t a3, int a4)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"MediaConnectCfm (CID %d) %!", v7, v8, v9, v10, v11, v12, v13, a1);
    uint64_t v14 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v15 = sub_1000E3F9C(a1);
  if (v15)
  {
    uint64_t v16 = v15;
    if (a4 == 464)
    {
      *(_WORD *)(v15 + 128) = 0;
      sub_1000B90AC(0LL);
      sub_1000DC6BC(v16);
      uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 176LL);
      uint64_t v28 = *(unsigned __int8 *)(v16 + 133);
      uint64_t v29 = sub_1000DB7D8(v16);
      v27(v28, v29, 41LL);
    }

    else
    {
      if (a4)
      {
        *(_WORD *)(v15 + 128) = 0;
        sub_1000B90AC(0LL);
        uint64_t v18 = 129LL;
      }

      else
      {
        if (*(_BYTE *)(v15 + 134) != 2) {
          sub_1001EE2A0();
        }
        sub_1000DD6D8(v16, 3);
        *(void *)buf = 0LL;
        if (!sub_100171EC4(a1, (uint64_t *)buf))
        {
          if (sub_10017AB4C(*(unsigned int **)buf))
          {
            uint64_t v17 = sub_10017AB4C(*(unsigned int **)buf);
            sub_1000B90AC(*(unsigned __int16 *)(v17 + 8));
          }
        }

        uint64_t v18 = 0LL;
      }

      uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 64LL);
      uint64_t v31 = *(unsigned __int8 *)(v16 + 133);
      uint64_t v32 = sub_1000DB7D8(v16);
      v30(v31, v32, a3, v18);
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Remote Endpoint not found", v19, v20, v21, v22, v23, v24, v25, v33);
    uint64_t v26 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_1000E3928(unsigned int a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E3F9C(a1);
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Media channel disconnected (CID %d, remote %lx) %!", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v26 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (v4)
  {
    uint64_t v13 = sub_1000DB7D8(v4);
    int v14 = *(unsigned __int8 *)(v4 + 134);
    *(_WORD *)(v4 + 128) = 0;
    sub_1000B90AC(0LL);
    uint64_t v15 = *(unsigned __int8 *)(v4 + 133);
    if (v14 == 7)
    {
      if ((_DWORD)v13) {
        (*(void (**)(uint64_t, uint64_t, void))(*(void *)(qword_1008DFDB0 + 24) + 176LL))(v15, v13, 0LL);
      }
      uint64_t v16 = *(unsigned __int8 *)(v4 + 135);
      if (v16 != 255) {
        sub_1000D9FA4(*(unsigned __int16 *)(*(void *)(qword_1008DFDB0 + 16) + (v16 << 6) + 38), a2);
      }
    }

    else
    {
      sub_1000DC6BC(v4);
      if (!(_DWORD)v13) {
        return;
      }
      if (v14 != 6)
      {
        if (v14 == 5)
        {
          (*(void (**)(uint64_t, uint64_t, void))(*(void *)(qword_1008DFDB0 + 24) + 88LL))(v15, v13, 0LL);
          return;
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Unexpected Transport channel disconnect: %d",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  v13);
          uint64_t v24 = (os_log_s *)sub_100086554(3u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }

      (*(void (**)(uint64_t, uint64_t, void))(*(void *)(qword_1008DFDB0 + 24) + 176LL))(v15, v13, 0LL);
    }
  }

void sub_1000E3B30(int a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5 = sub_1000E3F9C(a1);
  if (v5)
  {
    uint64_t v6 = v5;
    if (a3 <= 0xB)
    {
      sub_1001EE134((uint64_t)"Error in received data frame: Runt packet received!", v7, v8, v9, v10, v11, v12, v13, v46);
      int v14 = (os_log_s *)sub_100086554(3u);
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        goto LABEL_18;
      }
      goto LABEL_5;
    }

    if (*(_BYTE *)(v5 + 134) != 4)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Invalid state to receive packet", v32, v33, v34, v35, v36, v37, v38, v46);
        uint64_t v39 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v49 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      goto LABEL_18;
    }

    if (!a2) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  779,  "data");
    }
    uint64_t v23 = *(_BYTE *)a2 & 0xF;
    if ((int)(a3 - 8) < (int)v23)
    {
      sub_1001EE134((uint64_t)"Error in received data frame", v24, v25, v26, v27, v28, v29, v30, v46);
      uint64_t v31 = (os_log_s *)sub_100086554(3u);
      if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        goto LABEL_18;
      }
LABEL_5:
      sub_100657858();
LABEL_18:
      if (*(_BYTE *)(v6 + 132))
      {
        uint64_t v40 = *(void (**)(uint64_t, void, void, void, void, void, void, uint64_t))(*(void *)(qword_1008DFDB0 + 24) + 184LL);
        uint64_t v41 = sub_1000DB7D8(v6);
        v40(v41, 0LL, 0LL, 0LL, 0LL, 0LL, 0LL, 1LL);
      }

      return;
    }

    if (*(_BYTE *)(v5 + 132))
    {
      unsigned int v42 = *(unsigned __int8 *)(a2 + 1);
      unsigned int v43 = *(unsigned __int16 *)(a2 + 2);
      unsigned int v44 = *(_DWORD *)(a2 + 4);
      uint64_t v47 = *(void (**)(uint64_t, void, void, uint64_t, void, void, void, void))(*(void *)(qword_1008DFDB0 + 24) + 184LL);
      uint64_t v45 = sub_1000DB7D8(v5);
      v47( v45,  bswap32(v43) >> 16,  bswap32(v44),  a2 + v23 + 12,  (unsigned __int16)(a3 - (v23 + 12)),  v42 & 0x7F,  v42 >> 7,  0LL);
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Remote Endpoint not found", v15, v16, v17, v18, v19, v20, v21, v46);
    uint64_t v22 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_1000E3DE8(uint64_t a1, void *a2, unsigned int a3, int a4)
{
  uint64_t v30 = 0LL;
  if (*(_BYTE *)(qword_1008DFDB0 + 96))
  {
    uint64_t v6 = 0LL;
    uint64_t v7 = *(void *)qword_1008DFDB0;
    while (*(unsigned __int8 *)(v7 + 25) != a4)
    {
      ++v6;
      v7 += 40LL;
    }

    if (v6 == 255) {
      uint64_t v8 = 0LL;
    }
    else {
      uint64_t v8 = v7;
    }
  }

  else
  {
LABEL_5:
    uint64_t v8 = 0LL;
  }

  uint64_t v9 = sub_10012D890(a1);
  if (!v9
    && sub_1000A86F0()
    && (sub_1001EE134((uint64_t)"OI_AVDTP_cleanFastConnectA2DP NULL Handle", v10, v11, v12, v13, v14, v15, v16, v29),
        uint64_t v17 = (os_log_s *)sub_100086554(3u),
        os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)))
  {
    sub_100657858();
    if (!a3) {
      goto LABEL_19;
    }
  }

  else if (!a3)
  {
    goto LABEL_19;
  }

  uint64_t v18 = sub_1000E3F9C(a3);
  if (v18)
  {
    uint64_t v19 = v18;
    *(_BYTE *)(v18 + 132) = 0;
    *(_DWORD *)uint64_t v18 = 0;
    *(_WORD *)(v18 + 128) = 0;
    sub_1000B90AC(0LL);
    *(_BYTE *)(v19 + 137) = -1;
    *(_DWORD *)(v19 + 133) = -65281;
  }

  if (!sub_100171EC4(a3, &v30))
  {
    if (v30)
    {
      sub_1001734D8(v30);
      if (v9) {
        sub_10011286C(v9);
      }
    }
  }

uint64_t sub_1000E3F9C(int a1)
{
  if (!qword_1008DFDB0 || !*(_BYTE *)(qword_1008DFDB0 + 97)) {
    return 0LL;
  }
  char v1 = 0;
  uint64_t v2 = *(void *)(qword_1008DFDB0 + 8);
  while (*(unsigned __int8 *)(v2 + 144LL * v1 + 136) == 255 || *(unsigned __int16 *)(v2 + 144LL * v1 + 128) != a1)
  {
  }

  return v2 + 144LL * v1;
}

uint64_t sub_1000E4000(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    goto LABEL_41;
  }

  uint64_t v2 = *(unsigned __int16 *)(a1 + 12);
  if (*(unsigned __int16 *)(a1 + 10) <= v2)
  {
LABEL_41:
    uint64_t v26 = "ByteStream_NumReadBytesAvail(*bs) >= 1";
    goto LABEL_43;
  }

  if (*(_BYTE *)(a1 + 14) != 2)
  {
    uint64_t v26 = "(*bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  5328,  v26);
  }

  uint64_t v3 = qword_1008DFDB0;
  uint64_t v4 = *(void *)qword_1008DFDB0;
  uint64_t v5 = *(_BYTE **)a1;
  *(_WORD *)(a1 + 12) = v2 + 1;
  v5[v2] = 0;
  if (*(_BYTE *)(v3 + 96))
  {
    unint64_t v6 = 0LL;
    char v7 = 0;
    uint64_t v8 = (unsigned __int8 *)(v4 + 29);
    while (1)
    {
      if (*(v8 - 4))
      {
        unsigned int v9 = *v8;
        unsigned int v10 = *(v8 - 1);
        if (*(v8 - 2) >= 2u) {
          sub_1001EE2A0();
        }
        if (*(_BYTE *)(a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_29:
          uint64_t v23 = "ByteStream_NumReadBytesAvail(*bs) >= 1";
LABEL_31:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  5339,  v23);
        }

        uint64_t v11 = *(unsigned __int16 *)(a1 + 12);
        if (*(_BYTE *)(a1 + 14) != 2)
        {
          uint64_t v23 = "(*bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_31;
        }

        char v12 = (2 * (v9 >= v10)) | (4 * *(v8 - 4));
        uint64_t v13 = *(_BYTE **)a1;
        *(_WORD *)(a1 + 12) = v11 + 1;
        v13[v11] = v12;
        if (*(_BYTE *)(a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_33:
          uint64_t v24 = "ByteStream_NumReadBytesAvail(*bs) >= 1";
LABEL_35:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  5340,  v24);
        }

        uint64_t v14 = *(unsigned __int16 *)(a1 + 12);
        if (*(_BYTE *)(a1 + 14) != 2)
        {
          uint64_t v24 = "(*bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_35;
        }

        char v15 = *(v8 - 3) & 0xF0 | (8 * *(v8 - 2));
        uint64_t v16 = *(_BYTE **)a1;
        *(_WORD *)(a1 + 12) = v14 + 1;
        v16[v14] = v15;
        ++v7;
        uint64_t v3 = qword_1008DFDB0;
      }

      ++v6;
      v8 += 40;
    }
  }

  char v7 = 0;
LABEL_19:
  *uint64_t v5 = v7;
  if (*(_BYTE *)(v3 + 96))
  {
    unint64_t v17 = 0LL;
    uint64_t v18 = (unsigned __int8 *)(v4 + 30);
    do
    {
      if (*(v18 - 5))
      {
        char v19 = sub_1000E570C(*(void *)(v18 - 30), *v18);
        if (*(_BYTE *)(a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_37:
          uint64_t v25 = "ByteStream_NumReadBytesAvail(*bs) >= 1";
LABEL_39:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c",  5354,  v25);
        }

        uint64_t v20 = *(unsigned __int16 *)(a1 + 12);
        if (*(_BYTE *)(a1 + 14) != 2)
        {
          uint64_t v25 = "(*bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_39;
        }

        uint64_t v21 = *(_BYTE **)a1;
        *(_WORD *)(a1 + 12) = v20 + 1;
        v21[v20] = v19;
        sub_1000E5784((_BYTE *)a1, *(unsigned __int8 **)(v18 - 30), *v18, 1);
        uint64_t v3 = qword_1008DFDB0;
      }

      ++v17;
      v18 += 40;
    }

    while (v17 < *(unsigned __int8 *)(v3 + 96));
  }

  return 0LL;
}

uint64_t sub_1000E42FC( unsigned int a1, char a2, unsigned int a3, uint64_t a4, unsigned int a5, _WORD *a6, uint64_t a7)
{
  if (!dword_1008F6F14) {
    return 408LL;
  }
  unsigned __int16 v95 = 0;
  uint64_t v14 = sub_1000D8B9C(a1, &v95);
  if ((_DWORD)v14)
  {
    uint64_t v15 = v14;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_AVDTP_FastConnectSetConfig error get CID for A2DP handle %d",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  a1);
      uint64_t v23 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    if (!*(_BYTE *)(qword_1008DFDB0 + 96)) {
      goto LABEL_19;
    }
    uint64_t v24 = 0LL;
    uint64_t v25 = *(void *)qword_1008DFDB0;
    uint64_t v26 = 255LL;
    while (*(unsigned __int8 *)(v25 + v24 + 25) != a3)
    {
      v24 += 40LL;
      --v26;
    }

    if (v26)
    {
      if (*(void *)(v25 + v24 + 16) && (sub_1001EE2A0(), *(void *)(v25 + v24 + 16)))
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_AVDTP_FastConnectSetConfig error Caps", v27, v28, v29, v30, v31, v32, v33, v92);
          uint64_t v34 = (os_log_s *)sub_100086554(3u);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        return 118LL;
      }

      else
      {
        uint64_t v44 = sub_1000DB674(a2);
        if (v44)
        {
          uint64_t v45 = v44;
          v93 = (void **)(v25 + v24 + 16);
          int v46 = v95;
          uint64_t v47 = qword_1008DFDB0;
          if (qword_1008DFDB0 && *(_BYTE *)(qword_1008DFDB0 + 98))
          {
            uint64_t v48 = 0LL;
            uint64_t v49 = (unsigned __int16 *)(*(void *)(qword_1008DFDB0 + 16) + 38LL);
            while (1)
            {
              int v50 = *v49;
              v49 += 32;
              if (v50 == v95) {
                break;
              }
            }
          }

          else
          {
LABEL_30:
            LOBYTE(v48) = -1;
          }

          *(_BYTE *)(v44 + 135) = v48;
          uint64_t v51 = *(unsigned __int8 *)(v47 + 96);
          if (*(_BYTE *)(v47 + 96))
          {
            uint64_t v52 = 0LL;
            uint64_t v53 = (unsigned __int8 *)(*(void *)v47 + 25LL);
            while (1)
            {
              int v54 = *v53;
              v53 += 40;
              if (v54 == a3) {
                break;
              }
              if (v51 == ++v52) {
                goto LABEL_35;
              }
            }
          }

          else
          {
LABEL_35:
            LOBYTE(v52) = -1;
          }

          *(_BYTE *)(v44 + 136) = v52;
          sub_1000DD6D8(v44, 3);
          *(_WORD *)(v45 + 130) = 900;
          *(_WORD *)(v45 + 128) = a7;
          sub_1000B90AC(a7);
          v94 = 0LL;
          if (!sub_100171EC4(a7, (uint64_t *)&v94) && sub_10017AB4C(v94))
          {
            uint64_t v55 = sub_10017AB4C(v94);
            sub_1000B90AC(*(unsigned __int16 *)(v55 + 8));
          }

          sub_100171E24(a7, (uint64_t)sub_1000E4790);
          int v56 = sub_1000DB7D8(v45);
          *a6 = v56;
          if (v56)
          {
            uint64_t v57 = sub_1000D8DAC(v46);
            if (v57)
            {
              *(_WORD *)(v57 + 34) = 1004;
              uint64_t v58 = v25 + v24;
              uint64_t v59 = (_BYTE *)(v25 + v24 + 32);
              uint64_t v15 = sub_1000D8934(a4, a5, v93, v59);
              if ((_DWORD)v15)
              {
                if (sub_1000A86F0())
                {
                  sub_1001EE134( (uint64_t)"OI_AVDTP_FastConnectSetConfig error Copy Caps",  v60,  v61,  v62,  v63,  v64,  v65,  v66,  v92);
                  uint64_t v67 = (os_log_s *)sub_100086554(3u);
                  if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)) {
                    sub_100657858();
                  }
                }

                sub_1000D88A0(v93, a5);
                *(_BYTE *)(v45 + 132) = 0;
                *(_DWORD *)uint64_t v45 = 0;
                *(_WORD *)(v45 + 128) = 0;
                sub_1000B90AC(0LL);
                *(_BYTE *)(v45 + 137) = -1;
                *(_DWORD *)(v45 + 133) = -65281;
              }

              else
              {
                sub_1000D88A0((void **)(v58 + 8), *(unsigned __int8 *)(v58 + 31));
                *(void *)(v58 + 8) = *v93;
                *(_BYTE *)(v58 + 31) = *v59;
                *v93 = 0LL;
                ++*(_BYTE *)(v58 + 29);
                *uint64_t v59 = 0;
                *(_BYTE *)(v45 + 137) = *(_BYTE *)(v58 + 24);
                *(_BYTE *)(v58 + 24) = *(_BYTE *)a6 - 1;
              }
            }

            else
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"OI_AVDTP_FastConnectSetConfig error Signal",  v84,  v85,  v86,  v87,  v88,  v89,  v90,  v92);
                v91 = (os_log_s *)sub_100086554(3u);
                if (os_log_type_enabled(v91, OS_LOG_TYPE_ERROR)) {
                  sub_100657858();
                }
              }

              return 406LL;
            }
          }

          else
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"OI_AVDTP_FastConnectSetConfig error remote handle",  v76,  v77,  v78,  v79,  v80,  v81,  v82,  v92);
              v83 = (os_log_s *)sub_100086554(3u);
              if (os_log_type_enabled(v83, OS_LOG_TYPE_ERROR)) {
                sub_100657858();
              }
            }

            return 414LL;
          }
        }

        else
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"OI_AVDTP_FastConnectSetConfig error remote", v68, v69, v70, v71, v72, v73, v74, v92);
            uint64_t v75 = (os_log_s *)sub_100086554(3u);
            if (os_log_type_enabled(v75, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          return 2902LL;
        }
      }
    }

    else
    {
LABEL_19:
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_AVDTP_FastConnectSetConfig error get local EP for seid %d",  v35,  v36,  v37,  v38,  v39,  v40,  v41,  a3);
        unsigned int v42 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 120LL;
    }
  }

  return v15;
}

void sub_1000E4790(unsigned int a1)
{
  if (*(void *)(*(void *)(qword_1008DFDB0 + 24) + 216LL))
  {
    uint64_t v2 = sub_1000E3F9C(a1);
    if (v2)
    {
      unsigned __int16 v22 = 0;
      __int16 v3 = sub_1000DB7D8(v2);
      uint64_t v4 = sub_1000D8C7C(v3, &v22);
      if ((_DWORD)v4)
      {
        uint64_t v5 = v4;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Flush callback lookup failed with status %! for mediaHandle %d",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v5);
          uint64_t v13 = (os_log_s *)sub_100086554(3u);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }
      }

      else
      {
        (*(void (**)(void))(*(void *)(qword_1008DFDB0 + 24) + 216LL))(v22);
      }
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Flush callback lookup failed for mediaCid %d", v14, v15, v16, v17, v18, v19, v20, a1);
      uint64_t v21 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

void sub_1000E48A8(void *a1)
{
  if (!dword_1008F6F14) {
    return;
  }
  uint64_t v2 = *(void *)(qword_1008DFDB0 + 8);
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Signaling channel disconnected prior to media bringup (CID %d) with %!",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  a1);
    uint64_t v10 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v28 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v11 = sub_1000D8DAC((int)a1);
  if (v11)
  {
    uint64_t v12 = qword_1008DFDB0;
    int v13 = *(unsigned __int8 *)(qword_1008DFDB0 + 97);
    if (*(_BYTE *)(qword_1008DFDB0 + 97))
    {
      uint64_t v14 = v11;
      do
      {
        if (*(void *)(v12 + 16) + ((unint64_t)*(unsigned __int8 *)(v2 + 135) << 6) == v14)
        {
          if (!*(_WORD *)(v2 + 128)) {
            sub_1001EE2A0();
          }
          sub_1000DC6BC(v2);
          uint64_t v12 = qword_1008DFDB0;
        }

        v2 += 144LL;
        --v13;
      }

      while (v13);
    }
  }

  if (!dword_1008F6F14)
  {
    uint64_t v18 = 408LL;
LABEL_20:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Signaling disconnect error %!", v19, v20, v21, v22, v23, v24, v25, v18);
      uint64_t v26 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v15 = *(unsigned __int8 *)(qword_1008DFDB0 + 98);
  if (!*(_BYTE *)(qword_1008DFDB0 + 98))
  {
LABEL_18:
    uint64_t v18 = 120LL;
    goto LABEL_20;
  }

  uint64_t v16 = (unsigned __int16 *)(*(void *)(qword_1008DFDB0 + 16) + 38LL);
  while (1)
  {
    int v17 = *v16;
    v16 += 32;
    if (v17 == (_DWORD)a1) {
      break;
    }
    if (!--v15) {
      goto LABEL_18;
    }
  }

  sub_1000DAC50(a1);
}

void sub_1000E4A78(__int16 *a1, unsigned int a2, int a3)
{
  if (a2)
  {
    uint64_t v5 = a2;
    uint64_t v6 = qword_1008DFDB0;
    do
    {
      __int16 v7 = *a1++;
      unsigned __int16 v8 = v7 - 1;
      if (*(unsigned __int8 *)(v6 + 97) > (unsigned __int16)(v7 - 1))
      {
        uint64_t v9 = *(void *)(v6 + 8);
        if (v9)
        {
          if (*(_BYTE *)(v9 + 144LL * v8 + 132))
          {
            sub_1000DD6D8(v9 + 144LL * v8, a3);
            uint64_t v6 = qword_1008DFDB0;
          }
        }
      }

      --v5;
    }

    while (v5);
  }

uint64_t sub_1000E4B00(int a1, int a2)
{
  uint64_t v3 = qword_1008DFDB0;
  if (*(_BYTE *)(qword_1008DFDB0 + 98))
  {
    uint64_t v4 = 0LL;
    uint64_t v5 = (unsigned __int16 *)(*(void *)(qword_1008DFDB0 + 16) + 38LL);
    while (1)
    {
      int v6 = *v5;
      v5 += 32;
      if (v6 == a2) {
        break;
      }
    }

    int v7 = v4;
  }

  else
  {
LABEL_5:
    int v7 = 255;
  }

  uint64_t v8 = *(void *)(qword_1008DFDB0 + 8);
  if (!dword_1008F6F14)
  {
    sub_1001EE2A0();
    uint64_t v3 = qword_1008DFDB0;
  }

  uint64_t v9 = *(unsigned __int8 *)(v3 + 97);
  if (!v9) {
    return 0LL;
  }
  uint64_t v10 = 0LL;
  uint64_t v11 = (unsigned __int8 *)(v8 + 132);
  uint64_t v12 = v11;
  while (1)
  {
    int v13 = *v12;
    v12 += 144;
    if (v13)
    {
      if (v11[1] == a1 && v11[3] == v7) {
        break;
      }
    }

    ++v10;
    uint64_t v11 = v12;
    if (v9 == v10) {
      return 0LL;
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Found handle at %d (i+1) with transaction: %d and signal: %d",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  v10 + 1);
    uint64_t v22 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v24 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  v11[1] = -1;
  return v10 + 1;
}

uint64_t sub_1000E4C8C(int a1, int a2)
{
  uint64_t v2 = *(unsigned __int8 *)(qword_1008DFDB0 + 97);
  if (*(_BYTE *)(qword_1008DFDB0 + 97))
  {
    uint64_t v3 = *(void *)(qword_1008DFDB0 + 8);
    do
    {
      if (*(void *)(qword_1008DFDB0 + 8))
      {
        else {
          uint64_t v4 = *(void *)qword_1008DFDB0 + 40LL * *(unsigned __int8 *)(v3 + 136);
        }
        uint64_t v5 = *(unsigned __int8 *)(v3 + 135);
        if (v5 == 255)
        {
          uint64_t v6 = 0LL;
          if (!v4) {
            goto LABEL_14;
          }
        }

        else
        {
          uint64_t v6 = *(void *)(qword_1008DFDB0 + 16) + (v5 << 6);
          if (!v4) {
            goto LABEL_14;
          }
        }
      }

uint64_t sub_1000E4D20(int a1, int a2, _WORD *a3, _BYTE *a4)
{
  *a4 = 0;
  uint64_t result = sub_1000E4B00(a1, a2);
  *a3 = result;
  if ((_DWORD)result)
  {
    uint64_t v9 = a3 + 1;
    do
    {
      ++*a4;
      uint64_t result = sub_1000E4B00(a1, a2);
      *v9++ = result;
    }

    while ((_DWORD)result);
  }

  return result;
}

uint64_t sub_1000E4D84(int a1, int a2)
{
  unsigned __int16 v2 = 0;
  if (a1 && a2)
  {
    if (*(_BYTE *)(qword_1008DFDB0 + 97))
    {
      uint64_t v3 = 0LL;
      uint64_t v4 = *(void *)(qword_1008DFDB0 + 8);
      uint64_t v5 = (unsigned __int8 *)(v4 + 132);
      uint64_t v6 = (unsigned __int8 *)(v4 + 132);
      while (1)
      {
        int v7 = *v6;
        v6 += 144;
        if (v7 == a1 && v4 != 0)
        {
          uint64_t v9 = v5[3];
          if (v9 != 255)
          {
            uint64_t v10 = *(void *)(qword_1008DFDB0 + 16);
            if (v10)
            {
            }
          }
        }

        ++v3;
        uint64_t v5 = v6;
      }

      return (unsigned __int16)(v3 + 1);
    }

    else
    {
      return 0;
    }
  }

  return v2;
}

const char *sub_1000E4E08(char a1)
{
  else {
    return off_100883238[(char)(a1 + 2)];
  }
}

uint64_t sub_1000E4E38(int a1, int a2)
{
  uint64_t result = sub_1000D8DAC(a1);
  if (result)
  {
    if (*(unsigned __int8 *)(result + 44) == a2)
    {
      *(_BYTE *)(result + 44) = -1;
      return sub_1001EEB14(*(unsigned int *)(result + 24));
    }
  }

  return result;
}

uint64_t sub_1000E4E80(unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)
{
  char v5 = a3;
  if (a3 >= 0x10) {
    sub_1001EE2A0();
  }
  if (a2 >= 0x40) {
    sub_1001EE2A0();
  }
  if (a4 >= 0x40) {
    sub_1001EE2A0();
  }
  uint64_t v8 = (char *)sub_1000B17F4(3uLL);
  if (v8)
  {
    *uint64_t v8 = 16 * v5;
    v8[1] = a2;
    v8[2] = 4 * a4;
    return sub_1000E4F5C(a1, v5, a2, v8, 3uLL);
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"No memory", v10, v11, v12, v13, v14, v15, v16, v18);
      uint64_t v17 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_10065AFF0(v17);
      }
    }

    return 106LL;
  }

uint64_t sub_1000E4F5C(unsigned int a1, char a2, char a3, char *a4, size_t a5)
{
  uint64_t v10 = sub_1000D8DAC(a1);
  if (!v10 || (uint64_t v11 = v10, *(unsigned __int8 *)(v10 + 44) == 255))
  {
    uint64_t v28 = sub_1000E5170(a1, a4, a5);
    if ((_DWORD)v28)
    {
      if (sub_1000A86F0())
      {
        uint64_t v29 = sub_1000E4E08(a3);
        sub_1001EE134( (uint64_t)"AVDTP Send failed [%s] transaction %d CID:%d",  v30,  v31,  v32,  v33,  v34,  v35,  v36,  (uint64_t)v29);
        uint64_t v37 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    else
    {
      sub_1000E665C(a1, a2, a3);
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"cmdPending t:%d", v12, v13, v14, v15, v16, v17, v18, *(unsigned __int8 *)(v11 + 44));
      uint64_t v19 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1000B1838(a4);
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Outstanding command pending on CID: %d", v20, v21, v22, v23, v24, v25, v26, a1);
      uint64_t v27 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 118LL;
  }

  return v28;
}

uint64_t sub_1000E50DC(unsigned int a1, unsigned int a2, unsigned int a3, int a4)
{
  char v5 = a3;
  if (a3 >= 0x10) {
    sub_1001EE2A0();
  }
  if (a2 >= 0x40) {
    sub_1001EE2A0();
  }
  uint64_t v8 = (char *)sub_1000B17F4(3uLL);
  if (!v8) {
    return 106LL;
  }
  size_t v9 = 2LL;
  if (a4) {
    char v10 = 3;
  }
  else {
    char v10 = 2;
  }
  *uint64_t v8 = v10 | (16 * v5);
  v8[1] = a2;
  if (a4)
  {
    v8[2] = a4;
    size_t v9 = 3LL;
  }

  return sub_1000E5170(a1, v8, v9);
}

uint64_t sub_1000E5170(unsigned int a1, char *a2, size_t a3)
{
  uint64_t v6 = sub_1000D8DAC(a1);
  if (!v6)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Signalling info not found for CID %d", v13, v14, v15, v16, v17, v18, v19, a1);
      uint64_t v20 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v21 = 403LL;
    goto LABEL_14;
  }

  uint64_t v7 = v6;
  uint64_t v8 = sub_1001EF80C(a2, a3, 1);
  if (!v8)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Out of memory!", v22, v23, v24, v25, v26, v27, v28, v31);
      uint64_t v29 = (os_log_s *)sub_100086554(3u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v21 = 106LL;
LABEL_14:
    sub_1000B1838(a2);
    return v21;
  }

  size_t v9 = v8;
  v8[1] = 0LL;
  uint64_t v10 = *(void *)(v7 + 8);
  if (v10)
  {
    do
    {
      uint64_t v11 = v10;
      uint64_t v10 = *(void *)(v10 + 8);
    }

    while (v10);
    uint64_t v12 = (void *)(v11 + 8);
  }

  else
  {
    uint64_t v12 = (void *)(v7 + 8);
    if (*(_BYTE *)(v7 + 40))
    {
      sub_1001EE2A0();
      uint64_t v12 = (void *)(v7 + 8);
    }
  }

  *uint64_t v12 = v9;
  if (*(void **)(v7 + 8) != v9) {
    return 0LL;
  }
  return sub_1000E6838(v7);
}

uint64_t sub_1000E52D0(unsigned int a1, unsigned int a2, char a3)
{
  char v4 = a2;
  if (a2 >= 0x10) {
    sub_1001EE2A0();
  }
  uint64_t v6 = (char *)sub_1000B17F4(2uLL);
  if (!v6) {
    return 106LL;
  }
  *uint64_t v6 = (16 * v4) | 1;
  v6[1] = a3 & 0x3F;
  return sub_1000E5170(a1, v6, 2uLL);
}

uint64_t sub_1000E5348(unsigned int a1, unsigned int a2, unsigned int a3, uint64_t a4, unsigned int a5)
{
  char v7 = a3;
  if (a3 >= 0x10) {
    sub_1001EE2A0();
  }
  if (a2 != 254 && a2 >= 0x40) {
    sub_1001EE2A0();
  }
  uint64_t v10 = (char *)sub_1000B17F4(a5 + 2LL);
  if (!v10) {
    return 106LL;
  }
  *uint64_t v10 = 16 * v7;
  v10[1] = a2;
  if (a5)
  {
    uint64_t v11 = 0LL;
    do
    {
      v10[v11 + 2] = 4 * *(_BYTE *)(a4 + v11);
      ++v11;
    }

    while (a5 != v11);
    unsigned __int16 v12 = v11 + 2;
  }

  else
  {
    unsigned __int16 v12 = 2;
  }

  return sub_1000E4F5C(a1, v7, a2, v10, v12);
}

uint64_t sub_1000E541C(unsigned int a1, unsigned int a2, unsigned int a3, char a4, int a5)
{
  char v7 = a3;
  if (a3 >= 0x10) {
    sub_1001EE2A0();
  }
  if (a2 >= 0x40) {
    sub_1001EE2A0();
  }
  uint64_t v10 = (char *)sub_1000B17F4(4uLL);
  if (!v10) {
    return 106LL;
  }
  size_t v11 = 2LL;
  if (a5) {
    char v12 = 3;
  }
  else {
    char v12 = 2;
  }
  *uint64_t v10 = v12 | (16 * v7);
  v10[1] = a2;
  if (a5)
  {
    v10[2] = 4 * a4;
    v10[3] = a5;
    size_t v11 = 4LL;
  }

  return sub_1000E5170(a1, v10, v11);
}

uint64_t sub_1000E54C8(unsigned int a1, unsigned int a2)
{
  char v2 = a2;
  if (a2 >= 0x10) {
    sub_1001EE2A0();
  }
  char v4 = (char *)sub_1000B17F4(2uLL);
  if (!v4) {
    return 106LL;
  }
  *char v4 = 16 * v2;
  v4[1] = 1;
  return sub_1000E4F5C(a1, v2, 1, v4, 2uLL);
}

uint64_t sub_1000E5534(unsigned int a1, unsigned int a2, uint64_t a3, unsigned int a4, int a5)
{
  char v8 = a2;
  if (a2 >= 0x10) {
    sub_1001EE2A0();
  }
  unsigned __int16 v10 = 2 * a4 + 3;
  size_t v11 = (char *)sub_1000B17F4(2 * a4 + 3);
  if (!v11) {
    return 106LL;
  }
  char v12 = v11;
  unsigned int v13 = (unsigned __int16)(2 * a4 + 3);
  if (a5) {
    char v14 = 3;
  }
  else {
    char v14 = 2;
  }
  *size_t v11 = v14 | (16 * v8);
  if (v13 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  723,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  v11[1] = 1;
  if (a5)
  {
    if (v13 <= 2) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  726,  "ByteStream_NumReadBytesAvail(bs) >= 1");
    }
    v11[2] = a5;
    unsigned __int16 v15 = 3;
  }

  else if (a4)
  {
    unsigned __int8 v17 = 0;
    unsigned __int16 v15 = 2;
    do
    {
      uint64_t v18 = (_BYTE *)(a3 + 4LL * v17);
      uint64_t v19 = a3 + 4LL * v17;
      unsigned int v21 = *(unsigned __int8 *)(v19 + 1);
      uint64_t v20 = (_BYTE *)(v19 + 1);
      if (v21 >= 2) {
        sub_1001EE2A0();
      }
      if (v15 >= v10) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  734,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      uint64_t v22 = v15 | 1LL;
      v12[v15] = (2 * v18[3]) | (4 * *(_BYTE *)(a3 + 4LL * v17 + 2));
      if (v22 >= v10) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  735,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      v15 += 2;
      v12[v22] = *v18 & 0xF0 | (8 * *v20);
      ++v17;
    }

    while (a4 > v17);
  }

  else
  {
    unsigned __int16 v15 = 2;
  }

  return sub_1000E5170(a1, v12, v15);
}

uint64_t sub_1000E570C(uint64_t a1, unsigned int a2)
{
  int v2 = 0;
  if (a2)
  {
    uint64_t v3 = a2;
    char v4 = (unsigned __int8 *)(a1 + 3);
    while (2)
    {
      switch(*(v4 - 3))
      {
        case 1u:
        case 2u:
        case 8u:
          goto LABEL_7;
        case 3u:
          v2 += 5;
          goto LABEL_8;
        case 4u:
        case 7u:
          v2 += *v4 + 4;
          goto LABEL_8;
        case 5u:
        case 6u:
          v2 += 3;
          goto LABEL_6;
        default:
LABEL_6:
          v2 += *v4;
LABEL_7:
          v2 += 2;
LABEL_8:
          v4 += 16;
          if (!--v3) {
            return (unsigned __int16)v2;
          }
          continue;
      }
    }
  }

  return (unsigned __int16)v2;
}

_BYTE *sub_1000E5784(_BYTE *result, unsigned __int8 *a2, unsigned int a3, int a4)
{
  if (a3)
  {
    uint64_t v6 = result;
    uint64_t v7 = a3;
    while (1)
    {
      unsigned int v8 = *a2;
      if (v8 < 8 || a4 != 0)
      {
        if (v6[15])
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_76:
          int v54 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_78:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  794,  v54);
        }

        uint64_t v10 = *((unsigned __int16 *)v6 + 6);
        if (v6[14] != 2)
        {
          int v54 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_78;
        }

        uint64_t v11 = *(void *)v6;
        *((_WORD *)v6 + 6) = v10 + 1;
        *(_BYTE *)(v11 + v10) = v8;
        unsigned int v8 = *a2;
      }

      switch(v8)
      {
        case 1u:
        case 2u:
          if (v6[15])
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_80:
            uint64_t v55 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_82:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  800,  v55);
          }

          uint64_t v12 = *((unsigned __int16 *)v6 + 6);
          if (v6[14] != 2)
          {
            uint64_t v55 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_82;
          }

uint64_t sub_1000E6010( unsigned int a1, unsigned int a2, unsigned int a3, unsigned __int8 *a4, unsigned int a5, int a6)
{
  __int16 v12 = sub_1000E570C((uint64_t)a4, a5);
  if (a3 >= 0x10) {
    sub_1001EE2A0();
  }
  if (!a4 && a5) {
    sub_1001EE2A0();
  }
  if (a2 <= 0xC && ((1 << a2) & 0x1014) != 0)
  {
    if (!a4) {
      goto LABEL_13;
    }
  }

  else
  {
    sub_1001EE2A0();
    if (!a4) {
      goto LABEL_13;
    }
  }

  if (!a6)
  {
    unsigned __int16 v13 = sub_1000E570C((uint64_t)a4, a5) + 2;
    goto LABEL_20;
  }

uint64_t sub_1000E6200( unsigned int a1, unsigned int a2, char a3, char a4, unsigned __int8 *a5, unsigned int a6)
{
  unsigned int v12 = sub_1000E570C((uint64_t)a5, a6);
  if (a2 >= 0x10) {
    sub_1001EE2A0();
  }
  unsigned __int16 v13 = (char *)sub_1000B17F4((unsigned __int16)(v12 + 4));
  if (!v13) {
    return 106LL;
  }
  if ((_WORD)v12 == 0xFFFC) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  924,  "(length) > 0");
  }
  uint64_t v14 = v13;
  char v17 = v13;
  __int16 v18 = v12 + 4;
  __int16 v21 = 2;
  unsigned __int16 v19 = v12 + 4;
  *unsigned __int16 v13 = 16 * a2;
  if ((unsigned __int16)(v12 + 4) == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  927,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  v13[1] = 3;
  if ((unsigned __int16)(v12 + 4) <= 2u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  928,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  v13[2] = 4 * a3;
  if (v12 >= 0xFFFC) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  929,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  unsigned __int16 v20 = 4;
  v13[3] = 4 * a4;
  sub_1000E5784(&v17, a5, a6, 1);
  if (v21 == 2)
  {
    size_t v15 = v20;
    unsigned __int16 v19 = v20;
  }

  else
  {
    size_t v15 = v19;
  }

  LOBYTE(v21) = 15;
  return sub_1000E4F5C(a1, a2, 3, v14, v15);
}

uint64_t sub_1000E63A0(unsigned int a1, int a2, unsigned int a3, char a4, int a5)
{
  char v7 = a3;
  if (a3 >= 0x10) {
    sub_1001EE2A0();
  }
  if (a2 != 3 && a2 != 5) {
    sub_1001EE2A0();
  }
  uint64_t v10 = (char *)sub_1000B17F4(4uLL);
  if (!v10) {
    return 106LL;
  }
  char v11 = 16 * v7;
  if (a5)
  {
    char v12 = v11 | 3;
    v10[2] = a4;
    v10[3] = a5;
    size_t v13 = 4LL;
  }

  else
  {
    char v12 = v11 | 2;
    size_t v13 = 2LL;
  }

  *uint64_t v10 = v12;
  v10[1] = a2;
  return sub_1000E5170(a1, v10, v13);
}

uint64_t sub_1000E6454(unsigned int a1, unsigned int a2, const void *a3, unsigned int a4, int a5)
{
  char v8 = a2;
  if (a2 >= 0x10) {
    sub_1001EE2A0();
  }
  uint64_t v10 = (char *)sub_1000B17F4(a4 + 3);
  if (!v10) {
    return 106LL;
  }
  int v11 = (unsigned __int16)(a4 + 3);
  if ((_WORD)a4 == 0xFFFD) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  1083,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  char v12 = v10;
  char v13 = 16 * v8;
  if (a5)
  {
    *uint64_t v10 = v13 | 3;
    if (v11 == 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  1090,  "ByteStream_NumReadBytesAvail(bs) >= 1");
    }
    v10[1] = 11;
    if (v11 == 2) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  1091,  "ByteStream_NumReadBytesAvail(bs) >= 1");
    }
    v10[2] = a5;
    unsigned __int16 v14 = 3;
  }

  else
  {
    *uint64_t v10 = v13 | 2;
    if (v11 == 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  1086,  "ByteStream_NumReadBytesAvail(bs) >= 1");
    }
    v10[1] = 11;
    if (v11 - 2 < a4) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c",  1087,  "ByteStream_NumReadBytesAvail(bs) >= (dataLen)");
    }
    memmove(v10 + 2, a3, a4);
    unsigned __int16 v14 = a4 + 2;
  }

  return sub_1000E5170(a1, v12, v14);
}

uint64_t sub_1000E65CC(unsigned int a1, unsigned int a2, int a3, char a4)
{
  char v6 = a2;
  if (a2 >= 0x10) {
    sub_1001EE2A0();
  }
  char v8 = (char *)sub_1000B17F4(3uLL);
  if (!v8) {
    return 106LL;
  }
  char v9 = 16 * v6;
  if (a3)
  {
    char v10 = v9 | 2;
    size_t v11 = 2LL;
  }

  else
  {
    char v10 = v9 | 3;
    v8[2] = a4;
    size_t v11 = 3LL;
  }

  *char v8 = v10;
  v8[1] = 13;
  return sub_1000E5170(a1, v8, v11);
}

uint64_t sub_1000E665C(int a1, char a2, char a3)
{
  v16[0] = 0LL;
  int v6 = *(unsigned __int16 *)(sub_1001EDBA0(3u) + 4);
  __int16 v13 = a1;
  char v14 = a2;
  char v15 = a3;
  uint64_t result = sub_1000D8DAC(a1);
  if (result)
  {
    uint64_t v8 = result;
    char v9 = sub_1000D8A0C();
    unsigned int v11 = *(_DWORD *)(v8 + 24);
    uint64_t v10 = v8 + 24;
    *(_BYTE *)(v10 + 21) = v9;
    v16[1] = &v13;
    LOWORD(v16[0]) = 4;
    *(_BYTE *)(v10 + 20) = a2;
    sub_1001EEB14(v11);
    if (v6) {
      int v12 = v6;
    }
    else {
      int v12 = 20;
    }
    return sub_1001EE6E8((uint64_t)sub_1000E6704, v16, v12, (int *)v10);
  }

  return result;
}

void sub_1000E6704(uint64_t a1)
{
  int v18 = 0;
  char v1 = *(unsigned __int16 **)(a1 + 8);
  uint64_t v2 = *v1;
  uint64_t v3 = *((unsigned __int8 *)v1 + 2);
  uint64_t v4 = *((unsigned __int8 *)v1 + 3);
  uint64_t v5 = sub_1000D8DAC(*v1);
  if (v5)
  {
    uint64_t v6 = v5;
    if ((_DWORD)v3 == *(unsigned __int8 *)(v5 + 44))
    {
      if (sub_1000D8A28() || (int v7 = *(unsigned __int8 *)(v6 + 45), v7 != sub_1000D8A0C()))
      {
        sub_1000E665C(v2, v3, v4);
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Didn't get command response to transaction %d within timeout period",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v3);
          char v15 = (os_log_s *)sub_100086554(3u);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        LOBYTE(v18) = (16 * v3) | 3;
        BYTE1(v18) = v4;
        if (v4 > 9 || ((1 << v4) & 0x2A8) == 0)
        {
          BYTE2(v18) = -1;
          int v17 = 3;
        }

        else
        {
          HIWORD(v18) = -256;
          int v17 = 4;
        }

        sub_1000DE8D0(v2, (unsigned __int8 *)&v18, v17);
      }
    }
  }

uint64_t sub_1000E6838(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 40)) {
    sub_1001EE2A0();
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    sub_1001EE2A0();
    uint64_t v2 = *(void *)(a1 + 8);
  }

  *(_BYTE *)(a1 + 40) = *(unsigned __int16 *)(v2 + 4) / (*(unsigned __int16 *)(a1 + 34) - 1) + 1;
  return sub_1000E6890(a1, 1);
}

uint64_t sub_1000E6890(uint64_t a1, int a2)
{
  if (!*(_BYTE *)(a1 + 40)) {
    sub_1001EE2A0();
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    v30[0] = 0;
    __int16 v29 = 0;
    if (a2)
    {
      if (*(unsigned __int8 *)(a1 + 40) < 2u)
      {
        size_t v5 = 0LL;
      }

      else
      {
        sub_1001EFEB8(v4, (unsigned __int16)(*(_WORD *)(a1 + 34) - 1));
        sub_1001EFCEC((char *)(a1 + 41), v4, 1u);
        LOBYTE(v29) = *(_BYTE *)(a1 + 41) | 4;
        HIBYTE(v29) = *(_BYTE *)(a1 + 40);
        sub_1001EFCEC(v30, v4, 1u);
        size_t v5 = 3LL;
      }
    }

    else
    {
      sub_1001EFF04(v4, (unsigned __int16)(*(_WORD *)(a1 + 34) - 1));
      if (*(_BYTE *)(a1 + 40) == 1) {
        char v6 = 12;
      }
      else {
        char v6 = 8;
      }
      char v7 = *(_BYTE *)(a1 + 41) | v6;
      *(_BYTE *)(a1 + 41) = v7;
      LOBYTE(v29) = v7;
      size_t v5 = 1LL;
    }

    uint64_t v8 = (unsigned __int8 *)sub_1001EF29C(2u);
    if (!v8)
    {
      uint64_t v4 = 106LL;
LABEL_21:
      int v18 = *(void **)(a1 + 8);
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"SendFragment failed", v19, v20, v21, v22, v23, v24, v25, v28);
        int v26 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          sub_1006578C0();
        }
      }

      *(void *)(a1 + 8) = v18[1];
      *(_BYTE *)(a1 + 40) = 0;
      sub_1001EF69C(v18);
      return v4;
    }

    uint64_t v9 = (uint64_t)v8;
    sub_1001EFB10(v8, (char *)&v29, v5, 0);
    sub_1001EFC20((unsigned __int8 *)v9, *(void *)(a1 + 8));
    if (!*(_WORD *)(v9 + 4)) {
      sub_1001EE2A0();
    }
    uint64_t v4 = sub_100172A98((uint64_t)sub_1000E6A94, *(unsigned __int16 *)(a1 + 38), 0LL, v9, 0);
    if ((_DWORD)v4)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"L2CAP Write failed: %!", v10, v11, v12, v13, v14, v15, v16, v4);
        int v17 = (os_log_s *)sub_100086554(3u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1001EF69C((void *)v9);
      goto LABEL_21;
    }
  }

  return v4;
}

void sub_1000E6A94(unsigned int a1, void *a2)
{
  uint64_t v3 = sub_1000D8DAC(a1);
  if (v3)
  {
    uint64_t v4 = v3;
    char v5 = *(_BYTE *)(v3 + 40);
    if (!v5)
    {
      sub_1001EE2A0();
      char v5 = *(_BYTE *)(v4 + 40);
    }

    char v6 = v5 - 1;
    *(_BYTE *)(v4 + 40) = v6;
    if (v6)
    {
    }

    else
    {
      uint64_t v15 = *(void **)(v4 + 8);
      if (!v15) {
        return;
      }
      *(void *)(v4 + 8) = v15[1];
      sub_1001EF69C(v15);
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"No signalling channel found for CID %d", v7, v8, v9, v10, v11, v12, v13, a1);
    uint64_t v14 = (os_log_s *)sub_100086554(3u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_1000E6B88(const char *a1, int a2, const char *a3)
{
}

uint64_t sub_1000E6BCC(uint64_t a1)
{
  if ((_DWORD)xmmword_1008F6F18) {
    return 119LL;
  }
  if (a1)
  {
    uint64_t v3 = sub_1000B1814(0x60uLL);
    qword_1008F29A0 = (uint64_t)v3;
    if (v3)
    {
      *uint64_t v3 = a1;
      int v4 = *(unsigned __int8 *)sub_1001EDBA0(4u);
      *(_BYTE *)(qword_1008F29A0 + 88) = v4;
      if ((v4 - 17) <= 0xFFFFFFEF)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"invalid maxTransactions value (%d), setting to %d\n",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  *(unsigned __int8 *)(qword_1008F29A0 + 88));
          uint64_t v12 = (os_log_s *)sub_100086554(4u);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
            sub_10065B06C();
          }
        }

        *(_BYTE *)(qword_1008F29A0 + 88) = 16;
      }

      int v13 = *(unsigned __int8 *)(sub_1001EDBA0(4u) + 1);
      *(_BYTE *)(qword_1008F29A0 + 89) = v13;
      if (!v13)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"invalid maxConnections value (%d), setting to 1\n",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  *(unsigned __int8 *)(qword_1008F29A0 + 89));
          uint64_t v21 = (os_log_s *)sub_100086554(4u);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
            sub_10065B06C();
          }
        }

        *(_BYTE *)(qword_1008F29A0 + 89) = 1;
      }

      uint64_t v22 = sub_1001EDBA0(4u);
      uint64_t result = 0LL;
      *(_BYTE *)(qword_1008F29A0 + 91) = *(_BYTE *)(v22 + 2);
      LODWORD(xmmword_1008F6F18) = 1;
    }

    else
    {
      return 106LL;
    }
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

  return result;
}

uint64_t sub_1000E6D50()
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  if (*(void *)(qword_1008F29A0 + 8) || *(void *)(qword_1008F29A0 + 16)) {
    return 117LL;
  }
  if (*(void *)(qword_1008F29A0 + 72) || *(void *)(qword_1008F29A0 + 80)) {
    return 118LL;
  }
  if (*(_BYTE *)(qword_1008F29A0 + 90)) {
    return 141LL;
  }
  sub_1000B1838((void *)qword_1008F29A0);
  uint64_t result = 0LL;
  qword_1008F29A0 = 0LL;
  LODWORD(xmmword_1008F6F18) = 0;
  return result;
}

uint64_t sub_1000E6DD8(int *a1, uint64_t a2, char a3)
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  uint64_t v3 = qword_1008F29A0;
  uint64_t v7 = *(void *)(qword_1008F29A0 + 32);
  if (v7)
  {
    uint64_t result = sub_1000E73F4(a1, 2u, *(void *)(v7 + 8));
    if ((_DWORD)result) {
      return result;
    }
    uint64_t v3 = qword_1008F29A0;
  }

  uint64_t v9 = *(void *)(v3 + 24);
  if (v9)
  {
    uint64_t result = sub_1000E73F4(a1, 2u, *(void *)(v9 + 8));
    if ((_DWORD)result) {
      return result;
    }
    uint64_t v3 = qword_1008F29A0;
  }

  ++*(_BYTE *)(v3 + 90);
  uint64_t result = sub_1000D6348((uint64_t)a1, 4366, a2, a3);
  if ((_DWORD)result)
  {
    if (*(_BYTE *)(qword_1008F29A0 + 90)) {
      --*(_BYTE *)(qword_1008F29A0 + 90);
    }
  }

  return result;
}

uint64_t sub_1000E6EB4(int *a1, int a2, char a3)
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  char v4 = a2;
  if (!a2) {
    return sub_1000D6D54((uint64_t)a1, v4, a3);
  }
  uint64_t v6 = qword_1008F29A0;
  if (*(unsigned __int8 *)(qword_1008F29A0 + 90) < *(unsigned __int8 *)(qword_1008F29A0 + 89))
  {
    uint64_t v7 = *(void *)(qword_1008F29A0 + 32);
    if (v7)
    {
      uint64_t result = sub_1000E73F4(a1, 2u, *(void *)(v7 + 8));
      if ((_DWORD)result) {
        return result;
      }
      uint64_t v6 = qword_1008F29A0;
    }

    uint64_t v9 = *(void *)(v6 + 24);
    if (v9)
    {
      uint64_t result = sub_1000E73F4(a1, 2u, *(void *)(v9 + 8));
      if ((_DWORD)result) {
        return result;
      }
      uint64_t v6 = qword_1008F29A0;
    }

    ++*(_BYTE *)(v6 + 90);
    return sub_1000D6D54((uint64_t)a1, v4, a3);
  }

  return 3300LL;
}

uint64_t sub_1000E6F80(int *a1)
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  uint64_t v2 = sub_1000D6EB4((uint64_t)a1);
  if ((_DWORD)v2) {
    return v2;
  }
  uint64_t v4 = qword_1008F29A0;
  uint64_t v5 = *(void *)(qword_1008F29A0 + 32);
  if (v5)
  {
    uint64_t result = sub_1000E73F4(a1, 3u, *(void *)(v5 + 8));
    if ((_DWORD)result) {
      return result;
    }
    uint64_t v4 = qword_1008F29A0;
  }

  uint64_t v6 = *(void *)(v4 + 24);
  if (!v6) {
    return v2;
  }
  uint64_t result = sub_1000E73F4(a1, 3u, *(void *)(v6 + 8));
  if (!(_DWORD)result) {
    return v2;
  }
  return result;
}

uint64_t sub_1000E7018(int *a1)
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  uint64_t v1 = qword_1008F29A0;
  uint64_t v3 = *(void *)(qword_1008F29A0 + 32);
  if (v3)
  {
    uint64_t result = sub_1000E73F4(a1, 2u, *(void *)(v3 + 8));
    if ((_DWORD)result) {
      return result;
    }
    uint64_t v1 = qword_1008F29A0;
  }

  uint64_t v5 = *(void *)(v1 + 24);
  if (v5)
  {
    uint64_t result = sub_1000E73F4(a1, 2u, *(void *)(v5 + 8));
    if ((_DWORD)result) {
      return result;
    }
    uint64_t v1 = qword_1008F29A0;
  }

  ++*(_BYTE *)(v1 + 90);
  uint64_t v6 = *(void *)(v1 + 32);
  if (v6)
  {
    uint64_t result = sub_1000E73F4(a1, 1u, *(void *)(v6 + 8));
    uint64_t v1 = qword_1008F29A0;
  }

  else
  {
    uint64_t result = 0LL;
  }

  uint64_t v7 = *(void *)(v1 + 24);
  if (v7) {
    return sub_1000E73F4(a1, 1u, *(void *)(v7 + 8));
  }
  return result;
}

uint64_t sub_1000E70F8(uint64_t a1)
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  uint64_t v2 = qword_1008F29A0;
  uint64_t v3 = *(void *)(qword_1008F29A0 + 32);
  if (v3)
  {
    uint64_t result = sub_1000E734C(a1, *(void *)(v3 + 8));
    uint64_t v2 = qword_1008F29A0;
  }

  else
  {
    uint64_t result = 0LL;
  }

  uint64_t v5 = *(void *)(v2 + 24);
  if (v5)
  {
    uint64_t result = sub_1000E734C(a1, *(void *)(v5 + 8));
    uint64_t v2 = qword_1008F29A0;
  }

  if (*(_BYTE *)(v2 + 90)) {
    --*(_BYTE *)(v2 + 90);
  }
  return result;
}

void sub_1000E717C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *(unsigned __int16 **)(qword_1008F29A0 + 72);
  if (v2)
  {
    uint64_t v5 = 0LL;
    do
    {
      BOOL v6 = *(_DWORD *)a1 == *(_DWORD *)v2 && *(unsigned __int16 *)(a1 + 4) == v2[2];
      if (!v6 || a2 && *a2 != *((unsigned __int8 *)v2 + 6))
      {
        uint64_t v7 = (void **)(v2 + 12);
        goto LABEL_8;
      }

      uint64_t v8 = (void *)*((void *)v2 + 3);
      if (v5)
      {
        v5[3] = v8;
        if (!*((void *)v2 + 3)) {
          goto LABEL_16;
        }
      }

      else
      {
        *(void *)(qword_1008F29A0 + 72) = v8;
        if (!v8)
        {
LABEL_16:
          uint64_t v9 = qword_1008F29A0;
          if (*(unsigned __int16 **)(qword_1008F29A0 + 80) != v2)
          {
            sub_1001EE2A0();
            uint64_t v9 = qword_1008F29A0;
          }

          *(void *)(v9 + 80) = v5;
        }
      }

      sub_1000B1838(*((void **)v2 + 1));
      sub_1000B1838(v2);
      if (a2) {
        return;
      }
      if (v5)
      {
        uint64_t v7 = v5 + 3;
        uint64_t v2 = (unsigned __int16 *)v5;
      }

      else
      {
        uint64_t v2 = 0LL;
        uint64_t v7 = (void **)(qword_1008F29A0 + 72);
      }

uint64_t sub_1000E727C(uint64_t a1, int a2)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  uint64_t v4 = qword_1008F29A0;
  if (a2)
  {
    uint64_t v5 = *(void *)(qword_1008F29A0 + 32);
    if (!v5)
    {
      sub_1001EE2A0();
      uint64_t v4 = qword_1008F29A0;
      uint64_t v5 = *(void *)(qword_1008F29A0 + 32);
    }

    if (!*(void *)(v5 + 8))
    {
      sub_1001EE2A0();
      uint64_t v4 = qword_1008F29A0;
      uint64_t v5 = *(void *)(qword_1008F29A0 + 32);
    }
  }

  else
  {
    uint64_t v5 = *(void *)(qword_1008F29A0 + 24);
    if (!v5)
    {
      sub_1001EE2A0();
      uint64_t v4 = qword_1008F29A0;
      uint64_t v5 = *(void *)(qword_1008F29A0 + 24);
    }

    if (!*(void *)(v5 + 8))
    {
      sub_1001EE2A0();
      uint64_t v4 = qword_1008F29A0;
      uint64_t v5 = *(void *)(qword_1008F29A0 + 24);
    }
  }

  BOOL v6 = (uint64_t *)(v5 + 8);
  uint64_t v7 = *(unsigned __int8 *)(v4 + 89);
  if (!v7) {
    return 0LL;
  }
  for (uint64_t result = *v6;
        *(_DWORD *)result != *(_DWORD *)a1 || *(unsigned __int16 *)(result + 4) != *(unsigned __int16 *)(a1 + 4);
        result += 32LL)
  {
    if (!--v7) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000E734C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (a1)
  {
    if (!a2) {
      return 0LL;
    }
  }

  else
  {
    sub_1001EE2A0();
    if (!v2) {
      return 0LL;
    }
  }

  uint64_t v4 = *(unsigned __int8 *)(qword_1008F29A0 + 89);
  if (!*(_BYTE *)(qword_1008F29A0 + 89)) {
    return 120LL;
  }
  while (*(_DWORD *)v2 != *(_DWORD *)a1 || *(unsigned __int16 *)(v2 + 4) != *(unsigned __int16 *)(a1 + 4))
  {
    v2 += 32LL;
    if (!--v4) {
      return 120LL;
    }
  }

  *(_DWORD *)uint64_t v2 = 0;
  *(_WORD *)(v2 + 4) = 0;
  if (*(_BYTE *)(v2 + 6))
  {
    uint64_t result = 0LL;
    *(_BYTE *)(v2 + 6) = 0;
    return result;
  }

  return 0LL;
}

uint64_t sub_1000E73F4(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1)
  {
    if (!a3) {
      return 0LL;
    }
  }

  else
  {
    sub_1001EE2A0();
    if (!v3) {
      return 0LL;
    }
  }

  uint64_t v6 = qword_1008F29A0;
  uint64_t v7 = *(unsigned __int8 *)(qword_1008F29A0 + 89);
  if (!*(_BYTE *)(qword_1008F29A0 + 89)) {
    return 120LL;
  }
  uint64_t v8 = v3;
  do
  {
    if (*(_DWORD *)v8 == *a1 && *(unsigned __int16 *)(v8 + 4) == *((unsigned __int16 *)a1 + 2))
    {
      switch(*(_BYTE *)(v8 + 6))
      {
        case 0:
          if (a2 == 2) {
            goto LABEL_35;
          }
          return 122LL;
        case 1:
          if (a2 == 3) {
            goto LABEL_35;
          }
          return 126LL;
        case 2:
          if (a2 > 1) {
            return 116LL;
          }
          goto LABEL_35;
        case 3:
          if (a2) {
            return 116LL;
          }
LABEL_35:
          uint64_t result = 0LL;
          *(_BYTE *)(v8 + 6) = a2;
          break;
        default:
          return 408LL;
      }

      return result;
    }

    v8 += 32LL;
    --v7;
  }

  while (v7);
  unint64_t v10 = 0LL;
  while (1)
  {
    if (*(_DWORD *)v3) {
      BOOL v11 = 0;
    }
    else {
      BOOL v11 = *(unsigned __int16 *)(v3 + 4) == 0;
    }
    if (!v11) {
      goto LABEL_22;
    }
    if (*(_BYTE *)(v3 + 6)) {
      sub_1001EE2A0();
    }
    if (a2 == 2) {
      break;
    }
    uint64_t v6 = qword_1008F29A0;
LABEL_22:
    ++v10;
    v3 += 32LL;
  }

  int v13 = *a1;
  *(_WORD *)(v3 + 4) = *((_WORD *)a1 + 2);
  *(_DWORD *)uint64_t v3 = v13;
  if (*(_BYTE *)(v3 + 6) != 2)
  {
    uint64_t result = 0LL;
    *(_BYTE *)(v3 + 6) = 2;
    return result;
  }

  return 0LL;
}

uint64_t sub_1000E7588()
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  LODWORD(result) = sub_1000D60D8( 4366,  (uint64_t)sub_1000E7614,  (uint64_t)sub_1000E762C,  (uint64_t)sub_1000E776C,  (uint64_t)sub_1000E78BC,  (uint64_t)sub_1000E79CC,  (uint64_t)sub_1000E7AB8,  (uint64_t)nullsub_65,  (uint64_t)sub_1000E7AE0,  (uint64_t)nullsub_66);
  if ((_DWORD)result == 119) {
    return 0LL;
  }
  else {
    return result;
  }
}

uint64_t sub_1000E7614()
{
  return (**(uint64_t (***)(void))qword_1008F29A0)();
}

uint64_t sub_1000E762C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!(_DWORD)a4)
  {
    uint64_t v9 = qword_1008F29A0;
    uint64_t v10 = *(void *)(qword_1008F29A0 + 32);
    if (v10)
    {
      uint64_t v4 = sub_1000E73F4(a1, 1u, *(void *)(v10 + 8));
      uint64_t v9 = qword_1008F29A0;
    }

    else
    {
      uint64_t v4 = 0LL;
    }

    uint64_t v11 = *(void *)(v9 + 24);
    if (v11) {
      uint64_t v4 = sub_1000E73F4(a1, 1u, *(void *)(v11 + 8));
    }
    if (!(_DWORD)v4)
    {
      uint64_t v6 = qword_1008F29A0;
      return (*(uint64_t (**)(int *, uint64_t))(*(void *)v6 + 16LL))(a1, v4);
    }

    uint64_t v12 = sub_1000D6EB4((uint64_t)a1);
    if ((_DWORD)v12)
    {
      uint64_t v13 = v12;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"AVRCP error %!. Failed to disconnet AVCTP %!, still connected",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  v13);
        uint64_t v21 = (os_log_s *)sub_100086554(4u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

  uint64_t v6 = qword_1008F29A0;
  uint64_t v7 = *(void *)(qword_1008F29A0 + 32);
  if (v7)
  {
    sub_1000E734C((uint64_t)a1, *(void *)(v7 + 8));
    uint64_t v6 = qword_1008F29A0;
  }

  uint64_t v8 = *(void *)(v6 + 24);
  if (v8)
  {
    sub_1000E734C((uint64_t)a1, *(void *)(v8 + 8));
    uint64_t v6 = qword_1008F29A0;
  }

  if (*(_BYTE *)(v6 + 90)) {
    --*(_BYTE *)(v6 + 90);
  }
  return (*(uint64_t (**)(int *, uint64_t))(*(void *)v6 + 16LL))(a1, v4);
}

uint64_t sub_1000E776C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_BYTE *)qword_1008F29A0;
  uint64_t v5 = *(void *)(qword_1008F29A0 + 24);
  if (v5 && (uint64_t v6 = *(unsigned __int8 *)(qword_1008F29A0 + 89), *(_BYTE *)(qword_1008F29A0 + 89)))
  {
    uint64_t v7 = *(void *)(v5 + 8);
    while (1)
    {
      BOOL v8 = *(_DWORD *)v7 == *(_DWORD *)a1 && *(unsigned __int16 *)(v7 + 4) == *(unsigned __int16 *)(a1 + 4);
      if (v8 && *(_BYTE *)(v7 + 6) == 2) {
        break;
      }
      v7 += 32LL;
      if (!--v6) {
        goto LABEL_11;
      }
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"(addr=%s) Cannot disconnect when state is AVRCP_CONNECT_PENDING, issuing failure on ConnectCfm",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  a1);
      uint64_t v18 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return sub_1000E762C((int *)a1, 0LL, 0LL, 116LL);
  }

  else
  {
LABEL_11:
    uint64_t v9 = *(void *)(qword_1008F29A0 + 32);
    if (v9)
    {
      sub_1000E734C(a1, *(void *)(v9 + 8));
      uint64_t v4 = (_BYTE *)qword_1008F29A0;
      uint64_t v5 = *(void *)(qword_1008F29A0 + 24);
    }

    if (v5)
    {
      sub_1000E734C(a1, *(void *)(v5 + 8));
      uint64_t v4 = (_BYTE *)qword_1008F29A0;
    }

    if (v4[90]) {
      --v4[90];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 8LL))(a1, a2);
  }

void sub_1000E78BC(uint64_t a1, uint64_t a2, int a3, int a4, _BYTE *a5, unsigned int a6)
{
  if (a4)
  {
    if (a3 == 2)
    {
      sub_10009C570(a1, a2, 3310LL);
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Peer sent command with invalidPID flag set. Ignoring.",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v18);
      uint64_t v17 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else if (a6 >= 3 && !sub_1000E7D54((uint64_t)v19, a5, a6))
  {
    if (a3 == 2)
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, void *))(qword_1008F29A0 + 48);
      if (!v9) {
        return;
      }
    }

    else
    {
      if (a3 != 1) {
        return;
      }
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, void *))(qword_1008F29A0 + 40);
      if (!v9) {
        return;
      }
    }

    v9(a1, a2, v19);
  }

void sub_1000E79CC(uint64_t a1, int a2, unsigned int a3, int a4, void *ptr, uint64_t a6, uint64_t a7)
{
  if (a4 == 1 && (_DWORD)a7) {
    sub_10009C570(a1, a3, a7);
  }
  if (ptr) {
    sub_1000B1838(ptr);
  }
  uint64_t v9 = sub_1000E7D00();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_1000D6F60( v9,  4366,  *(unsigned __int8 *)(v9 + 6),  *(unsigned __int8 *)(v9 + 7),  *(char **)(v9 + 8),  *(unsigned __int16 *)(v9 + 16));
    if ((_DWORD)v11)
    {
      if ((_DWORD)v11 == 410)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Got WRITE_IN_PROGRESS from AVCTP on a sendcfm. Trying again later.",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  v20);
          uint64_t v19 = (os_log_s *)sub_100086554(4u);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        sub_1000E8078(v10);
        return;
      }

      if (a4 == 1) {
        sub_10009C570(v10, *(unsigned __int8 *)(v10 + 6), v11);
      }
      sub_1000B1838(*(void **)(v10 + 8));
    }

    sub_1000B1838((void *)v10);
  }

uint64_t sub_1000E7AB8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)qword_1008F29A0 + 24LL);
  if (v4) {
    return v4(result, a4);
  }
  return result;
}

void sub_1000E7AE0(uint64_t a1, uint64_t a2, int a3, int a4, unsigned __int8 *a5, unsigned int a6)
{
  if (a4)
  {
    if (a3 == 2)
    {
      sub_10009C570(a1, a2, 3311LL);
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Peer sent command with invalidPID flag set. Ignoring.",  v23,  v24,  v25,  v26,  v27,  v28,  v29,  v31);
      uint64_t v30 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    uint64_t v9 = a6 - 3;
    if (a6 >= 3)
    {
      uint64_t v11 = *a5;
      unsigned int v12 = *(unsigned __int16 *)(a5 + 1);
      uint64_t v13 = __rev16(v12);
      if ((_DWORD)v9 == bswap32(v12) >> 16) {
        goto LABEL_10;
      }
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Length doesn't match : AVCTP says %d, AVRCP says %d",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  v9);
        uint64_t v21 = (os_log_s *)sub_100086554(4u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      if (v9 >= v13)
      {
LABEL_10:
        if (a3 == 2)
        {
          uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *))(qword_1008F29A0 + 64);
          if (!v22) {
            return;
          }
        }

        else
        {
          if (a3 != 1) {
            return;
          }
          uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *))(qword_1008F29A0 + 56);
          if (!v22) {
            return;
          }
        }

        v22(a1, a2, v11, v13, a5 + 3);
      }
    }
  }

uint64_t sub_1000E7C60()
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  if (*(void *)(qword_1008F29A0 + 16) || *(void *)(qword_1008F29A0 + 8)) {
    return 0LL;
  }
  if (*(_BYTE *)(qword_1008F29A0 + 90)) {
    return 141LL;
  }
  uint64_t v1 = sub_1000E7D00();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    do
    {
      uint64_t v3 = (void *)v2[1];
      if (v3)
      {
        sub_1000B1838(v3);
        v2[1] = 0LL;
      }

      sub_1000B1838(v2);
      uint64_t v2 = (void *)sub_1000E7D00();
    }

    while (v2);
  }

  return sub_1000D6264(4366);
}

uint64_t sub_1000E7D00()
{
  uint64_t v2 = *(void *)(qword_1008F29A0 + 72);
  uint64_t v1 = *(void *)(qword_1008F29A0 + 80);
  v0 = (void *)(qword_1008F29A0 + 72);
  if (v2)
  {
    if (v2 == v1)
    {
      void *v0 = 0LL;
      v0[1] = 0LL;
    }

    else
    {
      void *v0 = *(void *)(v2 + 24);
    }
  }

  else if (v1)
  {
    sub_1001EE2A0();
  }

  return v2;
}

uint64_t sub_1000E7D54(uint64_t a1, _BYTE *a2, unsigned int a3)
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  if (a3 < 3) {
    return 411LL;
  }
  if (!a2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c",  769,  "packet");
  }
  if (!(_WORD)a3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c",  770,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  *(_BYTE *)a1 = *a2;
  int v4 = a2[1] & 7;
  *(_BYTE *)(a1 + 2) = v4;
  int v5 = a2[1] >> 3;
  *(_BYTE *)(a1 + 1) = a2[1] >> 3;
  if ((unsigned __int16)a3 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c",  776,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  uint64_t v3 = 411LL;
  if ((unsigned __int16)a3 >= 3u && v5 != 30 && v4 != 5)
  {
    uint64_t v3 = 0LL;
    *(_BYTE *)(a1 + 3) = a2[2];
    *(void *)(a1 + 8) = a2 + 3;
    *(_WORD *)(a1 + 16) = a3 - 3;
  }

  return v3;
}

uint64_t sub_1000E7E40(uint64_t a1, unsigned int a2, unsigned __int8 *a3)
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  if (!a3)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  if (*a3 > 0xFu) {
    return 101LL;
  }
  unsigned int v6 = *((unsigned __int16 *)a3 + 8);
  if (*((_WORD *)a3 + 8))
  {
    if (!*((void *)a3 + 1)) {
      return 101LL;
    }
  }

  if (a3[1] == 30 || a3[2] == 5) {
    return 102LL;
  }
  unsigned __int16 v9 = v6 + 3;
  uint64_t v10 = (char *)sub_1000B1814((unsigned __int16)(v6 + 3));
  if (!v10) {
    return 106LL;
  }
  if ((_WORD)v6 == 0xFFFD) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c",  825,  "(packetLen) > 0");
  }
  uint64_t v11 = v10;
  *uint64_t v10 = *a3;
  char v12 = v10[1] | (8 * a3[1]);
  v10[1] = v12;
  v10[1] = a3[2] & 7 | v12;
  if ((unsigned __int16)(v6 + 3) == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c",  831,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  if (v6 >= 0xFFFD) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c",  832,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  v10[2] = a3[3];
  int v13 = (unsigned __int16)(v6 + 3) - 3;
  unsigned int v14 = *((unsigned __int16 *)a3 + 8);
  if (v13 < v14)
  {
    sub_1001EE2A0();
    unsigned int v14 = *((unsigned __int16 *)a3 + 8);
  }

  if (v13 < (int)v14) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c",  836,  "ByteStream_NumReadBytesAvail(bs) >= (frame->operandCount)");
  }
  memmove(v11 + 3, *((const void **)a3 + 1), v14);
  if ((*a3 & 8) != 0) {
    int v15 = 2;
  }
  else {
    int v15 = 1;
  }
  uint64_t v16 = sub_1000D6F60(a1, 4366, a2, v15, v11, v9);
  uint64_t v7 = v16;
  if ((_DWORD)v16)
  {
    if ((_DWORD)v16 == 410)
    {
      uint64_t v17 = sub_1000B17F4(0x20uLL);
      if (v17)
      {
        int v18 = *(_DWORD *)a1;
        v17[2] = *(_WORD *)(a1 + 4);
        *(_DWORD *)uint64_t v17 = v18;
        *((_BYTE *)v17 + 6) = a2;
        *((_BYTE *)v17 + 7) = v15;
        *((void *)v17 + 1) = v11;
        v17[8] = v9;
        sub_1000E8078((uint64_t)v17);
        return 0LL;
      }

      uint64_t v7 = 106LL;
    }

    sub_1000B1838(v11);
  }

  return v7;
}

uint64_t sub_1000E8058(uint64_t result)
{
  byte_1008DFDB8 = 1;
  word_1008DFDBA = 2;
  dword_1008DFDC0 = result;
  return result;
}

void sub_1000E8078(uint64_t a1)
{
  *(void *)(a1 + 24) = 0LL;
  uint64_t v2 = qword_1008F29A0;
  uint64_t v3 = (void *)(qword_1008F29A0 + 80);
  uint64_t v4 = *(void *)(qword_1008F29A0 + 80);
  if (v4)
  {
    *(void *)(v4 + 24) = a1;
  }

  else
  {
    if (*(void *)(qword_1008F29A0 + 72))
    {
      sub_1001EE2A0();
      uint64_t v2 = qword_1008F29A0;
    }

    *(void *)(v2 + 72) = a1;
    uint64_t v3 = (void *)(v2 + 80);
  }

  *uint64_t v3 = a1;
}

uint64_t sub_1000E80D4(uint64_t a1, unsigned __int8 *a2, char *a3)
{
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  memset(v27, 0, sizeof(v27));
  LOBYTE(v20) = a3[1];
  *(_WORD *)((char *)&v20 + 1) = 9;
  uint64_t v21 = &v23;
  uint64_t v22 = 0LL;
  char v24 = 88;
  __int16 v23 = 6400;
  unsigned __int8 v25 = *a3;
  int v6 = 7;
  uint64_t result = 102LL;
  char v26 = 0;
  if (v25 <= 0x2Fu)
  {
    switch(v25)
    {
      case 0x10u:
      case 0x18u:
        goto LABEL_8;
      case 0x11u:
        goto LABEL_16;
      case 0x12u:
        char v10 = **((_BYTE **)a3 + 2);
        goto LABEL_10;
      case 0x13u:
      case 0x15u:
        uint64_t v8 = a3[8];
        v27[2] = a3[8];
        __memmove_chk(&v27[3], *((void *)a3 + 2), v8, 504LL);
        int v9 = a3[8];
        goto LABEL_15;
      case 0x14u:
        v27[2] = a3[8];
        if (v27[2] >= 0xFDuLL) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  136,  "ByteStream_NumReadBytesAvail(bs) >= (command->u.attribute.numAttrs*2)");
        }
        __memmove_chk(&v27[3], *((void *)a3 + 2), 2LL * v27[2], 504LL);
        int v9 = 2 * a3[8];
LABEL_15:
        int v6 = v9 + 8;
        goto LABEL_16;
      case 0x16u:
        v27[2] = a3[8];
        uint64_t v11 = a3[9];
        v27[3] = a3[9];
        __memmove_chk(&v27[4], *((void *)a3 + 2), v11, 503LL);
        int v6 = a3[9] + 9;
        goto LABEL_16;
      case 0x17u:
        v27[2] = a3[8];
        if (!v27[2]) {
          goto LABEL_11;
        }
        uint64_t v12 = 0LL;
        uint64_t v13 = *((void *)a3 + 2);
        uint64_t v14 = 2LL * v27[2];
        do
        {
          if (v12 == 504) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  142,  "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          int v15 = &v27[v12 + 3];
          v15[1] = *(_BYTE *)(v13 + v12);
          _BYTE *v15 = *(_BYTE *)(v13 + v12 + 1);
          v12 += 2LL;
        }

        while (v14 != v12);
        int v6 = v12 + 8;
        goto LABEL_16;
      case 0x20u:
        *(void *)&v27[2] = **((void **)a3 + 1);
        v27[10] = a3[16];
        if (v27[10])
        {
          uint64_t v16 = 0LL;
          uint64_t v17 = *((void *)a3 + 3);
          uint64_t v18 = 4LL * v27[10];
          do
          {
            if (v16 == 496) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  154,  "ByteStream_NumReadBytesAvail(bs) >= 4");
            }
            uint64_t v19 = &v27[v16 + 11];
            void v19[3] = *(_DWORD *)(v17 + v16);
            v19[2] = BYTE1(*(_DWORD *)(v17 + v16));
            v19[1] = *(_WORD *)(v17 + v16 + 2);
            *uint64_t v19 = *(_BYTE *)(v17 + v16 + 3);
            v16 += 4LL;
          }

          while (v18 != v16);
          int v6 = v16 + 16;
        }

        else
        {
          int v6 = 16;
        }

        goto LABEL_16;
      default:
        return result;
    }
  }

  if (v25 - 64 < 2)
  {
LABEL_8:
    char v10 = a3[8];
LABEL_10:
    v27[2] = v10;
LABEL_11:
    int v6 = 8;
  }

  else if (v25 != 48)
  {
    if (v25 != 49) {
      return result;
    }
    v27[2] = a3[8];
    *(_DWORD *)&v27[3] = bswap32(*((_DWORD *)a3 + 3));
    int v6 = 12;
  }

uint64_t sub_1000E8438(uint64_t a1, unsigned __int8 *a2)
{
  if (a1 && a2)
  {
    memset(v3, 0, sizeof(v3));
    LOWORD(v3[0]) = 272;
    BYTE8(v3[0]) = 3;
    return sub_1000E80D4(a1, a2, (char *)v3);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_1000E8484(uint64_t a1, unsigned __int8 *a2, char a3)
{
  if (a1 && a2)
  {
    memset(v4, 0, sizeof(v4));
    LOWORD(v4[0]) = 817;
    BYTE8(v4[0]) = a3;
    return sub_1000E80D4(a1, a2, (char *)v4);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_1000E84CC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(void *)(*(void *)(qword_1008F29A0 + 8) + 8LL))
  {
    if (a3) {
      goto LABEL_3;
    }
  }

  else
  {
    sub_1001EE2A0();
    if (a3) {
      goto LABEL_3;
    }
  }

  sub_1001EE2A0();
LABEL_3:
  int v6 = (unsigned __int8 *)*((void *)a3 + 1);
  if (!v6)
  {
    sub_1001EE2A0();
    goto LABEL_16;
  }

  unsigned int v7 = *((unsigned __int16 *)a3 + 8);
  if (!*((_WORD *)a3 + 8))
  {
LABEL_16:
    uint64_t v11 = 0LL;
    uint64_t v12 = 0LL;
    unsigned int v16 = 134;
    goto LABEL_29;
  }

  int v8 = *a3;
  if (v7 <= 2)
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
    int v9 = 0;
    goto LABEL_18;
  }

  HIDWORD(v10) = *v6;
  LODWORD(v10) = bswap32(*(unsigned __int16 *)(v6 + 1));
  int v9 = v10 >> 16;
  if (v7 == 3)
  {
LABEL_18:
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
    uint64_t v11 = 0LL;
    goto LABEL_19;
  }

  uint64_t v11 = v6[3];
  if (v7 > 4)
  {
    uint64_t v12 = v6[4];
    if (v8 != 10)
    {
      int v15 = 0;
      int v14 = 0;
      goto LABEL_24;
    }

    if (v7 > 6)
    {
      if (v7 != 7)
      {
        int v13 = v6[7];
        int v14 = 0;
        int v15 = 3305;
        switch(v13)
        {
          case 0:
            goto LABEL_24;
          case 1:
            int v14 = 0;
            int v15 = 3306;
            break;
          case 2:
            int v14 = 0;
            int v15 = 3307;
            break;
          case 3:
            int v14 = 0;
            int v15 = 3308;
            break;
          default:
            int v14 = 0;
            int v15 = 3302;
            break;
        }

        goto LABEL_24;
      }

      goto LABEL_23;
    }

    goto LABEL_21;
  }

uint64_t sub_1000E86D8(uint64_t a1, int a2, uint64_t a3, _BYTE *a4)
{
  if (!a1 || !a3 || (int v5 = a4) == 0LL)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  a4[512] = 0;
  unsigned int v6 = *(unsigned __int16 *)(a1 + 16);
  if (!*(_WORD *)(a1 + 16)) {
    return 134LL;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7) {
    return 134LL;
  }
  if (v6 <= 3) {
    goto LABEL_12;
  }
  if (v6 == 4) {
    return 134LL;
  }
  if (*(_BYTE *)(v7 + 4)) {
    return 411LL;
  }
  if (v6 <= 6) {
    uint64_t v9 = 5LL;
  }
  else {
    uint64_t v9 = 7LL;
  }
  uint64_t result = 102LL;
  uint64_t v99 = v7;
  if (a2 <= 47)
  {
    v101 = a4 + 512;
    switch(a2)
    {
      case 16:
        if (v6 <= 6)
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        }

        else if (v6 != 7)
        {
          int v13 = *(unsigned __int8 *)(v7 + 7);
          *(_BYTE *)(a3 + 8) = v13;
          if (v6 < 9)
          {
            char v14 = 0;
            int v10 = 1;
            LODWORD(v9) = 8;
          }

          else
          {
            int v10 = 0;
            *(_BYTE *)(a3 + 9) = *(_BYTE *)(v7 + 8);
            char v14 = 1;
            LODWORD(v9) = 9;
          }

LABEL_146:
    *(_BYTE *)(a3 + 8) = v12;
    goto LABEL_147;
  }

  switch(a2)
  {
    case '0':
      if (v6 <= 6)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }

      else if (v6 > 0xA)
      {
        *(_DWORD *)(a3 + 8) = bswap32(*(_DWORD *)(v7 + 7));
        if (v6 > 0xE)
        {
          *(_DWORD *)(a3 + 12) = bswap32(*(_DWORD *)(v7 + 11));
          if (v6 != 15)
          {
            *(_BYTE *)(a3 + 16) = *(_BYTE *)(v7 + 15);
            return 0LL;
          }

          return 134LL;
        }

        goto LABEL_12;
      }

      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
LABEL_12:
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      return 134LL;
    case '1':
      *(void *)(a3 + 8) = a4;
      if (v6 <= 6)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        char v43 = 0;
        int v10 = 1;
        unsigned int v44 = 5;
      }

      else if (v6 == 7)
      {
        char v43 = 0;
        int v10 = 1;
        unsigned int v44 = 7;
      }

      else
      {
        int v10 = 0;
        *a4 = *(_BYTE *)(v7 + 7);
        char v43 = 1;
        unsigned int v44 = 8;
      }

      uint64_t v73 = *(_BYTE **)(a3 + 8);
      uint64_t result = 101LL;
      switch(*v73)
      {
        case 1:
          if ((v43 & 1) == 0) {
            goto LABEL_12;
          }
          goto LABEL_186;
        case 2:
          if ((v43 & 1) == 0) {
            goto LABEL_12;
          }
          unint64_t v81 = (unint64_t)(v73 + 16);
          uint64_t v82 = v73 + 8;
          v83 = (char *)(v7 + v44);
          do
          {
            char v84 = *v83++;
            *v82++ = v84;
          }

          while ((unint64_t)v82 < v81);
          break;
        case 3:
        case 4:
          break;
        case 5:
          if ((v43 & 1) == 0) {
            goto LABEL_12;
          }
          *((_DWORD *)v73 + 2) = bswap32(*(_DWORD *)(v7 + v44));
          return 0LL;
        case 6:
        case 7:
          if ((v43 & 1) == 0) {
            goto LABEL_12;
          }
LABEL_186:
          if (v6 <= v44) {
            return 134LL;
          }
          v73[8] = *(_BYTE *)(v7 + v44);
          return 0LL;
        case 8:
          *((void *)v73 + 1) = v5 + 24;
          if ((v43 & 1) != 0)
          {
            if (v6 > v44)
            {
              int v10 = 0;
              char v85 = *(_BYTE *)(v7 + v44++);
              *(_BYTE *)(*(void *)(a3 + 8) + 16LL) = v85;
              uint64_t v86 = *(void *)(a3 + 8);
              uint64_t v87 = *(_BYTE **)(v86 + 8);
              unsigned int v88 = *(unsigned __int8 *)(v86 + 16);
              unint64_t v89 = 2LL * *(unsigned __int8 *)(v86 + 16);
              if (v88 <= 0xF4) {
                uint64_t v90 = 2LL * v88;
              }
              else {
                uint64_t v90 = 488LL;
              }
              v91 = &v87[v90];
              unint64_t v92 = (int)(v6 - v44);
              goto LABEL_197;
            }
          }

          else
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          }

          uint64_t v94 = *(void *)(a3 + 8);
          uint64_t v87 = *(_BYTE **)(v94 + 8);
          uint64_t v95 = *(unsigned __int8 *)(v94 + 16);
          else {
            uint64_t v90 = 488LL;
          }
          v91 = &v87[v90];
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          unint64_t v92 = 0LL;
          unsigned int v88 = *(unsigned __int8 *)(*(void *)(a3 + 8) + 16LL);
          unint64_t v89 = 2LL * *(unsigned __int8 *)(*(void *)(a3 + 8) + 16LL);
          int v10 = 1;
LABEL_197:
          if (v88 > 0xF4) {
            unint64_t v89 = 488LL;
          }
          if (v92 < v89) {
            return 134LL;
          }
          if (v90)
          {
            v96 = (char *)(v7 + v44);
            do
            {
              char v97 = *v96++;
              *v87++ = v97;
            }

            while (v87 < v91);
          }

          break;
        case 9:
        case 0xA:
        case 0xB:
        case 0xC:
          return result;
        case 0xD:
          if ((v43 & 1) != 0)
          {
            if (v6 > v44)
            {
              int v10 = 0;
              char v93 = *(_BYTE *)(v7 + v44) & 0x7F;
              goto LABEL_209;
            }

            char v93 = 0;
          }

          else
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
            char v93 = 0;
            uint64_t v73 = *(_BYTE **)(a3 + 8);
          }

          int v10 = 1;
LABEL_209:
          v73[8] = v93;
          break;
        default:
          if (*v73 == 113) {
            break;
          }
          return result;
      }

          char v54 = (void **)v85;
LABEL_147:
          sub_100242FAC((uint64_t)v54);
          break;
        case 20:
          unsigned __int16 v29 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "Set SingleClickMode device setting: %d",  buf,  8u);
          }

          sub_1003DE1FC(a2, a4);
          goto LABEL_130;
        case 21:
          int v30 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "Set DoubleClickMode device setting: %d",  buf,  8u);
          }

          sub_1003DE26C(a2, a4);
          goto LABEL_130;
        case 22:
          char v31 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67110400;
            *(_DWORD *)&uint8_t buf[4] = WORD1(a4);
            *(_WORD *)&buf[8] = 1024;
            *(_DWORD *)&buf[10] = WORD1(a4);
            *(_WORD *)uint64_t v90 = 1024;
            *(_DWORD *)&v90[2] = BYTE1(a4);
            LOWORD(v91) = 1024;
            *(_DWORD *)((char *)&v91 + 2) = BYTE1(a4);
            HIWORD(v91) = 1024;
            *(_DWORD *)unint64_t v92 = a4;
            *(_WORD *)&v92[4] = 1024;
            *(_DWORD *)&v92[6] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "Set ClickHoldMode device setting: extra %u (0x%04X), left %u (0x%02X), right %u (0x%02X)",  buf,  0x26u);
          }

          uint64_t v32 = sub_1003D2B2C(a2, 38);
          int v10 = (v32 & 1) == 0 && sub_1003DFBD0(a2) != a4;
          sub_1003DE2DC(a2, a4);
          goto LABEL_168;
        case 23:
          uint64_t v33 = sub_1003D2B2C(a2, 43);
          uint64_t v34 = (os_log_s *)qword_1008F7560;
          if (a5 == 3 && v33)
          {
            if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_ERROR)) {
              sub_10065F728();
            }
            return 17LL;
          }

          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "Set DoubleClickInterval device setting: %d",  buf,  8u);
          }

          uint64_t v32 = sub_1003D2B2C(a2, 43);
          sub_1003DE3A4(a2, a4);
          goto LABEL_125;
        case 24:
          uint64_t v35 = sub_1003D2B2C(a2, 43);
          uint64_t v36 = (os_log_s *)qword_1008F7560;
          if (a5 == 3 && v35)
          {
            if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_ERROR)) {
              sub_10065F754();
            }
            return 17LL;
          }

          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "Set ClickHoldInterval device setting: %d",  buf,  8u);
          }

          uint64_t v32 = sub_1003D2B2C(a2, 43);
          sub_1003DE414(a2, a4);
LABEL_125:
          char v14 = 0;
          int v10 = 0;
          goto LABEL_169;
        case 26:
          signed int v37 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "Set ListeningModeConfigs device setting: %d",  buf,  8u);
          }

          int v10 = sub_1003DFA7C(a2) != a4;
          sub_1003DDFE0(a2, a4);
          char v14 = 0;
          uint64_t v15 = 1;
          goto LABEL_170;
        case 27:
          signed int v38 = sub_1003D2B2C(a2, 43);
          if (a5 - 3 <= 1 && v38)
          {
            if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_ERROR)) {
              sub_10065F780();
            }
            return 17LL;
          }

          uint64_t v55 = sub_1003D2B2C(a2, 15);
          uint64_t v56 = (os_log_s *)qword_1008F7560;
          unsigned int v57 = os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT);
          if ((v55 & 1) != 0)
          {
            if (v57)
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEFAULT,  "Don't set OneBudANCMode device setting for this device right now",  buf,  2u);
            }

            goto LABEL_130;
          }

          if (v57)
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEFAULT,  "Set OneBudANCMode device setting: %d",  buf,  8u);
          }

          uint64_t v32 = sub_1003D2B2C(a2, 43);
          int v10 = (v32 & 1) == 0 && sub_1003DFC9C(a2) != a4;
          char v80 = sub_1003DE484(a2, a4);
          sub_100216C00(v80, a2);
LABEL_168:
          char v14 = 0;
LABEL_169:
          uint64_t v15 = v32 ^ 1;
          goto LABEL_170;
        case 28:
          int v39 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "Set CrownRotationDirection: %d",  buf,  8u);
          }

          sub_1003DE4F4(a2, a4);
          goto LABEL_130;
        case 30:
          int v40 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "Set AutoAnswerMode: %d", buf, 8u);
          }

          sub_1003DE538(a2, a4);
          goto LABEL_130;
        case 31:
          uint64_t v41 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "Set Chime Volume: %d", buf, 8u);
          }

          sub_1003DE57C(a2, a4);
          goto LABEL_130;
        case 35:
          char v42 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "Set VolumeSwipeInterval device setting : VolumeSwipeInterval value %d",  buf,  8u);
          }

          sub_1003DE674(a2, a4);
          goto LABEL_130;
        case 36:
          char v43 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEFAULT,  "Set Call Management Config to value 0x%08X",  buf,  8u);
          }

          sub_1003DE7AC(a2, a4);
          goto LABEL_130;
        case 37:
          unsigned int v44 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "Set VolumeSwipeMode device setting : VolumeSwipeMode value %d",  buf,  8u);
          }

          sub_1003DE604(a2, a4);
          goto LABEL_130;
        case 38:
          uint64_t v45 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "Set Adaptive Volume Config to value 0x%08X",  buf,  8u);
          }

          sub_1003DE6E4(a2, a4);
          if (qword_1008D6458 != -1) {
            dispatch_once(&qword_1008D6458, &stru_100888B90);
          }
          sub_1003786A4((void *)qword_1008D6450, a2, a4);
          goto LABEL_130;
        case 39:
          uint64_t v46 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEFAULT,  "Set Software Mute config to 0x%08X",  buf,  8u);
          }

          sub_1003DE86C(a2, a4);
          goto LABEL_130;
        case 40:
          int v17 = (os_log_s *)qword_1008F7560;
          uint64_t v18 = os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT);
          if (v18)
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Set Conversation Detect config to 0x%08X",  buf,  8u);
          }

          sub_100216D84(v18, a2, a4);
          sub_1003DE914(a2, a4);
          if (qword_1008D5F40 != -1) {
            dispatch_once(&qword_1008D5F40, &stru_100888BB0);
          }
          sub_1003B2E8C((uint64_t)off_1008D5F38, a2);
          goto LABEL_130;
        case 41:
          uint64_t v47 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "Set SSL to 0x%08X", buf, 8u);
          }

          sub_1003DE9BC(a2, a4);
          goto LABEL_130;
        case 44:
          char v48 = (os_log_s *)qword_1008F7560;
          uint64_t v49 = a4;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109376;
            *(_DWORD *)&uint8_t buf[4] = a4;
            *(_WORD *)&buf[8] = 1024;
            *(_DWORD *)&buf[10] = BYTE1(a4);
            _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEFAULT,  "Set Hearing Aid Enrolled to 0x%08X and Hearing Aid Enabled to 0x%08X",  buf,  0xEu);
          }

          sub_1003E5D6C(a2, v49);
          sub_1003E5E4C(a2, BYTE1(a4));
          goto LABEL_130;
        case 46:
          uint64_t v19 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Set AutoANC Strength to 0x%08X",  buf,  8u);
          }

          sub_1003DEAA8(a2, a4);
          goto LABEL_130;
        case 47:
          uint64_t v50 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "Set HPS Gain Swipe to 0x%08X", buf, 8u);
          }

          sub_1003DECA0(a2, a4);
          goto LABEL_130;
        case 48:
          int v20 = sub_1003D2B2C(a2, 31);
          uint64_t v21 = (os_log_s *)qword_1008F7560;
          if (!v20)
          {
            if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_ERROR)) {
              sub_10065F7AC();
            }
            return 11LL;
          }

          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Set HRM enable / disable state to 0x%08X",  buf,  8u);
          }

          sub_1003DEB50(a2, a4);
LABEL_130:
          int v10 = 0;
LABEL_131:
          char v14 = 0;
          uint64_t v15 = 0;
          char v58 = a5 != 3;
          goto LABEL_132;
        case 49:
          char v51 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "Set In Case Tone config to 0x%08X",  buf,  8u);
          }

          sub_1003DEA64(a2, a4);
          goto LABEL_130;
        case 50:
          uint64_t v22 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Set Siri Multitone config to 0x%08X",  buf,  8u);
          }

          sub_1003DEBF8(a2, a4);
          goto LABEL_130;
        case 51:
          size_t v52 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEFAULT,  "Set Hearing Assist config to 0x%08X",  buf,  8u);
          }

          sub_1003DED48(a2, a4);
          goto LABEL_130;
        case 52:
          uint64_t v53 = (os_log_s *)qword_1008F7560;
          if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a4;
            _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_DEFAULT,  "Set Allow Off Option for Listening Mode config to 0x%08X",  buf,  8u);
          }

          int v10 = sub_1003E0054(a2) != a4;
          sub_1003DEDF0(a2, a4);
          goto LABEL_131;
        default:
          goto LABEL_131;
      }
    }

    else
    {
      if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_ERROR)) {
        sub_10065F610();
      }
      return 3LL;
    }
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008F7560, OS_LOG_TYPE_ERROR)) {
      sub_10065F5E4();
    }
    return 111LL;
  }

  return v16;
}

      if (*(_BYTE *)(v316 + 4384))
      {
        uint64_t v95 = sub_100601870(v95, v13[5]);
        v296 |= v95;
      }

      v104 = sub_100601D48(v95, v13[5]);
      v105 = v306;
      if (v104 > v306) {
        v105 = v104;
      }
      v306 = v105;
      if ((v303 & 1) != 0) {
        v303 = sub_100611360(v13[5]);
      }
      else {
        v303 = 0;
      }
      v106 = v13[5];
      v107 = *(void *)(v106 + 8);
      v108 = *(_BYTE *)(v107 + 139);
      if (!v108)
      {
        v108 = 1;
        *(_BYTE *)(v107 + 139) = 1;
      }

      a2[15] |= v108;
      v109 = *(_DWORD *)(v106 + 208);
      if (v109 == 3)
      {
        v110 = v304;
      }

      else
      {
        v110 = *(_DWORD *)(v106 + 208);
        if ((_DWORD)v304 != 3)
        {
          if ((_DWORD)v304 == v109) {
            v110 = v304;
          }
          else {
            v110 = 2;
          }
        }
      }

      v298 = v110;
      v294 = *(_DWORD *)(v106 + 208);
      v111 = *(unsigned __int8 *)(v107 + 145);
      if (v111 > a2[17]) {
        a2[17] = v111;
      }
      v301 = v96;
      v305 = v59;
      v112 = v14[391];
      sub_100494958(v13[4], (uint64_t)&v356);
      size = (char)v356.__r_.__value_.__s.__size_;
      v114 = v356.__r_.__value_.__r.__words[0];
      v115 = [v14[391] defaultCStringEncoding];
      if (size >= 0) {
        v116 = &v356;
      }
      else {
        v116 = (std::stringbuf::string_type *)v114;
      }
      v117 = [v112 stringWithCString:v116 encoding:v115];
      v299 = v70;
      v300 = v69;
      v302 = v21;
      v118 = v14[391];
      v119 = v13[5];
      v120 = *(unsigned __int8 *)(*(void *)(v119 + 8) + 3LL);
      v121 = sub_100610C38(v119);
      v122 = sub_100610DAC(v13[5]);
      v123 = v13[5];
      v124 = *(unsigned __int8 *)(v123 + 81);
      v125 = v124 == 32;
      v126 = v124 == 16;
      v127 = sub_100611304(v123);
      if (sub_100611304(v13[5])) {
        v128 = v16;
      }
      else {
        v128 = 0.0;
      }
      if (sub_100611304(v13[5])) {
        v129 = v17;
      }
      else {
        v129 = 0.0;
      }
      v130 = sub_100611360(v13[5]);
      v131 = [v118 stringWithFormat:@"[%@] AP:%d AD:%d(%d/%d) AS:%d RAS:%d DMN:%d FG:%d ADVBF:%d(%.0f/%.0f) Rg:%d Cri:%d pBT:%d pwrAsrt:%d CT:%d type:%d level:%d", v117, v120, v121, v300, v299, v305, v122, v125, v126, v127, *(void *)&v128, *(void *)&v129, v130, sub_10061136C(v13[5]), v313 & 1, *(unsigned __int8 *)(*(void *)(v13[5] + 8) + 142), *(unsigned __int8 *)(*(void *)(v13[5] + 8) + 143), *(unsigned int *)(v13[5] + 208), *(unsigned int *)(v13[5] + 96)];
      v132 = (void *)objc_claimAutoreleasedReturnValue(v131);
      [v312 addObject:v132];

      uint64_t v21 = v302;
      char v14 = &AMFDRSealingMapCopyLocalDictForClass_ptr;

      v307 |= v301;
      v304 = v298;
LABEL_175:

      if (*(void *)&buf[72])
      {
        *(void *)&buf[80] = *(void *)&buf[72];
        operator delete(*(void **)&buf[72]);
      }

      v356.__r_.__value_.__r.__words[0] = (std::string::size_type)&buf[48];
      sub_10004FEA4((void ***)&v356);
      v133 = (void *)v13[1];
      uint64_t v15 = v314;
      uint64_t v7 = v316;
      if (v133)
      {
        do
        {
          v134 = v133;
          v133 = (void *)*v133;
        }

        while (v133);
      }

      else
      {
        do
        {
          v134 = (void *)v13[2];
          int v11 = *v134 == (void)v13;
          int v13 = v134;
        }

        while (!v11);
      }

      int v13 = v134;
      if (v134 == (void *)(v316 + 2048)) {
        goto LABEL_186;
      }
    }
  }

  v307 = 0;
  v313 = 0;
  v293 = 0;
  v296 = 0;
  v306 = 0;
  v310 = 0;
  v287 = 0;
  v280 = 0;
  v281 = 0LL;
  uint64_t v15 = 0LL;
  v284 = 0;
  LOBYTE(v297) = 0;
  v283 = 0;
  v290 = 0LL;
  v291 = 4LL;
  v304 = 3LL;
  int v17 = 0.0;
  unsigned int v16 = 0.0;
  v303 = 1;
  v294 = 3;
LABEL_186:
  *(_DWORD *)(v7 + 3216) = v304;
  v309 = (v310 != 0) & v303;
  v308 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v14[391],  "stringWithFormat:",  @"AD:%d RD:%d AS:%d PHYS:%d MSL:%d (%d/%d) PSV:%d Rg:%d Cri:%d pBT:%d pWiFi:%d pCfg:%d type:%d",  v297 & 1,  *(unsigned __int8 *)(v7 + 2352),  v283,  a2[15],  v291,  v15,  v290,  *a2,  v309,  v307 & 1,  v313 & 1,  v293 & 1,  a2[17],  v304));
  v135 = (os_log_s *)qword_1008F75B8;
  if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
  {
    v136 = *(void *)(v7 + 2056);
    *(_DWORD *)buf = 134218242;
    *(void *)&uint8_t buf[4] = v136;
    *(_WORD *)&buf[12] = 2114;
    *(void *)&buf[14] = v308;
    _os_log_impl( (void *)&_mh_execute_header,  v135,  OS_LOG_TYPE_DEFAULT,  "ScanParams: numScanAgents %lu, combined params %{public}@",  buf,  0x16u);
  }

  v315 = v15;
  v137 = [v312 count];
  if (v137 >= -1)
  {
    v138 = 0LL;
    v139 = v137 - 1;
    v140 = ((v137 - 1) / 3 + 1);
    v141 = 2;
    v142 = 1;
    do
    {
      if (v141 >= v139) {
        v143 = v139;
      }
      else {
        v143 = v141;
      }
      v144 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v312, "subarrayWithRange:", v138, v143 + v142));
      v145 = (os_log_s *)qword_1008F75B8;
      if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
      {
        v146 = [v144 componentsJoinedByString:@"|"];
        *(_DWORD *)buf = 138543362;
        *(void *)&uint8_t buf[4] = v146;
        _os_log_impl((void *)&_mh_execute_header, v145, OS_LOG_TYPE_DEFAULT, "ScanParams: %{public}@", buf, 0xCu);
      }

      v141 += 3;
      v142 -= 3;
      v138 += 3LL;
      --v140;
    }

    while (v140);
  }

  if ((_DWORD)v291 == 1)
  {
    *((_DWORD *)a2 + 1) = 3145792;
    v147 = v315;
    v148 = BYTE4(v281);
    goto LABEL_205;
  }

  v147 = v315;
  v148 = BYTE4(v281);
  if ((_DWORD)v291 == 4)
  {
    *((_DWORD *)a2 + 1) = 3147273;
    *a2 = 1;
  }

  else
  {
    if ((_DWORD)v291 == 3)
    {
      v149 = 480;
    }

    else
    {
      if ((_DWORD)v291 != 2) {
        goto LABEL_205;
      }
      v149 = 96;
    }

    *((_DWORD *)a2 + 1) = v149 | 0x300000;
  }

LABEL_147:
      if (!v10) {
        return 0LL;
      }
      return 134LL;
    case 'P':
      if (v6 <= 6)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }

      else if (v6 != 7)
      {
        int v10 = 0;
        char v12 = *(_BYTE *)(v7 + 7) & 0x7F;
        goto LABEL_146;
      }

      char v12 = 0;
      int v10 = 1;
      goto LABEL_146;
  }

  return result;
}

                *uint64_t v2 = 1;
LABEL_148:
                if (*(_BYTE *)(a1 + 14) != 1) {
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2412,  "(*pBs).__RWFlag == BYTESTREAM_READ");
                }
                if (*v2)
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  uint64_t v94 = *(unsigned __int8 *)(a1 + 14);
                }

                else
                {
                  uint64_t v95 = *(unsigned __int16 *)(a1 + 12);
                  if (*(unsigned __int16 *)(a1 + 10) > v95)
                  {
                    v96 = *(void *)a1;
                    *(_WORD *)(a1 + 12) = v95 + 1;
                    char v97 = *(unsigned __int8 *)(v96 + v95);
                    BYTE5(ptr[1]) = *(_BYTE *)(v96 + v95);
                    uint64_t v94 = 1;
                    int v98 = 1;
                    goto LABEL_155;
                  }

                  uint64_t v94 = 1;
                }

                int v98 = 0;
                *uint64_t v2 = 1;
                char v97 = BYTE5(ptr[1]);
LABEL_155:
                LOBYTE(v410) = v97 >> 7;
                BYTE1(v410) = (v97 & 0x40) != 0;
                BYTE2(v410) = (v97 & 0x20) != 0;
                if (v94 != 1) {
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2418,  "(*pBs).__RWFlag == BYTESTREAM_READ");
                }
                if (!v98)
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  v109 = *(unsigned __int8 *)(a1 + 14);
                  *(_BYTE *)(a1 + 15) = 1;
                  if (v109 != 1) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2419,  "(*pBs).__RWFlag == BYTESTREAM_READ");
                  }
LABEL_168:
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  v110 = *(unsigned __int8 *)(a1 + 14);
                  *(_BYTE *)(a1 + 15) = 1;
                  if (v110 != 1) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2420,  "(*pBs).__RWFlag == BYTESTREAM_READ");
                  }
LABEL_169:
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  v111 = *(unsigned __int8 *)(a1 + 14);
                  *(_BYTE *)(a1 + 15) = 1;
                  if (v111 != 1) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2421,  "(*pBs).__RWFlag == BYTESTREAM_READ");
                  }
LABEL_170:
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  v112 = *(unsigned __int8 *)(a1 + 14);
                  *(_BYTE *)(a1 + 15) = 1;
                  if (v112 != 1) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2422,  "(*pBs).__RWFlag == BYTESTREAM_READ");
                  }
LABEL_171:
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  v113 = *(unsigned __int8 *)(a1 + 14);
                  *(_BYTE *)(a1 + 15) = 1;
                  if (v113 != 1) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2423,  "(*pBs).__RWFlag == BYTESTREAM_READ");
                  }
LABEL_172:
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  v114 = *(unsigned __int8 *)(a1 + 14);
                  *(_BYTE *)(a1 + 15) = 1;
                  if (v114 != 1) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2424,  "(*pBs).__RWFlag == BYTESTREAM_READ");
                  }
LABEL_173:
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  goto LABEL_174;
                }

                uint64_t v99 = *(unsigned __int16 *)(a1 + 12);
                if (*(unsigned __int16 *)(a1 + 10) <= v99)
                {
                  *uint64_t v2 = 1;
                  goto LABEL_168;
                }

                v100 = *(void *)a1;
                *(_WORD *)(a1 + 12) = v99 + 1;
                BYTE6(ptr[1]) = *(_BYTE *)(v100 + v99);
                if (*(unsigned __int16 *)(a1 + 10) <= (v99 + 1))
                {
                  *uint64_t v2 = 1;
                  goto LABEL_169;
                }

                v101 = *(void *)a1;
                *(_WORD *)(a1 + 12) = v99 + 2;
                HIBYTE(ptr[1]) = *(_BYTE *)(v101 + v99 + 1);
                if (*(unsigned __int16 *)(a1 + 10) <= (v99 + 2))
                {
                  *uint64_t v2 = 1;
                  goto LABEL_170;
                }

                v102 = *(void *)a1;
                v103 = v99 + 3;
                *(_WORD *)(a1 + 12) = v99 + 3;
                LOBYTE(ptr[2]) = *(_BYTE *)(v102 + v99 + 2);
                if (*(unsigned __int16 *)(a1 + 10) <= (v99 + 3))
                {
                  *uint64_t v2 = 1;
                  goto LABEL_171;
                }

                v104 = *(void *)a1;
                v105 = v99 + 4;
                *(_WORD *)(a1 + 12) = v105;
                LOBYTE(ptr[1]) = *(_BYTE *)(v104 + v103);
                if (*(unsigned __int16 *)(a1 + 10) - v105 <= 1)
                {
                  *uint64_t v2 = 1;
                  goto LABEL_172;
                }

                WORD1(ptr[2]) = *(_WORD *)(*(void *)a1 + v105);
                v106 = v105 + 2;
                *(_WORD *)(a1 + 12) = v105 + 2;
                if (*(unsigned __int16 *)(a1 + 10) <= (unsigned __int16)(v105 + 2))
                {
                  *uint64_t v2 = 1;
                  goto LABEL_173;
                }

                v107 = *(void *)a1;
                v108 = v105 + 3;
                *(_WORD *)(a1 + 12) = v108;
                BYTE4(ptr[2]) = *(_BYTE *)(v107 + v106);
                if (*(unsigned __int16 *)(a1 + 10) - v108 >= 6)
                {
                  sub_1001F0050((uint64_t)&ptr[2] + 5, *(void *)a1 + v108, 6uLL);
                  *(_WORD *)(a1 + 12) += 6;
                  goto LABEL_175;
                }

uint64_t sub_1000E93E8(uint64_t a1, unsigned int a2, char a3, int a4)
{
  if (a1)
  {
    uint64_t v18 = 0LL;
    uint64_t v19 = 5773568LL;
    if (a4 == 3301) {
      unsigned __int8 v4 = 8;
    }
    else {
      unsigned __int8 v4 = 10;
    }
    if (!a4) {
      unsigned __int8 v4 = 9;
    }
    v17[1] = &v19;
    v17[0] = v4;
    *(_WORD *)((char *)v17 + 1) = 9;
    BYTE3(v17[0]) = 0;
    BYTE3(v19) = a3;
    char v5 = 0;
    switch(a4)
    {
      case 3301:
        goto LABEL_11;
      case 3302:
      case 3303:
      case 3304:
        goto LABEL_12;
      case 3305:
        goto LABEL_14;
      case 3306:
        char v5 = 1;
        goto LABEL_14;
      case 3307:
        char v5 = 2;
        goto LABEL_14;
      default:
        if (a4)
        {
LABEL_12:
          char v5 = 3;
LABEL_14:
          *(_WORD *)((char *)&v19 + 5) = 256;
          HIBYTE(v19) = v5;
          __int16 v7 = 8;
        }

        else
        {
LABEL_11:
          *(_WORD *)((char *)&v19 + 5) = 0;
          __int16 v7 = 7;
        }

        LOWORD(v18) = v7;
        uint64_t v6 = sub_1000ECD48(a1, a2, (unsigned __int8 *)v17);
        if ((_DWORD)v6)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Failed to send Simple Meta Response %!", v8, v9, v10, v11, v12, v13, v14, v6);
            uint64_t v15 = (os_log_s *)sub_100086554(4u);
            if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }
        }

        break;
    }
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

  return v6;
}

uint64_t sub_1000E9538(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  if (a1 && a4 && a3)
  {
    uint64_t v6 = 2LL;
    uint64_t v5 = 16LL;
    BYTE1(v6) = a3;
    uint64_t v7 = a4;
    return sub_1000E9590(a1, a2, 12, (unsigned __int8 *)&v5);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_1000E9590(uint64_t a1, unsigned int a2, char a3, unsigned __int8 *a4)
{
  uint64_t v101 = 0LL;
  v102 = 0LL;
  uint64_t v103 = 0LL;
  memset(v104, 0, sizeof(v104));
  if (!qword_1008F29A0 || (uint64_t v4 = *(void *)(qword_1008F29A0 + 24)) == 0)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Failed to Send Response, AVRCP is not registered!",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v95);
      int v23 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 3308LL;
  }

  LOBYTE(v101) = a3;
  *(_WORD *)((char *)&v101 + 1) = 9;
  BYTE3(v101) = 0;
  v102 = v104;
  LOWORD(v103) = *(_WORD *)(v4 + 20);
  unsigned int v5 = (unsigned __int16)v103;
  if (!(_WORD)v103) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1191,  "((*operandCount)) > 0");
  }
  if ((unsigned __int16)v103 <= 2u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1193,  "ByteStream_NumReadBytesAvail(bs) >= 3");
  }
  BYTE2(v104[0]) = 88;
  LOWORD(v104[0]) = 6400;
  if ((unsigned __int16)v103 == 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1194,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  uint64_t v6 = a4;
  unsigned int v7 = a2;
  uint64_t v8 = a1;
  uint64_t v9 = 0LL;
  int v10 = *a4;
  BYTE3(v104[0]) = *a4;
  else {
    int v11 = 7;
  }
  uint64_t v12 = 3301LL;
  if (v10 > 47)
  {
    if (v10 == 48)
    {
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }

      else if ((unsigned __int16)v103 > 0xAu)
      {
        *(_DWORD *)((char *)v104 + 7) = bswap32(*((_DWORD *)a4 + 2));
        if ((unsigned __int16)v103 <= 0xEu) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1381,  "ByteStream_NumReadBytesAvail(bs) >= 4");
        }
        *(_DWORD *)((char *)v104 + 11) = bswap32(*((_DWORD *)a4 + 3));
        if ((unsigned __int16)v103 == 15) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1382,  "ByteStream_NumReadBytesAvail(bs) >= 1");
        }
        uint64_t v9 = 0LL;
        HIBYTE(v104[0]) = a4[16];
LABEL_76:
        int v13 = 16;
        goto LABEL_152;
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1380,  "ByteStream_NumReadBytesAvail(bs) >= 4");
    }

    if (v10 == 49)
    {
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }

      else if ((unsigned __int16)v103 != 7)
      {
        uint64_t v56 = *((void *)a4 + 1);
        BYTE7(v104[0]) = *(_BYTE *)v56;
        uint64_t v9 = 0LL;
        int v13 = 8;
        switch(*(_BYTE *)v56)
        {
          case 1:
            if ((unsigned __int16)v103 <= 8u) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1447,  "ByteStream_NumReadBytesAvail(bs) >= 1");
            }
            goto LABEL_147;
          case 2:
            if ((unsigned __int16)v103 <= 0xFu) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1456,  "ByteStream_NumReadBytesAvail(bs) >= (8)");
            }
            uint64_t v9 = 0LL;
            *((void *)&v104[0] + 1) = *(void *)(v56 + 8);
            goto LABEL_76;
          case 3:
          case 4:
          case 9:
          case 0xA:
            goto LABEL_152;
          case 5:
            if ((unsigned __int16)v103 <= 0xBu) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1460,  "ByteStream_NumReadBytesAvail(bs) >= 4");
            }
            uint64_t v9 = 0LL;
            BYTE11(v104[0]) = *(_DWORD *)(v56 + 8);
            BYTE10(v104[0]) = BYTE1(*(_DWORD *)(v56 + 8));
            BYTE9(v104[0]) = *(_WORD *)(v56 + 10);
            BYTE8(v104[0]) = *(_BYTE *)(v56 + 11);
            goto LABEL_151;
          case 6:
          case 7:
            if ((unsigned __int16)v103 <= 8u) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1452,  "ByteStream_NumReadBytesAvail(bs) >= 1");
            }
            goto LABEL_147;
          case 8:
            int v97 = v11;
            if ((unsigned __int16)v103 <= 8u) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1464,  "ByteStream_NumReadBytesAvail(bs) >= 1");
            }
            BYTE8(v104[0]) = *(_BYTE *)(v56 + 16);
            int v85 = BYTE8(v104[0]);
            unsigned int v86 = 2 * BYTE8(v104[0]);
            __int16 v48 = (unsigned __int16)(v103 - 9) >> 1;
            if ((unsigned __int16)v103 - 9 < 2 * v85) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1471,  "ByteStream_NumReadBytesAvail(bs) >= (count * dataElSize)");
            }
            uint64_t v49 = (2 * v85);
            __memmove_chk((unint64_t)v104 | 9, *(void *)(v56 + 8), v49, 503LL);
            int v13 = v49 + 9;
            uint64_t v87 = *((void *)v6 + 1);
            __int16 v50 = *(unsigned __int8 *)(v87 + 16);
            char v51 = *v6;
            uint64_t v52 = *(void *)(v87 + 8);
            goto LABEL_63;
          case 0xB:
            if ((unsigned __int16)v103 <= 9u) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1497,  "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            BYTE9(v104[0]) = *(_BYTE *)(v56 + 8);
            BYTE8(v104[0]) = *(_BYTE *)(v56 + 9);
            if ((unsigned __int16)v103 <= 0xBu) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1498,  "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            uint64_t v9 = 0LL;
            BYTE11(v104[0]) = *(_BYTE *)(v56 + 10);
            BYTE10(v104[0]) = *(_BYTE *)(v56 + 11);
LABEL_151:
            int v13 = 12;
            goto LABEL_152;
          case 0xC:
            if ((unsigned __int16)v103 <= 9u) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1502,  "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            uint64_t v9 = 0LL;
            BYTE9(v104[0]) = *(_BYTE *)(v56 + 8);
            BYTE8(v104[0]) = *(_BYTE *)(v56 + 9);
            int v13 = 10;
            goto LABEL_152;
          case 0xD:
            if ((unsigned __int16)v103 <= 8u) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1506,  "ByteStream_NumReadBytesAvail(bs) >= 1");
            }
LABEL_147:
            uint64_t v9 = 0LL;
            BYTE8(v104[0]) = *(_BYTE *)(v56 + 8);
            int v13 = 9;
            goto LABEL_152;
          default:
            return 101LL;
        }
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1444,  "ByteStream_NumReadBytesAvail(bs) >= 1");
    }

    int v13 = v11;
    __int16 v14 = 0;
    if (v10 == 65) {
      goto LABEL_152;
    }
    goto LABEL_165;
  }

  int v13 = v11;
  __int16 v14 = 0;
  switch(v10)
  {
    case 16:
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
LABEL_201:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1200,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }

      int v24 = a4[8];
      BYTE7(v104[0]) = a4[8];
      if ((unsigned __int16)v103 <= 8u) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1201,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      int v25 = v11;
      unsigned int v26 = a4[9];
      BYTE8(v104[0]) = a4[9];
      int v27 = (unsigned __int16)v103 - 9;
      if (v24 == 3)
      {
        else {
          uint64_t v29 = (unsigned __int16)(v103 - 9);
        }
        if (v27 < (int)v29) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1219,  "ByteStream_NumReadBytesAvail(bs) >= (count)");
        }
        __memmove_chk((unint64_t)v104 | 9, *((void *)a4 + 2), v29, 503LL);
        int v13 = v29 + 9;
        if (v26 > (unsigned __int16)v27)
        {
          __int16 v69 = v6[8];
          LOWORD(v26) = v6[9];
          unsigned int v70 = 1;
          char v71 = *v6;
          int v11 = v25;
          goto LABEL_128;
        }

LABEL_105:
        uint64_t v9 = 0LL;
        int v11 = v25;
        goto LABEL_152;
      }

      if (v24 == 2)
      {
        unsigned int v28 = (unsigned __int16)(v103 - 9);
        LODWORD(v29) = v28 / 3;
        else {
          unsigned int v30 = (unsigned __int16)(v103 - 9) / 3u;
        }
        if (v30)
        {
          uint64_t v31 = 0LL;
          int v13 = 3 * v30 + 9;
          uint64_t v32 = (_BYTE *)((unint64_t)v104 | 0xB);
          uint64_t v33 = 4LL * v30;
          unint64_t v34 = ((2863311531u * (unint64_t)v27) >> 31) & 0x1FFFFFFFCLL;
          int v11 = v25;
          while (v34 != v31)
          {
            uint64_t v35 = *((void *)a4 + 2);
            unsigned int v36 = *(_DWORD *)(v35 + v31);
            if (HIBYTE(v36))
            {
              uint64_t v94 = "0 == ((response->u.getCapabilities.capabilities.companyID[i]) & 0xFF000000)";
LABEL_185:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1211,  v94);
            }

            _BYTE *v32 = v36;
            uint64_t v37 = v35 + v31;
            *(v32 - 1) = BYTE1(*(_DWORD *)v37);
            *(v32 - 2) = *(_WORD *)(v37 + 2);
            v32 += 3;
            v31 += 4LL;
            if (v33 == v31) {
              goto LABEL_126;
            }
          }

          uint64_t v94 = "ByteStream_NumReadBytesAvail(bs) >= 3";
          goto LABEL_185;
        }

        int v13 = 9;
        int v11 = v25;
LABEL_126:
        if (3 * v26 <= v28)
        {
          uint64_t v9 = 0LL;
          goto LABEL_152;
        }

        __int16 v69 = 2;
        char v71 = 16;
        unsigned int v70 = 4;
LABEL_128:
        uint64_t v12 = sub_1000EBE4C( v8,  v29,  v69,  v26,  v71,  *((void *)v6 + 2) + v70 * (unint64_t)v29,  0LL);
        if ((_DWORD)v12) {
          goto LABEL_166;
        }
LABEL_129:
        uint64_t v9 = 3304LL;
        goto LABEL_152;
      }

      return 101LL;
    case 17:
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }

      else if ((unsigned __int16)v103 != 7)
      {
        int v38 = v11;
        BYTE7(v104[0]) = a4[8];
        unsigned int v39 = BYTE7(v104[0]);
        int v40 = (unsigned __int16)v103 - 8;
        else {
          uint64_t v41 = (unsigned __int16)(v103 - 8);
        }
        if (v40 < (int)v41) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1249,  "ByteStream_NumReadBytesAvail(bs) >= (count)");
        }
        __memmove_chk((char *)v104 + 8, *((void *)a4 + 2), v41, 504LL);
        int v13 = v41 + 8;
        if (v39 <= (unsigned __int16)v40)
        {
          uint64_t v9 = 0LL;
          int v11 = v38;
          goto LABEL_152;
        }

        uint64_t v12 = sub_1000EBE4C(v8, v41, 0xFFFF, v6[8], *v6, *((void *)v6 + 2) + v41, 0LL);
        if (!(_DWORD)v12)
        {
          int v11 = v38;
          goto LABEL_129;
        }

        goto LABEL_166;
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1243,  "ByteStream_NumReadBytesAvail(bs) >= 1");
    case 18:
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }

      else if ((unsigned __int16)v103 != 7)
      {
        int v25 = v11;
        BYTE7(v104[0]) = a4[8];
        unsigned int v42 = BYTE7(v104[0]);
        int v43 = (unsigned __int16)v103 - 8;
        else {
          unsigned int v44 = (unsigned __int16)(v103 - 8);
        }
        if (v43 < BYTE7(v104[0])) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1273,  "ByteStream_NumReadBytesAvail(bs) >= (response->u.playerAttributes.numAttrs)");
        }
        __memmove_chk((char *)v104 + 8, *((void *)a4 + 2), BYTE7(v104[0]), 504LL);
        int v45 = v6[8];
        int v13 = v45 + 8;
        uint64_t v12 = sub_1000EBE4C(v8, v44, 0xFFFF, v45, *v6, *((void *)v6 + 2) + v44, 0LL);
        if (!(_DWORD)v12)
        {
          int v11 = v25;
          goto LABEL_129;
        }

        sub_100242FAC((uint64_t)v94);
      }
    }

    else
    {
      if (os_log_type_enabled((os_log_t)qword_1008F7568, OS_LOG_TYPE_ERROR)) {
        sub_100670520();
      }
      int v11 = 111LL;
    }
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008F7568, OS_LOG_TYPE_ERROR)) {
      sub_1006705B4();
    }
    int v11 = 2LL;
  }

  if (__p)
  {
    unsigned int v96 = (uint64_t *)__p;
    operator delete(__p);
  }

  return v11;
}

        *(_DWORD *)(a1 + 418) = 0x80000;
LABEL_106:
        unsigned int v39 = 8;
        goto LABEL_111;
      case 8:
        if (*(_WORD *)(a1 + 418) != 0x2000) {
          goto LABEL_106;
        }
        sub_100360628(a1, (uint64_t)&unk_1008F079A);
        if (*(_DWORD *)(v23 + 24) != 8201) {
          goto LABEL_108;
        }
        uint64_t v41 = (os_log_s *)qword_1008F7568;
        if (os_log_type_enabled((os_log_t)qword_1008F7568, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v43[0]) = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "Log collection for MCU1 is completed.",  (uint8_t *)v43,  2u);
        }

        goto LABEL_107;
      case 9:
        if (*(_WORD *)(a1 + 418) == 0x2000)
        {
          unsigned int v42 = (os_log_s *)qword_1008F7568;
          if (os_log_type_enabled((os_log_t)qword_1008F7568, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(v43[0]) = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "Log collection for MCU1 and MCU2 are completed.",  (uint8_t *)v43,  2u);
          }

          sub_100360628(a1, (uint64_t)&unk_1008F089A);
LABEL_107:
          sub_10035FFF0(a1, a2, 4, a3, 0, 0, 0);
LABEL_108:
          unsigned int v39 = *(unsigned __int16 *)(a1 + 420);
LABEL_109:
          if (v39 > 9 || ((1 << v39) & 0x302) == 0)
          {
LABEL_112:
            if (v39 <= 9 && ((1 << v39) & 0x302) != 0 && *(_WORD *)(a1 + 418) == 8118)
            {
              sub_10035FFF0(a1, a2, 3, a3, 8118, 74, v39);
              uint64_t result = 0LL;
              uint64_t v29 = *(_WORD *)(a1 + 418) + 74;
              goto LABEL_44;
            }

            if ((v39 & 0xFFFE) != 2) {
              return 0LL;
            }
LABEL_117:
            int v27 = *(unsigned __int16 *)(a1 + 418);
            if (v27 > 0xF5F)
            {
              if (v27 == 3936)
              {
                sub_10035FFF0(a1, a2, 3, a3, 3936, 160, v39);
                uint64_t result = 0LL;
                uint64_t v29 = *(_WORD *)(a1 + 418) + 160;
LABEL_44:
                *(_WORD *)(a1 + 418) = v29;
                return result;
              }

              return 0LL;
            }

    if ((_DWORD)a6 == 704) {
      return;
    }
    if ((_DWORD)a6 != 711)
    {
      if ((_DWORD)a6 == 716) {
        return;
      }
      goto LABEL_108;
    }

    goto LABEL_119;
  }

  if (a7)
  {
    uint64_t v18 = sub_10057E488(a1, (uint64_t)v15);
    uint64_t v19 = v18;
    if (v18)
    {
      if (*(int *)(v18 + 16) >= 2)
      {
        uint64_t v20 = (os_log_s *)qword_1008F7748;
        if (os_log_type_enabled((os_log_t)qword_1008F7748, OS_LOG_TYPE_ERROR))
        {
          sub_1003CF00C((uint64_t)v15, buf);
          if ((SBYTE7(v77) & 0x80u) == 0) {
            uint64_t v21 = buf;
          }
          else {
            uint64_t v21 = *(uint8_t **)buf;
          }
          uint64_t v22 = *(int *)(v19 + 16);
          else {
            int v23 = off_1008A2120[v22];
          }
          *(_DWORD *)BOOL v92 = 136446466;
          char v93 = v21;
          uint64_t v94 = 2080;
          uint64_t v95 = v23;
          _os_log_error_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "PFC in progress for device %{public}s, ignoring duplicate request - current state is %s",  v92,  0x16u);
          if (SBYTE7(v77) < 0) {
            operator delete(*(void **)buf);
          }
        }

        return;
      }

      sub_10057E2D0(v18, v18, 3u);
      int v45 = [NSMutableDictionary dictionary];
      int v46 = *(void **)(v19 + 200);
      *(void *)(v19 + 200) = v45;

      *(void *)uint64_t v19 = v15;
      goto LABEL_54;
    }

    if (os_log_type_enabled((os_log_t)qword_1008F7748, OS_LOG_TYPE_ERROR)) {
      sub_100696690();
    }
  }

  else
  {
    uint64_t v33 = sub_10057E20C(a1, (uint64_t)&v74);
    if (v33)
    {
      uint64_t v19 = v33;
      unint64_t v34 = mach_absolute_time();
      uint64_t v35 = v34 - *(void *)(v19 + 152);
      *(void *)(v19 + 160) = v34 - *(void *)(v19 + 160);
      unsigned int v36 = v35 * dword_1008F1CE4 / *(unsigned int *)algn_1008F1CE8 / 0xF4240;
      *(_DWORD *)(v19 + 192) += v36;
      uint64_t v37 = *(void **)(v19 + 200);
      int v38 = [NSNumber numberWithInt:v36];
      [v37 setObject:v38 forKey:@"BasebandConnectionTimeMs"];

      unsigned int v39 = (os_log_s *)qword_1008F7748;
      if (os_log_type_enabled((os_log_t)qword_1008F7748, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v36;
        _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "Baseband took %d ms", buf, 8u);
      }

      *(_BYTE *)(v19 + 52) = 0;
      v92[0] = 0;
      sub_100242CA4(v92);
      uint64_t v90 = 0u;
      unsigned int v91 = 0u;
      unsigned int v88 = 0u;
      char v89 = 0u;
      unsigned int v86 = 0u;
      uint64_t v87 = 0u;
      uint64_t v84 = 0u;
      int v85 = 0u;
      unsigned int v82 = 0u;
      unsigned int v83 = 0u;
      char v80 = 0u;
      unsigned __int16 v81 = 0u;
      uint64_t v78 = 0u;
      uint64_t v79 = 0u;
      *(_OWORD *)buf = 0u;
      unint64_t v77 = 0u;
      sub_1001EE0BC((uint64_t)buf, 256, (uint64_t)"PFC Baseband took %d", v40, v41, v42, v43, v44, v36);
      sub_1000B9914((const char *)buf);
      sub_100242CD0(v92);
      sub_100242CD8(v92);
LABEL_54:
      unsigned int v47 = (os_log_s *)qword_1008F7748;
      if (os_log_type_enabled((os_log_t)qword_1008F7748, OS_LOG_TYPE_DEFAULT))
      {
        sub_1003CF00C((uint64_t)v15, buf);
        __int16 v48 = (SBYTE7(v77) & 0x80u) == 0 ? buf : *(uint8_t **)buf;
        *(_DWORD *)BOOL v92 = 136446466;
        char v93 = v48;
        uint64_t v94 = 1024;
        LODWORD(v95) = a4;
        _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "Fast Connect supported by device %{public}s with profileMask %x",  v92,  0x12u);
        if (SBYTE7(v77) < 0) {
          operator delete(*(void **)buf);
        }
      }

      uint64_t v49 = sub_1002E6E9C();
      __int16 v50 = (*(uint64_t (**)(uint64_t))(*(void *)v49 + 2496LL))(v49);
      if (v50) {
        LOBYTE(v50) = sub_1003E5B14(*(void *)v19);
      }
      *(_BYTE *)(v19 + 145) = v50;
      char v51 = mach_absolute_time();
      *(_WORD *)(v19 + 48) = a2;
      uint64_t v52 = (unsigned __int16 *)(v19 + 48);
      *((void *)v52 + 15) = v51;
      *((_DWORD *)v52 - 7) &= a4;
      *((_DWORD *)v52 - 6) = a4;
      *((_BYTE *)v52 - 20) = a7 != 0;
      *(void *)buf = 0LL;
      uu[0] = 0;
      sub_100242CA4(uu);
      unint64_t v53 = sub_100171EC4(*v52, (uint64_t *)buf);
      sub_100242CD0(uu);
      if ((_DWORD)v53) {
        goto LABEL_72;
      }
      if ((sub_1003CF350((unsigned __int8 *)v15) & 1) != 0 || (a3 & 0x10) != 0 && (*(void *)(a1 + 672) & 0x10) != 0)
      {
        int v54 = (os_log_s *)qword_1008F7748;
        if (os_log_type_enabled((os_log_t)qword_1008F7748, OS_LOG_TYPE_DEFAULT))
        {
          char v55 = sub_1003CF350((unsigned __int8 *)v15);
          *(_DWORD *)BOOL v92 = 67109120;
          LODWORD(v93) = v55;
          _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "isPaired:%d", v92, 8u);
        }

        *(void *)(*(void *)buf + 64LL) = &unk_1008A1E00;
        sub_100242C98(uu);
        unint64_t v53 = sub_1001F0324( (uint64_t)sub_100583964,  (uint64_t)(v15 + 128),  *(__int128 **)(*(void *)buf + 64LL),  (int *)(*(void *)buf + 72LL),  1);
        if ((_DWORD)v53)
        {
          uint64_t v56 = (os_log_s *)qword_1008F7748;
          if (os_log_type_enabled((os_log_t)qword_1008F7748, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)BOOL v92 = 67109120;
            LODWORD(v93) = v53;
            _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEFAULT,  "Policy Mgr for PFC new connection failed %d",  v92,  8u);
          }
        }

        sub_100242CD0(uu);
        if ((_DWORD)v53) {
LABEL_72:
        }
          sub_10057E5E8(a1, (uint64_t)&v74, v53);
      }

      sub_100242CD8(uu);
      return;
    }

    if (os_log_type_enabled((os_log_t)qword_1008F7748, OS_LOG_TYPE_ERROR)) {
      sub_1006966BC();
    }
  }

  __p[0] = (void *)11;
  *(void *)buf = __p;
  sub_1005BC610((uint64_t **)(a1 + 1320), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[36] = 0;
  __int16 v50 = v82;
  __p[0] = &dword_100000008 + 3;
  *(void *)buf = __p;
  sub_1005BC610((uint64_t **)(a1 + 1320), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[36] = v50;
  __p[0] = (void *)0x20000000BLL;
  *(void *)buf = __p;
  sub_1005BC610((uint64_t **)(a1 + 1320), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[36] = 0;
  char v51 = v81;
  LODWORD(__p[0]) = 11;
  *(void *)buf = __p;
  *((_WORD *)sub_1005BC550((uint64_t **)(a1 + 1224), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (_DWORD **)buf) + 16) = v51;
  uint64_t v52 = v80;
  LODWORD(__p[0]) = 11;
  *(void *)buf = __p;
  LOWORD(v52) = v79;
  LODWORD(__p[0]) = 11;
  *(void *)buf = __p;
  *((_WORD *)sub_1005BC550((uint64_t **)(a1 + 1272), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (_DWORD **)buf) + 16) = v52;
  unint64_t v53 = v78;
  LODWORD(__p[0]) = 11;
  *(void *)buf = __p;
  LODWORD(__p[0]) = 16;
  *(void *)buf = __p;
  *((_WORD *)sub_1005BC550((uint64_t **)(a1 + 1224), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (_DWORD **)buf) + 16) = 12;
  LODWORD(__p[0]) = 16;
  *(void *)buf = __p;
  LODWORD(__p[0]) = 16;
  *(void *)buf = __p;
  *((_WORD *)sub_1005BC550((uint64_t **)(a1 + 1272), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (_DWORD **)buf) + 16) = 2;
  LODWORD(__p[0]) = 16;
  *(void *)buf = __p;
  __p[0] = (void *)16;
  *(void *)buf = __p;
  sub_1005BC610((uint64_t **)(a1 + 1320), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[36] = 0;
  int v54 = *(_BYTE *)(a1 + 1346);
  __p[0] = &dword_100000010;
  *(void *)buf = __p;
  sub_1005BC610((uint64_t **)(a1 + 1320), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[36] = v54;
  __p[0] = (void *)0x200000010LL;
  *(void *)buf = __p;
  sub_1005BC610((uint64_t **)(a1 + 1320), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[36] = 0;
  __p[0] = (void *)21;
  *(void *)buf = __p;
  sub_1005BC610((uint64_t **)(a1 + 1320), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[36] = 0;
  char v55 = *(_BYTE *)(a1 + 1347);
  __p[0] = &dword_100000014 + 1;
  *(void *)buf = __p;
  sub_1005BC610((uint64_t **)(a1 + 1320), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[36] = v55;
  __p[0] = (void *)0x200000015LL;
  *(void *)buf = __p;
  sub_1005BC610((uint64_t **)(a1 + 1320), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[36] = 0;
  __p[0] = (void *)655360;
  *(void *)buf = __p;
  sub_1005BC610((uint64_t **)(a1 + 1320), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[36] = 0;
  uint64_t v56 = *(_BYTE *)(a1 + 1348);
  __p[0] = &loc_1000A0000;
  *(void *)buf = __p;
  sub_1005BC610((uint64_t **)(a1 + 1320), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[36] = v56;
  __p[0] = (void *)0x2000A0000LL;
  *(void *)buf = __p;
  sub_1005BC610((uint64_t **)(a1 + 1320), (unsigned int *)__p, (uint64_t)&unk_1006C2518, (uint64_t **)buf)[36] = 0;
  uint64_t v76 = 1800;
  unint64_t v77 = 12;
  unsigned int v74 = 3600;
  uint64_t v75 = 2;
  uint64_t v57 = sub_1002E6E00();
  sub_10002418C(buf, "CONNECTION");
  sub_10002418C(__p, "LeConnectionThirdPartyAppDisabledToStageOneValue");
  uint64_t v58 = (*(uint64_t (**)(uint64_t, uint8_t *, void **, int *))(*(void *)v57 + 88LL))(v57, buf, __p, &v77);
  if (v84 < 0) {
    operator delete(__p[0]);
  }
  if (v94 < 0)
  {
    operator delete(*(void **)buf);
    if (!v58) {
      goto LABEL_113;
    }
  }

  else if (!v58)
  {
    goto LABEL_113;
  }

  uint64_t v59 = (os_log_s *)qword_1008F7620;
  if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v77;
    _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEFAULT,  "LeConnectionThirdPartyAppDisabledToStageOneValue =%d (override)",  buf,  8u);
  }

LABEL_166:
        if ((_DWORD)v12 == 3304 || (_DWORD)v12 == 0)
        {
          unsigned int v91 = sub_1000ECD48(v8, v7, (unsigned __int8 *)&v101);
          if (v91) {
            BOOL v92 = 0;
          }
          else {
            BOOL v92 = (_DWORD)v12 == 3304;
          }
          if (v92) {
            return 3304LL;
          }
          else {
            return v91;
          }
        }

        return v12;
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1267,  "ByteStream_NumReadBytesAvail(bs) >= 1");
    case 19:
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }

      else
      {
        int v97 = v11;
        if ((unsigned __int16)v103 != 7)
        {
          BYTE7(v104[0]) = a4[8];
          int v46 = BYTE7(v104[0]);
          unsigned int v47 = 2 * BYTE7(v104[0]);
          __int16 v48 = (unsigned __int16)(v103 - 8) >> 1;
          if ((unsigned __int16)v103 - 8 < 2 * v46) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1298,  "ByteStream_NumReadBytesAvail(bs) >= (count*dataElSize)");
          }
          uint64_t v49 = (2 * v46);
          __memmove_chk((char *)v104 + 8, *((void *)a4 + 2), v49, 504LL);
          int v13 = v49 + 8;
          if (v47 <= (unsigned __int16)(v103 - 8))
          {
LABEL_143:
            uint64_t v9 = 0LL;
            int v11 = v97;
            goto LABEL_152;
          }

          __int16 v50 = v6[8];
          char v51 = *v6;
          uint64_t v52 = *((void *)v6 + 2);
LABEL_63:
          uint64_t v12 = sub_1000EBE4C(v8, v48, 0xFFFF, v50, v51, v52 + v49, 0LL);
          int v11 = v97;
          if (!(_DWORD)v12) {
            goto LABEL_129;
          }
          goto LABEL_166;
        }
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1291,  "ByteStream_NumReadBytesAvail(bs) >= 1");
    case 20:
    case 23:
    case 24:
      goto LABEL_152;
    case 21:
    case 22:
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }

      else if ((unsigned __int16)v103 != 7)
      {
        BYTE7(v104[0]) = a4[8];
        LOWORD(a4) = BYTE7(v104[0]);
        if (BYTE7(v104[0]))
        {
          uint64_t v100 = a1;
          unsigned int v96 = a2;
          if ((v103 & 0xFFFC) == 8)
          {
            LOWORD(v15) = 0;
            int v13 = 8;
          }

          else
          {
            int v98 = v11;
            uint64_t v57 = 0LL;
            uint64_t v9 = 0LL;
            unint64_t v15 = 0LL;
            int v13 = 8;
            do
            {
              if (v5 <= (unsigned __int16)v13) {
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1341,  "ByteStream_NumReadBytesAvail(bs) >= 1");
              }
              uint64_t v58 = *((void *)v6 + 2);
              uint64_t v59 = v58 + v57;
              *((_BYTE *)v104 + (unsigned __int16)v13) = *(_BYTE *)(v58 + v57);
              if ((unsigned __int16)(v5 - 1) <= (unsigned __int16)(v13 + 1)) {
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1342,  "ByteStream_NumReadBytesAvail(bs) >= 2");
              }
              unint64_t v60 = (char *)v104 + (unsigned __int16)v13 + 1;
              v60[1] = *(_BYTE *)(v59 + 2);
              *unint64_t v60 = *(_BYTE *)(v59 + 3);
              unsigned __int16 v61 = v13 + 3;
              if (v5 <= (unsigned __int16)(v13 + 3)) {
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1343,  "ByteStream_NumReadBytesAvail(bs) >= 1");
              }
              uint64_t v62 = v58 + v57;
              int v63 = v13 + 4;
              *((_BYTE *)v104 + v61) = *(_DWORD *)(v62 + 16);
              unsigned int v64 = v5 - v63;
              unsigned int v65 = *(_DWORD *)(v62 + 16);
              if (v65 <= (unsigned __int16)(v5 - v63))
              {
                unsigned int v64 = *(_DWORD *)(v62 + 16);
              }

              else
              {
                unsigned int v65 = (unsigned __int16)(v5 - v63);
                uint64_t v66 = sub_1000EBE4C( v100,  v15,  v64,  a4,  *v6,  v59,  *(void *)(v62 + 8) + (unsigned __int16)v64);
                if ((_DWORD)v66) {
                  goto LABEL_124;
                }
                uint64_t v9 = 3304LL;
              }

              if ((int)(v5 - (unsigned __int16)v63) < (int)v65) {
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1364,  "ByteStream_NumReadBytesAvail(bs) >= (count)");
              }
              memmove( (char *)v104 + (unsigned __int16)v63,  *(const void **)(*((void *)v6 + 2) + v57 + 8),  (unsigned __int16)v64);
              int v13 = v64 + (unsigned __int16)v63;
              if ((_DWORD)v9 == 3304) {
                goto LABEL_123;
              }
              ++v15;
              a4 = (unsigned __int8 *)v6[8];
              v57 += 24LL;
            }

            while ((unsigned __int16)(v5 - v13) > 3u);
            LOBYTE(v10) = *v6;
            int v11 = v98;
          }

          uint64_t v67 = *((void *)v6 + 2) + 24LL * (unsigned __int16)v15;
          __int16 v68 = v15;
          uint64_t v8 = v100;
          uint64_t v12 = sub_1000EBE4C(v100, v68, 0xFFFF, (__int16)a4, v10, v67, *(void *)(v67 + 8));
          unsigned int v7 = v96;
          if (!(_DWORD)v12) {
            goto LABEL_129;
          }
          goto LABEL_166;
        }

        goto LABEL_70;
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1317,  "ByteStream_NumReadBytesAvail(bs) >= 1");
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      goto LABEL_165;
    case 32:
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }

      else if ((unsigned __int16)v103 != 7)
      {
        BYTE7(v104[0]) = a4[8];
        LOWORD(a4) = BYTE7(v104[0]);
        if (BYTE7(v104[0]))
        {
          if ((v103 & 0xFFF8) == 8)
          {
            LOWORD(v53) = 0;
            int v54 = 8;
            char v55 = 32;
LABEL_119:
            uint64_t v84 = *((void *)v6 + 2) + 24LL * (unsigned __int16)v53;
            uint64_t v12 = sub_1000EBE4C(v8, v53, 0xFFFF, (__int16)a4, v55, v84, *(void *)(v84 + 8));
            if (!(_DWORD)v12)
            {
              uint64_t v9 = 3304LL;
              int v13 = v54;
              goto LABEL_152;
            }

            goto LABEL_166;
          }

          unsigned int v96 = a2;
          int v98 = v11;
          uint64_t v100 = a1;
          uint64_t v72 = 0LL;
          uint64_t v9 = 0LL;
          unint64_t v53 = 0LL;
          unsigned __int16 v73 = v103 - 1;
          int v54 = 8;
          unsigned int v74 = (unsigned __int16)(v103 - 3);
          unsigned int v99 = v74;
          while (1)
          {
            if (v74 <= (unsigned __int16)v54) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1409,  "ByteStream_NumReadBytesAvail(bs) >= 4");
            }
            uint64_t v75 = *((void *)v6 + 2);
            uint64_t v76 = v75 + v72;
            unint64_t v77 = (char *)v104 + (unsigned __int16)v54;
            v77[3] = *(_DWORD *)(v75 + v72);
            v77[2] = BYTE1(*(_DWORD *)(v75 + v72));
            v77[1] = *(_WORD *)(v75 + v72 + 2);
            char *v77 = *(_BYTE *)(v75 + v72 + 3);
            if (v73 <= (unsigned __int16)(v54 + 4)) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1410,  "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            uint64_t v78 = (char *)v104 + (unsigned __int16)(v54 + 4);
            v78[1] = *(_BYTE *)(v76 + 4);
            *uint64_t v78 = *(_BYTE *)(v76 + 5);
            if (v73 <= (unsigned __int16)(v54 + 6)) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1411,  "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            uint64_t v79 = v75 + v72;
            char v80 = (char *)v104 + (unsigned __int16)(v54 + 6);
            v80[1] = *(_DWORD *)(v79 + 16);
            *char v80 = BYTE1(*(_DWORD *)(v79 + 16));
            unsigned __int16 v81 = v54 + 8;
            unsigned int v82 = v5 - (v54 + 8);
            unsigned int v83 = *(unsigned __int16 *)(v79 + 16);
            if (v83 <= (unsigned __int16)(v5 - v81))
            {
              unsigned int v82 = *(unsigned __int16 *)(v79 + 16);
            }

            else
            {
              unsigned int v83 = (unsigned __int16)v82;
              uint64_t v66 = sub_1000EBE4C( v100,  v53,  v82,  a4,  *v6,  v76,  *(void *)(v79 + 8) + (unsigned __int16)v82);
              if ((_DWORD)v66)
              {
LABEL_124:
                uint64_t v12 = v66;
                unsigned int v7 = v96;
                uint64_t v8 = v100;
                goto LABEL_166;
              }

              uint64_t v9 = 3304LL;
              unsigned int v74 = v99;
            }

            if ((int)(v5 - v81) < (int)v83) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1432,  "ByteStream_NumReadBytesAvail(bs) >= (count)");
            }
            memmove((char *)v104 + v81, *(const void **)(*((void *)v6 + 2) + v72 + 8), (unsigned __int16)v82);
            int v54 = v82 + v81;
            if ((_DWORD)v9 == 3304) {
              break;
            }
            ++v53;
            a4 = (unsigned __int8 *)v6[8];
            v72 += 24LL;
            if ((unsigned __int16)(v5 - v54) <= 7u)
            {
              char v55 = *v6;
              unsigned int v7 = v96;
              int v11 = v98;
              uint64_t v8 = v100;
              goto LABEL_119;
            }
          }

          int v13 = v82 + v81;
LABEL_123:
          unsigned int v7 = v96;
          int v11 = v98;
          uint64_t v8 = v100;
LABEL_152:
          unsigned int v88 = v11 - 3;
          if (v11 - 3 > v5) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1521,  "(size_t)(pos - 3) <= (size_t)((bs).__size)");
          }
          if ((_DWORD)v9 == 3304)
          {
            if (v5 <= 6)
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/"
                                     "avrcp_metadata.c");
            }

            else if (v88 < v5)
            {
              char v89 = 1;
              goto LABEL_160;
            }

            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1524,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }

          if (v5 <= 6)
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          }

          else if (v88 < v5)
          {
            char v89 = 0;
LABEL_160:
            *((_BYTE *)v104 + v88) = v89;
            if ((int)(v5 - (unsigned __int16)(v11 - 2)) <= 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1529,  "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            *(_WORD *)((char *)v104 + (unsigned __int16)(v11 - 3) + 1) = bswap32(v13 - v11) >> 16;
            else {
              __int16 v14 = 7;
            }
            uint64_t v12 = v9;
LABEL_165:
            LOWORD(v103) = v14;
            goto LABEL_166;
          }

          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1526,  "ByteStream_NumReadBytesAvail(bs) >= 1");
        }

  uint64_t v22 = 103LL;
LABEL_15:
  sub_100242FAC((uint64_t)v141);
  return v22;
}

uint64_t sub_1000EA5F8(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  if (!a1 || !a4)
  {
LABEL_5:
    sub_1001EE2A0();
    return 101LL;
  }

  if (a3 != 1)
  {
    if (a3)
    {
      uint64_t v6 = 3LL;
      uint64_t v5 = 16LL;
      BYTE1(v6) = a3;
      uint64_t v7 = a4;
      return sub_1000E9590(a1, a2, 12, (unsigned __int8 *)&v5);
    }

    goto LABEL_5;
  }

  return 101LL;
}

uint64_t sub_1000EA658(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  if (a1 && a4 && a3)
  {
    v5[0] = 17LL;
    v5[1] = a3;
    v5[2] = a4;
    return sub_1000E9590(a1, a2, 12, (unsigned __int8 *)v5);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_1000EA6A8(uint64_t a1, unsigned int a2, uint64_t a3, int a4, uint64_t a5)
{
  if (a1 && a5 && a4)
  {
    v6[0] = 18LL;
    v6[1] = a4;
    v6[2] = a5;
    return sub_1000E9590(a1, a2, 12, (unsigned __int8 *)v6);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_1000EA6F8(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  if (a1 && a4 && a3)
  {
    v5[0] = 19LL;
    v5[1] = a3;
    v5[2] = a4;
    return sub_1000E9590(a1, a2, 12, (unsigned __int8 *)v5);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_1000EA748(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (a1 && a3)
  {
    uint64_t v5 = 0LL;
    v4[0] = 48LL;
    v4[1] = *(void *)a3;
    LOBYTE(v5) = *(_BYTE *)(a3 + 8);
    return sub_1000E9590(a1, a2, 12, (unsigned __int8 *)v4);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_1000EA7A0(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v5 = 0LL;
  uint64_t v6 = 0LL;
  if (a1 && a3 && a4)
  {
    LOBYTE(v5) = 32;
    LOBYTE(v6) = a3;
    uint64_t v7 = a4;
    return sub_1000E9590(a1, a2, 12, (unsigned __int8 *)&v5);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_1000EA7F0(uint64_t a1, unsigned int a2, uint64_t a3, int a4)
{
  if (a4) {
    char v5 = 13;
  }
  else {
    char v5 = 15;
  }
  if (a1 && a3)
  {
    v7[1] = a3;
    v7[2] = 0LL;
    v7[0] = 49LL;
    return sub_1000E9590(a1, a2, v5, (unsigned __int8 *)v7);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_1000EA848(uint64_t a1, unsigned int a2, int a3, char **a4)
{
  uint64_t v8 = sub_1000E727C(a1, 0);
  if (!a1 || !a4)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  uint64_t v9 = v8;
  if (!v8) {
    return 105LL;
  }
  memset(v110, 0, sizeof(v110));
  int v10 = *(char ***)(v8 + 24);
  if (!v10) {
    return 105LL;
  }
  uint64_t v107 = 0LL;
  v108 = 0LL;
  uint64_t v109 = 0LL;
  if (*a4) {
    *int v10 = *a4;
  }
  int v11 = a4[1];
  if (v11) {
    v10[1] = v11;
  }
  LODWORD(v107) = 2316;
  v108 = v110;
  unsigned int v12 = *(unsigned __int16 *)(*(void *)(qword_1008F29A0 + 24) + 20LL);
  LOWORD(v109) = *(_WORD *)(*(void *)(qword_1008F29A0 + 24) + 20LL);
  unsigned int v13 = *((unsigned __int16 *)v10 + 10);
  unsigned int v14 = *((unsigned __int16 *)v10 + 8);
  int v15 = v13 - v14;
  if (v13 < v14)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"AVRCP internal error: total attr count %d less than current attr index %d!",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  *(unsigned __int16 *)(*(void *)(v9 + 24) + 20LL));
      int v23 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 105LL;
  }

  if (!v12) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1778,  "((*operandCount)) > 0");
  }
  if (v12 <= 2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1780,  "ByteStream_NumReadBytesAvail(bs) >= 3");
  }
  BYTE2(v110[0]) = 88;
  LOWORD(v110[0]) = 6400;
  if (v12 == 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1781,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  BYTE3(v110[0]) = a3;
  if (v12 <= 6) {
    uint64_t v26 = 4LL;
  }
  else {
    uint64_t v26 = 7LL;
  }
  uint64_t v106 = v26;
  int v27 = v12 - v26;
  uint64_t v24 = 3301LL;
  int v105 = v12 - v26;
  switch(a3)
  {
    case 16:
      int v37 = *((unsigned __int16 *)v10 + 9);
      if (v37 == 3)
      {
        int v75 = v12 - v26;
        uint64_t v76 = *v10;
        else {
          size_t v39 = (unsigned __int16)v15;
        }
        else {
          uint64_t v24 = 3304LL;
        }
        if (v12 <= 6)
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          int v77 = 0;
        }

        else
        {
          int v77 = v75;
        }

        if (v77 < (int)v39) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1811,  "ByteStream_NumReadBytesAvail(bs) >= (count)");
        }
        memmove((void *)((unint64_t)v110 | v106), v76, v39);
        int v41 = v39 + v106;
        unsigned int v45 = 1;
      }

      else
      {
        if (v37 != 2) {
          return 105LL;
        }
        unsigned int v38 = 3 * (unsigned __int16)v15;
        else {
          LODWORD(v39) = (unsigned __int16)(v12 - v26) / 3u;
        }
        else {
          uint64_t v24 = 3304LL;
        }
        if ((_WORD)v39)
        {
          if (v12 < 7)
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
LABEL_185:
            unsigned int v99 = "ByteStream_NumReadBytesAvail(bs) >= 3";
          }

          else
          {
            int v40 = *v10;
            int v41 = 3 * v39 + 7;
            uint64_t v42 = (unsigned __int16)v39;
            uint64_t v43 = (unsigned __int16)(v12 - 7) / 3u;
            unsigned int v44 = (_BYTE *)((unint64_t)v110 | 9);
            unsigned int v45 = 4;
            while (1)
            {
              if (!v43) {
                goto LABEL_185;
              }
              if (HIBYTE(*(_DWORD *)v40)) {
                break;
              }
              *unsigned int v44 = *(_DWORD *)v40;
              *(v44 - 1) = BYTE1(*(_DWORD *)v40);
              *(v44 - 2) = v40[1];
              v44 += 3;
              --v43;
              v40 += 2;
              if (!--v42) {
                goto LABEL_158;
              }
            }

            unsigned int v99 = "0 == ((companyIDs[i]) & 0xFF000000)";
          }

          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1799,  v99);
        }

        LOWORD(v39) = 0;
        unsigned int v45 = 4;
        int v41 = v26;
      }

LABEL_136:
      unsigned int v93 = v106 - 3;
      if ((int)v106 - 3 > v12) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  2077,  "(size_t)(pos - 3) <= (size_t)((bs).__size)");
      }
      if ((_DWORD)v24 != 3304)
      {
        if (v12 <= 6)
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        }

        else if (v93 < v12)
        {
          char v94 = 3;
          goto LABEL_144;
        }

        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  2082,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }

      if (v12 <= 6)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
LABEL_171:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  2080,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }

      if (v93 >= v12) {
        goto LABEL_171;
      }
      char v94 = 2;
LABEL_144:
      *((_BYTE *)v110 + v93) = v94;
      if ((int)(v12 - (unsigned __int16)(v106 - 2)) <= 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  2085,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      *(_WORD *)((char *)v110 + (unsigned __int16)(v106 - 3) + 1) = bswap32(v41 - v106) >> 16;
      else {
        __int16 v95 = 7;
      }
      LOWORD(v109) = v95;
      uint64_t v96 = sub_1000ECD48(a1, a2, (unsigned __int8 *)&v107);
      if (!(_DWORD)v96)
      {
        if ((_DWORD)v24 == 3304) {
          return v24;
        }
        int v97 = *(void **)(v9 + 24);
        if (v97) {
          sub_1000B1838(v97);
        }
        *(void *)(v9 + 24) = 0LL;
      }

      return v96;
    case 17:
      int v46 = *v10;
      else {
        size_t v47 = (unsigned __int16)(v13 - v14);
      }
      if (v12 <= 6)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        int v48 = 0;
      }

      else
      {
        int v48 = v12 - v26;
      }

      if (v48 < (int)v47) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1839,  "ByteStream_NumReadBytesAvail(bs) >= (count)");
      }
      goto LABEL_85;
    case 18:
      int v46 = *v10;
      else {
        size_t v47 = (unsigned __int16)(v13 - v14);
      }
      if (v12 <= 6)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        int v49 = 0;
      }

      else
      {
        int v49 = v12 - v26;
      }

      if (v49 < (int)v47) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1861,  "ByteStream_NumReadBytesAvail(bs) >= (count)");
      }
LABEL_85:
      memmove((void *)((unint64_t)v110 | v106), v46, v47);
      int v41 = v47 + v106;
      __int16 v57 = *((_WORD *)v10 + 8) + v47;
      uint64_t v58 = &v46[v47];
      goto LABEL_87;
    case 19:
      goto LABEL_30;
    case 20:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return v24;
    case 21:
    case 22:
      unsigned int v28 = *v10;
      int v29 = *((unsigned __int16 *)v10 + 9);
      if (v29 == 0xFFFF)
      {
        int v41 = v106;
      }

      else
      {
        unsigned __int16 v30 = *((_WORD *)v28 + 8) - v29;
        else {
          size_t v31 = (unsigned __int16)v27;
        }
        uint64_t v32 = v10[1];
        if (v12 <= 6)
        {
          uint64_t v59 = v10[1];
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          uint64_t v32 = v59;
          int v33 = 0;
        }

        else
        {
          int v33 = v27;
        }

        v104 = v28;
        if (v33 < (int)v31) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1912,  "ByteStream_NumReadBytesAvail(bs) >= (count)");
        }
        __int16 v60 = v105;
        memmove((void *)((unint64_t)v110 | v106), v32, v31);
        int v41 = v31 + v106;
        LOWORD(v14) = *((_WORD *)v10 + 8) + 1;
        *((_WORD *)v10 + 8) = v14;
        unsigned int v28 = v104 + 24;
        unsigned int v13 = *((unsigned __int16 *)v10 + 10);
      }

      if (v13 <= (unsigned __int16)v14)
      {
        sub_1001EE2A0();
        unsigned int v13 = *((unsigned __int16 *)v10 + 10);
        LOWORD(v14) = *((_WORD *)v10 + 8);
      }

      if ((unsigned __int16)(v12 - v41) >= 4u)
      {
        if (v12 < 7)
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        }

        else
        {
          uint64_t v24 = 0LL;
          unsigned __int16 v61 = 0;
          while (v12 > (unsigned __int16)v41)
          {
            uint64_t v62 = &v28[24 * v61];
            *((_BYTE *)v110 + (unsigned __int16)v41) = *v62;
            if ((unsigned __int16)(v12 - 1) <= (unsigned __int16)(v41 + 1)) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1952,  "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            int v63 = &v28[24 * v61];
            unsigned int v64 = (char *)v110 + (unsigned __int16)v41 + 1;
            v64[1] = v63[2];
            *unsigned int v64 = v63[3];
            if (v12 <= (unsigned __int16)(v41 + 3)) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1953,  "ByteStream_NumReadBytesAvail(bs) >= 1");
            }
            unsigned int v65 = &v28[24 * v61];
            uint64_t v66 = (const void **)(v65 + 8);
            unsigned __int16 v67 = v41 + 4;
            *((_BYTE *)v110 + (unsigned __int16)(v41 + 3)) = *((_DWORD *)v65 + 4);
            unsigned int v68 = v12 - (v41 + 4);
            unsigned int v69 = *((_DWORD *)v65 + 4);
            if (v69 <= (unsigned __int16)(v12 - v67))
            {
              unsigned int v68 = *((_DWORD *)v65 + 4);
            }

            else
            {
              unsigned int v69 = (unsigned __int16)v68;
              unsigned int v70 = (char *)*v66 + (unsigned __int16)v68;
              *((_WORD *)v10 + 8) += v61;
              *((_WORD *)v10 + 9) = v68;
              *int v10 = v62;
              v10[1] = v70;
              uint64_t v24 = 3304LL;
            }

            int v71 = v67;
            if ((int)(v12 - v67) < (int)v69) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1971,  "ByteStream_NumReadBytesAvail(bs) >= (count)");
            }
            memmove((char *)v110 + v67, *v66, (unsigned __int16)v68);
            int v41 = v68 + v71;
            if ((_DWORD)v24 == 3304) {
              goto LABEL_136;
            }
            ++v61;
            unsigned int v14 = *((unsigned __int16 *)v10 + 8);
          }
        }

        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1951,  "ByteStream_NumReadBytesAvail(bs) >= 1");
      }

      unsigned __int16 v61 = 0;
LABEL_101:
      uint64_t v72 = &v28[24 * v61];
      unsigned __int16 v73 = (char *)*((void *)v72 + 1);
      __int16 v74 = v61 + v14;
      goto LABEL_134;
    case 32:
      __int16 v50 = *v10;
      int v51 = *((unsigned __int16 *)v10 + 9);
      if (v51 == 0xFFFF)
      {
        int v41 = v106;
      }

      else
      {
        unsigned __int16 v52 = *((_WORD *)v50 + 8) - v51;
        unsigned __int16 v101 = v52;
        else {
          size_t v31 = (unsigned __int16)v27;
        }
        unint64_t v53 = v10[1];
        if (v12 <= 6)
        {
          uint64_t v78 = v10[1];
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          unint64_t v53 = v78;
          int v54 = 0;
        }

        else
        {
          int v54 = v27;
        }

        v104 = v50;
        if (v54 < (int)v31) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1993,  "ByteStream_NumReadBytesAvail(bs) >= (count)");
        }
        __int16 v60 = v105;
        memmove((void *)((unint64_t)v110 | v106), v53, v31);
        int v41 = v31 + v106;
        if ((unsigned __int16)v105 < v101)
        {
LABEL_113:
          size_t v79 = (size_t)&v10[1][v31];
          *((_WORD *)v10 + 9) += v60;
          *int v10 = v104;
          v10[1] = (char *)v79;
          goto LABEL_135;
        }

        LOWORD(v14) = *((_WORD *)v10 + 8) + 1;
        *((_WORD *)v10 + 8) = v14;
        v50 += 24;
        unsigned int v13 = *((unsigned __int16 *)v10 + 10);
      }

      if (v13 <= (unsigned __int16)v14)
      {
        sub_1001EE2A0();
        unsigned int v13 = *((unsigned __int16 *)v10 + 10);
        LOWORD(v14) = *((_WORD *)v10 + 8);
      }

      if (v13 == (unsigned __int16)v14)
      {
LABEL_118:
        uint64_t v24 = 0LL;
        goto LABEL_136;
      }

      if ((unsigned __int16)(v12 - v41) >= 8u)
      {
        if (v12 < 7)
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        }

        else
        {
          uint64_t v24 = 0LL;
          unsigned __int16 v80 = 0;
          unsigned __int16 v102 = v12 - 1;
          while ((unsigned __int16)(v12 - 3) > (unsigned __int16)v41)
          {
            unsigned __int16 v81 = &v50[24 * v80];
            unsigned int v82 = (char *)v110 + (unsigned __int16)v41;
            v82[3] = *(_DWORD *)v81;
            v82[2] = BYTE1(*(_DWORD *)v81);
            v82[1] = *((_WORD *)v81 + 1);
            *unsigned int v82 = v81[3];
            if (v102 <= (unsigned __int16)(v41 + 4)) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  2033,  "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            unsigned int v83 = &v50[24 * v80];
            uint64_t v84 = (char *)v110 + (unsigned __int16)(v41 + 4);
            v84[1] = v83[4];
            *uint64_t v84 = v83[5];
            if (v102 <= (unsigned __int16)(v41 + 6)) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  2034,  "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            int v85 = &v50[24 * v80];
            unsigned int v86 = (const void **)(v85 + 8);
            uint64_t v87 = (char *)v110 + (unsigned __int16)(v41 + 6);
            v87[1] = *((_DWORD *)v85 + 4);
            *uint64_t v87 = BYTE1(*((_DWORD *)v85 + 4));
            unsigned __int16 v88 = v41 + 8;
            unsigned int v89 = v12 - (v41 + 8);
            unsigned int v90 = *((unsigned __int16 *)v85 + 8);
            if (v90 <= (unsigned __int16)(v12 - v88))
            {
              unsigned int v89 = *((unsigned __int16 *)v85 + 8);
            }

            else
            {
              unsigned int v90 = (unsigned __int16)v89;
              unsigned int v91 = (char *)*v86 + (unsigned __int16)v89;
              *((_WORD *)v10 + 8) += v80;
              *((_WORD *)v10 + 9) = v89;
              *int v10 = v81;
              v10[1] = v91;
              uint64_t v24 = 3304LL;
            }

            int v92 = v88;
            if ((int)(v12 - v88) < (int)v90) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  2052,  "ByteStream_NumReadBytesAvail(bs) >= (count)");
            }
            memmove((char *)v110 + v88, *v86, (unsigned __int16)v89);
            int v41 = v89 + v92;
            if ((_DWORD)v24 == 3304) {
              goto LABEL_136;
            }
            ++v80;
            unsigned int v14 = *((unsigned __int16 *)v10 + 8);
          }
        }

        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  2032,  "ByteStream_NumReadBytesAvail(bs) >= 4");
      }

      unsigned __int16 v80 = 0;
LABEL_133:
      uint64_t v72 = &v50[24 * v80];
      unsigned __int16 v73 = (char *)*((void *)v72 + 1);
      __int16 v74 = v80 + v14;
LABEL_134:
      *((_WORD *)v10 + 8) = v74;
      *((_WORD *)v10 + 9) = -1;
      *int v10 = v72;
      v10[1] = v73;
LABEL_135:
      uint64_t v24 = 3304LL;
      goto LABEL_136;
    default:
      if (a3 != 49) {
        return v24;
      }
LABEL_30:
      unint64_t v34 = *v10;
      else {
        unsigned __int16 v35 = (unsigned __int16)v27 >> 1;
      }
      __int16 v100 = (unsigned __int16)v27 >> 1;
      unsigned int v103 = 2 * (unsigned __int16)(v13 - v14);
      if (v12 <= 6)
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        int v36 = 0;
      }

      else
      {
        int v36 = v12 - v26;
      }

      size_t v55 = 2 * v35;
      if (v36 < (int)v55) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c",  1885,  "ByteStream_NumReadBytesAvail(bs) >= (count*dataElSize)");
      }
      unsigned int v56 = (unsigned __int16)v27;
      memmove((void *)((unint64_t)v110 | v106), v34, v55);
      int v41 = v106 + v55;
      if (v103 <= v56) {
        goto LABEL_118;
      }
      __int16 v57 = *((_WORD *)v10 + 8) + v100;
      uint64_t v58 = &v34[8 * v55];
LABEL_87:
      *((_WORD *)v10 + 8) = v57;
      *((_WORD *)v10 + 9) = -1;
      *int v10 = v58;
      v10[1] = 0LL;
      goto LABEL_135;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"SignalMan_RecvConfigReq %!", v77, v78, v79, v80, v81, v82, v83, v12);
    uint64_t v84 = (os_log_s *)sub_100086554(0x2Fu);
    if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  if ((_DWORD)v12 != 428
    || (int v85 = sub_10010CDEC(v128 + 48), !(_DWORD)v85)
    || (unsigned int v86 = v85, !sub_1000A86F0())
    || (sub_1001EE134((uint64_t)"Failed to forced disconnect %!", v87, v88, v89, v90, v91, v92, v93, v86),
        char v94 = (os_log_s *)sub_100086554(0x2Fu),
        !os_log_type_enabled(v94, OS_LOG_TYPE_ERROR)))
  {
    if (!v23) {
      return;
    }
    goto LABEL_144;
  }

  sub_100657F74();
  if (v23) {
LABEL_144:
  }
    sub_1000B1838(v23);
}

                operator delete(__p.__r_.__value_.__l.__data_);
                if (!v11) {
                  goto LABEL_151;
                }
                goto LABEL_138;
              default:
                if (v3 < 0xF)
                {
LABEL_137:
                  if (!v11) {
                    goto LABEL_151;
                  }
                }

                else
                {
                  *(_BYTE *)(a1 + 256) = 1;
                  *(_BYTE *)(a1 + 271) = 1;
                  *(_BYTE *)(a1 + 294) = 1;
                  if (!v11) {
                    goto LABEL_151;
                  }
                }

    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Server/core/FastConnectManager.mm",  v58,  v57);
  }

  if ((v67 & 1) != 0) {
    goto LABEL_91;
  }
LABEL_88:
  if (sub_100172ECC(2u, (uint64_t *)&v80, 0))
  {
    sub_100242CD0(&v77);
    if (os_log_type_enabled((os_log_t)qword_1008F7748, OS_LOG_TYPE_ERROR)) {
      sub_100696830();
    }
    return sub_100242CD8(&v77);
  }

  *(_WORD *)(sub_10017AB4C(v80) + 8) = v62;
  *(_WORD *)(sub_10017AB4C(v80) + 32) = v61;
  if ((v67 & 4) != 0) {
    sub_1001C3530((uint64_t)&v78);
  }
  byte_1008F7822 = 2;
  byte_1008F7823 = v66;
  word_1008F7824 = *(_WORD *)(a1 + 680);
  int v46 = (os_log_s *)qword_1008F7748;
  if (os_log_type_enabled((os_log_t)qword_1008F7748, OS_LOG_TYPE_DEBUG))
  {
    size_t v47 = *((_WORD *)v80 + 2);
    int v48 = sub_10017AB4C(v80);
    sub_1006967D4(v47, v48, buf, v46);
  }

  byte_1008F7826 = *((_BYTE *)v80 + 4);
  byte_1008F7827 = *((_BYTE *)v80 + 5);
  byte_1008F7828 = *(_BYTE *)(sub_10017AB4C(v80) + 36);
  byte_1008F7829 = *(_BYTE *)(sub_10017AB4C(v80) + 37);
  dword_1008F782A = v15;
  unk_1008F782E = *(void *)(a1 + 672);
  if (qword_1008D60B0 != -1) {
    dispatch_once(&qword_1008D60B0, &stru_1008A1F48);
  }
  byte_1008F7836 = sub_100434070((uint64_t)off_1008D60A8);
  if (qword_1008D60B0 != -1) {
    dispatch_once(&qword_1008D60B0, &stru_1008A1F48);
  }
  byte_1008F7837 = (unsigned __int16)sub_100434070((uint64_t)off_1008D60A8) >> 8;
  if (qword_1008D60B0 != -1) {
    dispatch_once(&qword_1008D60B0, &stru_1008A1F48);
  }
  byte_1008F7838 = sub_100434070((uint64_t)off_1008D60A8) >> 16;
  if (qword_1008D60B0 != -1) {
    dispatch_once(&qword_1008D60B0, &stru_1008A1F48);
  }
  byte_1008F7839 = sub_100434070((uint64_t)off_1008D60A8) >> 24;
  byte_1008F783A = sub_1001E1628();
  byte_1008F783B = (unsigned __int16)sub_1001E1628() >> 8;
  byte_1008F783C = sub_1001E1628() >> 16;
  byte_1008F783D = sub_1001E1628() >> 24;
  *(_WORD *)algn_1008F783E = 0;
  if (qword_1008D60B0 != -1) {
    dispatch_once(&qword_1008D60B0, &stru_1008A1F48);
  }
  int v49 = sub_100434078((uint64_t)off_1008D60A8);
  byte_1008F7840 = BYTE4(v49);
  byte_1008F7841 = BYTE5(v49);
  byte_1008F7842 = BYTE6(v49);
  byte_1008F7843 = HIBYTE(v49);
  word_1008F7844 = v49;
  byte_1008F7846 = BYTE2(v49);
  byte_1008F7847 = BYTE3(v49);
  sub_10010C9D4(a6);
  __int16 v50 = sub_10017AB4C(v80);
  *(_DWORD *)(v50 + 10) = v78;
  *(_WORD *)(v50 + 14) = v79;
  *(void *)sub_10017AB4C(v80) = a6;
  *(_BYTE *)(sub_10017AB4C(v80) + 25) = 0;
  *(_BYTE *)(sub_10017AB4C(v80) + 16) = 4;
  *(_BYTE *)(sub_10017AB4C(v80) + 28) = 0;
  int v51 = (uint64_t *)sub_10017AB4C(v80);
  sub_10018A690(*v51);
  unsigned __int16 v52 = v80;
  v80[19] = -1;
  if (sub_100187CD4(*((unsigned __int16 *)v52 + 2), 4, 5u, 0LL, (uint64_t *)v52 + 12, 0xFFFFFFFF))
  {
    if (os_log_type_enabled((os_log_t)qword_1008F7748, OS_LOG_TYPE_ERROR)) {
      sub_100696774();
    }
    sub_1001734D8((uint64_t)v80);
    return sub_100242CD8(&v77);
  }

  *(void *)(sub_10017AB4C(v80) + 88) = sub_10057F0C0;
  unint64_t v53 = v80;
  *((void *)v80 + 4) = sub_10057F11C;
  *(_WORD *)(sub_10017AB4C(v53) + 40) = 5000;
  int v54 = (uint64_t *)sub_10017AB4C(v80);
  sub_100173B8C(*v54);
  uint64_t v32 = 0LL;
LABEL_95:
  sub_1001967F4("d", 9u, 0LL, (_BYTE *)a6, a5, v27, v28, v29, (uint64_t)&byte_1008F7822);
  sub_100242CD0(&v77);
  if (v68)
  {
    if (v80) {
      unsigned int v45 = *((_WORD *)v80 + 2);
    }
    else {
      unsigned int v45 = 0;
    }
    sub_100583F1C(a1, v45, v67, v65, 0LL, v32, 1, v78 | ((unint64_t)v79 << 32));
  }

  return sub_100242CD8(&v77);
}

      *(_DWORD *)(a1 + 1070) = 0;
      goto LABEL_137;
    }

    __int16 v57 = (os_log_s *)qword_1008F7620;
    if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEFAULT,  "Overriding ScanCore Enabled for Connection Scan.",  buf,  2u);
    }

    uint64_t v58 = sub_1002E6E00();
    sub_10002418C(buf, "ScanCore");
    sub_10002418C(__p, "IntervalConnection");
    uint64_t v59 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, int *))(*(void *)v58 + 88LL))(v58, buf, __p, &v169);
    if (v169) {
      __int16 v60 = v59;
    }
    else {
      __int16 v60 = 0;
    }
    if (v171 < 0) {
      operator delete(__p[0]);
    }
    if (v175 < 0) {
      operator delete(*(void **)buf);
    }
    if (v60)
    {
      unsigned __int16 v61 = v169;
      *(_WORD *)(a1 + 1072) = v169;
      uint64_t v62 = (os_log_s *)qword_1008F7620;
      if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v61;
        _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEFAULT,  "Overriding ScanCore Connection Scan Interval %d.",  buf,  8u);
      }
    }

    int v63 = sub_1002E6E00();
    sub_10002418C(buf, "ScanCore");
    sub_10002418C(__p, "WindowConnection");
    unsigned int v64 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, int *))(*(void *)v63 + 88LL))(v63, buf, __p, &v169);
    if (v169) {
      unsigned int v65 = v64;
    }
    else {
      unsigned int v65 = 0;
    }
    if (v171 < 0) {
      operator delete(__p[0]);
    }
    if (v175 < 0)
    {
      operator delete(*(void **)buf);
      if (!v65) {
        goto LABEL_137;
      }
    }

    else if (!v65)
    {
      goto LABEL_137;
    }

    v160 = v169;
    *(_WORD *)(a1 + 1070) = v169;
    v161 = (os_log_s *)qword_1008F7620;
    if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v160;
      _os_log_impl( (void *)&_mh_execute_header,  v161,  OS_LOG_TYPE_DEFAULT,  "Overriding ScanCore Connection Scan Window %d.",  buf,  8u);
      LOWORD(v160) = *(_WORD *)(a1 + 1070);
    }

    if (*(unsigned __int16 *)(a1 + 1072) < (unsigned __int16)v160)
    {
      *unsigned __int16 v52 = 0;
      if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_ERROR)) {
        sub_100696CFC();
      }
      goto LABEL_136;
    }
  }

  else
  {
    if (v171 < 0) {
      operator delete(__p[0]);
    }
    if (v175 < 0) {
      operator delete(*(void **)buf);
    }
  }

            if ((v30 & 0xFFFF0000) == 0x10000)
            {
              if (_os_feature_enabled_impl("BluetoothFeatures", "EnableLEConnectionTxPowerBoost"))
              {
                uint64_t v58 = (os_log_s *)qword_1008F7620;
                if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138543362;
                  *(void *)&uint8_t buf[4] = v5;
                  _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEFAULT,  "device %{public}@ Using Tx Boosted power for LE Connection ",  buf,  0xCu);
                }

                size_t v39 = 1;
                v137 = 257;
                v136 = 1;
                goto LABEL_141;
              }

              size_t v39 = 1;
            }

            else
            {
              size_t v39 = 0;
            }

uint64_t sub_1000EB580(uint64_t a1, unsigned int a2, __int16 a3, int a4, unsigned __int8 a5)
{
  if (a1)
  {
    v7[1] = &v8;
    v7[0] = a5;
    BYTE1(v7[0]) = 9;
    BYTE3(v7[0]) = 124;
    v7[2] = 7LL;
    if (a4) {
      char v5 = 126;
    }
    else {
      char v5 = -2;
    }
    char v8 = v5;
    int v9 = 1478033413;
    char v10 = HIBYTE(a3);
    char v11 = a3;
    return sub_1000ECD48(a1, a2, (unsigned __int8 *)v7);
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_1000EB604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v46 = 0u;
  __int128 v47 = 0u;
  memset(v45, 0, sizeof(v45));
  if (a1)
  {
    if (a3) {
      goto LABEL_3;
    }
  }

  else
  {
    sub_1001EE2A0();
    if (a3) {
      goto LABEL_3;
    }
  }

  sub_1001EE2A0();
LABEL_3:
  uint64_t v6 = *(void *)(*(void *)(qword_1008F29A0 + 16) + 16LL);
  if (!v6)
  {
    sub_1001EE2A0();
    uint64_t v6 = *(void *)(*(void *)(qword_1008F29A0 + 16) + 16LL);
  }

  if (*(_BYTE *)(a3 + 3) != 124)
  {
    uint64_t v12 = sub_1000E727C(a1, 0);
    if (!v12) {
      goto LABEL_97;
    }
    uint64_t v13 = v12;
    unsigned int v14 = *(unsigned __int8 **)(a3 + 8);
    if (v14)
    {
      unsigned int v15 = *(unsigned __int16 *)(a3 + 16);
      if (*(_WORD *)(a3 + 16))
      {
        if (v15 <= 2)
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        }

        else
        {
          int v16 = v15 - 3;
          if (v15 != 3)
          {
            unsigned int v17 = *(unsigned __int16 *)(v14 + 1);
            unsigned int v18 = *v14;
            int v19 = v14[3];
            LOBYTE(v46) = v14[3];
            int v20 = 3308;
            if (v15 >= 7) {
              uint64_t v21 = 7LL;
            }
            else {
              uint64_t v21 = 4LL;
            }
            if (v15 >= 7 && (__PAIR64__(v18, bswap32(v17)) >> 16) == 6488)
            {
              int v20 = 3305;
              if (v19 <= 48)
              {
                switch(v19)
                {
                  case 16:
                  case 24:
                    goto LABEL_69;
                  case 17:
                    goto LABEL_145;
                  case 18:
                    LOBYTE(v47) = v14[v21];
                    goto LABEL_145;
                  case 19:
                  case 20:
                  case 21:
                    int v22 = 0;
                    BYTE8(v46) = v14[v21];
                    LODWORD(v21) = v21 + 1;
                    goto LABEL_142;
                  case 22:
                    if (v21 >= v15)
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/a"
                                             "v/avrcp/avrcp_metadata.c");
LABEL_141:
                      int v22 = 1;
                    }

                    else
                    {
                      uint64_t v38 = v21 + 1;
                      BYTE8(v46) = v14[v21];
                      if ((int)v21 + 1 >= v15)
                      {
                        int v22 = 1;
                        LODWORD(v21) = v21 + 1;
                      }

                      else
                      {
                        int v22 = 0;
                        LODWORD(v21) = v21 + 2;
                        BYTE9(v46) = v14[v38];
                      }
                    }

LABEL_142:
                    *(void *)&__int128 v47 = &v14[v21];
                    goto LABEL_143;
                  case 23:
                    *(void *)&__int128 v47 = v45;
                    BYTE8(v46) = v14[v21];
                    if (!BYTE8(v46)) {
                      goto LABEL_145;
                    }
                    uint64_t v39 = 0LL;
                    int v22 = 0;
                    int v44 = v15 - 1;
                    unsigned __int16 v40 = v21 + 1;
                    while (!v22)
                    {
                      if (v44 <= v40) {
                        goto LABEL_133;
                      }
                      int v22 = 0;
                      *(_WORD *)(v47 + 2 * v39) = bswap32(*(unsigned __int16 *)&v14[v40]) >> 16;
                      v40 += 2;
LABEL_134:
                    }

                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/"
                                           "avrcp/avrcp_metadata.c");
LABEL_133:
                    int v22 = 1;
                    goto LABEL_134;
                  case 25:
                  case 26:
                  case 27:
                  case 28:
                  case 29:
                  case 30:
                  case 31:
                    goto LABEL_32;
                  case 32:
                    *((void *)&v47 + 1) = v45;
                    *((void *)&v46 + 1) = &v14[v21];
                    if (v15 - v21 <= 7)
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/a"
                                             "v/avrcp/avrcp_metadata.c");
                      int v42 = v47;
                      int v22 = 1;
                    }

                    else
                    {
                      uint64_t v41 = v21 | 8;
                      int v22 = 0;
                      LOWORD(v21) = v21 + 9;
                      int v42 = v14[v41];
                      LOBYTE(v47) = v14[v41];
                    }

                    if (!v42) {
                      goto LABEL_143;
                    }
                    uint64_t v43 = 0LL;
                    break;
                  default:
                    if (v19 == 48) {
                      goto LABEL_145;
                    }
                    goto LABEL_32;
                }

                while (1)
                {
                  if (v22)
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/"
                                           "avrcp/avrcp_metadata.c");
                  }

                  else if (v16 > (unsigned __int16)v21)
                  {
                    int v22 = 0;
                    *(_DWORD *)(*((void *)&v47 + 1) + 4 * v43) = bswap32(*(_DWORD *)&v14[(unsigned __int16)v21]);
                    LOWORD(v21) = v21 + 4;
                    goto LABEL_152;
                  }

                  int v22 = 1;
LABEL_152:
                  if (++v43 >= (unint64_t)v47)
                  {
LABEL_143:
                    if (v22) {
                      goto LABEL_144;
                    }
LABEL_145:
                    int v20 = 0;
                    goto LABEL_32;
                  }
                }
              }

              if (v19 <= 95)
              {
                if (v19 != 49)
                {
                  if (v19 != 80) {
                    goto LABEL_32;
                  }
LABEL_69:
                  BYTE8(v46) = v14[v21];
                  goto LABEL_145;
                }

                if (v21 < v15)
                {
                  BYTE8(v46) = v14[v21];
                  HIDWORD(v46) = bswap32(*(_DWORD *)&v14[v21 + 1]);
                  goto LABEL_145;
                }

    unsigned __int16 v101 = *(_WORD *)(*(void *)(sub_10017AB4C(a1) + 112) + 144LL);
    if ((unsigned __int16)(v101 + ~v92) >= 0x40u)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Number of sRejFramesRemaining is too large %d",  v102,  v103,  v104,  v105,  v106,  v107,  v108,  (unsigned __int16)(v101 + ~v92));
        uint64_t v109 = (os_log_s *)sub_100086554(0x2Fu);
        if (os_log_type_enabled(v109, OS_LOG_TYPE_FAULT)) {
          sub_10065C640(v109);
        }
      }

      goto LABEL_130;
    }

    v110 = sub_10017AB4C(a1);
    __memmove_chk( __src,  *(void *)(v110 + 112) + 2LL * v92 + 20,  2LL * (unsigned __int16)(v101 + ~v92),  126LL);
    *((_WORD *)__src + (unsigned __int16)(v101 + ~v92)) = a3;
    v111 = sub_10017AB4C(a1);
    memmove((void *)(*(void *)(v111 + 112) + 18LL), __src, 0x7EuLL);
    *(_WORD *)(*(void *)(sub_10017AB4C(a1) + 112) + 144LL) = v101 - v92;
    if ((_DWORD)v15) {
      goto LABEL_131;
    }
  }

  else
  {
    sub_1001EE2A0();
LABEL_130:
    unsigned int v15 = 538LL;
LABEL_131:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Failed to send SREJ list : %!", v84, v85, v86, v87, v88, v89, v90, v15);
      unsigned int v91 = (os_log_s *)sub_100086554(0x2Fu);
      if (os_log_type_enabled(v91, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  return v15;
}

    v113 = 0;
    uint64_t v66 = v99;
    goto LABEL_143;
  }

  uint64_t v66 = v67;
  if (v67 <= 0x42u) {
    v114 = 328;
  }
  else {
    v114 = 4 * v67 + 60;
  }
  if (v114 >= v102 && v99 <= v67) {
    goto LABEL_142;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"LE_ScaleDataLength Capping Rx with 2M for lmHandle 0x%x ceClassicAllowance %d rxTime %d >= %d optimalRxBy tes %d Cap rxTime and optimalRxBytes txPhy %d",  v138,  v139,  v140,  v141,  v142,  v143,  v144,  *a1);
    v145 = (os_log_s *)sub_100086554(0x42u);
    if (os_log_type_enabled(v145, OS_LOG_TYPE_DEFAULT))
    {
      v146 = sub_1001EDDCC();
      *(_DWORD *)buf = 136446210;
      v155 = v146;
      _os_log_impl((void *)&_mh_execute_header, v145, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  v153 = v67;
  v113 = 1;
LABEL_143:
  *((_BYTE *)a1 + 265) = v113;
  v115 = a1[40];
  v116 = 8 * sub_1001ACFFC(v66, v41, v32, *((_DWORD *)a1 + 36), *((_DWORD *)a1 + 37));
  if (v116) {
    v116 = v116 * (0x3E8u / (int)((double)v115 * 1.25)) / 0x3E8;
  }
  *((_DWORD *)a1 + 53) = v116;
  *((_DWORD *)a1 + 54) = sub_1001ACFFC(v153, v41, v19, *((_DWORD *)a1 + 36), *((_DWORD *)a1 + 37));
  sub_10008B740((uint64_t)a1);
  if ((_DWORD)v41 == a1[52] && v153 == a1[54])
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Tx length is already at best-fit, exiting",  v117,  v118,  v119,  v120,  v121,  v122,  v123,  v147);
      v124 = (os_log_s *)sub_100086554(0x42u);
      if (os_log_type_enabled(v124, OS_LOG_TYPE_DEFAULT))
      {
        v125 = sub_1001EDDCC();
        *(_DWORD *)buf = 136446210;
        v155 = v125;
        _os_log_impl((void *)&_mh_execute_header, v124, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    v126 = 4000LL;
  }

  else
  {
    v126 = sub_10018D018((uint64_t)a1);
  }

  if (sub_1000A86F0())
  {
    if (a2 > 7) {
      v127 = "UNKNOWN";
    }
    else {
      v127 = off_100885F58[a2];
    }
    sub_100112940();
    sub_1001EE134( (uint64_t)"Reason %s Selected %d with optimal [tx %d, rx %d], all-time rx %d,  CE %d, calc-CE %d, tput %d, classic-a lw [%d -> %d], probe: %s, piconets %d, status %!. Current: tx[%d, %d] rx[%d, %d] lmHandle 0x%x ",  v128,  v129,  v130,  v131,  v132,  v133,  v134,  (uint64_t)v127);
    v135 = (os_log_s *)sub_100086554(0x42u);
    if (os_log_type_enabled(v135, OS_LOG_TYPE_DEFAULT))
    {
      v136 = sub_1001EDDCC();
      *(_DWORD *)buf = 136446210;
      v155 = v136;
      _os_log_impl((void *)&_mh_execute_header, v135, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  return v126;
}

  if (*(unsigned __int16 *)(a1 + 1100) < *(unsigned __int16 *)(a1 + 1098)
    && os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_FAULT))
  {
    sub_100696FAC();
  }

  unsigned int v91 = 0;
  unint64_t v53 = sub_1002E6E00();
  sub_10002418C(buf, "LE");
  sub_10002418C(__p, "LeConnectionMinIntervalDigitalID");
  int v54 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, int *))(*(void *)v53 + 88LL))(v53, buf, __p, &v91);
  if (v93 < 0) {
    operator delete(__p[0]);
  }
  if (v100 < 0)
  {
    operator delete(*(void **)buf);
    if (!v54) {
      goto LABEL_153;
    }
  }

  else if (!v54)
  {
    goto LABEL_153;
  }

  size_t v55 = v91;
  *(_WORD *)(a1 + 1104) = v91;
  unsigned int v56 = (os_log_s *)qword_1008F7620;
  if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v55;
    _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEFAULT,  "Override LeConnectionMinIntervalDigitalID:%d",  buf,  8u);
  }

LABEL_139:
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrc"
                                       "p/avrcp_metadata.c");
                goto LABEL_144;
              }

              if (v19 == 96)
              {
                WORD4(v46) = bswap32(*(unsigned __int16 *)&v14[v21]) >> 16;
                goto LABEL_145;
              }

              if (v19 == 116 || v19 == 144)
              {
                if (v21 >= v15)
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/av"
                                         "rcp/avrcp_metadata.c");
                }

                else
                {
                  BYTE8(v46) = v14[v21];
                  if ((int)(v15 - (v21 + 1)) >= 8)
                  {
                    for (uint64_t i = 0LL; i != 8; ++i)
                      *(_BYTE *)(((unint64_t)&v46 | 9) + i) = v14[v21 + 1 + i];
                    if ((int)(v15 - (v21 + 9)) > 1)
                    {
                      WORD1(v47) = bswap32(*(unsigned __int16 *)&v14[v21 + 9]) >> 16;
                      goto LABEL_145;
                    }

        __int128 v46 = *(void *)(v46 + 8);
      }

      while ((uint8_t *)v46 != buf);
    }

    if (v82)
    {
      if (v82 != 109) {
        goto LABEL_148;
      }
      sub_1003D01A0((uint64_t)a2, (uint64_t)v94);
      unsigned int v65 = v94[23];
      uint64_t v66 = *(void **)v94;
      if (v94[23] >= 0) {
        unsigned __int16 v67 = v94;
      }
      else {
        unsigned __int16 v67 = *(const char **)v94;
      }
      unsigned int v68 = strncmp(v67, "MB Bluetooth", 0xCuLL);
      if (v65 < 0) {
        operator delete(v66);
      }
      if (!v68)
      {
        sub_100422B6C((uint64_t)a1, (uint64_t)a2, 0LL, 0, 11LL, 0LL, 0);
        uint64_t v72 = (os_log_s *)qword_1008F7578;
        if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)char v94 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_DEFAULT,  "This device reports no services supported and then makes incoming connection :( ",  v94,  2u);
        }
      }

      else
      {
LABEL_148:
        if (qword_1008D67E8 != -1) {
          dispatch_once(&qword_1008D67E8, &stru_100897E98);
        }
        sub_1003CA640((uint64_t)off_1008D67E0, (uint64_t)a2, v82);
        sub_100422B6C((uint64_t)a1, (uint64_t)a2, 0xFFFFFFFFLL, 0, 11LL, v82, 0);
      }

      if (qword_1008D9600 != -1) {
        dispatch_once(&qword_1008D9600, &stru_100897ED8);
      }
      sub_10041ABC8();
      sub_100423730(a1, (uint64_t)a2);
    }

LABEL_144:
                    int v20 = 3306;
                    goto LABEL_32;
                  }
                }

                goto LABEL_139;
              }

  v171 = 0;
  v169 = 0;
  v167 = 0;
  v165 = 0;
LABEL_145:
  int v77 = sub_1002E6BF0();
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v77 + 136LL))(v77))
  {
    v161 = 0;
    v157 = 0;
    unsigned __int16 v81 = 0LL;
    unsigned int v82 = 0LL;
    unsigned int v83 = 0LL;
    goto LABEL_158;
  }

  size_t v79 = *(_DWORD *)(a2 + 36);
  if (!v79)
  {
    v161 = 0;
    unsigned __int16 v80 = *(_DWORD *)(a2 + 40);
    if (v80) {
      goto LABEL_148;
    }
LABEL_151:
    v157 = 0;
    goto LABEL_152;
  }

  unsigned __int16 v80 = *(_DWORD *)(a2 + 40);
  v161 = vcvtas_u32_f32((float)((float)v79 * 100.0) / (float)(v80 + v79 + *(_DWORD *)(a2 + 60)));
  if (!v80) {
    goto LABEL_151;
  }
LABEL_148:
  v157 = vcvtas_u32_f32((float)((float)v80 * 100.0) / (float)(v80 + v79 + *(_DWORD *)(a2 + 60)));
LABEL_152:
  uint64_t v84 = *(_DWORD *)(a2 + 44);
  int v85 = *(_DWORD *)(a2 + 48);
  *(float *)v78.i32 = (float)v85;
  unsigned int v86 = vcvtps_u32_f32((float)v85 / (float)v84);
  if (v84) {
    unsigned __int16 v81 = v86;
  }
  else {
    unsigned __int16 v81 = 0LL;
  }
  unsigned int v82 = v80 + v79;
  if (v85)
  {
    LODWORD(v82) = vcvtps_u32_f32((float)v82 / *(float *)v78.i32);
    unsigned int v83 = vcvt_u32_f32(vrndp_f32(vdiv_f32(vcvt_f32_u32(*(uint32x2_t *)(a2 + 52)), (float32x2_t)vdup_lane_s32(v78, 0))));
  }

  else
  {
    unsigned int v83 = *(uint32x2_t *)(a2 + 52);
  }

  dword_1008F7478 = 0;
  byte_1008F747D = 0;
  v140 = 0;
  v139 = 0;
  LOBYTE(v142) = 0;
  sub_100242CA4(&v142);
  unsigned int v93 = sub_100114338((uint64_t)&v139);
  sub_100242CD0(&v142);
  if (v93)
  {
    if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_ERROR)) {
      sub_10067E1C8();
    }
    sub_10042DE1C(a1);
  }

  else
  {
    sub_100242C98(&v142);
    char v94 = sub_1002E6BF0();
    __int16 v95 = (*(uint64_t (**)(uint64_t))(*(void *)v94 + 184LL))(v94);
    sub_1000876E0(v95);
    sub_100242CD0(&v142);
    sub_100242ECC((uint64_t)v152);
    uint64_t v96 = (void *)(a1 + 296);
    *(_DWORD *)(a1 + 288) = v139;
    *(_WORD *)(a1 + 292) = v140;
    std::string::assign((std::string *)(a1 + 296), "iOS");
    int v97 = (os_log_s *)qword_1008F7578;
    if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v98 = (void *)(a1 + 296);
      *(_DWORD *)buf = 136315650;
      *(void *)&uint8_t buf[4] = v98;
      *(_WORD *)&buf[12] = 1040;
      *(_DWORD *)v154 = 6;
      *(_WORD *)&v154[4] = 2096;
      *(void *)&v154[6] = a1 + 288;
      _os_log_impl( (void *)&_mh_execute_header,  v97,  OS_LOG_TYPE_DEFAULT,  "statedump: Local device is %s (%{bluetooth:BD_ADDR}.6P)",  buf,  0x1Cu);
    }

    unsigned int v99 = (os_log_s *)qword_1008F7678;
    if (os_log_type_enabled((os_log_t)qword_1008F7678, OS_LOG_TYPE_DEFAULT))
    {
      sub_1003FE1B4((unsigned __int8 *)(a1 + 288), buf);
      if (v154[9] >= 0) {
        __int16 v100 = buf;
      }
      else {
        __int16 v100 = *(_BYTE **)buf;
      }
      *(_DWORD *)v158 = 136315394;
      *(void *)&v158[4] = v96;
      v159 = 2080;
      v160 = v100;
      _os_log_impl( (void *)&_mh_execute_header,  v99,  OS_LOG_TYPE_DEFAULT,  "Init Core Stack - {localname: %s, local-addr: %s}",  v158,  0x16u);
      if ((v154[9] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    sub_100242F54((uint64_t)v152);
    sub_100242C98(&v142);
    sub_1002E6E9C();
    sub_1002D07C4();
    if (*(_DWORD *)(sub_1002E6E9C() + 708) >= 0x7D0u && *(_DWORD *)(sub_1002E6E9C() + 708) <= 0xF9Fu)
    {
      sub_1002E6E9C();
      sub_1002D0700();
    }

    unsigned __int16 v101 = *(_DWORD *)(sub_1002E6E9C() + 708) && *(_DWORD *)(sub_1002E6E9C() + 708) < 0x7D0u;
    sub_100133FC4(v101);
    sub_100242CD0(&v142);
    *(_OWORD *)(a1 + 336) = 0u;
    *(_OWORD *)(a1 + 352) = 0u;
    *(_OWORD *)(a1 + 320) = 0u;
    *(_WORD *)(a1 + 320) = sub_100360FE0();
    *(_WORD *)(a1 + 322) = sub_100360FE8();
    *(_WORD *)(a1 + 324) = sub_100360F0C();
    *(_BYTE *)(a1 + 326) = 1;
    *(_WORD *)(a1 + 328) = sub_1000A86F0();
    *(void *)(a1 + 344) = 0LL;
    *(void *)(a1 + 352) = aPnpInformation;
    *(void *)(a1 + 360) = 0LL;
    *(_DWORD *)(a1 + 332) = 10495684;
    *(_WORD *)(a1 + 330) = 1;
    *(void *)(a1 + 336) = 0x7D0C0D00000000LL;
    sub_100242C98(&v142);
    unsigned __int16 v102 = sub_100360FE0();
    unsigned int v103 = getpid();
    v104 = sub_100360F0C();
    int v105 = sub_1002E6E9C();
    sub_100091444(v102, v103, v104, *(_WORD *)(v105 + 708));
    uint64_t v106 = sub_1002E6BF0();
    uint64_t v107 = (*(uint64_t (**)(uint64_t))(*(void *)v106 + 72LL))(v106);
    sub_1000917E4(v107);
    sub_100242CD0(&v142);
    LOBYTE(v141) = 0;
    v138 = 0;
    v108 = sub_1002E6E00();
    if ((*(unsigned int (**)(uint64_t))(*(void *)v108 + 8LL))(v108))
    {
      uint64_t v109 = sub_1002E6E00();
      sub_10002418C(buf, "FastConnect");
      sub_10002418C(v158, "DisableFastConnect");
      (*(void (**)(uint64_t, _BYTE *, _BYTE *, int *))(*(void *)v109 + 72LL))(v109, buf, v158, &v141);
      if (v161 < 0) {
        operator delete(*(void **)v158);
      }
      if ((v154[9] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      v110 = sub_1002E6E00();
      sub_10002418C(buf, "FastConnect");
      sub_10002418C(v158, "DisableFastConnectAll");
      (*(void (**)(uint64_t, _BYTE *, _BYTE *, char *))(*(void *)v110 + 72LL))(v110, buf, v158, &v138);
      if (v161 < 0) {
        operator delete(*(void **)v158);
      }
      if ((v154[9] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      if ((_BYTE)v141) {
        *(_DWORD *)(a1 + 332) &= ~0x200000u;
      }
      if (v138) {
        *(_DWORD *)(a1 + 340) &= ~0x40000u;
      }
    }

    v111 = sub_1002E6BF0();
    if ((_os_feature_enabled_impl("BluetoothFeatures", "AACPServerConnection") & 1) == 0) {
      *(_DWORD *)(a1 + 340) &= ~0x400u;
    }
    v112 = sub_1002E6E9C();
    if ((sub_1002CD53C(v112, 1u) & 1) == 0) {
      *(_DWORD *)(a1 + 340) &= ~0x10000u;
    }
    sub_1002E6E9C();
    if (sub_1002CD8E0()) {
      *(_DWORD *)(a1 + 340) |= 0x20000u;
    }
    if ((_os_feature_enabled_impl("BluetoothFeatures", "AACPTransportForUARP") & 1) == 0) {
      *(_DWORD *)(a1 + 340) &= ~0x80000u;
    }
    v113 = sub_1002E6BF0();
    v114 = sub_1002E6E9C();
    v115 = sub_1002E6E9C();
    sub_100242C98(&v142);
    v116 = sub_100112C20((uint64_t)sub_10042DF94, 0LL);
    sub_100242CD0(&v142);
    if (v116)
    {
      if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_ERROR)) {
        sub_10067E168();
      }
    }

    else
    {
      sub_100242C98(&v142);
      v117 = sub_100112C30((uint64_t)nullsub_353, 0LL);
      sub_100242CD0(&v142);
      if (v117)
      {
        if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_ERROR)) {
          sub_10067E108();
        }
      }

      else
      {
        sub_100242C98(&v142);
        v119 = sub_1000EE4A4((__int16 *)(a1 + 320), (unsigned int *)&dword_1008F0B08);
        sub_1000BAEF4(sub_10042C3B8);
        sub_100242CD0(&v142);
        if (!v119)
        {
          v137 = 0;
          v136 = 0;
          v120 = sub_1002E8D54();
          (*(void (**)(uint64_t, unsigned __int8 *, char *, __int16 *))(*(void *)v120 + 24LL))( v120,  &v137,  (char *)&v136 + 1,  &v136);
          if (v137)
          {
            sub_100242C98(&v142);
            sub_100118D44(HIBYTE(v136) != 0);
            sub_100242CD0(&v142);
          }

          v121 = sub_1002E6E00();
          if ((*(unsigned int (**)(uint64_t))(*(void *)v121 + 8LL))(v121))
          {
            v135 = 0;
            v122 = sub_1002E6E00();
            sub_10002418C(buf, "Stack");
            sub_10002418C(v158, "IOTDataCollection");
            (*(void (**)(uint64_t, _BYTE *, _BYTE *, unsigned __int8 *))(*(void *)v122 + 72LL))( v122,  buf,  v158,  &v135);
            if (v161 < 0) {
              operator delete(*(void **)v158);
            }
            if ((v154[9] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
            if (v135)
            {
              sub_100242C98(&v142);
              nullsub_63(v135, v123);
              sub_100242CD0(&v142);
            }
          }

          v124 = sub_1002E6E00();
          sub_10002418C(buf, "Stack");
          sub_10002418C(v158, "PacketAggregation");
          v125 = (*(uint64_t (**)(uint64_t, _BYTE *, _BYTE *, unsigned __int8 *))(*(void *)v124 + 72LL))( v124,  buf,  v158,  &v137);
          if (v161 < 0) {
            operator delete(*(void **)v158);
          }
          if ((v154[9] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
          if (v125)
          {
            sub_10017AFF4(v137);
            if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_ERROR)) {
              sub_10067E02C();
            }
          }

          sub_10042E000();
          sub_100242ECC((uint64_t)v152);
          uint64_t v76 = 0LL;
          *(_BYTE *)(a1 + 556) = v134;
          goto LABEL_204;
        }

        if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_ERROR)) {
          sub_10067E0A8();
        }
      }
    }

    sub_10042DE1C(a1);
  }

  uint64_t v76 = 110LL;
LABEL_204:
  sub_100242CD8(&v142);
LABEL_205:
  if (SHIBYTE(v151) < 0) {
    operator delete(__p[0]);
  }
  sub_100242FAC((uint64_t)v152);
  return v76;
}

      unsigned int v83 = *(void *)(v83 + 8);
      if (v83 == a1 + 16848) {
        goto LABEL_201;
      }
    }
  }

  v318 = 0;
  uint64_t v84 = 0;
LABEL_201:
  v121 = (os_log_s *)qword_1008F7648;
  if (os_log_type_enabled((os_log_t)qword_1008F7648, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)v414 = 67109376;
    *(_DWORD *)&v414[4] = v84;
    *(_WORD *)&v414[8] = 1024;
    *(_DWORD *)&v414[10] = v318;
    _os_log_impl( (void *)&_mh_execute_header,  v121,  OS_LOG_TYPE_DEFAULT,  "background advertising sessions:AppleMFG:%d Extended:%d",  v414,  0xEu);
  }

  if ((v16 & 1) == 0)
  {
    if (a4)
    {
      v130 = a4;
      v131 = a3 + 1;
      v132 = &v423;
      do
      {
        v133 = *(_WORD *)v132;
        v132 = (uint64_t *)((char *)v132 + 2);
        *v131 = v133;
        v131 += 1668;
        --v130;
      }

      while (v130);
    }

    goto LABEL_507;
  }

  if (qword_1008D6198 != -1) {
    dispatch_once(&qword_1008D6198, &stru_1008A1CA0);
  }
  if (!sub_100449234(off_1008D6190))
  {
    v122 = (os_log_s *)qword_1008F7648;
    if (os_log_type_enabled((os_log_t)qword_1008F7648, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v414 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v122,  OS_LOG_TYPE_INFO,  "Limiting advertisement duty cycle based on other activies",  v414,  2u);
    }

    v123 = v423;
    LOWORD(v423) = v123;
    v124 = WORD1(v423);
    if (WORD1(v423) <= 0x122u) {
      v124 = 290;
    }
    WORD1(v423) = v124;
    v125 = HIWORD(v423);
    if (HIWORD(v423) <= 0x122u) {
      v125 = 290;
    }
    HIWORD(v423) = v125;
  }

  bzero(v414, 0x203AuLL);
  bzero(__p, 0x203AuLL);
  v411 = 0;
  v410 = 0LL;
  v409 = 0;
  v408 = 0LL;
  v127 = 28LL;
  if ((v319 & 1) != 0) {
    v128 = 31LL;
  }
  else {
    v128 = 28LL;
  }
  if ((v324 & 1) != 0) {
    v127 = 31LL;
  }
  v325 = v128;
  v405[0] = v128;
  v323 = v127;
  v405[1] = v127;
  v406 = vdupq_n_s64(0x1FuLL);
  v320 = *(_WORD *)(a1 + 16904);
  v407 = v320;
  v404 = 0LL;
  v403 = 0u;
  v402 = 0u;
  v401 = 0u;
  v400 = 0u;
  v399 = 0u;
  v398 = 0u;
  v397 = 0u;
  v396 = 0LL;
  v395 = 0u;
  v394 = 0u;
  v393 = 0u;
  v392 = 0u;
  v391 = 0u;
  v390 = 0u;
  *(_OWORD *)buf = 0u;
  v388 = 0LL;
  v387 = 0u;
  memset(v386, 0, sizeof(v386));
  v385 = 0LL;
  memset(v384, 0, sizeof(v384));
  v383 = 0LL;
  memset(v382, 0, sizeof(v382));
  v381 = 0LL;
  memset(v380, 0, sizeof(v380));
  v337 = 0;
  v336 = 0;
  if (v352 != v351)
  {
    v129 = *((void *)v351 + 1);
    if (*(char *)(v129 + 39) < 0)
    {
      v126 = sub_100024238(__dst, *(void **)(v129 + 16), *(void *)(v129 + 24));
    }

    else
    {
      *(_OWORD *)__dst = *(_OWORD *)(v129 + 16);
      *(void *)&__dst[16] = *(void *)(v129 + 32);
    }

    *(_OWORD *)__src = *(_OWORD *)__dst;
    __src[2] = *(void **)&__dst[16];
    for (uint64_t i = (uint64_t)v351; (char *)i != v352; i += 16LL)
    {
      memset(__dst, 0, 24);
      sub_10056B86C(*(void *)(i + 8), 2, __dst);
      if (a4 < 2) {
        v136 = 0;
      }
      else {
        v136 = *(unsigned __int8 *)(*(void *)(i + 8) + 264LL);
      }
      sub_10057649C(v135, (void *)&v397 + 3 * v136, (unsigned __int8 **)__dst, 0xFFFFu);
      sub_10056B86C(*(void *)(i + 8), 4, __inbytesleft);
      v137 = *(void *)__dst;
      if (*(void *)__dst)
      {
        *(void *)&__dst[8] = *(void *)__dst;
        operator delete(*(void **)__dst);
      }

      *(_OWORD *)__dst = *(_OWORD *)__inbytesleft;
      *(void *)&__dst[16] = v379;
      sub_10057649C(v137, &buf[24 * v136], (unsigned __int8 **)__dst, 0xFFFFu);
      sub_10056B86C(*(void *)(i + 8), 16, __inbytesleft);
      v138 = *(void *)__dst;
      if (*(void *)__dst)
      {
        *(void *)&__dst[8] = *(void *)__dst;
        operator delete(*(void **)__dst);
      }

      *(_OWORD *)__dst = *(_OWORD *)__inbytesleft;
      *(void *)&__dst[16] = v379;
      sub_10057649C(v138, (void *)v386 + 3 * v136, (unsigned __int8 **)__dst, 0xFFFFu);
      sub_10056BA08(*(void *)(i + 8), 2, __inbytesleft);
      v139 = *(void *)__dst;
      if (*(void *)__dst)
      {
        *(void *)&__dst[8] = *(void *)__dst;
        operator delete(*(void **)__dst);
      }

      *(_OWORD *)__dst = *(_OWORD *)__inbytesleft;
      *(void *)&__dst[16] = v379;
      sub_10057649C(v139, (void *)v384 + 3 * v136, (unsigned __int8 **)__dst, 0xFFFFu);
      sub_10056BA08(*(void *)(i + 8), 4, __inbytesleft);
      v140 = *(void *)__dst;
      if (*(void *)__dst)
      {
        *(void *)&__dst[8] = *(void *)__dst;
        operator delete(*(void **)__dst);
      }

      *(_OWORD *)__dst = *(_OWORD *)__inbytesleft;
      *(void *)&__dst[16] = v379;
      sub_10057649C(v140, (void *)v382 + 3 * v136, (unsigned __int8 **)__dst, 0xFFFFu);
      sub_10056BA08(*(void *)(i + 8), 16, __inbytesleft);
      v141 = *(void *)__dst;
      if (*(void *)__dst)
      {
        *(void *)&__dst[8] = *(void *)__dst;
        operator delete(*(void **)__dst);
      }

      *(_OWORD *)__dst = *(_OWORD *)__inbytesleft;
      *(void *)&__dst[16] = v379;
      sub_10057649C(v141, (void *)v380 + 3 * v136, (unsigned __int8 **)__dst, 0xFFFFu);
      *((_BYTE *)&v336 + v136) = *((void *)v386 + 3 * v136 + 1) != *((void *)v386 + 3 * v136);
      v126 = *(const void **)__dst;
      if (*(void *)__dst)
      {
        *(void *)&__dst[8] = *(void *)__dst;
        operator delete(*(void **)__dst);
      }
    }
  }

  if (a4)
  {
    v142 = (uint64_t)v345;
    if (v346 != v345 && *(_BYTE *)(a1 + 16874) && *v327)
    {
      do
      {
        memset(__dst, 0, 24);
        sub_10056B86C(*(void *)(v142 + 8), 2, __dst);
        sub_10057649C(v143, &v403, (unsigned __int8 **)__dst, 0xFFFFu);
        v126 = *(const void **)__dst;
        if (*(void *)__dst)
        {
          *(void *)&__dst[8] = *(void *)__dst;
          operator delete(*(void **)__dst);
        }

        v142 += 16LL;
      }

      while ((void *)v142 != v346);
      v337 = 0;
    }
  }

  v144 = (uint64_t)v348;
  if (v349 != v348)
  {
    while (1)
    {
      v145 = (void *)*((unsigned __int8 *)__src + 23);
      v146 = (char)v145;
      if (v145) {
        goto LABEL_266;
      }
      v147 = *(void *)(v144 + 8);
      *(_OWORD *)__dst = *(_OWORD *)(v147 + 16);
      *(void *)&__dst[16] = *(void *)(v147 + 32);
      if (v146 < 0) {
        goto LABEL_264;
      }
LABEL_265:
      *(_OWORD *)__src = *(_OWORD *)__dst;
      __src[2] = *(void **)&__dst[16];
LABEL_266:
      if (a4 < 2) {
        v148 = 0;
      }
      else {
        v148 = *(unsigned __int8 *)(*(void *)(v144 + 8) + 264LL);
      }
      memset(__dst, 0, 24);
      sub_10056B86C(*(void *)(v144 + 8), 2, __dst);
      sub_10057649C(v149, (void *)&v397 + 3 * v148, (unsigned __int8 **)__dst, 0xFFFFu);
      sub_10056B86C(*(void *)(v144 + 8), 4, __inbytesleft);
      v150 = *(void *)__dst;
      if (*(void *)__dst)
      {
        *(void *)&__dst[8] = *(void *)__dst;
        operator delete(*(void **)__dst);
      }

      *(_OWORD *)__dst = *(_OWORD *)__inbytesleft;
      *(void *)&__dst[16] = v379;
      sub_10057649C(v150, &buf[24 * v148], (unsigned __int8 **)__dst, 0xFFFFu);
      sub_10056B86C(*(void *)(v144 + 8), 16, __inbytesleft);
      v151 = *(void *)__dst;
      if (*(void *)__dst)
      {
        *(void *)&__dst[8] = *(void *)__dst;
        operator delete(*(void **)__dst);
      }

      *(_OWORD *)__dst = *(_OWORD *)__inbytesleft;
      *(void *)&__dst[16] = v379;
      sub_10057649C(v151, (void *)v386 + 3 * v148, (unsigned __int8 **)__dst, 0xFFFFu);
      sub_10056BA08(*(void *)(v144 + 8), 2, __inbytesleft);
      v152 = *(void *)__dst;
      if (*(void *)__dst)
      {
        *(void *)&__dst[8] = *(void *)__dst;
        operator delete(*(void **)__dst);
      }

      *(_OWORD *)__dst = *(_OWORD *)__inbytesleft;
      *(void *)&__dst[16] = v379;
      sub_10057649C(v152, (void *)v384 + 3 * v148, (unsigned __int8 **)__dst, 0xFFFFu);
      sub_10056BA08(*(void *)(v144 + 8), 4, __inbytesleft);
      v153 = *(void *)__dst;
      if (*(void *)__dst)
      {
        *(void *)&__dst[8] = *(void *)__dst;
        operator delete(*(void **)__dst);
      }

      *(_OWORD *)__dst = *(_OWORD *)__inbytesleft;
      *(void *)&__dst[16] = v379;
      sub_10057649C(v153, (void *)v382 + 3 * v148, (unsigned __int8 **)__dst, 0xFFFFu);
      sub_10056BA08(*(void *)(v144 + 8), 16, __inbytesleft);
      v154 = *(void *)__dst;
      if (*(void *)__dst)
      {
        *(void *)&__dst[8] = *(void *)__dst;
        operator delete(*(void **)__dst);
      }

      *(_OWORD *)__dst = *(_OWORD *)__inbytesleft;
      *(void *)&__dst[16] = v379;
      sub_10057649C(v154, (void *)v380 + 3 * v148, (unsigned __int8 **)__dst, 0xFFFFu);
      v126 = *(const void **)__dst;
      if (*(void *)__dst)
      {
        *(void *)&__dst[8] = *(void *)__dst;
        operator delete(*(void **)__dst);
      }

      v144 += 16LL;
    }

    sub_100024238(__dst, *(void **)(v147 + 16), *(void *)(v147 + 24));
    if ((*((_BYTE *)__src + 23) & 0x80) == 0) {
      goto LABEL_265;
    }
LABEL_264:
    operator delete(*__src);
    goto LABEL_265;
  }

            if (qword_1008D5F30 != -1) {
              dispatch_once(&qword_1008D5F30, &stru_1008A2B30);
            }
            uint64_t v59 = sub_1005D9D0C( (uint64_t)off_1008D5F28,  v5,  &v133,  &v132,  &v113,  &v131,  &v130,  (_BYTE *)&v137 + 1,  &v137,  &v136);
            __int16 v60 = (os_log_s *)qword_1008F7620;
            if (v59)
            {
              if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138543362;
                *(void *)&uint8_t buf[4] = v5;
                _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_DEFAULT,  "device %{public}@ has override connection params",  buf,  0xCu);
                __int16 v60 = (os_log_s *)qword_1008F7620;
              }

              __int16 v57 = 1;
            }

            if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
            {
              unsigned __int16 v61 = v133;
              uint64_t v62 = v132;
              LOWORD(v3) = v113;
              LOWORD(v2) = v131;
              sub_100241F90(&v149, v5);
              int v63 = sub_100599CBC(a1, (const unsigned __int8 *)&v149);
              *(_DWORD *)buf = 138544898;
              *(void *)&uint8_t buf[4] = v5;
              *(_WORD *)&buf[12] = 1024;
              unsigned int v64 = "NO";
              if (v63) {
                unsigned int v64 = "YES";
              }
              *(_DWORD *)&buf[14] = v61;
              *(_WORD *)&buf[18] = 1024;
              *(_DWORD *)&buf[20] = v62;
              *(_WORD *)v142 = 2048;
              *(double *)&v142[2] = (double)v3 * 1.25;
              *(_WORD *)&v142[10] = 2048;
              *(double *)&v142[12] = (double)v2 * 1.25;
              v143 = 1024;
              v144 = v57;
              v145 = 2082;
              v146 = v64;
              _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_DEFAULT,  "Added device %{public}@ to connection filter accept list with CE min %d, max %d, connectionInterval min:%f ms max:%f ms WLParams %d, LowLatency %{public}s",  buf,  0x3Cu);
            }

            v149 = 0LL;
            v150 = 0LL;
            v151 = 0LL;
            if (qword_1008D5F30 != -1) {
              dispatch_once(&qword_1008D5F30, &stru_1008A2B30);
            }
            sub_1005D7264((uint64_t)off_1008D5F28, v5, (uint64_t)&v149);
            unsigned int v65 = v39 ^ 1;
            if (!*(_BYTE *)(a1 + 1110)) {
              unsigned int v65 = 1;
            }
            if ((v65 & 1) != 0)
            {
              if (!v57)
              {
LABEL_173:
                unsigned __int16 v81 = sub_1002E6E9C();
                if (sub_1002D1240(v81, 3)
                  || *(_BYTE *)(a1 + 1119)
                  && (unsigned int v82 = sub_1002E6E9C(), (*(unsigned int (**)(uint64_t))(*(void *)v82 + 2616LL))(v82)))
                {
                  if (sub_10058E250(a1, v5))
                  {
                    memset(buf, 0, sizeof(buf));
                    unsigned int v83 = [v5 UUIDString];
                    sub_10002418C(buf, (char *)[v83 UTF8String]);

                    if ((char)buf[23] < 0)
                    {
                      sub_100024238(&__dst, *(void **)buf, *(unint64_t *)&buf[8]);
                    }

                    else
                    {
                      __dst = *(_OWORD *)buf;
                      v124 = *(void *)&buf[16];
                    }

                    sub_1005B3614((void *)a1);
                    uint64_t v84 = sub_100024098(a1 + 1184, (const void **)&__dst);
                    int v85 = a1 + 1192;
                    if (SHIBYTE(v124) < 0) {
                      operator delete((void *)__dst);
                    }
                    if (v85 == v84)
                    {
                      if ((char)buf[23] < 0)
                      {
                        sub_100024238(&v121, *(void **)buf, *(unint64_t *)&buf[8]);
                      }

                      else
                      {
                        v121 = *(_OWORD *)buf;
                        v122 = *(void *)&buf[16];
                      }

                      sub_1005B379C(a1, &v121, 0);
                      if (SHIBYTE(v122) < 0) {
                        operator delete((void *)v121);
                      }
                    }

                    else
                    {
                      sub_1005B39A4(a1, v5);
                    }

                    unsigned __int16 v102 = (os_log_s *)qword_1008F7620;
                    if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
                    {
                      if ((char)buf[23] < 0)
                      {
                        unsigned int v103 = *(uint8_t **)buf;
                        sub_100024238(&v119, *(void **)buf, *(unint64_t *)&buf[8]);
                      }

                      else
                      {
                        v119 = *(_OWORD *)buf;
                        v120 = *(void *)&buf[16];
                        unsigned int v103 = buf;
                      }

                      v104 = sub_100024098(a1 + 1184, (const void **)&v119);
                      int v105 = v85 == v104 ? 2 : *(_DWORD *)(v104 + 56);
                      *(_DWORD *)v140 = 136446466;
                      *(void *)&v140[4] = v103;
                      *(_WORD *)&v140[12] = 1024;
                      *(_DWORD *)&v140[14] = v105;
                      _os_log_impl( (void *)&_mh_execute_header,  v102,  OS_LOG_TYPE_DEFAULT,  "RSSI threshold state for %{public}s is %d",  v140,  0x12u);
                      if (SHIBYTE(v120) < 0) {
                        operator delete((void *)v119);
                      }
                    }
                  }

                  sub_10059FD6C(a1, v5, 0);
                }

                if (*(_BYTE *)(a1 + 1119))
                {
                  uint64_t v106 = sub_1002E6E9C();
                }

                sub_10023BF24((uint64_t)&v149, v150);
                goto LABEL_103;
              }
            }

            else
            {
              uint64_t v66 = *(unsigned __int16 *)(a1 + 1112);
              LOWORD(v113) = *(_WORD *)(a1 + 1112);
              unsigned __int16 v67 = *(unsigned __int16 *)(a1 + 1114);
              v131 = *(_WORD *)(a1 + 1114);
              unsigned int v68 = (os_log_s *)qword_1008F7620;
              if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
              {
                unsigned int v69 = v133;
                unsigned int v70 = v132;
                sub_100241F90(v140, v5);
                int v71 = sub_100599CBC(a1, v140);
                *(_DWORD *)buf = 138544898;
                uint64_t v72 = "NO";
                if (v71) {
                  uint64_t v72 = "YES";
                }
                *(void *)&uint8_t buf[4] = v5;
                *(_WORD *)&buf[12] = 1024;
                *(_DWORD *)&buf[14] = v69;
                *(_WORD *)&buf[18] = 1024;
                *(_DWORD *)&buf[20] = v70;
                *(_WORD *)v142 = 2048;
                *(double *)&v142[2] = (double)v66 * 1.25;
                *(_WORD *)&v142[10] = 2048;
                *(double *)&v142[12] = (double)v67 * 1.25;
                v143 = 1024;
                v144 = 1;
                v145 = 2082;
                v146 = v72;
                _os_log_impl( (void *)&_mh_execute_header,  v68,  OS_LOG_TYPE_DEFAULT,  "Added device %{public}@ to connection filter accept list with CE min %d, max %d, connectionInterva l min:%f ms max:%f ms WLParams %d, LowLatency %{public}s (overridden for FindMy)",  buf,  0x3Cu);
              }
            }

            unsigned __int16 v73 = v149;
            if (v149 != &v150)
            {
              do
              {
                __int16 v74 = v73[4];
                *(_DWORD *)&v140[3] = 0;
                *(_DWORD *)v140 = 0;
                int v75 = sub_1001BCDB0(v74);
                *(_DWORD *)v140 = v75;
                v140[6] = BYTE6(v75);
                *(_WORD *)&v140[4] = WORD2(v75);
                uint64_t v76 = sub_1002E6E9C();
                BYTE2(v109) = v136;
                LOBYTE(v109) = HIBYTE(v137);
                BYTE1(v109) = v137;
                LOWORD(v108) = v132;
                int v77 = (*(uint64_t (**)(uint64_t, uint8_t *, uint64_t, void, void, void, void, void, int, _DWORD *, _DWORD, void, int, void))(*(void *)v76 + 3560LL))( v76,  v140,  1LL,  (unsigned __int16)v113,  v131,  0LL,  v130,  v133,  v108,  v138,  0,  0LL,  v109,  0LL);
                uint64_t v78 = (os_log_s *)qword_1008F7620;
                if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 67109120;
                  *(_DWORD *)&uint8_t buf[4] = v77;
                  _os_log_impl( (void *)&_mh_execute_header,  v78,  OS_LOG_TYPE_DEFAULT,  "addDeviceToFilterAcceptListUnified returned %d",  buf,  8u);
                }

                size_t v79 = (void *)v73[1];
                if (v79)
                {
                  do
                  {
                    unsigned __int16 v80 = (void **)v79;
                    size_t v79 = (void *)*v79;
                  }

                  while (v79);
                }

                else
                {
                  do
                  {
                    unsigned __int16 v80 = (void **)v73[2];
                    uint64_t v26 = *v80 == v73;
                    unsigned __int16 v73 = v80;
                  }

                  while (!v26);
                }

                unsigned __int16 v73 = v80;
              }

              while (v80 != &v150);
            }

            goto LABEL_173;
          }

          size_t v31 = 4;
        }

        v133 = v31;
        break;
    }

    v132 = v31;
LABEL_135:
    __int16 v57 = 1;
    goto LABEL_136;
  }

  if (v20 == 103)
  {
LABEL_88:
    if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_ERROR)) {
      sub_100697F30();
    }
    v117[0] = _NSConcreteStackBlock;
    v117[1] = 3221225472LL;
    v117[2] = sub_1005B4DB0;
    v117[3] = &unk_1008A2590;
    v118 = v5;
    sub_10058C72C((os_unfair_lock_s *)a1, v117);

    uint64_t v32 = 202LL;
    goto LABEL_112;
  }

uint64_t sub_1000EBE4C(uint64_t a1, __int16 a2, __int16 a3, __int16 a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_1000E727C(a1, 0);
  if (v14)
  {
    uint64_t v15 = v14;
    int v16 = sub_1000B1814(0x18uLL);
    *(void *)(v15 + 24) = v16;
    if (v16)
    {
      unsigned int v17 = v16;
      uint64_t result = 0LL;
      v17[8] = a2;
      v17[9] = a3;
      uint64_t v19 = *(void *)(v15 + 24);
      *(_WORD *)(v19 + 20) = a4;
      *(_BYTE *)(v19 + 22) = a5;
      *(void *)uint64_t v19 = a6;
      *(void *)(v19 + 8) = a7;
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"AVRCP Could not handle fragmented message: no memory for fragment allocation",  v28,  v29,  v30,  v31,  v32,  v33,  v34,  v36);
        uint64_t v35 = (os_log_s *)sub_100086554(4u);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 106LL;
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"AVRCP Could not handle fragmented message: connection not found for %:",  v20,  v21,  v22,  v23,  v24,  v25,  v26,  a1);
      int v27 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 105LL;
  }

  return result;
}

uint64_t sub_1000EBF74(uint64_t a1, int a2, _BYTE *a3, uint64_t *a4)
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  if (!a1 || !a4)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  __int128 v38 = 0u;
  __int128 v39 = 0u;
  uint64_t v35 = 0LL;
  uint64_t v36 = 0LL;
  uint64_t v37 = 0LL;
  uint64_t v32 = 0LL;
  uint64_t v33 = 0LL;
  uint64_t v31 = 0LL;
  if (*(void *)(qword_1008F29A0 + 16)) {
    return 119LL;
  }
  BOOL v10 = sub_1000B1814(0x18uLL);
  uint64_t v11 = qword_1008F29A0;
  *(void *)(qword_1008F29A0 + 24) = v10;
  if (!v10) {
    return 106LL;
  }
  uint64_t v12 = sub_1000B1814(32LL * *(unsigned __int8 *)(v11 + 89));
  uint64_t v13 = (void *)qword_1008F29A0;
  uint64_t v14 = *(void *)(qword_1008F29A0 + 24);
  *(void *)(v14 + 8) = v12;
  if (!v12)
  {
    sub_1000B1838((void *)v14);
    uint64_t v6 = 106LL;
LABEL_29:
    *(void *)(qword_1008F29A0 + 24) = 0LL;
    return v6;
  }

  v13[2] = a1;
  v13[5] = sub_1000EC26C;
  v13[7] = sub_1000EC65C;
  uint64_t v15 = sub_100170414(off_1008833D8, (_WORD *)(v14 + 4));
  if ((_DWORD)v15)
  {
    uint64_t v6 = v15;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_BIPSRV_RegisterAVRCPImagingResponder failed with status %!",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v6);
      uint64_t v23 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    goto LABEL_26;
  }

  sub_1000E8058(*(unsigned __int16 *)(*(void *)(qword_1008F29A0 + 24) + 4LL));
  uint64_t v24 = qword_1008F29A0 + 24;
  if (a3)
  {
    *(_BYTE *)(*(void *)(qword_1008F29A0 + 24) + 16LL) = *a3;
    *(_BYTE *)(*(void *)v24 + 17LL) = a3[1];
    char v25 = a3[2];
  }

  else
  {
    char v25 = -1;
    *(_BYTE *)(*(void *)(qword_1008F29A0 + 24) + 16LL) = -1;
    *(_BYTE *)(*(void *)v24 + 17LL) = -1;
  }

  *(_BYTE *)(*(void *)v24 + 18LL) = v25;
  int v26 = *(unsigned __int16 *)(sub_1001EDBA0(4u) + 10);
  uint64_t v27 = *(void *)(qword_1008F29A0 + 24);
  *(_WORD *)(v27 + 20) = v26;
  xmmword_1008DFDC8 = xmmword_1006BC050;
  DWORD2(xmmword_1008DFDC8) = a2;
  *(void *)&__int128 v38 = &unk_100883468;
  *(void *)&__int128 v39 = *a4;
  WORD4(v39) = *((_WORD *)a4 + 4);
  WORD4(v38) = 5;
  xmmword_1008DFDD8 = xmmword_1006BC050;
  DWORD2(xmmword_1008DFDD8) = a2 & 0xFFFFFEFF;
  uint64_t v34 = &unk_1008834E0;
  LOWORD(v35) = 5;
  uint64_t v36 = *a4;
  LOWORD(v37) = *((_WORD *)a4 + 4);
  uint64_t v30 = &unk_100883558;
  LOWORD(v31) = 5;
  uint64_t v32 = v36;
  LOWORD(v33) = v37;
  uint64_t v6 = sub_1001E139C((uint64_t)&v38, (int *)v27);
  if (!(_DWORD)v6) {
    uint64_t v6 = sub_1000E7588();
  }
  sub_1001E1634(**(unsigned int **)(qword_1008F29A0 + 24), (uint64_t)&v34);
  sub_1001E1634(**(unsigned int **)(qword_1008F29A0 + 24), (uint64_t)&v30);
  if ((_DWORD)v6)
  {
    sub_1001E1520(**(_DWORD **)(qword_1008F29A0 + 24));
LABEL_26:
    uint64_t v28 = qword_1008F29A0;
    *(void *)(qword_1008F29A0 + 16) = 0LL;
    uint64_t v29 = *(void ***)(v28 + 24);
    if (v29[1])
    {
      sub_1000B1838(v29[1]);
      uint64_t v29 = *(void ***)(qword_1008F29A0 + 24);
      v29[1] = 0LL;
    }

    sub_1000B1838(v29);
    goto LABEL_29;
  }

  return v6;
}

void sub_1000EC26C(uint64_t a1, uint64_t a2, char *a3)
{
  if (!*(void *)(qword_1008F29A0 + 16))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"No target registered; rejecting command", v9, v10, v11, v12, v13, v14, v15, v57);
      uint64_t v16 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    goto LABEL_11;
  }

  int v6 = a3[3];
  if (!a3[3])
  {
    int v18 = sub_1000ECE48(a1, a2, (uint64_t)a3);
    if (!v18) {
      return;
    }
    int v19 = v18;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Dispatched target handler for opcode=%d, cmd=%d failed: %!",  v20,  v21,  v22,  v23,  v24,  v25,  v26,  a3[3]);
      uint64_t v27 = (os_log_s *)sub_100086554(4u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    goto LABEL_48;
  }

  int v7 = *a3;
  if ((v7 - 8) >= 3)
  {
    if (*a3)
    {
      if (v7 != 1)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Unknown command", v31, v32, v33, v34, v35, v36, v37, v57);
          __int128 v38 = (os_log_s *)sub_100086554(4u);
          if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        int v19 = 3301;
LABEL_45:
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Dispatched target handler for opcode=%d, cmd=%d failed: %!",  v49,  v50,  v51,  v52,  v53,  v54,  v55,  a3[3]);
          unsigned int v56 = (os_log_s *)sub_100086554(4u);
          if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

char *sub_1000EC65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int16 *a5)
{
  unsigned int v7 = a2;
  switch((int)a3)
  {
    case 'p':
      if ((_DWORD)a4 == 2)
      {
        if (!v9) {
          goto LABEL_54;
        }
        uint64_t v10 = bswap32(*a5) >> 16;
        return (char *)v9(a1, a2, v10);
      }

      sub_1001EE134( (uint64_t)"Invalid length for setBrowsedPlayer: %u (expecting == 2)",  v49,  v50,  v51,  v52,  v53,  v54,  v55,  a4);
      unsigned int v56 = (os_log_s *)sub_100086554(4u);
      if (!os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
        goto LABEL_45;
      }
      goto LABEL_44;
    case 'q':
      if (a4 <= 9)
      {
        sub_1001EE134( (uint64_t)"Invalid length for getFolderItems: %u (expecting >= 10)",  v30,  v31,  v32,  v33,  v34,  v35,  v36,  a4);
        uint64_t v37 = (os_log_s *)sub_100086554(4u);
        if (!os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
          goto LABEL_45;
        }
        goto LABEL_44;
      }

      int v57 = *((unsigned __int8 *)a5 + 9);
      if ((v57 - 1) > 0xFDu || 4 * v57 + 10 == (_DWORD)a4)
      {
        int v75 = *(uint64_t (**)(uint64_t, uint64_t, void, void, void))(*(void *)(*(void *)(qword_1008F29A0 + 16)
                                                                                             + 16LL)
                                                                                 + 136LL);
        if (!v75) {
          goto LABEL_54;
        }
        return (char *)v75( a1,  a2,  *(unsigned __int8 *)a5,  bswap32(*(_DWORD *)((char *)a5 + 1)),  bswap32(*(_DWORD *)((char *)a5 + 5)));
      }

      sub_1001EE134( (uint64_t)"Invalid length for getFolderItems: %u (expecting %u)",  v77,  v78,  v79,  v80,  v81,  v82,  v83,  a4);
      uint64_t v84 = (os_log_s *)sub_100086554(4u);
      if (!os_log_type_enabled(v84, OS_LOG_TYPE_ERROR)) {
        goto LABEL_63;
      }
      goto LABEL_62;
    case 'r':
      if ((_DWORD)a4 == 11)
      {
        if (!v38) {
          goto LABEL_54;
        }
        uint64_t v39 = (unsigned __int16 *)((char *)a5 + 3);
        uint64_t v40 = *((unsigned __int8 *)a5 + 2);
        return (char *)v38(a1, a2, bswap32(*a5) >> 16, v40, v39);
      }

      sub_1001EE134( (uint64_t)"Invalid length for changePath: %u (expecting == 11)",  v58,  v59,  v60,  v61,  v62,  v63,  v64,  a4);
      unsigned int v65 = (os_log_s *)sub_100086554(4u);
      if (!os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)) {
        goto LABEL_45;
      }
      goto LABEL_44;
    case 's':
      if (a4 <= 0xB)
      {
        sub_1001EE134( (uint64_t)"Invalid length for getItemAttributes: %d (expecting more or equal to 12)",  v41,  v42,  v43,  v44,  v45,  v46,  v47,  a4);
        int v48 = (os_log_s *)sub_100086554(4u);
        if (!os_log_type_enabled(v48, OS_LOG_TYPE_ERROR)) {
          goto LABEL_45;
        }
        goto LABEL_44;
      }

      int v66 = *((unsigned __int8 *)a5 + 11);
      if ((v66 - 1) > 0xFDu || 4 * v66 + 12 == (_DWORD)a4)
      {
        uint64_t v76 = *(uint64_t (**)(uint64_t, uint64_t, void, char *, void))(*(void *)(*(void *)(qword_1008F29A0 + 16)
                                                                                             + 16LL)
                                                                                 + 152LL);
        if (!v76) {
          goto LABEL_54;
        }
        return (char *)v76( a1,  a2,  *(unsigned __int8 *)a5,  (char *)a5 + 1,  bswap32(*(unsigned __int16 *)((char *)a5 + 9)) >> 16);
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Invalid length for getFolderItems: %u (expecting %u)",  v85,  v86,  v87,  v88,  v89,  v90,  v91,  a4);
          int v92 = (os_log_s *)sub_100086554(4u);
          if (os_log_type_enabled(v92, OS_LOG_TYPE_ERROR)) {
LABEL_62:
          }
            sub_100657858();
        }

uint64_t sub_1000ECBBC()
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  uint64_t v0 = *(void *)(qword_1008F29A0 + 24);
  if (!v0) {
    return 121LL;
  }
  if (*(_BYTE *)(qword_1008F29A0 + 90) && !*(void *)(qword_1008F29A0 + 8)) {
    return 141LL;
  }
  sub_1001705B4(*(unsigned __int16 *)(v0 + 4));
  sub_1001E1520(**(_DWORD **)(qword_1008F29A0 + 24));
  uint64_t v1 = qword_1008F29A0;
  *(void *)(qword_1008F29A0 + 16) = 0LL;
  if (*(_BYTE *)(v1 + 89))
  {
    unint64_t v2 = 0LL;
    uint64_t v3 = 24LL;
    do
    {
      uint64_t v4 = *(void **)(*(void *)(*(void *)(v1 + 24) + 8LL) + v3);
      if (v4)
      {
        sub_1000B1838(v4);
        *(void *)(*(void *)(*(void *)(qword_1008F29A0 + 24) + 8LL) + v3) = 0LL;
        uint64_t v1 = qword_1008F29A0;
      }

      ++v2;
      v3 += 32LL;
    }

    while (v2 < *(unsigned __int8 *)(v1 + 89));
  }

  char v5 = *(void ***)(v1 + 24);
  if (v5[1])
  {
    sub_1000B1838(v5[1]);
    char v5 = *(void ***)(qword_1008F29A0 + 24);
    v5[1] = 0LL;
  }

  sub_1000B1838(v5);
  *(void *)(qword_1008F29A0 + 24) = 0LL;
  return sub_1000E7C60();
}

uint64_t sub_1000ECCCC(uint64_t a1, unsigned int a2, char a3, unsigned __int8 a4)
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  if (a1)
  {
    if ((a4 & 8) != 0)
    {
      v6[0] = a4;
      *(_WORD *)((char *)v6 + 1) = 9;
      BYTE3(v6[0]) = 124;
      v6[1] = v5;
      v6[2] = 2LL;
      v5[0] = a3;
      v5[1] = 0;
      return sub_1000E7E40(a1, a2, (unsigned __int8 *)v6);
    }
  }

  else
  {
    sub_1001EE2A0();
  }

  return 101LL;
}

uint64_t sub_1000ECD48(uint64_t a1, unsigned int a2, unsigned __int8 *a3)
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  if (a1)
  {
    if ((*a3 & 8) != 0) {
      return sub_1000E7E40(a1, a2, a3);
    }
  }

  else
  {
    sub_1001EE2A0();
  }

  return 101LL;
}

uint64_t sub_1000ECD8C(uint64_t a1, unsigned int a2, const void *a3, size_t size)
{
  if (!(_DWORD)xmmword_1008F6F18) {
    return 408LL;
  }
  if (a1 && a3)
  {
    signed int v6 = size;
    size_t v8 = size;
    uint64_t v9 = (char *)sub_1000B1814(size);
    if (v9)
    {
      uint64_t v10 = v9;
      memmove(v9, a3, v8);
      uint64_t v11 = sub_1000D7290(a1, 4366, a2, 2, v10, v6);
      if ((_DWORD)v11) {
        sub_1000B1838(v10);
      }
    }

    else
    {
      return 106LL;
    }
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

  return v11;
}

uint64_t sub_1000ECE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(qword_1008F29A0 + 16);
  if (*(void *)(v3 + 16)) {
    return sub_1000EB604(a1, a2, a3);
  }
  char v5 = *(void (**)(void))(v3 + 8);
  if (!v5) {
    return 3301LL;
  }
  v5();
  return 0LL;
}

uint64_t sub_1000ECE90()
{
  if (dword_1008DFDE8) {
    return 0LL;
  }
  if ((byte_1008DFDEC & 1) != 0) {
    return 5LL;
  }
  uint64_t v1 = IOServiceNameMatching("AppleBTMgmt");
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v1);
  if (!MatchingService)
  {
    byte_1008DFDEC = 1;
    return 5LL;
  }

  io_object_t v3 = MatchingService;
  if (IOServiceOpen(MatchingService, mach_task_self_, 0, (io_connect_t *)&dword_1008DFDE8))
  {
    if (qword_1008DFDF0 != -1) {
      dispatch_once(&qword_1008DFDF0, &stru_1008835F0);
    }
    if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
      sub_10065B0D8();
    }
    uint64_t v0 = 5LL;
  }

  else
  {
    if (qword_1008DFDF0 != -1) {
      dispatch_once(&qword_1008DFDF0, &stru_100883630);
    }
    uint64_t v4 = (os_log_s *)qword_1008DFDF8;
    uint64_t v0 = 0LL;
    if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 136315138;
      unsigned int v7 = "AppleBTMgmt";
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "applebt_mgmt_connect: Service %s connected!\n",  (uint8_t *)&v6,  0xCu);
      uint64_t v0 = 0LL;
    }
  }

  IOObjectRelease(v3);
  return v0;
}

void sub_1000ED03C(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000ED068(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_1000ED094(unsigned __int8 a1)
{
  unsigned __int8 inputStruct = a1;
  uint64_t v1 = sub_1000ECE90();
  if ((_DWORD)v1)
  {
    uint64_t v2 = v1;
    if (qword_1008DFDF0 != -1) {
      dispatch_once(&qword_1008DFDF0, &stru_100883670);
    }
    if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
      sub_10065B198();
    }
  }

  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_1008DFDE8, 2u, 0LL, 0, &inputStruct, 1uLL, 0LL, 0LL, 0LL, 0LL);
    if ((_DWORD)v3)
    {
      uint64_t v2 = v3;
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_1008836B0);
      }
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
        sub_10065B138();
      }
    }

    else
    {
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_1008836F0);
      }
      uint64_t v4 = (os_log_s *)qword_1008DFDF8;
      uint64_t v2 = 0LL;
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        int v8 = inputStruct;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "applebt_set_trace_mode: set to %d!\n",  buf,  8u);
        return 0LL;
      }
    }
  }

  return v2;
}

void sub_1000ED240(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000ED26C(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000ED298(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_1000ED2C4(unsigned __int8 a1)
{
  unsigned __int8 inputStruct = a1;
  uint64_t v1 = sub_1000ECE90();
  if ((_DWORD)v1)
  {
    uint64_t v2 = v1;
    if (qword_1008DFDF0 != -1) {
      dispatch_once(&qword_1008DFDF0, &stru_100883730);
    }
    if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
      sub_10065B258();
    }
  }

  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_1008DFDE8, 3u, 0LL, 0, &inputStruct, 1uLL, 0LL, 0LL, 0LL, 0LL);
    if ((_DWORD)v3)
    {
      uint64_t v2 = v3;
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_100883770);
      }
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
        sub_10065B1F8();
      }
    }

    else
    {
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_1008837B0);
      }
      uint64_t v4 = (os_log_s *)qword_1008DFDF8;
      uint64_t v2 = 0LL;
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        int v8 = inputStruct;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "applebt_set_trace_level: set to %d!\n",  buf,  8u);
        return 0LL;
      }
    }
  }

  return v2;
}

void sub_1000ED470(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000ED49C(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000ED4C8(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_1000ED4F4(uint64_t *a1)
{
  uint64_t v2 = sub_1000ECE90();
  if ((_DWORD)v2)
  {
    uint64_t v3 = v2;
    if (qword_1008DFDF0 != -1) {
      dispatch_once(&qword_1008DFDF0, &stru_1008837F0);
    }
    if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
      sub_10065B318();
    }
  }

  else
  {
    uint64_t v4 = IOConnectCallMethod(dword_1008DFDE8, 4u, 0LL, 0, a1, 0x20uLL, 0LL, 0LL, 0LL, 0LL);
    if ((_DWORD)v4)
    {
      uint64_t v3 = v4;
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_100883830);
      }
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
        sub_10065B2B8();
      }
    }

    else
    {
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_100883870);
      }
      char v5 = (os_log_s *)qword_1008DFDF8;
      uint64_t v3 = 0LL;
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = *a1;
        uint64_t v7 = a1[1];
        uint64_t v8 = a1[2];
        uint64_t v9 = a1[3];
        *(_DWORD *)buf = 134218752;
        uint64_t v12 = v6;
        __int16 v13 = 2048;
        uint64_t v14 = v7;
        __int16 v15 = 2048;
        uint64_t v16 = v8;
        __int16 v17 = 2048;
        uint64_t v18 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "applebt_set_trace_mask: set to <%016llX%016llX%016llX%016llX>!\n",  buf,  0x2Au);
        return 0LL;
      }
    }
  }

  return v3;
}

void sub_1000ED6C8(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000ED6F4(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000ED720(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_1000ED74C(int a1)
{
  int inputStruct = a1;
  uint64_t v1 = sub_1000ECE90();
  if ((_DWORD)v1)
  {
    uint64_t v2 = v1;
    if (qword_1008DFDF0 != -1) {
      dispatch_once(&qword_1008DFDF0, &stru_1008838B0);
    }
    if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
      sub_10065B3D8();
    }
  }

  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_1008DFDE8, 5u, 0LL, 0, &inputStruct, 4uLL, 0LL, 0LL, 0LL, 0LL);
    if ((_DWORD)v3)
    {
      uint64_t v2 = v3;
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_1008838F0);
      }
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
        sub_10065B378();
      }
    }

    else
    {
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_100883930);
      }
      uint64_t v4 = (os_log_s *)qword_1008DFDF8;
      uint64_t v2 = 0LL;
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        int v8 = inputStruct;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "applebt_set_capture_timeout: set to %d!\n",  buf,  8u);
        return 0LL;
      }
    }
  }

  return v2;
}

void sub_1000ED8F8(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000ED924(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000ED950(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_1000ED97C(int a1)
{
  int inputStruct = a1;
  uint64_t v1 = sub_1000ECE90();
  if ((_DWORD)v1)
  {
    uint64_t v2 = v1;
    if (qword_1008DFDF0 != -1) {
      dispatch_once(&qword_1008DFDF0, &stru_100883970);
    }
    if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
      sub_10065B498();
    }
  }

  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_1008DFDE8, 6u, 0LL, 0, &inputStruct, 4uLL, 0LL, 0LL, 0LL, 0LL);
    uint64_t v2 = v3;
    if ((_DWORD)v3 != -536870201 && (_DWORD)v3 != 0)
    {
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_1008839B0);
      }
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
        sub_10065B438();
      }
    }
  }

  return v2;
}

void sub_1000EDA94(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000EDAC0(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_1000EDAEC(uint32_t a1, const void *a2, unsigned int a3)
{
  uint64_t v6 = sub_1000ECE90();
  if ((_DWORD)v6)
  {
    uint64_t v7 = v6;
    if (qword_1008DFDF0 != -1) {
      dispatch_once(&qword_1008DFDF0, &stru_1008839F0);
    }
    if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
      sub_10065B558();
    }
  }

  else
  {
    uint64_t v8 = IOConnectCallMethod(dword_1008DFDE8, a1, 0LL, 0, a2, a3, 0LL, 0LL, 0LL, 0LL);
    if ((_DWORD)v8)
    {
      uint64_t v7 = v8;
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_100883A30);
      }
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
        sub_10065B4F8();
      }
    }

    else
    {
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_100883A70);
      }
      uint64_t v9 = (os_log_s *)qword_1008DFDF8;
      uint64_t v7 = 0LL;
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "applebt_general_debug: completed!\n",  buf,  2u);
        return 0LL;
      }
    }
  }

  return v7;
}

void sub_1000EDC6C(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000EDC98(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000EDCC4(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_1000EDCF0(void *a1, size_t *a2)
{
  uint64_t v4 = sub_1000ECE90();
  if ((_DWORD)v4)
  {
    uint64_t v5 = v4;
    if (qword_1008DFDF0 != -1) {
      dispatch_once(&qword_1008DFDF0, &stru_100883AB0);
    }
    if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
      sub_10065B618();
    }
  }

  else
  {
    uint64_t output = 0LL;
    uint32_t outputCnt = 1;
    uint64_t v6 = IOConnectCallMethod(dword_1008DFDE8, 7u, 0LL, 0, 0LL, 0LL, &output, &outputCnt, a1, a2);
    if ((_DWORD)v6)
    {
      uint64_t v5 = v6;
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_100883AF0);
      }
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_ERROR)) {
        sub_10065B5B8();
      }
    }

    else
    {
      *a2 = output;
      if (qword_1008DFDF0 != -1) {
        dispatch_once(&qword_1008DFDF0, &stru_100883B30);
      }
      uint64_t v7 = (os_log_s *)qword_1008DFDF8;
      uint64_t v5 = 0LL;
      if (os_log_type_enabled((os_log_t)qword_1008DFDF8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "applebt_read_crash_info: completed!\n",  buf,  2u);
        return 0LL;
      }
    }
  }

  return v5;
}

void sub_1000EDE88(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000EDEB4(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000EDEE0(id a1)
{
  qword_1008DFDF8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_1000EDF0C(uint64_t a1)
{
  if (a1)
  {
    __int128 v68 = 0u;
    __int128 v69 = 0u;
    __int128 v66 = 0u;
    __int128 v67 = 0u;
    __int128 v64 = 0u;
    __int128 v65 = 0u;
    __int128 v62 = 0u;
    __int128 v63 = 0u;
    __int128 v60 = 0u;
    __int128 v61 = 0u;
    __int128 v58 = 0u;
    __int128 v59 = 0u;
    __int128 v56 = 0u;
    __int128 v57 = 0u;
    *(_OWORD *)uint64_t v54 = 0u;
    __int128 v55 = 0u;
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    __int128 v48 = 0u;
    __int128 v49 = 0u;
    __int128 v46 = 0u;
    __int128 v47 = 0u;
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    *(_OWORD *)__int128 v38 = 0u;
    __int128 v39 = 0u;
    __strlcpy_chk(v54, a1, 256LL, 256LL);
    __strlcpy_chk(v38, a1, 256LL, 256LL);
    __strlcat_chk(v38, "-out", 256LL, 256LL);
    __strlcat_chk(v54, "-in", 256LL, 256LL);
    dword_1008E0E00 = open(v54, 131073);
    if (dword_1008E0E00 < 0)
    {
      if (sub_1000A86F0())
      {
        uint64_t v11 = __error();
        strerror(*v11);
        sub_1001EE134((uint64_t)"open(%s) failed (error = %s)", v12, v13, v14, v15, v16, v17, v18, (uint64_t)v54);
        uint64_t v19 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
          sub_10065B678();
        }
      }
    }

    else
    {
      dword_1008E0E04 = open(v38, 131076);
      if ((dword_1008E0E04 & 0x80000000) == 0)
      {
        dword_1008E0E08 = 0;
        dword_1008E0E0C = 0;
        sub_1000BC2FC(&stru_1008E0E10);
        if (sub_1000BC170((pthread_t *)&qword_1008E0E40, (void *(__cdecl *)(void *))sub_1000EE304, 0LL))
        {
          sub_1000BC20C((_opaque_pthread_t *)qword_1008E0E40, 63);
          sub_1000FC0B8();
          return 0LL;
        }

        else
        {
          sub_1000AFE20(104LL);
          return sub_1000EE1EC();
        }
      }

      if (sub_1000A86F0())
      {
        uint64_t v20 = __error();
        strerror(*v20);
        sub_1001EE134((uint64_t)"open(%s) failed (error = %s)", v21, v22, v23, v24, v25, v26, v27, (uint64_t)v38);
        uint64_t v28 = (os_log_s *)sub_100086554(0x3Au);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          sub_10065B678();
        }
      }

      close(dword_1008E0E00);
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"failed to open %s", v29, v30, v31, v32, v33, v34, v35, a1);
      uint64_t v36 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 1201LL;
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Need to know what VirtualCTRL to open, options cannot be NULL",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  v37);
      uint64_t v10 = (os_log_s *)sub_100086554(0x3Au);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 114LL;
  }

uint64_t sub_1000EE1EC()
{
  if (qword_1008E0E00)
  {
    dword_1008E0E08 = 1;
    close(SHIDWORD(qword_1008E0E00));
    close(qword_1008E0E00);
    while (!dword_1008E0E0C)
      sub_1000A86C4(&stru_1008E0E10);
    sub_1000BC320(&stru_1008E0E10);
    qword_1008E0E00 = 0LL;
  }

  return 0LL;
}

uint64_t sub_1000EE278(char *__buf, int a2)
{
  if (!a2) {
    return 625LL;
  }
  unsigned __int16 v2 = a2;
  while (1)
  {
    unsigned int v4 = write(qword_1008E0E00, __buf, v2);
    if ((v4 & 0x80000000) != 0) {
      break;
    }
    __buf += v4;
    v2 -= v4;
    if (!v2) {
      return 625LL;
    }
  }

  uint64_t v6 = __error();
  uint64_t v7 = strerror(*v6);
  sub_1001EE0E4("VirtualCTRL write failed: %s", v7);
  return 1205LL;
}

uint64_t sub_1000EE304()
{
  int v0 = dword_1008E0E04;
  if (__darwin_check_fd_set_overflow(dword_1008E0E04, &v8, 0)) {
    *(__int32_t *)((char *)v8.fds_bits + (((unint64_t)v0 >> 3) & 0x1FFFFFFFFFFFFFFCLL)) |= 1 << v0;
  }
  int v1 = 4096;
  while (1)
  {
    fd_set v7 = v8;
    int v2 = select(dword_1008E0E04 + 1, &v7, 0LL, 0LL, 0LL);
    if (!v2) {
      break;
    }
    if (v2 >= 1)
    {
      int v3 = v1 >= 4096 ? 4096 : v1;
      if ((int)read(dword_1008E0E04, &unk_1008E0E48, v3) >= 1)
      {
        sub_1000A85A0();
        int v1 = sub_1000FC0C8();
        sub_1000A8688();
        if (!dword_1008E0E08) {
          continue;
        }
      }
    }

    goto LABEL_13;
  }

  sub_1001EE2A0();
LABEL_13:
  if (dword_1008E0E08)
  {
    sub_1000A85A0();
    dword_1008E0E0C = 1;
    j__pthread_cond_signal(&stru_1008E0E10);
    sub_1000A8688();
  }

  else
  {
    unsigned int v4 = __error();
    uint64_t v5 = strerror(*v4);
    sub_1001EE0E4("VirtualCTRL read failed: %s\n", v5);
  }

  return 0LL;
}

  ;
}

uint64_t sub_1000EE4A4(__int16 *a1, unsigned int *a2)
{
  if (!a1)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  if (*a1 == -1)
  {
    sub_1001EE2A0();
    if (*a1 == -1) {
      return 101LL;
    }
  }

  if ((unsigned __int16)a1[4] - 1 >= 2)
  {
    sub_1001EE2A0();
  }

  __int128 v86 = 0u;
  __int128 v87 = 0u;
  unsigned int v85 = 0;
  unsigned int v4 = (uint64_t *)qword_1008E1E48;
  int v5 = *((void *)a1 + 3) != 0LL;
  if (*((void *)a1 + 4)) {
    ++v5;
  }
  if (*((void *)a1 + 5)) {
    int v6 = v5 + 1;
  }
  else {
    int v6 = v5;
  }
  uint64_t v7 = (v6 + 10);
  fd_set v8 = sub_1000B17F4(176LL * v7);
  if (!v8)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Device Identification Record: out of memory", v17, v18, v19, v20, v21, v22, v23, v82);
      uint64_t v24 = (os_log_s *)sub_100086554(0x3Du);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 106LL;
  }

  uint64_t v9 = v8;
  uint64_t v10 = (char *)sub_1000B17F4(24 * v7);
  if (!v10)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Device Identification Record: out of memory", v25, v26, v27, v28, v29, v30, v31, v82);
      uint64_t v32 = (os_log_s *)sub_100086554(0x3Du);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1000B1838(v9);
    return 106LL;
  }

  uint64_t v11 = v10;
  uint64_t v12 = sub_1000B17F4(8uLL);
  uint64_t v13 = v12;
  if (!v12)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Device Supported Extended Features: out of memory",  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v82);
      __int128 v40 = (os_log_s *)sub_100086554(0x3Du);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    goto LABEL_47;
  }

  *uint64_t v12 = *((void *)a1 + 2);
  *uint64_t v9 = 1;
  *((_WORD *)v9 + 1) = 2;
  *((_DWORD *)v9 + 2) = (unsigned __int16)*a1;
  v9[16] = 1;
  *((_WORD *)v9 + 9) = 2;
  *((_DWORD *)v9 + 6) = (unsigned __int16)a1[1];
  v9[32] = 1;
  *((_WORD *)v9 + 17) = 2;
  *((_DWORD *)v9 + 10) = (unsigned __int16)a1[2];
  v9[48] = 5;
  *((_WORD *)v9 + 25) = 1;
  v9[56] = *((_BYTE *)a1 + 6);
  v9[64] = 1;
  *((_WORD *)v9 + 33) = 2;
  *((_DWORD *)v9 + 18) = (unsigned __int16)a1[4];
  v9[128] = 1;
  *((_WORD *)v9 + 65) = 4;
  *((_DWORD *)v9 + 34) = *((_DWORD *)a1 + 3);
  v9[144] = 1;
  *((_WORD *)v9 + 73) = 2;
  *((_DWORD *)v9 + 38) = (unsigned __int16)a1[5];
  v9[160] = 1;
  *((_WORD *)v9 + 81) = 8;
  *((void *)v9 + 21) = v12;
  *((void *)v11 + 2) = &unk_1006BC268;
  *(_OWORD *)uint64_t v11 = xmmword_100883B50;
  *((void *)v11 + 5) = 258LL;
  *(_OWORD *)(v11 + 24) = *(_OWORD *)&qword_100883B68;
  *((_WORD *)v11 + 24) = 513;
  *(_OWORD *)(v11 + 56) = *(_OWORD *)v9;
  *((_WORD *)v11 + 36) = 514;
  *((_OWORD *)v11 + 5) = *((_OWORD *)v9 + 1);
  *((_WORD *)v11 + 48) = 515;
  *(_OWORD *)(v11 + 104) = *((_OWORD *)v9 + 2);
  *((_WORD *)v11 + 60) = 516;
  *((_OWORD *)v11 + 8) = *((_OWORD *)v9 + 3);
  *((_WORD *)v11 + 72) = 517;
  *(_OWORD *)(v11 + 152) = *((_OWORD *)v9 + 4);
  *((_WORD *)v11 + 84) = -24576;
  *((_OWORD *)v11 + 11) = *((_OWORD *)v9 + 8);
  *((_WORD *)v11 + 96) = -20481;
  *(_OWORD *)(v11 + 200) = *((_OWORD *)v9 + 9);
  *((_WORD *)v11 + 108) = -24575;
  *((_OWORD *)v11 + 14) = *((_OWORD *)v9 + 10);
  uint64_t v14 = (const char *)*((void *)a1 + 3);
  if (v14)
  {
    v9[80] = 8;
    *((_WORD *)v9 + 41) = strlen(v14);
    *((void *)v9 + 11) = v14;
    unsigned int v15 = 11;
    *((_WORD *)v11 + 120) = 11;
    *(_OWORD *)(v11 + 248) = *((_OWORD *)v9 + 5);
  }

  else
  {
    unsigned int v15 = 10;
  }

  __int128 v41 = (const char *)*((void *)a1 + 4);
  if (v41)
  {
    v9[96] = 4;
    *((_WORD *)v9 + 49) = strlen(v41);
    *((void *)v9 + 13) = v41;
    __int128 v42 = &v11[24 * v15];
    *(_WORD *)__int128 v42 = 257;
    *(_OWORD *)(v42 + 8) = *((_OWORD *)v9 + 6);
    ++v15;
  }

  __int128 v43 = (const char *)*((void *)a1 + 5);
  if (v43)
  {
    v9[112] = 8;
    *((_WORD *)v9 + 57) = strlen(v43);
    *((void *)v9 + 15) = v43;
    __int128 v44 = &v11[24 * v15];
    *(_WORD *)__int128 v44 = 10;
    *(_OWORD *)(v44 + 8) = *((_OWORD *)v9 + 7);
  }

  *(void *)&__int128 v86 = v11;
  WORD4(v86) = 10;
  *(void *)&__int128 v87 = v11 + 240;
  WORD4(v87) = v6;
  sub_1001E139C((uint64_t)&v86, (int *)&v85);
  __int128 v83 = 0u;
  __int128 v84 = 0u;
  uint64_t v45 = (v6 + 9);
  __int128 v46 = sub_1000B17F4(176LL * v45);
  if (!v46)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Device Identification Record: out of memory", v54, v55, v56, v57, v58, v59, v60, 512LL);
      __int128 v61 = (os_log_s *)sub_100086554(0x3Du);
      if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

uint64_t sub_1000EEBF0(int a1)
{
  uint64_t v2 = sub_1001E1520(a1);
  if (!(_DWORD)v2)
  {
    int v3 = (uint64_t *)qword_1008E1E48;
    if (qword_1008E1E48)
    {
      if (*(_DWORD *)(qword_1008E1E48 + 8) == a1)
      {
        sub_1000B1838(*(void **)(qword_1008E1E48 + 16));
        sub_1000B1838((void *)v3[3]);
        sub_1000B1838((void *)v3[4]);
        unsigned int v4 = (void **)(v3 + 5);
        int v5 = v3;
        int v3 = &qword_1008E1E48;
LABEL_9:
        sub_1000B1838(*v4);
        *int v3 = *v5;
        sub_1000B1838(v5);
      }

      else
      {
        int v5 = (uint64_t *)qword_1008E1E48;
        while (1)
        {
          int v5 = (uint64_t *)*v5;
          if (!v5) {
            break;
          }
          if (*((_DWORD *)v5 + 2) == a1)
          {
            sub_1000B1838((void *)v5[2]);
            unsigned int v4 = (void **)(v5 + 3);
            goto LABEL_9;
          }
        }
      }
    }
  }

  return v2;
}

uint64_t sub_1000EECA4(uint64_t a1, _DWORD *a2, unsigned int a3, int a4, uint64_t a5, char a6)
{
  if (!a5) {
    return 101LL;
  }
  __int16 v9 = a3;
  uint64_t result = sub_1000F5030(a1, a2, a3, (uint64_t)sub_1000EEDC8, 0x3FAu, 0);
  if (!(_DWORD)result)
  {
    sub_1000F4FF4(1);
    qword_1008E1E50 = (uint64_t)sub_1000B1814(0x5F8uLL);
    if (qword_1008E1E50)
    {
      if (*(_WORD *)(sub_1001EDBA0(0x10u) + 4)) {
        __int16 v11 = *(_WORD *)(sub_1001EDBA0(0x10u) + 4);
      }
      else {
        __int16 v11 = 100;
      }
      *(_WORD *)(qword_1008E1E50 + 1506) = v11;
      if (*(_BYTE *)(sub_1001EDBA0(0x10u) + 6)) {
        char v12 = *(_BYTE *)(sub_1001EDBA0(0x10u) + 6);
      }
      else {
        char v12 = 32;
      }
      uint64_t v13 = 0LL;
      uint64_t v14 = qword_1008E1E50;
      *(_BYTE *)(qword_1008E1E50 + 1504) = v12;
      *(void *)(v14 + 1480) = a5;
      *(_BYTE *)(v14 + 1511) = 0;
      *(_OWORD *)(v14 + 1488) = 0u;
      *(_BYTE *)(v14 + 1512) = a6;
      *(_WORD *)(v14 + 1508) = v9;
      *(_WORD *)(v14 + 1513) = 0;
      *(_BYTE *)(v14 + 1515) = 0;
      *(_DWORD *)(v14 + 1520) = a4;
      *(_DWORD *)(v14 + 1516) = 0;
      do
      {
        *(_WORD *)(v14 + v13) = -1;
        v13 += 184LL;
      }

      while (v13 != 1472);
      return 0LL;
    }

    else
    {
      sub_1000F55E4();
      return 106LL;
    }
  }

  return result;
}

void sub_1000EEDC8(uint64_t a1)
{
  uint64_t v2 = 0LL;
  unsigned int v4 = (unsigned __int16 *)(a1 + 4);
  int v3 = *(unsigned __int16 *)(a1 + 4);
  uint64_t v5 = qword_1008E1E50;
  int v6 = (unsigned __int16 *)qword_1008E1E50;
  do
  {
    int v7 = *v6;
    v6 += 92;
    if (v7 == v3) {
      break;
    }
    ++v2;
  }

  while (v2 != 8);
  switch(*(_DWORD *)a1)
  {
    case 1:
      if (*(_DWORD *)(a1 + 16)) {
        goto LABEL_15;
      }
      v31[0] = 0LL;
      if (v2 == 8)
      {
        int v8 = sub_1000F15E4(v3, *(void *)(a1 + 8));
        if (v8 == 8)
        {
          sub_1001EE2A0();
          return;
        }

        LOBYTE(v2) = v8;
        uint64_t v5 = qword_1008E1E50;
      }

      v31[1] = v4;
      LOWORD(v31[0]) = 2;
      uint64_t v20 = sub_1001EE6E8((uint64_t)sub_1000F1FA0, v31, 600, (int *)(v5 + 184LL * v2 + 8));
      if ((_DWORD)v20)
      {
        uint64_t v21 = v20;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Register SLC timeout handler failed %!\n", v22, v23, v24, v25, v26, v27, v28, v21);
          uint64_t v29 = (os_log_s *)sub_100086554(0x10u);
          if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }
      }

      break;
    case 2:
      if (*(_DWORD *)(qword_1008E1E50 + 184LL * v2 + 4) == 1814
        || *(_DWORD *)(qword_1008E1E50 + 184LL * v2 + 8))
      {
        *(_DWORD *)a1 = 1;
        *(void *)(a1 + 8) = v5 + 184LL * v2 + 80;
        *(_DWORD *)(a1 + 16) = 1814;
      }

      (*(void (**)(uint64_t))(v5 + 1480))(a1);
      sub_1000F17E4(*(unsigned __int16 *)(a1 + 4));
      break;
    case 3:
      if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0x200) == 0
        || (*(_WORD *)(qword_1008E1E50 + 184LL * v2 + 86) & 0x80) == 0)
      {
        goto LABEL_15;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"1.6 devices should not send SCO connection but +BCC.",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  v30);
        uint64_t v19 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      sub_1000F5DB0(*v4, 0);
      break;
    case 5:
      (*(void (**)(uint64_t))(qword_1008E1E50 + 1480))(a1);
      __int16 v9 = *(void (**)(void, void))(qword_1008E1E50 + 1496);
      if (v9)
      {
        *(void *)(qword_1008E1E50 + 1496) = 0LL;
        v9(*(unsigned __int16 *)(a1 + 4), *(unsigned int *)(a1 + 8));
      }

      break;
    case 7:
      uint64_t v10 = sub_1000D548C( qword_1008E1E50 + 184LL * v2 + 96,  *(void *)(a1 + 8),  *(unsigned __int16 *)(a1 + 16));
      if ((_DWORD)v10)
      {
        uint64_t v11 = sub_1000EF578(*v4, v10);
        if ((_DWORD)v11) {
          sub_1000F1FF0(*v4, 2u, v11);
        }
      }

      break;
    default:
LABEL_15:
      (*(void (**)(uint64_t))(qword_1008E1E50 + 1480))(a1);
      break;
  }

uint64_t sub_1000EF080()
{
  if (sub_1000F4FC4() && *(void *)(qword_1008E1E50 + 1488)) {
    *(void *)(qword_1008E1E50 + 1488) = 0LL;
  }
  uint64_t v0 = sub_1000F55E4();
  if (!(_DWORD)v0 && qword_1008E1E50)
  {
    sub_1000B1838((void *)qword_1008E1E50);
    qword_1008E1E50 = 0LL;
  }

  return v0;
}

uint64_t sub_1000EF0D4(__int16 a1)
{
  if (!qword_1008E1E50) {
    return 408LL;
  }
  uint64_t result = 0LL;
  *(_WORD *)(qword_1008E1E50 + 1508) = a1;
  return result;
}

uint64_t sub_1000EF0F8(char a1)
{
  if (!qword_1008E1E50) {
    return 408LL;
  }
  uint64_t result = 0LL;
  *(_BYTE *)(qword_1008E1E50 + 1510) = a1 | 6;
  return result;
}

uint64_t sub_1000EF120(uint64_t a1, char a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  uint64_t v4 = qword_1008E1E50;
  if (*(void *)(qword_1008E1E50 + 1488)) {
    return 119LL;
  }
  uint64_t result = 0LL;
  *(void *)(qword_1008E1E50 + 1488) = a1;
  *(_BYTE *)(v4 + 1511) = a2;
  return result;
}

uint64_t sub_1000EF174(unsigned int a1, const void *a2, size_t a3)
{
  BOOL v6 = sub_1000F4FC4();
  uint64_t result = 408LL;
  if (v6 && qword_1008E1E50)
  {
    int v8 = (char *)sub_1000B17F4(a3 + 1LL);
    if (v8)
    {
      __int16 v9 = v8;
      memmove(v8, a2, a3);
      v9[a3] = 0;
      return sub_1000EF214(a1, 25, v9, a3, 1);
    }

    else
    {
      return 106LL;
    }
  }

  return result;
}

uint64_t sub_1000EF214(unsigned int a1, int a2, char *a3, size_t a4, int a5)
{
  __int16 v6 = a4;
  unsigned __int8 v10 = 0;
  uint64_t v11 = -1472LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v11 + 1472) != a1)
  {
    ++v10;
    v11 += 184LL;
    if (!v11) {
      return 1802LL;
    }
  }

  if (v10 == 8) {
    return 1802LL;
  }
  if (*(_DWORD *)(qword_1008E1E50 + v11 + 1488))
  {
    if (*(unsigned __int8 *)(qword_1008E1E50 + v11 + 1528) >= *(unsigned __int8 *)(qword_1008E1E50 + 1504))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"SendResponse failed: pending responses queue is full (%d)!\n",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  *(unsigned __int8 *)(qword_1008E1E50 + v11 + 1528));
        uint64_t v24 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      uint64_t v12 = 104LL;
    }

    else
    {
      uint64_t v14 = sub_1000B17F4(0x28uLL);
      if (v14)
      {
        *(_DWORD *)uint64_t v14 = a2;
        v14[1] = a3;
        *((_WORD *)v14 + 8) = v6;
        *((_BYTE *)v14 + 18) = a5;
        sub_1001EF1D0(v14 + 3, qword_1008E1E50 + v11 + 1536);
        uint64_t v12 = 0LL;
        ++*(_BYTE *)(qword_1008E1E50 + v11 + 1528);
        return v12;
      }

      uint64_t v12 = 106LL;
    }
  }

  else
  {
    if (a5) {
      uint64_t v15 = sub_1000F21D8;
    }
    else {
      uint64_t v15 = sub_1000F21E4;
    }
    uint64_t v12 = sub_1000F61D8(a1, (uint64_t)v15, a3, a4);
    uint64_t v16 = qword_1008E1E50 + v11;
    if (!(_DWORD)v12)
    {
      *(_DWORD *)(v16 + 1488) = a2;
      *(void *)(v16 + 1496) = a3;
      *(_WORD *)(v16 + 1504) = v6;
      *(_BYTE *)(v16 + 1506) = a5;
      return v12;
    }

    *(_DWORD *)(v16 + 1488) = 0;
  }

  if (!sub_1000A86F0()
    || (sub_1001EE134((uint64_t)"SendResponse failed %!, type %d", v25, v26, v27, v28, v29, v30, v31, v12),
        uint64_t v32 = (os_log_s *)sub_100086554(0x10u),
        !os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)))
  {
    if (!a5) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }

  sub_100657F74();
  if (a5) {
LABEL_26:
  }
    sub_1000B1838(a3);
LABEL_27:
  if ((_DWORD)v12 == 104)
  {
    if (sub_1000F5D14(a1, 104))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HandsfreeAG_Disconnect failed", v33, v34, v35, v36, v37, v38, v39, v41);
        __int128 v40 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }
    }

    sub_1000F21F0(v10);
    return 104LL;
  }

  return v12;
}

uint64_t sub_1000EF480(int a1)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  uint64_t v2 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v2) != a1)
  {
    v2 += 184LL;
    if (v2 == 1472) {
      return 0LL;
    }
  }

  uint64_t result = 0LL;
  if (dword_1008F6F48) {
    return *(unsigned __int16 *)(qword_1008E1E50 + v2 + 86);
  }
  return result;
}

uint64_t sub_1000EF4FC(int a1)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  uint64_t v2 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v2) != a1)
  {
    v2 += 184LL;
    if (v2 == 1472) {
      return 0LL;
    }
  }

  uint64_t result = 0LL;
  if (dword_1008F6F48) {
    return *(void *)(qword_1008E1E50 + v2 + 88);
  }
  return result;
}

uint64_t sub_1000EF578(unsigned int a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a2 - 2707) <= 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Extended error specified without extended error code %d\n",  v4,  v5,  v6,  v7,  v8,  v9,  v10,  v2);
      uint64_t v11 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    LODWORD(v2) = 2701;
  }

  return sub_1000EF604(a1, v2, 0LL);
}

uint64_t sub_1000EF604(unsigned int a1, int a2, uint64_t a3)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  if ((a2 - 2707) > 1)
  {
    else {
      uint64_t v7 = (a2 - 2700);
    }
    if (!a2) {
      uint64_t v7 = 0LL;
    }
  }

  else
  {
    uint64_t v6 = 0LL;
    v22[0] = 0LL;
    v22[1] = 0LL;
    uint64_t v7 = 1LL;
    while (*(unsigned __int16 *)(qword_1008E1E50 + v6) != a1)
    {
      v6 += 184LL;
      if (v6 == 1472) {
        goto LABEL_14;
      }
    }

    if (*(_BYTE *)(qword_1008E1E50 + v6 + 136))
    {
      uint64_t v8 = sub_1001F48C8((uint64_t)v22, 0x1BuLL);
      if (!(_DWORD)v8)
      {
        if (a2 == 2707) {
          uint64_t v18 = "\r\n+CME ERROR: %d\r\n";
        }
        else {
          uint64_t v18 = "\r\n+CMS ERROR: %d\r\n";
        }
        uint64_t v19 = sub_1001F5F28((uint64_t)v22, (uint64_t)v18, v12, v13, v14, v15, v16, v17, a3);
        if ((_DWORD)v19)
        {
          uint64_t v8 = v19;
          sub_1001F4914((uint64_t)v22);
        }

        else
        {
          uint64_t v20 = (char *)sub_1001F5F50((uint64_t)v22);
          unsigned __int16 v21 = strlen(v20);
          return sub_1000EF214(a1, 2, v20, v21, 1);
        }
      }

      return v8;
    }

    uint64_t v7 = 1LL;
  }

uint64_t sub_1000EF764(unsigned int a1, uint64_t a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  if ((sub_1000EF480(a1) & 0x10) == 0) {
    return 1808LL;
  }
  v15[0] = 0LL;
  v15[1] = 0LL;
  uint64_t v4 = sub_1001F48C8((uint64_t)v15, 0xCuLL);
  if (!(_DWORD)v4)
  {
    uint64_t v12 = sub_1001F5F28((uint64_t)v15, (uint64_t)"\r\n+VGM=%d\r\n", v6, v7, v8, v9, v10, v11, a2);
    if ((_DWORD)v12)
    {
      uint64_t v4 = v12;
      sub_1001F4914((uint64_t)v15);
    }

    else
    {
      uint64_t v13 = (char *)sub_1001F5F50((uint64_t)v15);
      unsigned __int16 v14 = strlen(v13);
      return sub_1000EF214(a1, 7, v13, v14, 1);
    }
  }

  return v4;
}

uint64_t sub_1000EF838(unsigned int a1, uint64_t a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  if ((sub_1000EF480(a1) & 0x10) == 0) {
    return 1808LL;
  }
  v15[0] = 0LL;
  v15[1] = 0LL;
  uint64_t v4 = sub_1001F48C8((uint64_t)v15, 0xCuLL);
  if (!(_DWORD)v4)
  {
    uint64_t v12 = sub_1001F5F28((uint64_t)v15, (uint64_t)"\r\n+VGS=%d\r\n", v6, v7, v8, v9, v10, v11, a2);
    if ((_DWORD)v12)
    {
      uint64_t v4 = v12;
      sub_1001F4914((uint64_t)v15);
    }

    else
    {
      uint64_t v13 = (char *)sub_1001F5F50((uint64_t)v15);
      unsigned __int16 v14 = strlen(v13);
      return sub_1000EF214(a1, 8, v13, v14, 1);
    }
  }

  return v4;
}

uint64_t sub_1000EF90C(unsigned int a1, int a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  uint64_t v4 = 0LL;
  uint64_t v5 = qword_1008E1E50;
  *(_BYTE *)(qword_1008E1E50 + 1513) = a2;
  while (*(unsigned __int16 *)(v5 + v4) != a1)
  {
    v4 += 184LL;
    if (v4 == 1472) {
      return 1802LL;
    }
  }

  uint64_t v7 = 0LL;
  while (*(unsigned __int16 *)(v5 + v7) != a1)
  {
    v7 += 184LL;
    if (v7 == 1472) {
      goto LABEL_13;
    }
  }

  if (*(_BYTE *)(v5 + v7 + 140) == 2) {
    return 117LL;
  }
LABEL_13:
  uint64_t v8 = 0LL;
  while (*(unsigned __int16 *)(v5 + v8) != a1)
  {
    v8 += 184LL;
    if (v8 == 1472) {
      return 0LL;
    }
  }

  if (*(_BYTE *)(v5 + v8 + 140) != 1 || !*(_BYTE *)(v5 + v4 + 176)) {
    return 0LL;
  }
  if (a2) {
    uint64_t v9 = "\r\n+CIEV: 1,1\r\n";
  }
  else {
    uint64_t v9 = "\r\n+CIEV: 1,0\r\n";
  }
  LODWORD(result) = sub_1000EF214(a1, 9, v9, 0xEuLL, 0);
  if ((_DWORD)result == 408) {
    return 0LL;
  }
  else {
    return result;
  }
}

uint64_t sub_1000EFA28(unsigned int a1, int a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  uint64_t v4 = 0LL;
  uint64_t v5 = qword_1008E1E50;
  *(_BYTE *)(qword_1008E1E50 + 1514) = a2;
  while (*(unsigned __int16 *)(v5 + v4) != a1)
  {
    v4 += 184LL;
    if (v4 == 1472) {
      return 1802LL;
    }
  }

  uint64_t v7 = 0LL;
  while (*(unsigned __int16 *)(v5 + v7) != a1)
  {
    v7 += 184LL;
    if (v7 == 1472) {
      goto LABEL_13;
    }
  }

  if (*(_BYTE *)(v5 + v7 + 140) == 2) {
    return 117LL;
  }
LABEL_13:
  uint64_t v8 = 0LL;
  while (*(unsigned __int16 *)(v5 + v8) != a1)
  {
    v8 += 184LL;
    if (v8 == 1472) {
      return 0LL;
    }
  }

  if (*(_BYTE *)(v5 + v8 + 140) != 1) {
    return 0LL;
  }
  uint64_t v9 = v5 + v4;
  *(_BYTE *)(v9 + 160) = a2;
  if (a2) {
    uint64_t v10 = "\r\n+CIEV: 2,1\r\n";
  }
  else {
    uint64_t v10 = "\r\n+CIEV: 2,0\r\n";
  }
  LODWORD(result) = sub_1000EF214(a1, 10, v10, 0xEuLL, 0);
  if ((_DWORD)result == 408) {
    return 0LL;
  }
  else {
    return result;
  }
}

uint64_t sub_1000EFB4C(unsigned int a1, unsigned int a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  if (a2 > 4) {
    return 101LL;
  }
  uint64_t v5 = 0LL;
  v21[0] = 0LL;
  v21[1] = 0LL;
  uint64_t v6 = qword_1008E1E50;
  *(_BYTE *)(qword_1008E1E50 + 1515) = a2;
  while (*(unsigned __int16 *)(v6 + v5) != a1)
  {
    v5 += 184LL;
    if (v5 == 1472) {
      return 1802LL;
    }
  }

  uint64_t v8 = 0LL;
  while (*(unsigned __int16 *)(v6 + v8) != a1)
  {
    v8 += 184LL;
    if (v8 == 1472) {
      goto LABEL_16;
    }
  }

  if (*(_BYTE *)(v6 + v8 + 140) == 2) {
    return 117LL;
  }
LABEL_16:
  uint64_t v9 = 0LL;
  while (*(unsigned __int16 *)(v6 + v9) != a1)
  {
    uint64_t v4 = 0LL;
    v9 += 184LL;
    if (v9 == 1472) {
      return v4;
    }
  }

  if (*(_BYTE *)(v6 + v9 + 140) != 1) {
    return 0LL;
  }
  uint64_t v10 = v6 + v5;
  *(_BYTE *)(v10 + 161) = a2;
  uint64_t v4 = sub_1001F48C8((uint64_t)v21, 0xFuLL);
  if (!(_DWORD)v4)
  {
    uint64_t v17 = sub_1001F5F28((uint64_t)v21, (uint64_t)"\r\n+CIEV: 3,%c\r\n", v11, v12, v13, v14, v15, v16, a2 + 48);
    if ((_DWORD)v17)
    {
      uint64_t v4 = v17;
      sub_1001F4914((uint64_t)v21);
    }

    else
    {
      uint64_t v18 = (char *)sub_1001F5F50((uint64_t)v21);
      unsigned __int16 v19 = strlen(v18);
      unsigned int v20 = sub_1000EF214(a1, 11, v18, v19, 1);
      if (v20 == 408) {
        return 0LL;
      }
      else {
        return v20;
      }
    }
  }

  return v4;
}

uint64_t sub_1000EFCD8(unsigned int a1, unsigned int a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  uint64_t v4 = qword_1008E1E50;
  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 1) == 0) {
    return 1808LL;
  }
  if (a2 > 2) {
    return 101LL;
  }
  uint64_t v6 = 0LL;
  v20[0] = 0LL;
  v20[1] = 0LL;
  *(_BYTE *)(qword_1008E1E50 + 1516) = a2;
  while (*(unsigned __int16 *)(v4 + v6) != a1)
  {
    v6 += 184LL;
    if (v6 == 1472) {
      return 1802LL;
    }
  }

  uint64_t v8 = 0LL;
  while (*(unsigned __int16 *)(v4 + v8) != a1)
  {
    v8 += 184LL;
    if (v8 == 1472) {
      goto LABEL_18;
    }
  }

  if (*(_BYTE *)(v4 + v8 + 140) == 2) {
    return 117LL;
  }
LABEL_18:
  if ((sub_1000EF480(a1) & 2) == 0) {
    return 1808LL;
  }
  uint64_t v9 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v9) != a1)
  {
    uint64_t v5 = 0LL;
    v9 += 184LL;
    if (v9 == 1472) {
      return v5;
    }
  }

  *(_BYTE *)(qword_1008E1E50 + v6 + 162) = a2;
  uint64_t v5 = sub_1001F48C8((uint64_t)v20, 0xFuLL);
  if (!(_DWORD)v5)
  {
    uint64_t v16 = sub_1001F5F28((uint64_t)v20, (uint64_t)"\r\n+CIEV: 7,%c\r\n", v10, v11, v12, v13, v14, v15, a2 + 48);
    if ((_DWORD)v16)
    {
      uint64_t v5 = v16;
      sub_1001F4914((uint64_t)v20);
    }

    else
    {
      uint64_t v17 = (char *)sub_1001F5F50((uint64_t)v20);
      unsigned __int16 v18 = strlen(v17);
      unsigned int v19 = sub_1000EF214(a1, 15, v17, v18, 1);
      if (v19 == 408) {
        return 0LL;
      }
      else {
        return v19;
      }
    }
  }

  return v5;
}

uint64_t sub_1000EFE84(unsigned int a1, uint64_t a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  uint64_t v5 = 0LL;
  v19[0] = 0LL;
  v19[1] = 0LL;
  uint64_t v6 = qword_1008E1E50;
  *(_BYTE *)(qword_1008E1E50 + 1517) = a2;
  while (*(unsigned __int16 *)(v6 + v5) != a1)
  {
    v5 += 184LL;
    if (v5 == 1472) {
      return 1802LL;
    }
  }

  uint64_t v7 = 0LL;
  while (*(unsigned __int16 *)(v6 + v7) != a1)
  {
    v7 += 184LL;
    if (v7 == 1472) {
      return 0LL;
    }
  }

  if (*(_BYTE *)(v6 + v7 + 140) != 1 || !*(_BYTE *)(v6 + v5 + 179)) {
    return 0LL;
  }
  uint64_t v4 = sub_1001F48C8((uint64_t)v19, 0xFuLL);
  if (!(_DWORD)v4)
  {
    uint64_t v14 = sub_1001F5F28((uint64_t)v19, (uint64_t)"\r\n+CIEV: 4,%d\r\n", v8, v9, v10, v11, v12, v13, a2);
    if ((_DWORD)v14)
    {
      uint64_t v4 = v14;
      sub_1001F4914((uint64_t)v19);
    }

    else
    {
      uint64_t v16 = (char *)sub_1001F5F50((uint64_t)v19);
      unsigned __int16 v17 = strlen(v16);
      unsigned int v18 = sub_1000EF214(a1, 12, v16, v17, 1);
      if (v18 == 408) {
        return 0LL;
      }
      else {
        return v18;
      }
    }
  }

  return v4;
}

uint64_t sub_1000EFFC8(unsigned int a1, uint64_t a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  uint64_t v5 = 0LL;
  v20[0] = 0LL;
  v20[1] = 0LL;
  uint64_t v6 = qword_1008E1E50;
  *(_BYTE *)(qword_1008E1E50 + 1518) = a2;
  while (*(unsigned __int16 *)(v6 + v5) != a1)
  {
    v5 += 184LL;
    if (v5 == 1472) {
      return 1802LL;
    }
  }

  uint64_t v8 = 0LL;
  while (*(unsigned __int16 *)(v6 + v8) != a1)
  {
    v8 += 184LL;
    if (v8 == 1472) {
      goto LABEL_16;
    }
  }

  if (*(_BYTE *)(v6 + v8 + 140) == 2) {
    return 117LL;
  }
LABEL_16:
  uint64_t v9 = 0LL;
  while (*(unsigned __int16 *)(v6 + v9) != a1)
  {
    uint64_t v4 = 0LL;
    v9 += 184LL;
    if (v9 == 1472) {
      return v4;
    }
  }

  if (*(_BYTE *)(v6 + v9 + 140) != 1 || !*(_BYTE *)(v6 + v5 + 177)) {
    return 0LL;
  }
  uint64_t v4 = sub_1001F48C8((uint64_t)v20, 0xFuLL);
  if (!(_DWORD)v4)
  {
    uint64_t v16 = sub_1001F5F28((uint64_t)v20, (uint64_t)"\r\n+CIEV: 5,%d\r\n", v10, v11, v12, v13, v14, v15, a2);
    if ((_DWORD)v16)
    {
      uint64_t v4 = v16;
      sub_1001F4914((uint64_t)v20);
    }

    else
    {
      unsigned __int16 v17 = (char *)sub_1001F5F50((uint64_t)v20);
      unsigned __int16 v18 = strlen(v17);
      unsigned int v19 = sub_1000EF214(a1, 13, v17, v18, 1);
      if (v19 == 408) {
        return 0LL;
      }
      else {
        return v19;
      }
    }
  }

  return v4;
}

uint64_t sub_1000F0148(unsigned int a1, int a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  uint64_t v4 = 0LL;
  uint64_t v5 = qword_1008E1E50;
  *(_BYTE *)(qword_1008E1E50 + 1519) = a2;
  while (*(unsigned __int16 *)(v5 + v4) != a1)
  {
    v4 += 184LL;
    if (v4 == 1472) {
      return 1802LL;
    }
  }

  uint64_t v7 = 0LL;
  while (*(unsigned __int16 *)(v5 + v7) != a1)
  {
    v7 += 184LL;
    if (v7 == 1472) {
      goto LABEL_13;
    }
  }

  if (*(_BYTE *)(v5 + v7 + 140) == 2) {
    return 117LL;
  }
LABEL_13:
  uint64_t v8 = 0LL;
  while (*(unsigned __int16 *)(v5 + v8) != a1)
  {
    v8 += 184LL;
    if (v8 == 1472) {
      return 0LL;
    }
  }

  if (*(_BYTE *)(v5 + v8 + 140) != 1 || !*(_BYTE *)(v5 + v4 + 178)) {
    return 0LL;
  }
  if (a2) {
    uint64_t v9 = "\r\n+CIEV: 6,1\r\n";
  }
  else {
    uint64_t v9 = "\r\n+CIEV: 6,0\r\n";
  }
  LODWORD(result) = sub_1000EF214(a1, 14, v9, 0xEuLL, 0);
  if ((_DWORD)result == 408) {
    return 0LL;
  }
  else {
    return result;
  }
}

uint64_t sub_1000F0264(unsigned int a1)
{
  uint64_t v2 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v2) != a1)
  {
    v2 += 184LL;
    if (v2 == 1472) {
      return 1802LL;
    }
  }

  unsigned __int16 v4 = strlen(*(const char **)(qword_1008E1E50 + v2 + 152));
  uint64_t result = sub_1000EF214(a1, 16, *(char **)(qword_1008E1E50 + v2 + 152), v4, 1);
  *(void *)(qword_1008E1E50 + v2 + 152) = 0LL;
  return result;
}

uint64_t sub_1000F02F4(unsigned int a1, const char *a2, uint64_t a3, const char *a4, int a5)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  if (a2)
  {
    int v9 = strlen(a2);
    if (v9 <= 32) {
      int v10 = v9;
    }
    else {
      int v10 = 0;
    }
    if (a4) {
      goto LABEL_7;
    }
LABEL_12:
    int v12 = 0;
    goto LABEL_13;
  }

  int v10 = 0;
  if (!a4) {
    goto LABEL_12;
  }
LABEL_7:
  int v11 = strlen(a4);
  if (v11 <= 128) {
    int v12 = v11;
  }
  else {
    int v12 = 0;
  }
LABEL_13:
  v38[0] = 0LL;
  v38[1] = 0LL;
  uint64_t v13 = sub_1001F48C8((uint64_t)v38, (unsigned __int16)(v10 + v12 + 29));
  if (!(_DWORD)v13)
  {
    if (v10 < 1 || (sub_1000EF480(a1) & 4) == 0) {
      goto LABEL_23;
    }
    uint64_t v20 = 0LL;
    while (*(unsigned __int16 *)(qword_1008E1E50 + v20) != a1)
    {
      v20 += 184LL;
      if (v20 == 1472) {
        goto LABEL_23;
      }
    }

    if (*(_BYTE *)(qword_1008E1E50 + v20 + 132))
    {
      if (v12 < 1) {
        uint64_t v21 = sub_1001F5F28( (uint64_t)v38,  (uint64_t)"\r\nRING\r\n\r\n+CLIP: %s,%d\r\n",  v14,  v15,  v16,  v17,  v18,  v19,  (uint64_t)a2);
      }
      else {
        uint64_t v21 = sub_1001F5F28( (uint64_t)v38,  (uint64_t)"\r\nRING\r\n\r\n+CLIP: %s,%d,,,%s\r\n",  v14,  v15,  v16,  v17,  v18,  v19,  (uint64_t)a2);
      }
    }

    else
    {
LABEL_23:
      uint64_t v21 = sub_1001F5F28((uint64_t)v38, (uint64_t)"\r\nRING\r\n", v14, v15, v16, v17, v18, v19, v36);
    }

    uint64_t v13 = v21;
    if ((_DWORD)v21)
    {
      sub_1001F4914((uint64_t)v38);
    }

    else
    {
      uint64_t v22 = 152LL;
      while (*(unsigned __int16 *)(qword_1008E1E50 + v22 - 152) != a1)
      {
        v22 += 184LL;
        if (v22 == 1624) {
          return 1802LL;
        }
      }

      uint64_t v23 = *(void **)(qword_1008E1E50 + v22);
      if (v23)
      {
        sub_1000B1838(v23);
        *(void *)(qword_1008E1E50 + v22) = 0LL;
      }

      uint64_t v24 = sub_1001F5F50((uint64_t)v38);
      uint64_t v25 = qword_1008E1E50;
      *(void *)(qword_1008E1E50 + v22) = v24;
      if ((*(_BYTE *)(v25 + 1508) & 8) == 0 || *(unsigned __int8 *)(v25 + 1472) > 1u || sub_1000F6188(a1) || a5)
      {
        return sub_1000F0264(a1);
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Not sending ring with name as SCO is not connected",  v26,  v27,  v28,  v29,  v30,  v31,  v32,  v37);
          uint64_t v33 = (os_log_s *)sub_100086554(0x10u);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }

        uint64_t v34 = *(void **)(qword_1008E1E50 + v22);
        if (v34)
        {
          sub_1000B1838(v34);
          uint64_t v13 = 0LL;
          *(void *)(qword_1008E1E50 + v22) = 0LL;
        }

        else
        {
          return 0LL;
        }
      }
    }
  }

  return v13;
}

uint64_t sub_1000F0548(unsigned int a1, int a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 4) == 0) {
    return 1808LL;
  }
  v16[0] = 0LL;
  v16[1] = 0LL;
  uint64_t v4 = sub_1001F48C8((uint64_t)v16, 0xDuLL);
  if (!(_DWORD)v4)
  {
    uint64_t v11 = 48LL;
    if (a2) {
      uint64_t v11 = 49LL;
    }
    uint64_t v12 = sub_1001F5F28((uint64_t)v16, (uint64_t)"\r\n+BVRA: %c\r\n", v5, v6, v7, v8, v9, v10, v11);
    if ((_DWORD)v12)
    {
      uint64_t v4 = v12;
      sub_1001F4914((uint64_t)v16);
    }

    else
    {
      uint64_t v13 = (char *)sub_1001F5F50((uint64_t)v16);
      unsigned __int16 v14 = strlen(v13);
      return sub_1000EF214(a1, 19, v13, v14, 1);
    }
  }

  return v4;
}

uint64_t sub_1000F061C(unsigned int a1, const char *a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0x10) == 0) {
    return 1808LL;
  }
  if (a2)
  {
    int v6 = strlen(a2);
    if (v6 > 32) {
      return 101LL;
    }
  }

  else
  {
    LOWORD(v6) = 0;
  }

  v16[0] = 0LL;
  v16[1] = 0LL;
  uint64_t v4 = sub_1001F48C8((uint64_t)v16, (unsigned __int16)(v6 + 14));
  if (!(_DWORD)v4)
  {
    uint64_t v13 = sub_1001F5F28((uint64_t)v16, (uint64_t)"\r\n+BINP: %s\r\n", v7, v8, v9, v10, v11, v12, (uint64_t)a2);
    if ((_DWORD)v13)
    {
      uint64_t v4 = v13;
      sub_1001F4914((uint64_t)v16);
    }

    else
    {
      unsigned __int16 v14 = (char *)sub_1001F5F50((uint64_t)v16);
      unsigned __int16 v15 = strlen(v14);
      return sub_1000EF214(a1, 17, v14, v15, 1);
    }
  }

  return v4;
}

uint64_t sub_1000F0708(unsigned int a1, const char *a2, uint64_t a3, const char *a4)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 1) == 0 || (sub_1000EF480(a1) & 2) == 0) {
    return 1808LL;
  }
  if (a2)
  {
    int v9 = strlen(a2);
    if (v9 > 32) {
      return 101LL;
    }
    if (a4) {
      goto LABEL_10;
    }
LABEL_13:
    int v10 = 0;
    goto LABEL_14;
  }

  int v9 = 0;
  if (!a4) {
    goto LABEL_13;
  }
LABEL_10:
  int v10 = strlen(a4);
  if (v10 > 128) {
    return 101LL;
  }
LABEL_14:
  v21[0] = 0LL;
  v21[1] = 0LL;
  uint64_t v7 = sub_1001F48C8((uint64_t)v21, (unsigned __int16)(v9 + v10 + 23));
  if (!(_DWORD)v7)
  {
    uint64_t v17 = "";
    if (v9 > 0) {
      uint64_t v17 = a2;
    }
    if (v10 < 1) {
      uint64_t v18 = sub_1001F5F28( (uint64_t)v21,  (uint64_t)"\r\n+CCWA: %s,%d,1\r\n",  v11,  v12,  v13,  v14,  v15,  v16,  (uint64_t)v17);
    }
    else {
      uint64_t v18 = sub_1001F5F28( (uint64_t)v21,  (uint64_t)"\r\n+CCWA: %s,%d,1,%s\r\n",  v11,  v12,  v13,  v14,  v15,  v16,  (uint64_t)v17);
    }
    uint64_t v7 = v18;
    if ((_DWORD)v18)
    {
      sub_1001F4914((uint64_t)v21);
    }

    else
    {
      uint64_t v19 = (char *)sub_1001F5F50((uint64_t)v21);
      unsigned __int16 v20 = strlen(v19);
      return sub_1000EF214(a1, 18, v19, v20, 1);
    }
  }

  return v7;
}

uint64_t sub_1000F0874(unsigned int a1, int a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 8) == 0) {
    return 1808LL;
  }
  v17[0] = 0LL;
  v17[1] = 0LL;
  uint64_t v4 = sub_1001F48C8((uint64_t)v17, 0xDuLL);
  if (!(_DWORD)v4)
  {
    uint64_t v11 = 48LL;
    if (a2) {
      uint64_t v11 = 49LL;
    }
    uint64_t v12 = sub_1001F5F28((uint64_t)v17, (uint64_t)"\r\n+BSIR: %c\r\n", v5, v6, v7, v8, v9, v10, v11);
    if ((_DWORD)v12)
    {
      uint64_t v4 = v12;
      sub_1001F4914((uint64_t)v17);
    }

    else
    {
      uint64_t v13 = (char *)sub_1001F5F50((uint64_t)v17);
      unsigned __int16 v14 = strlen(v13);
      uint64_t v4 = sub_1000EF214(a1, 20, v13, v14, 1);
      if (!(_DWORD)v4)
      {
        uint64_t v15 = 0LL;
        while (*(unsigned __int16 *)(qword_1008E1E50 + v15) != a1)
        {
          uint64_t v4 = 0LL;
          v15 += 184LL;
          if (v15 == 1472) {
            return v4;
          }
        }

        uint64_t v4 = 0LL;
        *(_DWORD *)(qword_1008E1E50 + v15 + 128) = a2;
      }
    }
  }

  return v4;
}

uint64_t sub_1000F0980(unsigned int a1, const char *a2)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  if (!a2) {
    return 101LL;
  }
  v16[0] = 0LL;
  v16[1] = 0LL;
  __int16 v4 = strlen(a2);
  uint64_t v11 = sub_1001F48C8((uint64_t)v16, (unsigned __int16)(v4 + 24));
  if (!(_DWORD)v11)
  {
    uint64_t v12 = sub_1001F5F28((uint64_t)v16, (uint64_t)"\r\n+CNUM: ,%s,%d,,%d\r\n", v5, v6, v7, v8, v9, v10, (uint64_t)a2);
    if ((_DWORD)v12)
    {
      uint64_t v11 = v12;
      sub_1001F4914((uint64_t)v16);
    }

    else
    {
      uint64_t v13 = (char *)sub_1001F5F50((uint64_t)v16);
      unsigned __int16 v14 = strlen(v13);
      return sub_1000EF214(a1, 22, v13, v14, 1);
    }
  }

  return v11;
}

uint64_t sub_1000F0A60( unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, uint64_t a6, const char *a7, uint64_t a8, const char *a9)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0x40) == 0) {
    return 1808LL;
  }
  uint64_t v14 = 101LL;
  if (a4 <= 5 && a5 <= 2)
  {
    int v16 = (int)a9;
    if (a7)
    {
      int v17 = strlen(a7);
      if (v17 <= 32) {
        int v18 = v17;
      }
      else {
        int v18 = 0;
      }
    }

    else
    {
      int v18 = 0;
    }

    if (a9)
    {
      int v19 = strlen(a9);
      if (v19 <= 128) {
        int v16 = v19;
      }
      else {
        int v16 = 0;
      }
    }

    v32[0] = 0LL;
    v32[1] = 0LL;
    uint64_t v20 = sub_1001F48C8((uint64_t)v32, (unsigned __int16)(v18 + v16 + 40));
    int v27 = v18;
    uint64_t v14 = v20;
    if (!(_DWORD)v20)
    {
      if (v27 < 1 || v16 < 1)
      {
        uint64_t v31 = a2;
        if (v27 < 1) {
          uint64_t v28 = "\r\n+CLCC: %d,%c,%d,%d,%c,,,\r\n";
        }
        else {
          uint64_t v28 = "\r\n+CLCC: %d,%c,%d,%d,%c,%s,%d\r\n";
        }
      }

      else
      {
        uint64_t v31 = a2;
        uint64_t v28 = "\r\n+CLCC: %d,%c,%d,%d,%c,%s,%d,%s\r\n";
      }

      uint64_t v14 = sub_1001F5F28((uint64_t)v32, (uint64_t)v28, v21, v22, v23, v24, v25, v26, v31);
      if ((_DWORD)v14)
      {
        sub_1001F4914((uint64_t)v32);
      }

      else
      {
        uint64_t v29 = (char *)sub_1001F5F50((uint64_t)v32);
        unsigned __int16 v30 = strlen(v29);
        return sub_1000EF214(a1, 23, v29, v30, 1);
      }
    }
  }

  return v14;
}

uint64_t sub_1000F0C30(unsigned int a1, uint64_t a2, const char *a3)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  v24[0] = 0LL;
  v24[1] = 0LL;
  if (a3)
  {
    __int16 v8 = strlen(a3);
    uint64_t v6 = sub_1001F48C8((uint64_t)v24, (unsigned __int16)(v8 + 18));
    if ((_DWORD)v6) {
      return v6;
    }
    uint64_t v15 = sub_1001F5F28((uint64_t)v24, (uint64_t)"\r\n+COPS: %d,0,%s\r\n", v9, v10, v11, v12, v13, v14, a2);
  }

  else
  {
    uint64_t v6 = sub_1001F48C8((uint64_t)v24, 0xDuLL);
    if ((_DWORD)v6) {
      return v6;
    }
    uint64_t v15 = sub_1001F5F28((uint64_t)v24, (uint64_t)"\r\n+COPS: %d\r\n", v16, v17, v18, v19, v20, v21, a2);
  }

  uint64_t v6 = v15;
  if ((_DWORD)v15)
  {
    sub_1001F4914((uint64_t)v24);
  }

  else
  {
    uint64_t v22 = (char *)sub_1001F5F50((uint64_t)v24);
    unsigned __int16 v23 = strlen(v22);
    return sub_1000EF214(a1, 24, v22, v23, 1);
  }

  return v6;
}

uint64_t sub_1000F0D28(unsigned int a1, uint64_t a2)
{
  uint64_t v4 = 0LL;
  __int16 v17 = a1;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v4) != a1)
  {
    v4 += 184LL;
    if (v4 == 1472) {
      return 1802LL;
    }
  }

  v16[0] = 0LL;
  v16[1] = 0LL;
  if ((*(_BYTE *)(qword_1008E1E50 + 1509) & 2) == 0 || (*(_WORD *)(qword_1008E1E50 + v4 + 86) & 0x80) == 0) {
    return 2701LL;
  }
  *(_DWORD *)(qword_1008E1E50 + v4 + 164) = a2;
  uint64_t result = sub_1001F48C8((uint64_t)v16, 0xBuLL);
  if (!(_DWORD)result)
  {
    if (sub_1001F5F28((uint64_t)v16, (uint64_t)"\r\n+BCS:%d\r\n", v6, v7, v8, v9, v10, v11, a2))
    {
      sub_1001F4914((uint64_t)v16);
      return 412LL;
    }

    else
    {
      uint64_t v12 = (char *)sub_1001F5F50((uint64_t)v16);
      unsigned __int16 v13 = strlen(v12);
      uint64_t result = sub_1000EF214(a1, 26, v12, v13, 1);
      if (!(_DWORD)result)
      {
        v15[1] = &v17;
        v15[0] = (const void *)2;
        uint64_t v14 = qword_1008E1E50 + v4;
        *(_BYTE *)(v14 + 168) = 1;
        sub_1001EE6E8((uint64_t)sub_1000F0E78, v15, 29, (int *)(v14 + 172));
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_1000F0E78(uint64_t result)
{
  uint64_t v1 = 0LL;
  uint64_t v2 = (unsigned __int16 *)qword_1008E1E50;
  while (1)
  {
    int v3 = *v2;
    v2 += 92;
    if (++v1 == 8) {
      return result;
    }
  }

  uint64_t result = v1;
  return result;
}

uint64_t sub_1000F0EC0(char a1, unsigned int a2, unsigned int a3)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  uint64_t result = 101LL;
  if (a2 <= 4 && a3 <= 2)
  {
    uint64_t result = 0LL;
    uint64_t v7 = qword_1008E1E50;
    *(_BYTE *)(qword_1008E1E50 + 1514) = a1;
    *(_BYTE *)(v7 + 1515) = a2;
    *(_BYTE *)(v7 + 1516) = a3;
  }

  return result;
}

uint64_t sub_1000F0F28(BOOL *a1, _BYTE *a2, _BYTE *a3)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  uint64_t result = 0LL;
  uint64_t v7 = qword_1008E1E50;
  *a1 = *(_BYTE *)(qword_1008E1E50 + 1514) != 0;
  *a2 = *(_BYTE *)(v7 + 1515);
  *a3 = *(_BYTE *)(v7 + 1516);
  return result;
}

uint64_t sub_1000F0F90(char a1, char a2, unsigned int a3, unsigned int a4)
{
  if (!sub_1000F4FC4()) {
    return 408LL;
  }
  uint64_t result = 101LL;
  if (a3 <= 5 && a4 <= 5)
  {
    uint64_t result = 0LL;
    uint64_t v9 = (_BYTE *)qword_1008E1E50;
    *(_BYTE *)(qword_1008E1E50 + 1513) = a1;
    v9[1519] = a2;
    v9[1518] = a3;
    v9[1517] = a4;
  }

  return result;
}

uint64_t sub_1000F1000(int a1)
{
  uint64_t v1 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v1) != a1)
  {
    v1 += 184LL;
    if (v1 == 1472) {
      return 0LL;
    }
  }

  return qword_1008E1E50 + v1 + 80;
}

uint64_t sub_1000F1044(unsigned int a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HandsfreeAG_SetupAoS - handle:%d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x10u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (sub_1000F6024(a1))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Trying to establish HandsfreeAoS while it's already established",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v32);
      __int16 v17 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_10065B6E0(v17);
      }
    }

    return 1806LL;
  }

  else
  {
    *(_OWORD *)buf = 0uLL;
    uint64_t v18 = sub_1001F48C8((uint64_t)buf, 8uLL);
    if (!(_DWORD)v18)
    {
      uint64_t v25 = sub_1001F5F28((uint64_t)buf, (uint64_t)"\r\n+HAOS:1\r\n", v19, v20, v21, v22, v23, v24, v32);
      if ((_DWORD)v25)
      {
        uint64_t v18 = v25;
        sub_1001F4914((uint64_t)buf);
      }

      else
      {
        uint64_t v26 = 0LL;
        int v27 = (unsigned __int16 *)qword_1008E1E50;
        do
        {
          int v28 = *v27;
          v27 += 92;
          if (v28 == a1) {
            break;
          }
          ++v26;
        }

        while (v26 != 8);
        *(_BYTE *)(qword_1008E1E50 + 184 * v26 + 182) = 1;
        uint64_t v29 = (char *)sub_1001F5F50((uint64_t)buf);
        unsigned __int16 v30 = strlen(v29);
        return sub_1000EF214(a1, 28, v29, v30, 1);
      }
    }
  }

  return v18;
}

uint64_t sub_1000F1200(unsigned int a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HandsfreeAG_CloseAoSAudio - handle:%d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x10u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  *(_OWORD *)buf = 0uLL;
  uint64_t v16 = sub_1001F48C8((uint64_t)buf, 8uLL);
  if (!(_DWORD)v16)
  {
    uint64_t v17 = sub_1001F5F28((uint64_t)buf, (uint64_t)"\r\n+HAOS:2,0\r\n", v10, v11, v12, v13, v14, v15, v21);
    if ((_DWORD)v17)
    {
      uint64_t v16 = v17;
      sub_1001F4914((uint64_t)buf);
    }

    else
    {
      uint64_t v18 = (char *)sub_1001F5F50((uint64_t)buf);
      unsigned __int16 v19 = strlen(v18);
      return sub_1000EF214(a1, 28, v18, v19, 1);
    }
  }

  return v16;
}

uint64_t sub_1000F1330(unsigned int a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HandsfreeAG_TransitionToUnidirectionalAudio - handle:%d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x10u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  *(_OWORD *)buf = 0uLL;
  uint64_t v16 = sub_1001F48C8((uint64_t)buf, 8uLL);
  if (!(_DWORD)v16)
  {
    uint64_t v17 = sub_1001F5F28((uint64_t)buf, (uint64_t)"\r\n+HAOS:2,1\r\n", v10, v11, v12, v13, v14, v15, v21);
    if ((_DWORD)v17)
    {
      uint64_t v16 = v17;
      sub_1001F4914((uint64_t)buf);
    }

    else
    {
      uint64_t v18 = (char *)sub_1001F5F50((uint64_t)buf);
      unsigned __int16 v19 = strlen(v18);
      return sub_1000EF214(a1, 28, v18, v19, 1);
    }
  }

  return v16;
}

uint64_t sub_1000F1460(unsigned int a1)
{
  uint64_t v1 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v1) != a1)
  {
    v1 += 184LL;
    if (v1 == 1472) {
      return 1802LL;
    }
  }

  *(_BYTE *)(qword_1008E1E50 + v1 + 182) = 0;
  return sub_1000F5E60(a1);
}

BOOL sub_1000F14A4(int a1)
{
  uint64_t v1 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v1) != a1)
  {
    v1 += 184LL;
    if (v1 == 1472) {
      return 0LL;
    }
  }

  return *(_BYTE *)(qword_1008E1E50 + v1 + 182) != 0;
}

uint64_t sub_1000F14F0(unsigned int a1, int a2)
{
  uint64_t v2 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v2) != a1)
  {
    v2 += 184LL;
    if (v2 == 1472) {
      return 1802LL;
    }
  }

  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0x200) == 0 || (*(_WORD *)(qword_1008E1E50 + v2 + 86) & 0x80) == 0) {
    return sub_1000F5DB0(a1, a2);
  }
  if (a2) {
    return sub_1000F5E60(a1);
  }
  return sub_1000EF604(a1, 2701, 0LL);
}

uint64_t sub_1000F1554(int a1, uint64_t a2)
{
  uint64_t result = 0LL;
  uint64_t v4 = qword_1008E1E50;
  uint64_t v5 = (unsigned __int16 *)qword_1008E1E50;
  while (1)
  {
    int v6 = *v5;
    v5 += 92;
    if (v6 == a1) {
      break;
    }
    if (++result == 8) {
      goto LABEL_6;
    }
  }

uint64_t sub_1000F15E4(int a1, uint64_t a2)
{
  __int16 v3 = a1;
  for (uint64_t i = 0LL; i != 1472; i += 184LL)
  {
    if (*(unsigned __int16 *)(qword_1008E1E50 + i) == a1)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Cooked device already exists %: !!", v13, v14, v15, v16, v17, v18, v19, a2);
        uint64_t v20 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      return 8;
    }
  }

  unsigned __int8 v5 = 0;
  uint64_t v6 = -1472LL;
  while (*(_DWORD *)(qword_1008E1E50 + v6 + 1552) || *(_WORD *)(qword_1008E1E50 + v6 + 1556) != 0)
  {
    ++v5;
    v6 += 184LL;
    if (!v6) {
      return 8;
    }
  }

  uint64_t v8 = sub_1000B17F4(*(unsigned __int16 *)(qword_1008E1E50 + 1506));
  uint64_t v9 = qword_1008E1E50 + v6;
  *(void *)(qword_1008E1E50 + v6 + 1592) = v8;
  if (v8)
  {
    sub_1001EF1B4((void *)(v9 + 1536));
    sub_1000D5E48( qword_1008E1E50 + v6 + 1568,  (uint64_t)sub_1000F25CC,  *(void *)(qword_1008E1E50 + v6 + 1592),  *(_WORD *)(qword_1008E1E50 + 1506));
    uint64_t v10 = qword_1008E1E50;
    uint64_t v11 = qword_1008E1E50 + v6;
    *(_WORD *)(v11 + 1472) = v3;
    int v12 = *(_DWORD *)a2;
    *(_WORD *)(v11 + 1556) = *(_WORD *)(a2 + 4);
    *(_DWORD *)(v11 + 1552) = v12;
    *(_BYTE *)(v11 + 1484) = 1;
    *(void *)(v11 + 1476) = 1802LL;
    *(_WORD *)(v11 + 1558) = 0;
    *(_DWORD *)(v11 + 1488) = 0;
    *(void *)(v11 + 1496) = 0LL;
    *(_WORD *)(v11 + 1504) = 0;
    *(_BYTE *)(v11 + 1506) = 0;
    *(_DWORD *)(v11 + 1600) = (*(unsigned __int16 *)(v10 + 1508) >> 3) & 1;
    *(_OWORD *)(v10 + v6 + 1604) = 0u;
    *(_WORD *)(v11 + 1632) = *(_WORD *)(v10 + 1514);
    *(_BYTE *)(v11 + 1634) = *(_BYTE *)(v10 + 1516);
    *(_DWORD *)(v11 + 1636) = 0;
    *(_BYTE *)(v11 + 1640) = 0;
    *(void *)(v10 + v6 + 1644) = 0x101010100000000LL;
    *(_WORD *)(v11 + 1652) = 0;
    ++*(_BYTE *)(v10 + 1472);
    return v5;
  }

  return 8;
}

void sub_1000F17B4(uint64_t a1, unsigned int a2, int a3)
{
}

double sub_1000F17E4(int a1)
{
  uint64_t v1 = 0LL;
  uint64_t v2 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v1) != a1)
  {
    ++v2;
    v1 += 184LL;
    if (v2 == 8)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Could not find cooked device to destroy.", v3, v4, v5, v6, v7, v8, v9, v17);
        uint64_t v11 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      return result;
    }
  }

  sub_1000F21F0(v2);
  uint64_t v12 = qword_1008E1E50;
  uint64_t v13 = *(void **)(qword_1008E1E50 + v1 + 152);
  if (v13)
  {
    sub_1000B1838(v13);
    uint64_t v12 = qword_1008E1E50;
    *(void *)(qword_1008E1E50 + v1 + 152) = 0LL;
  }

  uint64_t v14 = *(unsigned int *)(v12 + v1 + 8);
  if ((_DWORD)v14)
  {
    sub_1001EEB14(v14);
    uint64_t v12 = qword_1008E1E50;
  }

  sub_1000B1838(*(void **)(v12 + v1 + 120));
  uint64_t v15 = qword_1008E1E50;
  uint64_t v16 = qword_1008E1E50 + v1;
  double result = 0.0;
  *(_OWORD *)uint64_t v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_OWORD *)(v16 + 32) = 0u;
  *(_OWORD *)(v16 + 48) = 0u;
  *(_OWORD *)(v16 + 64) = 0u;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(_OWORD *)(v16 + 112) = 0u;
  *(_OWORD *)(v16 + 128) = 0u;
  *(_OWORD *)(v16 + 144) = 0u;
  *(_OWORD *)(v16 + 160) = 0u;
  *(void *)(v16 + 176) = 0LL;
  *(_WORD *)uint64_t v16 = -1;
  --*(_BYTE *)(v15 + 1472);
  return result;
}

uint64_t sub_1000F18EC(int a1, char a2)
{
  uint64_t v2 = 0LL;
  uint64_t v3 = (unsigned __int16 *)qword_1008E1E50;
  if ((a2 & 1) != 0)
  {
    while (1)
    {
      int v4 = *v3;
      v3 += 92;
      if (v4 == a1) {
        break;
      }
      if (++v2 == 8) {
        return 0LL;
      }
    }

    int v6 = 1;
  }

  else
  {
    while (1)
    {
      int v5 = *v3;
      v3 += 92;
      if (v5 == a1) {
        break;
      }
      if (++v2 == 8) {
        return 0LL;
      }
    }

    int v6 = 0;
  }

  *(_DWORD *)(qword_1008E1E50 + 184 * v2 + 140) = v6;
  return 0LL;
}

uint64_t sub_1000F1958(int a1, _BYTE *a2, unsigned int a3)
{
  uint64_t v4 = qword_1008E1E50;
  uint64_t v5 = -1472LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v5 + 1472) != a1)
  {
    v5 += 184LL;
    if (!v5) {
      return 1802LL;
    }
  }

  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0x200) == 0 || (*(_WORD *)(qword_1008E1E50 + v5 + 1558) & 0x80) == 0) {
    return 2701LL;
  }
  *(_DWORD *)(qword_1008E1E50 + v5 + 1616) = 0;
  if (a3)
  {
    uint64_t v7 = a3;
    while (1)
    {
      unsigned int v8 = *a2;
      if (v8 <= 0x7E)
      {
        switch(v8)
        {
          case 1u:
            uint64_t v9 = qword_1008E1E50 + v5;
            int v10 = *(_DWORD *)(qword_1008E1E50 + v5 + 1616) | 1;
            break;
          case 2u:
            uint64_t v9 = qword_1008E1E50 + v5;
            int v10 = *(_DWORD *)(qword_1008E1E50 + v5 + 1616) | 2;
            break;
          case 0x40u:
            uint64_t v9 = qword_1008E1E50 + v5;
            int v10 = *(_DWORD *)(qword_1008E1E50 + v5 + 1616) | 0x80;
            break;
          default:
LABEL_28:
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Unsupported codec ID: %d",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  *a2);
              uint64_t v18 = (os_log_s *)sub_100086554(0x10u);
              if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
              {
                uint64_t v19 = sub_1001EDDCC();
                *(_DWORD *)buf = 136446466;
                uint64_t v23 = v19;
                __int16 v24 = 1024;
                int v25 = 0xFFFF;
                _os_log_error_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
              }
            }

            goto LABEL_26;
        }
      }

      else
      {
        switch(*a2)
        {
          case 0x7F:
            uint64_t v9 = qword_1008E1E50 + v5;
            int v10 = *(_DWORD *)(qword_1008E1E50 + v5 + 1616) | 4;
            break;
          case 0x80:
            uint64_t v9 = qword_1008E1E50 + v5;
            int v10 = *(_DWORD *)(qword_1008E1E50 + v5 + 1616) | 0x100;
            break;
          case 0x81:
            uint64_t v9 = qword_1008E1E50 + v5;
            int v10 = *(_DWORD *)(qword_1008E1E50 + v5 + 1616) | 0x200;
            break;
          case 0x82:
            uint64_t v9 = qword_1008E1E50 + v5;
            int v10 = *(_DWORD *)(qword_1008E1E50 + v5 + 1616) | 0x400;
            break;
          default:
            if (v8 != 255) {
              goto LABEL_28;
            }
            uint64_t v9 = qword_1008E1E50 + v5;
            int v10 = *(_DWORD *)(qword_1008E1E50 + v5 + 1616) | 0x10;
            break;
        }
      }

      *(_DWORD *)(v9 + 1616) = v10;
LABEL_26:
      ++a2;
      if (!--v7)
      {
        uint64_t v4 = qword_1008E1E50;
        int v20 = *(_DWORD *)(qword_1008E1E50 + v5 + 1616);
        goto LABEL_32;
      }
    }
  }

  int v20 = 0;
LABEL_32:
  int v21 = v20 & *(_DWORD *)(v4 + 1520);
  if ((v21 & 0x100) != 0)
  {
    *(void *)(v4 + v5 + 1560) |= 1uLL;
    if ((v21 & 0x80) == 0)
    {
LABEL_34:
      if ((v21 & 2) == 0) {
        goto LABEL_35;
      }
      goto LABEL_43;
    }
  }

  else if ((v21 & 0x80) == 0)
  {
    goto LABEL_34;
  }

  *(void *)(v4 + v5 + 1560) |= 4uLL;
  if ((v21 & 2) == 0)
  {
LABEL_35:
    if ((v21 & 4) == 0) {
      goto LABEL_36;
    }
    goto LABEL_44;
  }

uint64_t sub_1000F1C84(int a1, _BYTE *a2, unsigned int a3)
{
  uint64_t v3 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v3) != a1)
  {
    v3 += 184LL;
    if (v3 == 1472)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"FastConnect Device not connected", v4, v5, v6, v7, v8, v9, v10, v16);
        uint64_t v11 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      return 1802LL;
    }
  }

  if (a3 >= 0x14) {
    int v13 = 20;
  }
  else {
    int v13 = a3;
  }
  if (v13)
  {
    int v14 = 0;
    uint64_t v15 = (_BYTE *)(qword_1008E1E50 + v3);
    do
    {
      if (a3 <= 6)
      {
        switch(v14)
        {
          case 0:
            if (*a2)
            {
              if (*a2 == 1) {
                v15[176] = 1;
              }
            }

            else
            {
              v15[176] = 0;
            }

            break;
          case 3:
            if (a2[3])
            {
              if (a2[3] == 1) {
                v15[179] = 1;
              }
            }

            else
            {
              v15[179] = 0;
            }

            break;
          case 4:
            if (a2[4])
            {
              if (a2[4] == 1) {
                v15[177] = 1;
              }
            }

            else
            {
              v15[177] = 0;
            }

            break;
          case 5:
            if (a2[5])
            {
              if (a2[5] == 1) {
                v15[178] = 1;
              }
            }

            else
            {
              v15[178] = 0;
            }

            break;
          default:
            break;
        }
      }

      ++v14;
    }

    while (v13 != v14);
  }

  return 0LL;
}

uint64_t sub_1000F1DE8(int a1, __int16 a2)
{
  uint64_t v2 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v2) != a1)
  {
    v2 += 184LL;
    if (v2 == 1472) {
      return 1802LL;
    }
  }

  uint64_t result = 0LL;
  *(_WORD *)(qword_1008E1E50 + v2 + 86) = a2;
  return result;
}

uint64_t sub_1000F1E30(uint64_t a1, _DWORD *a2)
{
  *a2 = *(unsigned __int16 *)(qword_1008E1E50 + 1508);
  return 0LL;
}

uint64_t sub_1000F1E48(uint64_t a1, BOOL *a2, unsigned int a3)
{
  if (a3 < 7) {
    return 2701LL;
  }
  uint64_t result = 0LL;
  uint64_t v4 = (_BYTE *)qword_1008E1E50;
  *a2 = *(_BYTE *)(qword_1008E1E50 + 1513) != 0;
  a2[1] = v4[1514] != 0;
  a2[2] = v4[1515];
  a2[3] = v4[1517];
  a2[4] = v4[1518];
  a2[5] = v4[1519] != 0;
  a2[6] = v4[1516];
  return result;
}

uint64_t sub_1000F1EB8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (a3 < 7) {
    return 2701LL;
  }
  uint64_t result = 0LL;
  *(_DWORD *)a2 = 84082945;
  *(_WORD *)(a2 + 4) = 261;
  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0xC0) == 0 || (*(_WORD *)(qword_1008E1E50 + 1508) & 1) == 0) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  *(_BYTE *)(a2 + 6) = v5;
  return result;
}

uint64_t sub_1000F1F08(int a1, _WORD *a2)
{
  uint64_t v2 = 0LL;
  uint64_t v3 = qword_1008E1E50;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v2) != a1)
  {
    v2 += 184LL;
    if (v2 == 1472) {
      return 1802LL;
    }
  }

  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 1) == 0) {
    return 2701LL;
  }
  char v5 = *(_BYTE *)(qword_1008E1E50 + 1510);
  *a2 = v5 & 1;
  if ((*(_WORD *)(v3 + 1508) & 0x80) != 0) {
    __int16 v6 = 30;
  }
  else {
    __int16 v6 = 10;
  }
  __int16 v7 = v6 & 0xFFFE | v5 & 1;
  *a2 = v7;
  unsigned int v8 = *(unsigned __int8 *)(v3 + 1510);
  uint64_t result = 0LL;
  if ((v8 & 0x18) != 0) {
    *a2 = v7 & 0xFF9F | (32 * ((v8 >> 3) & 3));
  }
  return result;
}

uint64_t sub_1000F1FA0(uint64_t a1)
{
  uint64_t v1 = 0LL;
  unsigned int v2 = **(unsigned __int16 **)(a1 + 8);
  while (*(unsigned __int16 *)(qword_1008E1E50 + v1) != v2)
  {
    v1 += 184LL;
    if (v1 == 1472) {
      return sub_1000F5D14(v2, 1814);
    }
  }

  *(void *)(qword_1008E1E50 + v1 + 4) = 1814LL;
  return sub_1000F5D14(v2, 1814);
}

uint64_t sub_1000F1FF0(unsigned int a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = 0LL;
  uint64_t v29 = 0LL;
  unint64_t v30 = 0LL;
  uint64_t v31 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v6) != a1)
  {
    v6 += 184LL;
    if (v6 == 1472) {
      return sub_1000F5D14(a1, 1815);
    }
  }

  if (*(_BYTE *)(qword_1008E1E50 + v6 + 12))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Error %! occurred sending response, disconnecting\n", v8, v9, v10, v11, v12, v13, v14, a3);
      uint64_t v15 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    *(_DWORD *)(qword_1008E1E50 + v6 + 4) = a3;
    return sub_1000F5D14(a1, a3);
  }

  else
  {
    int v16 = *(unsigned __int8 *)(qword_1008E1E50 + v6 + 168);
    int v17 = sub_1000A86F0();
    if (v16)
    {
      if (v17)
      {
        sub_1001EE134((uint64_t)"Error %! Response\n", v18, v19, v20, v21, v22, v23, v24, a3);
        int v25 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      uint64_t v26 = qword_1008E1E50;
      uint64_t v27 = *(unsigned int *)(qword_1008E1E50 + v6 + 172);
      if ((_DWORD)v27)
      {
        sub_1001EEB14(v27);
        uint64_t v26 = qword_1008E1E50;
        *(_DWORD *)(qword_1008E1E50 + v6 + 172) = 0;
      }

      *(_BYTE *)(v26 + v6 + 168) = 0;
      LODWORD(v29) = 5;
      WORD2(v29) = a1;
      LODWORD(v30) = a3;
    }

    else
    {
      if (v17)
      {
        sub_1001EE134( (uint64_t)"Error %! occurred while sending response, type %d\n",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  a3);
        int v28 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      unint64_t v30 = __PAIR64__(a3, a2);
      WORD2(v29) = a1;
      LODWORD(v29) = 21;
      uint64_t v26 = qword_1008E1E50;
    }

    return (*(uint64_t (**)(uint64_t *))(v26 + 1480))(&v29);
  }

void sub_1000F21D8(unsigned int a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
}

void sub_1000F21E4(unsigned int a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
}

void **sub_1000F21F0(unsigned int a1)
{
  uint64_t v2 = qword_1008E1E50;
  uint64_t v3 = qword_1008E1E50 + 184LL * a1;
  char v5 = *(void ***)(v3 + 64);
  uint64_t result = (void **)(v3 + 64);
  if (v5 != result)
  {
    do
    {
      uint64_t v6 = sub_1001EF264(result);
      if (!v6) {
        sub_1001EE2A0();
      }
      sub_1000F1FF0(*(unsigned __int16 *)(qword_1008E1E50 + 184LL * a1), *(_DWORD *)(v6 - 24), 122LL);
      if (*(_BYTE *)(v6 - 6)) {
        sub_1000B1838(*(void **)(v6 - 16));
      }
      sub_1000B1838((void *)(v6 - 24));
      uint64_t v2 = qword_1008E1E50;
      uint64_t v7 = qword_1008E1E50 + 184LL * a1;
      uint64_t v8 = *(void ***)(v7 + 64);
      uint64_t result = (void **)(v7 + 64);
    }

    while (v8 != result);
  }

  *(_BYTE *)(v2 + 184LL * a1 + 56) = 0;
  return result;
}

void sub_1000F22A0(unsigned int a1, unsigned __int8 *ptr, uint64_t a3, int a4)
{
  uint64_t v8 = 64LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v8 - 64) != a1)
  {
    v8 += 184LL;
    if (v8 == 1536)
    {
      if (a4) {
        sub_1000B1838(ptr);
      }
      return;
    }
  }

  if ((_DWORD)a3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write failed %!\n", v9, v10, v11, v12, v13, v14, v15, a3);
      int v16 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    sub_1000F1FF0(a1, *(_DWORD *)(qword_1008E1E50 + v8 - 48), a3);
  }

  else if (*(_DWORD *)(qword_1008E1E50 + v8 - 48) == 20)
  {
    uint64_t v17 = 0LL;
    while (*(unsigned __int16 *)(qword_1008E1E50 + v17) != a1)
    {
      v17 += 184LL;
      if (v17 == 1472) {
        goto LABEL_19;
      }
    }

    *(_DWORD *)(qword_1008E1E50 + v17 + 128) = ptr[9] != 48;
  }

uint64_t sub_1000F252C(unsigned int a1, int a2)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t v3 = qword_1008E1E50;
  uint64_t result = *(unsigned int *)(qword_1008E1E50 + 184LL * a1 + 172);
  if ((_DWORD)result)
  {
    uint64_t result = sub_1001EEB14(result);
    uint64_t v3 = qword_1008E1E50;
    *(_DWORD *)(qword_1008E1E50 + 184LL * a1 + 172) = 0;
  }

  uint64_t v6 = v3 + 184LL * a1;
  int v8 = *(unsigned __int8 *)(v6 + 168);
  uint64_t v7 = (_BYTE *)(v6 + 168);
  if (v8)
  {
    *uint64_t v7 = 0;
    LODWORD(v9) = 5;
    WORD2(v9) = *(_WORD *)(v3 + 184LL * a1);
    LODWORD(v10) = a2;
    return (*(uint64_t (**)(uint64_t *))(v3 + 1480))(&v9);
  }

  return result;
}

uint64_t sub_1000F25CC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = 0LL;
  uint64_t v3 = qword_1008E1E50;
  while (*(void *)(qword_1008E1E50 + 184 * v2 + 104) != *(void *)(*(void *)(result + 32) + 8LL))
  {
    if (++v2 == 8) {
      return result;
    }
  }

  uint64_t v4 = *(unsigned __int16 *)(qword_1008E1E50 + 184 * v2);
  char v5 = *(const char **)(result + 8);
  if (!v5) {
    goto LABEL_18;
  }
  uint64_t v6 = 0LL;
  for (uint64_t i = &off_100883BC0; strcmp((const char *)*(i - 1), v5); i += 3)
  {
    if (++v6 == 31)
    {
      if ((!*(_BYTE *)(v3 + 184 * v2 + 12) || *(_BYTE *)(v3 + 1511))
        && (int v8 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 1488)) != 0LL)
      {
        return v8(v4, v1);
      }

      else
      {
        return sub_1000EF604(v4, 2701, 0LL);
      }
    }
  }

  if (*(_BYTE *)(v3 + 184 * v2 + 12) && ((0x7FFFFD59uLL >> v6) & 1) != 0)
  {
    uint64_t v9 = 2701LL;
  }

  else
  {
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))*i)(v4, v1);
    if ((_DWORD)result == 412) {
      return result;
    }
    uint64_t v9 = result;
    if (!(_DWORD)result)
    {
      if (!*(_BYTE *)(qword_1008E1E50 + 1512)) {
        return result;
      }
LABEL_18:
      uint64_t result = sub_1000EF604(v4, 0, 0LL);
      if ((_DWORD)result) {
        return sub_1000F1FF0(v4, 1u, result);
      }
      return result;
    }
  }

  uint64_t result = sub_1000EF578(v4, v9);
  if ((_DWORD)result) {
    return sub_1000F1FF0(v4, 2u, result);
  }
  return result;
}

uint64_t sub_1000F277C(unsigned __int16 a1)
{
  int v4 = 0;
  uint64_t v5 = 0LL;
  int v2 = 8;
  uint64_t v3 = a1;
  (*(void (**)(int *))(qword_1008E1E50 + 1480))(&v2);
  return 0LL;
}

uint64_t sub_1000F27C0(unsigned int a1, uint64_t a2)
{
  uint64_t v3 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v3) != a1)
  {
    v3 += 184LL;
    if (v3 == 1472) {
      return 1802LL;
    }
  }

  uint64_t v5 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (!v5) {
    return 134LL;
  }
  __int16 v6 = sub_1001F46A4(v5);
  uint64_t v7 = 0LL;
  uint64_t v8 = qword_1008E1E50;
  *(_WORD *)(qword_1008E1E50 + v3 + 86) = v6;
  v29[0] = 0LL;
  v29[1] = 0LL;
  while (*(unsigned __int16 *)(v8 + v7) != a1)
  {
    v7 += 184LL;
    if (v7 == 1472)
    {
      uint64_t v9 = 1802LL;
      goto LABEL_12;
    }
  }

  unsigned __int16 v13 = *(_WORD *)(v8 + 1508);
  uint64_t v9 = sub_1001F48C8((uint64_t)v29, 0x15uLL);
  if ((_DWORD)v9) {
    goto LABEL_12;
  }
  uint64_t v14 = 0LL;
  if ((*(_WORD *)(qword_1008E1E50 + v7 + 86) & 0x80) != 0) {
    unsigned __int16 v15 = v13;
  }
  else {
    unsigned __int16 v15 = v13 & 0xFDFF;
  }
  while (*(unsigned __int16 *)(qword_1008E1E50 + v14) != a1)
  {
    v14 += 184LL;
    if (v14 == 1472)
    {
      uint64_t v16 = 0LL;
      goto LABEL_23;
    }
  }

  uint64_t v16 = qword_1008E1E50 + v14 + 80;
LABEL_23:
  uint64_t v28 = 0LL;
  sub_10010EEE0(v16, &v28);
  if (v28)
  {
    uint64_t v23 = sub_1001E1B50(v28);
    if (v23)
    {
    }
  }

  uint64_t v24 = sub_1001F5F28((uint64_t)v29, (uint64_t)"\r\n+BRSF:%d\r\n", v17, v18, v19, v20, v21, v22, v15);
  if ((_DWORD)v24)
  {
    uint64_t v9 = v24;
    sub_1001F4914((uint64_t)v29);
LABEL_12:
    unsigned int v10 = a1;
    unsigned int v11 = 5;
    uint64_t v12 = v9;
    goto LABEL_13;
  }

  uint64_t v25 = (char *)sub_1001F5F50((uint64_t)v29);
  unsigned __int16 v26 = strlen(v25);
  uint64_t v9 = sub_1000EF214(a1, 5, v25, v26, 1);
  if ((_DWORD)v9) {
    goto LABEL_12;
  }
  if (*(_BYTE *)(qword_1008E1E50 + v3 + 12))
  {
    uint64_t v27 = sub_1000EF604(a1, 0, 0LL);
    if (!(_DWORD)v27) {
      return 412LL;
    }
    uint64_t v12 = v27;
    unsigned int v10 = a1;
    unsigned int v11 = 1;
LABEL_13:
    sub_1000F1FF0(v10, v11, v12);
    return 412LL;
  }

  return 0LL;
}

uint64_t sub_1000F29CC(unsigned int a1, uint64_t a2)
{
  uint64_t v4 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v4) != a1)
  {
    v4 += 184LL;
    if (v4 == 1472) {
      return 1802LL;
    }
  }

  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0x200) == 0 || (*(_WORD *)(qword_1008E1E50 + v4 + 86) & 0x80) == 0) {
    return 2701LL;
  }
  *(_DWORD *)(qword_1008E1E50 + v4 + 144) = 0;
  __int16 v6 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (v6)
  {
    uint64_t v7 = v6;
    while (sub_1001F46E0(v7, "1"))
    {
      if (!sub_1001F46E0(v7, "2"))
      {
        int v8 = 2;
        goto LABEL_26;
      }

      if (!sub_1001F46E0(v7, "127"))
      {
        int v8 = 4;
        goto LABEL_26;
      }

      if (!sub_1001F46E0(v7, "255"))
      {
        int v8 = 16;
        goto LABEL_26;
      }

      if (!sub_1001F46E0(v7, "256"))
      {
        int v8 = 256;
        goto LABEL_26;
      }

      if (!sub_1001F46E0(v7, "128"))
      {
        int v8 = 128;
        goto LABEL_26;
      }

      if (!sub_1001F46E0(v7, "129"))
      {
        int v8 = 512;
        goto LABEL_26;
      }

      if (!sub_1001F46E0(v7, "130"))
      {
        int v8 = 1024;
LABEL_26:
        *(_DWORD *)(qword_1008E1E50 + v4 + 144) |= v8;
      }

      uint64_t v7 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
      if (!v7) {
        goto LABEL_28;
      }
    }

    int v8 = 1;
    goto LABEL_26;
  }

LABEL_28:
  uint64_t v9 = qword_1008E1E50;
  unsigned int v10 = *(_DWORD *)(qword_1008E1E50 + v4 + 144) & *(_DWORD *)(qword_1008E1E50 + 1520);
  if ((v10 & 0x100) != 0)
  {
    *(void *)(qword_1008E1E50 + v4 + 88) |= 1uLL;
    if ((v10 & 0x80) == 0)
    {
LABEL_30:
      if ((v10 & 2) == 0) {
        goto LABEL_31;
      }
      goto LABEL_43;
    }
  }

  else if ((v10 & 0x80) == 0)
  {
    goto LABEL_30;
  }

  *(void *)(v9 + v4 + 88) |= 4uLL;
  if ((v10 & 2) == 0)
  {
LABEL_31:
    if ((v10 & 4) == 0) {
      goto LABEL_32;
    }
    goto LABEL_44;
  }

    unsigned __int16 v26 = sub_10010C710((uint64_t)sub_100100DA8, (uint64_t)&v48);
    goto LABEL_29;
  }

  if (v36) {
    goto LABEL_28;
  }
  uint64_t result = 0LL;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 54);
  if (v37 <= 5 && ((1 << v37) & 0x39) != 0)
  {
    v47[1] = &v48;
    v47[0] = (const void *)6;
    sub_10010C9D4(v35);
    sub_1001EE6DC((uint64_t)sub_100104DC0, v47, 0LL);
    return 0LL;
  }

  return result;
}

    uint64_t v21 = 0LL;
LABEL_29:
    uint64_t v23 = (a1 << 32) & 0xFF0000000000LL | (a1 << 48) | (a1 << 16) & 0xFF00000000LL | a1 & 0xFF000000 | (a1 >> 16) & 0xFF0000 | WORD2(a1) & 0xFF00 | BYTE6(a1);
    if (sub_1000A86F0())
    {
      uint64_t v31 = "Random";
      if (!(_BYTE)v23) {
        uint64_t v31 = "Public";
      }
      sub_1001EE134( (uint64_t)"FastLeConnection:LE_GAP_EnableFastLeConnectionForAddress %s:%: freeLocation:%d existingLocation:%d gFas tLeConnectionMaxSlots:%d gFastLeConnectionUsedSlots:%d ret:%d",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  (uint64_t)v31);
      uint64_t v32 = (os_log_s *)sub_100086554(0x42u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v33 = sub_1001EDDCC();
        *(_DWORD *)buf = 136446210;
        uint64_t v37 = v33;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    return v21;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"FastLeConnection:LE_GAP_IsFastLeConnectionEncryptionFakeEvent compare with zero address",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  v35);
    uint64_t v20 = (os_log_s *)sub_100086554(0x42u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 101LL;
}

  uint64_t v38 = v7;
  uint64_t v39 = v11[398];
  *(_BYTE *)(v39 + 8) = 1;
  *(_WORD *)(v39 + 10) = 4;
  *(_DWORD *)(v39 + 16) = *(_DWORD *)(v12 + 48);
  *(_BYTE *)(v39 + 32) = 1;
  *(_WORD *)(v39 + 34) = 4;
  *(_DWORD *)(v39 + 40) = *(_DWORD *)(v12 + 52);
  *(_BYTE *)(v39 + 56) = 1;
  *(_WORD *)(v39 + 58) = 1;
  *(_DWORD *)(v39 + 64) = *(unsigned __int8 *)(v12 + 66);
  *(_OWORD *)(v39 + 80) = unk_1008D73F0;
  *(_OWORD *)(v39 + 104) = *(_OWORD *)*(void *)(v12 + 72);
  if (*(_WORD *)(v39 + 106)) {
    __int128 v40 = 5;
  }
  else {
    __int128 v40 = 4;
  }
  if (!v7)
  {
LABEL_68:
    *a5 = 0LL;
    *__int16 v6 = 0;
    return 826LL;
  }

  uint64_t v41 = 0LL;
  __int128 v42 = (uint64_t *)(v12 + 56);
  __int128 v43 = (unsigned __int16 *)(v12 + 64);
  __int128 v44 = (uint64_t *)(v12 + 32);
  uint64_t v45 = (uint64_t *)(v12 + 16);
  __int128 v46 = (unsigned __int16 *)(v12 + 40);
  __int128 v47 = (unsigned __int16 *)(v12 + 24);
  if (byte_1008EDC9C) {
    __int128 v48 = 1330184192;
  }
  else {
    __int128 v48 = 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + 16 * v41) != 1) {
      return 825LL;
    }
    __int128 v49 = a2 + 16 * v41;
    __int128 v50 = *(unsigned __int16 *)(v49 + 2);
    if (v50 == 4)
    {
      LODWORD(v52) = *(_DWORD *)(v49 + 8);
      __int128 v51 = v52 >> 16;
    }

    else
    {
      if (v50 != 2) {
        return 825LL;
      }
      __int128 v51 = *(unsigned __int16 *)(a2 + 16 * v41 + 8);
      LOWORD(v52) = *(_WORD *)(a2 + 16 * v41 + 8);
    }

    if (v10 > (unsigned __int16)v52)
    {
LABEL_67:
      if (++v41 >= v38) {
        goto LABEL_68;
      }
      continue;
    }

    break;
  }

  uint64_t v53 = 0;
  uint64_t v54 = 0LL;
  if (v51 <= v10) {
    __int128 v51 = v10;
  }
  do
  {
    uint64_t v55 = v45;
    uint64_t v56 = v47;
    uint64_t v57 = v40;
    uint64_t v58 = v39;
    switch(v53)
    {
      case 0:
        goto LABEL_48;
      case 1:
        goto LABEL_46;
      case 2:
        uint64_t v55 = v44;
        uint64_t v56 = v46;
        goto LABEL_46;
      case 3:
        uint64_t v55 = v42;
        uint64_t v56 = v43;
LABEL_46:
        uint64_t v58 = *v55;
        uint64_t v57 = *v56;
        break;
      default:
        break;
    }

    if (v57 >= 1)
    {
LABEL_48:
      uint64_t v59 = 0;
      while (1)
      {
        uint64_t v60 = (_WORD *)(v58 + 24LL * v59);
        __int128 v61 = (unsigned __int16)*v60;
        if (v51 <= v61 && v61 <= (unsigned __int16)v52)
        {
          uint64_t v54 = (__int16 *)(v58 + 24LL * v59);
          LOWORD(v52) = *v60;
          if (v51 == v61) {
            break;
          }
        }

        if (v57 <= ++v59) {
          goto LABEL_55;
        }
      }

      uint64_t v54 = (__int16 *)(v58 + 24LL * v59);
      LOWORD(v52) = *v60;
    }

      uint64_t v20 = sub_1001E6D28(v63, 0LL);
      if (!(_DWORD)v20) {
        goto LABEL_29;
      }
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      uint64_t v53 = dword_1008EDD24 > 5 ? "unknown" : off_100886320[dword_1008EDD24];
      sub_1001EE134((uint64_t)"secmgrState %s (%d), %!", v46, v47, v48, v49, v50, v51, v52, (uint64_t)v53);
      uint64_t v54 = (os_log_s *)sub_100086554(0x37u);
      if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    sub_1001EE2A0();
    uint64_t v20 = 105LL;
  }

  return 0LL;
}

      uint64_t v5 = (__int16)v5 - v10;
      __int16 v6 = v5 << 16;
      if (v5 << 16 <= 0) {
        goto LABEL_34;
      }
    }
  }

  uint64_t v22 = 0;
  int v8 = 0;
  uint64_t v7 = 0;
LABEL_34:
  buf[0] = 0;
  sub_100242CA4(buf);
  sub_1000809DC(v8, v22, v7, (unsigned __int8 *)(a3 + 128));
  sub_100242CD0(buf);
  sub_100242CD8(buf);
  return 0LL;
}

      ++v29;
    }

    while (v29 != v28);
    if (v30 == v28 || v30 != v27) {
      goto LABEL_60;
    }
    uint64_t v34 = *((unsigned __int8 *)a3 + 23);
    if ((v34 & 0x80u) == 0LL) {
      uint64_t v35 = a3;
    }
    else {
      uint64_t v35 = (_BYTE *)*a3;
    }
    if ((v34 & 0x80u) != 0LL) {
      uint64_t v34 = a3[1];
    }
    if (v34 >= 0x1D) {
      uint64_t v34 = 29LL;
    }
    if (!v34) {
      goto LABEL_60;
    }
LABEL_37:
    uint64_t v36 = &v35[v34];
    uint64_t v37 = v35;
    uint64_t v38 = v36;
    do
    {
      if (*v37 == 99)
      {
        uint64_t v39 = &_mh_execute_header.magic + 1;
        while (v39 != 29)
        {
          if (&v37[v39] == v36) {
            goto LABEL_57;
          }
          __int128 v40 = v37[v39];
          uint64_t v41 = aComAppleSharin_1[v39++];
          if (v40 != v41) {
            goto LABEL_49;
          }
        }

        uint64_t v38 = v37;
      }

  return v21;
}

      uint64_t v17 = v13[1];
      uint64_t v18 = v13[2];
      if (v17 != v18)
      {
        uint64_t v19 = -v17;
        while (1)
        {
          uint64_t v20 = *(void **)v17;
          v17 += 8LL;
          v19 -= 8LL;
          if (v17 == v18) {
            goto LABEL_32;
          }
        }

        if (*(_BYTE *)v20)
        {
          uint64_t v22 = (os_log_s *)qword_1008F7610;
          if (os_log_type_enabled((os_log_t)qword_1008F7610, OS_LOG_TYPE_DEFAULT))
          {
            sub_100494958(a2, (uint64_t)__p);
            if (v33 >= 0) {
              uint64_t v23 = __p;
            }
            else {
              uint64_t v23 = (void **)__p[0];
            }
            *(_DWORD *)buf = 67109378;
            uint64_t v35 = a3;
            uint64_t v36 = 2082;
            uint64_t v37 = v23;
            _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "L2CAP Channel 0x%04x for session %{public}s is already being unregistered",  buf,  0x12u);
            if (v33 < 0) {
              operator delete(__p[0]);
            }
          }

          return;
        }

        uint64_t v28 = sub_1003655CC((uint64_t)a1, (uint64_t)v20);
        if ((_DWORD)v28 == 10) {
          return;
        }
        uint64_t v21 = v28;
        if ((_DWORD)v28)
        {
LABEL_50:
          (*(void (**)(void, uint64_t, uint64_t))(*(void *)*v13 + 24LL))(*v13, a3, v21);
          return;
        }

        uint64_t v29 = v13[2];
        unint64_t v30 = v29 - (8 - v19);
        if (v29 != 8 - v19) {
          memmove((void *)-v19, (const void *)(8 - v19), v29 - (8 - v19));
        }
        v13[2] = v30 - v19;
        uint64_t v31 = (void *)v20[15];
        if (v31)
        {
          v20[16] = v31;
          operator delete(v31);
        }

        operator delete(v20);
      }

    unsigned __int16 v15 = 7LL;
    goto LABEL_41;
  }

  uint64_t v21 = (os_log_s *)qword_1008F7568;
  if (os_log_type_enabled((os_log_t)qword_1008F7568, OS_LOG_TYPE_ERROR))
  {
    sub_1003FE1B4((unsigned __int8 *)&v25, &v28);
    sub_100677B9C((uint64_t *)&v28, (uint8_t *)&__p, v15, v21);
  }

  *a6 = 0LL;
LABEL_41:
  nullsub_63(v33, v17);
  return v15;
}

    uint64_t v33 = 0LL;
    uint64_t v34 = 0LL;
    uint64_t v35 = 0LL;
    if ((sub_1003D8F04((uint64_t)v8, (uint64_t)&v33) & 1) != 0)
    {
      if (qword_1008D60E0 != -1) {
        dispatch_once(&qword_1008D60E0, &stru_100896298);
      }
      uint64_t v14 = off_1008D60D8;
      memset(v32, 0, sizeof(v32));
      sub_10024062C((char *)v32, v33, v34, 0xAAAAAAAAAAAAAAABLL * (((char *)v34 - (char *)v33) >> 3));
      LODWORD(v14) = sub_10022C844((uint64_t)v14, v32, 1u);
      *(void *)buf = v32;
      sub_100024304((void ***)buf);
      if ((_DWORD)v14)
      {
        unsigned __int16 v15 = (void *)v33 + 3;
        uint64_t v16 = (void *)[NSString stringWithUTF8String:v15];
        [v5 setModelNumber:v16];
      }

      if (qword_1008D60E0 != -1) {
        dispatch_once(&qword_1008D60E0, &stru_100896298);
      }
      uint64_t v17 = off_1008D60D8;
      memset(v31, 0, sizeof(v31));
      sub_10024062C((char *)v31, v33, v34, 0xAAAAAAAAAAAAAAABLL * (((char *)v34 - (char *)v33) >> 3));
      LODWORD(v17) = sub_10022C844((uint64_t)v17, v31, 2u);
      *(void *)buf = v31;
      sub_100024304((void ***)buf);
      if ((_DWORD)v17)
      {
        uint64_t v18 = v33 + 3;
        uint64_t v19 = (void *)[NSString stringWithUTF8String:v18];
        [v5 setManufacturer:v19];
      }

      uint64_t v20 = (os_log_s *)(id)qword_1008F7600;
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        sub_1003CF00C((uint64_t)v8, __p);
        if (v38 >= 0) {
          uint64_t v21 = __p;
        }
        else {
          uint64_t v21 = (void **)__p[0];
        }
        uint64_t v22 = [v5 vendorID];
        uint64_t v23 = [v5 productID];
        uint64_t v24 = (void *)[v5 modelNumber];
        uint64_t v25 = (void *)[v5 manufacturer];
        *(_DWORD *)buf = 136447234;
        *(void *)&uint8_t buf[4] = v21;
        __int128 v40 = 2112;
        uint64_t v41 = v22;
        __int128 v42 = 2112;
        __int128 v43 = v23;
        __int128 v44 = 2112;
        uint64_t v45 = v24;
        __int128 v46 = 2112;
        __int128 v47 = v25;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "updateAACPVersionInfo: cloudDevice for %{public}s vendorId = %@ productId = %@ model = %@ manufacturer = %@ ",  buf,  0x34u);

        if (v38 < 0) {
          operator delete(__p[0]);
        }
      }

      unsigned __int16 v26 = [+[CloudPairing sharedInstance](&OBJC_CLASS___CloudPairing, "sharedInstance") autorelease];
      uint64_t v27 = (void *)[v26 cloudClient];
      v29[0] = _NSConcreteStackBlock;
      v29[1] = 3221225472LL;
      void v29[2] = sub_1003F792C;
      v29[3] = &unk_100896080;
      unint64_t v30 = 0LL;
      [v27 createDeviceRecord:v5 completion:v29];

      uint64_t v28 = v30;
    }

    else
    {
      uint64_t v28 = (os_log_s *)(id)qword_1008F7600;
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        sub_1003CF00C((uint64_t)v8, buf);
        sub_10067ACCC();
      }
    }

    uint64_t v36 = &v33;
    sub_100024304((void ***)&v36);

    goto LABEL_5;
  }

  if (v10)
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "updateAACPVersionInfo: Creating new cloudDevice",  buf,  2u);
  }

  uint64_t v13 = sub_1003EE238((uint64_t)v8);
  uint64_t v5 = (id)objc_claimAutoreleasedReturnValue(v13);
  if (v5) {
    goto LABEL_28;
  }
  if (os_log_type_enabled((os_log_t)qword_1008F7600, OS_LOG_TYPE_ERROR)) {
    sub_10067ACA0();
  }
LABEL_5:
}

  sub_100494D9C(v4);
  sub_100496B78((void *)a1, a2);
  uint64_t v13 = (void *)sub_100494954(v4);
  operator delete(v13);
  unsigned int v10 = 0LL;
LABEL_29:
  sub_100242FAC((uint64_t)v15);
  return v10;
}

  uint64_t v14 = sub_1002E6BF0();
  if ((*(unsigned int (**)(uint64_t))(*(void *)v14 + 144LL))(v14))
  {
    unsigned __int16 v15 = (os_log_s *)qword_1008F7570;
    if (os_log_type_enabled((os_log_t)qword_1008F7570, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Current platform supports enhanced diversity",  buf,  2u);
    }
  }

  reply = xpc_dictionary_create_reply(xdict);
  uint64_t v23 = reply;
  if (reply)
  {
    xpc_dictionary_set_uint64(reply, "kCBMsgArgResult", v21);
    xpc_connection_send_message(*(xpc_connection_t *)(*(void *)(a1 + 72) + 16LL), v23);
    xpc_release(v23);
  }

  return sub_100242FAC((uint64_t)v27);
}

  uint64_t v12 = sub_1002E6E00();
  sub_10002418C(buf, "LE");
  sub_10002418C(__p, "ForceRSSIDetectionCloser");
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint8_t *, void **, int *))(*(void *)v12 + 88LL))(v12, buf, __p, &v61);
  if (v56 < 0) {
    operator delete(__p[0]);
  }
  if (v66 < 0)
  {
    operator delete(*(void **)buf);
    if (!v13) {
      goto LABEL_36;
    }
  }

  else if (!v13)
  {
    goto LABEL_36;
  }

  uint64_t v14 = (os_log_s *)qword_1008F7620;
  if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v61;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Using override value for  ForceRSSIDetectionCloser (%d)",  buf,  8u);
  }
}

      uint64_t v22 = (void *)v14[1];
      if (v22)
      {
        do
        {
          uint64_t v23 = v22;
          uint64_t v22 = (void *)*v22;
        }

        while (v22);
      }

      else
      {
        do
        {
          uint64_t v23 = (void *)v14[2];
          uint64_t v24 = *v23 == (void)v14;
          uint64_t v14 = v23;
        }

        while (!v24);
      }

      uint64_t v14 = v23;
      if (v23 == (void *)(v1 + 2048))
      {
        if ((v15 & 1) == 0) {
          goto LABEL_37;
        }
        break;
      }
    }

    uint64_t v25 = 1;
    *(_BYTE *)(v1 + 1840) = 1;
    unsigned __int16 v26 = (os_log_s *)qword_1008F75B8;
    if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v27 = *(_DWORD *)(v1 + 1960);
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "Restarting scans since the screen is transitioning while there are scan agents with specific usecases fState:%d",  buf,  8u);
    }
  }

  if (*(_DWORD *)(v1 + 1964) != 2 && ((v25 & 1) != 0 || *(_BYTE *)(v1 + 1840))) {
    sub_1005E3C94(v1, 1);
  }
  uint64_t v28 = sub_1002E6BF0();
  if ((*(unsigned int (**)(uint64_t))(*(void *)v28 + 664LL))(v28))
  {
    uint64_t v29 = sub_1002E6E9C();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v29 + 712LL))(v29, 1LL))
    {
      if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_ERROR)) {
        sub_10069C6D8();
      }
    }
  }

  else
  {
    unint64_t v30 = sub_1002E6BF0();
    if (((*(uint64_t (**)(uint64_t))(*(void *)v30 + 624LL))(v30) & 1) != 0
      || (uint64_t v31 = sub_1002E6BF0(), (*(unsigned int (**)(uint64_t))(*(void *)v31 + 648LL))(v31)))
    {
      uint64_t v32 = sub_1002E6BF0();
      uint64_t v33 = (*(uint64_t (**)(uint64_t))(*(void *)v32 + 656LL))(v32);
      uint64_t v34 = (os_log_s *)qword_1008F75B8;
      if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v35 = *(_DWORD *)(v1 + 1960);
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v35;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "Call LP Core statistic VSC scren:%d",  buf,  8u);
      }

      unsigned int v85 = 0LL;
      __int128 v84 = 0LL;
      __int128 v83 = 0LL;
      uint64_t v82 = 0LL;
      uint64_t v81 = 0LL;
      uint64_t v80 = 0LL;
      uint64_t v79 = 0LL;
      uint64_t v78 = 0LL;
      uint64_t v77 = 0LL;
      uint64_t v76 = 0LL;
      uint64_t v75 = 0LL;
      uint64_t v74 = 0LL;
      uint64_t v73 = 0LL;
      unsigned int v72 = 0LL;
      uint64_t v71 = 0LL;
      uint64_t v70 = 0LL;
      uint64_t v69 = 0LL;
      uint64_t v67 = 0LL;
      uint64_t v68 = 0LL;
      uint64_t v65 = 0LL;
      uint64_t v66 = 0LL;
      uint64_t v63 = 0LL;
      uint64_t v64 = 0LL;
      __int128 v61 = 0LL;
      __int128 v62 = 0LL;
      uint64_t v59 = 0LL;
      uint64_t v60 = 0LL;
      uint64_t v58 = 0LL;
      uint64_t v57 = 0;
      uint64_t v36 = sub_1002E6E9C();
      uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, char *, uint64_t *, int *))(*(void *)v36 + 704LL))( v36,  v33,  (char *)&v85 + 4,  &v85,  (char *)&v84 + 4,  &v84,  (char *)&v83 + 4,  &v83,  (char *)&v82 + 4,  &v82,  (char *)&v81 + 4,  &v81,  (char *)&v80 + 4,  &v80,  (char *)&v79 + 4,  &v79,  (char *)&v78 + 4,  &v78,  (char *)&v77 + 4,  &v77,  (char *)&v76 + 4,  &v76,  (char *)&v75 + 4,  &v75,  (char *)&v74 + 4,  &v74,  (char *)&v73 + 4,  &v73,  (char *)&v72 + 4,  &v72,  (char *)&v71 + 4,  &v71,  (char *)&v70 + 4,  &v70,  (char *)&v69 + 4,  &v69,  (char *)&v68 + 4,  &v68,  (char *)&v67 + 4,  &v67,  (char *)&v66 + 4,  &v66,  (char *)&v65 + 4,  &v65,  (char *)&v64 + 4,  &v64,  (char *)&v63 + 4,  &v63,  (char *)&v62 + 4,
              &v62,
              (char *)&v61 + 4,
              &v61,
              (char *)&v60 + 4,
              &v60,
              (char *)&v59 + 4,
              &v59,
              (char *)&v58 + 4,
              &v58,
              &v57);
      uint64_t v38 = (os_log_s *)qword_1008F75B8;
      if (v37 && os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v37;
        _os_log_error_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_ERROR,  "Error reading getLPCoreStats %{bluetooth:OI_STATUS}u",  buf,  8u);
        uint64_t v38 = (os_log_s *)qword_1008F75B8;
      }

      uint64_t v39 = *(void *)(v1 + 2144) + v82;
      *(void *)(v1 + 2144) = v39;
      __int128 v40 = *(void *)(v1 + 2136) + HIDWORD(v81);
      *(void *)(v1 + 2136) = v40;
      uint64_t v41 = *(void *)(v1 + 2160) + v83;
      *(void *)(v1 + 2160) = v41;
      __int128 v42 = *(void *)(v1 + 2152) + HIDWORD(v82);
      *(void *)(v1 + 2152) = v42;
      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134224896;
        *(void *)&uint8_t buf[4] = v39;
        *(_WORD *)&buf[12] = 2048;
        *(void *)&buf[14] = v40;
        *(_WORD *)&buf[22] = 2048;
        *(void *)&uint8_t buf[24] = v41;
        *(_WORD *)uint64_t v91 = 2048;
        *(void *)&v91[2] = v42;
        *(_WORD *)&v91[10] = 1024;
        *(_DWORD *)int v92 = HIDWORD(v80);
        *(_WORD *)&v92[4] = 1024;
        *(_DWORD *)unsigned int v93 = v80;
        *(_WORD *)&v93[4] = 1024;
        *(_DWORD *)char v94 = HIDWORD(v79);
        *(_WORD *)&v94[4] = 1024;
        *(_DWORD *)__int16 v95 = v79;
        *(_WORD *)&v95[4] = 1024;
        *(_DWORD *)uint64_t v96 = HIDWORD(v78);
        *(_WORD *)&v96[4] = 1024;
        *(_DWORD *)int v97 = v78;
        *(_WORD *)&v97[4] = 1024;
        *(_DWORD *)unint64_t v98 = HIDWORD(v77);
        *(_WORD *)&v98[4] = 1024;
        *(_DWORD *)unsigned int v99 = v77;
        *(_WORD *)&v99[4] = 1024;
        *(_DWORD *)__int16 v100 = HIDWORD(v76);
        *(_WORD *)&v100[4] = 1024;
        *(_DWORD *)unsigned __int16 v101 = v76;
        *(_WORD *)&v101[4] = 1024;
        *(_DWORD *)unsigned __int16 v102 = HIDWORD(v75);
        *(_WORD *)&v102[4] = 1024;
        *(_DWORD *)unsigned int v103 = v75;
        *(_WORD *)&v103[4] = 1024;
        *(_DWORD *)v104 = HIDWORD(v74);
        *(_WORD *)&v104[4] = 1024;
        *(_DWORD *)int v105 = v74;
        *(_WORD *)&v105[4] = 1024;
        *(_DWORD *)uint64_t v106 = HIDWORD(v73);
        *(_WORD *)&v106[4] = 1024;
        *(_DWORD *)uint64_t v107 = v73;
        *(_WORD *)&v107[4] = 1024;
        v108 = HIDWORD(v72);
        uint64_t v109 = 1024;
        v110 = v72;
        v111 = 1024;
        v112 = HIDWORD(v71);
        v113 = 1024;
        v114 = v71;
        v115 = 1024;
        v116 = HIDWORD(v70);
        v117 = 1024;
        v118 = v70;
        v119 = 1024;
        v120 = HIDWORD(v69);
        v121 = 1024;
        v122 = v69;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "LEStats: BMC:%lld LP:%lld, MC: %lld  %lld  ]  RxL:%05d:%05d:%05d  EAdv:%04d:%04d:%04d LeLR:%04d:%04d:%04d Aux: %04d:%04d:%04d Arsp:%04d:%04d:%04d cd:%04d:%04d:%04d aCrc:%05d:%05d:%05d def:%04d:%04d:%04d",  buf,  0xBAu);
        uint64_t v38 = (os_log_s *)qword_1008F75B8;
      }

      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67114752;
        *(_DWORD *)&uint8_t buf[4] = HIDWORD(v68);
        *(_WORD *)&buf[8] = 1024;
        *(_DWORD *)&buf[10] = v68;
        *(_WORD *)&buf[14] = 1024;
        *(_DWORD *)&uint8_t buf[16] = HIDWORD(v67);
        *(_WORD *)&buf[20] = 1024;
        *(_DWORD *)&buf[22] = v67;
        *(_WORD *)&buf[26] = 1024;
        *(_DWORD *)&buf[28] = HIDWORD(v66);
        *(_WORD *)uint64_t v91 = 1024;
        *(_DWORD *)&v91[2] = v66;
        *(_WORD *)&v91[6] = 1024;
        *(_DWORD *)&v91[8] = HIDWORD(v65);
        *(_WORD *)int v92 = 1024;
        *(_DWORD *)&v92[2] = v65;
        *(_WORD *)unsigned int v93 = 1024;
        *(_DWORD *)&v93[2] = HIDWORD(v64);
        *(_WORD *)char v94 = 1024;
        *(_DWORD *)&v94[2] = v64;
        *(_WORD *)__int16 v95 = 1024;
        *(_DWORD *)&v95[2] = HIDWORD(v63);
        *(_WORD *)uint64_t v96 = 1024;
        *(_DWORD *)&v96[2] = v63;
        *(_WORD *)int v97 = 1024;
        *(_DWORD *)&v97[2] = HIDWORD(v62);
        *(_WORD *)unint64_t v98 = 1024;
        *(_DWORD *)&v98[2] = v62;
        *(_WORD *)unsigned int v99 = 1024;
        *(_DWORD *)&v99[2] = HIDWORD(v61);
        *(_WORD *)__int16 v100 = 1024;
        *(_DWORD *)&v100[2] = v61;
        *(_WORD *)unsigned __int16 v101 = 1024;
        *(_DWORD *)&v101[2] = HIDWORD(v60);
        *(_WORD *)unsigned __int16 v102 = 1024;
        *(_DWORD *)&v102[2] = v60;
        *(_WORD *)unsigned int v103 = 1024;
        *(_DWORD *)&v103[2] = HIDWORD(v59);
        *(_WORD *)v104 = 1024;
        *(_DWORD *)&v104[2] = v59;
        *(_WORD *)int v105 = 1024;
        *(_DWORD *)&v105[2] = HIDWORD(v58);
        *(_WORD *)uint64_t v106 = 1024;
        *(_DWORD *)&v106[2] = v58;
        *(_WORD *)uint64_t v107 = 1024;
        *(_DWORD *)&v107[2] = v57;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "LEStats2: Rxa=%04d tSr=%04d tASr=%04d rSr=%04d tCi=%04d tCr=%04d rsRsp=%04d rsi=%04d rcr=%04d nba=%04d:%04d:%0 4d:%04d tot:%04d:%04d cden=%04d:%04d:%04d:%04d totAdv=%04d:%04d:%04d:%04d",  buf,  0x8Cu);
        uint64_t v38 = (os_log_s *)qword_1008F75B8;
      }

      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v45 = *(_DWORD *)(v1 + 2748);
        __int128 v46 = *(_DWORD *)(v1 + 2752);
        __int128 v47 = *(_DWORD *)(v1 + 2756);
        *(_DWORD *)buf = 67110400;
        *(_DWORD *)&uint8_t buf[4] = v45;
        *(_WORD *)&buf[8] = 1024;
        *(_DWORD *)&buf[10] = v46;
        *(_WORD *)&buf[14] = 1024;
        *(_DWORD *)&uint8_t buf[16] = v47;
        *(_WORD *)&buf[20] = 1024;
        *(_DWORD *)&buf[22] = v83 + v45;
        *(_WORD *)&buf[26] = 1024;
        *(_DWORD *)&buf[28] = v82 + v46;
        *(_WORD *)uint64_t v91 = 1024;
        *(_DWORD *)&v91[2] = v85 + v47;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "BLEScanStat: MainCoreELNAOn [numAdvs, numAdvsBeforeFiltering, totalTime] [%d, %d, %d] -> [%d, %d, %d]",  buf,  0x26u);
        uint64_t v38 = (os_log_s *)qword_1008F75B8;
      }

      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
      {
        __int128 v48 = *(_DWORD *)(v1 + 2760);
        __int128 v49 = *(_DWORD *)(v1 + 2764);
        __int128 v50 = *(_DWORD *)(v1 + 2768);
        *(_DWORD *)buf = 67110400;
        *(_DWORD *)&uint8_t buf[4] = v48;
        *(_WORD *)&buf[8] = 1024;
        *(_DWORD *)&buf[10] = v49;
        *(_WORD *)&buf[14] = 1024;
        *(_DWORD *)&uint8_t buf[16] = v50;
        *(_WORD *)&buf[20] = 1024;
        *(_DWORD *)&buf[22] = HIDWORD(v82) + v48;
        *(_WORD *)&buf[26] = 1024;
        *(_DWORD *)&buf[28] = HIDWORD(v81) + v49;
        *(_WORD *)uint64_t v91 = 1024;
        *(_DWORD *)&v91[2] = HIDWORD(v84) + v50;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "BLEScanStat: MainCoreELNABypass [numAdvs, numAdvsBeforeFiltering, totalTime] [%d, %d, %d] -> [%d, %d, %d]",  buf,  0x26u);
        uint64_t v38 = (os_log_s *)qword_1008F75B8;
      }

      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
      {
        __int128 v51 = *(_DWORD *)(v1 + 2772);
        __int128 v52 = *(_DWORD *)(v1 + 2776);
        uint64_t v53 = *(_DWORD *)(v1 + 2780);
        *(_DWORD *)buf = 67110400;
        *(_DWORD *)&uint8_t buf[4] = v51;
        *(_WORD *)&buf[8] = 1024;
        *(_DWORD *)&buf[10] = v52;
        *(_WORD *)&buf[14] = 1024;
        *(_DWORD *)&uint8_t buf[16] = v53;
        *(_WORD *)&buf[20] = 1024;
        *(_DWORD *)&buf[22] = v59 + v51;
        *(_WORD *)&buf[26] = 1024;
        *(_DWORD *)&buf[28] = v58 + v52;
        *(_WORD *)uint64_t v91 = 1024;
        *(_DWORD *)&v91[2] = v62 + v53;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "BLEScanStat: ScanCoreELNAOn [numAdvs, numAdvsBeforeFiltering, totalTime] [%d, %d, %d] -> [%d, %d, %d]",  buf,  0x26u);
        uint64_t v38 = (os_log_s *)qword_1008F75B8;
      }

      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v54 = *(_DWORD *)(v1 + 2784);
        uint64_t v55 = *(_DWORD *)(v1 + 2788);
        uint64_t v56 = *(_DWORD *)(v1 + 2792);
        *(_DWORD *)buf = 67110400;
        *(_DWORD *)&uint8_t buf[4] = v54;
        *(_WORD *)&buf[8] = 1024;
        *(_DWORD *)&buf[10] = v55;
        *(_WORD *)&buf[14] = 1024;
        *(_DWORD *)&uint8_t buf[16] = v56;
        *(_WORD *)&buf[20] = 1024;
        *(_DWORD *)&buf[22] = HIDWORD(v58) + v54;
        *(_WORD *)&buf[26] = 1024;
        *(_DWORD *)&buf[28] = v57 + v55;
        *(_WORD *)uint64_t v91 = 1024;
        *(_DWORD *)&v91[2] = HIDWORD(v61) + v56;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "BLEScanStat: ScanCoreELNABypass [numAdvs, numAdvsBeforeFiltering, totalTime] [%d, %d, %d] -> [%d, %d, %d]",  buf,  0x26u);
      }

      *(_DWORD *)(v1 + 2748) += v83;
      *(_DWORD *)(v1 + 2752) += v82;
      *(_DWORD *)(v1 + 2756) += v85;
      *(_DWORD *)(v1 + 2760) += HIDWORD(v82);
      *(_DWORD *)(v1 + 2764) += HIDWORD(v81);
      *(_DWORD *)(v1 + 2768) += HIDWORD(v84);
      *(_DWORD *)(v1 + 2772) += v59;
      *(_DWORD *)(v1 + 2776) += v58;
      *(_DWORD *)(v1 + 2780) += v62;
      *(_DWORD *)(v1 + 2784) += HIDWORD(v58);
      *(_DWORD *)(v1 + 2788) += v57;
      *(_DWORD *)(v1 + 2792) += HIDWORD(v61);
    }
  }

  if (qword_1008D60B0 != -1) {
    dispatch_once(&qword_1008D60B0, &stru_1008A45B8);
  }
  sub_1001FC5E4((uint64_t)off_1008D60A8 + 80, a1);
  *(void *)(a1 + 3744) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  *(_BYTE *)(a1 + 40) = 0;
  return a1;
}

        objc_autoreleasePoolPop(v12);
        unsigned int v10 = (char *)v10 + 1;
      }

      while (v8 != v10);
      int v8 = [v7 countByEnumeratingWithState:&v30 objects:v38 count:16];
    }

    while (v8);
  }

  uint64_t v23 = *(unsigned __int8 *)(a1 + 424);
  uint64_t v24 = (os_log_s *)qword_1008F75A8;
  uint64_t v25 = os_log_type_enabled((os_log_t)qword_1008F75A8, OS_LOG_TYPE_DEFAULT);
  if (v23)
  {
    if (v25)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "CloudPairing is Enabled", buf, 2u);
    }

    unsigned __int16 v26 = *(void (****)(void, void *))(a1 + 432);
    if (v26) {
      goto LABEL_37;
    }
    uint64_t v27 = (os_log_s *)qword_1008F75A8;
    if (os_log_type_enabled((os_log_t)qword_1008F75A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Initialize CloudPairing", buf, 2u);
    }

    unsigned __int16 v26 = (void (***)(void, void *))sub_1002E8FF0();
    *(void *)(a1 + 432) = v26;
    if (v26) {
LABEL_37:
    }
      (**v26)(v26, v29);
  }

  else if (v25)
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "CloudPairing is Disabled", buf, 2u);
  }

  sub_100242FAC((uint64_t)v34);
}

uint64_t sub_1000F2CB4(__int16 a1, uint64_t a2)
{
  unsigned __int16 v9 = 0;
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  uint64_t v3 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), &v9);
  if (!v3) {
    return 134LL;
  }
  uint64_t v4 = v9 - 1LL;
  if (v3[v4] != 59) {
    return 134LL;
  }
  v3[v4] = 0;
  if (*v3 == 62)
  {
    LODWORD(v6) = 11;
    WORD2(v6) = a1;
    LOWORD(v7) = sub_1001F46A4(v3 + 1);
  }

  else
  {
    LODWORD(v6) = 10;
    WORD2(v6) = a1;
    uint64_t v7 = v3;
  }

  (*(void (**)(uint64_t *))(qword_1008E1E50 + 1480))(&v6);
  return 0LL;
}

uint64_t sub_1000F2D6C(unsigned __int16 a1, uint64_t a2)
{
  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 1) == 0) {
    return 2701LL;
  }
  int v8 = 0;
  uint64_t v9 = 0LL;
  int v6 = 20;
  uint64_t v7 = a1;
  uint64_t v3 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (!v3) {
    return 134LL;
  }
  int v4 = *v3;
  if (v4 == 48)
  {
    char v5 = 0;
    goto LABEL_9;
  }

  if (v4 != 49) {
    return 134LL;
  }
  char v5 = 1;
LABEL_9:
  BYTE4(v7) = v5;
  (*(void (**)(int *))(qword_1008E1E50 + 1480))(&v6);
  return 0LL;
}

uint64_t sub_1000F2E10(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = a1;
  uint64_t v4 = 0LL;
  uint64_t v27 = 0LL;
  uint64_t v28 = 0LL;
  uint64_t v29 = 0LL;
  v26[0] = 0LL;
  v26[1] = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v4) != (_DWORD)a1)
  {
    v4 += 184LL;
    if (v4 == 1472) {
      return 1802LL;
    }
  }

  if (*(_BYTE *)(qword_1008E1E50 + 1511))
  {
    (*(void (**)(uint64_t, uint64_t))(qword_1008E1E50 + 1488))(a1, a2);
    if (!*(_DWORD *)a2) {
      goto LABEL_9;
    }
    return 412LL;
  }

  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 1) == 0) {
    return 2701LL;
  }
  if (*(_DWORD *)a2 == 2)
  {
    LODWORD(v27) = 15;
    WORD2(v27) = a1;
    uint64_t v16 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
    if (!v16) {
      return 134LL;
    }
    int v17 = sub_1001F46A4(v16);
    LODWORD(v28) = v17;
    if ((*(_BYTE *)(qword_1008E1E50 + 1508) & 0x80) != 0 || v17 <= 4)
    {
      (*(void (**)(uint64_t *))(qword_1008E1E50 + 1480))(&v27);
      return 0LL;
    }

    return 2701LL;
  }

  if (*(_DWORD *)a2) {
    return 2701LL;
  }
  uint64_t v5 = sub_1001F48C8((uint64_t)v26, 0x1DuLL);
  if ((_DWORD)v5) {
    return v5;
  }
  uint64_t v13 = sub_1001F5F28((uint64_t)v26, (uint64_t)"\r\n+CHLD: (", v7, v8, v9, v10, v11, v12, v25);
  if ((_DWORD)v13) {
    goto LABEL_24;
  }
  uint64_t v14 = qword_1008E1E50;
  if ((*(_BYTE *)(qword_1008E1E50 + 1510) & 1) != 0)
  {
    uint64_t v13 = sub_1001F4A7C((uint64_t)v26, "0,");
    if ((_DWORD)v13) {
      goto LABEL_24;
    }
    uint64_t v14 = qword_1008E1E50;
  }

  if ((*(_WORD *)(v14 + 1508) & 0x80) != 0) {
    unsigned __int16 v15 = "1,1x,2,2x";
  }
  else {
    unsigned __int16 v15 = "1,2";
  }
  uint64_t v13 = sub_1001F4A7C((uint64_t)v26, v15);
  if ((_DWORD)v13) {
    goto LABEL_24;
  }
  char v18 = *(_BYTE *)(qword_1008E1E50 + 1510);
  if ((v18 & 8) != 0)
  {
    uint64_t v13 = sub_1001F4A7C((uint64_t)v26, ",3");
    if (!(_DWORD)v13)
    {
      char v18 = *(_BYTE *)(qword_1008E1E50 + 1510);
      goto LABEL_34;
    }

uint64_t sub_1000F3074(unsigned __int16 a1)
{
  int v4 = 0;
  uint64_t v5 = 0LL;
  int v2 = 9;
  uint64_t v3 = a1;
  (*(void (**)(int *))(qword_1008E1E50 + 1480))(&v2);
  return 0LL;
}

uint64_t sub_1000F30B8(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a1;
  if (!*(_BYTE *)(qword_1008E1E50 + 1511))
  {
    v20[0] = 0LL;
    v20[1] = 0LL;
    if (*a2)
    {
      if (*a2 != 1) {
        return 2701LL;
      }
      if ((*(_WORD *)(qword_1008E1E50 + 1508) & 1) != 0) {
        size_t v3 = 23LL;
      }
      else {
        size_t v3 = 21LL;
      }
      uint64_t v10 = sub_1001F48C8((uint64_t)v20, v3);
      if ((_DWORD)v10) {
        goto LABEL_28;
      }
      if (*(_BYTE *)(qword_1008E1E50 + 1513)) {
        uint64_t v11 = 49LL;
      }
      else {
        uint64_t v11 = 48LL;
      }
      if ((*(_WORD *)(qword_1008E1E50 + 1508) & 1) != 0) {
        uint64_t v12 = sub_1001F5F28((uint64_t)v20, (uint64_t)"\r\n+CIND: %c,%c,%d,%d,%d,%c,%d\r\n", v4, v5, v6, v7, v8, v9, v11);
      }
      else {
        uint64_t v12 = sub_1001F5F28((uint64_t)v20, (uint64_t)"\r\n+CIND: %c,%c,%d,%d,%d,%c\r\n", v4, v5, v6, v7, v8, v9, v11);
      }
      uint64_t v10 = v12;
      if ((_DWORD)v12)
      {
        sub_1001F4914((uint64_t)v20);
LABEL_28:
        sub_1000F1FF0(v2, 4u, v10);
        return 412LL;
      }

      uint64_t v19 = (const char *)sub_1001F5F50((uint64_t)v20);
      size_t v16 = (unsigned __int16)strlen(v19);
      LODWORD(a1) = v2;
      unsigned __int16 v15 = (char *)v19;
      int v17 = 1;
    }

    else
    {
      __int16 v13 = *(_WORD *)(qword_1008E1E50 + 1508);
      if ((v13 & 0xC0) == 0 || (v13 & 1) == 0) {
        unsigned __int16 v15 = "\r\n"
      }
              "+CIND: (service,(0-1)),(call,(0-1)),(callsetup,(0-3)),(battchg,(0-5)),(signal,(0-5)),("
              "roam,(0-1)),(callheld,(0-1))\r\n";
      else {
        unsigned __int16 v15 = "\r\n"
      }
              "+CIND: (service,(0-1)),(call,(0-1)),(callsetup,(0-3)),(battchg,(0-5)),(signal,(0-5)),("
              "roam,(0-1)),(callheld,(0-2))\r\n";
      size_t v16 = 132LL;
      int v17 = 0;
    }

    uint64_t v10 = sub_1000EF214(a1, 4, v15, v16, v17);
    if (!(_DWORD)v10)
    {
      uint64_t v10 = sub_1000EF604(v2, 0, 0LL);
      if (!(_DWORD)v10) {
        return 412LL;
      }
    }

    goto LABEL_28;
  }

  (*(void (**)(uint64_t))(qword_1008E1E50 + 1488))(a1);
  return 412LL;
}

uint64_t sub_1000F326C(unsigned int a1, uint64_t a2)
{
  size_t v3 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (!v3) {
    return 134LL;
  }
  uint64_t v4 = v3;
  if ((sub_1000EF480(a1) & 4) == 0) {
    return 2701LL;
  }
  int v6 = *v4;
  if (v6 == 48)
  {
    uint64_t v8 = 0LL;
    while (*(unsigned __int16 *)(qword_1008E1E50 + v8) != a1)
    {
      v8 += 184LL;
      if (v8 == 1472) {
        goto LABEL_17;
      }
    }

    *(_DWORD *)(qword_1008E1E50 + v8 + 132) = 0;
    goto LABEL_17;
  }

  if (v6 != 49) {
    return 134LL;
  }
  uint64_t v7 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v7) != a1)
  {
    v7 += 184LL;
    if (v7 == 1472) {
      goto LABEL_17;
    }
  }

  *(_DWORD *)(qword_1008E1E50 + v7 + 132) = 1;
LABEL_17:
  uint64_t v9 = sub_1000EF604(a1, 0, 0LL);
  if ((_DWORD)v9) {
    sub_1000F1FF0(a1, 1u, v9);
  }
  return 412LL;
}

uint64_t sub_1000F3364(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = a1;
  uint64_t v4 = 0LL;
  uint64_t v5 = qword_1008E1E50;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v4) != (_DWORD)a1)
  {
    v4 += 184LL;
    if (v4 == 1472) {
      return 1802LL;
    }
  }

  if (*(_BYTE *)(qword_1008E1E50 + 1511))
  {
    uint64_t v7 = 0LL;
    while (*(unsigned __int16 *)(qword_1008E1E50 + v7) != (_DWORD)a1)
    {
      v7 += 184LL;
      if (v7 == 1472) {
        goto LABEL_36;
      }
    }

    *(_DWORD *)(qword_1008E1E50 + v7 + 140) = 2;
LABEL_36:
    (*(void (**)(uint64_t, uint64_t))(v5 + 1488))(a1, a2);
    if (*(_BYTE *)(qword_1008E1E50 + v4 + 12)
      && ((*(_WORD *)(qword_1008E1E50 + 1508) & 1) == 0 || (sub_1000EF480(v3) & 2) == 0))
    {
      sub_1000F4E80(v3);
    }

    return 412LL;
  }

  uint64_t v8 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (!v8)
  {
LABEL_29:
    if (*(_BYTE *)(qword_1008E1E50 + v4 + 12)
      && ((*(_WORD *)(qword_1008E1E50 + 1508) & 1) == 0 || (sub_1000EF480(v3) & 2) == 0))
    {
      sub_1000F4E80(v3);
    }

    uint64_t v13 = sub_1000EF604(v3, 0, 0LL);
    if ((_DWORD)v13) {
      sub_1000F1FF0(v3, 1u, v13);
    }
    return 412LL;
  }

  int v9 = 0;
  while (v9 != 3)
  {
    if (!v9 && *v8 != 51) {
      return 134LL;
    }
LABEL_28:
    ++v9;
    uint64_t v8 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
    if (!v8) {
      goto LABEL_29;
    }
  }

  int v10 = *v8;
  if (v10 == 48)
  {
    uint64_t v12 = 0LL;
    while (*(unsigned __int16 *)(qword_1008E1E50 + v12) != v3)
    {
      v12 += 184LL;
      if (v12 == 1472) {
        goto LABEL_28;
      }
    }

    *(_DWORD *)(qword_1008E1E50 + v12 + 140) = 0;
    goto LABEL_28;
  }

  if (v10 == 49)
  {
    uint64_t v11 = 0LL;
    while (*(unsigned __int16 *)(qword_1008E1E50 + v11) != v3)
    {
      v11 += 184LL;
      if (v11 == 1472) {
        goto LABEL_28;
      }
    }

    *(_DWORD *)(qword_1008E1E50 + v11 + 140) = 1;
    goto LABEL_28;
  }

  return 101LL;
}

uint64_t sub_1000F3570(__int16 a1, uint64_t a2)
{
  if ((*(_BYTE *)(qword_1008E1E50 + 1508) & 0x10) != 0)
  {
    LODWORD(v12[0]) = 14;
    WORD2(v12[0]) = a1;
    (*(void (**)(void *))(qword_1008E1E50 + 1480))(v12);
    return 0LL;
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Input request not supported, rejecting %d",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  *(unsigned __int16 *)(qword_1008E1E50 + 1508));
      int v10 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    return 2701LL;
  }

uint64_t sub_1000F363C(unsigned __int16 a1)
{
  int v4 = 0;
  uint64_t v5 = 0LL;
  int v2 = 12;
  uint64_t v3 = a1;
  (*(void (**)(int *))(qword_1008E1E50 + 1480))(&v2);
  return 0LL;
}

uint64_t sub_1000F3680(__int16 a1, uint64_t a2)
{
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  if ((*(_BYTE *)(qword_1008E1E50 + 1508) & 4) != 0)
  {
    LODWORD(v15) = 13;
    WORD2(v15) = a1;
    uint64_t v11 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
    if (v11)
    {
      int v12 = *v11;
      if (v12 == 49)
      {
        char v13 = 1;
        goto LABEL_12;
      }

      if (v12 == 48)
      {
        char v13 = 0;
LABEL_12:
        LOBYTE(v16) = v13;
        (*(void (**)(uint64_t *))(qword_1008E1E50 + 1480))(&v15);
        return 0LL;
      }
    }

    return 134LL;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Voice recognition not supported, rejecting", v2, v3, v4, v5, v6, v7, v8, v14);
    uint64_t v9 = (os_log_s *)sub_100086554(0x10u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  return 2701LL;
}

uint64_t sub_1000F3764(__int16 a1, uint64_t a2)
{
  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 2) == 0) {
    return 2701LL;
  }
  uint64_t v4 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (!v4) {
    return 101LL;
  }
  memset(v5, 0, sizeof(v5));
  if (*v4 != 48) {
    return 101LL;
  }
  LODWORD(v5[0]) = 16;
  WORD2(v5[0]) = a1;
  (*(void (**)(void *))(qword_1008E1E50 + 1480))(v5);
  return 0LL;
}

uint64_t sub_1000F37F4(unsigned int a1, uint64_t a2)
{
  if (*(_DWORD *)a2)
  {
    uint64_t v3 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
    if (v3)
    {
      uint64_t v7 = 0LL;
      uint64_t v8 = 0LL;
      uint64_t v9 = 0LL;
      int v4 = *v3;
      if ((v4 - 48) < 0xA || v4 == 35 || v4 == 42 || (v4 - 65) <= 3)
      {
        LODWORD(v7) = 19;
        WORD2(v7) = a1;
        LOBYTE(v8) = v4;
        (*(void (**)(uint64_t *))(qword_1008E1E50 + 1480))(&v7);
        return 0LL;
      }

      else
      {
        return 101LL;
      }
    }

    else
    {
      return 134LL;
    }
  }

  else
  {
    uint64_t v6 = sub_1000EF604(a1, 0, 0LL);
    if ((_DWORD)v6) {
      sub_1000F1FF0(a1, 1u, v6);
    }
    return 412LL;
  }

uint64_t sub_1000F38D0(unsigned __int16 a1, uint64_t a2)
{
  int v6 = 0;
  uint64_t v7 = 0LL;
  int v4 = 17;
  uint64_t v5 = a1;
  uint64_t v2 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (!v2) {
    return 134LL;
  }
  BYTE4(v5) = sub_1001F46A4(v2);
  (*(void (**)(int *))(qword_1008E1E50 + 1480))(&v4);
  return 0LL;
}

uint64_t sub_1000F393C(unsigned __int16 a1, uint64_t a2)
{
  int v6 = 0;
  uint64_t v7 = 0LL;
  int v4 = 18;
  uint64_t v5 = a1;
  uint64_t v2 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (!v2) {
    return 134LL;
  }
  BYTE4(v5) = sub_1001F46A4(v2);
  (*(void (**)(int *))(qword_1008E1E50 + 1480))(&v4);
  return 0LL;
}

uint64_t sub_1000F39A8(__int16 a1, uint64_t a2)
{
  uint64_t v5 = 0LL;
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  if (*(_DWORD *)a2 == 2)
  {
    uint64_t v3 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
    if (v3)
    {
      LODWORD(v5) = 26;
      WORD2(v5) = a1;
      LODWORD(v6) = sub_1001F46A4(v3);
      goto LABEL_6;
    }

    return 134LL;
  }

  else
  {
    if (*(_DWORD *)a2 == 1)
    {
      LODWORD(v5) = 25;
      WORD2(v5) = a1;
LABEL_6:
      (*(void (**)(uint64_t *))(qword_1008E1E50 + 1480))(&v5);
      return 0LL;
    }

    return 2701LL;
  }

uint64_t sub_1000F3A4C(unsigned __int16 a1, _DWORD *a2)
{
  if (*a2 != 2) {
    return 2701LL;
  }
  int v5 = 0;
  uint64_t v6 = 0LL;
  int v3 = 24;
  uint64_t v4 = a1;
  (*(void (**)(int *))(qword_1008E1E50 + 1480))(&v3);
  return 0LL;
}

uint64_t sub_1000F3AA4(unsigned __int16 a1)
{
  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0x40) == 0) {
    return 2701LL;
  }
  int v4 = 0;
  uint64_t v5 = 0LL;
  int v2 = 22;
  uint64_t v3 = a1;
  (*(void (**)(int *))(qword_1008E1E50 + 1480))(&v2);
  return 0LL;
}

uint64_t sub_1000F3AF8(unsigned int a1, uint64_t a2)
{
  if (*(_DWORD *)a2 == 2)
  {
    uint64_t v5 = (unsigned __int8 **)(a2 + 24);
    uint64_t v6 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
    if (v6
      && sub_1001F46A4(v6) == 3
      && (uint64_t v7 = sub_1000D5294(a2, v5, 0LL)) != 0LL
      && !sub_1001F46A4(v7))
    {
      uint64_t v8 = sub_1000EF604(a1, 0, 0LL);
      if ((_DWORD)v8) {
        sub_1000F1FF0(a1, 1u, v8);
      }
      return 412LL;
    }

    else
    {
      return 134LL;
    }
  }

  else if (*(_DWORD *)a2 == 1)
  {
    int v11 = 0;
    uint64_t v12 = 0LL;
    int v9 = 23;
    uint64_t v10 = (unsigned __int16)a1;
    (*(void (**)(int *))(qword_1008E1E50 + 1480))(&v9);
    return 0LL;
  }

  else
  {
    return 2701LL;
  }

uint64_t sub_1000F3BE4(unsigned int a1, uint64_t a2)
{
  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0x100) != 0)
  {
    int v4 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
    if (!v4) {
      return 134LL;
    }
    int v5 = *v4;
    if (v5 == 48)
    {
      uint64_t v8 = 0LL;
      while (*(unsigned __int16 *)(qword_1008E1E50 + v8) != a1)
      {
        v8 += 184LL;
        if (v8 == 1472) {
          goto LABEL_18;
        }
      }

      *(_DWORD *)(qword_1008E1E50 + v8 + 136) = 0;
    }

    else
    {
      if (v5 != 49) {
        return 101LL;
      }
      uint64_t v6 = 0LL;
      while (*(unsigned __int16 *)(qword_1008E1E50 + v6) != a1)
      {
        v6 += 184LL;
        if (v6 == 1472) {
          goto LABEL_18;
        }
      }

      *(_DWORD *)(qword_1008E1E50 + v6 + 136) = 1;
    }

uint64_t sub_1000F3CE4(unsigned int a1, _DWORD *a2)
{
  if (*a2 != 2) {
    return 2701LL;
  }
  v20[0] = 0LL;
  v20[1] = 0LL;
  uint64_t v3 = sub_1001F48C8((uint64_t)v20, 0x10uLL);
  if (!(_DWORD)v3)
  {
    uint64_t v11 = sub_1001F5F28( (uint64_t)v20,  (uint64_t)"\r\n+CSQ: %d,%d\r\n",  v4,  v5,  v6,  v7,  v8,  v9,  algn_1006BC28F[*(unsigned __int8 *)(qword_1008E1E50 + 1518)]);
    if ((_DWORD)v11)
    {
      uint64_t v12 = v11;
      sub_1001F4914((uint64_t)v20);
      unsigned int v13 = a1;
      unsigned int v14 = 25;
      uint64_t v15 = v12;
    }

    else
    {
      uint64_t v16 = (char *)sub_1001F5F50((uint64_t)v20);
      unsigned __int16 v17 = strlen(v16);
      uint64_t v15 = sub_1000EF214(a1, 25, v16, v17, 1);
      if ((_DWORD)v15)
      {
        unsigned int v13 = a1;
        unsigned int v14 = 25;
      }

      else
      {
        uint64_t v18 = sub_1000EF604(a1, 0, v15);
        if (!(_DWORD)v18) {
          return 412LL;
        }
        uint64_t v15 = v18;
        unsigned int v13 = a1;
        unsigned int v14 = 1;
      }
    }

    sub_1000F1FF0(v13, v14, v15);
    return 412LL;
  }

  uint64_t v10 = v3;
  sub_1000F1FF0(a1, 0x19u, v3);
  return v10;
}

uint64_t sub_1000F3DFC(unsigned int a1, _DWORD *a2)
{
  if (*a2 != 2) {
    return 2701LL;
  }
  v22[0] = 0LL;
  v22[1] = 0LL;
  uint64_t v3 = sub_1001F48C8((uint64_t)v22, 0xDuLL);
  if (!(_DWORD)v3)
  {
    if (*(_BYTE *)(qword_1008E1E50 + 1514))
    {
      uint64_t v11 = 4LL;
    }

    else
    {
      unsigned int v12 = *(unsigned __int8 *)(qword_1008E1E50 + 1515) - 1;
      if (v12 > 2) {
        uint64_t v11 = 0LL;
      }
      else {
        uint64_t v11 = dword_1006BC298[(char)v12];
      }
    }

    uint64_t v13 = sub_1001F5F28((uint64_t)v22, (uint64_t)"\r\n+CPAS: %d\r\n", v4, v5, v6, v7, v8, v9, v11);
    if ((_DWORD)v13)
    {
      uint64_t v14 = v13;
      sub_1001F4914((uint64_t)v22);
      unsigned int v15 = a1;
      unsigned int v16 = 25;
      uint64_t v17 = v14;
    }

    else
    {
      uint64_t v18 = (char *)sub_1001F5F50((uint64_t)v22);
      unsigned __int16 v19 = strlen(v18);
      uint64_t v17 = sub_1000EF214(a1, 25, v18, v19, 1);
      if ((_DWORD)v17)
      {
        unsigned int v15 = a1;
        unsigned int v16 = 25;
      }

      else
      {
        uint64_t v20 = sub_1000EF604(a1, 0, v17);
        if (!(_DWORD)v20) {
          return 412LL;
        }
        uint64_t v17 = v20;
        unsigned int v15 = a1;
        unsigned int v16 = 1;
      }
    }

    sub_1000F1FF0(v15, v16, v17);
    return 412LL;
  }

  uint64_t v10 = v3;
  sub_1000F1FF0(a1, 0x19u, v3);
  return v10;
}

uint64_t sub_1000F3F38(unsigned int a1, _DWORD *a2)
{
  if (*a2 != 1) {
    return 2701LL;
  }
  v21[0] = 0LL;
  v21[1] = 0LL;
  uint64_t v3 = sub_1001F48C8((uint64_t)v21, 0xFuLL);
  if (!(_DWORD)v3)
  {
    if (*(_BYTE *)(qword_1008E1E50 + 1513))
    {
      if (*(_BYTE *)(qword_1008E1E50 + 1519)) {
        uint64_t v11 = 5LL;
      }
      else {
        uint64_t v11 = 1LL;
      }
    }

    else
    {
      uint64_t v11 = 0LL;
    }

    uint64_t v12 = sub_1001F5F28((uint64_t)v21, (uint64_t)"\r\n+CREG: 1,%d\r\n", v4, v5, v6, v7, v8, v9, v11);
    if ((_DWORD)v12)
    {
      uint64_t v13 = v12;
      sub_1001F4914((uint64_t)v21);
      unsigned int v14 = a1;
      unsigned int v15 = 25;
      uint64_t v16 = v13;
    }

    else
    {
      uint64_t v17 = (char *)sub_1001F5F50((uint64_t)v21);
      unsigned __int16 v18 = strlen(v17);
      uint64_t v16 = sub_1000EF214(a1, 25, v17, v18, 1);
      if ((_DWORD)v16)
      {
        unsigned int v14 = a1;
        unsigned int v15 = 25;
      }

      else
      {
        uint64_t v19 = sub_1000EF604(a1, 0, v16);
        if (!(_DWORD)v19) {
          return 412LL;
        }
        uint64_t v16 = v19;
        unsigned int v14 = a1;
        unsigned int v15 = 1;
      }
    }

    sub_1000F1FF0(v14, v15, v16);
    return 412LL;
  }

  uint64_t v10 = v3;
  sub_1000F1FF0(a1, 0x19u, v3);
  return v10;
}

uint64_t sub_1000F405C(int a1)
{
  uint64_t v1 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v1) != a1)
  {
    v1 += 184LL;
    if (v1 == 1472) {
      return 1802LL;
    }
  }

  uint64_t v4 = 0LL;
  uint64_t v5 = 0LL;
  uint64_t v6 = 0LL;
  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0x200) == 0) {
    return 2701LL;
  }
  uint64_t v3 = qword_1008E1E50 + v1;
  if ((*(_WORD *)(v3 + 86) & 0x80) == 0) {
    return 2701LL;
  }
  LODWORD(v4) = 4;
  WORD2(v4) = a1;
  LODWORD(v5) = *(_DWORD *)(v3 + 164);
  (*(void (**)(uint64_t *))(qword_1008E1E50 + 1480))(&v4);
  return 412LL;
}

uint64_t sub_1000F40F4(unsigned int a1, uint64_t a2)
{
  uint64_t v3 = 0LL;
  uint64_t v4 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v3) != a1)
  {
    ++v4;
    v3 += 184LL;
    if (v4 == 8) {
      goto LABEL_6;
    }
  }

  if (v4 == 8)
  {
LABEL_6:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Device not connected", v5, v6, v7, v8, v9, v10, v11, v19);
      uint64_t v12 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    return 1802LL;
  }

  if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0x200) == 0 || (*(_WORD *)(qword_1008E1E50 + v3 + 86) & 0x80) == 0) {
    return 2701LL;
  }
  unsigned int v14 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  int v15 = sub_1001F46A4(v14);
  if (v15 != *(_DWORD *)(qword_1008E1E50 + v3 + 164))
  {
    sub_1000F252C(v4, 1810);
    return 2701LL;
  }

  int v16 = v15;
  sub_1000EF604(a1, 0, 0LL);
  uint64_t v17 = qword_1008E1E50;
  uint64_t v18 = *(unsigned int *)(qword_1008E1E50 + v3 + 172);
  if ((_DWORD)v18)
  {
    sub_1001EEB14(v18);
    uint64_t v17 = qword_1008E1E50;
    *(_DWORD *)(qword_1008E1E50 + v3 + 172) = 0;
  }

  if (*(_BYTE *)(v17 + v3 + 168))
  {
    *(_BYTE *)(v17 + v3 + 168) = 0;
    LODWORD(v20) = 27;
    WORD2(v20) = a1;
    LODWORD(v21) = v16;
    (*(void (**)(uint64_t *))(v17 + 1480))(&v20);
  }

  return 412LL;
}

uint64_t sub_1000F426C(unsigned int a1, uint64_t a2)
{
  uint64_t v4 = -1472LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v4 + 1472) != a1)
  {
    v4 += 184LL;
    if (!v4)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Device not connected", v11, v12, v13, v14, v15, v16, v17, v21);
        uint64_t v18 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      return 1802LL;
    }
  }

  uint64_t v5 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  if (!v5) {
    goto LABEL_35;
  }
  uint64_t v6 = v5;
  unsigned int v7 = 0;
  do
  {
    if (v7 <= 6)
    {
      switch(v7)
      {
        case 0u:
          if (sub_1001F46E0(v6, "1"))
          {
          }

          else
          {
            *(_BYTE *)(qword_1008E1E50 + v4 + 1648) = 1;
          }

          break;
        case 3u:
          if (sub_1001F46E0(v6, "1"))
          {
          }

          else
          {
            *(_BYTE *)(qword_1008E1E50 + v4 + 1651) = 1;
          }

          break;
        case 4u:
          if (sub_1001F46E0(v6, "1"))
          {
          }

          else
          {
            *(_BYTE *)(qword_1008E1E50 + v4 + 1649) = 1;
          }

          break;
        case 5u:
          if (sub_1001F46E0(v6, "1"))
          {
          }

          else
          {
            *(_BYTE *)(qword_1008E1E50 + v4 + 1650) = 1;
          }

          break;
        default:
          break;
      }
    }

    unsigned int v8 = v7 + 1;
    uint64_t v9 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
    uint64_t v6 = v9;
    if (!v9) {
      break;
    }
  }

  while (v7++ < 0x13);
  if (v9 && v8 == 20)
  {
    sub_1000EF604(a1, 1811, 0LL);
  }

  else
  {
LABEL_35:
    uint64_t v20 = sub_1000EF604(a1, 0, 0LL);
    if ((_DWORD)v20) {
      sub_1000F1FF0(a1, 1u, v20);
    }
  }

  return 412LL;
}

uint64_t sub_1000F4500(unsigned int a1, uint64_t a2)
{
  for (uint64_t i = 0LL; i != 1472; i += 184LL)
  {
    if (*(unsigned __int16 *)(qword_1008E1E50 + i) == a1)
    {
      if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0x400) == 0)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Received unsupported AT+BIND command", v14, v15, v16, v17, v18, v19, v20, v41);
          uint64_t v21 = (os_log_s *)sub_100086554(0x10u);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }

        return 2701LL;
      }

      if ((*(_WORD *)(qword_1008E1E50 + i + 86) & 0x100) == 0)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Device doesn't support HF indicators. AT+BIND command is invalid",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  v41);
          uint64_t v29 = (os_log_s *)sub_100086554(0x10u);
          if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }
      }

      int v30 = *(_DWORD *)a2;
      if (*(_DWORD *)a2)
      {
        if (v30 != 1)
        {
          if (v30 != 2) {
            return 2701LL;
          }
          uint64_t v31 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
          if (v31)
          {
            char v32 = 0;
            char v33 = 1;
            do
            {
              char v34 = v32;
              int v35 = *v31;
              if (v35 == 50)
              {
                *(_BYTE *)(qword_1008E1E50 + i + 181) = 1;
              }

              else
              {
                if (v35 != 49) {
                  return 134LL;
                }
                *(_BYTE *)(qword_1008E1E50 + i + 180) = 1;
              }

              uint64_t v31 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
              char v36 = (v31 != 0LL) & v33;
              char v32 = 1;
              char v33 = 0;
            }

            while ((v36 & 1) != 0);
            if (v31 == 0LL || (v34 & 1) == 0) {
              goto LABEL_34;
            }
            sub_1000EF604(a1, 114, 0LL);
            return 412LL;
          }

uint64_t sub_1000F4788(int a1, uint64_t a2)
{
  __int16 v3 = a1;
  for (uint64_t i = 0LL; i != 1472; i += 184LL)
  {
    if (*(unsigned __int16 *)(qword_1008E1E50 + i) == a1)
    {
      uint64_t v61 = 0LL;
      unint64_t v62 = 0LL;
      uint64_t v63 = 0LL;
      if ((*(_WORD *)(qword_1008E1E50 + 1508) & 0x400) == 0)
      {
        sub_1001EE134((uint64_t)"Received unsupported AT+BIEV command", v14, v15, v16, v17, v18, v19, v20, v60);
        uint64_t v21 = (os_log_s *)sub_100086554(0x10u);
        if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          return 2701LL;
        }
        goto LABEL_21;
      }

      if ((*(_WORD *)(qword_1008E1E50 + i + 86) & 0x100) == 0)
      {
        sub_1001EE134( (uint64_t)"Device doesn't support HF indicators. AT+BIEV command is invalid",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  v60);
        uint64_t v29 = (os_log_s *)sub_100086554(0x10u);
        if (!os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
          return 2701LL;
        }
        goto LABEL_21;
      }

      int v30 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
      unsigned int v31 = sub_1001F46A4(v30);
      if (v31 - 3 <= 0xFFFFFFFD)
      {
        sub_1001EE134((uint64_t)"Invalid anum received", v32, v33, v34, v35, v36, v37, v38, v60);
        size_t v39 = (os_log_s *)sub_100086554(0x10u);
        if (!os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
          return 2701LL;
        }
        goto LABEL_21;
      }

      uint64_t v40 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
      unsigned int v41 = sub_1001F46A4(v40);
      if (v31 == 1)
      {
        uint64_t v42 = qword_1008E1E50;
        if (*(_BYTE *)(qword_1008E1E50 + i + 180)) {
          BOOL v51 = v41 >= 2;
        }
        else {
          BOOL v51 = 0;
        }
        if (v51)
        {
          sub_1001EE134( (uint64_t)"Invalid value received for enhanced safety HF indicator",  v52,  v53,  v54,  v55,  v56,  v57,  v58,  v60);
          uint64_t v59 = (os_log_s *)sub_100086554(0x10u);
          if (!os_log_type_enabled(v59, OS_LOG_TYPE_ERROR)) {
            return 2701LL;
          }
LABEL_21:
          sub_100657F74();
          return 2701LL;
        }
      }

      else if (v31 == 2)
      {
        uint64_t v42 = qword_1008E1E50;
        if (*(_BYTE *)(qword_1008E1E50 + i + 181) && v41 >= 0x65)
        {
          sub_1001EE134( (uint64_t)"Invalid value received for battery level HF indicator",  v43,  v44,  v45,  v46,  v47,  v48,  v49,  v60);
          __int128 v50 = (os_log_s *)sub_100086554(0x10u);
          if (!os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
            return 2701LL;
          }
          goto LABEL_21;
        }
      }

      else
      {
        uint64_t v42 = qword_1008E1E50;
      }

      LODWORD(v61) = 29;
      WORD2(v61) = v3;
      unint64_t v62 = __PAIR64__(v41, v31);
      (*(void (**)(uint64_t *))(v42 + 1480))(&v61);
      return 412LL;
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Device not connected", v5, v6, v7, v8, v9, v10, v11, v60);
    uint64_t v12 = (os_log_s *)sub_100086554(0x10u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  return 1802LL;
}

uint64_t sub_1000F4A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned __int8 **)(a2 + 24);
  uint64_t v5 = sub_1000D5294(a2, (unsigned __int8 **)(a2 + 24), 0LL);
  uint64_t v6 = atoi((const char *)v5);
  if ((_DWORD)v6 == 2)
  {
    uint64_t v14 = sub_1000D5294(a2, v4, 0LL);
    uint64_t v15 = atoi((const char *)v14);
    if ((_DWORD)v15 == 1)
    {
      uint64_t v12 = 0LL;
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Invalid +HAOS close parameter:%d", v24, v25, v26, v27, v28, v29, v30, v15);
        unsigned int v31 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      uint64_t v12 = 2701LL;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"disableAoSEmptyPacketReports - hfpHandle:%d",  v32,  v33,  v34,  v35,  v36,  v37,  v38,  a1);
      size_t v39 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf) = 136446210;
        *(void *)((char *)&buf + 4) = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&buf, 0xCu);
      }
    }

    uint64_t v40 = 0LL;
    while (*(unsigned __int16 *)(qword_1008E1E50 + v40) != (_DWORD)a1)
    {
      v40 += 184LL;
      if (v40 == 1472)
      {
        uint64_t v41 = 0LL;
        goto LABEL_33;
      }
    }

    uint64_t v41 = qword_1008E1E50 + v40 + 80;
LABEL_33:
    *(void *)&__int128 buf = 0LL;
    sub_10010EEE0(v41, (uint64_t *)&buf);
    sub_100192A88();
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"exitAdvancedSniff - hfpHandle:%d", v50, v51, v52, v53, v54, v55, v56, a1);
      uint64_t v57 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v58 = sub_1001EDDCC();
        LODWORD(buf) = 136446210;
        *(void *)((char *)&buf + 4) = v58;
        _os_log_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&buf, 0xCu);
      }
    }

    uint64_t v59 = 0LL;
    while (*(unsigned __int16 *)(qword_1008E1E50 + v59) != (_DWORD)a1)
    {
      v59 += 184LL;
      if (v59 == 1472)
      {
        uint64_t v60 = 0LL;
        goto LABEL_41;
      }
    }

    uint64_t v60 = qword_1008E1E50 + v59 + 80;
LABEL_41:
    *(void *)&__int128 buf = 0LL;
    sub_10010EEE0(v60, (uint64_t *)&buf);
    sub_100192868();
  }

  else if ((_DWORD)v6 == 1)
  {
    uint64_t v7 = sub_1000D5294(a2, v4, 0LL);
    __int128 buf = 0uLL;
    uint64_t v68 = 0LL;
    WORD2(buf) = a1;
    uint64_t v8 = atoi((const char *)v7);
    if ((_DWORD)v8 == 1)
    {
      int v65 = 0;
      uint64_t v66 = 0LL;
      uint64_t v64 = (unsigned __int16)a1;
      int v63 = 30;
      (*(void (**)(int *))(qword_1008E1E50 + 1480))(&v63);
      int v13 = 0;
      uint64_t v12 = 0LL;
    }

    else if ((_DWORD)v8)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Invalid +HAOS setup parameter:%d", v42, v43, v44, v45, v46, v47, v48, v8);
        uint64_t v49 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      int v13 = 0;
      uint64_t v12 = 2701LL;
    }

    else
    {
      uint64_t v9 = 0LL;
      LODWORD(buf) = 1;
      uint64_t v10 = (unsigned __int16 *)qword_1008E1E50;
      do
      {
        int v11 = *v10;
        v10 += 92;
        if (v11 == (_DWORD)a1) {
          break;
        }
        ++v9;
      }

      while (v9 != 8);
      *((void *)&buf + 1) = qword_1008E1E50 + 184 * v9 + 80;
      LODWORD(v68) = 1802;
      sub_1000F5F04(a1, 0);
      uint64_t v12 = 0LL;
      int v13 = 122;
    }

    LODWORD(buf) = 5;
    DWORD2(buf) = v13;
    (*(void (**)(__int128 *))(qword_1008E1E50 + 1480))(&buf);
    sub_1000F5F04(a1, 3);
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Invalid +HAOS command:%d", v16, v17, v18, v19, v20, v21, v22, v6);
      uint64_t v23 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v12 = 2701LL;
  }

  uint64_t v61 = sub_1000EF578(a1, v12);
  if ((_DWORD)v61) {
    sub_1000F1FF0(a1, 1u, v61);
  }
  return 412LL;
}

void sub_1000F4E80(__int16 a1)
{
  uint64_t v10 = 0LL;
  WORD2(v10) = a1;
  v11[1] = &v10;
  v11[0] = (const void *)8;
  if (sub_1001EE6DC((uint64_t)sub_1000F4F10, v11, 0LL) && sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Failed to register with dispatcher!\n", v1, v2, v3, v4, v5, v6, v7, v9);
    uint64_t v8 = (os_log_s *)sub_100086554(0x10u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

uint64_t sub_1000F4F10(uint64_t a1)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t v1 = *(int **)(a1 + 8);
  int v2 = *v1;
  int v3 = *((unsigned __int16 *)v1 + 2);
  uint64_t v4 = qword_1008E1E50;
  uint64_t v5 = -1472LL;
  while (*(unsigned __int16 *)(qword_1008E1E50 + v5 + 1472) != v3)
  {
    v5 += 184LL;
    if (!v5) {
      goto LABEL_8;
    }
  }

  uint64_t v6 = *(unsigned int *)(qword_1008E1E50 + v5 + 1480);
  if ((_DWORD)v6)
  {
    sub_1001EEB14(v6);
    uint64_t v4 = qword_1008E1E50;
    *(_DWORD *)(qword_1008E1E50 + v5 + 1480) = 0;
  }

  uint64_t v7 = v4 + v5;
  *(_BYTE *)(v7 + 1484) = 0;
  *(_DWORD *)(v7 + 1476) = v2;
  uint64_t v10 = v4 + v5 + 1552;
LABEL_8:
  LODWORD(v11) = v2;
  WORD2(v9) = v3;
  LODWORD(v9) = 1;
  return (*(uint64_t (**)(uint64_t *))(v4 + 1480))(&v9);
}

BOOL sub_1000F4FC4()
{
  return dword_1008F6F48 && *(_BYTE *)(qword_1008E1E58 + 401) != 0;
}

void sub_1000F4FF4(char a1)
{
  if (!dword_1008F6F48) {
    sub_1001EE2A0();
  }
  *(_BYTE *)(qword_1008E1E58 + 401) = a1;
}

uint64_t sub_1000F5030(uint64_t a1, _DWORD *a2, unsigned int a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  if (!a1 || !a4)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  if (dword_1008F6F48) {
    return 140LL;
  }
  uint64_t v14 = (char *)sub_1000B1814(0x198uLL);
  qword_1008E1E58 = (uint64_t)v14;
  if (!v14) {
    return 106LL;
  }
  uint64_t v15 = 0LL;
  uint64_t v27 = 0LL;
  uint64_t v28 = 0LL;
  uint64_t v26 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t v24 = 0LL;
  uint64_t v22 = 0LL;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  do
  {
    *(_WORD *)&v14[v15] = -1;
    v15 += 48LL;
  }

  while (v15 != 384);
  uint64_t v16 = (_BYTE *)sub_1001EDBA0(0x10u);
  uint64_t v17 = qword_1008E1E58;
  uint64_t v18 = (_BYTE *)(qword_1008E1E58 + 400);
  *(_BYTE *)(qword_1008E1E58 + 400) = *v16;
  *(_WORD *)(v17 + 402) = a5;
  *(_WORD *)(v17 + 404) = a6;
  uint64_t v7 = sub_1001D9964((uint64_t)sub_1000F5288, (uint64_t)off_100883EA0, a5, a6, v18, (uint64_t)&unk_100883EC8);
  if ((_DWORD)v7)
  {
LABEL_13:
    sub_1000B1838((void *)qword_1008E1E58);
    qword_1008E1E58 = 0LL;
    return v7;
  }

  byte_1008E1E60 = 1;
  dword_1008E1E68 = *(unsigned __int8 *)(qword_1008E1E58 + 400);
  word_1008E1E62 = 1;
  byte_1008E1E70 = 1;
  word_1008E1E72 = 1;
  dword_1008E1E78 = (a3 >> 5) & 1;
  byte_1008E1E80 = 1;
  word_1008E1E82 = 2;
  dword_1008E1E88 = a3 & 0x1F | (32 * ((a3 >> 9) & 1));
  *(void *)&__int128 v29 = &unk_100883EF8;
  WORD4(v29) = 5;
  *(void *)&__int128 v30 = *(void *)a1;
  WORD4(v30) = *(_WORD *)(a1 + 8);
  uint64_t v25 = &unk_100883F70;
  LOWORD(v26) = 5;
  uint64_t v27 = v30;
  LOWORD(v28) = WORD4(v30);
  uint64_t v21 = &unk_100883FE8;
  LOWORD(v22) = 5;
  uint64_t v23 = v30;
  LOWORD(v24) = WORD4(v30);
  uint64_t v19 = sub_1001E139C((uint64_t)&v29, (int *)(qword_1008E1E58 + 388));
  uint64_t v20 = qword_1008E1E58;
  if ((_DWORD)v19)
  {
    uint64_t v7 = v19;
    sub_1001D9C30(*(unsigned __int8 *)(qword_1008E1E58 + 400));
    goto LABEL_13;
  }

  *(void *)(qword_1008E1E58 + 392) = a4;
  sub_1001E1634(*(unsigned int *)(v20 + 388), (uint64_t)&v25);
  sub_1001E1634(*(unsigned int *)(qword_1008E1E58 + 388), (uint64_t)&v21);
  if (a2) {
    *a2 = *(_DWORD *)(qword_1008E1E58 + 388);
  }
  sub_10018C1D8((uint64_t)sub_1000F53E8);
  sub_100115688(6291456);
  uint64_t v7 = 0LL;
  dword_1008F6F48 = 1;
  return v7;
}

uint64_t sub_1000F5288(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v26 = 0LL;
  uint64_t v27 = 0LL;
  uint64_t v28 = 0LL;
  uint64_t v6 = 16LL;
  while (*(_DWORD *)(qword_1008E1E58 + v6) != *(_DWORD *)a1
       || *(unsigned __int16 *)(qword_1008E1E58 + v6 + 4) != *(unsigned __int16 *)(a1 + 4))
  {
    v6 += 48LL;
    if (v6 == 400)
    {
      unsigned int v8 = sub_1000F5C18(a1, 2, a4);
      if (v8 != 8)
      {
        WORD2(v26) = a4;
        uint64_t v27 = qword_1008E1E58 + 48LL * v8 + 16;
        LODWORD(v26) = 0;
        return (*(uint64_t (**)(uint64_t *))(qword_1008E1E58 + 392))(&v26);
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"ERROR : We are out of connection slots. %d", v9, v10, v11, v12, v13, v14, v15, 8LL);
        uint64_t v16 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          goto LABEL_16;
        }
      }

      return sub_1001DA26C((uint64_t)sub_1000F5880, a4, 0);
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"ERROR : We are already connected to this device %:", v18, v19, v20, v21, v22, v23, v24, a1);
    uint64_t v25 = (os_log_s *)sub_100086554(0x10u);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
LABEL_16:
    }
      sub_100657F74();
  }

  return sub_1001DA26C((uint64_t)sub_1000F5880, a4, 0);
}

void sub_1000F53E8(uint64_t a1, int a2, int a3)
{
  if (dword_1008F6F48)
  {
    uint64_t v4 = sub_10012D6D8(a2);
    unsigned __int16 v30 = 0;
    int v29 = 0;
    sub_10010EF78((uint64_t)v4, (uint64_t)&v29);
    uint64_t v5 = 0LL;
    uint64_t v6 = qword_1008E1E58 + 16;
    do
    {
      ++v5;
      v6 += 48LL;
    }

    while (v5 != 8);
    uint64_t v16 = v5;
    int v17 = *(_DWORD *)(qword_1008E1E58 + 48LL * v5 + 32);
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"AdvancedSniffModeChangeCB - deviceID:%d mode:%d mediaState:%s",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  v16);
      uint64_t v25 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v26 = sub_1001EDDCC();
        int buf = 136446210;
        *(void *)buf_4 = v26;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&buf, 0xCu);
      }
    }

    if (!a3 && v17 == 4)
    {
      unsigned __int16 v27 = *(_WORD *)(qword_1008E1E58 + 48LL * v16);
      sub_1000F5F04(v27, 0);
      *(_WORD *)&buf_4[2] = 0;
      *(void *)&buf_4[4] = 0LL;
      uint64_t v33 = 0LL;
      *(_WORD *)buf_4 = v27;
      int buf = 6;
      (*(void (**)(int *))(qword_1008E1E58 + 392))(&buf);
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"AdvancedSniffModeChangeCB - VSE has fired but module is not initialized",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v28);
    uint64_t v15 = (os_log_s *)sub_100086554(0x10u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_1000F55E4()
{
  if (!dword_1008F6F48) {
    return 408LL;
  }
  if (*(_BYTE *)(qword_1008E1E58 + 384)) {
    return 141LL;
  }
  uint64_t result = sub_1001D9C30(*(unsigned __int8 *)(qword_1008E1E58 + 400));
  if (!(_DWORD)result)
  {
    sub_10011573C(6291456);
    sub_1001E1520(*(_DWORD *)(qword_1008E1E58 + 388));
    uint64_t v1 = (void *)qword_1008E1E58;
    *(void *)(qword_1008E1E58 + 392) = 0LL;
    sub_1000B1838(v1);
    uint64_t result = 0LL;
    qword_1008E1E58 = 0LL;
    dword_1008F6F48 = 0;
  }

  return result;
}

uint64_t sub_1000F5664(unsigned int a1, int a2)
{
  if (!dword_1008F6F48) {
    return 408LL;
  }
  uint64_t v4 = 0LL;
  while (*(unsigned __int16 *)(qword_1008E1E58 + v4) != a1)
  {
    v4 += 48LL;
    if (v4 == 384)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Could not find addr for device %d", v5, v6, v7, v8, v9, v10, v11, a1);
        uint64_t v12 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      sub_1000F57E8(a1);
      return 1802LL;
    }
  }

  unsigned int v13 = sub_1000F57E8(a1);
  if (v13 == 8) {
    return 1802LL;
  }
  unsigned int v15 = v13;
  if (*(_BYTE *)(qword_1008E1E58 + 48LL * v13 + 28) != 2) {
    return 408LL;
  }
  if (a2)
  {
    uint64_t v14 = sub_1001DA26C((uint64_t)sub_1000F5880, a1, 1);
    if ((_DWORD)v14)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_RFCOMM_Accept failed: %! %d\n", v16, v17, v18, v19, v20, v21, v22, v14);
        uint64_t v23 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      sub_1000F5A88(v15);
    }

    return v14;
  }

  uint64_t v25 = sub_1001DA26C((uint64_t)sub_1000F5880, a1, 0);
  sub_1000F5A88(v15);
  return v25;
}

uint64_t sub_1000F57E8(unsigned int a1)
{
  uint64_t v2 = 0LL;
  int v3 = (unsigned __int16 *)qword_1008E1E58;
  while (1)
  {
    int v4 = *v3;
    v3 += 24;
    if (v4 == a1) {
      break;
    }
    if (++v2 == 8)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Could not find link handle for device %d", v5, v6, v7, v8, v9, v10, v11, a1);
        uint64_t v12 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      LOBYTE(v2) = 8;
      return v2;
    }
  }

  return v2;
}

void sub_1000F5880(uint64_t a1, unsigned __int16 a2, uint64_t a3)
{
  unsigned int v6 = sub_1000F57E8(a1);
  if (v6 != 8)
  {
    unsigned int v7 = v6;
    unsigned int v8 = v6;
    if (*(unsigned __int16 *)(qword_1008E1E58 + 48LL * v6) == (_DWORD)a1)
    {
      if ((_DWORD)a3)
      {
        int v27 = (unsigned __int16)a1;
        int v29 = a3;
        uint64_t v28 = qword_1008E1E58 + 48LL * sub_1000F57E8(a1) + 16;
        int v30 = a2;
        int v26 = 1;
        (*(void (**)(int *))(qword_1008E1E58 + 392))(&v26);
        sub_1000F5A88(v7);
      }

      else
      {
        int v17 = sub_100119484((uint64_t)off_100884060, qword_1008E1E58 + 48LL * v6 + 16);
        if (v17)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Could not register sco for link %d : %!", v18, v19, v20, v21, v22, v23, v24, a1);
            uint64_t v25 = (os_log_s *)sub_100086554(0x10u);
            if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
              sub_100657F74();
            }
          }

          *(_DWORD *)(qword_1008E1E58 + 48LL * v8 + 4) = 1817;
          sub_1001DA5AC(a1, 1817);
        }

        else
        {
          *(_BYTE *)(qword_1008E1E58 + 48LL * v8 + 28) = 3;
        }

        int v27 = (unsigned __int16)a1;
        int v29 = v17;
        uint64_t v28 = qword_1008E1E58 + 48LL * sub_1000F57E8(a1) + 16;
        int v30 = a2;
        int v26 = 1;
        (*(void (**)(int *))(qword_1008E1E58 + 392))(&v26);
      }
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Links do not match... %!", v9, v10, v11, v12, v13, v14, v15, a3);
        uint64_t v16 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      *(_DWORD *)(qword_1008E1E58 + 48LL * v8 + 4) = 1816;
      sub_1001DA5AC(a1, 1816);
    }
  }

double sub_1000F5A88(unsigned int a1)
{
  uint64_t v2 = sub_100119668(qword_1008E1E58 + 48LL * a1 + 16);
  if ((_DWORD)v2)
  {
    uint64_t v3 = v2;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"DeregisterScoApplicationByAddr failed %!", v4, v5, v6, v7, v8, v9, v10, v3);
      uint64_t v11 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  uint64_t v12 = qword_1008E1E58;
  uint64_t v13 = (_OWORD *)(qword_1008E1E58 + 48LL * a1);
  double result = 0.0;
  *uint64_t v13 = 0u;
  v13[1] = 0u;
  v13[2] = 0u;
  *(_WORD *)uint64_t v13 = -1;
  --*(_BYTE *)(v12 + 384);
  return result;
}

uint64_t sub_1000F5B44(uint64_t a1, char a2)
{
  if (!dword_1008F6F48) {
    return 1804LL;
  }
  if (a1)
  {
    if (*(_BYTE *)(qword_1008E1E58 + 384) == 8) {
      return 133LL;
    }
    unsigned int v4 = sub_1000F5C18(a1, 1, 0);
    if (v4 == 8)
    {
      return 133LL;
    }

    else
    {
      unsigned int v7 = v4;
      uint64_t v5 = sub_1001D9F7C( (uint64_t)sub_1000F5880,  off_100883EA0,  a1,  a2,  0x3FAu,  0,  (_WORD *)(qword_1008E1E58 + 48LL * v4),  (uint64_t)&unk_100883EC8);
      if ((_DWORD)v5) {
        sub_1000F5A88(v7);
      }
    }
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

  return v5;
}

uint64_t sub_1000F5C18(uint64_t a1, char a2, __int16 a3)
{
  uint64_t v4 = 0LL;
  for (uint64_t i = 0LL; i != 8; ++i)
  {
    if (*(__int16 *)(qword_1008E1E58 + v4) == -1)
    {
      uint64_t v6 = qword_1008E1E58 + v4;
      if (!*(_DWORD *)(qword_1008E1E58 + v4 + 16) && *(_WORD *)(qword_1008E1E58 + v4 + 20) == 0)
      {
        int v16 = *(_DWORD *)a1;
        *(_WORD *)(v6 + 20) = *(_WORD *)(a1 + 4);
        *(_DWORD *)(v6 + 16) = v16;
        uint64_t v17 = qword_1008E1E58;
        uint64_t v18 = qword_1008E1E58 + v4;
        *(_WORD *)uint64_t v18 = a3;
        *(_BYTE *)(v18 + 28) = a2;
        ++*(_BYTE *)(v17 + 384);
        return i;
      }
    }

    v4 += 48LL;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Could not create raw device addr %:, state %d", v8, v9, v10, v11, v12, v13, v14, a1);
    uint64_t v15 = (os_log_s *)sub_100086554(0x10u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  LOBYTE(i) = 8;
  return i;
}

uint64_t sub_1000F5D14(unsigned int a1, int a2)
{
  if (!dword_1008F6F48) {
    return 408LL;
  }
  unsigned int v3 = sub_1000F57E8(a1);
  if (v3 == 8) {
    return 1802LL;
  }
  uint64_t v4 = qword_1008E1E58;
  uint64_t v5 = qword_1008E1E58 + 48LL * v3;
  int v8 = *(unsigned __int8 *)(v5 + 28);
  uint64_t v6 = (_BYTE *)(v5 + 28);
  int v7 = v8;
  if (v7 != 3) {
    return 1802LL;
  }
  *uint64_t v6 = 4;
  *(_DWORD *)(v4 + 48LL * v3 + 4) = a2;
  return sub_1000F69FC(v3, a2);
}

uint64_t sub_1000F5DB0(unsigned int a1, int a2)
{
  if (!dword_1008F6F48) {
    return 408LL;
  }
  unsigned int v3 = sub_1000F57E8(a1);
  if (v3 == 8) {
    return 1802LL;
  }
  if (*(_DWORD *)(qword_1008E1E58 + 48LL * v3 + 32) != 1) {
    return 1807LL;
  }
  uint64_t v5 = 3LL * v3;
  LODWORD(result) = sub_10011A99C(qword_1008E1E58 + 48LL * v3 + 16, a2);
  BOOL v6 = result == 0;
  BOOL v7 = (a2 & v6) == 0;
  if ((a2 & v6) != 0) {
    int v8 = 2;
  }
  else {
    int v8 = 0;
  }
  if (v7) {
    uint64_t result = result;
  }
  else {
    uint64_t result = 0LL;
  }
  *(_DWORD *)(qword_1008E1E58 + 16 * v5 + 32) = v8;
  return result;
}

uint64_t sub_1000F5E60(unsigned int a1)
{
  if (!dword_1008F6F48) {
    return 408LL;
  }
  unsigned int v1 = sub_1000F57E8(a1);
  if (v1 == 8 || *(_BYTE *)(qword_1008E1E58 + 48LL * v1 + 28) != 3) {
    return 1802LL;
  }
  unsigned int v2 = v1;
  if (*(_DWORD *)(qword_1008E1E58 + 48LL * v1 + 32)) {
    return 1806LL;
  }
  uint64_t result = sub_1001197F8(qword_1008E1E58 + 48LL * v1 + 16);
  if (!(_DWORD)result) {
    *(_DWORD *)(qword_1008E1E58 + 48LL * v2 + 32) = 2;
  }
  return result;
}

uint64_t sub_1000F5F04(uint64_t a1, int a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HandsfreeAG_SetAoSMediaState - handle:%d mediaState:%s", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(0x10u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      int v16 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  unsigned int v12 = sub_1000F57E8(a1);
  if (v12 == 8) {
    return 1802LL;
  }
  unsigned int v14 = v12;
  uint64_t result = 0LL;
  *(_DWORD *)(qword_1008E1E58 + 48LL * v14 + 32) = a2;
  return result;
}

uint64_t sub_1000F6024(unsigned int a1)
{
  return *(unsigned int *)(qword_1008E1E58 + 48LL * sub_1000F57E8(a1) + 32);
}

uint64_t sub_1000F604C(unsigned int a1)
{
  if (!dword_1008F6F48) {
    return 408LL;
  }
  unsigned int v2 = sub_1000F57E8(a1);
  if (v2 == 8) {
    return 1802LL;
  }
  unsigned int v4 = v2;
  int v5 = *(_DWORD *)(qword_1008E1E58 + 48LL * v2 + 32);
  if (v5 == 3)
  {
    BOOL v7 = sub_1000F14A4(a1);
    uint64_t v8 = qword_1008E1E58 + 48LL * v4;
    if (v7)
    {
      if (*(_DWORD *)(v8 + 32) == 4)
      {
        uint64_t result = sub_1000A86F0();
        if ((_DWORD)result)
        {
          sub_1001EE134( (uint64_t)"Trying to close HAOS while another request is in flight",  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v17);
          int v16 = (os_log_s *)sub_100086554(0x10u);
          uint64_t result = os_log_type_enabled(v16, OS_LOG_TYPE_ERROR);
          if ((_DWORD)result)
          {
            sub_100657858();
            uint64_t result = 0LL;
          }
        }
      }

      else
      {
        uint64_t result = sub_1000F1200(a1);
        if ((_DWORD)result) {
          return result;
        }
      }
    }

    else
    {
      uint64_t result = sub_10011976C(*(void *)(v8 + 8));
      if ((_DWORD)result) {
        return result;
      }
    }

    int v6 = 4;
  }

  else
  {
    if (v5 != 2) {
      return 1807LL;
    }
    LODWORD(result) = sub_10011B764(qword_1008E1E58 + 48LL * v2 + 16);
    int v6 = 0;
    if ((_DWORD)result == 1301) {
      uint64_t result = 1807LL;
    }
    else {
      uint64_t result = result;
    }
  }

  *(_DWORD *)(qword_1008E1E58 + 48LL * v4 + 32) = v6;
  return result;
}

BOOL sub_1000F6188(unsigned int a1)
{
  if (dword_1008F6F48 && (unsigned int v1 = sub_1000F57E8(a1), v1 != 8)) {
    return *(_DWORD *)(qword_1008E1E58 + 48LL * v1 + 32) == 3;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000F61D8(unsigned int a1, uint64_t a2, char *a3, size_t a4)
{
  if (!dword_1008F6F48) {
    return 408LL;
  }
  if (!a2)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  unsigned int v8 = sub_1000F57E8(a1);
  if (v8 == 8) {
    return 1802LL;
  }
  if (*(_BYTE *)(qword_1008E1E58 + 48LL * v8 + 28) != 3) {
    return 408LL;
  }
  unsigned int v10 = v8;
  if (*(void *)(qword_1008E1E58 + 48LL * v8 + 40)) {
    return 118LL;
  }
  uint64_t result = sub_1001D9F70((uint64_t)sub_1000F62B0, a1, a3, a4);
  if (!(_DWORD)result) {
    *(void *)(qword_1008E1E58 + 48LL * v10 + 40) = a2;
  }
  return result;
}

uint64_t sub_1000F62B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1008E1E58)
  {
    uint64_t v7 = result;
    uint64_t result = sub_1000F57E8(result);
    if ((_DWORD)result != 8)
    {
      uint64_t v8 = qword_1008E1E58 + 48LL * result;
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 40);
      unsigned int v10 = (void *)(v8 + 40);
      uint64_t v9 = v11;
      if (v11)
      {
        *unsigned int v10 = 0LL;
        return v9(v7, a2, a3, a4);
      }
    }
  }

  return result;
}

uint64_t sub_1000F633C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 2) != 1) {
    sub_1001EE2A0();
  }
  uint64_t v2 = 0LL;
  while (*(void *)(qword_1008E1E58 + v2 + 8) != a1)
  {
    v2 += 48LL;
    if (v2 == 384) {
      goto LABEL_8;
    }
  }

  uint64_t result = *(unsigned __int16 *)(qword_1008E1E58 + v2);
  if (*(_WORD *)(qword_1008E1E58 + v2)) {
    return result;
  }
LABEL_8:
  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result)
  {
    sub_1001EE134( (uint64_t)"Could not find sco hfp handle for sco hci connection handle %d",  v4,  v5,  v6,  v7,  v8,  v9,  v10,  a1);
    uint64_t v11 = (os_log_s *)sub_100086554(0x10u);
    uint64_t result = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_100657F74();
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000F63EC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 2)) {
    sub_1001EE2A0();
  }
  uint64_t v2 = 0LL;
  while (*(_DWORD *)(qword_1008E1E58 + v2 + 16) != *(_DWORD *)(a1 + 48)
       || *(unsigned __int16 *)(qword_1008E1E58 + v2 + 20) != *(unsigned __int16 *)(a1 + 52))
  {
    v2 += 48LL;
    if (v2 == 384) {
      goto LABEL_11;
    }
  }

  uint64_t result = *(unsigned __int16 *)(qword_1008E1E58 + v2);
  if (*(_WORD *)(qword_1008E1E58 + v2)) {
    return result;
  }
LABEL_11:
  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result)
  {
    sub_1001EE134( (uint64_t)"Could not find sco hfp handle for sco hci connection handle %d",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x10u);
    uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_100657F74();
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000F64A8()
{
  return *(unsigned __int16 *)(qword_1008E1E58 + 402);
}

uint64_t sub_1000F64B8(uint64_t a1, char a2, _WORD *a3, _WORD *a4, int a5)
{
  if (!dword_1008F6F48) {
    return 1804LL;
  }
  if (a1)
  {
    if (*(_BYTE *)(qword_1008E1E58 + 384) == 8) {
      return 133LL;
    }
    unsigned int v10 = sub_1000F5C18(a1, 1, 0);
    if (v10 == 8) {
      return 133LL;
    }
    unsigned int v12 = v10;
    uint64_t v13 = sub_1001DA73C( (uint64_t)sub_1000F5880,  (uint64_t)off_100883EA0,  a1,  a2,  *(unsigned __int16 *)(qword_1008E1E58 + 402),  0,  (_WORD *)(qword_1008E1E58 + 48LL * v10),  a3,  (uint64_t)&unk_100883EC8,  a5);
    if ((_DWORD)v13)
    {
      uint64_t v11 = v13;
      sub_1000F5A88(v12);
      return v11;
    }

    int v15 = *(unsigned __int16 *)(qword_1008E1E58 + 48LL * v12);
    *a4 = v15;
    if (sub_1000F1554(v15, a1) == 255)
    {
      return 133LL;
    }

    else
    {
      uint64_t v11 = sub_100119484((uint64_t)off_100884060, qword_1008E1E58 + 48LL * v12 + 16);
      if ((_DWORD)v11)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Could not register sco for link", v16, v17, v18, v19, v20, v21, v22, v24);
          uint64_t v23 = (os_log_s *)sub_100086554(0x10u);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }
      }

      else
      {
        *(_BYTE *)(qword_1008E1E58 + 48LL * v12 + 28) = 3;
      }
    }
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

  return v11;
}

void sub_1000F6660(uint64_t a1, unsigned int a2)
{
  if (dword_1008F6F48)
  {
    sub_100119668(a1);
    uint64_t v4 = 0LL;
    uint64_t v5 = qword_1008E1E58 + 16;
    while (*(_DWORD *)v5 != *(_DWORD *)a1 || *(unsigned __int16 *)(v5 + 4) != *(unsigned __int16 *)(a1 + 4))
    {
      ++v4;
      v5 += 48LL;
      if (v4 == 8) {
        goto LABEL_15;
      }
    }

uint64_t sub_1000F673C(unsigned int a1, int a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"HANDSFREE RFCOMM_ReleaseInd, link=%d, reason=%!", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(0x10u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v15 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t result = sub_1000F57E8(a1);
  if ((_DWORD)result != 8)
  {
    uint64_t v13 = qword_1008E1E58 + 48LL * result;
    *(_BYTE *)(v13 + 28) = 0;
    *(_DWORD *)(v13 + 4) = a2;
    return sub_1000F69FC(result, a2);
  }

  return result;
}

void sub_1000F683C(unsigned int a1, uint64_t a2, int a3)
{
  uint64_t v26 = 0LL;
  uint64_t v27 = 0LL;
  uint64_t v28 = 0LL;
  unsigned int v6 = sub_1000F57E8(a1);
  if (v6 == 8)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Ignoring received data, we are not connected to this device ... %d",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  8LL);
      uint64_t v14 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
LABEL_14:
      }
        sub_100657F74();
    }
  }

  else
  {
    unsigned int v15 = v6;
    if ((*(_BYTE *)(qword_1008E1E58 + 48LL * v6 + 28) & 0xFE) == 4)
    {
      if (sub_1000A86F0())
      {
        unint64_t v23 = *(char *)(qword_1008E1E58 + 48LL * v15 + 28);
        uint64_t v24 = v23 > 5 ? "UNKNOWN" : off_100884110[v23];
        sub_1001EE134( (uint64_t)"Ignoring received data while in state %s",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  (uint64_t)v24);
        uint64_t v25 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          goto LABEL_14;
        }
      }
    }

    else if (a3 == 3)
    {
      strcpy(v29, "\r\nAT+OK\r\n");
      sub_1001D9F70((uint64_t)sub_1000F62B0, a1, v29, 0xAuLL);
    }

    else
    {
      LODWORD(v26) = 7;
      WORD2(v26) = a1;
      uint64_t v27 = a2;
      LOWORD(v28) = a3;
      (*(void (**)(uint64_t *))(qword_1008E1E58 + 392))(&v26);
    }
  }

uint64_t sub_1000F69FC(unsigned int a1, int a2)
{
  uint64_t v42 = 0LL;
  uint64_t v43 = 0LL;
  uint64_t v44 = 0LL;
  uint64_t v4 = qword_1008E1E58;
  if ((*(_DWORD *)(qword_1008E1E58 + 48LL * a1 + 32) | 4) == 4)
  {
    uint64_t v6 = 0LL;
  }

  else
  {
    uint64_t v6 = sub_10011976C(*(void *)(qword_1008E1E58 + 48LL * a1 + 8));
    if ((_DWORD)v6)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"ScoDisconnect failed - %!, setting as disconnected, State %d\n",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v6);
        uint64_t v14 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      int v15 = 0;
    }

    else
    {
      int v15 = 4;
    }

    uint64_t v4 = qword_1008E1E58;
    *(_DWORD *)(qword_1008E1E58 + 48LL * a1 + 32) = v15;
  }

  if (*(_BYTE *)(v4 + 48LL * a1 + 28)) {
    BOOL v16 = *(_BYTE *)(v4 + 48LL * a1 + 28) == 5;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16)
  {
    uint64_t v28 = sub_1001DA5AC(*(unsigned __int16 *)(v4 + 48LL * a1), a2);
    uint64_t v6 = v28;
    if (!(_DWORD)v28)
    {
      uint64_t v4 = qword_1008E1E58;
      *(_BYTE *)(qword_1008E1E58 + 48LL * a1 + 28) = 4;
      goto LABEL_17;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"RFCOMM_Disconnect failed - %!, forcing disconnect!, state %d\n",  v29,  v30,  v31,  v32,  v33,  v34,  v35,  v6);
      uint64_t v36 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    goto LABEL_16;
  }

  if ((_DWORD)v6)
  {
LABEL_16:
    sub_1000F6CAC(a1);
    uint64_t v4 = qword_1008E1E58;
  }

void sub_1000F6CAC(unsigned int a1)
{
  uint64_t v2 = qword_1008E1E58 + 48LL * a1;
  *(_BYTE *)(v2 + 28) = 5;
  uint64_t v3 = sub_10010D064(v2 + 16);
  if ((_DWORD)v3)
  {
    uint64_t v4 = v3;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"ForceDisconnect failed - %!, assuming already disconnected\n",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  v4);
      uint64_t v12 = (os_log_s *)sub_100086554(0x10u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    *(_BYTE *)(qword_1008E1E58 + 48LL * a1 + 28) = 0;
  }

uint64_t sub_1000F6D58(uint64_t a1)
{
  uint64_t result = sub_1000F57E8(**(unsigned __int16 **)(a1 + 8));
  if ((_DWORD)result != 8)
  {
    uint64_t v2 = result;
    *(_DWORD *)(qword_1008E1E58 + 48LL * result + 24) = 0;
    sub_1000F6CAC(result);
    *(_DWORD *)(qword_1008E1E58 + 48LL * v2 + 4) = 1814;
    return sub_1000F69FC(v2, 1814LL);
  }

  return result;
}

uint64_t sub_1000F6DD0(uint64_t result, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v3 = 0;
  uint64_t v4 = qword_1008E1E58;
  uint64_t v5 = -384LL;
  while (*(_DWORD *)(qword_1008E1E58 + v5 + 400) != *(_DWORD *)a3
       || *(unsigned __int16 *)(qword_1008E1E58 + v5 + 404) != *(unsigned __int16 *)(a3 + 4))
  {
    ++v3;
    v5 += 48LL;
    if (!v5) {
      return result;
    }
  }

  if (v3 != 8)
  {
    uint64_t v12 = 0LL;
    uint64_t v13 = 0LL;
    uint64_t v14 = 0LL;
    uint64_t v7 = qword_1008E1E58 + v5;
    if ((_DWORD)result)
    {
      if (*(_DWORD *)(v7 + 416) == 3) {
        return result;
      }
      *(_DWORD *)(v7 + 416) = 0;
    }

    else
    {
      *(void *)(v7 + 392) = a2;
      *(_DWORD *)(v7 + 416) = 3;
    }

    LODWORD(v12) = 5;
    WORD2(v12) = *(_WORD *)(v4 + v5 + 384);
    LODWORD(v13) = result;
    uint64_t result = (*(uint64_t (**)(uint64_t *))(v4 + 392))(&v12);
    unsigned int v8 = *(unsigned __int8 *)(qword_1008E1E58 + v5 + 412);
    BOOL v9 = v8 > 5;
    int v10 = (1 << v8) & 0x31;
    if (!v9 && v10 != 0) {
      return sub_1000F69FC(v3, *(_DWORD *)(qword_1008E1E58 + v5 + 388));
    }
  }

  return result;
}

void sub_1000F6ECC(int a1, uint64_t a2)
{
  if (*(_BYTE *)(a2 + 2) != 1) {
    sub_1001EE2A0();
  }
  unsigned __int8 v4 = 0;
  uint64_t v28 = 0LL;
  uint64_t v29 = 0LL;
  uint64_t v30 = 0LL;
  uint64_t v5 = qword_1008E1E58;
  uint64_t v6 = -384LL;
  while (*(void *)(qword_1008E1E58 + v6 + 392) != a2)
  {
    ++v4;
    v6 += 48LL;
    if (!v6)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Could not find sco handle for device %d", v7, v8, v9, v10, v11, v12, v13, a2);
        uint64_t v14 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
LABEL_8:
          sub_100657F74();
          return;
        }
      }

      return;
    }
  }

  if (v4 != 8)
  {
    if (a1)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"SCO disconnect failed for handle %d, %!",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  *(unsigned __int16 *)(qword_1008E1E58 + v6 + 384));
        uint64_t v22 = (os_log_s *)sub_100086554(0x10u);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          goto LABEL_8;
        }
      }
    }

    else
    {
      uint64_t v23 = qword_1008E1E58 + v6;
      *(_DWORD *)(v23 + 416) = 0;
      *(void *)(v23 + 392) = 0LL;
      LODWORD(v28) = 6;
      WORD2(v28) = *(_WORD *)(v5 + v6 + 384);
      LODWORD(v29) = 0;
      (*(void (**)(uint64_t *))(v5 + 392))(&v28);
      unsigned int v24 = *(unsigned __int8 *)(qword_1008E1E58 + v6 + 412);
      BOOL v25 = v24 > 5;
      int v26 = (1 << v24) & 0x31;
      if (!v25 && v26 != 0) {
        sub_1000F69FC(v4, *(_DWORD *)(qword_1008E1E58 + v6 + 388));
      }
    }
  }

uint64_t sub_1000F7050(uint64_t a1)
{
  uint64_t v1 = 0LL;
  uint64_t v2 = qword_1008E1E58;
  while (*(_DWORD *)(qword_1008E1E58 + v1 + 16) != *(_DWORD *)a1
       || *(unsigned __int16 *)(qword_1008E1E58 + v1 + 20) != *(unsigned __int16 *)(a1 + 4))
  {
    v1 += 48LL;
    if (v1 == 384) {
      return sub_10011A99C(a1, 0);
    }
  }

  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  uint64_t v4 = qword_1008E1E58 + v1;
  if (*(_BYTE *)(qword_1008E1E58 + v1 + 28) == 3 && (*(_DWORD *)(v4 + 32) | 2) == 2)
  {
    *(_DWORD *)(v4 + 32) = 1;
    LODWORD(v6) = 3;
    LODWORD(v7) = 1;
    WORD2(v6) = *(_WORD *)(v2 + v1);
    return (*(uint64_t (**)(uint64_t *))(v2 + 392))(&v6);
  }

  return sub_10011A99C(a1, 0);
}

uint64_t sub_1000F710C(char *a1, uint64_t a2, _WORD *a3)
{
  uint64_t v3 = 22LL;
  if (a1 && a3)
  {
    if (a2)
    {
      LOWORD(v4) = *a3;
      do
      {
        char v5 = *a1++;
        int v4 = word_1006BC368[(v5 ^ v4)] ^ ((unsigned __int16)(v4 & 0xFF00) >> 8);
        *a3 = v4;
        --a2;
      }

      while (a2);
    }

    return 0LL;
  }

  return v3;
}

uint64_t sub_1000F7158(int a1)
{
  uint64_t v1 = sub_1000F71B4(a1);
  uint64_t v4 = v1;
  if (!v1) {
    sub_1001EE2A0();
  }
  v3[1] = &v4;
  v3[0] = (const void *)8;
  return sub_1001EE6E8((uint64_t)sub_1000F720C, v3, 30, (int *)(v1 + 200));
}

uint64_t sub_1000F71B4(int a1)
{
  uint64_t result = 0LL;
  if (a1 && dword_1008F6F5C)
  {
    uint64_t v3 = *(unsigned __int8 *)(qword_1008E1E90 + 36);
    if (*(_BYTE *)(qword_1008E1E90 + 36))
    {
      for (uint64_t result = *(void *)qword_1008E1E90;
            !*(_DWORD *)(result + 196) || *(unsigned __int16 *)(result + 192) != a1;
            result += 216LL)
      {
        if (!--v3) {
          return 0LL;
        }
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

void sub_1000F720C(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 8);
  if (sub_1000A86F0()
    && (sub_1001EE134((uint64_t)"Didn't get transaction response within timeout period", v2, v3, v4, v5, v6, v7, v8, v19),
        uint64_t v9 = (os_log_s *)sub_100086554(0x15u),
        os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)))
  {
    sub_100657858();
    if (v1)
    {
LABEL_4:
      *(_DWORD *)(v1 + 200) = 0;
      uint64_t v10 = *(void (**)(uint64_t))(*(void *)(qword_1008E1E90 + 8) + 40LL);
      if (v10) {
        v10(v1);
      }
      return;
    }
  }

  else if (v1)
  {
    goto LABEL_4;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Invalid HID host handle in transaction timeout", v11, v12, v13, v14, v15, v16, v17, v19);
    uint64_t v18 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_1000F72D4(unsigned int a1)
{
  uint64_t v2 = sub_1000F71B4(a1);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(unsigned int *)(v2 + 200);
    if ((_DWORD)v4)
    {
      sub_1001EEB14(v4);
      *(_DWORD *)(v3 + 200) = 0;
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"CancelTransactionTimeout called on invalid handle %d", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

double sub_1000F7360(uint64_t a1)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  if (!*(_DWORD *)(a1 + 196)) {
    sub_1001EE2A0();
  }
  if (*(_DWORD *)(a1 + 200)) {
    sub_1000F72D4(*(unsigned __int16 *)(a1 + 192));
  }
  *(void *)(a1 + 208) = 0LL;
  double result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  --*(_BYTE *)(qword_1008E1E90 + 37);
  return result;
}

uint64_t sub_1000F73D8(uint64_t a1)
{
  uint64_t result = 0LL;
  if (a1 && dword_1008F6F5C)
  {
    uint64_t v3 = *(unsigned __int8 *)(qword_1008E1E90 + 36);
    if (*(_BYTE *)(qword_1008E1E90 + 36))
    {
      for (uint64_t result = *(void *)qword_1008E1E90; ; result += 216LL)
      {
        if (*(_DWORD *)(result + 196))
        {
        }

        if (!--v3) {
          return 0LL;
        }
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000F7440(int a1)
{
  uint64_t result = 0LL;
  if (a1 && dword_1008F6F5C)
  {
    uint64_t v3 = *(unsigned __int8 *)(qword_1008E1E90 + 36);
    if (*(_BYTE *)(qword_1008E1E90 + 36))
    {
      for (uint64_t result = *(void *)qword_1008E1E90;
            *(unsigned __int16 *)(result + 16) != a1 && *(unsigned __int16 *)(result + 104) != a1;
            result += 216LL)
      {
        if (!--v3) {
          return 0LL;
        }
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000F749C(int a1, int a2)
{
  uint64_t v3 = sub_1000F71B4(a1);
  uint64_t v4 = v3 + 104;
  uint64_t v5 = v3 + 16;
  if (a2 != 17) {
    uint64_t v5 = 0LL;
  }
  if (a2 != 19) {
    uint64_t v4 = v5;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000F74DC(void *a1, unsigned int a2, void *a3)
{
  if (dword_1008F6F5C) {
    return 119LL;
  }
  if (!a1)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  if (!*a1 || !a1[1] || !a1[2] || !a1[3] || !a1[4])
  {
    sub_1001EE2A0();
    if (!*a1) {
      return 101LL;
    }
  }

  if (!a1[1] || !a1[2] || !a1[3] || !a1[4]) {
    return 101LL;
  }
  uint64_t v7 = sub_1000B1814(0x28uLL);
  qword_1008E1E90 = (uint64_t)v7;
  if (!v7) {
    return 106LL;
  }
  v7[37] = 0;
  v7[36] = a2;
  uint64_t v8 = sub_1000B1814(216LL * a2);
  uint64_t v9 = qword_1008E1E90;
  *(void *)qword_1008E1E90 = v8;
  *(void *)(v9 + 8) = a1;
  if (v8)
  {
    uint64_t v10 = sub_10017A6F0(17, (uint64_t)sub_1000F76E0);
    if ((_DWORD)v10)
    {
      uint64_t v3 = v10;
      sub_1001EE134((uint64_t)"Couldn't regster OI_PSM_HID_CONTROL: %!", v11, v12, v13, v14, v15, v16, v17, v3);
      uint64_t v18 = (os_log_s *)sub_100086554(0x15u);
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        goto LABEL_25;
      }
    }

    else
    {
      uint64_t v3 = sub_10017A6F0(19, (uint64_t)sub_1000F77C8);
      if (!(_DWORD)v3)
      {
        dword_1008F6F5C = 1;
        *a3 = qword_1008E1E90;
        return v3;
      }

      sub_1001EE134((uint64_t)"Couldn't regster OI_PSM_HID_INTERRUPT: %!", v20, v21, v22, v23, v24, v25, v26, v3);
      uint64_t v27 = (os_log_s *)sub_100086554(0x15u);
      if (!os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        goto LABEL_25;
      }
    }

    sub_100657858();
  }

  else
  {
    uint64_t v3 = 106LL;
  }

void sub_1000F76E0(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = 0LL;
  if (a1 != 17) {
    sub_1001EE2A0();
  }
  if (dword_1008F6F5C || (sub_1001EE2A0(), dword_1008F6F5C))
  {
    int v5 = sub_1000F7AA8(a2, 0, (uint64_t)&v8);
    uint64_t v6 = v8;
    if (v5)
    {
      if (v8) {
        uint64_t v7 = *(void *)(v8 + 24);
      }
      else {
        uint64_t v7 = 0LL;
      }
      sub_100174B2C( (uint64_t)sub_1000F7C04,  (uint64_t)sub_1000F7DF0,  (uint64_t)sub_1000F7F08,  a3,  v7,  0,  (uint64_t)&unk_1006BC568);
    }

    else
    {
      *(_WORD *)(v8 + 192) = a3;
      *(_WORD *)(v6 + 16) = a3;
      *(_DWORD *)(v6 + 40) = 1;
      *(_BYTE *)(v6 + 96) = 0;
      *(_BYTE *)(v6 + 7) = 0;
      (**(void (***)(uint64_t, uint64_t))(qword_1008E1E90 + 8))(a2, a3);
    }
  }

void sub_1000F77C8(int a1, uint64_t a2, unsigned int a3)
{
  if (a1 != 19) {
    sub_1001EE2A0();
  }
  if (dword_1008F6F5C || (sub_1001EE2A0(), dword_1008F6F5C))
  {
    uint64_t v5 = sub_1000F73D8(a2);
    if (v5)
    {
      if ((*(_DWORD *)(v5 + 40) - 1) < 2)
      {
        *(_WORD *)(v5 + 104) = a3;
        int v6 = 1;
        *(_DWORD *)(v5 + 128) = 1;
        uint64_t v7 = *(void *)(v5 + 112);
LABEL_15:
        sub_100174B2C( (uint64_t)sub_1000F8A84,  (uint64_t)sub_1000F8BB0,  (uint64_t)sub_1000F7F08,  a3,  v7,  v6,  (uint64_t)&unk_1006BC568);
        return;
      }

      if (!sub_1000A86F0()
        || (sub_1001EE134( (uint64_t)"Control channel must be connected first. Refusing.",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v24),  uint64_t v23 = (os_log_s *)sub_100086554(0x15u),  !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
      {
LABEL_14:
        int v6 = 0;
        uint64_t v7 = 0LL;
        goto LABEL_15;
      }
    }

    else
    {
      sub_1001EE134((uint64_t)"No connection associated with this BDADDR.", v8, v9, v10, v11, v12, v13, v14, v24);
      uint64_t v15 = (os_log_s *)sub_100086554(0x15u);
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        goto LABEL_14;
      }
    }

    sub_100657858();
    goto LABEL_14;
  }

uint64_t sub_1000F78F8()
{
  if (!dword_1008F6F5C) {
    return 121LL;
  }
  if (*(_BYTE *)(qword_1008E1E90 + 37)) {
    return 141LL;
  }
  uint64_t result = sub_10017A8B8(17);
  if (!(_DWORD)result)
  {
    uint64_t result = sub_10017A8B8(19);
    if (!(_DWORD)result)
    {
      uint64_t v1 = qword_1008E1E90;
      *(void *)(qword_1008E1E90 + 8) = 0LL;
      *(_BYTE *)(v1 + 36) = 0;
      if (*(void *)v1)
      {
        sub_1000B1838(*(void **)v1);
        uint64_t v1 = qword_1008E1E90;
        *(void *)qword_1008E1E90 = 0LL;
      }

      sub_1000B1838((void *)v1);
      uint64_t result = 0LL;
      qword_1008E1E90 = 0LL;
      dword_1008F6F5C = 0;
    }
  }

  return result;
}

uint64_t sub_1000F798C(uint64_t a1, uint64_t *a2, _WORD *a3, void *a4)
{
  if (!dword_1008F6F5C) {
    return 408LL;
  }
  uint64_t v17 = 0LL;
  uint64_t v8 = sub_1000F7AA8(a1, 1, (uint64_t)&v17);
  if (!(_DWORD)v8)
  {
    if (a2)
    {
      uint64_t v9 = v17;
      uint64_t v10 = *a2;
      uint64_t v11 = a2[1];
      *(void *)(v17 + 24) = *a2;
      *(void *)(v9 + 32) = v11;
      *(void *)(v9 + 112) = a2[2];
    }

    else
    {
      uint64_t v10 = 0LL;
      uint64_t v11 = 0LL;
      uint64_t v9 = v17;
      *(void *)(v17 + 112) = 0LL;
      *(void *)(v9 + 24) = 0LL;
      *(void *)(v9 + 32) = 0LL;
    }

    *(void *)(v9 + 120) = v11;
    if (a4) {
      uint64_t v12 = a4;
    }
    else {
      uint64_t v12 = &unk_1006BC568;
    }
    uint64_t v8 = sub_100174028( (uint64_t)sub_1000F7C04,  (uint64_t)sub_1000F7DF0,  (uint64_t)sub_1000F7F08,  17,  v9,  v10,  (_WORD *)(v9 + 16),  (uint64_t)v12);
    uint64_t v13 = v17;
    if ((_DWORD)v8)
    {
      sub_1000F7360(v17);
    }

    else
    {
      __int16 v14 = *(_WORD *)(v17 + 16);
      *(_WORD *)(v17 + 192) = v14;
      *(_DWORD *)(v13 + 40) = 1;
      *(_DWORD *)(v13 + 196) = 1;
      *a3 = v14;
      uint64_t v15 = sub_10012D890(a1);
      uint64_t v8 = 0LL;
      if (v15) {
        *(_BYTE *)(v15 + 256) = 0;
      }
    }
  }

  return v8;
}

uint64_t sub_1000F7AA8(uint64_t a1, char a2, uint64_t a3)
{
  if (!a3) {
    sub_1001EE2A0();
  }
  uint64_t v6 = qword_1008E1E90;
  uint64_t v7 = *(unsigned __int8 *)(qword_1008E1E90 + 36);
  if (*(_BYTE *)(qword_1008E1E90 + 36))
  {
    uint64_t v8 = 0LL;
    uint64_t v9 = *(void *)qword_1008E1E90;
    do
    {
      uint64_t v10 = v9;
      if (*(_DWORD *)(v9 + 196))
      {
        BOOL v11 = *(_DWORD *)a1 == *(_DWORD *)v9 && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(v9 + 4);
        uint64_t v10 = v8;
        if (v11)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"A connection to %: already exists", v22, v23, v24, v25, v26, v27, v28, a1);
            uint64_t v29 = (os_log_s *)sub_100086554(0x15u);
            if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          return 133LL;
        }
      }

      v9 += 216LL;
      uint64_t v8 = v10;
      --v7;
    }

    while (v7);
    if (!v10) {
      goto LABEL_13;
    }
    uint64_t result = 0LL;
    *(void *)a3 = v10;
    ++*(_BYTE *)(v6 + 37);
    *(_DWORD *)(v10 + 196) = 1;
    int v13 = *(_DWORD *)a1;
    *(_WORD *)(v10 + 4) = *(_WORD *)(a1 + 4);
    *(_DWORD *)uint64_t v10 = v13;
    *(_BYTE *)(*(void *)a3 + 6LL) = a2;
  }

  else
  {
LABEL_13:
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Too many connections. Refusing connection allocation request.",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  v30);
      uint64_t v21 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 104LL;
  }

  return result;
}

void sub_1000F7C04(int a1, __int16 a2, __int16 a3, uint64_t a4)
{
  if (!dword_1008F6F5C)
  {
    sub_1001EE2A0();
    if (!dword_1008F6F5C) {
      return;
    }
  }

  uint64_t v8 = sub_1000F7440(a1);
  if (!v8)
  {
    sub_1001EE134((uint64_t)"Unexpected L2cap connection confirmation", v19, v20, v21, v22, v23, v24, v25, v35);
    uint64_t v26 = (os_log_s *)sub_100086554(0x15u);
    if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_11:
    sub_100657858();
    return;
  }

  uint64_t v9 = v8;
  if ((_DWORD)a4)
  {
    uint64_t v10 = *(unsigned __int16 *)(v8 + 192);
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"L2capControlConnectCfm: %!", v11, v12, v13, v14, v15, v16, v17, a4);
      uint64_t v18 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    (*(void (**)(uint64_t, uint64_t))(*(void *)(qword_1008E1E90 + 8) + 8LL))(v10, a4);
    sub_1000F7360(v9);
    return;
  }

  if (*(_DWORD *)(v8 + 40) != 1)
  {
    sub_1001EE134((uint64_t)"Unexpected L2cap connection confirmation", v27, v28, v29, v30, v31, v32, v33, v35);
    uint64_t v34 = (os_log_s *)sub_100086554(0x15u);
    if (!os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_11;
  }

  *(_DWORD *)(v8 + 40) = 2;
  *(_WORD *)(v8 + 44) = a2;
  *(_WORD *)(v8 + 46) = a3;
  if (*(_BYTE *)(v8 + 6))
  {
    if (sub_100174028( (uint64_t)sub_1000F8A84,  (uint64_t)sub_1000F8BB0,  (uint64_t)sub_1000F7F08,  19,  v8,  *(void *)(v8 + 112),  (_WORD *)(v8 + 104),  (uint64_t)&unk_1006BC568))
    {
      *(_DWORD *)(v9 + 196) = 5;
      sub_1000F8CA8(v9, 436LL);
    }

    else
    {
      *(void *)(v9 + 128) = 1LL;
    }
  }

void sub_1000F7DF0(int a1, uint64_t a2)
{
  if (dword_1008F6F5C || (sub_1001EE2A0(), dword_1008F6F5C))
  {
    uint64_t v4 = sub_1000F7440(a1);
    if (v4)
    {
      uint64_t v5 = v4;
      if ((*(_DWORD *)(v4 + 196) | 4) == 5)
      {
        (*(void (**)(void, uint64_t))(*(void *)(qword_1008E1E90 + 8) + 8LL))( *(unsigned __int16 *)(v4 + 192),  2603LL);
LABEL_6:
        sub_1000F7360(v5);
        return;
      }

      if (!*(_DWORD *)(v4 + 128))
      {
        (*(void (**)(void, uint64_t))(*(void *)(qword_1008E1E90 + 8) + 16LL))( *(unsigned __int16 *)(v4 + 192),  a2);
        goto LABEL_6;
      }

      *(_WORD *)(v4 + 16) = 0;
      *(void *)(v4 + 40) = 0LL;
      sub_1000F8224(v4, a2);
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Unexpected L2cap disconnect indication", v6, v7, v8, v9, v10, v11, v12, v14);
      uint64_t v13 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

void sub_1000F7F08(uint64_t a1, unsigned __int8 *a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  if (!dword_1008F6F5C)
  {
    sub_1001EE2A0();
    if (!dword_1008F6F5C) {
      return;
    }
  }

  uint64_t v9 = sub_1000F7440(a1);
  if (!v9)
  {
    sub_1001EE134((uint64_t)"Unexpected L2capRecvDataInd", v18, v19, v20, v21, v22, v23, v24, v42);
    uint64_t v25 = (os_log_s *)sub_100086554(0x15u);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_20:
    sub_100657858();
    return;
  }

  if (!a3)
  {
    sub_1001EE134((uint64_t)"0 bytes received", v26, v27, v28, v29, v30, v31, v32, v42);
    uint64_t v33 = (os_log_s *)sub_100086554(0x15u);
    if (!os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_20;
  }

  uint64_t v10 = (unsigned __int16 *)v9;
  unsigned int v11 = *(unsigned __int16 *)(v9 + 44);
  if (v11 < a3)
  {
    sub_1001EE2A0();
    unsigned int v11 = v10[22];
  }

  unsigned int v13 = *a2;
  uint64_t v12 = a2 + 1;
  uint64_t v14 = v13 >> 4;
  uint64_t v15 = v13 & 0xF;
  if (v10[8] == (_DWORD)a1)
  {
    BOOL v16 = v11 > a3;
    uint64_t v17 = *(void (**)(void, uint64_t, uint64_t, unsigned __int8 *, void, BOOL, uint64_t))(*(void *)(qword_1008E1E90 + 8) + 24LL);
LABEL_17:
    v17(v10[96], v14, v15, v12, (unsigned __int16)(a3 - 1), v16, a5);
    return;
  }

  if (v10[52] == (_DWORD)a1)
  {
    BOOL v16 = v11 > a3;
    uint64_t v17 = *(void (**)(void, uint64_t, uint64_t, unsigned __int8 *, void, BOOL, uint64_t))(*(void *)(qword_1008E1E90 + 8) + 32LL);
    goto LABEL_17;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"recvDataInd cid (%d) doesn't match control (%d) or interrupt (%d)",  v34,  v35,  v36,  v37,  v38,  v39,  v40,  a1);
    uint64_t v41 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
  }

uint64_t sub_1000F80E0(int a1, uint64_t a2, void *a3, int a4)
{
  if (!dword_1008F6F5C) {
    return 408LL;
  }
  uint64_t v7 = (int8x16_t *)sub_1000F71B4(a1);
  if (!v7) {
    return 414LL;
  }
  uint64_t v8 = (uint64_t)v7;
  if (a2)
  {
    uint64_t v9 = *(void *)a2;
    int8x16_t v10 = *(int8x16_t *)(a2 + 8);
  }

  else
  {
    uint64_t v9 = 0LL;
    int8x16_t v10 = 0uLL;
  }

  v7[1].i64[1] = v9;
  v7[2].i64[0] = v10.i64[0];
  v7[7] = vextq_s8(v10, v10, 8uLL);
  if (a3) {
    uint64_t v12 = a3;
  }
  else {
    uint64_t v12 = &unk_1006BC568;
  }
  uint64_t v13 = sub_100174B2C( (uint64_t)sub_1000F7C04,  (uint64_t)sub_1000F7DF0,  (uint64_t)sub_1000F7F08,  v7[1].u16[0],  v9,  a4,  (uint64_t)v12);
  uint64_t v11 = v13;
  if (a4 && !(_DWORD)v13 || (sub_1000F7360(v8), !(_DWORD)v11))
  {
    uint64_t v14 = sub_10012D890(v8);
    uint64_t v11 = 0LL;
    if (v14) {
      *(_BYTE *)(v14 + 256) = 0;
    }
  }

  return v11;
}

uint64_t sub_1000F81C4(int a1)
{
  if (!dword_1008F6F5C) {
    return 408LL;
  }
  uint64_t v1 = sub_1000F71B4(a1);
  if (!v1) {
    return 414LL;
  }
  if (*(_DWORD *)(v1 + 196) != 2) {
    return 122LL;
  }
  *(_DWORD *)(v1 + 196) = 4;
  sub_1000F8224(v1, 436LL);
  return 0LL;
}

void sub_1000F8224(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int16 *)(a1 + 104);
  if (*(_WORD *)(a1 + 104))
  {
    *(_DWORD *)(a1 + 128) = 4;
    sub_1000F8D28((uint64_t)sub_1000F8BB0, v3, a2);
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"DoInterruptDisconnect called on connection with cid 0", v4, v5, v6, v7, v8, v9, v10, v12);
    uint64_t v11 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_1000F82A4(uint64_t a1, unsigned int a2, int a3, char a4, char a5)
{
  if (!dword_1008F6F5C) {
    return 408LL;
  }
  if (!sub_1000F71B4(a2)) {
    return 414LL;
  }
  uint64_t v10 = sub_1001EF29C(0);
  if (!v10) {
    return 106LL;
  }
  uint64_t v11 = v10;
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"SendSimple on handle 0x%x for channel 0x%x transtype 0x%x transparam 0x%x",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  a2);
    uint64_t v19 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v31 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v20 = sub_1000F845C(a1, a2, a3, a4, a5, (uint64_t)v11);
  if ((_DWORD)v20)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"SendSimple failed on handle 0x%x with status %!", v21, v22, v23, v24, v25, v26, v27, a2);
      uint64_t v28 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EF69C(v11);
  }

  return v20;
}

uint64_t sub_1000F845C(uint64_t a1, unsigned int a2, int a3, char a4, char a5, uint64_t a6)
{
  if (!dword_1008F6F5C) {
    return 408LL;
  }
  if (!a6)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  uint64_t v12 = sub_1000F71B4(a2);
  if (!v12) {
    return 414LL;
  }
  int v13 = *(_DWORD *)(v12 + 196);
  if (v13 != 2)
  {
    if (v13 != 4)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"connection isn't in connected state", v14, v15, v16, v17, v18, v19, v20, v49);
        uint64_t v21 = (os_log_s *)sub_100086554(0x15u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    return 122LL;
  }

  if (a3 != 19)
  {
    if (a3 == 17)
    {
      uint64_t v24 = v12 + 16;
      goto LABEL_19;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"channel must be OI_PSM_HID_INTERRUPT or OI_PSM_HID_CONTROL",  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v49);
      uint64_t v40 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 101LL;
  }

  uint64_t v24 = v12 + 104;
LABEL_19:
  if (*(void *)(v24 + 72))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"SendMbuf busy for handle 0x%x", v25, v26, v27, v28, v29, v30, v31, a2);
      uint64_t v32 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 410LL;
  }

  else
  {
    *(void *)(v24 + 72) = a6;
    *(void *)(v24 + 48) = a1;
    *(_BYTE *)(v24 + 57) = a4;
    *(_BYTE *)(v24 + 58) = a5;
    uint64_t v22 = sub_1000F88B4((unsigned __int16 *)v24, 1);
    if ((_DWORD)v22)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"SendFragment failed for handle 0x%x with status %!",  v41,  v42,  v43,  v44,  v45,  v46,  v47,  a2);
        uint64_t v48 = (os_log_s *)sub_100086554(0x15u);
        if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      *(void *)(v24 + 72) = 0LL;
    }
  }

  return v22;
}

uint64_t sub_1000F8664(uint64_t a1, unsigned int a2, int a3, char a4, char a5, char *a6, size_t a7)
{
  if (!dword_1008F6F5C) {
    return 408LL;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Endpoint SendData(sendCfm=0x%08x, handle=0x%x, chan=%d, transType=0x%1x, transParam=0x%1x, len=%d)",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  a1);
    uint64_t v21 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v46 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v22 = sub_1000F71B4(a2);
  if (!v22) {
    return 414LL;
  }
  if (a3 == 19)
  {
    uint64_t v23 = v22 + 104;
LABEL_12:
    uint64_t v25 = sub_1001EF80C(a6, a7, 2);
    if (!v25) {
      return 106LL;
    }
    uint64_t v26 = v25;
    uint64_t v24 = sub_1000F845C(a1, a2, a3, a4, a5, (uint64_t)v25);
    if ((_DWORD)v24)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Endpoint SendByte failed on handle 0x%x with status %!",  v27,  v28,  v29,  v30,  v31,  v32,  v33,  a2);
        uint64_t v34 = (os_log_s *)sub_100086554(0x15u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      *(void *)(v23 + 32) = 0LL;
      *(_WORD *)(v23 + 40) = 0;
      sub_1001EF69C(v26);
    }

    else
    {
      *(void *)(v23 + 32) = a6;
      *(_WORD *)(v23 + 40) = a7;
    }

    return v24;
  }

  if (a3 == 17)
  {
    uint64_t v23 = v22 + 16;
    goto LABEL_12;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"channel must be OI_PSM_HID_INTERRUPT or OI_PSM_HID_CONTROL",  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v44);
    uint64_t v42 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 101LL;
}

uint64_t sub_1000F88B4(unsigned __int16 *a1, int a2)
{
  uint64_t v4 = *((void *)a1 + 9);
  if (a2) {
    sub_1001EFEB8(v4, (unsigned __int16)(a1[15] - 1));
  }
  else {
    sub_1001EFF04(v4, (unsigned __int16)(a1[15] - 1));
  }
  unsigned __int16 v5 = *(_WORD *)(*((void *)a1 + 9) + 4LL) + 1;
  unsigned int v6 = a1[15];
  if (v6 < v5)
  {
    sub_1001EE2A0();
    unsigned int v6 = a1[15];
  }

  *((_BYTE *)a1 + 56) = v6 != v5;
  uint64_t v7 = (unsigned __int8 *)sub_1001EF29C(2u);
  if (!v7) {
    return 106LL;
  }
  uint64_t v8 = v7;
  if (a2) {
    char v9 = 16 * *((_BYTE *)a1 + 57);
  }
  else {
    char v9 = -80;
  }
  *((_BYTE *)a1 + 59) = a1[29] & 0xF | v9;
  uint64_t v10 = sub_1001EFB10(v7, (char *)a1 + 59, 1uLL, 2u);
  if ((_DWORD)v10
    || (uint64_t v10 = sub_1001EFC20(v8, *((void *)a1 + 9)), (_DWORD)v10)
    || (*((void *)v8 + 1) = a1, uint64_t v10 = sub_100172A98((uint64_t)sub_1000F89CC, *a1, 0LL, (uint64_t)v8, 0), (_DWORD)v10))
  {
    sub_1001EF69C(v8);
  }

  return v10;
}

void sub_1000F89CC(int a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    sub_1001EE2A0();
  }
  uint64_t v7 = (unsigned __int16 *)a2[1];
  sub_1001EF69C(a2);
  if (!v7) {
    sub_1001EE2A0();
  }
  if (*v7 != a1) {
    sub_1001EE2A0();
  }
  int v8 = *((unsigned __int8 *)v7 + 56);
  if (!(_DWORD)a4 && !*((_BYTE *)v7 + 56)) {
    a4 = sub_1000F88B4(v7, 0LL);
  }
  if (v8) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = (_DWORD)a4 == 0;
  }
  if (!v9)
  {
    uint64_t v10 = (void *)*((void *)v7 + 9);
    *((void *)v7 + 9) = 0LL;
    uint64_t v11 = (void (*)(unsigned __int16 *, void *, uint64_t))*((void *)v7 + 6);
    if (v11) {
      v11(v7, v10, a4);
    }
    if (v10) {
      sub_1001EF69C(v10);
    }
  }

void sub_1000F8A84(int a1, __int16 a2, __int16 a3, uint64_t a4)
{
  if (dword_1008F6F5C || (sub_1001EE2A0(), dword_1008F6F5C))
  {
    uint64_t v8 = sub_1000F7440(a1);
    if (v8 && (uint64_t v9 = v8, *(_DWORD *)(v8 + 128) == 1))
    {
      uint64_t v10 = *(unsigned __int16 *)(v8 + 192);
      if ((_DWORD)a4)
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(qword_1008E1E90 + 8) + 8LL))(v10, a4);
        sub_1000F7360(v9);
      }

      else
      {
        *(_DWORD *)(v9 + 196) = 2;
        *(_DWORD *)(v9 + 128) = 2;
        *(_WORD *)(v9 + 132) = a2;
        *(_WORD *)(v9 + 134) = a3;
        *(_BYTE *)(v9 + 8) = 1;
        (*(void (**)(uint64_t, void))(*(void *)(qword_1008E1E90 + 8) + 8LL))(v10, 0LL);
      }
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Unexpected L2cap connection confirmation", v11, v12, v13, v14, v15, v16, v17, v19);
      uint64_t v18 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

double sub_1000F8BB0(int a1, uint64_t a2)
{
  if (dword_1008F6F5C || (sub_1001EE2A0(), dword_1008F6F5C))
  {
    uint64_t v5 = sub_1000F7440(a1);
    if (v5)
    {
      uint64_t v6 = v5;
      *(_WORD *)(v5 + 104) = 0;
      *(void *)(v5 + 128) = 0LL;
      if (*(_DWORD *)(v5 + 196) == 4) {
        sub_1000F8CA8(v5, a2);
      }
      else {
        *(_DWORD *)(v5 + 196) = 4;
      }
      if (!*(_DWORD *)(v6 + 40))
      {
        (*(void (**)(void, uint64_t))(*(void *)(qword_1008E1E90 + 8) + 16LL))( *(unsigned __int16 *)(v6 + 192),  a2);
        return sub_1000F7360(v6);
      }
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Unexpected L2cap disconnect indication", v7, v8, v9, v10, v11, v12, v13, v15);
      uint64_t v14 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  return result;
}

void sub_1000F8CA8(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int16 *)(a1 + 16);
  if (*(_WORD *)(a1 + 16))
  {
    *(_DWORD *)(a1 + 40) = 4;
    sub_1000F8D28((uint64_t)sub_1000F7DF0, v3, a2);
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"DoInterruptDisconnect called on connection with cid 0", v4, v5, v6, v7, v8, v9, v10, v12);
    uint64_t v11 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_1000F8D28(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unsigned __int16 v3 = a2;
  int v5 = sub_1001759FC(a2, a3);
  if (v5)
  {
    uint64_t v16 = a1;
    int v17 = v3;
    int v18 = v5;
    v19[1] = &v16;
    v19[0] = (const void *)16;
    uint64_t v6 = sub_1001EE6DC((uint64_t)sub_1000F8DDC, v19, 0LL);
    if ((_DWORD)v6)
    {
      uint64_t v7 = v6;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_Dispatch_RegisterFunc failed: %!\n", v8, v9, v10, v11, v12, v13, v14, v7);
        uint64_t v15 = (os_log_s *)sub_100086554(0x15u);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

uint64_t sub_1000F8DDC(uint64_t a1)
{
  return (**(uint64_t (***)(void, void))(a1 + 8))( *(unsigned __int16 *)(*(void *)(a1 + 8) + 8LL),  *(unsigned int *)(*(void *)(a1 + 8) + 12LL));
}

uint64_t sub_1000F8DF0(unsigned int *a1, void *a2)
{
  if (!a1 || !a2)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  if (!*a2 || !a2[1] || !a2[2] || !a2[3])
  {
    sub_1001EE2A0();
    if (!*a2) {
      return 101LL;
    }
  }

  if (!a2[1] || !a2[2] || !a2[3]) {
    return 101LL;
  }
  uint64_t v24 = 0LL;
  uint64_t result = sub_1000F74DC(off_100884140, *a1, &v24);
  if (!(_DWORD)result)
  {
    qword_1008E1E98 = (uint64_t)a2;
    uint64_t result = _os_feature_enabled_impl("BluetoothFeatures", "RuleBasedHIDClassification");
    if ((_DWORD)result)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Registering for modeChangedCB", v5, v6, v7, v8, v9, v10, v11, v23);
        uint64_t v12 = (os_log_s *)sub_100086554(0x15u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          uint64_t v13 = sub_1001EDDCC();
          *(_DWORD *)int buf = 136446210;
          uint64_t v26 = v13;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
        }
      }

      uint64_t result = sub_100112C40((uint64_t)sub_1000F8FA0, 0LL);
      if ((_DWORD)result)
      {
        uint64_t v14 = result;
        uint64_t result = sub_1000A86F0();
        if ((_DWORD)result)
        {
          sub_1001EE134((uint64_t)"Error registering for modeChangedCB: %d", v15, v16, v17, v18, v19, v20, v21, v14);
          uint64_t v22 = (os_log_s *)sub_100086554(0x15u);
          uint64_t result = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);
          if ((_DWORD)result)
          {
            sub_100657858();
            return 0LL;
          }
        }
      }
    }
  }

  return result;
}

void sub_1000F8FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
  {
    sub_1001EE134((uint64_t)"modeChangedCB : NULL address", v32, v33, v34, v35, v36, v37, v38, v56);
    uint64_t v39 = (os_log_s *)sub_100086554(0x15u);
    if (!os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_25:
    sub_100657858();
    return;
  }

  uint64_t v7 = sub_10012D890(a2);
  if (!v7)
  {
    sub_1001EE134((uint64_t)"modeChangedCB : The connection is gone.", v40, v41, v42, v43, v44, v45, v46, v56);
    uint64_t v47 = (os_log_s *)sub_100086554(0x15u);
    if (!os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_25;
  }

  uint64_t v8 = v7;
  uint64_t v9 = sub_1000F73D8(a2);
  if (v9)
  {
    if ((_DWORD)a3 == 2)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(unsigned __int16 *)(v8 + 136);
      HIDWORD(v13) = -1431655765 * v11;
      LODWORD(v13) = -1431655765 * v11;
      unsigned int v12 = v13 >> 2;
      BOOL v16 = (_DWORD)v11 == 18 || v12 < 0x15555556 || v11 > 0x40;
      if (sub_1000A86F0())
      {
        sub_1001EDE10(a2, v17, v18, v19, v20, v21, v22, v23);
        sub_1001EE134((uint64_t)"SniffInterval %d for %s previous: %s (%d)", v24, v25, v26, v27, v28, v29, v30, v11);
        uint64_t v31 = (os_log_s *)sub_100086554(0x15u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)int buf = 136446210;
          uint64_t v58 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
        }
      }

      if ((_DWORD)v11)
      {
        if (v16)
        {
          if (*(_BYTE *)(v10 + 211))
          {
            if (!*(_BYTE *)(v10 + 210))
            {
              *(_BYTE *)(v10 + 211) = 0;
              (*(void (**)(uint64_t, uint64_t, void))(qword_1008E1E98 + 120))(a2, a4, 0LL);
            }
          }
        }

        else if (!*(_BYTE *)(v10 + 211) && !*(_BYTE *)(v10 + 210))
        {
          *(_BYTE *)(v10 + 211) = 1;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(qword_1008E1E98 + 120))(a2, a4, 1LL);
        }

        *(_BYTE *)(v10 + 210) = 1;
      }

      else if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Sniff interval should never be 0 when in sniff mode.",  v48,  v49,  v50,  v51,  v52,  v53,  v54,  v56);
        uint64_t v55 = (os_log_s *)sub_100086554(0x15u);
        if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t))(qword_1008E1E98 + 128))(a2, a4, a3);
  }

uint64_t sub_1000F9264()
{
  if (_os_feature_enabled_impl("BluetoothFeatures", "RuleBasedHIDClassification"))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Unregistering the modeChangedCB", v0, v1, v2, v3, v4, v5, v6, v19);
      uint64_t v7 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v21 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
      }
    }

    uint64_t v8 = sub_100112C50((uint64_t)sub_1000F8FA0);
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Failed to unregister modeChangedCB with error: %d",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v9);
        uint64_t v17 = (os_log_s *)sub_100086554(0x15u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

  return sub_1000F78F8();
}

uint64_t sub_1000F9390(uint64_t a1, uint64_t *a2, _WORD *a3, void *a4)
{
  if (dword_1008F6F5C) {
    return sub_1000F798C(a1, a2, a3, a4);
  }
  else {
    return 2601LL;
  }
}

uint64_t sub_1000F93B4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_1000F71B4(a1);
  if (!v6) {
    return 414LL;
  }
  uint64_t v7 = v6;
  if (*(_BYTE *)(v6 + 73))
  {
    sub_1001EE134( (uint64_t)"Send HID control - returning busy due for handle 0x%x to transtype %d controlop %s",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  a1);
    uint64_t v23 = (os_log_s *)sub_100086554(0x15u);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }

  if (*(_BYTE *)(v6 + 76))
  {
    sub_1001EE134( (uint64_t)"Send HID control - returning busy for handle 0x%x due to pendingControlOp %s controlop %s",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  a1);
    uint64_t v23 = (os_log_s *)sub_100086554(0x15u);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_18;
    }
LABEL_17:
    *(_DWORD *)int buf = 136446210;
    uint64_t v47 = sub_1001EDDCC();
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
LABEL_18:
    if (a2 == 5) {
      *(_BYTE *)(v7 + 77) |= 0x20u;
    }
    return 118LL;
  }

  uint64_t v24 = sub_1001EF29C(0);
  if (!v24) {
    return 106LL;
  }
  uint64_t v25 = v24;
  uint64_t v15 = sub_1000F845C((uint64_t)sub_1000F970C, a1, 17, 1, a2, (uint64_t)v24);
  if ((_DWORD)v15)
  {
    if (sub_1000A86F0())
    {
      uint64_t v33 = a2 > 5 ? "??" : off_100884170[(char)a2];
      sub_1001EE134( (uint64_t)"SendHidControl failed for op %s with status %!",  v26,  v27,  v28,  v29,  v30,  v31,  v32,  (uint64_t)v33);
      uint64_t v44 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    *(_BYTE *)(v7 + 76) = 0;
    *(void *)(v7 + 80) = 0LL;
    sub_1001EF69C(v25);
  }

  else
  {
    *(_BYTE *)(v7 + 73) = 0;
    *(_BYTE *)(v7 + 76) = a2;
    *(void *)(v7 + 80) = a3;
    if (sub_1000A86F0())
    {
      unint64_t v42 = *(char *)(v7 + 76);
      if (v42 > 5) {
        uint64_t v43 = "??";
      }
      else {
        uint64_t v43 = off_100884170[v42];
      }
      sub_1001EE134((uint64_t)"SendHidControl with pendingControlOp %s", v35, v36, v37, v38, v39, v40, v41, (uint64_t)v43);
      uint64_t v45 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v45, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v47 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
      }

      return 0LL;
    }
  }

  return v15;
}

void sub_1000F970C(unsigned __int16 *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    uint64_t v5 = *((char *)a1 + 60);
    *((_BYTE *)a1 + 60) = 0;
    if (sub_1000A86F0())
    {
      uint64_t v13 = v5 > 5 ? "??" : off_100884170[v5];
      sub_1001EE134( (uint64_t)"_SendHidControlCfm for pending control op %s with status %!",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  (uint64_t)v13);
      uint64_t v22 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v27 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
      }
    }

    uint64_t v23 = sub_1000F7440(*a1);
    if (v23)
    {
      uint64_t v24 = *(void (**)(void, void, uint64_t))(v23 + 80);
      if (v24) {
        v24(*(unsigned __int16 *)(v23 + 192), v5, a3);
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Send HID control - channel is invalid", v14, v15, v16, v17, v18, v19, v20, v25);
    uint64_t v21 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_1000F9868(unsigned int a1, char a2, int a3, int a4)
{
  uint64_t v8 = sub_1000F71B4(a1);
  if (!v8) {
    return 414LL;
  }
  uint64_t v9 = v8;
  int v16 = 0;
  if (a3 == -1)
  {
    size_t v10 = 0LL;
  }

  else
  {
    LOBYTE(v16) = a3;
    size_t v10 = 1LL;
  }

  char v12 = a2 & 3;
  if (a4 != 0xFFFF)
  {
    *(_WORD *)((unint64_t)&v16 | v10) = a4;
    size_t v10 = v10 | 2;
    v12 |= 8u;
  }

  uint64_t v13 = sub_1001EF80C((char *)&v16, v10, 0);
  if (!v13) {
    return 106LL;
  }
  uint64_t v14 = v13;
  if (*(_BYTE *)(v9 + 73))
  {
    sub_1001EF69C(v13);
    return 118LL;
  }

  else
  {
    *(_BYTE *)(v9 + 73) = 4;
    uint64_t v11 = sub_1000F845C(0LL, a1, 17, 4, v12, (uint64_t)v13);
    if ((_DWORD)v11)
    {
      sub_1001EF69C(v14);
      *(_BYTE *)(v9 + 73) = 0;
    }

    else
    {
      sub_1000F7158(a1);
    }
  }

  return v11;
}

uint64_t sub_1000F997C(unsigned int a1, char a2, char *a3, size_t a4)
{
  uint64_t v8 = sub_1000F71B4(a1);
  if (!v8) {
    return 414LL;
  }
  uint64_t v9 = v8;
  if (*(_BYTE *)(v8 + 73)) {
    return 118LL;
  }
  *(_BYTE *)(v8 + 73) = 5;
  uint64_t result = sub_1000F8664((uint64_t)nullsub_67, a1, 17, 5, a2, a3, a4);
  if ((_DWORD)result)
  {
    *(_BYTE *)(v9 + 73) = 0;
  }

  else
  {
    sub_1000F7158(a1);
    return 0LL;
  }

  return result;
}

uint64_t sub_1000F9A20(unsigned int a1, char a2)
{
  uint64_t v4 = sub_1000F71B4(a1);
  if (!v4) {
    return 414LL;
  }
  uint64_t v5 = v4;
  if (*(_BYTE *)(v4 + 73)) {
    return 118LL;
  }
  *(_BYTE *)(v4 + 73) = 7;
  *(_BYTE *)(v4 + 9) = a2;
  uint64_t v6 = sub_1000F82A4(0LL, a1, 17, 7, a2);
  if ((_DWORD)v6)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Set Protocol failed for handle %d with status %!", v7, v8, v9, v10, v11, v12, v13, v6);
      uint64_t v14 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    *(_BYTE *)(v5 + 73) = 0;
  }

  else
  {
    sub_1000F7158(a1);
  }

  return v6;
}

uint64_t sub_1000F9AF8(unsigned int a1, char a2, char *a3, size_t a4)
{
  uint64_t v8 = (unsigned __int16 *)sub_1000F749C(a1, 19);
  if (!v8) {
    return 101LL;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1000F7440(*v8);
  if (!v10) {
    return 414LL;
  }
  uint64_t v11 = v10;
  if (*(_BYTE *)(v10 + 73)) {
    return 118LL;
  }
  uint64_t result = sub_1000F8664((uint64_t)sub_1000F9BAC, a1, 19, 10, a2, a3, a4);
  if ((_DWORD)result)
  {
    a3 = 0LL;
    LOWORD(a4) = 0;
    *(_BYTE *)(v11 + 73) = 0;
  }

  *((void *)v9 + 4) = a3;
  v9[20] = a4;
  return result;
}

void sub_1000F9BAC(unsigned __int16 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000F7440(*a1);
  if (v5)
  {
    uint64_t v6 = *(void (**)(void, void, void, uint64_t))(qword_1008E1E98 + 88);
    if (v6) {
      v6(*(unsigned __int16 *)(v5 + 192), *((void *)a1 + 4), a1[20], a3);
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Couldn't get endpoint handle in OutputReportSendDataCfm",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v15);
    uint64_t v14 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_1000F9C44()
{
  return (*(uint64_t (**)(void))qword_1008E1E98)();
}

uint64_t sub_1000F9C54(uint64_t a1, uint64_t a2)
{
  if (!(_DWORD)a2) {
    sub_1000FA688(a1);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(qword_1008E1E98 + 8))(a1, a2);
}

uint64_t sub_1000F9C94(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(sub_1000F71B4(a1) + 196))
  {
    (*(void (**)(uint64_t, uint64_t))(qword_1008E1E98 + 16))(a1, a2);
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"DisconnectInd received for connection that is already disconnected",  v4,  v5,  v6,  v7,  v8,  v9,  v10,  v14);
    uint64_t v11 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  uint64_t v12 = sub_1000F71B4(a1);
  if (!v12) {
    sub_1001EE2A0();
  }
  uint64_t result = sub_1001EEB14(*(unsigned int *)(v12 + 204));
  *(_DWORD *)(v12 + 204) = 0;
  return result;
}

void sub_1000F9D3C(uint64_t a1, int a2, uint64_t a3, _BYTE *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1000F71B4(a1);
  if (v12)
  {
    uint64_t v13 = v12;
    sub_1000F72D4(a1);
    if (a2 == 1 && (_DWORD)a3 == 5)
    {
      (*(void (**)(uint64_t))(qword_1008E1E98 + 24))(a1);
      return;
    }

    if (!*(_DWORD *)(v13 + 204)) {
      sub_1000FA688(a1);
    }
    int v14 = *(unsigned __int8 *)(v13 + 73);
    *(_BYTE *)(v13 + 73) = 0;
    switch(v14)
    {
      case 4:
        if ((a2 - 10) >= 2)
        {
          if (a2)
          {
            uint64_t v34 = *(void (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t))(qword_1008E1E98 + 32);
            if (!v34) {
              return;
            }
            uint64_t v36 = a1;
            uint64_t v35 = 14LL;
          }

          else
          {
            uint64_t v34 = *(void (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t))(qword_1008E1E98 + 32);
            if (!v34) {
              return;
            }
            if ((_DWORD)a3) {
              uint64_t v35 = a3;
            }
            else {
              uint64_t v35 = 14LL;
            }
            uint64_t v36 = a1;
          }

          v34(v36, v35, 0LL, 0LL, 0LL, 1LL, 1LL);
        }

        else
        {
          uint64_t v15 = *(void (**)(uint64_t, void, uint64_t, _BYTE *, uint64_t, BOOL, uint64_t))(qword_1008E1E98 + 32);
          if (v15) {
            v15(a1, 0LL, a3 & 3, a4, a5, a2 == 10, a6);
          }
          if ((a6 & 1) == 0) {
            *(_BYTE *)(v13 + 73) = 4;
          }
        }

        return;
      case 5:
        uint64_t v24 = *(void (**)(uint64_t, uint64_t, void, void, void))(qword_1008E1E98 + 40);
        if (v24)
        {
          if (a2) {
            uint64_t v25 = 15LL;
          }
          else {
            uint64_t v25 = a3;
          }
          v24(a1, v25, *(void *)(v13 + 48), *(unsigned __int16 *)(v13 + 56), 0LL);
        }

        return;
      case 6:
        if (a2 != 10 || (_DWORD)a5 != 1)
        {
          uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(qword_1008E1E98 + 48);
          if (a2) {
            goto LABEL_47;
          }
          goto LABEL_43;
        }

        *(_BYTE *)(v13 + 8) = *a4;
        uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(qword_1008E1E98 + 48);
        if (v26) {
          goto LABEL_30;
        }
        return;
      case 7:
        if (a2)
        {
          a3 = 15LL;
          char v27 = 1;
        }

        else
        {
          char v27 = *(_BYTE *)(v13 + 9);
        }

        *(_BYTE *)(v13 + 8) = v27;
        uint64_t v31 = *(void (**)(uint64_t, uint64_t, void))(qword_1008E1E98 + 56);
        if (v31)
        {
          uint64_t v33 = a1;
          uint64_t v32 = a3;
          goto LABEL_53;
        }

        return;
      case 8:
        if (a2 == 10 && (_DWORD)a5 == 1)
        {
          uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(qword_1008E1E98 + 64);
          if (!v26) {
            return;
          }
LABEL_30:
          uint64_t v28 = *a4;
          uint64_t v29 = a1;
          uint64_t v30 = 0LL;
        }

        else
        {
          uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(qword_1008E1E98 + 64);
          if (a2)
          {
LABEL_47:
            if (!v26) {
              return;
            }
            uint64_t v29 = a1;
            uint64_t v28 = 0LL;
            uint64_t v30 = 15LL;
            uint64_t v37 = 411LL;
            goto LABEL_49;
          }

void sub_1000FA078(uint64_t a1, int a2, int a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_1000F71B4(a1);
  if (v14)
  {
    if ((a2 - 12) > 0xFFFFFFFD)
    {
      if (a3 == 1)
      {
        uint64_t v31 = v14;
        if (*(_DWORD *)(v14 + 204)) {
          *(_BYTE *)(v14 + 208) = 1;
        }
        else {
          sub_1000FA688(a1);
        }
        if (*(_BYTE *)(v31 + 8))
        {
          uint64_t v40 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t, BOOL, uint64_t, uint64_t))(qword_1008E1E98 + 80);
          if (v40)
          {
            v40(a1, a4, a5, a2 == 10, a6, a7);
            return;
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"No report-protocol handler present. Ignoring.",  v50,  v51,  v52,  v53,  v54,  v55,  v56,  v92);
            uint64_t v57 = (os_log_s *)sub_100086554(0x15u);
            if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
              goto LABEL_14;
            }
          }
        }

        else if ((_DWORD)a5)
        {
          if (a2 == 10 && (a6 & 1) != 0)
          {
            int v41 = *a4;
            if (v41 == 2)
            {
              if (a5 > 3)
              {
                uint64_t v91 = *(void (**)(uint64_t, void, void, void))(qword_1008E1E98 + 104);
                if (v91) {
                  v91(a1, a4[1], (char)a4[2], (char)a4[3]);
                }
              }

              else if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"Boot-mode mouse report too short. Ignoring.",  v74,  v75,  v76,  v77,  v78,  v79,  v80,  v92);
                uint64_t v81 = (os_log_s *)sub_100086554(0x15u);
                if (os_log_type_enabled(v81, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_14;
                }
              }
            }

            else if (v41 == 1)
            {
              if (a5 > 8)
              {
                uint64_t v90 = *(void (**)(uint64_t, void, unsigned __int8 *))(qword_1008E1E98 + 96);
                if (v90) {
                  v90(a1, a4[1], a4 + 3);
                }
              }

              else if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"Boot-mode keyboard report too short. Ignoring.",  v42,  v43,  v44,  v45,  v46,  v47,  v48,  v92);
                uint64_t v49 = (os_log_s *)sub_100086554(0x15u);
                if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_14;
                }
              }
            }

            else if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Received unknown boot protocol report ID %d",  v82,  v83,  v84,  v85,  v86,  v87,  v88,  *a4);
              uint64_t v89 = (os_log_s *)sub_100086554(0x15u);
              if (os_log_type_enabled(v89, OS_LOG_TYPE_ERROR)) {
                goto LABEL_14;
              }
            }
          }

          else if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Received segmented boot report. Ignoring.", v66, v67, v68, v69, v70, v71, v72, v92);
            uint64_t v73 = (os_log_s *)sub_100086554(0x15u);
            if (os_log_type_enabled(v73, OS_LOG_TYPE_ERROR)) {
              goto LABEL_14;
            }
          }
        }

        else if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Received empty boot report. Ignoring.", v58, v59, v60, v61, v62, v63, v64, v92);
          int v65 = (os_log_s *)sub_100086554(0x15u);
          if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)) {
            goto LABEL_14;
          }
        }
      }

      else if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Received non-input report type on interrupt endpoint. Ignoring.",  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v92);
        uint64_t v39 = (os_log_s *)sub_100086554(0x15u);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
          goto LABEL_14;
        }
      }
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received non DATA/DATC transaction on interrupt endpoint. Ignoring.",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  v92);
      uint64_t v22 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
LABEL_14:
      }
        sub_100657858();
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Unknown connection. Ignoring interrupt data.", v23, v24, v25, v26, v27, v28, v29, v92);
    uint64_t v30 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
      goto LABEL_14;
    }
  }

void sub_1000FA448(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = *(unsigned __int16 *)(a1 + 192);
    *(_DWORD *)(a1 + 200) = 0;
    int v2 = *(unsigned __int8 *)(a1 + 73);
    *(_BYTE *)(a1 + 73) = 0;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"HID Transaction Timeout - for handle 0x%x and previousTransType %d",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  v1);
      uint64_t v10 = (os_log_s *)sub_100086554(0x15u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    switch(v2)
    {
      case 1:
        sub_1000F81C4(v1);
        break;
      case 4:
        uint64_t v27 = *(void (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t))(qword_1008E1E98 + 32);
        if (v27) {
          v27(v1, 15LL, 0LL, 0LL, 0LL, 1LL, 1LL);
        }
        break;
      case 5:
        uint64_t v28 = *(void (**)(uint64_t, uint64_t, void, void, uint64_t))(qword_1008E1E98 + 40);
        if (v28) {
          v28(v1, 15LL, 0LL, 0LL, 2604LL);
        }
        break;
      case 6:
        uint64_t v29 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(qword_1008E1E98 + 48);
        if (v29) {
          goto LABEL_22;
        }
        break;
      case 7:
        uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(qword_1008E1E98 + 56);
        if (v30) {
          goto LABEL_24;
        }
        break;
      case 8:
        uint64_t v29 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(qword_1008E1E98 + 64);
        if (v29) {
LABEL_22:
        }
          v29(v1, 0LL, 15LL, 2604LL);
        break;
      case 9:
        uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(qword_1008E1E98 + 72);
        if (v30) {
LABEL_24:
        }
          v30(v1, 15LL, 2604LL);
        break;
      case 10:
        uint64_t v31 = sub_1000F749C(v1, 19);
        if (v31)
        {
          uint64_t v32 = *(void (**)(uint64_t, void, void, uint64_t))(qword_1008E1E98 + 88);
          if (v32) {
            v32(v1, *(void *)(v31 + 32), *(unsigned __int16 *)(v31 + 40), 112LL);
          }
        }

        break;
      default:
        sub_1000F81C4(v1);
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"No transactions outstanding, disconnecting", v19, v20, v21, v22, v23, v24, v25, v33);
          uint64_t v26 = (os_log_s *)sub_100086554(0x15u);
          if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
            goto LABEL_9;
          }
        }

        break;
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Invalid HID host handle in transaction timeout", v11, v12, v13, v14, v15, v16, v17, v33);
    uint64_t v18 = (os_log_s *)sub_100086554(0x15u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
LABEL_9:
    }
      sub_100657858();
  }

uint64_t sub_1000FA688(int a1)
{
  __int16 v4 = a1;
  uint64_t v1 = sub_1000F71B4(a1);
  if (!v1) {
    sub_1001EE2A0();
  }
  if (*(_DWORD *)(v1 + 204)) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)(v1 + 208)) {
    sub_1001EE2A0();
  }
  v3[1] = &v4;
  v3[0] = (const void *)2;
  return sub_1001EE6E8((uint64_t)sub_1000FA700, v3, 300, (int *)(v1 + 204));
}

uint64_t sub_1000FA700(uint64_t a1)
{
  uint64_t v1 = **(unsigned __int16 **)(a1 + 8);
  uint64_t result = sub_1000F71B4(v1);
  if (result)
  {
    int v3 = *(unsigned __int8 *)(result + 208);
    *(_DWORD *)(result + 204) = 0;
    *(_BYTE *)(result + 208) = 0;
    if (v3) {
      return sub_1000FA688(v1);
    }
    else {
      return (*(uint64_t (**)(uint64_t))(qword_1008E1E98 + 112))(v1);
    }
  }

  return result;
}

double sub_1000FA768(uint64_t a1)
{
  uint64_t v1 = *(_OWORD **)(a1 + 64);
  double result = 0.0;
  *(_OWORD *)((char *)v1 + 139) = 0u;
  v1[7] = 0u;
  v1[8] = 0u;
  v1[5] = 0u;
  v1[6] = 0u;
  v1[3] = 0u;
  v1[4] = 0u;
  v1[1] = 0u;
  v1[2] = 0u;
  *uint64_t v1 = 0u;
  return result;
}

uint64_t sub_1000FA78C(uint64_t a1, const void *a2, unsigned int a3, char *__s)
{
  unsigned int v8 = strlen(__s);
  if (v8 > 0x10) {
    return 1740LL;
  }
  memmove(*(void **)(a1 + 64), __s, v8);
  uint64_t v10 = *(_BYTE **)(a1 + 64);
  v10[16] = v8;
  if (a3 > 0x14) {
    return 1757LL;
  }
  char v11 = 0;
  if (a2)
  {
    if (a3)
    {
      memmove(v10 + 17, a2, a3);
      uint64_t v10 = *(_BYTE **)(a1 + 64);
      char v11 = a3;
    }
  }

  uint64_t result = 0LL;
  v10[37] = v11;
  return result;
}

uint64_t sub_1000FA834(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 64);
  if (!v4) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)a2 != 77) {
    sub_1001EE2A0();
  }
  unsigned int v5 = *(unsigned __int16 *)(a2 + 8);
  if (*(_WORD *)(a2 + 8))
  {
    unsigned int v6 = 0;
    char v7 = 0;
    uint64_t result = 0LL;
    while (1)
    {
      uint64_t v9 = *(void *)(a2 + 16);
      uint64_t v10 = (_BYTE *)(v9 + v6);
      uint64_t v11 = v6 + 2LL;
      int v12 = v10[1];
      if (*v10)
      {
        if (*v10 == 1)
        {
          if (v12 != 1) {
            goto LABEL_13;
          }
          char v7 = *(_BYTE *)(v9 + v11);
        }
      }

      else
      {
        if (v12 != 16)
        {
LABEL_13:
          uint64_t result = 1744LL;
          goto LABEL_14;
        }

        *(_OWORD *)(v4 + 61) = *(_OWORD *)(v9 + v11);
        unsigned int v5 = *(unsigned __int16 *)(a2 + 8);
      }

uint64_t sub_1000FA908(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)a2 != 78) {
    sub_1001EE2A0();
  }
  *(void *)(v3 + 38) = 0LL;
  *(void *)(v3 + 46) = 0LL;
  *(_DWORD *)(v3 + 54) = 0;
  *(_BYTE *)(v3 + 58) = 0;
  if (*(_WORD *)(a2 + 8))
  {
    unsigned int v4 = 0;
    uint64_t v5 = 0LL;
    while (1)
    {
      uint64_t v6 = *(void *)(a2 + 16);
      char v7 = (_BYTE *)(v6 + v4);
      unsigned int v8 = v4 + 2;
      unsigned int v9 = v7[1];
      if (*v7 == 1)
      {
        if (v7[1])
        {
          if (v9 <= 0x14)
          {
            memmove((void *)(v3 + 38), (const void *)(v6 + v8), v7[1]);
            *(_BYTE *)(v3 + 58) = v9;
            goto LABEL_15;
          }

void sub_1000FA9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 64);
  if (!v4) {
    sub_1001EE2A0();
  }
  uint64_t v8 = 0LL;
  memset(v7, 0, sizeof(v7));
  sub_1001EC5E8((uint64_t)v7);
  sub_1001EC5FC((uint64_t)v7, (__int128 *)(*(void *)(a1 + 64) + 61LL), 0x10uLL);
  sub_1001EC5FC((uint64_t)v7, (__int128 *)":", 1uLL);
  sub_1001EC5FC((uint64_t)v7, *(__int128 **)(a1 + 64), *(unsigned __int8 *)(*(void *)(a1 + 64) + 16LL));
  *(_WORD *)(v4 + 93) = 4096;
  sub_1001ED0E4((_OWORD *)(v4 + 95), (uint64_t)v7);
  size_t v5 = *(unsigned __int8 *)(v4 + 37);
  if (*(_BYTE *)(v4 + 37))
  {
    *(_BYTE *)(v4 + 111) = 1;
    *(_BYTE *)(v4 + 112) = v5;
    memmove((void *)(v4 + 113), (const void *)(v4 + 17), v5);
    __int16 v6 = *(unsigned __int8 *)(v4 + 37) + 20;
  }

  else
  {
    __int16 v6 = 18;
  }

  *(_BYTE *)a2 = 78;
  *(void *)(a2 + 16) = v4 + 93;
  *(_WORD *)(a2 + 8) = v6;
}

void sub_1000FAAE0(char *__s, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 64);
  if (v6)
  {
    if (__s) {
      goto LABEL_3;
    }
  }

  else
  {
    sub_1001EE2A0();
    if (__s) {
      goto LABEL_3;
    }
  }

  sub_1001EE2A0();
LABEL_3:
  uint64_t v11 = 0LL;
  memset(__src, 0, sizeof(__src));
  unsigned __int16 v7 = strlen(__s);
  sub_1001EC5E8((uint64_t)&__src[8]);
  sub_1000B0400((uint64_t)__src);
  sub_1001EC5FC((uint64_t)&__src[8], (__int128 *)__src, 8uLL);
  sub_1001EC5FC((uint64_t)&__src[8], (__int128 *)__s, v7);
  *(_WORD *)(v6 + 134) = 4096;
  sub_1001ED0E4((_OWORD *)(v6 + 136), (uint64_t)&__src[8]);
  char v8 = *(_BYTE *)(v6 + 59) | (2 * *(_BYTE *)(a2 + 57));
  if (v8)
  {
    *(_WORD *)(v6 + 152) = 257;
    *(_BYTE *)(v6 + 154) = v8;
    __int16 v9 = 21;
  }

  else
  {
    __int16 v9 = 18;
  }

  *(_BYTE *)a3 = 77;
  *(void *)(a3 + 16) = v6 + 134;
  *(_WORD *)(a3 + 8) = v9;
}

uint64_t sub_1000FABE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 64);
  if (!v1) {
    sub_1001EE2A0();
  }
  uint64_t v4 = 0LL;
  memset(v3, 0, sizeof(v3));
  __int128 v5 = 0uLL;
  sub_1001EC5E8((uint64_t)v3);
  sub_1001EC5FC((uint64_t)v3, (__int128 *)(v1 + 136), 0x10uLL);
  sub_1001EC5FC((uint64_t)v3, (__int128 *)":", 1uLL);
  sub_1001EC5FC((uint64_t)v3, (__int128 *)v1, *(unsigned __int8 *)(v1 + 16));
  sub_1001ED0E4(&v5, (uint64_t)v3);
  if (v5 == *(_OWORD *)(v1 + 77)) {
    return 0LL;
  }
  else {
    return 1742LL;
  }
}

void sub_1000FACBC(uint64_t a1)
{
  __asm { BR              X11 }

uint64_t sub_1000FACF0()
{
  if (*(_WORD *)(v0 + 8))
  {
    if (*(_WORD *)(*(void *)(v0 + 16) + 2LL * (*(unsigned __int16 *)(v0 + 8) - 1)))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OBEX unicode must be NUL terminated", v1, v2, v3, v4, v5, v6, v7, v11);
        char v8 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    return (unsigned __int16)(2 * *(_WORD *)(v0 + 8) + 3);
  }

  else
  {
    return 3;
  }

uint64_t sub_1000FAD7C(uint64_t a1, uint64_t a2, unsigned __int8 *a3, unsigned int a4, uint64_t a5)
{
  if (a5) {
    unsigned int v10 = *(unsigned __int8 *)(a5 + 8);
  }
  else {
    unsigned int v10 = 0;
  }
  if (*(void *)(a1 + 40)) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)(a1 + 80)) {
    sub_1001EE2A0();
  }
  unsigned __int8 v11 = v10 + a4 + 1;
  if (a4)
  {
    uint64_t v12 = a4;
    uint64_t v13 = a3;
    do
    {
      unsigned __int8 v14 = *v13;
      v13 += 24;
      if ((v14 & 0xC0) == 0x40) {
        ++v11;
      }
      --v12;
    }

    while (v12);
  }

  if (v10)
  {
    uint64_t v15 = *(char **)a5;
    uint64_t v16 = v10;
    do
    {
      char v17 = *v15;
      v15 += 24;
      if ((v17 & 0xC0) == 0x40) {
        ++v11;
      }
      --v16;
    }

    while (v16);
  }

  __int16 v37 = *(_WORD *)(a2 + 12);
  uint64_t v18 = sub_1001EF29C(v11);
  if (v18)
  {
    uint64_t v19 = (unsigned __int8 *)v18;
    if (a4)
    {
      uint64_t v20 = a4;
      do
      {
        uint64_t v21 = sub_1000FB0E8(a1, v19, a3, &v37);
        if ((_DWORD)v21) {
          goto LABEL_38;
        }
        a3 += 24;
      }

      while (--v20);
    }

    if (v10)
    {
      uint64_t v22 = 0LL;
      uint64_t v23 = 24LL * v10;
      while (1)
      {
        uint64_t v21 = sub_1000FB0E8(a1, v19, (unsigned __int8 *)(*(void *)a5 + v22), &v37);
        if ((_DWORD)v21) {
          break;
        }
        v22 += 24LL;
        if (v23 == v22) {
          goto LABEL_27;
        }
      }

uint64_t sub_1000FB0E8(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3, _WORD *a4)
{
  int v8 = *a3;
  sub_1000FACBC((uint64_t)a3);
  if (!v9) {
    return 101LL;
  }
  uint64_t v15 = 0LL;
  int v10 = (unsigned __int16)*a4;
  unsigned int v11 = *(unsigned __int16 *)(a1 + 76);
  if (v10 + v9 <= v11)
  {
    *a4 = v10 + v9;
    __asm { BR              X10 }
  }

  if ((*a3 & 0xFE) != 0x48) {
    return 1737LL;
  }
  unsigned __int16 v12 = v11 - v10;
  uint64_t v14 = *((void *)a3 + 2);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)a3;
  *(void *)(a1 + 96) = v14 + v12 - 3LL;
  *(_WORD *)(a1 + 88) -= v12 - 3;
  *a4 += v12;
  LOBYTE(v15) = 72;
  BYTE1(v15) = HIBYTE(v12);
  BYTE2(v15) = v12;
  uint64_t result = sub_1001EFB10(a2, (char *)&v15, 3uLL, 0);
  if (!(_DWORD)result) {
    return sub_1001EFB10(a2, *((char **)a3 + 2), (unsigned __int16)(v12 - 3), 2u);
  }
  return result;
}

uint64_t sub_1000FB3C0(uint64_t a1)
{
  uint64_t v2 = a1 + 80;
  if ((*(_BYTE *)(a1 + 80) & 0xFE) != 0x48) {
    sub_1001EE2A0();
  }
  __int128 v4 = *(_OWORD *)v2;
  uint64_t v5 = *(void *)(v2 + 16);
  *(void *)(a1 + 40) = 0LL;
  *(_BYTE *)(a1 + 80) = 0;
  uint64_t v6 = a1 + 48;
  __int16 v7 = 8;
  __int16 v9 = 2;
  int v8 = 196616;
  return sub_1000FAD7C(a1, (uint64_t)&v6, (unsigned __int8 *)&v4, 1u, 0LL);
}

uint64_t sub_1000FB450(uint64_t result, char a2, uint64_t a3)
{
  *(_BYTE *)(result + 78) = a2;
  *(void *)(result + 40) = 0LL;
  *(_BYTE *)(result + 80) = 0;
  *(void *)a3 = result + 48;
  *(_WORD *)(a3 + 8) = 8;
  *(_WORD *)(a3 + 14) = 2;
  *(_DWORD *)(a3 + 10) = 196616;
  return result;
}

uint64_t sub_1000FB484(uint64_t a1, void *__src, size_t __len)
{
  unsigned int v3 = __len;
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    if (v6 == 2)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OBEXCOMMON ReassemblePacket discarding data", v7, v8, v9, v10, v11, v12, v13, v54);
        uint64_t v14 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      goto LABEL_17;
    }

    unsigned int v17 = *(unsigned __int16 *)(a1 + 28);
    int v16 = *(unsigned __int16 *)(a1 + 26);
  }

  else
  {
    uint64_t v15 = *(void *)(a1 + 8);
    if (!v15)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OBEXCOMMON ReassemblePacket received dual DISCONNECT messages!",  v44,  v45,  v46,  v47,  v48,  v49,  v50,  v54);
        uint64_t v51 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      uint64_t v22 = 1709LL;
      goto LABEL_18;
    }

    int v16 = *(unsigned __int16 *)(a1 + 74);
    if (!*(_WORD *)(a1 + 74)) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c",  518,  "(common->maxRecvPktLen) > 0");
    }
    unsigned int v17 = 0;
    *(void *)(a1 + 16) = v15;
    *(_WORD *)(a1 + 24) = v16;
    *(void *)(a1 + 28) = 0x100020000LL;
    *(_WORD *)(a1 + 26) = v16;
  }

  uint64_t v18 = v17;
  BOOL v20 = v17 < 3 && v17 + (unint64_t)__len > 2;
  int v21 = v16 - v17;
  if (v21 >= (int)__len)
  {
    uint64_t v32 = *(void *)(a1 + 16);
    if (*(_BYTE *)(a1 + 31))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
      int v21 = 0;
    }

    if (v21 < (int)v3)
    {
      uint64_t v52 = "ByteStream_NumReadBytesAvail(common->rcvPacket) >= (dataLen)";
    }

    else
    {
      if (*(_BYTE *)(a1 + 30) == 2)
      {
        memmove((void *)(v32 + v18), __src, v3);
        unsigned __int16 v33 = *(_WORD *)(a1 + 28) + v3;
        *(_WORD *)(a1 + 28) = v33;
        if (v20)
        {
          uint64_t v34 = __rev16(*(unsigned __int16 *)(*(void *)(a1 + 16) + 1LL));
          if (v34 > *(unsigned __int16 *)(a1 + 74))
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"OI_OBEXCOMMON_ReassemblePacket packet len %d exceeds buffer len %d\n",  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v34);
              uint64_t v42 = (os_log_s *)sub_100086554(0x18u);
              if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
                sub_100657858();
              }
            }

            goto LABEL_46;
          }

          if (v34 < v3)
          {
LABEL_46:
            uint64_t v22 = 1720LL;
            goto LABEL_18;
          }

          if (v34 > *(unsigned __int16 *)(a1 + 24) || v34 < v33) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c",  555,  "((pktLen) <= (common->rcvPacket).__trueSize) && ((pktLen) >= (common->rcvPacket).__pos)");
          }
          *(_WORD *)(a1 + 26) = v34;
        }

        else
        {
          LODWORD(v34) = *(unsigned __int16 *)(a1 + 26);
        }

        if ((_DWORD)v34 != v33) {
          return 0LL;
        }
        if (*(_BYTE *)(a1 + 30) == 2) {
          *(_WORD *)(a1 + 26) = v33;
        }
        *(_BYTE *)(a1 + 30) = 15;
        uint64_t v43 = *(void *)(a1 + 8);
        if (v43)
        {
          if (v33)
          {
            uint64_t v22 = 0LL;
            *(void *)(a1 + 16) = v43;
            *(_WORD *)(a1 + 24) = v33;
            *(void *)(a1 + 28) = 0x200010000LL;
            *(_WORD *)(a1 + 26) = v33;
            return v22;
          }

          uint64_t v53 = "(pktLen) > 0";
        }

        else
        {
          uint64_t v53 = "common->rcvBuffer";
        }

        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c",  567,  v53);
      }

      uint64_t v52 = "(common->rcvPacket).__RWFlag == BYTESTREAM_WRITE";
    }

    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c",  536,  v52);
  }

unsigned __int8 *sub_1000FB7D8(unsigned __int8 **a1, int a2)
{
  uint64_t v2 = *((unsigned __int8 *)a1 + 8);
  if (!*((_BYTE *)a1 + 8)) {
    return 0LL;
  }
  for (uint64_t result = *a1; *result != a2; result += 24)
  {
    if (!--v2) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000FB804(uint64_t a1, uint64_t *a2)
{
  *(_BYTE *)(a1 + 8) = 0;
  *(void *)a1 = 0LL;
  unsigned int v4 = *((unsigned __int16 *)a2 + 6);
  if (*((_BYTE *)a2 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
    unsigned int v5 = *((unsigned __int16 *)a2 + 5);
LABEL_19:
    if (v4 > v5) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c",  748,  "(size_t)(pos) <= (size_t)((*bs).__size)");
    }
    *((_WORD *)a2 + 6) = v4;
    if (!*(_BYTE *)(a1 + 8)) {
      goto LABEL_27;
    }
    uint64_t v15 = sub_1000B17F4(24LL * *(unsigned __int8 *)(a1 + 8));
    *(void *)a1 = v15;
    if (!v15) {
      return 106LL;
    }
    if (!*(_BYTE *)(a1 + 8))
    {
LABEL_27:
      if (*((_BYTE *)a2 + 14) == 2) {
        *((_WORD *)a2 + 5) = *((_WORD *)a2 + 6);
      }
      uint64_t result = 0LL;
      *((_BYTE *)a2 + 14) = 15;
      return result;
    }

    if (*((_BYTE *)a2 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c");
    }

    else
    {
      uint64_t v16 = *((unsigned __int16 *)a2 + 6);
      if (*((unsigned __int16 *)a2 + 5) > v16)
      {
        if (*((_BYTE *)a2 + 14) == 1)
        {
          unsigned int v17 = *(_BYTE **)a1;
          uint64_t v18 = *a2;
          *((_WORD *)a2 + 6) = v16 + 1;
          int v19 = *(unsigned __int8 *)(v18 + v16);
          *unsigned int v17 = v19;
          __asm { BR              X14 }
        }

        uint64_t v46 = "(*bs).__RWFlag == BYTESTREAM_READ";
LABEL_45:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c",  644,  v46);
      }
    }

    uint64_t v46 = "ByteStream_NumReadBytesAvail(*bs) >= 1";
    goto LABEL_45;
  }

  unsigned int v5 = *((unsigned __int16 *)a2 + 5);
  if (v5 <= v4) {
    goto LABEL_19;
  }
  int v6 = 0;
  int v7 = *((unsigned __int8 *)a2 + 14);
  int v8 = *((unsigned __int16 *)a2 + 6);
  while (1)
  {
    if (v7 != 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexcommon.c",  599,  "(*bs).__RWFlag == BYTESTREAM_READ");
    }
    uint64_t v9 = *a2;
    uint64_t v10 = (unsigned __int16)v8 + 1LL;
    *((_WORD *)a2 + 6) = v8 + 1;
    uint64_t v11 = *(unsigned __int8 *)(v9 + (unsigned __int16)v8);
    if (v11 >> 6 >= 2)
    {
      else {
        unsigned __int16 v13 = 4;
      }
      goto LABEL_17;
    }

    if ((int)(v5 - 1) <= (unsigned __int16)(v8 + 1))
    {
      uint64_t v12 = 0LL;
      *((_BYTE *)a2 + 15) = 1;
LABEL_35:
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Bad OBEX Unicode len: %d, at least: %d \n", v29, v30, v31, v32, v33, v34, v35, v12);
        uint64_t v36 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
          goto LABEL_40;
        }
      }

      goto LABEL_41;
    }

    uint64_t v12 = __rev16(*(unsigned __int16 *)(v9 + v10));
    LODWORD(v10) = v8 + 3;
    *((_WORD *)a2 + 6) = v8 + 3;
    unsigned __int16 v13 = v12 - 3;
LABEL_17:
    if ((int)(v5 - (unsigned __int16)v10) < v13)
    {
      *((_BYTE *)a2 + 15) = 1;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Bad OBEX Header:(%2x) len: (%d)\n", v21, v22, v23, v24, v25, v26, v27, v11);
        uint64_t v28 = (os_log_s *)sub_100086554(0x18u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          goto LABEL_40;
        }
      }

      goto LABEL_41;
    }

    int v8 = v13 + (_DWORD)v10;
    *((_WORD *)a2 + 6) = v13 + v10;
    *(_BYTE *)(a1 + 8) = ++v6;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Bad OBEX Unicode len: %d (odd)\n", v38, v39, v40, v41, v42, v43, v44, v13);
    uint64_t v45 = (os_log_s *)sub_100086554(0x18u);
    if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
LABEL_40:
    }
      sub_100657858();
  }

void sub_1000FBF20(int a1, void *a2, uint64_t a3)
{
  unsigned int v5 = sub_1000B6934(a1);
  sub_1000B6BF8((uint64_t)v5, a2, a3);
}

uint64_t sub_1000FBF4C(unsigned int a1, _BYTE *a2)
{
  uint64_t v3 = sub_1000B6BC4(a1);
  if (!v3) {
    return 1709LL;
  }
  uint64_t v4 = v3;
  uint64_t result = 0LL;
  *a2 = *(_BYTE *)(v4 + 194);
  return result;
}

uint64_t sub_1000FBF88()
{
  return 102LL;
}

uint64_t sub_1000FBF90()
{
  return 102LL;
}

uint64_t sub_1000FBF98()
{
  return 102LL;
}

uint64_t sub_1000FBFA0()
{
  return 102LL;
}

uint64_t sub_1000FBFA8()
{
  return 102LL;
}

uint64_t sub_1000FBFB0()
{
  return 102LL;
}

uint64_t sub_1000FBFB8()
{
  return 0LL;
}

uint64_t sub_1000FBFC0()
{
  return 102LL;
}

uint64_t sub_1000FBFCC()
{
  return 102LL;
}

uint64_t sub_1000FBFD4()
{
  return 102LL;
}

uint64_t sub_1000FBFDC()
{
  return 102LL;
}

uint64_t sub_1000FBFE4()
{
  return 102LL;
}

uint64_t sub_1000FBFEC()
{
  uint64_t v0 = (*((uint64_t (**)(void))off_1008D73A0 + 3))(*((void *)off_1008D73A0 + 2));
  if ((_DWORD)v0) {
    sub_1001EE0E4("Failed to initialize driver %s\n", *((const char **)off_1008D73A0 + 1));
  }
  return v0;
}

uint64_t sub_1000FC040()
{
  uint64_t v0 = (*((uint64_t (__cdecl **)())off_1008D73A0 + 4))();
  if ((_DWORD)v0) {
    sub_1001EE0E4("Failed to initialize driver %s\n", *((const char **)off_1008D73A0 + 1));
  }
  return v0;
}

uint64_t sub_1000FC098()
{
  return (*((uint64_t (__cdecl **)())off_1008D73A0 + 6))();
}

uint64_t sub_1000FC0A8()
{
  return (*((uint64_t (__cdecl **)())off_1008D73A0 + 7))();
}

uint64_t sub_1000FC0B8()
{
  return (*((uint64_t (**)(void))off_1008D73A8 + 7))();
}

uint64_t sub_1000FC0C8()
{
  return (*((uint64_t (__cdecl **)())off_1008D73A8 + 8))();
}

uint64_t sub_1000FC0D8()
{
  uint64_t v0 = (*((uint64_t (**)(void))off_1008D73A0 + 5))(*((void *)off_1008D73A0 + 2));
  if ((_DWORD)v0) {
    sub_1001EE0E4("Failed to initialize driver %s\n", *((const char **)off_1008D73A0 + 1));
  }
  return v0;
}

uint64_t sub_1000FC130()
{
  uint64_t result = sub_10017B000((uint64_t *)&off_1008D73A0, &off_1008D73A8);
  if ((_DWORD)result)
  {
    sub_1001EE0E4("FATAL ERROR - no hci driver was found\n");
    return 102LL;
  }

  return result;
}

uint64_t sub_1000FC16C()
{
  if (sub_10017B000((uint64_t *)&off_1008D73A0, &off_1008D73A8))
  {
    sub_1001EE0E4("FATAL ERROR - no hci driver was found\n");
    return 102LL;
  }

  else
  {
    uint64_t v2 = off_1008D73A8;
    if (!*off_1008D73A8)
    {
      sub_1000FBFEC();
      uint64_t v2 = off_1008D73A8;
    }

    uint64_t v3 = (*((uint64_t (__cdecl **)())v2 + 2))();
    uint64_t v0 = v3;
    if ((_DWORD)v3 && (_DWORD)v3 != 109) {
      sub_1001EE0E4("Failed to initialize transport %s\n", *((const char **)off_1008D73A8 + 1));
    }
  }

  return v0;
}

uint64_t sub_1000FC208()
{
  return (*((uint64_t (__cdecl **)())off_1008D73A8 + 3))();
}

uint64_t sub_1000FC218()
{
  return (*((uint64_t (__cdecl **)())off_1008D73A8 + 4))();
}

uint64_t sub_1000FC228()
{
  if (*off_1008D73A8) {
    return (*((uint64_t (**)(void))off_1008D73A8 + 12))();
  }
  return result;
}

uint64_t sub_1000FC244()
{
  if (sub_10017B000((uint64_t *)&off_1008D73A0, &off_1008D73A8))
  {
    sub_1001EE0E4("FATAL ERROR - no hci driver was found\n");
    return 102LL;
  }

  uint64_t v1 = (void (*)(void))*((void *)off_1008D73A8 + 13);
  if (!v1)
  {
    sub_1001EE0E4("FATAL ERROR - can't find sniffLogONly function\n");
    return 102LL;
  }

  v1();
  return (*((uint64_t (__cdecl **)())off_1008D73A8 + 2))();
}

uint64_t (*sub_1000FC2BC())(void)
{
  uint64_t result = (uint64_t (*)(void))*((void *)off_1008D73A8 + 14);
  if (result) {
    return (uint64_t (*)(void))result();
  }
  return result;
}

uint64_t sub_1000FC2D4()
{
  uint64_t v0 = (uint64_t (*)(void))*((void *)off_1008D73A8 + 18);
  if (v0) {
    return v0();
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000FC2F0()
{
  return (*((uint64_t (__cdecl **)())off_1008D73A8 + 6))();
}

uint64_t sub_1000FC300()
{
  return (*((uint64_t (__cdecl **)())off_1008D73A8 + 5))();
}

uint64_t sub_1000FC310()
{
  return (*((uint64_t (__cdecl **)())off_1008D73A8 + 9))();
}

uint64_t (__cdecl *sub_1000FC320())()
{
  uint64_t result = (uint64_t (__cdecl *)())*((void *)off_1008D73A8 + 10);
  if (result) {
    return (uint64_t (__cdecl *)())result();
  }
  return result;
}

uint64_t (*sub_1000FC338())(void)
{
  uint64_t result = (uint64_t (*)(void))*((void *)off_1008D73A8 + 15);
  if (result) {
    return (uint64_t (*)(void))result();
  }
  return result;
}

uint64_t sub_1000FC350()
{
  uint64_t v0 = (uint64_t (*)(void))*((void *)off_1008D73A8 + 16);
  if (v0) {
    return v0();
  }
  else {
    return 0LL;
  }
}

uint64_t (*sub_1000FC36C())(void)
{
  uint64_t result = (uint64_t (*)(void))*((void *)off_1008D73A8 + 17);
  if (result) {
    return (uint64_t (*)(void))result();
  }
  return result;
}

void **sub_1000FC384(void **result, uint64_t a2)
{
  off_1008E1EA0 = *result;
  qword_1008E1EA8 = a2;
  return result;
}

uint64_t sub_1000FC39C(void *a1)
{
  if (a1)
  {
    if (off_1008E1EA0) {
      return off_1008E1EA0(a1, qword_1008E1EA8);
    }
    __int16 v6 = 0;
    int v5 = 0;
    uint64_t v4 = sub_100114338((uint64_t)&v5);
    if ((_DWORD)v4)
    {
      uint64_t v3 = v4;
      sub_1001EE0E4("OI_DEVMGR_GetCachedLocalBdAddr failed %!\n", v4);
    }

    else
    {
      sub_1001EE0E4("Local device address is: %:\n", &v5);
      off_1008E1EB0 = a1;
      return sub_1001ED90C(off_1008841A0);
    }
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

  return v3;
}

uint64_t sub_1000FC460(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))off_1008E1EB0;
  if (!off_1008E1EB0)
  {
    sub_1001EE2A0();
    uint64_t v2 = (uint64_t (*)(uint64_t))off_1008E1EB0;
  }

  return v2(a1);
}

void sub_1000FC494()
{
  uint64_t v0 = sub_100114368((void (*)(int))sub_1000FC71C, (uint64_t)&unk_1008D73C0);
  if ((_DWORD)v0)
  {
    uint64_t v1 = v0;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_DEVMGR_WriteStaticSettings", v2, v3, v4, v5, v6, v7, v8, v10);
      uint64_t v9 = (os_log_s *)sub_100086554(0x4Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    sub_1001EDAF0((void (**)(uint64_t))off_1008841A0, v1);
  }

void sub_1000FC540( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = sub_10011EA04((uint64_t)sub_1000FC7D0, a2, a3, a4, a5, a6, a7, a8, v18);
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCI_ReadLocalName", v10, v11, v12, v13, v14, v15, v16, v19);
      unsigned int v17 = (os_log_s *)sub_100086554(0x4Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    sub_1001EDAF0((void (**)(uint64_t))off_1008841A0, v9);
  }

void sub_1000FC5C0()
{
  if (sub_100114358() < 4)
  {
    sub_1001EDA8C((uint64_t)off_1008841A0);
  }

  else
  {
    uint64_t v5 = sub_10011EC58((uint64_t)sub_1000FCA14, 1u, (uint64_t)&unk_1006BC5B4, v0, v1, v2, v3, v4);
    if ((_DWORD)v5)
    {
      uint64_t v6 = v5;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCI_WriteEIR", v7, v8, v9, v10, v11, v12, v13, v15);
        uint64_t v14 = (os_log_s *)sub_100086554(0x4Eu);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))off_1008841A0, v6);
    }
  }

void sub_1000FC66C()
{
  uint64_t v0 = sub_1000B6578();
  if ((_DWORD)v0)
  {
    uint64_t v1 = v0;
    sub_1001EE0E4("OI_LinkKeyStorage_Init failed %!\n", v0);
LABEL_7:
    sub_1001EDAF0((void (**)(uint64_t))off_1008841A0, v1);
    return;
  }

  uint64_t v2 = sub_1001E689C(&off_1008841D0);
  if ((_DWORD)v2)
  {
    uint64_t v1 = v2;
    sub_1001EE0E4("OI_SECMGR_RegisterESE failed %!\n", v2);
    goto LABEL_7;
  }

  uint64_t v3 = sub_1001E6AEC(&off_100884248);
  if ((_DWORD)v3)
  {
    uint64_t v1 = v3;
    sub_1001EE0E4("OI_SECMGR_RegisterSecurityDB failed %!\n", v3);
    goto LABEL_7;
  }

  sub_1001E63B4(1LL);
  sub_1001EDA8C((uint64_t)off_1008841A0);
}

void sub_1000FC71C(uint64_t a1)
{
  if ((a1 - 701) <= 0x44)
  {
    sub_1001EE0E4("writeStaticSettingsCb: ignoring HCI error %!\n", a1);
LABEL_8:
    sub_1001EDA8C((uint64_t)off_1008841A0);
    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_8;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writeStaticSettingsCb", v2, v3, v4, v5, v6, v7, v8, v10);
    uint64_t v9 = (os_log_s *)sub_100086554(0x4Eu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  sub_1001EDAF0((void (**)(uint64_t))off_1008841A0, a1);
}

void sub_1000FC7D0(uint64_t a1, uint64_t a2)
{
  if ((_DWORD)a1)
  {
    uint64_t v2 = a1;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"readNameCb", v3, v4, v5, v6, v7, v8, v9, v36);
      uint64_t v10 = (os_log_s *)sub_100086554(0x4Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

LABEL_5:
    sub_1001EDAF0((void (**)(uint64_t))off_1008841A0, v2);
    return;
  }

  if (*(_BYTE *)a2)
  {
    sub_1001EE0E4("Local device name is: %s\n", (const char *)a2);
    uint64_t v12 = *(void *)a2;
    byte_1008E1EC0 = *(_BYTE *)(a2 + 8);
    qword_1008E1EB8 = v12;
    byte_1008E1EC1 = 0;
    sub_1001EDA8C((uint64_t)off_1008841A0);
    return;
  }

  sub_1001EE0E4("Device has no name\n");
  __int16 v39 = 0;
  int v38 = 0;
  if (sub_100114338((uint64_t)&v38))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_DEVMGR_GetCachedLocalBdAddr", v18, v19, v13, v14, v15, v16, v17, v36);
      BOOL v20 = (os_log_s *)sub_100086554(0x4Eu);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  sub_1001EE0BC((uint64_t)&qword_1008E1EB8, 10, (uint64_t)"APPLE %2x", v13, v14, v15, v16, v17, HIBYTE(v39));
  sub_1001EE0E4("Writing device name as %s\n", (const char *)&qword_1008E1EB8);
  uint64_t v27 = sub_10011E9D8((uint64_t)sub_1000FC994, (uint64_t)&qword_1008E1EB8, v21, v22, v23, v24, v25, v26);
  if ((_DWORD)v27)
  {
    uint64_t v2 = v27;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCI_ChangeLocalName", v28, v29, v30, v31, v32, v33, v34, v37);
      uint64_t v35 = (os_log_s *)sub_100086554(0x4Eu);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    goto LABEL_5;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Invalid handle for downgrade", v7, v8, v9, v10, v11, v12, v13, v59);
    uint64_t v14 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 414LL;
}

  uint64_t v6 = sub_10012D5EC(a1);
  uint64_t result = 601LL;
  if (a2 && v6)
  {
    uint64_t v8 = *(unsigned __int16 *)(a1 + 104);
    uint64_t v9 = *(_DWORD *)(a1 + 216) / v8;
    if (v9 <= 1) {
      uint64_t v9 = 1;
    }
    if (v9 >= 0xF) {
      uint64_t v9 = 15;
    }
    uint64_t v10 = v9 * v8 - 6;
    uint64_t result = 5007LL;
LABEL_25:
    *a2 = v10;
  }

  return result;
}

            if (p_ptr != &ptr)
            {
              do
              {
                uint64_t v8 = (__int128 *)*((void *)p_ptr + 2);
                sub_1000B1838(p_ptr);
                p_ptr = v8;
              }

              while (v8 != &ptr);
            }

            return 0xFFFFFFFFLL;
          }

          *((void *)p_ptr + 1) = a3;
          *((void *)v28 + 2) = p_ptr;
          uint64_t v29 = *((_WORD *)a3 + 1);
          *(_WORD *)uint64_t v28 = v29;
          a3 = (unsigned __int8 *)*((void *)a3 + 1);
          p_ptr = v28;
LABEL_112:
          *(_WORD *)p_ptr = v29 - 1;
          uint64_t v4 = *(unsigned __int16 *)(a1 + 10);
          uint64_t v5 = *(unsigned __int16 *)(a1 + 12);
          uint64_t v6 = v4 - v5;
          if (v4 == v5) {
            goto LABEL_3;
          }
          continue;
        }

        a2 = v27 - v26;
LABEL_106:
        if (p_ptr != &ptr)
        {
          if (!*(_WORD *)p_ptr)
          {
            do
            {
              uint64_t v58 = p_ptr;
              p_ptr = (__int128 *)*((void *)p_ptr + 2);
              sub_1000B1838(v58);
              if (p_ptr == &ptr) {
                goto LABEL_122;
              }
            }

            while (!*(_WORD *)p_ptr);
            a3 = (unsigned __int8 *)*((void *)p_ptr + 1);
          }

          a3 += 16;
          uint64_t v29 = *(_WORD *)p_ptr;
          goto LABEL_112;
        }

      uint64_t v7 = v6 + v4;
      goto LABEL_23;
    case 4:
    case 8:
    case 17:
    case 18:
      uint64_t v8 = v6 + v4;
      goto LABEL_19;
    case 6:
    case 7:
      if (*((void *)a1 + 1)) {
        uint64_t v9 = v6 == 0;
      }
      else {
        uint64_t v9 = 1;
      }
      if (v9) {
        goto LABEL_24;
      }
      uint64_t v10 = (__int128 *)sub_1000B17F4(0x18uLL);
      if (v10)
      {
        *((void *)p_ptr + 1) = a1;
        *((void *)v10 + 2) = p_ptr;
        *(_DWORD *)uint64_t v10 = *((unsigned __int16 *)a1 + 1);
        a1 = (unsigned __int8 *)*((void *)a1 + 1);
        p_ptr = v10;
        goto LABEL_33;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_DataElement_MarshalledSize: %!", v17, v18, v19, v20, v21, v22, v23, 106LL);
        uint64_t v24 = (os_log_s *)sub_100086554(0x2Bu);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        {
          uint64_t v26 = sub_1001EDDCC();
          *(_DWORD *)int buf = 136446466;
          uint64_t v30 = v26;
          uint64_t v31 = 1024;
          uint64_t v32 = 106;
          _os_log_error_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
        }
      }

      if (p_ptr == &ptr) {
        return 0LL;
      }
      do
      {
        uint64_t v25 = (__int128 *)*((void *)p_ptr + 2);
        sub_1000B1838(p_ptr);
        uint64_t result = 0LL;
        p_ptr = v25;
      }

      while (v25 != &ptr);
      return result;
    case 20:
      uint64_t v8 = v4 + 2 * v6;
LABEL_19:
      if (v6 <= 0xFF) {
        uint64_t v11 = 1;
      }
      else {
        uint64_t v11 = 2;
      }
      uint64_t v7 = v8 + v11;
LABEL_23:
      *((_WORD *)p_ptr + 1) = v7;
      goto LABEL_24;
    default:
      sub_1001EE2A0();
LABEL_24:
      if (p_ptr == &ptr) {
        return WORD1(ptr);
      }
      if (*(_WORD *)p_ptr) {
        goto LABEL_32;
      }
      break;
  }

  while (1)
  {
    uint64_t v12 = p_ptr;
    uint64_t v13 = *((unsigned __int16 *)p_ptr + 1);
    uint64_t v14 = v13 <= 0xFF ? 1 : 2;
    uint64_t v15 = v14 + v13;
    *((_WORD *)p_ptr + 1) = v15;
    p_ptr = (__int128 *)*((void *)p_ptr + 2);
    *((_WORD *)p_ptr + 1) += v15;
    sub_1000B1838(v12);
    if (p_ptr == &ptr) {
      return WORD1(ptr);
    }
    if (*(_WORD *)p_ptr)
    {
      a1 = (unsigned __int8 *)*((void *)p_ptr + 1);
LABEL_32:
      a1 += 16;
LABEL_33:
      uint64_t v2 = *(_WORD *)p_ptr;
      goto LABEL_2;
    }
  }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Can not find classic session in ATT WriteBuf", v5, v6, v7, v8, v9, v10, v11, v16);
      uint64_t v12 = (os_log_s *)sub_100086554(0x44u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    return 4202LL;
  }

  uint64_t v13 = 4LL;
  return sub_100172A98((uint64_t)sub_1001A54F8, v13, a1, a2, 1);
}

      sub_100174B2C( (uint64_t)sub_1001E3C18,  (uint64_t)sub_1001E3CA8,  (uint64_t)sub_1001E3D78,  v3,  (uint64_t)&v39,  0,  (uint64_t)&unk_1006BE050);
      return;
    }
  }

  else
  {
    uint64_t v17 = *a2;
    *(_WORD *)(v6 + 28) = *((_WORD *)a2 + 2);
    *(_DWORD *)(v6 + 24) = v17;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Setting up connection parameters for the server connection",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  v38);
    uint64_t v25 = (os_log_s *)sub_100086554(0x35u);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v42 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  *(_WORD *)uint64_t v6 = v3;
  *(_BYTE *)(v6 + 2) = 1;
  uint64_t v26 = *(unsigned __int16 *)(xmmword_1008EDCF8 + 4);
  *(_WORD *)(v6 + 4) = v26;
  if (v26 >= 0x81)
  {
    uint64_t v27 = *(_WORD *)(sub_1001EDBA0(0x28u) + 8);
  }

  else
  {
    uint64_t v27 = 128;
  }

  *(_WORD *)(v6 + 4) = v27;
LABEL_23:
  __int16 v39 = 0u;
  uint64_t v40 = 0u;
  LOWORD(v39) = *(_WORD *)(v6 + 4);
  *(_DWORD *)((char *)&v39 + 2) = 327745535;
  WORD3(v39) = 772;
  BYTE13(v39) = 0;
  uint64_t v28 = sub_100174B2C( (uint64_t)sub_1001E3C18,  (uint64_t)sub_1001E3CA8,  (uint64_t)sub_1001E3D78,  v3,  (uint64_t)&v39,  1,  (uint64_t)&unk_1006BE050);
  if ((_DWORD)v28)
  {
    uint64_t v29 = v28;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"SDPServer: L2CAP failed to complete the connection %!",  v30,  v31,  v32,  v33,  v34,  v35,  v36,  v29);
      uint64_t v37 = (os_log_s *)sub_100086554(0x35u);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    *(_BYTE *)(v6 + 2) = 0;
  }

    uint64_t v13 = v12 >> 3;
    uint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    BOOL v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10023FC90(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10023FDA4((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_100008BA0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    uint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    BOOL v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10023FC90(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10023FDA4((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_100008BA0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    uint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    BOOL v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10023FC90(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10023FDA4((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_100008BA0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

        if (a1 <= 31)
        {
          uint64_t v13 = @"Pincode";
          switch(a1)
          {
            case 1:
              break;
            case 2:
              uint64_t v13 = @"LinkKey";
              break;
            case 3:
            case 5:
            case 6:
            case 7:
              goto LABEL_30;
            case 4:
              uint64_t v13 = @"LinkKeyType";
              break;
            case 8:
              uint64_t v13 = @"LocalAddress";
              break;
            default:
              if (a1 != 16) {
                goto LABEL_30;
              }
              uint64_t v13 = @"MagicAccIRK";
              break;
          }

  uint64_t v5 = sub_1002E6E9C();
  if (sub_1002D1240(v5, 100)) {
    v1[295] |= 0x2000000u;
  }
  uint64_t v6 = sub_1002E6BF0();
  uint64_t v7 = sub_1002E6BF0();
  uint64_t v8 = (os_log_s *)qword_1008F7578;
  if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_INFO))
  {
    uint64_t v9 = v1[295];
    LODWORD(__p) = 67109120;
    HIDWORD(__p) = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "fEnabledFeatures: %x", (uint8_t *)&__p, 8u);
  }

  return sub_10018DAAC();
}

    uint64_t v13 = v12 >> 3;
    uint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    BOOL v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10023FC90(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10023FDA4((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_100008BA0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

  uint64_t v4 = sub_1000D5F38(1, (uint64_t *)&off_1008D96E8);
  if ((_DWORD)v4)
  {
    if (os_log_type_enabled((os_log_t)qword_1008F7558, OS_LOG_TYPE_ERROR)) {
      sub_100676E94();
    }
LABEL_10:
    uint64_t v4 = 1LL;
  }

  sub_100242CD8(&v6);
  return v4;
}

    uint64_t v13 = v12 >> 3;
    uint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    BOOL v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10023FC90(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10023FDA4((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_100008BA0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    uint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    BOOL v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10023FC90(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10023FDA4((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_100008BA0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    uint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    BOOL v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xFF0uLL);
      sub_10023FC90(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xFF0uLL);
    sub_10023FDA4((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_100008BA0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    uint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    BOOL v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10023FC90(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10023FDA4((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_100008BA0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

void sub_1000FC994(uint64_t a1)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writeNameCb", v2, v3, v4, v5, v6, v7, v8, v10);
      uint64_t v9 = (os_log_s *)sub_100086554(0x4Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    sub_1001EDAF0((void (**)(uint64_t))off_1008841A0, a1);
  }

  else
  {
    sub_1001EDA8C((uint64_t)off_1008841A0);
  }

void sub_1000FCA14(uint64_t a1)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writeEirCb", v2, v3, v4, v5, v6, v7, v8, v10);
      uint64_t v9 = (os_log_s *)sub_100086554(0x4Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    sub_1001EDAF0((void (**)(uint64_t))off_1008841A0, a1);
  }

  else
  {
    sub_1001EDA8C((uint64_t)off_1008841A0);
  }

void sub_1000FCAA0(uint64_t a1)
{
}

void sub_1000FCAB4(uint64_t a1)
{
  unsigned __int8 v2 = strlen(off_1008D73B8);
  sub_1001E923C(1, a1, (uint64_t)off_1008D73B8, v2, v3, v4, v5, v6);
}

void sub_1000FCB0C(uint64_t a1)
{
}

void sub_1000FCB3C(uint64_t a1)
{
}

void sub_1000FCB70()
{
}

void sub_1000FCB7C()
{
}

void sub_1000FCB88(uint64_t a1)
{
}

void sub_1000FCBC8()
{
}

void sub_1000FCBD4()
{
}

void sub_1000FCBE0()
{
}

uint64_t sub_1000FCBEC()
{
  return 2LL;
}

uint64_t sub_1000FCBF4(uint64_t a1, uint64_t a2)
{
  v3[0] = a1;
  v3[1] = a2;
  return 2 * (sub_1001092EC((uint64_t)v3) - 4096 > 2);
}

unint64_t sub_1000FCC28()
{
  *(_DWORD *)buffer = 0;
  uint64_t v0 = getenv("BT_BAUDRATE");
  if (v0) {
    return strtoul(v0, 0LL, 0);
  }
  uint64_t v2 = IOServiceNameMatching("bluetooth");
  if (!v2) {
    return 0LL;
  }
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v2);
  if (!MatchingService) {
    return 0LL;
  }
  io_object_t v4 = MatchingService;
  uint64_t v5 = (const __CFData *)IORegistryEntrySearchCFProperty( MatchingService,  "IODeviceTree",  @"transport-speed",  kCFAllocatorDefault,  1u);
  if (v5)
  {
    uint64_t v6 = v5;
    v8.location = 0LL;
    v8.length = 4LL;
    CFDataGetBytes(v5, v8, buffer);
    CFRelease(v6);
    sub_1001EE0E4("DeviceTree speed = %d\n", *(_DWORD *)buffer);
  }

  IOObjectRelease(v4);
  unint64_t result = *(unsigned int *)buffer;
  if (*(_DWORD *)buffer >> 9 <= 0xE0u) {
    return 0LL;
  }
  return result;
}

uint64_t sub_1000FCD0C()
{
  if (qword_1008E1EC8 != -1) {
    dispatch_once(&qword_1008E1EC8, &stru_100884278);
  }
  return dword_1008D73D8;
}

void sub_1000FCD4C(id a1)
{
  size_t v6 = 1024LL;
  if (!sysctlbyname("kern.bootargs", __str, &v6, 0LL, 0LL))
  {
    uint64_t v1 = strtok(__str, " ");
    if (v1)
    {
      uint64_t v2 = v1;
      do
      {
        if (strstr(v2, "bt-transport-override"))
        {
          uint64_t v3 = strchr(v2, 61);
          unint64_t v4 = strtol(v3 + 1, 0LL, 10);
          int v5 = v4;
          if (v4 < 0xC)
          {
            sub_1001EE0E4("transport override from boot-arg: %llu", v4);
            dword_1008D73D8 = v5;
          }

          else
          {
            sub_1001EE0E4("transport override from boot-arg is invalid: %llu", v4);
          }
        }

        uint64_t v2 = strtok(0LL, " ");
      }

      while (v2);
    }
  }

uint64_t sub_1000FCEA8(const char *a1)
{
  uint64_t v1 = IOServiceNameMatching(a1);
  if (v1)
  {
    io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v1);
    if (MatchingService)
    {
      io_object_t v3 = MatchingService;
      unint64_t v4 = (const __CFData *)IORegistryEntrySearchCFProperty( MatchingService,  "IODeviceTree",  @"transport-encoding",  kCFAllocatorDefault,  1u);
      if (v4)
      {
        int v5 = v4;
        v7.location = 0LL;
        v7.length = 4LL;
        CFDataGetBytes(v4, v7, (UInt8 *)&dword_1008D73D8);
        CFRelease(v5);
        IOObjectRelease(v3);
        sub_1001EE0E4("DeviceTree transport = 0x%08x\n", dword_1008D73D8);
        return 0LL;
      }

      IOObjectRelease(v3);
    }
  }

  return 1LL;
}

void sub_1000FCF70(int a1, uint64_t a2)
{
  unint64_t v2 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    unint64_t v5 = 0LL;
    size_t v6 = qword_1008F29F0;
    do
    {
      if (*v6 && *(unsigned __int16 *)*v6 == a1)
      {
        if ((_DWORD)a2)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Transport switch error %d with lm %x, contiguous %d, leRSSI %d, connTO %d:%d",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  a2);
            uint64_t v14 = (os_log_s *)sub_100086554(0x56u);
            if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
              sub_10065B768();
            }
          }

          unsigned int v15 = (unsigned __int16)++*((_WORD *)v6 + 224);
          if (v15 > 8)
          {
            if (off_1008F29E0) {
              off_1008F29E0(*v6, 81LL, 297LL, 165LL);
            }
            sub_1000B034C(5015LL, "TS Switch HW Error");
          }
        }

        else
        {
          if (*((_WORD *)v6 + 224))
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Successful TS, clearing contiguous TS failures",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v25);
              uint64_t v23 = (os_log_s *)sub_100086554(0x56u);
              if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v24 = sub_1001EDDCC();
                *(_DWORD *)int buf = 136446210;
                uint64_t v27 = v24;
                _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
          }

          *((_WORD *)v6 + 224) = 0;
        }

        unint64_t v2 = dword_1008F29B4;
      }

      ++v5;
      v6 += 134;
    }

    while (v5 < v2);
  }

uint64_t sub_1000FD178(char a1, uint64_t a2)
{
  v57[0] = *(_OWORD *)off_1008842C8;
  v57[1] = *(_OWORD *)off_1008842D8;
  uint64_t v58 = 0LL;
  sub_10018C058((uint64_t)sub_1000FCF70);
  uint64_t v4 = sub_10008FA18("com.apple.BT.TS", 0xFuLL, 2, 10LL, 1, 0, 1, 1, v57);
  if ((_DWORD)v4)
  {
    uint64_t v5 = v4;
    sub_1001EE134((uint64_t)"Failed to register TS service.", v6, v7, v8, v9, v10, v11, v12, v54);
    uint64_t v13 = (os_log_s *)sub_100086554(0x56u);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  sub_1001C87BC((__n128 *)off_1008842F0);
  if ((_DWORD)v14)
  {
    uint64_t v5 = v14;
    sub_1001EE134((uint64_t)"Failed to register TS security.", v15, v16, v17, v18, v19, v20, v21, v54);
    uint64_t v22 = (os_log_s *)sub_100086554(0x56u);
    if (!os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
LABEL_8:
    sub_100657858();
LABEL_9:
    bzero(qword_1008F29F0, 0x4300uLL);
    dword_1008F29B4 = 0;
    __int128 v24 = *(_OWORD *)(a2 + 16);
    __int128 v23 = *(_OWORD *)(a2 + 32);
    __int128 v25 = *(_OWORD *)a2;
    off_1008F29E8 = *(uint64_t (**)(void, void, void))(a2 + 48);
    *(_OWORD *)&xmmword_1008F29C8 = v24;
    *(_OWORD *)&off_1008F29D8 = v23;
    xmmword_1008F29B8 = v25;
    return v5;
  }

  bzero(qword_1008F29F0, 0x4300uLL);
  dword_1008F29B4 = 0;
  __int128 v28 = *(_OWORD *)(a2 + 16);
  __int128 v27 = *(_OWORD *)(a2 + 32);
  __int128 v29 = *(_OWORD *)a2;
  off_1008F29E8 = *(uint64_t (**)(void, void, void))(a2 + 48);
  *(_OWORD *)&xmmword_1008F29C8 = v28;
  *(_OWORD *)&off_1008F29D8 = v27;
  xmmword_1008F29B8 = v29;
  uint64_t v56 = 0LL;
  if ((a1 & 1) != 0) {
    unsigned int v30 = 2;
  }
  else {
    unsigned int v30 = 1;
  }
  unsigned __int16 v55 = 0;
  if ((a1 & 2) != 0 && !sub_1001F5FB8(&v56, &v55) && v56 && v55)
  {
    uint64_t v31 = sub_1000B17F4(((unint64_t)v55 << 6) + 128);
    qword_1008F29A8 = (uint64_t)v31;
    byte_1008F29B0 = v30 + v55;
    if (v55)
    {
      unint64_t v46 = 0LL;
      unint64_t v47 = (unint64_t)v30 << 6;
      uint64_t v48 = 40LL;
      do
      {
        uint64_t v49 = v56;
        if (!*(void *)(v56 + v48 + 8))
        {
          sub_1001EE2A0();
          uint64_t v49 = v56;
        }

        if (!*(void *)(v49 + v48 + 24))
        {
          sub_1001EE2A0();
          uint64_t v49 = v56;
        }

        if (!*(void *)(v49 + v48 + 32))
        {
          sub_1001EE2A0();
          uint64_t v49 = v56;
        }

        unint64_t v50 = qword_1008F29A8 + v47;
        *(_BYTE *)unint64_t v50 = v30 + v55;
        uint64_t v51 = (void *)(v49 + v48);
        *(_WORD *)(v50 + 1) = *((_WORD *)v51 - 18);
        *(_DWORD *)(v50 + 4) = *((_DWORD *)v51 - 8);
        uint64_t v52 = *(void *)((char *)v51 - 28);
        *(_WORD *)(v50 + 10) = WORD2(v52);
        *(_WORD *)(v50 + 8) = v52;
        *(_DWORD *)(v50 + 16) = *((_DWORD *)v51 - 5);
        *(_BYTE *)(v50 + 12) = *((_BYTE *)v51 - 16);
        *(_DWORD *)(v50 + 20) = *((_DWORD *)v51 - 3);
        *(void *)(v50 + 24) = *v51;
        *(void *)(qword_1008F29A8 + v47 + 32) = *(void *)(v56 + v48 + 8);
        *(void *)(qword_1008F29A8 + v47 + 40) = *(void *)(v56 + v48 + 24);
        *(void *)(qword_1008F29A8 + v47 + 48) = *(void *)(v56 + v48 + 32);
        *(void *)(qword_1008F29A8 + v47 + 56) = *(void *)(v56 + v48 + 16);
        uint64_t v53 = v56;
        if (*(_BYTE *)(v56 + v48 - 16) && !*(void *)(v56 + v48 + 16))
        {
          sub_1001EE2A0();
          *(_BYTE *)(qword_1008F29A8 + v47 + 12) = 0;
          uint64_t v53 = v56;
        }

        sub_100133EB4( *(_BYTE *)(qword_1008F29A8 + v47),  *(_WORD *)(v53 + v48 - 8),  *(_WORD *)(v53 + v48 - 6),  *(void *)(v53 + v48 + 40));
        (*(void (**)(void))(v56 + v48))(*(unsigned __int8 *)(v56 + v48 - 36));
        ++v46;
        v47 += 64LL;
        v48 += 88LL;
      }

      while (v46 < v55);
      uint64_t v31 = (_BYTE *)qword_1008F29A8;
    }
  }

  else
  {
    uint64_t v31 = sub_1000B17F4(v30 << 6);
    qword_1008F29A8 = (uint64_t)v31;
    byte_1008F29B0 = v30;
  }

  if (!v31) {
    return 106LL;
  }
  *(_WORD *)uint64_t v31 = 257;
  v31[2] = 1;
  v31[12] = 0;
  int v32 = sub_1001AF89C();
  int v33 = sub_1001AF89C();
  int v34 = sub_1001ACF9C(v32, v33, 0x1D4Cu, 0x1Eu, 1, 1);
  *(_DWORD *)(qword_1008F29A8 + 4) = v34;
  if (!v34)
  {
    if (sub_1000A86F0())
    {
      unsigned int v35 = sub_1001AF89C();
      sub_1001EE134( (uint64_t)"Calculated tput is zero for data length %d and ce %d us",  v36,  v37,  v38,  v39,  v40,  v41,  v42,  v35);
      uint64_t v43 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  uint64_t v44 = qword_1008F29A8;
  *(_DWORD *)(qword_1008F29A8 + 8) = 1179678;
  *(void *)(v44 + 16) = 0xFFFFFC1800000000LL;
  *(_OWORD *)(v44 + 24) = 0u;
  *(_OWORD *)(v44 + 40) = 0u;
  *(void *)(v44 + 56) = 0LL;
  if ((a1 & 1) != 0)
  {
    *(_WORD *)(v44 + 64) = 514;
    *(_BYTE *)(v44 + 66) = 1;
    *(_BYTE *)(v44 + 76) = 0;
    *(void *)(v44 + 68) = 0x64000400000708LL;
    int v45 = dword_1008D73E0;
    *(_DWORD *)(v44 + 80) = 300;
    *(_DWORD *)(v44 + 84) = v45;
    *(_OWORD *)(v44 + 88) = 0uLL;
    *(_OWORD *)(v44 + 104) = 0uLL;
    *(void *)(v44 + 120) = 0LL;
  }

  return 0LL;
}

uint64_t sub_1000FD640()
{
  return 1LL;
}

void sub_1000FD648(__int128 *a1, unsigned int a2, void *a3, int a4)
{
  if (a4 == 15 && *a3 == 0x6C7070612E6D6F63LL && *(void *)((char *)a3 + 7) == 0x53542E54422E656CLL)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Pipe 0x%4x is available for %p (lm 0x%4x) with priority %d",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  a2);
      uint64_t v14 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v51 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    unsigned int v15 = dword_1008F29B4;
    if (!dword_1008F29B4) {
      goto LABEL_28;
    }
    uint64_t v16 = &word_1008F29F8;
    uint64_t v17 = dword_1008F29B4;
    while (*((__int128 **)v16 - 1) != a1)
    {
      v16 += 536;
      if (!--v17) {
        goto LABEL_17;
      }
    }

    if (*v16 != -1)
    {
      sub_1001EE2A0();
      unsigned int v15 = dword_1008F29B4;
    }

    if (!v15) {
      goto LABEL_28;
    }
LABEL_17:
    uint64_t v18 = v15;
    uint64_t v19 = &word_1008F29F8;
    while (*((__int128 **)v19 - 1) != a1)
    {
      v19 += 536;
      if (!--v18) {
        goto LABEL_28;
      }
    }

    if (*v19 != -1)
    {
      if (off_1008F29E0) {
        off_1008F29E0(a1, 81LL, 3207LL, 133LL);
      }
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Already have a TS pipe fot his handle !!!", v20, v21, v22, v23, v24, v25, v26, v49);
        __int128 v27 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }
    }

    else
    {
LABEL_28:
      __int128 v28 = &qword_1008F29F0[134 * v15];
      bzero(v28, 0x430uLL);
      *__int128 v28 = (uint64_t)a1;
      *((_WORD *)v28 + 4) = a2;
      *((_DWORD *)v28 + 12) = 1;
      sub_100102768(v15, 1u);
      __int128 v29 = &qword_1008F29F0[134 * dword_1008F29B4];
      *((_BYTE *)v29 + 77) = 0;
      v29[10] = 0x100000001LL;
      *((_DWORD *)v29 + 29) = 0;
      *((_DWORD *)v29 + 47) = -30;
      sub_1000B080C((uint64_t)(v29 + 24));
      unsigned int v30 = &qword_1008F29F0[134 * dword_1008F29B4];
      *((_DWORD *)v30 + 40) = *((_DWORD *)v30 + 48);
      *((_WORD *)v30 + 82) = *((_WORD *)v30 + 98);
      sub_1000B080C((uint64_t)(v30 + 26));
      sub_10008AE94(dword_1008F29B4);
      BYTE5(qword_1008F29F0[134 * dword_1008F29B4 + 55]) = sub_10008D7BC((uint64_t)a1);
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Storing pipe start %d:%d with tsTimeoutRequired %d",  v31,  v32,  v33,  v34,  v35,  v36,  v37,  LODWORD(qword_1008F29F0[134 * dword_1008F29B4 + 24]));
        uint64_t v38 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v39 = sub_1001EDDCC();
          *(_DWORD *)int buf = 136446210;
          uint64_t v51 = v39;
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      ++dword_1008F29B4;
      if (sub_10008D900((uint64_t)a1))
      {
        sub_100102124(a2, 2u);
        if (sub_10018BE60()
          && sub_10018BE60() <= 0x7CF
          && sub_10018BE60() > 0xE
          || sub_10018BE60() >= 0x7D0 && sub_10018BE60() <= 0xF9F)
        {
          sub_100194B58((uint64_t)a1, 1LL, 1LL);
        }
      }

      if (sub_100090494() && sub_100089F30((uint64_t)a1, 1) && sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Force upgrade TS not ready E", v40, v41, v42, v43, v44, v45, v46, v49);
        unint64_t v47 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v48 = sub_1001EDDCC();
          *(_DWORD *)int buf = 136446210;
          uint64_t v51 = v48;
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
  }

void sub_1000FDA84(unsigned int a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"pipe 0x%4x is gone, remaining peers %d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (dword_1008F29B4)
  {
    uint64_t v10 = 0LL;
    while (LOWORD(qword_1008F29F0[134 * v10 + 1]) != a1)
    {
      if (++v10 == dword_1008F29B4) {
        return;
      }
    }

    uint64_t v11 = &qword_1008F29F0[134 * v10];
    uint64_t v46 = 0LL;
    sub_1000B080C((uint64_t)&v46);
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Done with connection, %d total bytes sent in %d seconds (%d kbps)",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  HIDWORD(qword_1008F29F0[134 * v10 + 11]));
      uint64_t v19 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v20 = sub_1001EDDCC();
        *(_DWORD *)int buf = 136446210;
        *(void *)&uint8_t buf[4] = v20;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    if (*((void *)&xmmword_1008F29C8 + 1)) {
      (*((void (**)(void, void, uint64_t, uint64_t))&xmmword_1008F29C8 + 1))( LOBYTE(qword_1008F29F0[134 * v10 + 7]),  0LL,  v11[24],  v46);
    }
    uint64_t v21 = (_BYTE *)*v11;
    uint64_t v22 = &qword_1008F29F0[134 * v10];
    int v24 = *((unsigned __int8 *)v22 + 10);
    uint64_t v23 = (unsigned __int8 *)v22 + 10;
    if (v24)
    {
      uint64_t v45 = (_BYTE *)*v11;
      unint64_t v25 = 0LL;
      char v26 = 0;
      do
      {
        __int128 v27 = &qword_1008F29F0[134 * v10 + 2 * v25];
        __int128 v28 = (unsigned __int16 *)v27[2];
        if (v28)
        {
          if (sub_10012D514(v27[2]))
          {
            sub_10010CAA4((uint64_t)v28, 0x13u);
          }

          else if (*((_BYTE *)v28 + 2) == 8)
          {
            uint64_t v29 = byte_1008F29B0;
            if (byte_1008F29B0)
            {
              unsigned int v30 = (void (**)(void))(qword_1008F29A8 + 48);
              while (*((unsigned __int8 *)v30 - 47) != LOBYTE(qword_1008F29F0[134 * v10 + 3 + 2 * v25]))
              {
                v30 += 8;
                if (!--v29) {
                  goto LABEL_26;
                }
              }

              (*v30)(*v28);
            }
          }

void sub_1000FDEB8(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5 = a3;
  uint64_t v7 = dword_1008F29B4;
  if (!dword_1008F29B4)
  {
LABEL_5:
    uint64_t v9 = 0LL;
    if (!a2) {
      return;
    }
LABEL_8:
    if ((_DWORD)a3 - 2 == a2[1])
    {
      if (a5 && off_1008F29E8) {
        off_1008F29E8(v9, a1, a3);
      }
      unsigned int v10 = *a2;
      if (v10 <= 0x1F)
      {
        switch(*a2)
        {
          case 1u:
            sub_100104E74(v9, a2 + 2, (v5 - 2));
            break;
          case 2u:
            sub_1001057CC(v9, a2 + 2, v5 - 2);
            break;
          case 5u:
            sub_100105D38((uint64_t)v9, a2 + 2);
            break;
          case 0x10u:
            sub_100106474(v9, a2 + 2, v5 - 2);
            break;
          case 0x11u:
            sub_100105F5C((__int128 *)v9, a2 + 2, v5 - 2);
            break;
          case 0x12u:
            sub_100106BA4(v9, a2 + 2, v5 - 2);
            break;
          case 0x13u:
            sub_100106E90(v9, a2 + 2, v5 - 2);
            break;
          case 0x14u:
            sub_1001070EC(v9, a2 + 2, v5 - 2);
            break;
          default:
            goto LABEL_39;
        }

        return;
      }

      if (*a2 <= 0x21u)
      {
        if (v10 == 32)
        {
          sub_100107538((__int128 *)v9);
          return;
        }

        if (v10 == 33)
        {
          sub_1001078C0(v9);
          return;
        }
      }

      else
      {
        switch(v10)
        {
          case 0x22u:
            sub_100107D44(v9);
            return;
          case 0xFFu:
            uint64_t v19 = sub_1001080C8(a2[2]);
            sub_1001EE134((uint64_t)"Got TS error with message %s %s", v28, v29, v30, v31, v32, v33, v34, (uint64_t)v19);
            uint64_t v35 = (os_log_s *)sub_100086554(0x56u);
            if (!os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
              return;
            }
            goto LABEL_19;
          case 0xFEu:
            sub_100107FFC(a2[2]);
        }
      }

void sub_1000FE210(int a1, int a2)
{
  uint64_t v2 = byte_1008F29B0;
  if (byte_1008F29B0)
  {
    for (uint64_t i = (_BYTE *)(qword_1008F29A8 + 2); *(i - 1) != a1; i += 64)
    {
      if (!--v2) {
        return;
      }
    }

    int v4 = *i;
    *uint64_t i = a2;
    if (v4 != a2 && dword_1008F29B4 != 0)
    {
      unint64_t v6 = 0LL;
      int v7 = *(i - 2);
      uint64_t v8 = (__int128 **)qword_1008F29F0;
      do
      {
        sub_100103A30(*v8, v7);
        ++v6;
        v8 += 134;
      }

      while (v6 < dword_1008F29B4);
    }
  }

void sub_1000FE2B0(int a1, int a2, int a3)
{
  uint64_t v3 = byte_1008F29B0;
  if (byte_1008F29B0)
  {
    for (uint64_t i = (_WORD *)(qword_1008F29A8 + 8); *((unsigned __int8 *)i - 7) != a1; i += 32)
    {
      if (!--v3) {
        return;
      }
    }

    if (*((_DWORD *)i - 1) == a2)
    {
      int v5 = (unsigned __int16)*i;
      *((_DWORD *)i - 1) = a2;
      *uint64_t i = a3;
      if (v5 == a3) {
        return;
      }
    }

    else
    {
      *((_DWORD *)i - 1) = a2;
      *uint64_t i = a3;
    }

    if (dword_1008F29B4)
    {
      unint64_t v6 = 0LL;
      int v7 = *((unsigned __int8 *)i - 8);
      uint64_t v8 = (__int128 **)qword_1008F29F0;
      do
      {
        sub_100103A30(*v8, v7);
        ++v6;
        v8 += 134;
      }

      while (v6 < dword_1008F29B4);
    }
  }

uint64_t sub_1000FE36C()
{
  dword_1008F29B4 = 0;
  unsigned int v0 = byte_1008F29B0;
  if (byte_1008F29B0)
  {
    uint64_t v1 = 0LL;
    unint64_t v2 = 0LL;
    uint64_t v3 = qword_1008F29A8;
    do
    {
      int v4 = *(void (**)(void))(v3 + v1 + 32);
      if (v4)
      {
        v4(*(unsigned __int8 *)(v3 + v1));
        uint64_t v3 = qword_1008F29A8;
        unsigned int v0 = byte_1008F29B0;
      }

      ++v2;
      v1 += 64LL;
    }

    while (v2 < v0);
    if (v0) {
      sub_1000B1838((void *)qword_1008F29A8);
    }
  }

  qword_1008F29A8 = 0LL;
  byte_1008F29B0 = 0;
  return sub_1001EDD50();
}

uint64_t sub_1000FE424(unsigned __int16 *a1, int a2, int a3)
{
  if ((sub_10008D900((uint64_t)a1) & 1) != 0)
  {
    else {
      return sub_1000FEA3C(a1, a2, a3);
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Link is not encrypted, can't send upgrade", v7, v8, v9, v10, v11, v12, v13, v15);
      uint64_t v14 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 4802LL;
  }

uint64_t sub_1000FE4E0(unsigned __int16 *a1, int a2, int a3)
{
  uint64_t v3 = dword_1008F29B4;
  if (!dword_1008F29B4) {
    return 414LL;
  }
  for (uint64_t i = &word_1008F29F8; *((unsigned __int16 **)i - 1) != a1; i += 536)
  {
    if (!--v3) {
      return 414LL;
    }
  }

  uint64_t v8 = (unsigned __int16)*i;
  unsigned __int16 __len = 0;
  if ((_DWORD)v8 == 0xFFFF) {
    return 414LL;
  }
  if ((sub_10008D900((uint64_t)a1) & 1) == 0)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Link is not encrypted, can't send caps changed", v13, v14, v15, v16, v17, v18, v19, v58);
      uint64_t v20 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 4802LL;
  }

  uint64_t v9 = dword_1008F29B4;
  if (!dword_1008F29B4) {
    goto LABEL_30;
  }
  uint64_t v10 = &dword_1008F2A20;
  while (*((unsigned __int16 *)v10 - 20) != (_DWORD)v8)
  {
    v10 += 268;
    if (!--v9) {
      goto LABEL_30;
    }
  }

  if (*v10 != 6)
  {
LABEL_30:
    if (sub_1000A86F0())
    {
      uint64_t v30 = dword_1008F29B4;
      if (dword_1008F29B4)
      {
        uint64_t v31 = (unsigned int *)&dword_1008F2A20;
        while (*((unsigned __int16 *)v31 - 20) != (_DWORD)v8)
        {
          v31 += 268;
          if (!--v30) {
            goto LABEL_35;
          }
        }

        unsigned int v32 = *v31;
      }

      else
      {
LABEL_35:
        unsigned int v32 = 0;
      }

      uint64_t v33 = sub_1000FFB28(v32);
      sub_1001EE134( (uint64_t)"Message should only be send when in ##state state. Current state is %s",  v34,  v35,  v36,  v37,  v38,  v39,  v40,  (uint64_t)v33);
      uint64_t v41 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 408LL;
  }

  if (!byte_1008F29B0)
  {
LABEL_24:
    if (a2 <= 2)
    {
      if (a2 == 1)
      {
        uint64_t v29 = "LE";
        goto LABEL_70;
      }

      if (a2 == 2)
      {
        uint64_t v29 = "BT";
        goto LABEL_70;
      }
    }

    else
    {
      switch(a2)
      {
        case 3:
          uint64_t v29 = "WL";
          goto LABEL_70;
        case 16:
          uint64_t v29 = "USB";
          goto LABEL_70;
        case 17:
          uint64_t v29 = "AWDL";
          goto LABEL_70;
      }
    }

    uint64_t v29 = "??";
LABEL_70:
    sub_1001EE134((uint64_t)"Could not find transport tech %s.", v22, v23, v24, v25, v26, v27, v28, (uint64_t)v29);
    uint64_t v54 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
    return 120LL;
  }

  uint64_t v21 = 0LL;
  while (*(unsigned __int8 *)(qword_1008F29A8 + v21 + 1) != a2)
  {
    v21 += 64LL;
  }

  if (*(_BYTE *)(qword_1008F29A8 + v21 + 12)) {
    uint64_t v42 = (void *)(*(uint64_t (**)(unsigned __int16 *))(qword_1008F29A8 + v21 + 56))(&__len);
  }
  else {
    uint64_t v42 = 0LL;
  }
  sub_100101D4C(a1);
  uint64_t v43 = sub_1000B17F4(__len + 3LL);
  if (!v43)
  {
    if (v42) {
      sub_1000B1838(v42);
    }
    return 106LL;
  }

  uint64_t v44 = v43;
  _BYTE *v43 = 17;
  v43[1] = __len + 1;
  v43[2] = *(_BYTE *)(qword_1008F29A8 + v21);
  if (v42 && __len)
  {
    memmove(v43 + 3, v42, __len);
LABEL_54:
    sub_1000B1838(v42);
    goto LABEL_55;
  }

  if (v42) {
    goto LABEL_54;
  }
LABEL_55:
  sub_100102124(v8, 7u);
  if (dword_1008F29B4)
  {
    unsigned __int16 v45 = 0;
    while ((unsigned __int16 *)qword_1008F29F0[134 * v45] != a1)
    {
    }

    BYTE5(qword_1008F29F0[134 * v45 + 9]) = a2;
  }

uint64_t sub_1000FEA3C(unsigned __int16 *a1, int a2, int a3)
{
  char v39 = 0;
  __int16 v38 = 272;
  LODWORD(v3) = dword_1008F29B4;
  if (!dword_1008F29B4) {
    return 120LL;
  }
  unsigned __int16 v6 = 0;
  while (1)
  {
    unsigned __int16 v7 = v6;
LABEL_4:
    unsigned __int16 v6 = v7 + 1;
  }

  uint64_t v8 = &qword_1008F29F0[134 * v6];
  int v11 = *((unsigned __int16 *)v8 + 4);
  uint64_t v10 = (unsigned __int16 *)(v8 + 1);
  int v9 = v11;
  uint64_t v12 = &dword_1008F2A20;
  uint64_t v3 = v3;
  while (*((unsigned __int16 *)v12 - 20) != v9)
  {
    v12 += 268;
    if (!--v3) {
      goto LABEL_19;
    }
  }

  if (*v12 != 6)
  {
LABEL_19:
    if (sub_1000A86F0())
    {
      uint64_t v24 = dword_1008F29B4;
      if (dword_1008F29B4)
      {
        uint64_t v25 = (unsigned int *)&dword_1008F2A20;
        while (*((unsigned __int16 *)v25 - 20) != *v10)
        {
          v25 += 268;
          if (!--v24) {
            goto LABEL_24;
          }
        }

        unsigned int v26 = *v25;
      }

      else
      {
LABEL_24:
        unsigned int v26 = 0;
      }

      uint64_t v28 = sub_1000FFB28(v26);
      sub_1001EE134( (uint64_t)"Message should only be send when in ##state state. Current state is %s",  v29,  v30,  v31,  v32,  v33,  v34,  v35,  (uint64_t)v28);
      uint64_t v36 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 408LL;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Sending UPGRADE_REQ for lmhandle 0x%4x tech %s", v13, v14, v15, v16, v17, v18, v19, *a1);
    uint64_t v20 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v21 = sub_1001EDDCC();
      *(_DWORD *)int buf = 136446210;
      *(void *)&uint8_t buf[4] = v21;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  __int128 v41 = 0u;
  __int128 v42 = 0u;
  LOBYTE(v41) = 1;
  WORD1(v41) = 4;
  DWORD2(v41) = 7;
  LOBYTE(v42) = 1;
  WORD1(v42) = 4;
  DWORD2(v42) = a3;
  memcpy(buf, "state", sizeof(buf));
  sub_1000B142C("Magnet Operation", (const char *)buf, &v41, 2);
  uint64_t v22 = byte_1008F29B0;
  if (!byte_1008F29B0)
  {
LABEL_18:
    LODWORD(v3) = dword_1008F29B4;
    goto LABEL_4;
  }

  uint64_t v23 = (unsigned __int8 *)(qword_1008F29A8 + 1);
  while (*v23 != a2)
  {
    v23 += 64;
    if (!--v22) {
      goto LABEL_18;
    }
  }

  char v39 = *(v23 - 1);
  LODWORD(result) = sub_10008F3E4(0LL, a1, *v10, &v38, 3LL, 0LL);
  if ((_DWORD)result == 412) {
    return 0LL;
  }
  else {
    return result;
  }
}

uint64_t sub_1000FED78(unsigned __int16 *a1, int a2)
{
  if ((sub_10008D900((uint64_t)a1) & 1) != 0)
  {
    uint64_t v13 = dword_1008F29B4;
    if (dword_1008F29B4)
    {
      uint64_t v14 = &word_1008F29F8;
      uint64_t v15 = dword_1008F29B4;
      while (*((unsigned __int16 **)v14 - 1) != a1)
      {
        v14 += 536;
        if (!--v15)
        {
          uint64_t v16 = 0xFFFFLL;
          goto LABEL_15;
        }
      }

      uint64_t v16 = (unsigned __int16)*v14;
LABEL_15:
      __int16 v39 = 34;
      uint64_t v17 = &dword_1008F2A20;
      while (*((unsigned __int16 *)v17 - 20) != (_DWORD)v16)
      {
        v17 += 268;
        if (!--v13) {
          goto LABEL_26;
        }
      }

      if (*v17 == 6)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Sending DOWNGRADE_REQ to lmhandle 0x%4x", v18, v19, v20, v21, v22, v23, v24, *a1);
          uint64_t v25 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int buf = 136446210;
            *(void *)&uint8_t buf[4] = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        uint64_t result = sub_10008F3E4(0LL, a1, v16, &v39, 2LL, 0LL);
        if ((_DWORD)result == 412 || !(_DWORD)result)
        {
          __int128 v41 = 0u;
          __int128 v42 = 0u;
          LOBYTE(v41) = 1;
          WORD1(v41) = 4;
          DWORD2(v41) = 11;
          LOBYTE(v42) = 1;
          WORD1(v42) = 4;
          DWORD2(v42) = a2;
          memcpy(buf, "state", sizeof(buf));
          sub_1000B142C("Magnet Operation", (const char *)buf, &v41, 2);
          return 0LL;
        }

        return result;
      }
    }

    else
    {
      LODWORD(v16) = 0xFFFF;
    }

uint64_t sub_1000FF06C(unsigned __int16 *a1, int a2)
{
  __int16 v60 = 32;
  uint64_t v2 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    uint64_t v5 = &word_1008F29F8;
    uint64_t v6 = dword_1008F29B4;
    while (*((unsigned __int16 **)v5 - 1) != a1)
    {
      v5 += 536;
      if (!--v6) {
        goto LABEL_5;
      }
    }

    if (!*((_BYTE *)v5 + 2))
    {
      sub_1001EE134((uint64_t)"No alternate handle to downgrade from.", v21, v22, v23, v24, v25, v26, v27, v59);
      unsigned int v28 = (os_log_s *)sub_100086554(0x56u);
      if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        return 408LL;
      }
      goto LABEL_50;
    }

    uint64_t v17 = (unsigned __int16)*v5;
    if ((_DWORD)v17 != 0xFFFF)
    {
      uint64_t v18 = (unsigned __int16 *)*((void *)v5 + 1);
      uint64_t v19 = &dword_1008F2A20;
      uint64_t v20 = dword_1008F29B4;
      while (*((unsigned __int16 *)v19 - 20) != (_DWORD)v17)
      {
        v19 += 268;
        if (!--v20) {
          goto LABEL_20;
        }
      }

      if (*v19 == 6)
      {
LABEL_25:
        sub_100101D4C(v18);
        if ((sub_10012D514((uint64_t)v18)
           || sub_10012D5BC((uint64_t)v18)
           || sub_10012D5EC((uint64_t)v18)
           || sub_10012D61C((uint64_t)v18))
          && sub_100135FB0((uint64_t)v18))
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Waiting for data on lmhandle 0x%4x to be flushed before sending downgrade.",  v30,  v31,  v32,  v33,  v34,  v35,  v36,  *v18);
            uint64_t v37 = (os_log_s *)sub_100086554(0x56u);
            if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)int buf = 136446210;
              *(void *)&uint8_t buf[4] = sub_1001EDDCC();
              _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          sub_100102124(v17, 0xBu);
          sub_100135CD8(1, (uint64_t)v18, sub_100102270);
          return 0LL;
        }

        else
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Sending DOWNGRADE to lmhandle 0x%4x", v41, v42, v43, v44, v45, v46, v47, *a1);
            uint64_t v48 = (os_log_s *)sub_100086554(0x56u);
            if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)int buf = 136446210;
              *(void *)&uint8_t buf[4] = sub_1001EDDCC();
              _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          unsigned int v49 = sub_10008F3E4(0LL, a1, v17, &v60, 2LL, 0LL);
          if (v49 == 412) {
            uint64_t v15 = 0LL;
          }
          else {
            uint64_t v15 = v49;
          }
          if ((_DWORD)v15)
          {
            sub_100102438(v18);
          }

          else
          {
            sub_100102124(v17, 0xCu);
            sub_100102348(v17, 0x3A98u);
          }

          __int128 v62 = 0u;
          __int128 v63 = 0u;
          LOBYTE(v62) = 1;
          WORD1(v62) = 4;
          DWORD2(v62) = 10;
          LOBYTE(v63) = 1;
          WORD1(v63) = 4;
          DWORD2(v63) = a2;
          memcpy(buf, "state", sizeof(buf));
          sub_1000B142C("Magnet Operation", (const char *)buf, &v62, 2);
        }

        return v15;
      }

uint64_t sub_1000FF49C(unsigned __int16 *a1, char a2, int a3)
{
  uint64_t result = sub_1000FED78(a1, a3);
  if (!(_DWORD)result)
  {
    uint64_t v6 = dword_1008F29B4;
    if (dword_1008F29B4)
    {
      for (uint64_t i = qword_1008F29F0; (unsigned __int16 *)*i != a1; i += 134)
      {
        if (!--v6) {
          return result;
        }
      }

      *((_BYTE *)i + 77) = a2;
    }
  }

  return result;
}

void sub_1000FF500(uint64_t a1)
{
  if ((_DWORD)a1 && sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"PhyStatsEnabled with error %!", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

uint64_t sub_1000FF56C(uint64_t a1, _DWORD *a2)
{
  if (!dword_1008F29B4) {
    return 0LL;
  }
  uint64_t v4 = 0LL;
  for (uint64_t i = qword_1008F29F0;
        !*i || !sub_10012D5EC(*i) || *(unsigned __int16 *)(a1 + 204) != *(unsigned __int16 *)*i;
        i += 134)
  {
  }

  int v7 = sub_10008E758(*i, a1);
  *((_DWORD *)i + 47) = *(__int16 *)(a1 + 18);
  __int128 v8 = *(_OWORD *)(a1 + 144);
  __int128 v9 = *(_OWORD *)(a1 + 160);
  __int128 v10 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)((char *)i + 422) = *(_OWORD *)(a1 + 190);
  *(_OWORD *)(i + 49) = v9;
  *(_OWORD *)(i + 51) = v10;
  *(_OWORD *)(i + 47) = v8;
  __int128 v11 = *(_OWORD *)(a1 + 80);
  __int128 v12 = *(_OWORD *)(a1 + 96);
  __int128 v13 = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(i + 43) = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(i + 45) = v13;
  *(_OWORD *)(i + 39) = v11;
  *(_OWORD *)(i + 41) = v12;
  __int128 v14 = *(_OWORD *)(a1 + 16);
  __int128 v15 = *(_OWORD *)(a1 + 32);
  __int128 v16 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(i + 35) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(i + 37) = v16;
  *(_OWORD *)(i + 33) = v15;
  *(_OWORD *)(i + 31) = v14;
  *(_OWORD *)(i + 29) = *(_OWORD *)a1;
  if (a2) {
    *a2 = v7;
  }
  return 1LL;
}

uint64_t sub_1000FF658(uint64_t result, int a2)
{
  uint64_t v2 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    for (uint64_t i = qword_1008F29F0; *i != result; i += 134)
    {
      if (!--v2) {
        return result;
      }
    }

    *((_DWORD *)i + 47) = a2;
  }

  return result;
}

uint64_t sub_1000FF690(unsigned int a1)
{
  if (dword_1008F29B4 <= a1) {
    return 0LL;
  }
  else {
    return HIDWORD(qword_1008F29F0[134 * a1 + 23]);
  }
}

uint64_t sub_1000FF6C0(uint64_t result, _DWORD *a2, _DWORD *a3)
{
  unint64_t v3 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    unint64_t v4 = 0LL;
    uint64_t v5 = &dword_1008F2AA8;
    do
    {
      if (*((void *)v5 - 23) == result)
      {
        *a2 = *(v5 - 2);
        *a3 = *(v5 - 1);
        *uint64_t v5 = 0;
        *((void *)v5 - 2) = 0LL;
        unint64_t v3 = dword_1008F29B4;
      }

      ++v4;
      v5 += 268;
    }

    while (v4 < v3);
  }

  return result;
}

void sub_1000FF714( uint64_t a1, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, int a8, unsigned __int8 a9, char a10, unsigned __int8 a11, unsigned __int8 a12, char a13, char a14, char a15)
{
  if (!dword_1008F29B4) {
    return;
  }
  uint64_t v20 = 0LL;
  for (uint64_t i = qword_1008F29F0; ; i += 134)
  {
    if (*i != a1) {
      goto LABEL_9;
    }
    int v22 = *((unsigned __int8 *)i + 76);
    if (v22 == 2) {
      break;
    }
    if (v22 == 1)
    {
      *((_DWORD *)i + 113) = a2;
      *((_DWORD *)i + 114) += a4;
      *((_DWORD *)i + 115) += a5;
      uint64_t v34 = a6;
      *((_WORD *)i + 234) += a6;
      char v35 = a10;
      uint64_t v36 = (-a10 / 0xAu - 2);
      if (a10 > -30) {
        uint64_t v36 = 0LL;
      }
      ++*((_BYTE *)i + 10 * ((205 * a8) >> 11) + v36 + 470);
      uint64_t v33 = (char *)i + 10 * (a9 / 0xAu) + v36 + 570;
      goto LABEL_21;
    }

    if (sub_1000A86F0())
    {
      uint64_t v23 = sub_1000FFB28(*((unsigned __int8 *)i + 76));
      sub_1001EE134( (uint64_t)"Unexpected transport : %s. Don't collect stats",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  (uint64_t)v23);
      uint64_t v31 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        sub_10065B768();
      }
    }

const char *sub_1000FFB28(unsigned int a1)
{
  if (a1 > 0xC) {
    return "??";
  }
  else {
    return off_100884308[a1];
  }
}

void sub_1000FFB4C(uint64_t a1, int a2, int a3)
{
  if (!dword_1008F29B4) {
    return;
  }
  uint64_t v6 = 0LL;
  for (uint64_t i = qword_1008F29F0; ; i += 134)
  {
    if (*i != a1) {
      goto LABEL_9;
    }
    int v8 = *((unsigned __int8 *)i + 76);
    if (v8 == 2) {
      break;
    }
    if (v8 == 1)
    {
      if (*(_DWORD *)(a1 + 144) == 2) {
        int v19 = 2;
      }
      else {
        int v19 = 1;
      }
      *((_DWORD *)i + 113) = v19;
      *((_DWORD *)i + 114) += a2;
      *((_DWORD *)i + 115) += a3;
      return;
    }

    if (sub_1000A86F0())
    {
      __int128 v9 = sub_1000FFB28(*((unsigned __int8 *)i + 76));
      sub_1001EE134( (uint64_t)"Unexpected transport : %s. Don't collect stats",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  (uint64_t)v9);
      uint64_t v17 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_10065B768();
      }
    }

_DWORD *sub_1000FFCD4( _DWORD *result, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, void *__dst, uint64_t a7, uint64_t a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12, _DWORD *a13, void *a14, uint64_t a15, uint64_t a16, _DWORD *a17)
{
  if (dword_1008F29B4)
  {
    unint64_t v21 = 0LL;
    int v22 = &xmmword_1008F2C2A;
    uint64_t v45 = a2;
    uint64_t v46 = a3;
    uint64_t v43 = __dst;
    uint64_t v44 = result;
    do
    {
      *uint64_t result = *(_DWORD *)((char *)v22 - 118);
      *a2 = *(_DWORD *)((char *)v22 - 114);
      *a3 = *(_DWORD *)((char *)v22 - 110);
      *a4 = *((unsigned __int16 *)v22 - 51);
      *a5 = *(_DWORD *)((char *)v22 - 106);
      __int128 v23 = *(__int128 *)((char *)v22 - 100);
      __int128 v24 = *(__int128 *)((char *)v22 - 68);
      *(_OWORD *)(a7 + 16) = *(__int128 *)((char *)v22 - 84);
      *(_OWORD *)(a7 + 32) = v24;
      *(_OWORD *)a7 = v23;
      __int128 v25 = *(__int128 *)((char *)v22 - 52);
      __int128 v26 = *(__int128 *)((char *)v22 - 36);
      __int128 v27 = *(__int128 *)((char *)v22 - 20);
      *(_DWORD *)(a7 + 96) = *((_DWORD *)v22 - 1);
      *(_OWORD *)(a7 + 64) = v26;
      *(_OWORD *)(a7 + 80) = v27;
      *(_OWORD *)(a7 + 48) = v25;
      __int128 v29 = v22[4];
      __int128 v28 = v22[5];
      __int128 v30 = v22[3];
      *(_DWORD *)(a8 + 96) = *((_DWORD *)v22 + 24);
      *(_OWORD *)(a8 + 64) = v29;
      *(_OWORD *)(a8 + 80) = v28;
      *(_OWORD *)(a8 + 48) = v30;
      __int128 v31 = *v22;
      __int128 v32 = v22[2];
      *(_OWORD *)(a8 + 16) = v22[1];
      *(_OWORD *)(a8 + 32) = v32;
      *(_OWORD *)a8 = v31;
      memcpy(__dst, (char *)v22 + 322, 4LL * *((unsigned __int8 *)v22 + 492));
      *a9 = *(_DWORD *)((char *)v22 + 102);
      *a10 = *(_DWORD *)((char *)v22 + 106);
      *a11 = *(_DWORD *)((char *)v22 + 110);
      *a12 = *((unsigned __int16 *)v22 + 59);
      *a13 = *(_DWORD *)((char *)v22 + 114);
      __int128 v33 = *(__int128 *)((char *)v22 + 152);
      __int128 v34 = *(__int128 *)((char *)v22 + 136);
      *(_OWORD *)a15 = *(__int128 *)((char *)v22 + 120);
      *(_OWORD *)(a15 + 16) = v34;
      *(_OWORD *)(a15 + 32) = v33;
      __int128 v35 = *(__int128 *)((char *)v22 + 184);
      __int128 v36 = *(__int128 *)((char *)v22 + 200);
      __int128 v37 = *(__int128 *)((char *)v22 + 168);
      *(_DWORD *)(a15 + 96) = *((_DWORD *)v22 + 54);
      *(_OWORD *)(a15 + 64) = v35;
      *(_OWORD *)(a15 + 80) = v36;
      *(_OWORD *)(a15 + 48) = v37;
      __int128 v38 = *(__int128 *)((char *)v22 + 252);
      __int128 v39 = *(__int128 *)((char *)v22 + 220);
      *(_OWORD *)(a16 + 16) = *(__int128 *)((char *)v22 + 236);
      *(_OWORD *)(a16 + 32) = v38;
      *(_OWORD *)a16 = v39;
      __int128 v41 = *(__int128 *)((char *)v22 + 284);
      __int128 v40 = *(__int128 *)((char *)v22 + 300);
      __int128 v42 = *(__int128 *)((char *)v22 + 268);
      *(_DWORD *)(a16 + 96) = *((_DWORD *)v22 + 79);
      *(_OWORD *)(a16 + 64) = v41;
      *(_OWORD *)(a16 + 80) = v40;
      *(_OWORD *)(a16 + 48) = v42;
      memcpy(a14, (char *)v22 + 402, 4LL * *((unsigned __int8 *)v22 + 493));
      *a17 = *((unsigned __int16 *)v22 + 241);
      bzero((char *)v22 - 118, 0x264uLL);
      uint64_t result = v44;
      a2 = v45;
      a3 = v46;
      __dst = v43;
      ++v21;
      v22 += 67;
    }

    while (v21 < dword_1008F29B4);
  }

  return result;
}

void sub_1000FFF00(uint64_t a1)
{
  if ((_DWORD)a1 && sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"SetBidirectionalMaxPowerMode completed with error %!", v2, v3, v4, v5, v6, v7, v8, a1);
    __int128 v9 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

uint64_t sub_1000FFF6C(int a1)
{
  uint64_t result = sub_10018BE60();
  if (result >= 0x7D0)
  {
    uint64_t result = sub_10018BE60();
    if (result <= 0xF9F)
    {
      if (sub_1000A86F0())
      {
        uint64_t v10 = "Disabling";
        if (a1) {
          uint64_t v10 = "Enabling";
        }
        sub_1001EE134( (uint64_t)"%s bidirectional max power mode for handle 0x%x",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  (uint64_t)v10);
        uint64_t v11 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 136446210;
          uint64_t v13 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      return sub_1001950D8();
    }
  }

  return result;
}

const char *sub_100100080(int a1)
{
  if (a1 <= 2)
  {
    if (a1 == 1) {
      return "LE";
    }
    if (a1 == 2) {
      return "BT";
    }
  }

  else
  {
    switch(a1)
    {
      case 3:
        return "WL";
      case 16:
        return "USB";
      case 17:
        return "AWDL";
    }
  }

  return "??";
}

void sub_1001000F8()
{
  if (!dword_1008F29B4)
  {
LABEL_66:
    __int128 v28 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      __int128 v30 = "No Transport Switching.\n";
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "%{public}s", buf, 0xCu);
    }

    return;
  }

  unint64_t v0 = 0LL;
  do
  {
    uint64_t v1 = &qword_1008F29F0[134 * v0];
    uint64_t v2 = (unsigned __int16 *)*v1;
    if (*v1) {
      int v3 = *v2;
    }
    else {
      int v3 = 0;
    }
    int v4 = *((_DWORD *)v1 + 14);
    uint64_t v5 = &qword_1008F29F0[134 * v0];
    int v6 = *((unsigned __int16 *)v5 + 4);
    int v7 = *((unsigned __int8 *)v5 + 10);
    uint64_t v8 = sub_1000FFB28(*((_DWORD *)v5 + 12));
    int v11 = *((_DWORD *)v5 + 18);
    uint64_t v10 = (unsigned int *)(v5 + 9);
    int v9 = v11;
    unsigned int v12 = *((unsigned __int8 *)v10 + 4);
    if (v12 <= 2)
    {
      uint64_t v13 = "LE";
      if (v12 == 1) {
        goto LABEL_17;
      }
      if (v12 == 2)
      {
        uint64_t v13 = "BT";
        goto LABEL_17;
      }
    }

    else
    {
      switch(v12)
      {
        case 3u:
          uint64_t v13 = "WL";
          goto LABEL_17;
        case 0x10u:
          uint64_t v13 = "USB";
          goto LABEL_17;
        case 0x11u:
          uint64_t v13 = "AWDL";
          goto LABEL_17;
      }
    }

    uint64_t v13 = "??";
LABEL_17:
    unsigned int v14 = BYTE5(qword_1008F29F0[134 * v0 + 9]);
    if (v14 <= 2)
    {
      uint64_t v15 = "LE";
      if (v14 == 1) {
        goto LABEL_28;
      }
      if (v14 == 2)
      {
        uint64_t v15 = "BT";
        goto LABEL_28;
      }
    }

    else
    {
      switch(v14)
      {
        case 3u:
          uint64_t v15 = "WL";
          goto LABEL_28;
        case 0x10u:
          uint64_t v15 = "USB";
          goto LABEL_28;
        case 0x11u:
          uint64_t v15 = "AWDL";
          goto LABEL_28;
      }
    }

    uint64_t v15 = "??";
LABEL_28:
    int v16 = qword_1008F29F0[134 * v0 + 10];
    if (v16 <= 2)
    {
      uint64_t v17 = "LE";
      if (v16 == 1) {
        goto LABEL_39;
      }
      if (v16 == 2)
      {
        uint64_t v17 = "BT";
        goto LABEL_39;
      }
    }

    else
    {
      switch(v16)
      {
        case 3:
          uint64_t v17 = "WL";
          goto LABEL_39;
        case 16:
          uint64_t v17 = "USB";
          goto LABEL_39;
        case 17:
          uint64_t v17 = "AWDL";
          goto LABEL_39;
      }
    }

    uint64_t v17 = "??";
LABEL_39:
    int v18 = HIDWORD(qword_1008F29F0[134 * v0 + 10]);
    if (v18 <= 2)
    {
      int v19 = "LE";
      if (v18 == 1) {
        goto LABEL_50;
      }
      if (v18 == 2)
      {
        int v19 = "BT";
        goto LABEL_50;
      }
    }

    else
    {
      switch(v18)
      {
        case 3:
          int v19 = "WL";
          goto LABEL_50;
        case 16:
          int v19 = "USB";
          goto LABEL_50;
        case 17:
          int v19 = "AWDL";
          goto LABEL_50;
      }
    }

    int v19 = "??";
LABEL_50:
    uint64_t v20 = &qword_1008F29F0[134 * v0];
    sub_1001EE0E4( ">> Peer %d: version %d, connectionHandle=%p, lm=0x%4x, pipeID=0x%4x, nbTransportHandles=%d, state=%s, nbCaps=%d, c urrenTech=%s, updateTech=%s, localReq=%s, remoteReq=%s, leRSSI=%d\n",  v0,  v4,  v2,  v3,  v6,  v7,  v8,  v9,  v13,  v15,  v17,  v19,  *((_DWORD *)v20 + 47));
    sub_1001EE0E4( "messageTimer=0x%x, samplingConfirmCount=%d, totalBytesQueued=%d, bytesSentOnTransport=%d, chipFull=%d, weightedLength=%d\n",  *((_DWORD *)v20 + 13),  *((unsigned __int8 *)v20 + 78),  *((_DWORD *)v20 + 22),  *((_DWORD *)v20 + 23),  *((_DWORD *)v20 + 24),  *((_DWORD *)v20 + 25));
    sub_1001EE0E4( "weightedInterPacketGap=%d, numOfEwmaSamples=%d, transportSelectReason=0x%x, calculatedTransportIndex=%d, actionToB eConfirm=%d, prevTSAction=%d, upgradeCount=%d\n",  *((_DWORD *)v20 + 26),  *((_DWORD *)v20 + 27),  *((_DWORD *)v20 + 28),  *((_DWORD *)v20 + 29),  *((_DWORD *)v20 + 30),  *((_DWORD *)v20 + 31),  *((_DWORD *)v20 + 50));
    sub_1001EE0E4( "timeSpentUpgraded=%d, overrideIncomingRate=%d, overrideOutgoingRate=%d, overridePacketRate=%d, forceClassic=%d, bi directionalMaxPowerModeAction=%d, bidirectionalMaxPowerModeActionPending=%d\n",  *((_DWORD *)v20 + 56),  *((unsigned __int8 *)v20 + 444),  *((_DWORD *)v20 + 51),  *((_DWORD *)v20 + 54),  *((_DWORD *)v20 + 55),  *((unsigned __int8 *)v20 + 447),  *((unsigned __int8 *)v20 + 446));
    if (*v10)
    {
      uint64_t v21 = 0LL;
      unint64_t v22 = 0LL;
      __int128 v23 = &qword_1008F29F0[134 * v0 + 8];
      do
      {
        __int128 v24 = (unsigned __int8 *)(*v23 + v21);
        unsigned int v25 = v24[1];
        if (v25 <= 2)
        {
          __int128 v26 = "LE";
          if (v25 != 1)
          {
            if (v25 != 2)
            {
LABEL_62:
              __int128 v26 = "??";
              goto LABEL_63;
            }

            __int128 v26 = "BT";
          }
        }

        else
        {
          switch(v25)
          {
            case 3u:
              __int128 v26 = "WL";
              break;
            case 0x10u:
              __int128 v26 = "USB";
              break;
            case 0x11u:
              __int128 v26 = "AWDL";
              break;
            default:
              goto LABEL_62;
          }
        }

uint64_t sub_1001005E8( _DWORD *a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _BYTE *a7, void *a8, void *a9)
{
  uint64_t v18 = 0LL;
  uint64_t result = sub_1000B080C((uint64_t)&v18);
  if (a1) {
    *a1 = dword_1008F29B4 != 0;
  }
  if (dword_1008F29B4)
  {
    if (a2) {
      *a2 = dword_1008F2AB0;
    }
    if (a3) {
      *a3 = v18;
    }
    if (a4) {
      *a4 = dword_1008F2AB8;
    }
    if (a5) {
      *a5 = dword_1008F2ABC;
    }
    if (a9) {
      *a9 = qword_1008F29F0[0];
    }
    if (a6) {
      *a6 = dword_1008F2A20;
    }
    if (a7) {
      *a7 = byte_1008F2A3C;
    }
    if (a8) {
      *a8 = 1000 * ((int)v18 - dword_1008F2AC0) - word_1008F2AC4 + SWORD2(v18);
    }
  }

  return result;
}

uint64_t sub_100100714(int a1)
{
  if (!dword_1008F29B4) {
    return 0LL;
  }
  uint64_t v1 = 0LL;
  for (uint64_t i = &qword_1008F2A00; ; i += 134)
  {
    if (LOWORD(qword_1008F29F0[134 * v1 + 1]) == a1)
    {
      int v3 = &qword_1008F29F0[134 * v1];
      uint64_t v4 = *((unsigned __int8 *)v3 + 10);
      uint64_t v5 = i;
      if (*((_BYTE *)v3 + 10)) {
        break;
      }
    }

uint64_t sub_100100788(uint64_t a1)
{
  uint64_t v1 = dword_1008F29B4;
  if (!dword_1008F29B4) {
    return 0xFFFFLL;
  }
  for (uint64_t i = &word_1008F29F8; *((void *)i - 1) != a1; i += 536)
  {
    if (!--v1) {
      return 0xFFFFLL;
    }
  }

  return (unsigned __int16)*i;
}

uint64_t sub_1001007C4(uint64_t a1)
{
  uint64_t v1 = 0LL;
  unsigned int v2 = *(_DWORD *)(a1 + 48);
  if (v2 <= 0xC)
  {
    int v3 = 1 << v2;
    if ((v3 & 0x780) != 0)
    {
      uint64_t v4 = 0LL;
      for (char i = 1; ; char i = 0)
      {
        char v6 = i;
        uint64_t v4 = 1LL;
        if ((v6 & 1) == 0) {
          return 0LL;
        }
      }

      return *(void *)(a1 + 16 * v4 + 16);
    }

    if ((v3 & 0x1840) != 0)
    {
      if (*(_BYTE *)(a1 + 10))
      {
        uint64_t v4 = 0LL;
        for (char j = 1; ; char j = 0)
        {
          char v8 = j;
          uint64_t v4 = 1LL;
          if ((v8 & 1) == 0) {
            return 0LL;
          }
        }

        return *(void *)(a1 + 16 * v4 + 16);
      }

      return 0LL;
    }
  }

  return v1;
}

uint64_t sub_10010086C(uint64_t result)
{
  dword_1008D73E0 = result;
  return result;
}

uint64_t sub_100100878(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = 99LL;
  unint64_t v46 = 99LL;
  uint64_t v50 = 0LL;
  memset(v49, 0, sizeof(v49));
  if (a1 && a2)
  {
    if (*(_BYTE *)(a2 + 2)) {
      a1 = a2;
    }
    sub_10008CC54(a1, (uint64_t)v49, &v46);
    unint64_t v4 = v46;
  }

  uint64_t v5 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    uint64_t v6 = 0LL;
    int v7 = &qword_1008F2A00;
    while (1)
    {
      uint64_t v8 = qword_1008F29F0[134 * v6];
      if (v8 == v3 || v8 == a2) {
        break;
      }
      uint64_t v10 = BYTE2(qword_1008F29F0[134 * v6 + 1]);
      int v11 = v7;
      if (BYTE2(qword_1008F29F0[134 * v6 + 1]))
      {
        while (*v11 != v3 && *v11 != a2)
        {
          v11 += 2;
          if (!--v10) {
            goto LABEL_18;
          }
        }

        int v13 = LOWORD(qword_1008F29F0[134 * v6 + 1]);
        *((_WORD *)v49 + v4) = v13;
      }

      else
      {
LABEL_18:
        int v13 = *((unsigned __int16 *)v49 + v4);
      }

      ++v6;
      v7 += 134;
      if (v13) {
        BOOL v14 = 1;
      }
      else {
        BOOL v14 = v6 == v5;
      }
      if (v14) {
        goto LABEL_27;
      }
    }

    *((_WORD *)v49 + v4) = qword_1008F29F0[134 * v6 + 1];
  }

uint64_t sub_100100BD4(unsigned __int16 *a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Force disconnecting this channel %p", v2, v3, v4, v5, v6, v7, v8, (uint64_t)a1);
    int v9 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  if (dword_1008F29B4)
  {
    uint64_t v10 = 0LL;
    int v11 = &qword_1008F2A00;
    while (1)
    {
      unsigned int v12 = &qword_1008F29F0[134 * v10];
      uint64_t v13 = BYTE2(qword_1008F29F0[134 * v10 + 1]);
      BOOL v14 = v11;
      if (BYTE2(qword_1008F29F0[134 * v10 + 1]))
      {
        while ((unsigned __int16 *)*v14 != a1)
        {
          v14 += 2;
          if (!--v13) {
            goto LABEL_10;
          }
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Disconnecting peer %d",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  LOWORD(qword_1008F29F0[134 * v10 + 1]));
          uint64_t v31 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
            goto LABEL_17;
          }
        }

        return sub_1001B7974(*v12);
      }

void sub_100100DA8(uint64_t a1, int *a2, uint64_t a3)
{
  char v40 = 0;
  int v41 = *a2;
  __int16 v42 = *((_WORD *)a2 + 2);
  uint64_t v5 = sub_10012D98C(&v40);
  if (!(_DWORD)a1
    || !sub_1000A86F0()
    || (sub_1001EE134( (uint64_t)"TS connection completed with status %! with lmhandle 0x%4x (0x%x)",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  a1),  uint64_t v13 = (os_log_s *)sub_100086554(0x56u),  !os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)))
  {
    if (v5) {
      goto LABEL_5;
    }
LABEL_26:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"ACL connection complete, not a TS handle", v30, v31, v32, v33, v34, v35, v36, v39);
      uint64_t v37 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v38 = sub_1001EDDCC();
        *(_DWORD *)int buf = 136446210;
        uint64_t v44 = v38;
        _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    return;
  }

  sub_100657F74();
  if (!v5) {
    goto LABEL_26;
  }
LABEL_5:
  if (!a3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"TS connection complete, classicHandle is invalid", v18, v19, v20, v21, v22, v23, v24, v39);
      uint64_t v25 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    char v14 = 0;
    goto LABEL_17;
  }

  char v14 = sub_1001E64D0(a3);
  if ((_DWORD)a1 || !*(_BYTE *)(v5 + 70))
  {
LABEL_17:
    sub_100100FE8((unsigned __int16 *)v5, a3, a1, v14);
    return;
  }

  uint64_t v15 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    uint64_t v16 = &qword_1008F2A00;
    while (*(v16 - 2) != v5)
    {
      v16 += 134;
      if (!--v15) {
        goto LABEL_12;
      }
    }

    char v26 = 0;
    uint64_t v27 = 0LL;
    do
    {
      uint64_t v28 = v16[2 * v27];
      if ((v26 & 1) != 0) {
        break;
      }
      char v26 = 1;
      uint64_t v27 = 1LL;
    }

    while (v28 != a3);
    BOOL v17 = v28 != a3;
  }

  else
  {
LABEL_12:
    BOOL v17 = 1;
  }

  int v29 = sub_100100FE8((unsigned __int16 *)v5, a3, a1, v14);
  if (v17 && !v29) {
    sub_10010C9D4(a3);
  }
}

uint64_t sub_100100FE8(unsigned __int16 *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!a1 && !(_DWORD)a3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"No LE connection for this new connection.", v8, v9, v10, v11, v12, v13, v14, v130);
      uint64_t v15 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 5009LL;
  }

  if (!a1 && (_DWORD)a3)
  {
    int v24 = sub_1000A86F0();
    uint64_t result = 0LL;
    if (!v24) {
      return result;
    }
    sub_1001EE134( (uint64_t)"BT connection failed and LE is gone anyways - dropping the message.",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  v130);
    uint64_t v25 = (os_log_s *)sub_100086554(0x56u);
    BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0LL;
    if (!v26) {
      return result;
    }
LABEL_35:
    *(_DWORD *)int buf = 136446210;
    v132 = sub_1001EDDCC();
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    return 0LL;
  }

  if (dword_1008F29B4)
  {
    uint64_t v27 = 0LL;
    uint64_t v28 = qword_1008F29F0;
    while ((unsigned __int16 *)*v28 != a1)
    {
      ++v27;
      v28 += 134;
      if (dword_1008F29B4 == v27) {
        goto LABEL_16;
      }
    }
  }

  else
  {
LABEL_16:
    LODWORD(v27) = 16;
  }

  if (v27 >= dword_1008F29B4)
  {
    int v57 = sub_1000A86F0();
    uint64_t result = 0LL;
    if (!v57) {
      return result;
    }
    sub_1001EE134( (uint64_t)"Ignoring connection complete - connected a device from an LE but we weren't tracking it.",  v50,  v51,  v52,  v53,  v54,  v55,  v56,  v130);
    uint64_t v25 = (os_log_s *)sub_100086554(0x56u);
    BOOL v58 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0LL;
    if (!v58) {
      return result;
    }
    goto LABEL_35;
  }

  if (a1 && (_DWORD)a3)
  {
    if (off_1008F29E0) {
      off_1008F29E0(a1, 81LL, 1644LL, a3);
    }
    if (sub_10008D8B4((uint64_t)a1))
    {
      sub_100102438(a1);
      if ((_DWORD)a3 == 708)
      {
        if (BYTE5(qword_1008F29F0[134 * v27 + 55]))
        {
          sub_1000B080C((uint64_t)&qword_1008F29F0[134 * v27 + 20]);
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"TS Connection timeout timestamped at %d:%d. Connection start %d:%d",  v79,  v80,  v81,  v82,  v83,  v84,  v85,  LODWORD(qword_1008F29F0[134 * v27 + 20]));
            uint64_t v86 = (os_log_s *)sub_100086554(0x56u);
            if (os_log_type_enabled(v86, OS_LOG_TYPE_ERROR)) {
              sub_100657F74();
            }
          }
        }
      }

      else if ((_DWORD)a3 == 717)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Controller returning transport switch with error %!, retry. Current count %d, version 0x%x",  v29,  v30,  v31,  v32,  v33,  v34,  v35,  717LL);
          uint64_t v36 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }

        uint64_t v37 = &qword_1008F29F0[134 * v27];
        unsigned int v39 = *((unsigned __int8 *)v37 + 79);
        uint64_t v38 = (char *)v37 + 79;
        if (v39 > 7)
        {
          sub_1001EE134( (uint64_t)"Error count exceeds threshold %d and RSSI was %d",  v122,  v123,  v124,  v125,  v126,  v127,  v128,  8LL);
          v129 = (os_log_s *)sub_100086554(0x56u);
          if (!os_log_type_enabled(v129, OS_LOG_TYPE_ERROR)) {
            goto LABEL_95;
          }
        }

        else
        {
          uint64_t v40 = sub_100103BE0((uint64_t)a1);
          if (!(_DWORD)v40) {
            goto LABEL_95;
          }
          uint64_t v41 = v40;
          sub_1001EE134((uint64_t)"Upgrade retry failed with status %!", v42, v43, v44, v45, v46, v47, v48, v41);
          uint64_t v49 = (os_log_s *)sub_100086554(0x56u);
          if (!os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
            goto LABEL_95;
          }
        }

        sub_100657F74();
LABEL_95:
        uint64_t result = 0LL;
        ++*v38;
        return result;
      }

      uint64_t v87 = (__int128 *)a1;
      char v88 = 4;
LABEL_61:
      sub_100103E38(v87, v88);
      return 0LL;
    }

    int v65 = &qword_1008F29F0[134 * v27];
    unsigned int v66 = *((unsigned __int8 *)v65 + 79);
    uint64_t v38 = (char *)v65 + 79;
    if (v66 <= 7)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Peripheral connection complete with status %!, retry %d is under limit. Version 0x%x",  v67,  v68,  v69,  v70,  v71,  v72,  v73,  a3);
        uint64_t v74 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v74, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 136446210;
          v132 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v74, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      goto LABEL_95;
    }

    uint64_t v77 = a1;
    int v78 = 4;
    goto LABEL_55;
  }

  if (!a1 || (_DWORD)a3) {
    sub_1001EE2A0();
  }
  uint64_t v59 = &qword_1008F29F0[134 * v27];
  *((_BYTE *)v59 + 79) = 0;
  BOOL v60 = sub_10008D8B4((uint64_t)a1);
  __int128 v62 = (unsigned __int16 *)(v59 + 1);
  int v61 = *((unsigned __int16 *)v59 + 4);
  uint64_t v63 = dword_1008F29B4;
  if (v60)
  {
    if (!dword_1008F29B4) {
      goto LABEL_65;
    }
    uint64_t v64 = &dword_1008F2A20;
    while (*((unsigned __int16 *)v64 - 20) != v61)
    {
      v64 += 268;
      if (!--v63) {
        goto LABEL_65;
      }
    }

    if (*v64 != 8)
    {
LABEL_65:
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Got an upgrade we were not tracking !", v89, v90, v91, v92, v93, v94, v95, v130);
        uint64_t v96 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v96, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 5010LL;
    }
  }

  else
  {
    if (!dword_1008F29B4) {
      goto LABEL_88;
    }
    uint64_t v75 = &dword_1008F2A20;
    uint64_t v76 = dword_1008F29B4;
    while (*((unsigned __int16 *)v75 - 20) != v61)
    {
      v75 += 268;
      if (!--v76) {
        goto LABEL_70;
      }
    }

    if (*v75 == 8) {
      goto LABEL_75;
    }
LABEL_70:
    int v97 = &dword_1008F2A20;
    while (*((unsigned __int16 *)v97 - 20) != v61)
    {
      v97 += 268;
      if (!--v63) {
        goto LABEL_88;
      }
    }

    if (*v97 != 10)
    {
LABEL_88:
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Got an upgrade we were not tracking !", v114, v115, v116, v117, v118, v119, v120, v130);
        v121 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v121, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 5011LL;
    }
  }

LABEL_85:
  qword_1008F29F0[134 * v98 + 2 + 2 * v100] = a2;
  if (*(_BYTE *)(a2 + 2) == 8)
  {
    v112 = &qword_1008F29F0[134 * v98 + 2 * v100];
    char v113 = 17;
  }

  else
  {
    if (*(_BYTE *)(a2 + 2))
    {
      sub_1001EE2A0();
      LOBYTE(v100) = *v101;
      goto LABEL_99;
    }

    v112 = &qword_1008F29F0[134 * v98 + 2 * v100];
    char v113 = 2;
  }

  *((_BYTE *)v112 + 24) = v113;
LABEL_99:
  _BYTE *v101 = v100 + 1;
LABEL_100:
  sub_1001043DC((uint64_t)v59, 0LL, 1);
  sub_100101D4C((unsigned __int16 *)a2);
  if (!sub_10008D900((uint64_t)a1) || (a4 & 1) != 0)
  {
    if (sub_10008D8B4((uint64_t)a1))
    {
      sub_100100878((uint64_t)a1, a2);
      uint64_t v87 = (__int128 *)a1;
      char v88 = 0;
      goto LABEL_61;
    }

    uint64_t v77 = a1;
    int v78 = 0;
LABEL_55:
    sub_100103FB4(v77, v78);
    return 0LL;
  }

  if (!sub_10012D514(a2)) {
    sub_1001EE2A0();
  }
  sub_100102124(*v62, 9u);
  uint64_t result = sub_10008D8B4((uint64_t)a1);
  if ((_DWORD)result)
  {
    uint64_t result = sub_1001EA358(sub_100104940, a2 + 48, 1048579LL, (uint64_t)&unk_1006BC738, *v62, 0);
    if ((_DWORD)result)
    {
      sub_100103E38((__int128 *)a1, 4);
      return 5012LL;
    }
  }

  return result;
}

  uint64_t v59 = (unsigned __int16)word_1008F6E5C;
LABEL_86:
  if (v42 >= v59) {
    uint64_t v42 = v59;
  }
LABEL_88:
  if (a3 == 2)
  {
    if (&xmmword_1008E2428 != (__int128 *)a1)
    {
      sub_1001EE134( (uint64_t)"writeLeData not the piconet broadcast connection handle",  v70,  v71,  v72,  v73,  v74,  v75,  v76,  v138);
      uint64_t v77 = (os_log_s *)sub_100086554(0x2Eu);
      if (!os_log_type_enabled(v77, OS_LOG_TYPE_ERROR)) {
        return 601LL;
      }
      goto LABEL_143;
    }

    uint64_t v94 = *a1;
    uint64_t v95 = 0x8000;
    goto LABEL_107;
  }

  if (a3 == 1)
  {
    if (&xmmword_1008E22D8 != (__int128 *)a1)
    {
      sub_1001EE134( (uint64_t)"writeLeData not the active broadcast connection handle",  v78,  v79,  v80,  v81,  v82,  v83,  v84,  v138);
      uint64_t v85 = (os_log_s *)sub_100086554(0x2Eu);
      if (!os_log_type_enabled(v85, OS_LOG_TYPE_ERROR)) {
        return 601LL;
      }
      goto LABEL_143;
    }

    uint64_t v94 = *a1;
    uint64_t v95 = 0x4000;
LABEL_107:
    uint64_t v69 = v95 & 0xF000 | v94 & 0xFFF;
    goto LABEL_108;
  }

  if (a3) {
    return 101LL;
  }
  if (*((_BYTE *)a1 + 2) != 4 || (uint64_t v68 = *a1, v68 == 0xFFFF))
  {
    sub_1001EE134((uint64_t)"writeLeData, %d is not an LE connection handle", v86, v87, v88, v89, v90, v91, v92, *a1);
    uint64_t v93 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v93, OS_LOG_TYPE_ERROR)) {
      return 601LL;
    }
    goto LABEL_143;
  }

  uint64_t v69 = v68 & 0xFFF;
LABEL_108:
  switch(a2)
  {
    case 0u:
      if ((byte_1008F6D2A & 0x40) == 0) {
        sub_1001EE2A0();
      }
      break;
    case 1u:
      v69 |= 0x1000u;
      break;
    case 2u:
      v69 |= 0x2000u;
      break;
    case 3u:
      v69 |= 0x3000u;
      break;
    default:
      return 101LL;
  }

  uint64_t v117 = *((unsigned __int8 *)a1 + 124);
  if (v117 == 6)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"writeLeData, handle %d is disconnecting.  Sending anyway",  v126,  v127,  v128,  v129,  v130,  v131,  v132,  *a1);
      v133 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v133, OS_LOG_TYPE_ERROR)) {
        sub_10065C0F8();
      }
    }
  }

  else if (v117 == 7)
  {
    sub_1001EE134( (uint64_t)"writeLeData, handle %d is disconnected.  discarding",  v118,  v119,  v120,  v121,  v122,  v123,  v124,  *a1);
    uint64_t v125 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v125, OS_LOG_TYPE_ERROR)) {
      return 601LL;
    }
    goto LABEL_143;
  }

  if (off_1008F6DE8)
  {
    uint64_t result = 629LL;
    goto LABEL_160;
  }

  uint64_t result = sub_10011EE68(2, v69, a4, v42);
  if ((_DWORD)result != 625)
  {
    if ((_DWORD)result) {
      goto LABEL_160;
    }
    v134 = 14LL;
    if (!LOBYTE(xmmword_1008F6E30[0])) {
      v134 = 46LL;
    }
    *((_BYTE *)xmmword_1008F6E30 + v134) = 0;
  }

  if (!*((_BYTE *)a1 + 129))
  {
    v135 = 10LL;
    if (!LOBYTE(xmmword_1008F6E30[0])) {
      v135 = 42LL;
    }
    --*(_WORD *)((char *)xmmword_1008F6E30 + v135);
    ++WORD1(xmmword_1008F6E30[0]);
    ++a1[8];
  }

  (*(void (**)(unsigned __int16 *))qword_1008F6D90)(a1);
  uint64_t result = 0LL;
LABEL_160:
  if (LOBYTE(xmmword_1008F6E30[0]))
  {
    v136 = BYTE14(xmmword_1008F6E30[0]);
    if (BYTE14(xmmword_1008F6E30[0]))
    {
      v136 = WORD5(xmmword_1008F6E30[0]) != 0;
      if (WORD3(xmmword_1008F6E30[0])) {
        v136 = WORD5(xmmword_1008F6E30[0]) > 2u;
      }
    }

    goto LABEL_175;
  }

  v137 = byte_1008F6E5E && word_1008F6E5A || *((_BYTE *)a1 + 129) != 0;
  byte_1008F6E92 = v137;
  return result;
}

          *((_BYTE *)a1 + 15) = 1;
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
          uint64_t v50 = 0;
LABEL_86:
          if (v50 < __len - 2) {
            goto LABEL_112;
          }
          int v57 = *((_WORD *)a1 + 6) + __len - 2;
          goto LABEL_123;
        case 4:
          LODWORD(v132[0]) |= 8u;
          if (*((_BYTE *)a1 + 14) != 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1204,  "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          if (!v30)
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            int v65 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v65 != 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1205,  "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_101:
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            uint64_t v68 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v68 != 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1206,  "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_102:
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            uint64_t v69 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v69 != 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1207,  "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_103:
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            uint64_t v70 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v70 != 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1208,  "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_104:
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            uint64_t v71 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v71 != 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1209,  "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
            goto LABEL_111;
          }

          uint64_t v51 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) <= v51)
          {
            *((_BYTE *)a1 + 15) = 1;
            goto LABEL_101;
          }

          uint64_t v52 = *a1;
          *((_WORD *)a1 + 6) = v51 + 1;
          BYTE10(v132[0]) = *(_BYTE *)(v52 + v51);
          if (*((unsigned __int16 *)a1 + 5) <= (v51 + 1))
          {
            *((_BYTE *)a1 + 15) = 1;
            goto LABEL_102;
          }

          uint64_t v53 = *a1;
          uint64_t v54 = v51 + 2;
          *((_WORD *)a1 + 6) = v51 + 2;
          BYTE11(v132[0]) = *(_BYTE *)(v53 + v51 + 1);
          if (*((unsigned __int16 *)a1 + 5) <= (v51 + 2))
          {
            *((_BYTE *)a1 + 15) = 1;
            goto LABEL_103;
          }

          uint64_t v55 = *a1;
          uint64_t v56 = v51 + 3;
          *((_WORD *)a1 + 6) = v56;
          BYTE12(v132[0]) = *(_BYTE *)(v55 + v54);
          if (*((unsigned __int16 *)a1 + 5) - v56 <= 1)
          {
            *((_BYTE *)a1 + 15) = 1;
            goto LABEL_104;
          }

          HIWORD(v132[0]) = *(_WORD *)(*a1 + v56);
          *((_WORD *)a1 + 6) = v56 + 2;
          if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v56 + 2) <= 1)
          {
            *((_BYTE *)a1 + 15) = 1;
            goto LABEL_111;
          }

          LOWORD(v132[1]) = *(_WORD *)(*a1 + (unsigned __int16)(v56 + 2));
          *((_WORD *)a1 + 6) = v56 + 4;
          WORD1(v132[1]) = *(_WORD *)(*a1 + (unsigned __int16)(v56 + 4));
          int v57 = v56 + 6;
          goto LABEL_123;
        case 5:
          LODWORD(v132[0]) |= 0x10u;
          if (*((_BYTE *)a1 + 14) != 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1212,  "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          if ((v30 & 1) == 0) {
            goto LABEL_111;
          }
          BOOL v58 = *((unsigned __int16 *)a1 + 6);
          uint64_t v59 = *a1;
          *((_WORD *)a1 + 6) = v58 + 1;
          BYTE4(v132[1]) = *(_BYTE *)(v59 + v58);
          goto LABEL_113;
        case 6:
          LODWORD(v132[0]) |= 0x20u;
          if (*((_BYTE *)a1 + 14) != 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1215,  "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          if (!v30)
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            unsigned int v66 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v66 != 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1216,  "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_107:
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            uint64_t v72 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v72 != 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1217,  "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_108:
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            uint64_t v73 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v73 != 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1218,  "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_109:
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            uint64_t v74 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v74 != 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1219,  "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_110:
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            uint64_t v75 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v75 != 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1220,  "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_111:
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            goto LABEL_112;
          }

          BOOL v60 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) <= v60)
          {
            *((_BYTE *)a1 + 15) = 1;
            goto LABEL_107;
          }

          int v61 = *a1;
          __int128 v62 = v60 + 1;
          *((_WORD *)a1 + 6) = v60 + 1;
          BYTE8(v132[1]) = *(_BYTE *)(v61 + v60);
          if (*((unsigned __int16 *)a1 + 5) <= (v60 + 1))
          {
            *((_BYTE *)a1 + 15) = 1;
            goto LABEL_108;
          }

          uint64_t v63 = *a1;
          uint64_t v64 = v60 + 2;
          *((_WORD *)a1 + 6) = v64;
          BYTE9(v132[1]) = *(_BYTE *)(v63 + v62);
          if (*((unsigned __int16 *)a1 + 5) - v64 <= 1)
          {
            *((_BYTE *)a1 + 15) = 1;
            goto LABEL_109;
          }

          WORD5(v132[1]) = *(_WORD *)(*a1 + v64);
          *((_WORD *)a1 + 6) = v64 + 2;
          if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v64 + 2) <= 3)
          {
            *((_BYTE *)a1 + 15) = 1;
            goto LABEL_110;
          }

          HIDWORD(v132[1]) = *(_DWORD *)(*a1 + (unsigned __int16)(v64 + 2));
          *((_WORD *)a1 + 6) = v64 + 6;
          if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v64 + 6) <= 3)
          {
            *((_BYTE *)a1 + 15) = 1;
            goto LABEL_111;
          }

          LODWORD(v132[2]) = *(_DWORD *)(*a1 + (unsigned __int16)(v64 + 6));
          *((_WORD *)a1 + 6) = v64 + 10;
          DWORD1(v132[2]) = *(_DWORD *)(*a1 + (unsigned __int16)(v64 + 10));
          int v57 = v64 + 14;
          goto LABEL_123;
        case 7:
          LODWORD(v132[0]) |= 0x40u;
          if (*((_BYTE *)a1 + 14) != 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c",  1223,  "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          if ((v30 & 1) == 0) {
            goto LABEL_111;
          }
          uint64_t v44 = *((unsigned __int16 *)a1 + 6);
          WORD4(v132[2]) = *(_WORD *)(*a1 + v44);
LABEL_81:
          int v57 = v44 + 2;
          goto LABEL_123;
        default:
          if (v28 < 0)
          {
            if ((v30 & 1) != 0)
            {
              uint64_t v67 = *((unsigned __int16 *)a1 + 5) - *((unsigned __int16 *)a1 + 6);
            }

            else
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
              uint64_t v67 = 0;
            }

            if (v67 < __len)
            {
LABEL_112:
              *((_BYTE *)a1 + 15) = 1;
            }

            else
            {
              int v57 = *((_WORD *)a1 + 6) + __len;
LABEL_123:
              *((_WORD *)a1 + 6) = v57;
            }
          }

          else
          {
            if (!v23)
            {
              uint64_t v23 = sub_1000B17F4(a3 - 4LL);
              if (!v23)
              {
                if (sub_1000A86F0())
                {
                  sub_1001EE134( (uint64_t)"Unable to allocate buffer for unknown opts",  v117,  v118,  v119,  v120,  v121,  v122,  v123,  v125);
                  uint64_t v124 = (os_log_s *)sub_100086554(0x2Fu);
                  if (os_log_type_enabled(v124, OS_LOG_TYPE_ERROR)) {
                    sub_10065C728();
                  }
                }

                uint64_t v23 = 0LL;
                uint64_t v12 = 104LL;
                goto LABEL_136;
              }
            }

            if ((unsigned __int16)(a3 - 4) < (unsigned __int16)(v129 + 2 + __len))
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"Bogus length in unknown option - must be corrupt packet",  v108,  v109,  v110,  v111,  v112,  v113,  v114,  v125);
                uint64_t v115 = (os_log_s *)sub_100086554(0x2Fu);
                if (os_log_type_enabled(v115, OS_LOG_TYPE_ERROR)) {
                  sub_10065C798();
                }
              }

              goto LABEL_135;
            }

            v23[v129] = v24;
            v23[v129 + 1] = __len;
            uint64_t v32 = v129;
            memmove(&v23[v129 + 2], (const void *)(*a1 + *((unsigned __int16 *)a1 + 6)), __len);
            v129 += __len + 2;
            uint64_t v33 = (unsigned __int16)(v32 + __len + 2);
            uint64_t v34 = sub_1000A86F0();
            if (v33 > 0x5D)
            {
              if (v34)
              {
                sub_1001EE134( (uint64_t)"Buffers can not accomedate unknownOptsLen %d, optionLen %d",  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v33);
                uint64_t v116 = (os_log_s *)sub_100086554(0x2Fu);
                if (os_log_type_enabled(v116, OS_LOG_TYPE_ERROR)) {
                  sub_100657F74();
                }
              }

              uint64_t v12 = 428LL;
              goto LABEL_136;
            }

            if (v34)
            {
              sub_1001EE134( (uint64_t)"Received config request with unknown option (%d), optionLen %d, unknownOptsLen %d",  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v24);
              uint64_t v42 = (os_log_s *)sub_100086554(0x2Fu);
              if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
              {
                uint64_t v76 = sub_1001EDDCC();
                *(_DWORD *)int buf = 136446466;
                *(void *)&uint8_t buf[4] = v76;
                v134 = 1024;
                v135 = 463;
                _os_log_error_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
              }
            }

            if (*((_BYTE *)a1 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
              uint64_t v43 = 0;
            }

            else
            {
              uint64_t v43 = *((unsigned __int16 *)a1 + 5) - *((unsigned __int16 *)a1 + 6);
            }

            if (v43 >= __len) {
              *((_WORD *)a1 + 6) += __len;
            }
            else {
              *((_BYTE *)a1 + 15) = 1;
            }
            uint64_t v22 = v130;
          }

  if (v45) {
    sub_1000B1838(v45);
  }
  if ((_DWORD)v70)
  {
    if ((_DWORD)v70 != 412)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"ATT Send status %!", v75, v76, v77, v78, v79, v80, v81, v70);
        uint64_t v82 = (os_log_s *)sub_100086554(0x44u);
        if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }
    }
  }

  if (v58) {
    return (v58 + 4300);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_100101818(uint64_t result, int a2)
{
  if (result)
  {
    unsigned __int8 v2 = a2;
    uint64_t v3 = result;
    uint64_t result = sub_100101858(result, a2);
    if ((_DWORD)result) {
      return sub_10010CAA4(v3, v2);
    }
  }

  return result;
}

BOOL sub_100101858(uint64_t a1, int a2)
{
  if (!dword_1008F29B4) {
    return 0;
  }
  unint64_t v3 = 0LL;
  BOOL v4 = 1;
  for (unint64_t i = &qword_1008F2A00; ; i += 134)
  {
    uint64_t v6 = &qword_1008F29F0[134 * v3];
    unsigned int v9 = *((unsigned __int8 *)v6 + 10);
    uint64_t v8 = (char *)v6 + 10;
    char v7 = v9;
    uint64_t v10 = v9;
    uint64_t v11 = i;
    if (v9) {
      break;
    }
LABEL_6:
    BOOL v4 = ++v3 < dword_1008F29B4;
    if (v3 == dword_1008F29B4) {
      return 0;
    }
  }

  while (*v11 != a1)
  {
    v11 += 2;
    if (!--v10) {
      goto LABEL_6;
    }
  }

  uint64_t v12 = &qword_1008F29F0[134 * v3];
  uint64_t v14 = *v12;
  uint64_t v13 = v12 + 2;
  *uint64_t v8 = v7 - 1;
  *uint64_t v11 = 0LL;
  sub_100100878(a1, v14);
  if (*v8 && !*v13)
  {
    uint64_t v15 = &qword_1008F29F0[134 * v3];
    *uint64_t v13 = v15[4];
    *((_BYTE *)v13 + 8) = *((_BYTE *)v15 + 40);
    v15[4] = 0LL;
  }

  if (sub_1000A86F0())
  {
    unsigned int v16 = BYTE4(qword_1008F29F0[134 * v3 + 9]);
    if (v16 <= 2)
    {
      if (v16 == 1)
      {
        uint64_t v17 = "LE";
        goto LABEL_24;
      }

      if (v16 == 2)
      {
        uint64_t v17 = "BT";
        goto LABEL_24;
      }
    }

    else
    {
      switch(v16)
      {
        case 3u:
          uint64_t v17 = "WL";
          goto LABEL_24;
        case 0x10u:
          uint64_t v17 = "USB";
          goto LABEL_24;
        case 0x11u:
          uint64_t v17 = "AWDL";
          goto LABEL_24;
      }
    }

    uint64_t v17 = "??";
LABEL_24:
    sub_1000FFB28(qword_1008F29F0[134 * v3 + 6]);
    sub_1001EE134( (uint64_t)"Common transport disconnection: tech (current %s updating %s), state %s, pipeID %d, reason %!",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  (uint64_t)v17);
    uint64_t v25 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v36 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  BOOL v26 = &qword_1008F29F0[134 * v3];
  unsigned int v28 = *((unsigned __int16 *)v26 + 4);
  uint64_t v27 = (unsigned __int16 *)(v26 + 1);
  sub_100104E20(v28);
  if (*((_BYTE *)v27 + 68) == 2)
  {
    sub_100104E20(*v27);
    sub_100102768(v3, 1u);
    char v30 = a2 == 705 || a2 == 723;
    sub_100102978((unsigned __int16)v3, 2, v30);
    int v31 = *v27;
    uint64_t v32 = dword_1008F29B4;
    if (!dword_1008F29B4) {
      goto LABEL_39;
    }
    uint64_t v33 = &dword_1008F2A20;
    while (*((unsigned __int16 *)v33 - 20) != v31)
    {
      v33 += 268;
      if (!--v32) {
        goto LABEL_39;
      }
    }

    if (*v33 != 6)
    {
LABEL_39:
      sub_100102124(v31, 6u);
      sub_100102438((unsigned __int16 *)qword_1008F29F0[134 * v3]);
    }

    HIWORD(qword_1008F29F0[134 * v3 + 55]) = 0;
  }

  return v4;
}

uint64_t sub_100101BB8( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!byte_1008D73DC || !dword_1008F29B4) {
    return 101LL;
  }
  int v8 = 0;
  while (1)
  {
    if (a1 && qword_1008F29F0[134 * v8] == a1)
    {
      uint64_t v9 = v8;
      if (BYTE4(qword_1008F29F0[134 * v8 + 9]) != 2) {
        return 5008LL;
      }
      if (v8 < BYTE2(qword_1008F29F0[134 * v8 + 1])) {
        break;
      }
    }

uint64_t sub_100101D4C(unsigned __int16 *a1)
{
  unint64_t v53 = 99LL;
  uint64_t v57 = 0LL;
  memset(v56, 0, sizeof(v56));
  if (a1) {
    sub_10008CC54((uint64_t)a1, (uint64_t)v56, &v53);
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"stallL2CAPForHandle Number of LeOnlyPipe CID %d", v2, v3, v4, v5, v6, v7, v8, v53);
    uint64_t v9 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = sub_1001EDDCC();
      *(_DWORD *)int buf = 136446210;
      uint64_t v55 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (v53)
  {
    uint64_t v11 = 0LL;
    unsigned int v12 = 1;
    do
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"stallL2CAPForHandle LeOnlyPipe CID 0x%4x",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  *((unsigned __int16 *)v56 + v11));
        uint64_t v20 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v21 = sub_1001EDDCC();
          *(_DWORD *)int buf = 136446210;
          uint64_t v55 = v21;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      uint64_t v11 = v12;
      BOOL v22 = v53 > v12++;
    }

    while (v22);
  }

  if (dword_1008F29B4)
  {
    uint64_t v23 = 0LL;
    uint64_t v24 = &qword_1008F2A00;
    while ((unsigned __int16 *)qword_1008F29F0[134 * v23] != a1)
    {
      uint64_t v25 = BYTE2(qword_1008F29F0[134 * v23 + 1]);
      BOOL v26 = v24;
      if (BYTE2(qword_1008F29F0[134 * v23 + 1]))
      {
        while ((unsigned __int16 *)*v26 != a1)
        {
          v26 += 2;
          if (!--v25) {
            goto LABEL_20;
          }
        }

        uint64_t v27 = &qword_1008F29F0[134 * v23];
        uint64_t v28 = *((unsigned __int16 *)v27 + 4);
        if (*((_WORD *)v27 + 4)) {
          goto LABEL_23;
        }
      }

void sub_100102124(int a1, unsigned int a2)
{
  unint64_t v2 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    unint64_t v5 = 0LL;
    uint64_t v6 = (unsigned int *)&dword_1008F2A20;
    do
    {
      if (*((unsigned __int16 *)v6 - 20) == a1)
      {
        if (sub_1000A86F0())
        {
          sub_1000FFB28(*v6);
          sub_1000FFB28(a2);
          sub_1001EE134((uint64_t)"Peer %d state updated %s -> %s", v7, v8, v9, v10, v11, v12, v13, v5);
          uint64_t v14 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v15 = sub_1001EDDCC();
            *(_DWORD *)int buf = 136446210;
            uint64_t v17 = v15;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        *uint64_t v6 = a2;
        unint64_t v2 = dword_1008F29B4;
      }

      v6 += 268;
      ++v5;
    }

    while (v5 < v2);
  }

uint64_t sub_100102270(unsigned __int16 *a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Lmhandle 0x%4x drained", v2, v3, v4, v5, v6, v7, v8, *a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v12 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  sub_100135CD8(0, 0LL, 0LL);
  return sub_10008AFF0();
}

uint64_t sub_100102348(uint64_t result, unsigned int a2)
{
  __int16 v14 = result;
  uint64_t v2 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    for (unint64_t i = &dword_1008F2A24; *((unsigned __int16 *)i - 22) != (_DWORD)result; i += 268)
    {
      if (!--v2) {
        return result;
      }
    }

    v13[1] = &v14;
    v13[0] = (const void *)2;
    if (*i)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"An older timer is still active, canceling a previously started timer (%x).",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  *i);
        uint64_t v12 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      sub_1001EEB14(*i);
      *unint64_t i = 0;
    }

    return sub_1001EE6E8((uint64_t)sub_1001088F8, v13, (unsigned __int16)(a2 / 0x64), i);
  }

  return result;
}

uint64_t sub_100102438(unsigned __int16 *a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Unstalling lmhandle 0x%4x", v2, v3, v4, v5, v6, v7, v8, *a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v12 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  return sub_1001887B0((uint64_t)a1, 0LL, 0LL, 0);
}

uint64_t sub_100102510(unsigned __int16 *a1, int a2, uint64_t a3)
{
  uint64_t v6 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    uint64_t v7 = &word_1008F29F8;
    while (*((unsigned __int16 **)v7 - 1) != a1)
    {
      v7 += 536;
      if (!--v6) {
        goto LABEL_5;
      }
    }

    uint64_t v8 = (unsigned __int16)*v7;
  }

  else
  {
LABEL_5:
    uint64_t v8 = 0xFFFFLL;
  }

  __int16 v33 = 289;
  char v34 = a2;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Sending DOWNGRADE_CFM to 0x%x", v9, v10, v11, v12, v13, v14, v15, *a1);
    uint64_t v16 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v36 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  unsigned int v17 = sub_10008F3E4(0LL, a1, v8, &v33, 3LL, 0LL);
  if (v17 == 412) {
    uint64_t v18 = 0LL;
  }
  else {
    uint64_t v18 = v17;
  }
  if (!a2 && !(_DWORD)v18 && dword_1008F29B4)
  {
    uint64_t v19 = 0LL;
    for (unint64_t i = &byte_1008F2A3C; *(unsigned __int16 **)(i - 76) != a1; i += 1072)
    {
      if (dword_1008F29B4 == ++v19) {
        return v18;
      }
    }

    sub_100102124(*((unsigned __int16 *)i - 34), 6u);
    int v21 = *i;
    sub_100102768(v19, 1u);
    sub_100100878(a3, (uint64_t)a1);
    sub_100090F08((uint64_t)a1, 0);
    sub_100102438(a1);
    sub_100102978((unsigned __int16)v19, v21, 0);
    if (i[1] != 1)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Requesting transport upgrade since this downgrade was triggered by a upgrade to different alternate transport",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  v32);
        uint64_t v29 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v30 = sub_1001EDDCC();
          *(_DWORD *)int buf = 136446210;
          uint64_t v36 = v30;
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      sub_1000FEA3C(a1, i[1], *((_DWORD *)i + 9));
    }
  }

  return v18;
}

void sub_100102768(unsigned int a1, unsigned int a2)
{
  char v2 = a2;
  uint64_t v3 = &qword_1008F29F0[134 * a1];
  unsigned int v6 = *((unsigned __int8 *)v3 + 76);
  uint64_t v5 = (char *)v3 + 76;
  unsigned int v4 = v6;
  if (v6 >= a2)
  {
    uint64_t v7 = (_DWORD *)&qword_1008F29F0[134 * a1 + 15] + 1;
    if (v4 <= a2) {
      *uint64_t v7 = 0;
    }
    else {
      *uint64_t v7 = 2;
    }
  }

  else
  {
    HIDWORD(qword_1008F29F0[134 * a1 + 15]) = 1;
  }

  unsigned int v15 = *v5;
  if (v15 <= 2)
  {
    if (v15 == 1)
    {
      uint64_t v16 = "LE";
      goto LABEL_19;
    }

    if (v15 == 2)
    {
      uint64_t v16 = "BT";
      goto LABEL_19;
    }
  }

  else
  {
    switch(v15)
    {
      case 3u:
        uint64_t v16 = "WL";
        goto LABEL_19;
      case 0x10u:
        uint64_t v16 = "USB";
        goto LABEL_19;
      case 0x11u:
        uint64_t v16 = "AWDL";
        goto LABEL_19;
    }
  }

  uint64_t v16 = "??";
LABEL_19:
  sub_1001EE134((uint64_t)"Updating tech %s -> %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v16);
  unsigned int v17 = (os_log_s *)sub_100086554(0x56u);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 136446210;
    uint64_t v19 = sub_1001EDDCC();
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
  }

void sub_100102978(unsigned int a1, int a2, char a3)
{
  uint64_t v54 = 0LL;
  uint64_t v5 = &qword_1008F29F0[134 * a1];
  sub_1000B080C((uint64_t)&v54);
  int v6 = SWORD2(v54) + 1000 * v54;
  int v7 = *((__int16 *)v5 + 106) + 1000 * *((_DWORD *)v5 + 52);
  if (v6 == v7) {
    uint64_t v8 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v8 = 8 * HIDWORD(qword_1008F29F0[134 * a1 + 11]) / (v6 - v7);
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Done with upgraded connection, %d total bytes sent in %d seconds (%d kbps)",  v9,  v10,  v11,  v12,  v13,  v14,  v15,  HIDWORD(qword_1008F29F0[134 * a1 + 11]));
    uint64_t v16 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v17 = sub_1001EDDCC();
      *(_DWORD *)int buf = 136446210;
      *(void *)&uint8_t buf[4] = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v18 = &qword_1008F29F0[134 * a1];
  sub_1001043DC((uint64_t)v5, (*((_DWORD *)v18 + 20) != 1) | (2 * (*((_DWORD *)v18 + 21) != 1)), a2);
  int v20 = *((unsigned __int8 *)v18 + 10);
  uint64_t v19 = (unsigned __int8 *)v18 + 10;
  if (v20)
  {
    unint64_t v21 = 0LL;
    uint64_t v22 = &qword_1008F29F0[134 * a1 + 3];
    while (*(_BYTE *)v22 == 1 || !*(v22 - 1) || !sub_1000A86F0())
    {
LABEL_25:
      ++v21;
      v22 += 2;
      if (v21 >= *v19) {
        goto LABEL_26;
      }
    }

    unsigned int v30 = *(unsigned __int8 *)v22;
    if (v30 <= 2)
    {
      uint64_t v31 = "LE";
      if (v30 == 1) {
        goto LABEL_23;
      }
      if (v30 == 2)
      {
        uint64_t v31 = "BT";
        goto LABEL_23;
      }
    }

    else
    {
      switch(v30)
      {
        case 3u:
          uint64_t v31 = "WL";
          goto LABEL_23;
        case 0x10u:
          uint64_t v31 = "USB";
          goto LABEL_23;
        case 0x11u:
          uint64_t v31 = "AWDL";
          goto LABEL_23;
      }
    }

    uint64_t v31 = "??";
LABEL_23:
    sub_1001EE134( (uint64_t)"Af ter downgrade, tech %s still available\n",  v23,  v24,  v25,  v26,  v27,  v28,  v29,  (uint64_t)v31);
    uint64_t v32 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v33 = sub_1001EDDCC();
      *(_DWORD *)int buf = 136446210;
      *(void *)&uint8_t buf[4] = v33;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }

    goto LABEL_25;
  }

void sub_100102DB4(unsigned __int16 *a1)
{
  if (dword_1008F29B4)
  {
    uint64_t v2 = 0LL;
    for (unint64_t i = &dword_1008F2A20; *((unsigned __int16 **)i - 6) != a1; i += 268)
    {
      if (dword_1008F29B4 == ++v2) {
        return;
      }
    }

    if (*((_BYTE *)i - 38))
    {
      unint64_t v4 = 0LL;
      uint64_t v5 = 0LL;
      int v6 = i - 6;
      while (1)
      {
        if (sub_1000A86F0())
        {
          uint64_t v14 = *i == 6 ? " " : "not ";
          sub_1001EE134( (uint64_t)"New channel created while TS is %sIdle, state:%d index [%d, %d], transport [tech:%d, currentInUseTech:%d]",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  (uint64_t)v14);
          uint64_t v15 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v16 = sub_1001EDDCC();
            *(_DWORD *)int buf = 136446210;
            uint64_t v40 = v16;
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        unsigned int v17 = *(unsigned __int8 *)v6;
        unsigned int v18 = *((unsigned __int8 *)i + 28);
        if (v17 != v18)
        {
          if (sub_1000A86F0())
          {
            uint64_t v26 = *((void *)v6 - 1);
            if (v26) {
              uint64_t v26 = *(unsigned __int16 *)v26;
            }
            sub_1001EE134( (uint64_t)"Updating lmhandle 0x%x -> 0x%x during encryption pending state",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v26);
            uint64_t v27 = (os_log_s *)sub_100086554(0x56u);
            if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v28 = sub_1001EDDCC();
              *(_DWORD *)int buf = 136446210;
              uint64_t v40 = v28;
              _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
        }

        uint64_t v5 = *((void *)v6 - 1);
LABEL_22:
        ++v4;
        v6 += 4;
      }
    }

    uint64_t v5 = 0LL;
LABEL_27:
    if (v5 && (unsigned __int16 *)v5 != a1)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Faster tech available at the time of channel creation.  Moving channels\n",  v29,  v30,  v31,  v32,  v33,  v34,  v35,  v38);
        uint64_t v36 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v37 = sub_1001EDDCC();
          *(_DWORD *)int buf = 136446210;
          uint64_t v40 = v37;
          _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      sub_100100878((uint64_t)a1, v5);
    }
  }

uint64_t sub_100103084(uint64_t a1, int *a2)
{
  uint64_t v4 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    uint64_t v5 = qword_1008F29F0;
    while (*v5 != a1)
    {
      v5 += 134;
      if (!--v4) {
        goto LABEL_5;
      }
    }

    uint64_t result = sub_1001007C4((uint64_t)v5);
    if (result)
    {
      uint64_t v11 = result;
      int v12 = *(unsigned __int8 *)(result + 2);
      if (v12 == 8)
      {
        uint64_t result = 0LL;
        int v10 = 1460;
      }

      else
      {
        uint64_t result = 0LL;
        if (v12)
        {
          int v10 = 1015;
        }

        else if (*(_BYTE *)(v11 + 278))
        {
          int v10 = 2570;
        }

        else
        {
          int v10 = 2031;
        }
      }
    }

    else
    {
      unsigned int v13 = *(unsigned __int16 *)(a1 + 104);
      unsigned int v14 = *(_DWORD *)(a1 + 216) / v13;
      if (v14 <= 1) {
        unsigned int v14 = 1;
      }
      if (v14 >= 0xF) {
        unsigned int v14 = 15;
      }
      int v10 = v14 * v13 - 6;
    }

    goto LABEL_25;
  }

uint64_t sub_100103190(uint64_t a1, void *a2, int *a3)
{
  uint64_t result = sub_100103084(a1, a3);
  if (!(_DWORD)result)
  {
    BOOL v6 = sub_1000B17F4(*a3);
    *a2 = v6;
    if (v6) {
      return 0LL;
    }
    else {
      return 106LL;
    }
  }

  return result;
}

uint64_t sub_1001031D8(uint64_t result)
{
  byte_1008D73DC = result ^ 1;
  return result;
}

void sub_1001031E8(uint64_t a1, uint64_t a2, int a3)
{
  if ((_DWORD)a2)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"TS_LE_EncryptionCompleteCb completed with error %! with connectionHandle= %p ",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  a2);
      int v12 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  else if (a1)
  {
    if (a3)
    {
      uint64_t v13 = dword_1008F29B4;
      if (dword_1008F29B4)
      {
        for (unint64_t i = &word_1008F29F8; *((void *)i - 1) != a1; i += 536)
        {
          if (!--v13) {
            return;
          }
        }

        int v15 = (unsigned __int16)*i;
        if (v15 != 0xFFFF)
        {
          int v16 = sub_1001CBF3C((_DWORD *)(a1 + 48));
          int v17 = sub_1000A86F0();
          if (v16)
          {
            if (v17)
            {
              sub_1001EE134( (uint64_t)"Got encrypted but pairing is still in progress, waiting for pairing completion",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  v40);
              uint64_t v25 = (os_log_s *)sub_100086554(0x56u);
              if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)int buf = 136446210;
                uint64_t v42 = sub_1001EDDCC();
                _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
          }

          else
          {
            if (v17)
            {
              uint64_t v26 = dword_1008F29B4;
              if (dword_1008F29B4)
              {
                uint64_t v27 = (unsigned int *)&dword_1008F2A20;
                while (*((unsigned __int16 *)v27 - 20) != v15)
                {
                  v27 += 268;
                  if (!--v26) {
                    goto LABEL_22;
                  }
                }

                unsigned int v28 = *v27;
              }

              else
              {
LABEL_22:
                unsigned int v28 = 0;
              }

              uint64_t v29 = sub_1000FFB28(v28);
              sub_1001EE134( (uint64_t)"Encryption complete, pipe state is %s",  v30,  v31,  v32,  v33,  v34,  v35,  v36,  (uint64_t)v29);
              uint64_t v37 = (os_log_s *)sub_100086554(0x56u);
              if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)int buf = 136446210;
                uint64_t v42 = sub_1001EDDCC();
                _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }

            uint64_t v38 = dword_1008F29B4;
            if (dword_1008F29B4)
            {
              for (char j = &dword_1008F2A20; *((unsigned __int16 *)j - 20) != v15; j += 268)
              {
                if (!--v38) {
                  return;
                }
              }

              if (*j == 1)
              {
                sub_100102124(v15, 2u);
                if (sub_10008D8B4(a1)) {
                  sub_100103644((__int128 *)a1);
                }
              }
            }
          }
        }
      }
    }
  }

void sub_100103448(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"TS_LE_PairingCompleteCb completed with error %! with address=%: publicAddress=%: ",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  a3);
      int v12 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  uint64_t v13 = sub_10012D98C(a1);
  if (v13)
  {
    uint64_t v14 = dword_1008F29B4;
    if (dword_1008F29B4)
    {
      int v15 = (__int128 *)v13;
      for (unint64_t i = &word_1008F29F8; *((void *)i - 1) != v13; i += 536)
      {
        if (!--v14) {
          return;
        }
      }

      int v17 = (unsigned __int16)*i;
      if (v17 != 0xFFFF)
      {
        if (sub_1000A86F0())
        {
          uint64_t v18 = dword_1008F29B4;
          if (dword_1008F29B4)
          {
            uint64_t v19 = (unsigned int *)&dword_1008F2A20;
            while (*((unsigned __int16 *)v19 - 20) != v17)
            {
              v19 += 268;
              if (!--v18) {
                goto LABEL_17;
              }
            }

            unsigned int v20 = *v19;
          }

          else
          {
LABEL_17:
            unsigned int v20 = 0;
          }

          uint64_t v21 = sub_1000FFB28(v20);
          sub_1001EE134((uint64_t)"Got paired, pipe state is %s", v22, v23, v24, v25, v26, v27, v28, (uint64_t)v21);
          uint64_t v29 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int buf = 136446210;
            uint64_t v33 = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        uint64_t v30 = dword_1008F29B4;
        if (dword_1008F29B4)
        {
          for (char j = &dword_1008F2A20; *((unsigned __int16 *)j - 20) != v17; j += 268)
          {
            if (!--v30) {
              return;
            }
          }

          if (*j == 1)
          {
            sub_100102124(v17, 2u);
          }
        }
      }
    }
  }

void sub_100103644(__int128 *a1)
{
  uint64_t v2 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    uint64_t v3 = &word_1008F29F8;
    while (*((__int128 **)v3 - 1) != a1)
    {
      v3 += 536;
      if (!--v2) {
        goto LABEL_5;
      }
    }

    uint64_t v4 = (unsigned __int16)*v3;
  }

  else
  {
LABEL_5:
    uint64_t v4 = 0xFFFFLL;
  }

  if ((sub_10008D900((uint64_t)a1) & 1) != 0)
  {
    uint64_t v5 = dword_1008F29B4;
    if (dword_1008F29B4)
    {
      uint64_t v6 = &dword_1008F2A20;
      while (*((unsigned __int16 *)v6 - 20) != (_DWORD)v4)
      {
        v6 += 268;
        if (!--v5) {
          goto LABEL_22;
        }
      }

      if (*v6 == 2)
      {
        uint64_t v15 = 13LL * byte_1008F29B0;
        int v16 = (char *)sub_1000B17F4(v15 + 7);
        if (v16)
        {
          int v17 = v16;
          char *v16 = 1;
          v16[1] = v15 + 5;
          *(_DWORD *)(v16 + 2) = 2;
          sub_100103918(v16 + 6);
          sub_100102124(v4, 3u);
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Sending VERSION_IND to lmhandle 0x%4x for pipe 0x%4x",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  *(unsigned __int16 *)a1);
            uint64_t v25 = (os_log_s *)sub_100086554(0x56u);
            if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)int buf = 136446210;
              uint64_t v48 = sub_1001EDDCC();
              _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          sub_10008F3E4(0LL, a1, v4, v17, v15 + 7, 0);
          sub_1000B1838(v17);
          return;
        }

        sub_1001EE134( (uint64_t)"Failed to allocate %d bytes (%d transports)",  v38,  v39,  v40,  v41,  v42,  v43,  v44,  (v15 + 7));
        uint64_t v45 = (os_log_s *)sub_100086554(0x56u);
        if (!os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
          return;
        }
LABEL_30:
        sub_100657858();
        return;
      }
    }

uint64_t sub_100103918(_BYTE *a1)
{
  *a1 = byte_1008F29B0;
  if (!byte_1008F29B0) {
    return 1LL;
  }
  uint64_t v1 = 0LL;
  unint64_t v2 = 0LL;
  uint64_t v3 = 13LL;
  do
  {
    uint64_t v4 = &a1[v3];
    *(v4 - 12) = 12;
    *(v4 - 11) = *(_BYTE *)(qword_1008F29A8 + v1);
    *(v4 - sub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = *(_BYTE *)(qword_1008F29A8 + v1 + 1);
    *(v4 - 9) = *(_BYTE *)(qword_1008F29A8 + v1 + 2);
    *(v4 - 8) = *(_BYTE *)(qword_1008F29A8 + v1 + 12);
    *(_WORD *)(v4 - 7) = *(_DWORD *)(qword_1008F29A8 + v1 + 4);
    *(v4 - 5) = *(_WORD *)(qword_1008F29A8 + v1 + 6);
    *(v4 - 4) = *(_BYTE *)(qword_1008F29A8 + v1 + 7);
    *(v4 - 3) = *(_BYTE *)(qword_1008F29A8 + v1 + 8);
    *(v4 - 2) = *(_BYTE *)(qword_1008F29A8 + v1 + 9);
    *(v4 - 1) = *(_BYTE *)(qword_1008F29A8 + v1 + 10);
    *uint64_t v4 = *(_BYTE *)(qword_1008F29A8 + v1 + 11);
    ++v2;
    v1 += 64LL;
    v3 += 13LL;
  }

  while (v2 < byte_1008F29B0);
  return (v3 - 12);
}

void sub_100103A30(__int128 *a1, int a2)
{
  uint64_t v2 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    for (unint64_t i = &word_1008F29F8; *((__int128 **)i - 1) != a1; i += 536)
    {
      if (!--v2) {
        return;
      }
    }

    uint64_t v6 = (unsigned __int16)*i;
    if ((_DWORD)v6 != 0xFFFF)
    {
      if (sub_10008D900((uint64_t)a1))
      {
        if (byte_1008F29B0)
        {
          uint64_t v7 = 0LL;
          while (*(unsigned __int8 *)(qword_1008F29A8 + v7) != a2)
          {
            v7 += 64LL;
          }

          int v16 = sub_1000B17F4(0xAuLL);
          if (v16)
          {
            int v17 = v16;
            _WORD *v16 = 2053;
            *((_BYTE *)v16 + 2) = a2;
            *((_BYTE *)v16 + 3) = *(_BYTE *)(qword_1008F29A8 + v7 + 2);
            void v16[2] = *(_DWORD *)(qword_1008F29A8 + v7 + 4);
            *((_BYTE *)v16 + 6) = *(_WORD *)(qword_1008F29A8 + v7 + 6);
            *((_BYTE *)v16 + 7) = *(_BYTE *)(qword_1008F29A8 + v7 + 7);
            uint64_t v18 = qword_1008F29A8 + v7;
            *((_BYTE *)v16 + 8) = *(_BYTE *)(qword_1008F29A8 + v7 + 8);
            *((_BYTE *)v16 + 9) = *(_BYTE *)(v18 + 9);
            sub_10008F3E4(0LL, a1, v6, (char *)v16, 0xAuLL, 0);
            sub_1000B1838(v17);
          }
        }
      }

      else if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Link is not encrypted, can't send cpas changed", v8, v9, v10, v11, v12, v13, v14, v19);
        uint64_t v15 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

uint64_t sub_100103BE0(uint64_t a1)
{
  if (sub_10012D514(a1))
  {
    sub_1001EE134((uint64_t)"Already connected to classic", v2, v3, v4, v5, v6, v7, v8, v46);
    uint64_t v9 = (os_log_s *)sub_100086554(0x56u);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      return 1LL;
    }
    goto LABEL_12;
  }

  if (!sub_10012D5EC(a1))
  {
    sub_1001EE134((uint64_t)"Invalid LE handle", v11, v12, v13, v14, v15, v16, v17, v46);
    uint64_t v18 = (os_log_s *)sub_100086554(0x56u);
    if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      return 1LL;
    }
LABEL_12:
    sub_100657858();
    return 1LL;
  }

  if (*(_BYTE *)(a1 + 48))
  {
    if (!*(_BYTE *)(a1 + 55) || *(_BYTE *)(a1 + 56)) {
      return 1LL;
    }
    uint64_t v10 = a1 + 57;
  }

  else
  {
    uint64_t v10 = a1 + 49;
  }

  int v48 = *(_DWORD *)v10;
  __int16 v49 = *(_WORD *)(v10 + 4);
  if (sub_10018BE60() > 0xE)
  {
    uint64_t v26 = 0LL;
  }

  else
  {
    uint64_t v26 = sub_10011EA40((uint64_t)sub_100104D20, a1, v20, v21, v22, v23, v24, v25);
    if ((_DWORD)v26)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Read RSSI failed with status %!", v27, v28, v29, v30, v31, v32, v33, v26);
        uint64_t v34 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }
    }
  }

  sub_100101D4C((unsigned __int16 *)a1);
  uint64_t v35 = sub_10012D890((uint64_t)&v48);
  BOOL v36 = sub_10008D8B4(a1);
  if (!v35)
  {
    if (!v36)
    {
LABEL_29:
      if (!(_DWORD)v26) {
        return 0LL;
      }
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Failed to start upgrade %!.", v38, v39, v40, v41, v42, v43, v44, v26);
        uint64_t v45 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_100102438((unsigned __int16 *)a1);
      return 4LL;
    }

uint64_t sub_100103E38(__int128 *a1, char a2)
{
  uint64_t v3 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    uint64_t v4 = &word_1008F29F8;
    while (*((__int128 **)v4 - 1) != a1)
    {
      v4 += 536;
      if (!--v3) {
        goto LABEL_5;
      }
    }

    uint64_t v5 = (unsigned __int16)*v4;
  }

  else
  {
LABEL_5:
    uint64_t v5 = 0xFFFFLL;
  }

  __int16 v16 = 275;
  char v17 = a2;
  if (a1) {
    uint64_t v6 = *(unsigned __int16 *)a1;
  }
  else {
    uint64_t v6 = 0LL;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Sending UPGRADE_COMPLETE to lmhandle 0x%4x p:%0x%4X with %s",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v6);
    uint64_t v14 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v19 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t result = sub_10008F3E4(0LL, a1, v5, (char *)&v16, 3uLL, 0);
  if ((_DWORD)result == 412 || !(_DWORD)result) {
    return sub_100102348(v5, 0x3A98u);
  }
  return result;
}

void sub_100103FB4(unsigned __int16 *a1, int a2)
{
  unsigned int v2 = dword_1008F29B4;
  if (!dword_1008F29B4)
  {
    LODWORD(v7) = 0xFFFF;
LABEL_19:
    if (sub_1000A86F0())
    {
      uint64_t v14 = dword_1008F29B4;
      if (dword_1008F29B4)
      {
        uint64_t v15 = (unsigned int *)&dword_1008F2A20;
        while (*((unsigned __int16 *)v15 - 20) != (_DWORD)v7)
        {
          v15 += 268;
          if (!--v14) {
            goto LABEL_24;
          }
        }

        unsigned int v16 = *v15;
      }

      else
      {
LABEL_24:
        unsigned int v16 = 0;
      }

      char v17 = sub_1000FFB28(v16);
      sub_1001EE134( (uint64_t)"Not sending UPGRADE_COMPLETE_CFM, since the state is %s",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  (uint64_t)v17);
      uint64_t v25 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        *(void *)&uint8_t buf[4] = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    return;
  }

  uint64_t v5 = &word_1008F29F8;
  uint64_t v6 = dword_1008F29B4;
  while (*((unsigned __int16 **)v5 - 1) != a1)
  {
    v5 += 536;
    if (!--v6)
    {
      uint64_t v7 = 0xFFFFLL;
      goto LABEL_8;
    }
  }

  uint64_t v7 = (unsigned __int16)*v5;
LABEL_8:
  __int16 v37 = 276;
  char v38 = a2;
  uint64_t v8 = &dword_1008F2A20;
  uint64_t v9 = dword_1008F29B4;
  while (*((unsigned __int16 *)v8 - 20) != (_DWORD)v7)
  {
    v8 += 268;
    if (!--v9) {
      goto LABEL_19;
    }
  }

  if (*v8 != 10) {
    goto LABEL_19;
  }
  unint64_t v10 = 0LL;
  unsigned int v11 = 0;
  uint64_t v12 = 1072LL * v2;
  while ((unsigned __int16 *)qword_1008F29F0[v10 / 8] != a1)
  {
    ++v11;
    v10 += 1072LL;
    if (v12 == v10)
    {
      uint64_t v13 = 0LL;
      goto LABEL_34;
    }
  }

  uint64_t v26 = &qword_1008F29F0[v10 / 8];
  uint64_t v7 = LOWORD(qword_1008F29F0[v10 / 8 + 1]);
  sub_100102124(LOWORD(qword_1008F29F0[v10 / 8 + 1]), 6u);
  sub_100102768(v11, *((unsigned __int8 *)v26 + 77));
  *((_BYTE *)v26 + 77) = 1;
  sub_100090F08((uint64_t)a1, 1);
  sub_100102438(a1);
  ++*((_DWORD *)v26 + 50);
  ++*((_WORD *)v26 + 526);
  sub_1000B0400((uint64_t)(v26 + 16));
  uint64_t v13 = sub_1001007C4((uint64_t)v26);
  if (!sub_10012D514(v13) && !sub_10012D5BC(v13) && !sub_10012D5EC(v13) && !sub_10012D61C(v13))
  {
LABEL_34:
    uint64_t v27 = 1LL;
    if (a1)
    {
LABEL_35:
      uint64_t v28 = *a1;
      goto LABEL_41;
    }

    goto LABEL_40;
  }

  if (a2)
  {
    sub_10010CAA4(v13, 0x13u);
    goto LABEL_34;
  }

  sub_100100878((uint64_t)a1, v13);
  sub_100102438((unsigned __int16 *)v13);
  if (*(_BYTE *)(v13 + 2)) {
    uint64_t v27 = 17LL;
  }
  else {
    uint64_t v27 = 2LL;
  }
  if (a1) {
    goto LABEL_35;
  }
LABEL_40:
  uint64_t v28 = 0LL;
LABEL_41:
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Sending UPGRADE_COMPLETE_CFM to lmhandle 0x%4x p:%0x%4X with %s",  v29,  v30,  v31,  v32,  v33,  v34,  v35,  v28);
    BOOL v36 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  sub_10008F3E4(0LL, (__int128 *)a1, v7, (char *)&v37, 3uLL, 0);
  if (!a2 && (void)xmmword_1008F29B8)
  {
    if (sub_10012D514(v13))
    {
      if (!v13) {
        sub_1001EE2A0();
      }
      ((void (*)(unsigned __int16 *, uint64_t, uint64_t, void))xmmword_1008F29B8)( a1,  v27,  v13 + 48,  *(unsigned __int8 *)(v13 + 278));
    }

    else
    {
      ((void (*)(unsigned __int16 *, uint64_t, void, void))xmmword_1008F29B8)(a1, v27, 0LL, 0LL);
    }
  }

  __int128 v40 = 0u;
  __int128 v41 = 0u;
  LOBYTE(v40) = 1;
  WORD1(v40) = 4;
  DWORD2(v40) = 9;
  LOBYTE(v41) = 1;
  WORD1(v41) = 4;
  DWORD2(v41) = a2;
  memcpy(buf, "state", sizeof(buf));
  sub_1000B142C("Magnet Operation", (const char *)buf, &v40, 2);
}

void sub_1001043DC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v48 = 0LL;
  sub_1000B080C((uint64_t)&v48);
  int v6 = *(__int16 *)(a1 + 156) + 1000 * *(_DWORD *)(a1 + 152);
  if (v6)
  {
    int v7 = 1000 * v48;
    int v8 = SWORD2(v48);
    unsigned int v9 = 1000 * v48 - v6 + SWORD2(v48);
    *(_DWORD *)(a1 + 152) = 0;
    *(_WORD *)(a1 + 156) = 0;
    unsigned int v10 = v9 / 0x3E8;
    unsigned int v11 = v9 % 0x3E8;
  }

  else
  {
    unsigned int v10 = 0;
    LOWORD(v11) = 0;
    int v8 = SWORD2(v48);
    int v7 = 1000 * v48;
  }

  int v12 = v7 + v8;
  int v13 = *(__int16 *)(a1 + 212) + 1000 * *(_DWORD *)(a1 + 208);
  unsigned int v14 = v12 - v13;
  if (v12 == v13) {
    signed int v15 = -1;
  }
  else {
    signed int v15 = 8 * *(_DWORD *)(a1 + 92) / v14;
  }
  unsigned int v16 = *(unsigned __int8 *)(a1 + 77);
  int v17 = sub_1000A86F0();
  if (v16 <= a3)
  {
    if (!v17) {
      goto LABEL_47;
    }
    if (a3 <= 2)
    {
      if (a3 == 1)
      {
        uint64_t v26 = "LE";
        goto LABEL_45;
      }

      if (a3 == 2)
      {
        uint64_t v26 = "BT";
        goto LABEL_45;
      }
    }

    else
    {
      switch(a3)
      {
        case 3:
          uint64_t v26 = "WL";
          goto LABEL_45;
        case 16:
          uint64_t v26 = "USB";
          goto LABEL_45;
        case 17:
          uint64_t v26 = "AWDL";
          goto LABEL_45;
      }
    }

    uint64_t v26 = "??";
LABEL_45:
    sub_1001EE134( (uint64_t)"Transport downgrade (%s -> %s): duration %d ms, Tx[ %d kbps, %d B]",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  (uint64_t)v26);
    __int16 v37 = (os_log_s *)sub_100086554(0x56u);
    if (!os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }

  if (!v17) {
    goto LABEL_36;
  }
  if (a3 <= 2)
  {
    if (a3 == 1)
    {
      uint64_t v25 = "LE";
      goto LABEL_34;
    }

    if (a3 == 2)
    {
      uint64_t v25 = "BT";
      goto LABEL_34;
    }
  }

  else
  {
    switch(a3)
    {
      case 3:
        uint64_t v25 = "WL";
        goto LABEL_34;
      case 16:
        uint64_t v25 = "USB";
        goto LABEL_34;
      case 17:
        uint64_t v25 = "AWDL";
        goto LABEL_34;
    }
  }

  uint64_t v25 = "??";
LABEL_34:
  sub_1001EE134( (uint64_t)"Transport upgrade (%s -> %s): duration %d ms, Tx[ %d kbps, %d B] upgrade time %d ms, retries %d",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  (uint64_t)v25);
  uint64_t v27 = (os_log_s *)sub_100086554(0x56u);
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v28 = sub_1001EDDCC();
    *(_DWORD *)int buf = 136446210;
    uint64_t v50 = v28;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
  }

void sub_100104940(uint64_t a1, __int16 a2)
{
  if (!dword_1008F29B4) {
    goto LABEL_30;
  }
  uint64_t v3 = 0LL;
  uint64_t v4 = &word_1008F29F8;
  while (*v4 != a2)
  {
    ++v3;
    v4 += 536;
    if (dword_1008F29B4 == v3) {
      goto LABEL_30;
    }
  }

  uint64_t v5 = (__int128 *)*((void *)v4 - 1);
  if (!v5)
  {
LABEL_30:
    sub_1001EE134((uint64_t)"No more connection handle for this pipeID", v27, v28, v29, v30, v31, v32, v33, v59);
    uint64_t v34 = (os_log_s *)sub_100086554(0x56u);
    if (!os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_32;
  }

  int v6 = &qword_1008F29F0[134 * (unsigned __int16)v3];
  int v8 = *((_DWORD *)v6 + 12);
  int v7 = v6 + 6;
  if (v8 != 9)
  {
    sub_1001EE2A0();
    if (*v7 != 9)
    {
      sub_1001EE134( (uint64_t)"Got an encryption complete although we were not pending an encryption",  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v59);
      uint64_t v42 = (os_log_s *)sub_100086554(0x56u);
      if (!os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
        return;
      }
LABEL_32:
      sub_100657858();
      return;
    }
  }

  unsigned int v9 = &qword_1008F29F0[134 * (unsigned __int16)v3];
  int v11 = *((unsigned __int8 *)v9 + 10);
  unsigned int v10 = (char *)v9 + 10;
  if (v11 || (sub_1001EE2A0(), *v10))
  {
    unint64_t v12 = 0LL;
    char v13 = 0;
    uint64_t v14 = 0LL;
    signed int v15 = &qword_1008F29F0[134 * (unsigned __int16)v3 + 2];
    do
    {
      uint64_t v16 = *v15;
      int v17 = *(unsigned __int8 *)(*v15 + 2);
      if ((*(_BYTE *)(*v15 + 2) != 0) == (*((_BYTE *)v15 + 8) == 2))
      {
        sub_1001EE2A0();
        uint64_t v16 = *v15;
        int v17 = *(unsigned __int8 *)(*v15 + 2);
      }

      BOOL v18 = v17 == 0;
      if (sub_10012D514(v16)) {
        uint64_t v14 = *v15;
      }
      v13 |= v18;
      ++v12;
      v15 += 2;
    }

    while (v12 < *v10);
    if (v14)
    {
      if ((v13 & 1) != 0)
      {
        if ((_DWORD)a1)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Error from security callback %!", v19, v20, v21, v22, v23, v24, v25, a1);
            uint64_t v26 = (os_log_s *)sub_100086554(0x56u);
            if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)int buf = 136446210;
              int v61 = sub_1001EDDCC();
              _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }

          if (off_1008F29E0) {
            off_1008F29E0(v5, 81LL, 2020LL, a1);
          }
        }

        if ((sub_1001E64D0(v14) & 1) != 0)
        {
          if (sub_10008D8B4((uint64_t)v5))
          {
            sub_100100878((uint64_t)v5, v14);
            sub_100103E38(v5, 0);
          }

          else
          {
            sub_100103FB4((unsigned __int16 *)v5, 0);
          }
        }

        else
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Failed to encrypt : %!", v51, v52, v53, v54, v55, v56, v57, a1);
            BOOL v58 = (os_log_s *)sub_100086554(0x56u);
            if (os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          sub_100102124((unsigned __int16)v3, 8u);
          if (sub_10008D8B4((uint64_t)v5))
          {
            sub_10010CAA4(v14, 5u);
            sub_100103E38(v5, 6);
            sub_10008BA7C((uint64_t)v5);
          }
        }

        return;
      }
    }

    else
    {
      sub_1001EE2A0();
      if ((v13 & 1) != 0) {
        goto LABEL_41;
      }
    }
  }

  else
  {
    sub_1001EE2A0();
  }

  sub_1001EE2A0();
LABEL_41:
  if (off_1008F29E0) {
    off_1008F29E0(v5, 81LL, 2012LL, a1);
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"No classic connection for this handle...", v43, v44, v45, v46, v47, v48, v49, v59);
    uint64_t v50 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_100104D20(uint64_t a1, uint64_t a2, int a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Read RSSI CB failed with status %!", v4, v5, v6, v7, v8, v9, v10, a1);
      int v11 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  else
  {
    uint64_t v12 = dword_1008F29B4;
    if (dword_1008F29B4)
    {
      for (unint64_t i = qword_1008F29F0; *i != a2; i += 134)
      {
        if (!--v12) {
          return;
        }
      }

      *((_DWORD *)i + 47) = a3;
    }
  }

uint64_t sub_100104DC0(uint64_t a1)
{
  uint64_t v1 = *(int **)(a1 + 8);
  __int16 v2 = *((_WORD *)v1 + 2);
  int v5 = *v1;
  __int16 v6 = v2;
  uint64_t v3 = sub_10012D890((uint64_t)&v5);
  if (v3) {
    sub_100100DA8(0LL, &v5, v3);
  }
  return sub_10010CAA4(v3, 0x13u);
}

uint64_t sub_100104E20(uint64_t result)
{
  uint64_t v1 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    for (unint64_t i = &dword_1008F2A24; *((unsigned __int16 *)i - 22) != (_DWORD)result; i += 268)
    {
      if (!--v1) {
        return result;
      }
    }

    uint64_t result = sub_1001EEB14(*i);
    *unint64_t i = 0;
  }

  return result;
}

void sub_100104E74(unsigned __int16 *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v156 = 0;
  uint64_t v3 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    uint64_t v7 = &word_1008F29F8;
    while (*((unsigned __int16 **)v7 - 1) != a1)
    {
      v7 += 536;
      if (!--v3) {
        goto LABEL_12;
      }
    }

    if (*v7 != -1)
    {
      if (sub_10008D8B4((uint64_t)a1))
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"VERSION_IND not supposed to get a version from the peripheral.",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v154);
          signed int v15 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int buf = 136446210;
            *(void *)&uint8_t buf[4] = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        uint64_t v16 = (__int128 *)a1;
        char v17 = 2;
LABEL_53:
        sub_1001081C8(v16, 1, v17);
        return;
      }

      uint64_t v26 = dword_1008F29B4;
      if (!dword_1008F29B4) {
        goto LABEL_26;
      }
      uint64_t v27 = &word_1008F29F8;
      uint64_t v28 = dword_1008F29B4;
      while (*((unsigned __int16 **)v27 - 1) != a1)
      {
        v27 += 536;
        if (!--v28)
        {
          int v29 = 0xFFFF;
          goto LABEL_21;
        }
      }

      int v29 = (unsigned __int16)*v27;
LABEL_21:
      uint64_t v30 = &dword_1008F2A20;
      while (*((unsigned __int16 *)v30 - 20) != v29)
      {
        v30 += 268;
        if (!--v26) {
          goto LABEL_26;
        }
      }

      if (*v30 != 2)
      {
LABEL_26:
        if (sub_1000A86F0())
        {
          uint64_t v31 = dword_1008F29B4;
          if (dword_1008F29B4)
          {
            uint64_t v32 = &word_1008F29F8;
            uint64_t v33 = dword_1008F29B4;
            while (*((unsigned __int16 **)v32 - 1) != a1)
            {
              v32 += 536;
              if (!--v33)
              {
                int v34 = 0xFFFF;
                goto LABEL_33;
              }
            }

            int v34 = (unsigned __int16)*v32;
LABEL_33:
            uint64_t v35 = (unsigned int *)&dword_1008F2A20;
            while (*((unsigned __int16 *)v35 - 20) != v34)
            {
              v35 += 268;
              if (!--v31) {
                goto LABEL_36;
              }
            }

            unsigned int v36 = *v35;
          }

          else
          {
LABEL_36:
            unsigned int v36 = 0;
          }

          uint64_t v37 = sub_1000FFB28(v36);
          sub_1001EE134( (uint64_t)"VERSION_IND as peripheral but the current state is %s",  v38,  v39,  v40,  v41,  v42,  v43,  v44,  (uint64_t)v37);
          uint64_t v45 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }

      uint64_t v46 = (a3 - 4);
      if (a3 < 4)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"VERSION_IND bad length for version PDU : %d", v67, v68, v69, v70, v71, v72, v73, a3);
          uint64_t v74 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v74, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        uint64_t v16 = (__int128 *)a1;
        char v17 = 1;
        goto LABEL_53;
      }

      uint64_t v47 = *a2;
      int v48 = v47 | (a2[1] << 8) | (a2[2] << 16) | (a2[3] << 24);
      if ((sub_1000A86F0() & 1) != 0)
      {
        sub_1001EE134( (uint64_t)"Received VERSION_IND for lmhandle 0x%4x version %d",  v49,  v50,  v51,  v52,  v53,  v54,  v55,  *a1);
        uint64_t v56 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 136446210;
          *(void *)&uint8_t buf[4] = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      uint64_t v157 = 0LL;
      uint64_t v57 = sub_100108244(a2 + 4, v46, &v157, &v156);
      if ((_DWORD)v57)
      {
        uint64_t v58 = v57;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Parsing error with status %!", v59, v60, v61, v62, v63, v64, v65, v58);
          unsigned int v66 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        uint64_t v16 = (__int128 *)a1;
        char v17 = v58;
        goto LABEL_53;
      }

      uint64_t v75 = dword_1008F29B4;
      if (dword_1008F29B4)
      {
        uint64_t v76 = &dword_1008F2A38;
        while (*((unsigned __int16 **)v76 - 9) != a1)
        {
          v76 += 268;
          if (!--v75) {
            goto LABEL_63;
          }
        }

        uint64_t v77 = (void *)*((void *)v76 - 1);
        if (v77) {
          sub_1000B1838(v77);
        }
        *((void *)v76 - 1) = v157;
        *uint64_t v76 = v156;
        *(v76 - 4) = v48;
      }

LABEL_100:
      __int128 v159 = 0u;
      __int128 v160 = 0u;
      LOBYTE(v159) = 1;
      WORD1(v159) = 4;
      DWORD2(v159) = 2;
      LOBYTE(v160) = 1;
      WORD1(v160) = 4;
      DWORD2(v160) = v155;
      memcpy(buf, "state", sizeof(buf));
      sub_1000B142C("Magnet Operation", (const char *)buf, &v159, 2);
      return;
    }
  }

          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Daemon/Server/XpcClassicConnection.mm",  v8,  v7);
        }

        uint64_t v7 = "(serviceRecordData.length) > 0";
      }

      else
      {
        uint64_t v7 = "(uint8_t*)serviceRecordData.bytes";
      }

      uint64_t v8 = 1528;
      goto LABEL_100;
    }

    if (os_log_type_enabled((os_log_t)qword_1008F75F0, OS_LOG_TYPE_ERROR)) {
      sub_10065F188();
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1008F75F0, OS_LOG_TYPE_ERROR))
  {
    sub_10065F15C();
  }

  uint64_t v74 = (uint64_t *)sub_1001FDB10(a1 + 1408, uu);
  if ((uint64_t *)(a1 + 1416) != v74)
  {
    uint64_t v75 = *(uint64_t **)(a1 + 1384);
    if (v75 != (uint64_t *)(a1 + 1392))
    {
      while (v75[5] != v74[6])
      {
        uint64_t v76 = (uint64_t *)v75[1];
        if (v76)
        {
          do
          {
            uint64_t v77 = v76;
            uint64_t v76 = (uint64_t *)*v76;
          }

          while (v76);
        }

        else
        {
          do
          {
            uint64_t v77 = (uint64_t *)v75[2];
            int v29 = *v77 == (void)v75;
            uint64_t v75 = v77;
          }

          while (!v29);
        }

        uint64_t v75 = v77;
      }

      sub_1001FDBCC((uint64_t **)(a1 + 1384), v75);
      operator delete(v75);
      sub_1001FDBCC((uint64_t **)(a1 + 1408), v74);
      operator delete(v74);
      uint64_t v78 = (os_log_s *)qword_1008F7620;
      if (os_log_type_enabled((os_log_t)qword_1008F7620, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v78,  OS_LOG_TYPE_DEFAULT,  "Channel Sounding agent removed for session",  buf,  2u);
      }
    }
  }

void sub_1001057CC(unsigned __int16 *a1, unsigned __int8 *a2, unsigned int a3)
{
  int v89 = 0;
  uint64_t v3 = dword_1008F29B4;
  if (!dword_1008F29B4) {
    goto LABEL_13;
  }
  uint64_t v7 = &word_1008F29F8;
  while (*((unsigned __int16 **)v7 - 1) != a1)
  {
    v7 += 536;
    if (!--v3) {
      goto LABEL_13;
    }
  }

  if (*v7 == -1)
  {
LABEL_13:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"CAPS_IND not tracking this device.", v12, v13, v14, v15, v16, v17, v18, v88);
      uint64_t v19 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    if (!sub_10008D8B4((uint64_t)a1))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"CAPS_IND not supposed to get a caps from the central.",  v20,  v21,  v22,  v23,  v24,  v25,  v26,  v88);
        uint64_t v27 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 136446210;
          *(void *)&uint8_t buf[4] = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      uint64_t v28 = (__int128 *)a1;
      char v29 = 2;
      goto LABEL_59;
    }

    uint64_t v8 = dword_1008F29B4;
    if (!dword_1008F29B4) {
      goto LABEL_26;
    }
    uint64_t v9 = &word_1008F29F8;
    uint64_t v10 = dword_1008F29B4;
    while (*((unsigned __int16 **)v9 - 1) != a1)
    {
      v9 += 536;
      if (!--v10)
      {
        int v11 = 0xFFFF;
        goto LABEL_21;
      }
    }

    int v11 = (unsigned __int16)*v9;
LABEL_21:
    uint64_t v30 = &dword_1008F2A20;
    while (*((unsigned __int16 *)v30 - 20) != v11)
    {
      v30 += 268;
      if (!--v8) {
        goto LABEL_26;
      }
    }

    if (*v30 != 3)
    {
LABEL_26:
      if (sub_1000A86F0())
      {
        uint64_t v31 = dword_1008F29B4;
        if (dword_1008F29B4)
        {
          uint64_t v32 = &word_1008F29F8;
          uint64_t v33 = dword_1008F29B4;
          while (*((unsigned __int16 **)v32 - 1) != a1)
          {
            v32 += 536;
            if (!--v33)
            {
              int v34 = 0xFFFF;
              goto LABEL_33;
            }
          }

          int v34 = (unsigned __int16)*v32;
LABEL_33:
          uint64_t v35 = (unsigned int *)&dword_1008F2A20;
          while (*((unsigned __int16 *)v35 - 20) != v34)
          {
            v35 += 268;
            if (!--v31) {
              goto LABEL_36;
            }
          }

          unsigned int v36 = *v35;
        }

        else
        {
LABEL_36:
          unsigned int v36 = 0;
        }

        uint64_t v37 = sub_1000FFB28(v36);
        sub_1001EE134( (uint64_t)"CAPS_IND as central but the current state is %s",  v38,  v39,  v40,  v41,  v42,  v43,  v44,  (uint64_t)v37);
        uint64_t v45 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    uint64_t v46 = a3 - 4;
    if (a3 <= 4)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Wrong size for caps.", v47, v48, v49, v50, v51, v52, v53, v88);
        uint64_t v54 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      uint64_t v28 = (__int128 *)a1;
      char v29 = 3;
LABEL_59:
      sub_1001081C8(v28, 2, v29);
      return;
    }

    uint64_t v55 = dword_1008F29B4;
    if (dword_1008F29B4)
    {
      uint64_t v56 = &word_1008F29F8;
      while (*((unsigned __int16 **)v56 - 1) != a1)
      {
        v56 += 536;
        if (!--v55) {
          goto LABEL_49;
        }
      }

      int v57 = (unsigned __int16)*v56;
    }

    else
    {
LABEL_49:
      int v57 = 0xFFFF;
    }

    sub_100102124(v57, 4u);
    uint64_t v58 = *a2;
    int v59 = v58 | (a2[1] << 8) | (a2[2] << 16) | (a2[3] << 24);
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received CAPS_IND for lmhandle 0x%4x with version %d",  v60,  v61,  v62,  v63,  v64,  v65,  v66,  *a1);
      uint64_t v67 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        *(void *)&uint8_t buf[4] = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    uint64_t v90 = 0LL;
    uint64_t v68 = sub_100108244(a2 + 4, v46, &v90, &v89);
    if ((_DWORD)v68)
    {
      uint64_t v69 = v68;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"CAPS_IND parser error %!", v70, v71, v72, v73, v74, v75, v76, v69);
        uint64_t v77 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v77, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      uint64_t v28 = (__int128 *)a1;
      char v29 = v69;
      goto LABEL_59;
    }

    if (dword_1008F29B4)
    {
      unsigned __int16 v78 = 0;
      while (1)
      {
        unsigned int v79 = v78;
        ++v78;
      }

      uint64_t v80 = &qword_1008F29F0[134 * v78];
      uint64_t v83 = (void *)v80[8];
      uint64_t v82 = v80 + 8;
      uint64_t v81 = v83;
      if (v83) {
        sub_1000B1838(v81);
      }
      *uint64_t v82 = v90;
      uint64_t v84 = &qword_1008F29F0[134 * v79];
      *((_DWORD *)v84 + 18) = v89;
      *((_DWORD *)v84 + 14) = v59;
    }

LABEL_69:
    sub_10008B740((uint64_t)a1);
    sub_10008B8DC((uint64_t)a1);
    uint64_t v85 = dword_1008F29B4;
    if (dword_1008F29B4)
    {
      uint64_t v86 = &word_1008F29F8;
      while (*((unsigned __int16 **)v86 - 1) != a1)
      {
        v86 += 536;
        if (!--v85) {
          goto LABEL_73;
        }
      }

      int v87 = (unsigned __int16)*v86;
    }

    else
    {
LABEL_73:
      int v87 = 0xFFFF;
    }

    sub_100102124(v87, 6u);
    if (xmmword_1008F29C8) {
      xmmword_1008F29C8(a1, v58, *((unsigned __int8 *)a1 + 26), *((_DWORD *)a1 + 37) == 2);
    }
    __int128 v92 = 0u;
    __int128 v93 = 0u;
    LOBYTE(v92) = 1;
    WORD1(v92) = 4;
    DWORD2(v92) = 3;
    LOBYTE(v93) = 1;
    WORD1(v93) = 4;
    DWORD2(v93) = v59;
    memcpy(buf, "state", sizeof(buf));
    sub_1000B142C("Magnet Operation", (const char *)buf, &v92, 2);
  }

        v327 = 0;
        v328 = 0;
        v356 = 0LL;
        v354 = 0u;
        v355 = 0u;
        *(_OWORD *)v352 = 0u;
        v353 = 0u;
        v326 = 0LL;
        unsigned int v91 = sub_100132A04((uint64_t)v352, (uint64_t)v21, (uint64_t *)&v324, v15, (_WORD *)&v328 + 1, (uint64_t)&v327);
        if (v91)
        {
          __int128 v92 = v91;
          sub_1001332DC(v21);
          *(_DWORD *)v352 = v92;
        }

        else
        {
          unsigned int v136 = HIWORD(v328);
          v137 = sub_100133370(v21, HIWORD(v328), (uint64_t)&v327, 1);
          if (v137)
          {
            if ((_DWORD)v62 == 3) {
              uint64_t v138 = 44LL;
            }
            else {
              uint64_t v138 = 3LL;
            }
            uint64_t v21 = sub_10016F4A0(v138);
            v137 = sub_100133370(v21, v136, (uint64_t)&v327, 1);
          }

          if ((_DWORD)v62 == 3 && !v137)
          {
            if (*(_DWORD *)v352)
            {
            }

            else
            {
            }
          }
        }

        __int128 v93 = DWORD2(v353);
        uint64_t v94 = (__int16 *)sub_10012D890((uint64_t)&v327);
        int v95 = (uint64_t)v94;
        if (v93 > 0xEFu)
        {
          if (v93 - 240 > 1)
          {
LABEL_156:
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"OI_HCIFlow_ConnectionComplete, unknown link type %d",  v175,  v176,  v177,  v17,  v18,  v19,  v20,  v93);
              v178 = (os_log_s *)sub_100086554(0x2Eu);
              if (os_log_type_enabled(v178, OS_LOG_TYPE_ERROR)) {
                sub_100657858();
              }
            }

            goto LABEL_159;
          }
        }

        else
        {
          if (!(_BYTE)v93) {
            goto LABEL_75;
          }
          if (v93 != 1)
          {
            if (v93 == 2)
            {
LABEL_75:
              v326 = 0LL;
              if (sub_10012EEA0((uint64_t *)&v326))
              {
              }

        *(_OWORD *)(*a1 + v9) = *(_OWORD *)*((void *)v2 + 1);
        uint64_t v14 = *((_WORD *)a1 + 6) + 16;
        goto LABEL_74;
      }

      uint64_t v30 = "ByteStream_NumReadBytesAvail(*pByteStream) >= (sizeof(OI_UINT128))";
LABEL_108:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c", 1544, v30);
    case 2:
      uint64_t v13 = *((unsigned __int16 *)v2 + 1);
      if (v13 != 16)
      {
        if (v13 == 8)
        {
          if (*((_BYTE *)a1 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c");
          }

          else
          {
            int v11 = v9;
            if (*((unsigned __int16 *)a1 + 5) - (unint64_t)v9 > 7)
            {
              if (*((_BYTE *)a1 + 14) == 2)
              {
LABEL_21:
                *(void *)(*a1 + v11) = **((void **)v2 + 1);
                uint64_t v14 = *((_WORD *)a1 + 6) + 8;
LABEL_74:
                *((_WORD *)a1 + 6) = v14;
                return 1LL;
              }

              unsigned int v36 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_105:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c",  1552,  v36);
            }
          }

          unsigned int v36 = "ByteStream_NumReadBytesAvail(*pByteStream) >= (sizeof(OI_INT64))";
          goto LABEL_105;
        }

        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c");
        }

        else if (*((unsigned __int16 *)a1 + 5) - v9 > 3)
        {
          if (*((_BYTE *)a1 + 14) == 2) {
            goto LABEL_73;
          }
          uint64_t v38 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_119:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c",  1556,  v38);
        }

        uint64_t v38 = "ByteStream_NumReadBytesAvail(*pByteStream) >= 4";
        goto LABEL_119;
      }

      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c");
      }

      else if (*((unsigned __int16 *)a1 + 5) - (unint64_t)v9 > 0xF)
      {
        if (*((_BYTE *)a1 + 14) == 2) {
          goto LABEL_69;
        }
        uint64_t v37 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_115:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c",  1554,  v37);
      }

      uint64_t v37 = "ByteStream_NumReadBytesAvail(*pByteStream) >= (sizeof(OI_INT128))";
      goto LABEL_115;
    case 3:
      if (*((_WORD *)v2 + 1) == 16)
      {
        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c");
        }

        else if (*((unsigned __int16 *)a1 + 5) - (unint64_t)(unsigned __int16)(v8 + 2) > 0xF)
        {
          if (*((_BYTE *)a1 + 14) == 2) {
            goto LABEL_69;
          }
          uint64_t v15 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_95:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c",  1562,  v15);
        }

        uint64_t v15 = "ByteStream_NumReadBytesAvail(*pByteStream) >= (sizeof (OI_UUID128))";
        goto LABEL_95;
      }

      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c");
      }

      else if (*((unsigned __int16 *)a1 + 5) - v9 > 3)
      {
        if (*((_BYTE *)a1 + 14) == 2) {
          goto LABEL_73;
        }
        uint64_t v27 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_98:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c",  1564,  v27);
      }

      uint64_t v27 = "ByteStream_NumReadBytesAvail(*pByteStream) >= 4";
      goto LABEL_98;
    case 4:
      uint64_t v16 = *a1;
      uint64_t v17 = (const void *)*((void *)v2 + 1);
      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c");
        uint64_t v18 = 0;
      }

      else
      {
        uint64_t v18 = *((unsigned __int16 *)a1 + 5) - v9;
      }

      uint64_t v28 = *((unsigned __int16 *)v2 + 1);
      if (v18 < (int)v28)
      {
        char v29 = "ByteStream_NumReadBytesAvail(*pByteStream) >= (elem->Size)";
LABEL_89:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c",  1569,  v29);
      }

      if (*((_BYTE *)a1 + 14) != 2)
      {
        char v29 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_89;
      }

      goto LABEL_57;
    case 5:
      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c");
        goto LABEL_85;
      }

      if (*((unsigned __int16 *)a1 + 5) <= v9)
      {
LABEL_85:
        int v34 = "ByteStream_NumReadBytesAvail(*pByteStream) >= 1";
        goto LABEL_87;
      }

      if (*((_BYTE *)a1 + 14) != 2)
      {
        int v34 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_87:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c",  1573,  v34);
      }

      uint64_t v19 = v2[8];
      uint64_t v20 = *a1;
      *((_WORD *)a1 + 6) = v8 + 3;
      *(_BYTE *)(v20 + (unsigned __int16)(v8 + 2)) = v19;
      return 1LL;
    case 6:
      if (!*((_WORD *)v2 + 1)) {
        return 1LL;
      }
      uint64_t v21 = 0LL;
      uint64_t v22 = 0LL;
      while ((sub_1001E2BBC(a1, *((void *)v2 + 1) + v21) & 1) != 0)
      {
        ++v22;
        v21 += 16LL;
      }

      return 0LL;
    case 7:
      if (!*((_WORD *)v2 + 1)) {
        return 1LL;
      }
      uint64_t v23 = 0LL;
      uint64_t v24 = 0LL;
      while ((sub_1001E2BBC(a1, *((void *)v2 + 1) + v23) & 1) != 0)
      {
        ++v24;
        v23 += 16LL;
      }

      return 0LL;
    case 8:
      uint64_t v16 = *a1;
      uint64_t v17 = (const void *)*((void *)v2 + 1);
      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c");
        uint64_t v26 = 0;
      }

      else
      {
        uint64_t v26 = *((unsigned __int16 *)a1 + 5) - v9;
      }

      uint64_t v28 = *((unsigned __int16 *)v2 + 1);
      if (v26 < (int)v28)
      {
        uint64_t v35 = "ByteStream_NumReadBytesAvail(*pByteStream) >= (elem->Size)";
      }

      else
      {
        if (*((_BYTE *)a1 + 14) == 2)
        {
LABEL_57:
          memmove((void *)(v16 + v9), v17, v28);
          uint64_t v14 = *((_WORD *)a1 + 6) + *((_WORD *)v2 + 1);
          goto LABEL_74;
        }

        uint64_t v35 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
      }

      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/sdp/sdpdb.c", 1596, v35);
    default:
      return 0LL;
  }

      uint64_t v41 = (os_log_s *)qword_1008F75E0;
      uint64_t result = os_log_type_enabled((os_log_t)qword_1008F75E0, OS_LOG_TYPE_ERROR);
      if (!result) {
        return result;
      }
      sub_1006698E4(a1, v41);
      return 0LL;
    }

    if (sqlite3_column_count(a2) >= 1)
    {
      uint64_t v15 = 0;
      uint64_t v16 = 0LL;
      uint64_t v17 = 0LL;
      do
      {
        uint64_t v18 = sqlite3_column_name(a2, v15);
        uint64_t v19 = sqlite3_column_text(a2, v15);
        if (v18)
        {
          uint64_t v20 = (char *)v19;
          if (!strcmp(v18, "make_group_name"))
          {
            uint64_t v17 = v20;
          }

          else if (!strcmp(v18, "make_group_friendly_names"))
          {
            uint64_t v16 = v20;
          }
        }

        ++v15;
      }

      while (v15 < sqlite3_column_count(a2));
      if (v17 && v16) {
        break;
      }
    }
  }

  uint64_t v51 = 0LL;
  uint64_t v52 = 0LL;
  uint64_t v53 = 0LL;
  sub_10002418C(&__p, v16);
  sub_1002D257C(&__p, 44, (uint64_t)&v51);
  __s = v17;
  uint64_t v22 = (unsigned __int8 *)v51;
  uint64_t v21 = (unsigned __int8 *)v52;
  uint64_t v48 = (unsigned __int8 *)v52;
  while (2)
  {
    if (v22 == v21)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v51;
      sub_100024304((void ***)&__p);
      a1 = v45;
      goto LABEL_7;
    }

    sub_1003D01A0(a4, (uint64_t)&__p);
    size = __p.__r_.__value_.__s.__size_;
    uint64_t v24 = (void *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    uint64_t v26 = (char)v22[23];
    if (v26 >= 0) {
      uint64_t v27 = v22;
    }
    else {
      uint64_t v27 = *(unsigned __int8 **)v22;
    }
    if (v26 >= 0) {
      uint64_t v28 = v22[23];
    }
    else {
      uint64_t v28 = *((void *)v22 + 1);
    }
    if (v28)
    {
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        char v29 = __p.__r_.__value_.__s.__size_;
      }
      else {
        char v29 = __p.__r_.__value_.__l.__size_;
      }
      uint64_t v30 = (char *)p_p + v29;
      if (v29 >= v28)
      {
        uint64_t v47 = (void *)__p.__r_.__value_.__r.__words[0];
        uint64_t v33 = *v27;
        int v34 = p_p;
        do
        {
          uint64_t v35 = v29 - v28;
          if (v35 == -1) {
            break;
          }
          unsigned int v36 = (char *)memchr(v34, v33, v35 + 1);
          if (!v36) {
            break;
          }
          uint64_t v31 = v36;
          if (!memcmp(v36, v27, v28)) {
            goto LABEL_47;
          }
          int v34 = (std::string *)(v31 + 1);
          char v29 = v30 - (v31 + 1);
        }

        while (v29 >= v28);
        uint64_t v31 = v30;
LABEL_47:
        uint64_t v24 = v47;
      }

      else
      {
        uint64_t v31 = (char *)p_p + v29;
      }

      if (v31 == v30) {
        uint64_t v32 = -1LL;
      }
      else {
        uint64_t v32 = v31 - (char *)p_p;
      }
      if ((size & 0x80) != 0) {
LABEL_52:
      }
        operator delete(v24);
    }

    else
    {
      uint64_t v32 = 0LL;
      if ((__p.__r_.__value_.__s.__size_ & 0x80) != 0) {
        goto LABEL_52;
      }
    }

    if (v32 == -1)
    {
      v22 += 24;
      uint64_t v21 = v48;
      continue;
    }

    break;
  }

  sub_10002418C(&__p, __s);
  std::string::operator=((std::string *)(a3 + 88), &__p);
  *(_BYTE *)(a3 + 80) = 1;
  uint64_t v40 = (os_log_s *)qword_1008F75E0;
  if (os_log_type_enabled((os_log_t)qword_1008F75E0, OS_LOG_TYPE_DEBUG))
  {
    sub_1003D01A0(a4, (uint64_t)&__p);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v43 = &__p;
    }
    else {
      uint64_t v43 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)int buf = 136446466;
    uint64_t v55 = v43;
    uint64_t v56 = 2082;
    int v57 = v22;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "Friendly Name: %{public}s to Make Group matched: %{public}s",  buf,  0x16u);
  }

  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v51;
  sub_100024304((void ***)&__p);
  return 1LL;
}

    if (SHIBYTE(cap) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v91) < 0) {
      operator delete(*(void **)v90);
    }
    goto LABEL_77;
  }

  uint64_t v4 = 0LL;
LABEL_95:
  uint64_t v65 = (os_log_s *)qword_1008F7578;
  if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v66 = *(void *)(a1 + 1304);
    LODWORD(v92) = 138412290;
    *(void *)((char *)&v92 + 4) = v66;
    _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_DEFAULT,  "Services dictionary: %@",  (uint8_t *)&v92,  0xCu);
  }

  sub_100242FAC((uint64_t)v75);
  return v4;
}

        uint64_t v35 = (os_log_s *)qword_1008F7580;
        if (!os_log_type_enabled((os_log_t)qword_1008F7580, OS_LOG_TYPE_DEFAULT)) {
          return sub_100242FAC((uint64_t)v51);
        }
        unsigned int v36 = sub_100429CF0(&v52);
        *(_DWORD *)int buf = 136315394;
        uint64_t v55 = *(double *)&v36;
        uint64_t v56 = 1024;
        LODWORD(v57) = a5;
        uint64_t v37 = "Bandwidth: A2DP event %s, not counted as bandwidth. BTResult %d";
        goto LABEL_73;
      }

      if (*(_BYTE *)(a1 + 281)) {
        goto LABEL_69;
      }
    }

    *(_DWORD *)(a1 + 288) += 27;
    *(_BYTE *)(a1 + 281) = 1;
    return sub_100242FAC((uint64_t)v51);
  }

  if (a3 == 1)
  {
    if (!a5 && a4 == 101)
    {
      if (qword_1008D9030 != -1) {
        dispatch_once(&qword_1008D9030, &stru_1008A5758);
      }
      uint64_t v10 = sub_10045D7CC((uint64_t)off_1008D9028, a2);
      if (v10)
      {
        int v11 = sub_1002075F4(v10 + 400);
        uint64_t v12 = (os_log_s *)qword_1008F7580;
        if (os_log_type_enabled((os_log_t)qword_1008F7580, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 134217984;
          uint64_t v55 = (double)v11 * 0.625;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Bandwidth: HFP Connection has a transmission rate of %fMS",  buf,  0xCu);
        }

        if (v11 == 12) {
          uint64_t v13 = 512;
        }
        else {
          uint64_t v13 = 256;
        }
        if (v11 <= 12) {
          uint64_t v14 = v13;
        }
        else {
          uint64_t v14 = 2560;
        }
        sub_100653EFC(a1, v14, 1);
      }

      else
      {
        sub_100653EFC(a1, 0x100u, 1);
        uint64_t v39 = (os_log_s *)qword_1008F7580;
        if (os_log_type_enabled((os_log_t)qword_1008F7580, OS_LOG_TYPE_ERROR))
        {
          if (a2)
          {
            sub_1003CF00C(a2, buf);
            sub_1006A1A80();
          }

          else
          {
            sub_1006A1A40((uint64_t)v60, v39, v40);
          }
        }
      }

      return sub_100242FAC((uint64_t)v51);
    }

    if (!a5 && a4 == 102)
    {
      uint64_t v27 = 0LL;
      uint64_t v28 = (uint64_t *)(a1 + 384);
      do
      {
        char v29 = *v28;
        if (*v28)
        {
          uint64_t v30 = dword_1006C4A84[v27];
          uint64_t v31 = a1 + 384;
          do
          {
            uint64_t v32 = *(_DWORD *)(v29 + 28);
            uint64_t v33 = v32 >= v30;
            if (v32 >= v30) {
              int v34 = (uint64_t *)v29;
            }
            else {
              int v34 = (uint64_t *)(v29 + 8);
            }
            if (v33) {
              uint64_t v31 = v29;
            }
            char v29 = *v34;
          }

          while (*v34);
        }

        ++v27;
      }

      while (v27 != 3);
      return sub_100242FAC((uint64_t)v51);
    }

    uint64_t v35 = (os_log_s *)qword_1008F7580;
    if (!os_log_type_enabled((os_log_t)qword_1008F7580, OS_LOG_TYPE_DEFAULT)) {
      return sub_100242FAC((uint64_t)v51);
    }
    uint64_t v38 = sub_100429CF0(&v52);
    *(_DWORD *)int buf = 136315394;
    uint64_t v55 = *(double *)&v38;
    uint64_t v56 = 1024;
    LODWORD(v57) = a5;
    uint64_t v37 = "Bandwidth: HFP event %s, not counted as bandwidth. BTResult %d";
LABEL_73:
    _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, v37, buf, 0x12u);
    return sub_100242FAC((uint64_t)v51);
  }

  uint64_t v16 = (os_log_s *)qword_1008F7580;
  if (os_log_type_enabled((os_log_t)qword_1008F7580, OS_LOG_TYPE_ERROR))
  {
    uint64_t v17 = sub_100429B04(&v53);
    uint64_t v18 = sub_100429CF0(&v52);
    *(_DWORD *)int buf = 136315650;
    uint64_t v55 = *(double *)&v17;
    uint64_t v56 = 2080;
    int v57 = v18;
    uint64_t v58 = 1024;
    int v59 = a5;
    _os_log_error_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "Bandwidth: No matching bandwidth item for serviceID %s, eventID %s, BTResult %d",  buf,  0x1Cu);
  }

  return sub_100242FAC((uint64_t)v51);
}

void sub_100105D38(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = dword_1008F29B4;
  if (!dword_1008F29B4) {
    goto LABEL_13;
  }
  int v5 = &word_1008F29F8;
  while (*((void *)v5 - 1) != a1)
  {
    v5 += 536;
    if (!--v2) {
      goto LABEL_13;
    }
  }

  if (*v5 == -1)
  {
LABEL_13:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Not tracking this device.", v7, v8, v9, v10, v11, v12, v13, *(uint64_t *)v30);
      uint64_t v14 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else if (sub_10008D8B4(a1))
  {
    if (dword_1008F29B4)
    {
      unsigned __int8 v6 = 0;
      while (qword_1008F29F0[134 * v6] != a1)
      {
      }

      unsigned int v23 = qword_1008F29F0[134 * v6 + 9];
      if (v23)
      {
        unsigned __int8 v24 = 0;
        uint64_t v25 = qword_1008F29F0[134 * v6 + 8];
        while (*(unsigned __int8 *)(v25 + ((unint64_t)v24 << 6)) != *a2)
        {
          if (v23 <= ++v24) {
            return;
          }
        }

        unint64_t v26 = v25 + ((unint64_t)v24 << 6);
        *(_BYTE *)(v26 + 2) = a2[1] != 0;
        int v27 = a2[2];
        *(_DWORD *)(v26 + 4) = v27;
        int v28 = v27 | (a2[3] << 8);
        *(_DWORD *)(v26 + 4) = v28;
        int v29 = v28 | (a2[4] << 16);
        *(_DWORD *)(v26 + 4) = v29;
        *(_DWORD *)(v26 + 4) = v29 | (a2[5] << 24);
        *(_WORD *)(v26 + 8) = a2[6];
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"CAPS_CHANGED_IND not supposed to get a caps info response from the central.",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  *(uint64_t *)v30);
    uint64_t v22 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v30 = 136446210;
      *(void *)&v30[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", v30, 0xCu);
    }
  }

void sub_100105F5C(__int128 *a1, unsigned __int8 *a2, int a3)
{
  uint64_t v3 = dword_1008F29B4;
  if (!dword_1008F29B4) {
    goto LABEL_12;
  }
  uint64_t v7 = &word_1008F29F8;
  while (*((__int128 **)v7 - 1) != a1)
  {
    v7 += 536;
    if (!--v3) {
      goto LABEL_12;
    }
  }

  if (*v7 == -1)
  {
LABEL_12:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"UPGRADE not tracking this device.", v16, v17, v18, v19, v20, v21, v22, v74);
      unsigned int v23 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  if (sub_10008D8B4((uint64_t)a1))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"UPGRADE not supposed to get a upgrade from the peripheral.",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v74);
      uint64_t v15 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        *(void *)&uint8_t buf[4] = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    sub_1001081C8(a1, 17, 2);
    return;
  }

  if (!a3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"UPGRADE wrong size for upgrade req.", v34, v35, v36, v37, v38, v39, v40, v74);
      uint64_t v41 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v42 = a1;
    int v43 = 3;
    int v44 = 0;
    goto LABEL_56;
  }

  int v26 = *a2;
  unsigned __int8 v24 = a2 + 1;
  int v25 = v26;
  unsigned __int8 v27 = a3 - 1;
  if ((_BYTE)a3 == 1) {
    uint64_t v28 = 0LL;
  }
  else {
    uint64_t v28 = (uint64_t)v24;
  }
  uint64_t v29 = dword_1008F29B4;
  if (!dword_1008F29B4)
  {
    LODWORD(v30) = 0;
    int v32 = 0;
LABEL_29:
    unsigned __int8 v33 = 4;
    goto LABEL_45;
  }

  uint64_t v30 = 0LL;
  uint64_t v31 = qword_1008F29F0;
  do
  {
    if ((__int128 *)*v31 == a1)
    {
      uint64_t v45 = &dword_1008F2A20;
      while (*((unsigned __int16 *)v45 - 20) != *((unsigned __int16 *)v31 + 4))
      {
        v45 += 268;
        if (!--v29) {
          goto LABEL_40;
        }
      }

      if (*v45 == 6)
      {
        uint64_t v46 = *((unsigned int *)v31 + 18);
        if ((_DWORD)v46)
        {
          uint64_t v47 = (unsigned __int8 *)(v31[8] + 1);
          while (*(v47 - 1) != v25)
          {
            v47 += 64;
            if (!--v46) {
              goto LABEL_39;
            }
          }

          int v32 = *v47;
        }

        else
        {
LABEL_39:
          int v32 = 0;
        }

        if (sub_10008B640(v30, 1u))
        {
          sub_100102124(*((unsigned __int16 *)v31 + 4), 8u);
          *((_BYTE *)v31 + 77) = v32;
          goto LABEL_29;
        }

        if ((sub_1000A86F0() & 1) != 0)
        {
          sub_1001EE134( (uint64_t)"RSSI is not sufficient for upgrade rssi=%d",  v66,  v67,  v68,  v69,  v70,  v71,  v72,  *((unsigned int *)v31 + 47));
          uint64_t v73 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v73, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        unsigned __int8 v33 = 8;
      }

      else
      {
LABEL_40:
        if ((sub_1000A86F0() & 1) != 0)
        {
          uint64_t v48 = sub_1000FFB28(*((_DWORD *)v31 + 12));
          sub_1001EE134( (uint64_t)"UPGRADE upgrade should only be received when in IDLE state. Current state is %s",  v49,  v50,  v51,  v52,  v53,  v54,  v55,  (uint64_t)v48);
          uint64_t v56 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        unsigned __int8 v33 = 5;
      }

      int v32 = 1;
      goto LABEL_45;
    }

    ++v30;
    v31 += 134;
  }

  while (dword_1008F29B4 != v30);
  int v32 = 0;
  unsigned __int8 v33 = 4;
  LODWORD(v30) = dword_1008F29B4;
LABEL_45:
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Received UPGRADE for lmhandle 0x%4x to transport ID %d (tech %s)",  v57,  v58,  v59,  v60,  v61,  v62,  v63,  *(unsigned __int16 *)a1);
    uint64_t v64 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  __int128 v76 = 0u;
  __int128 v77 = 0u;
  LOBYTE(v76) = 1;
  WORD1(v76) = 4;
  DWORD2(v76) = 4;
  LOBYTE(v77) = 1;
  WORD1(v77) = 4;
  DWORD2(v77) = v32;
  memcpy(buf, "state", sizeof(buf));
  sub_1000B142C("Magnet Operation", (const char *)buf, &v76, 2);
  if (v32 == 1
    || (v32 != 2
      ? (unsigned __int8 v65 = sub_1001086D8(v32, (unsigned __int16 *)a1, v28, v27, 0LL))
      : (unsigned __int8 v65 = sub_100103BE0((uint64_t)a1)),
        (unsigned __int8 v33 = v65) != 0))
  {
    BYTE5(qword_1008F29F0[134 * v30 + 9]) = 0;
  }

  else
  {
    sub_1000B080C((uint64_t)&qword_1008F29F0[134 * v30 + 19]);
    unsigned __int8 v33 = 0;
  }

  int v43 = v33;
  uint64_t v42 = a1;
  int v44 = v32;
LABEL_56:
  sub_10010848C(v42, v43, v44);
}

void sub_100106474(unsigned __int16 *a1, unsigned __int8 *a2, int a3)
{
  uint64_t v3 = dword_1008F29B4;
  if (!dword_1008F29B4) {
    goto LABEL_14;
  }
  uint64_t v7 = &word_1008F29F8;
  while (*((unsigned __int16 **)v7 - 1) != a1)
  {
    v7 += 536;
    if (!--v3) {
      goto LABEL_14;
    }
  }

  if (*v7 == -1)
  {
LABEL_14:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"UPGRADE_REQ not tracking this device.", v11, v12, v13, v14, v15, v16, v17, v101);
      uint64_t v18 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  if (!sub_10008D8B4((uint64_t)a1))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"UPGRADE_REQ not supposed to get a upgrade req from the central.",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v101);
      int v26 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v106 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    unsigned __int8 v27 = (__int128 *)a1;
    char v28 = 2;
    goto LABEL_52;
  }

  if (!a3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"UPGRADE_REQ wrong size for upgrade req.", v29, v30, v31, v32, v33, v34, v35, v101);
      uint64_t v36 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    unsigned __int8 v27 = (__int128 *)a1;
    char v28 = 3;
    goto LABEL_52;
  }

  if (!dword_1008F29B4)
  {
    LODWORD(v8) = 0;
LABEL_30:
    int v10 = 0;
    goto LABEL_31;
  }

  uint64_t v8 = 0LL;
  uint64_t v9 = &dword_1008F2A38;
  while (*((unsigned __int16 **)v9 - 9) != a1)
  {
    ++v8;
    v9 += 268;
    if (dword_1008F29B4 == v8)
    {
      int v10 = 0;
      LODWORD(v8) = dword_1008F29B4;
      goto LABEL_31;
    }
  }

  uint64_t v37 = *v9;
  if (!(_DWORD)v37) {
    goto LABEL_30;
  }
  uint64_t v38 = (unsigned __int8 *)(*((void *)v9 - 1) + 1LL);
  while (*(v38 - 1) != *a2)
  {
    v38 += 64;
    if (!--v37) {
      goto LABEL_30;
    }
  }

  int v10 = *v38;
LABEL_31:
  if (v10 <= 2)
  {
    if (v10 == 1)
    {
      uint64_t v46 = "LE";
      goto LABEL_45;
    }

    if (v10 == 2)
    {
      uint64_t v46 = "BT";
      goto LABEL_45;
    }
  }

  else
  {
    switch(v10)
    {
      case 3:
        uint64_t v46 = "WL";
        goto LABEL_45;
      case 16:
        uint64_t v46 = "USB";
        goto LABEL_45;
      case 17:
        uint64_t v46 = "AWDL";
        goto LABEL_45;
    }
  }

  uint64_t v46 = "??";
LABEL_45:
  sub_1001EE134( (uint64_t)"Received UPGRADE_REQ to tech %s (2) from lmhandle 0x%4x",  v39,  v40,  v41,  v42,  v43,  v44,  v45,  (uint64_t)v46);
  uint64_t v47 = (os_log_s *)sub_100086554(0x56u);
  if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 136446210;
    uint64_t v106 = sub_1001EDDCC();
    _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
  }

void sub_100106BA4(unsigned __int16 *a1, unsigned __int8 *a2, int a3)
{
  uint64_t v3 = dword_1008F29B4;
  if (!dword_1008F29B4) {
    goto LABEL_10;
  }
  uint64_t v7 = &word_1008F29F8;
  while (*((unsigned __int16 **)v7 - 1) != a1)
  {
    v7 += 536;
    if (!--v3) {
      goto LABEL_10;
    }
  }

  if (*v7 == -1)
  {
LABEL_10:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"UPGRADE_CFM not tracking this device.", v9, v10, v11, v12, v13, v14, v15, v38);
      uint64_t v16 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    if (sub_10008D8B4((uint64_t)a1))
    {
      if (a3) {
        int v8 = *a2;
      }
      else {
        int v8 = 0;
      }
      unsigned __int8 v25 = a3 - 1;
      if ((_BYTE)a3 == 1) {
        uint64_t v26 = 0LL;
      }
      else {
        uint64_t v26 = (uint64_t)(a2 + 1);
      }
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Received UPGRADE_CFM from lmhandle 0x%4x with %s",  v27,  v28,  v29,  v30,  v31,  v32,  v33,  *a1);
        uint64_t v34 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 136446210;
          uint64_t v40 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      if (dword_1008F29B4)
      {
        uint64_t v35 = 0LL;
        uint64_t v36 = qword_1008F29F0;
        while ((unsigned __int16 *)*v36 != a1)
        {
          ++v35;
          v36 += 134;
          if (dword_1008F29B4 == v35)
          {
            int v37 = 0;
            LODWORD(v35) = dword_1008F29B4;
            goto LABEL_30;
          }
        }

        sub_100104E20(*((unsigned __int16 *)v36 + 4));
        if (v8)
        {
          *((_BYTE *)v36 + 77) = 1;
          sub_100102124(*((unsigned __int16 *)v36 + 4), 6u);
          sub_100102438(a1);
          return;
        }

        sub_100102124(*((unsigned __int16 *)v36 + 4), 8u);
        int v37 = *((unsigned __int8 *)v36 + 77);
        if (v37 == 2)
        {
          goto LABEL_31;
        }
      }

      else
      {
        LODWORD(v35) = 0;
        int v37 = 0;
      }

void sub_100106E90(unsigned __int16 *a1, unsigned __int8 *a2, int a3)
{
  uint64_t v3 = dword_1008F29B4;
  if (!dword_1008F29B4) {
    goto LABEL_9;
  }
  int v5 = &word_1008F29F8;
  while (*((unsigned __int16 **)v5 - 1) != a1)
  {
    v5 += 536;
    if (!--v3) {
      goto LABEL_9;
    }
  }

  if (*v5 == -1)
  {
LABEL_9:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"UPGRADE_COMPLETE not tracking this device.", v7, v8, v9, v10, v11, v12, v13, v34);
      uint64_t v14 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    if (a3) {
      int v6 = *a2;
    }
    else {
      int v6 = 0;
    }
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received UPGRADE_COMPLETE from lmhandle 0x%4x with %s",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  *a1);
      uint64_t v22 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v36 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    uint64_t v23 = dword_1008F29B4;
    if (dword_1008F29B4)
    {
      for (unint64_t i = qword_1008F29F0; (unsigned __int16 *)*i != a1; i += 134)
      {
        if (!--v23) {
          return;
        }
      }

      sub_100104E20(*((unsigned __int16 *)i + 4));
      sub_100102124(*((unsigned __int16 *)i + 4), 0xAu);
      if (v6)
      {
        *((_BYTE *)i + 77) = 1;
        sub_1001007C4((uint64_t)i);
LABEL_25:
        sub_100103FB4(a1, v6);
        return;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Received UPGRADE_COMPLETE but the transport isn't up yet. Waiting until transport is up.",  v25,  v26,  v27,  v28,  v29,  v30,  v31,  v34);
        uint64_t v32 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v33 = sub_1001EDDCC();
          *(_DWORD *)int buf = 136446210;
          uint64_t v36 = v33;
          _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
  }

void sub_1001070EC(unsigned __int16 *a1, _BYTE *a2, int a3)
{
  uint64_t v3 = dword_1008F29B4;
  if (!dword_1008F29B4) {
    goto LABEL_11;
  }
  int v5 = &word_1008F29F8;
  while (*((unsigned __int16 **)v5 - 1) != a1)
  {
    v5 += 536;
    if (!--v3) {
      goto LABEL_11;
    }
  }

  if (*v5 == -1)
  {
LABEL_11:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"UPGRADE_COMPLETE_CFM not tracking this device.", v14, v15, v16, v17, v18, v19, v20, v56);
      uint64_t v21 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    if (a3 && (int v6 = *a2, *a2))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Received UPGRADE_COMPLETE_CFM from lmhandle 0x%4x with %s",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  *a1);
        uint64_t v31 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      int v30 = 0;
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Received UPGRADE_COMPLETE_CFM from lmhandle 0x%4x with %s",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  *a1);
        uint64_t v29 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 136446210;
          *(void *)&uint8_t buf[4] = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      int v6 = 0;
      int v30 = 1;
    }

    if (dword_1008F29B4)
    {
      uint64_t v32 = 0LL;
      unsigned int v33 = 0;
      while ((unsigned __int16 *)qword_1008F29F0[v32] != a1)
      {
        ++v33;
        v32 += 134LL;
      }

      uint64_t v34 = &qword_1008F29F0[v32];
      sub_100104E20(LOWORD(qword_1008F29F0[v32 + 1]));
      sub_100102124(LOWORD(qword_1008F29F0[v32 + 1]), 6u);
      sub_100102438(a1);
      sub_100102768(v33, BYTE5(qword_1008F29F0[v32 + 9]));
      *((_BYTE *)v34 + 77) = 1;
      ++*((_DWORD *)v34 + 50);
      ++*((_WORD *)v34 + 526);
      sub_1000B0400((uint64_t)&qword_1008F29F0[v32 + 16]);
      uint64_t v35 = sub_1001007C4((uint64_t)&qword_1008F29F0[v32]);
      if (v6 == 4)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Disconnecting upgraded connection due to remote transport error",  v36,  v37,  v38,  v39,  v40,  v41,  v42,  v56);
          uint64_t v43 = (os_log_s *)sub_100086554(0x56u);
          if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }

        sub_10010CAA4(v35, 0x13u);
        goto LABEL_53;
      }

      sub_100090F08((uint64_t)a1, 1);
      if (v35)
      {
        sub_100102438((unsigned __int16 *)v35);
        if (*(_BYTE *)(v35 + 2)) {
          uint64_t v44 = 17LL;
        }
        else {
          uint64_t v44 = 2LL;
        }
        if ((void)xmmword_1008F29B8) {
          int v45 = v30;
        }
        else {
          int v45 = 0;
        }
        if (v45 != 1) {
          goto LABEL_53;
        }
        if (sub_10012D514(v35))
        {
          ((void (*)(unsigned __int16 *, uint64_t, uint64_t, void))xmmword_1008F29B8)( a1,  v44,  v35 + 48,  *(unsigned __int8 *)(v35 + 278));
LABEL_53:
          __int128 v58 = 0u;
          __int128 v59 = 0u;
          LOBYTE(v58) = 1;
          WORD1(v58) = 4;
          DWORD2(v58) = 5;
          LOBYTE(v59) = 1;
          WORD1(v59) = 4;
          DWORD2(v59) = v6;
          memcpy(buf, "state", sizeof(buf));
          sub_1000B142C("Magnet Operation", (const char *)buf, &v58, 2);
          return;
        }
      }

      else
      {
        if ((void)xmmword_1008F29B8) {
          char v46 = v30;
        }
        else {
          char v46 = 0;
        }
        if ((v46 & 1) == 0) {
          goto LABEL_53;
        }
        uint64_t v44 = 1LL;
      }

      if (sub_1000A86F0())
      {
        uint64_t v54 = "Invalid";
        if (!v35) {
          uint64_t v54 = "Empty";
        }
        sub_1001EE134( (uint64_t)"%s alternate handle for Peer %d, connectionHandle=%p, pipeID=0x%4x",  v47,  v48,  v49,  v50,  v51,  v52,  v53,  (uint64_t)v54);
        uint64_t v55 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      ((void (*)(unsigned __int16 *, uint64_t, void, void))xmmword_1008F29B8)(a1, v44, 0LL, 0LL);
      goto LABEL_53;
    }
  }

uint64_t sub_100107538(__int128 *a1)
{
  if (sub_10008D8B4((uint64_t)a1))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"DOWNGRADE not supposed to get a downgrade from the peripheral.",  v2,  v3,  v4,  v5,  v6,  v7,  v8,  v55);
      uint64_t v9 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        *(void *)&uint8_t buf[4] = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    uint64_t v10 = a1;
    char v11 = 2;
    return sub_1001081C8(v10, 32, v11);
  }

  uint64_t v12 = dword_1008F29B4;
  if (!dword_1008F29B4) {
    goto LABEL_23;
  }
  uint64_t v13 = qword_1008F29F0;
  while ((__int128 *)*v13 != a1)
  {
    v13 += 134;
    if (!--v12) {
      goto LABEL_23;
    }
  }

  int v14 = *((unsigned __int16 *)v13 + 4);
  if (*((_BYTE *)v13 + 10))
  {
    uint64_t v15 = (unsigned __int16 *)v13[2];
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"DOWNGRADE no alternate handle to downgrade from.", v16, v17, v18, v19, v20, v21, v22, v55);
      uint64_t v23 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v15 = 0LL;
  }

  if (v14 == 0xFFFF)
  {
LABEL_23:
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"DOWNGRADE invalid handle for downgrade", v26, v27, v28, v29, v30, v31, v32, v55);
      unsigned int v33 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v10 = a1;
    char v11 = 1;
    return sub_1001081C8(v10, 32, v11);
  }

  uint64_t v24 = dword_1008F29B4;
  if (!dword_1008F29B4) {
    goto LABEL_35;
  }
  uint64_t v25 = &dword_1008F2A20;
  while (*((unsigned __int16 *)v25 - 20) != v14)
  {
    v25 += 268;
    if (!--v24) {
      goto LABEL_35;
    }
  }

  if (*v25 == 6)
  {
    if ((sub_10012D514((uint64_t)v15)
       || sub_10012D5BC((uint64_t)v15)
       || sub_10012D5EC((uint64_t)v15)
       || sub_10012D61C((uint64_t)v15))
      && sub_100135FB0((uint64_t)v15))
    {
      sub_100101D4C(v15);
      sub_100102124(v14, 0xBu);
      return sub_100135CD8(1, (uint64_t)v15, sub_100102270);
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received DOWNGRADE from lmhandle 0x%4x",  v47,  v48,  v49,  v50,  v51,  v52,  v53,  *(unsigned __int16 *)a1);
      uint64_t v54 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        *(void *)&uint8_t buf[4] = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    v57[0] = xmmword_1006BC768;
    v57[1] = unk_1006BC778;
    memcpy(buf, "state", sizeof(buf));
    sub_1000B142C("Magnet Operation", (const char *)buf, v57, 2);
    uint64_t v44 = (unsigned __int16 *)a1;
    int v45 = 0;
    uint64_t v46 = (uint64_t)v15;
  }

  else
  {
LABEL_35:
    if (sub_1000A86F0())
    {
      uint64_t v35 = sub_1000FFB28(*((_DWORD *)v13 + 12));
      sub_1001EE134( (uint64_t)"DOWNGRADE can't downgrade state isn't IDLE it's %s",  v36,  v37,  v38,  v39,  v40,  v41,  v42,  (uint64_t)v35);
      uint64_t v43 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v44 = (unsigned __int16 *)a1;
    int v45 = 5;
    uint64_t v46 = 0LL;
  }

  return sub_100102510(v44, v45, v46);
}

void sub_1001078C0(unsigned __int16 *a1)
{
  if (sub_10008D8B4((uint64_t)a1))
  {
    if (!dword_1008F29B4) {
      goto LABEL_49;
    }
    uint64_t v2 = 0LL;
    while ((unsigned __int16 *)qword_1008F29F0[134 * v2] != a1)
    {
      if (++v2 == dword_1008F29B4) {
        goto LABEL_49;
      }
    }

    char v11 = &qword_1008F29F0[134 * v2];
    uint64_t v12 = *((unsigned __int16 *)v11 + 4);
    uint64_t v13 = *((unsigned __int8 *)v11 + 10);
    int v14 = *((unsigned __int8 *)v11 + 76);
    sub_100102768(v2, 1u);
    sub_100104E20(v12);
    uint64_t v15 = dword_1008F29B4;
    if (!dword_1008F29B4) {
      goto LABEL_17;
    }
    uint64_t v16 = &dword_1008F2A20;
    while (*((unsigned __int16 *)v16 - 20) != (_DWORD)v12)
    {
      v16 += 268;
      if (!--v15) {
        goto LABEL_17;
      }
    }

    if (*v16 != 12)
    {
LABEL_17:
      if (sub_1000A86F0())
      {
        uint64_t v17 = sub_1000FFB28(qword_1008F29F0[134 * v2 + 6]);
        sub_1001EE134( (uint64_t)"ERROR ! Remote sent us a DOWNGRADE_CFM but we are in %s state, disconnecting.",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  (uint64_t)v17);
        uint64_t v25 = (os_log_s *)sub_100086554(0x56u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1001B7974((uint64_t)a1);
    }

    sub_100102124(v12, 6u);
    if ((_DWORD)v13)
    {
      int v72 = v14;
      for (uint64_t i = 0LL; i != v13; ++i)
      {
        uint64_t v27 = &qword_1008F29F0[134 * v2 + 2 * i];
        uint64_t v29 = v27[2];
        uint64_t v28 = v27 + 2;
        sub_100100878(v29, (uint64_t)a1);
        BOOL v30 = sub_10012D514(*v28);
        uint64_t v31 = *v28;
        if (v30)
        {
          if (*(_DWORD *)(v31 + 148)) {
            sub_100101818(v31, 19);
          }
        }

        else
        {
          if (*(_BYTE *)(v31 + 2) != 8) {
            sub_1001EE2A0();
          }
          uint64_t v32 = byte_1008F29B0;
          if (byte_1008F29B0)
          {
            unsigned int v33 = (unsigned __int8 *)qword_1008F29A8;
            while (*(_DWORD *)(*v28 + 56) != *v33)
            {
              v33 += 64;
              if (!--v32) {
                goto LABEL_35;
              }
            }

            uint64_t v34 = (void (*)(void))*((void *)v33 + 6);
            if (v34) {
              v34(*(unsigned __int16 *)*v28);
            }
          }
        }

void sub_100107D44(unsigned __int16 *a1)
{
  if (sub_10008D8B4((uint64_t)a1))
  {
    uint64_t v2 = dword_1008F29B4;
    if (dword_1008F29B4)
    {
      uint64_t v3 = 0LL;
      uint64_t v4 = qword_1008F29F0;
      while ((unsigned __int16 *)*v4 != a1)
      {
        ++v3;
        v4 += 134;
        if (dword_1008F29B4 == v3)
        {
          BOOL v5 = 0;
          uint64_t v3 = dword_1008F29B4;
          goto LABEL_22;
        }
      }

      *((_DWORD *)v4 + 21) = 1;
      int v14 = &dword_1008F2A20;
      while (*((unsigned __int16 *)v14 - 20) != *((unsigned __int16 *)v4 + 4))
      {
        v14 += 268;
        if (!--v2) {
          goto LABEL_18;
        }
      }

      if (*v14 == 6)
      {
        BOOL v5 = *((_DWORD *)v4 + 29) == 0;
        goto LABEL_22;
      }

void sub_100107FFC(unsigned int a1)
{
  if (sub_1000A86F0())
  {
    if (a1 > 8) {
      uint64_t v9 = "ERROR_Unknown";
    }
    else {
      uint64_t v9 = off_1008843B0[(char)a1];
    }
    sub_1001EE134((uint64_t)"Remote side sent fatal %s", v2, v3, v4, v5, v6, v7, v8, (uint64_t)v9);
    uint64_t v10 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int buf = 136446466;
      uint64_t v12 = sub_1001EDDCC();
      __int16 v13 = 1024;
      int v14 = 0xFFFF;
      _os_log_error_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
    }
  }

  sub_1000B034C(a1 + 5050, "TS Remote Error");
}

const char *sub_1001080C8(int a1)
{
  if (a1 > 31)
  {
    if (a1 <= 33)
    {
      if (a1 == 32) {
        return "DOWNGRADE";
      }
      else {
        return "DOWNGRADE_CFM";
      }
    }

    else
    {
      switch(a1)
      {
        case 34:
          return "DOWNGRADE_REQ";
        case 254:
          return "FATAL_ERROR";
        case 255:
          return "ERROR";
        default:
          return "Unknown";
      }
    }
  }

  else
  {
    int v1 = a1 - 1;
    uint64_t result = "VERSION_IND";
    switch(v1)
    {
      case 0:
        return result;
      case 1:
        uint64_t result = "CAPS_IND";
        break;
      case 4:
        uint64_t result = "CAPS_CHANGED_IND";
        break;
      case 15:
        uint64_t result = "UPGRADE_REQ";
        break;
      case 16:
        uint64_t result = "UPGRADE";
        break;
      case 17:
        uint64_t result = "UPGRADE_CFM";
        break;
      case 18:
        uint64_t result = "UPGRADE_COMPLETE";
        break;
      case 19:
        uint64_t result = "COMPLETE_CFM";
        break;
      default:
        return "Unknown";
    }
  }

  return result;
}

uint64_t sub_1001081C8(__int128 *a1, char a2, char a3)
{
  __int16 v7 = 767;
  char v8 = a2;
  char v9 = a3;
  uint64_t v3 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    uint64_t v4 = &word_1008F29F8;
    while (*((__int128 **)v4 - 1) != a1)
    {
      v4 += 536;
      if (!--v3) {
        goto LABEL_5;
      }
    }

    uint64_t v5 = (unsigned __int16)*v4;
  }

  else
  {
LABEL_5:
    uint64_t v5 = 0xFFFFLL;
  }

  return sub_10008F3E4(0LL, a1, v5, (char *)&v7, 4uLL, 0);
}

uint64_t sub_100108244(_BYTE *a1, uint64_t a2, void *a3, _DWORD *a4)
{
  *a4 = 0;
  *a3 = 0LL;
  uint64_t v4 = *a1;
  if (!*a1) {
    return 3LL;
  }
  if (13 * (int)v4 > a2)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Invalid size, got %d, expected %d", v6, v7, v8, v9, v10, v11, v12, a2);
      __int16 v13 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 3LL;
  }

  uint64_t v18 = (char *)sub_1000B17F4((unint64_t)*a1 << 6);
  uint64_t result = 1LL;
  if (v18)
  {
    uint64_t v19 = 0LL;
    uint64_t v20 = qword_1008F29A8 + 16;
    uint64_t v21 = 1LL;
    while (1)
    {
      int v22 = a1[v21];
      uint64_t v23 = &v18[64 * v19];
      *uint64_t v23 = a1[(v21 + 1)];
      int v24 = a1[(v21 + 2)];
      v23[1] = v24;
      v23[2] = a1[(v21 + 3)] != 0;
      v23[12] = a1[(v21 + 4)] != 0;
      int v25 = a1[(v21 + 5)];
      *((_DWORD *)v23 + 1) = v25;
      int v26 = v25 | (a1[(v21 + 6)] << 8);
      *((_DWORD *)v23 + 1) = v26;
      int v27 = v26 | (a1[(v21 + 7)] << 16);
      *((_DWORD *)v23 + 1) = v27;
      *((_DWORD *)v23 + 1) = v27 | (a1[(v21 + 8)] << 24);
      LOWORD(v27) = a1[(v21 + 9)];
      *((_WORD *)v23 + 4) = v27;
      *((_WORD *)v23 + 4) = v27 | (a1[(v21 + 10)] << 8);
      LOWORD(v27) = a1[(v21 + 11)];
      *((_WORD *)v23 + 5) = v27;
      *((_WORD *)v23 + 5) = v27 | (a1[(v21 + 12)] << 8);
      uint64_t v28 = byte_1008F29B0;
      uint64_t v29 = (void *)v20;
      if (byte_1008F29B0)
      {
        while (*((unsigned __int8 *)v29 - 15) != v24)
        {
          v29 += 8;
          if (!--v28) {
            goto LABEL_15;
          }
        }

        uint64_t v30 = &v18[64 * v19];
        v30[13] = 1;
        *((void *)v30 + 2) = *v29;
      }

void sub_10010848C(__int128 *a1, int a2, int a3)
{
  char v3 = a2;
  uint64_t v5 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    uint64_t v6 = &word_1008F29F8;
    while (*((__int128 **)v6 - 1) != a1)
    {
      v6 += 536;
      if (!--v5) {
        goto LABEL_5;
      }
    }

    uint64_t v7 = (unsigned __int16)*v6;
  }

  else
  {
LABEL_5:
    uint64_t v7 = 0xFFFFLL;
  }

  __len[0] = 0;
  if (a2)
  {
    sub_100102124(v7, 6u);
LABEL_9:
    uint64_t v8 = 0LL;
    size_t v9 = 3LL;
    goto LABEL_10;
  }

  uint64_t v12 = byte_1008F29B0;
  if (!byte_1008F29B0) {
    goto LABEL_9;
  }
  uint64_t v13 = qword_1008F29A8;
  size_t v9 = 3LL;
  while (*(unsigned __int8 *)(v13 + 1) != a3)
  {
    v13 += 64LL;
    if (!--v12)
    {
      uint64_t v8 = 0LL;
      goto LABEL_10;
    }
  }

  if (!*(_BYTE *)(v13 + 12)) {
    goto LABEL_9;
  }
  uint64_t v8 = (char *)(*(uint64_t (**)(_WORD *))(v13 + 56))(__len);
  size_t v9 = __len[0] + 3LL;
LABEL_10:
  uint64_t v10 = (char *)sub_1000B17F4(v9);
  if (v10)
  {
    uint64_t v11 = v10;
    *uint64_t v10 = 18;
    v10[1] = LOBYTE(__len[0]) + 1;
    v10[2] = v3;
    if (v8 && __len[0])
    {
      memmove(v10 + 3, v8, __len[0]);
    }

    else if (!v8)
    {
      goto LABEL_23;
    }

    sub_1000B1838(v8);
LABEL_23:
    uint64_t v14 = *(unsigned __int16 *)a1;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Sending UPGRADE_CFM to lmhandle 0x%4x p:0x%4x with %s",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  v14);
      int v22 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v23 = sub_1001EDDCC();
        *(_DWORD *)&__len[1] = 136446210;
        *(void *)&__len[3] = v23;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&__len[1], 0xCu);
      }
    }

    int v24 = sub_10008F3E4(0LL, a1, v7, v11, (unsigned __int16)(__len[0] + 3), 0);
    if (v24 == 412 || !v24) {
      sub_100102348(v7, 0x61A8u);
    }
    uint64_t v8 = v11;
    goto LABEL_30;
  }

  if (v8) {
LABEL_30:
  }
    sub_1000B1838(v8);
}

uint64_t sub_1001086D8(int a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = byte_1008F29B0;
  if (byte_1008F29B0)
  {
    uint64_t v11 = (unsigned __int8 (**)(unsigned __int16 *, uint64_t, uint64_t, uint64_t, void (*)(uint64_t, unsigned int, uint64_t), void (*)(int)))(qword_1008F29A8 + 40);
    while (*((unsigned __int8 *)v11 - 39) != a1)
    {
      v11 += 8;
      if (!--v10) {
        goto LABEL_8;
      }
    }

    if (*v11 && !(*v11)(a2, a5, a3, a4, sub_100108798, sub_1001088BC)) {
      return 0LL;
    }
  }

void sub_100108798(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = (unsigned __int16 *)a1;
  if (!sub_10012D5EC(a1)) {
    uint64_t v5 = 0LL;
  }
  if (sub_10012D6D8(a2))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Error : collision between external transport LMHandle and exiting connection : %d already in use",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  a2);
      uint64_t v13 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    if (sub_10012D6D8(a2)) {
      sub_1001EE2A0();
    }
  }

  else
  {
    if ((_DWORD)a3)
    {
      uint64_t v14 = 0LL;
    }

    else
    {
      uint64_t v15 = sub_10012E1E0((uint64_t)v5);
      uint64_t v14 = (uint64_t)v15;
      if (v15)
      {
        *(_WORD *)uint64_t v15 = a2;
        v15[60] = 0;
        uint64_t v16 = byte_1008F29B0;
        if (byte_1008F29B0)
        {
          uint64_t v17 = (_BYTE *)(qword_1008F29A8 + 1);
          while (*v17 != 17)
          {
            v17 += 64;
            if (!--v16) {
              goto LABEL_12;
            }
          }

          *((_DWORD *)v15 + 14) = *(v17 - 1);
        }
      }
    }

void sub_1001088BC(int a1)
{
  int v1 = sub_10012D6D8(a1);
  if (v1)
  {
    uint64_t v2 = (unsigned __int16 *)v1;
    sub_100101858((uint64_t)v1, 0);
    sub_10012E320(v2);
  }

  else
  {
    sub_1001EE2A0();
  }

void sub_1001088F8(uint64_t a1)
{
  int v1 = **(unsigned __int16 **)(a1 + 8);
  uint64_t v2 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    char v3 = (unsigned int *)&dword_1008F2A20;
    while (*((unsigned __int16 *)v3 - 20) != v1)
    {
      v3 += 268;
      if (!--v2) {
        goto LABEL_5;
      }
    }

    unsigned int v4 = *v3;
    unsigned int v6 = *v3 + 4993;
    if (v4 - 7 >= 6) {
      uint64_t v5 = 5014LL;
    }
    else {
      uint64_t v5 = v6;
    }
  }

  else
  {
LABEL_5:
    unsigned int v4 = 0;
    uint64_t v5 = 5014LL;
  }

  if (sub_1000A86F0())
  {
    uint64_t v7 = sub_1000FFB28(v4);
    sub_1001EE134( (uint64_t)"Critical timeout elapsed during %s - disconnecting device, due to error %! on pipe ID 0x%2x",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  (uint64_t)v7);
    uint64_t v15 = (os_log_s *)sub_100086554(0x56u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  uint64_t v16 = dword_1008F29B4;
  if (dword_1008F29B4)
  {
    uint64_t v17 = &word_1008F29F8;
    while ((unsigned __int16)*v17 != v1)
    {
      v17 += 536;
      if (!--v16) {
        goto LABEL_16;
      }
    }

    uint64_t v18 = *((void *)v17 - 1);
  }

  else
  {
LABEL_16:
    uint64_t v18 = 0LL;
  }

  if (off_1008F29E0) {
    off_1008F29E0(v18, 81LL, 1273LL, v5);
  }
  if (v18 && sub_10012D5EC(v18))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Disconnecting device %x", v19, v20, v21, v22, v23, v24, v25, v18);
      int v26 = (os_log_s *)sub_100086554(0x56u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001B7974(v18);
  }

uint64_t sub_100108A7C( uint64_t (*a1)(void), uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t, const char *))
{
  off_1008F6CF0 = 0LL;
  sub_1001EF0FC();
  sub_1001EDB88();
  if (a3)
  {
    uint64_t v8 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v26 = 136446210;
      int v27 = "Invoking customization callback\n";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v26, 0xCu);
    }

    a3();
  }

  if (sub_1001EDDF8())
  {
    uint64_t v9 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v26 = 136446210;
      int v27 = "Support code initialization failed\n";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v26, 0xCu);
    }
  }

  uint64_t v10 = sub_1001EDBA0(0x30u);
  uint64_t v11 = sub_1000B1754(v10);
  if ((_DWORD)v11)
  {
    uint64_t v23 = v11;
    uint64_t v24 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      int v26 = 136446210;
      int v27 = "Memory Manager initialization failed\n";
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v26, 0xCu);
    }

    sub_1000AFE20(v23);
    goto LABEL_36;
  }

  sub_1001EE4DC(0LL, a2);
  if ((sub_1000B90B8(0LL) & 1) == 0)
  {
    uint64_t v12 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      int v26 = 136446210;
      int v27 = "Sniffer initialization failed\n";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v26, 0xCu);
    }
  }

  uint64_t v13 = sub_10010C538(0LL);
  if ((_DWORD)v13)
  {
LABEL_36:
    uint64_t v15 = v13;
    uint64_t v25 = (os_log_s *)sub_100086554(0x5Cu);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    int v26 = 136446210;
    int v27 = "Device Manager initialization failed\n";
    goto LABEL_44;
  }

  uint64_t v14 = sub_1000FC16C();
  uint64_t v15 = v14;
  if (!a1 && (_DWORD)v14 == 109)
  {
    do
    {
      sub_1000A8688();
      sub_1000B0964(100);
      sub_1000A85A0();
      uint64_t v16 = sub_1000FC208();
    }

    while ((_DWORD)v16 == 109);
    uint64_t v15 = v16;
  }

  if ((_DWORD)v15)
  {
    uint64_t v25 = (os_log_s *)sub_100086554(0x5Cu);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    int v26 = 136446210;
    int v27 = "Transport layer initialization failed\n";
    goto LABEL_44;
  }

  uint64_t v17 = sub_10011E114(0LL);
  if ((_DWORD)v17)
  {
    uint64_t v15 = v17;
    uint64_t v25 = (os_log_s *)sub_100086554(0x5Cu);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    int v26 = 136446210;
    int v27 = "OI_HCIAPI_Init_Vars failed\n";
    goto LABEL_44;
  }

  uint64_t v18 = sub_10018BEB4();
  if ((_DWORD)v18)
  {
    uint64_t v15 = v18;
    uint64_t v25 = (os_log_s *)sub_100086554(0x5Cu);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    int v26 = 136446210;
    int v27 = "BT VSC init failed\n";
LABEL_44:
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v26, 0xCu);
LABEL_45:
    sub_1000AFE20(v15);
  }

  if (a1)
  {
    off_1008F6CF0 = a1;
    uint64_t v19 = sub_10011E290((uint64_t)sub_100108EE8);
    if (!(_DWORD)v19) {
      return v19;
    }
  }

  else
  {
    for (uint64_t i = sub_10011E290(0LL); ; uint64_t i = sub_10011E32C())
    {
      uint64_t v19 = i;
      if ((_DWORD)i != 109) {
        break;
      }
      sub_1000A8688();
      sub_1000B0964(10);
      sub_1000A85A0();
    }

    if (!(_DWORD)i)
    {
      sub_100108EE8(0LL);
      return v19;
    }
  }

  uint64_t v21 = (os_log_s *)sub_100086554(0x5Cu);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    int v26 = 136446210;
    int v27 = "HCI initialization failed\n";
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v26, 0xCu);
  }

  if (!a4) {
    sub_1000B034C(v19, "HCI initialization failed");
  }
  a4(v19, "HCI initialization failed");
  return v19;
}

void sub_100108EE8(os_log_s *a1)
{
  if ((_DWORD)a1)
  {
    unsigned int v6 = a1;
    uint64_t v5 = (os_log_s *)sub_100086554(0x5Cu);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_23;
    }
    int v8 = 136446210;
    uint64_t v9 = "HCI initialization failed\n";
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v8, 0xCu);
    goto LABEL_23;
  }

  uint64_t v1 = sub_1001F01C4(0LL);
  if ((_DWORD)v1)
  {
    unsigned int v6 = (os_log_s *)v1;
    uint64_t v5 = (os_log_s *)sub_100086554(0x5Cu);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_23;
    }
    int v8 = 136446210;
    uint64_t v9 = "Policy Manager initialization failed\n";
    goto LABEL_22;
  }

  uint64_t v2 = sub_10017A328(0LL);
  if ((_DWORD)v2)
  {
    unsigned int v6 = (os_log_s *)v2;
    uint64_t v5 = (os_log_s *)sub_100086554(0x5Cu);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_23;
    }
    int v8 = 136446210;
    uint64_t v9 = "L2CAP initialization failed\n";
    goto LABEL_22;
  }

  uint64_t v3 = sub_1001E6024();
  if ((_DWORD)v3)
  {
    unsigned int v6 = (os_log_s *)v3;
    uint64_t v5 = (os_log_s *)sub_100086554(0x5Cu);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_23;
    }
    int v8 = 136446210;
    uint64_t v9 = "Security Manager initialization failed\n";
    goto LABEL_22;
  }

  uint64_t v4 = sub_1001BE00C();
  if ((_DWORD)v4)
  {
    unsigned int v6 = (os_log_s *)v4;
    uint64_t v5 = (os_log_s *)sub_100086554(0x5Cu);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 136446210;
      uint64_t v9 = "LE GAP initialization failed\n";
      goto LABEL_22;
    }

uint64_t sub_1001091A0()
{
  return 0LL;
}

BOOL sub_1001091CC(int a1, void *a2)
{
  HIDWORD(v6) = 0x100000;
  if (!a2) {
    sub_1001EE2A0();
  }
  LODWORD(v6) = a1;
  return *a2 == v6 && a2[1] == 0xFB349B5F80000080LL;
}

BOOL sub_100109250(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)a1 != 3 || *(_BYTE *)a2 != 3) {
    return 0LL;
  }
  int v2 = *(unsigned __int16 *)(a1 + 2);
  if (v2 == 2)
  {
LABEL_6:
    int v3 = *(_DWORD *)(a1 + 8);
    if (*(_WORD *)(a2 + 2) == 16) {
      return sub_1001091CC(v3, *(void **)(a2 + 8));
    }
    return v3 == *(_DWORD *)(a2 + 8);
  }

  if (v2 != 16)
  {
    if (v2 == 4) {
      goto LABEL_6;
    }
    return 0LL;
  }

  if (*(_WORD *)(a2 + 2) != 16) {
    return sub_1001091CC(*(_DWORD *)(a2 + 8), *(void **)(a1 + 8));
  }
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  uint64_t v5 = *(uint64_t **)(a2 + 8);
  uint64_t v7 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v9 = *v5;
  uint64_t v8 = v5[1];
  return v7 == v9 && v6 == v8;
}

uint64_t sub_1001092EC(uint64_t a1)
{
  __int128 v4 = xmmword_1006BCAA0;
  if (*(_BYTE *)a1 != 3) {
    return 0LL;
  }
  int v1 = *(unsigned __int16 *)(a1 + 2);
  if (v1 == 2) {
    return *(unsigned int *)(a1 + 8);
  }
  if (v1 != 16)
  {
    if (v1 == 4) {
      return *(unsigned int *)(a1 + 8);
    }
    return 0LL;
  }

  int v3 = *(unsigned int **)(a1 + 8);
  LODWORD(v4) = *v3;
  if (*(_OWORD *)v3 == v4) {
    return *v3;
  }
  else {
    return 0LL;
  }
}

const char *sub_1001093A0(uint64_t a1)
{
  if (*(_BYTE *)a1 != 3) {
    sub_1001EE2A0();
  }
  if (*(_WORD *)(a1 + 2) == 16) {
    return sub_1001EB74C(*(unsigned int **)(a1 + 8));
  }
  else {
    return sub_1001EBA4C(*(unsigned int *)(a1 + 8));
  }
}

uint64_t sub_1001093EC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2;
  if (*(_BYTE *)a2 == 32) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  sub_1001F4CCC(a1, a3);
  sub_1001F4A7C(a1, "<");
  uint64_t v6 = *(unsigned __int16 *)(a1 + 4);
  switch(*(_BYTE *)v4)
  {
    case 0:
      uint64_t v7 = "null";
      goto LABEL_9;
    case 1:
      uint64_t v10 = "uint";
      goto LABEL_16;
    case 2:
      uint64_t v10 = "sint";
      goto LABEL_16;
    case 3:
      uint64_t v10 = "uuid";
LABEL_16:
      sub_1001F4A7C(a1, v10);
      sub_1001F4DE8(a1, 8 * *(unsigned __int16 *)(v4 + 2));
      break;
    case 4:
      uint64_t v8 = "text";
      goto LABEL_21;
    case 5:
      if (*(_BYTE *)(v4 + 8)) {
        uint64_t v7 = "true";
      }
      else {
        uint64_t v7 = "false";
      }
LABEL_9:
      sub_1001F4A7C(a1, v7);
      uint64_t v9 = "/>\n";
      return sub_1001F4A7C(a1, v9);
    case 6:
      uint64_t v8 = "seq";
      goto LABEL_21;
    case 7:
      uint64_t v8 = "alt";
      goto LABEL_21;
    case 8:
      uint64_t v8 = "url";
      goto LABEL_21;
    case 0x11:
      uint64_t v8 = "bdaddr";
      goto LABEL_21;
    case 0x12:
      uint64_t v8 = "rawbytes";
      goto LABEL_21;
    case 0x13:
      uint64_t v8 = "status";
      goto LABEL_21;
    case 0x14:
      uint64_t v8 = "text16";
LABEL_21:
      sub_1001F4A7C(a1, v8);
      break;
    default:
      break;
  }

  __int16 v11 = *(_WORD *)(a1 + 4);
  sub_100109858(a1, (unsigned __int8 *)v4);
  sub_1001F4A7C(a1, ">");
  switch(*(_BYTE *)v4)
  {
    case 1:
    case 2:
      if (*(unsigned __int16 *)(v4 + 2) >= 5u)
      {
        sub_1001F4A7C(a1, "0x");
        uint64_t v12 = *(unsigned int **)(v4 + 8);
        if (*(_WORD *)(v4 + 2) == 8)
        {
          sub_1001F4D5C(a1, *v12, 8);
          unsigned int v13 = *(_DWORD *)(*(void *)(v4 + 8) + 4LL);
        }

        else
        {
          sub_1001F4D5C(a1, *v12, 8);
          sub_1001F4D5C(a1, *(_DWORD *)(*(void *)(v4 + 8) + 4LL), 8);
          sub_1001F4D5C(a1, *(_DWORD *)(*(void *)(v4 + 8) + 8LL), 8);
          unsigned int v13 = *(_DWORD *)(*(void *)(v4 + 8) + 12LL);
        }

        uint64_t v18 = a1;
        int v17 = 8;
        goto LABEL_48;
      }

      if (*(_BYTE *)v4 != 1) {
        goto LABEL_45;
      }
      sub_1001F4A7C(a1, "0x");
      unsigned int v13 = *(_DWORD *)(v4 + 8);
      unsigned int v15 = *(unsigned __int16 *)(v4 + 2);
      goto LABEL_44;
    case 3:
      sub_1001F4A7C(a1, "0x");
      unsigned int v15 = *(unsigned __int16 *)(v4 + 2);
      if (v15 > 4)
      {
        sub_1001F4D5C(a1, **(_DWORD **)(v4 + 8), 8);
        sub_1001F4A7C(a1, ",");
        for (uint64_t i = 4LL; i != 16; ++i)
        {
          sub_1001F4D5C(a1, *(unsigned __int8 *)(*(void *)(v4 + 8) + i), 2);
          unsigned int v20 = (i - 4);
          if (v20 <= 5 && ((1 << v20) & 0x2A) != 0) {
            sub_1001F4A7C(a1, ",");
          }
        }
      }

      else
      {
        unsigned int v13 = *(_DWORD *)(v4 + 8);
LABEL_44:
        int v17 = 2 * v15;
        uint64_t v18 = a1;
LABEL_48:
        sub_1001F4D5C(v18, v13, v17);
      }

      break;
    case 4:
    case 8:
      sub_1001F494C(a1, *(char **)(v4 + 8), *(unsigned __int16 *)(v4 + 2));
      break;
    case 6:
    case 7:
      sub_1001F4A7C(a1, "\n");
      if (*(_WORD *)(v4 + 2))
      {
        int v14 = 0;
        do
          sub_1001093EC(a1, *(void *)(v4 + 8) + 16LL * v14++, (a3 + 4));
        while (*(unsigned __int16 *)(v4 + 2) > v14);
      }

      goto LABEL_40;
    case 0x11:
      for (uint64_t j = 0LL; j != 6; ++j)
      {
        if (j) {
          sub_1001F4A7C(a1, ":");
        }
        sub_1001F4D5C(a1, *(unsigned __int8 *)(*(void *)(v4 + 8) + j), 2);
      }

      break;
    case 0x12:
      sub_1001099B4(a1, *(void *)(v4 + 8), *(unsigned __int16 *)(v4 + 2), (a3 + 4));
      goto LABEL_40;
    case 0x13:
LABEL_45:
      sub_1001F4DE8(a1, *(_DWORD *)(v4 + 8));
      break;
    case 0x14:
      sub_1001098F8(a1, *(void *)(v4 + 8), *(unsigned __int16 *)(v4 + 2), (a3 + 4));
LABEL_40:
      sub_1001F4CCC(a1, a3);
      break;
    default:
      sub_1001F4A7C(a1, "!!!Corrupt Data Element!!!");
      break;
  }

  sub_1001F4A7C(a1, "</");
  sub_1001F494C(a1, (char *)(*(void *)(a1 + 8) + v6), (unsigned __int16)(v11 - v6));
  sub_1001F4A7C(a1, ">");
  uint64_t v9 = "\n";
  return sub_1001F4A7C(a1, v9);
}

uint64_t sub_100109858(uint64_t a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  if (v3 == 3)
  {
    uint64_t v4 = sub_1001EBA4C(*((unsigned int *)a2 + 2));
  }

  else
  {
    if (v3 != 19) {
      return 0LL;
    }
    sub_1001F142C(*((unsigned int *)a2 + 2));
  }

  uint64_t v5 = (char *)v4;
  if (v4)
  {
    sub_1001F4A7C(a1, " id=");
    sub_1001F4A7C(a1, v5);
    sub_1001F4A7C(a1, "");
    sub_1001F4A7C(a1, "\t");
    return 1LL;
  }

  return 0LL;
}

uint64_t sub_1001098F8(uint64_t a1, uint64_t a2, int a3, int a4)
{
  if (a3)
  {
    uint64_t v8 = 0LL;
    do
    {
      if (v8 && (v8 & 0xF) == 0)
      {
        sub_1001F4A7C(a1, "\n");
        sub_1001F4CCC(a1, a4);
      }

      sub_1001F4D5C(a1, *(unsigned __int16 *)(a2 + 2 * v8), 4);
      sub_1001F4CCC(a1, 1);
      ++v8;
    }

    while (a3 != v8);
  }

  return sub_1001F4A7C(a1, "\n");
}

uint64_t sub_1001099B4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  if (a3)
  {
    uint64_t v8 = 0LL;
    do
    {
      if (v8 && (v8 & 0x1F) == 0)
      {
        sub_1001F4A7C(a1, "\n");
        sub_1001F4CCC(a1, a4);
      }

      sub_1001F4D5C(a1, *(unsigned __int8 *)(a2 + v8), 2);
      sub_1001F4CCC(a1, 1);
      ++v8;
    }

    while (a3 != v8);
  }

  return sub_1001F4A7C(a1, "\n");
}

uint64_t sub_100109A70(uint64_t a1, uint64_t a2, int a3)
{
  if (*(_BYTE *)a2 == 32) {
    a2 = *(void *)(a2 + 8);
  }
  sub_1001F4CCC(a1, a3);
  uint64_t v6 = "null";
  switch(*(_BYTE *)a2)
  {
    case 0:
      return sub_1001F4A7C(a1, v6);
    case 1:
      uint64_t v7 = "uint";
      goto LABEL_14;
    case 2:
      uint64_t v7 = "sint";
      goto LABEL_14;
    case 3:
      uint64_t v7 = "uuid";
LABEL_14:
      sub_1001F4A7C(a1, v7);
      sub_1001F4DE8(a1, 8 * *(unsigned __int16 *)(a2 + 2));
      break;
    case 4:
      uint64_t v8 = "text";
      goto LABEL_19;
    case 5:
      if (*(_BYTE *)(a2 + 8)) {
        uint64_t v6 = "true";
      }
      else {
        uint64_t v6 = "false";
      }
      return sub_1001F4A7C(a1, v6);
    case 6:
      uint64_t v8 = "seq";
      goto LABEL_19;
    case 7:
      uint64_t v8 = "alt";
      goto LABEL_19;
    case 8:
      uint64_t v8 = "url";
      goto LABEL_19;
    case 0x11:
      uint64_t v8 = "bdaddr";
      goto LABEL_19;
    case 0x12:
      uint64_t v8 = "rawbytes";
      goto LABEL_19;
    case 0x13:
      uint64_t v8 = "status";
      goto LABEL_19;
    case 0x14:
      uint64_t v8 = "text16";
LABEL_19:
      sub_1001F4A7C(a1, v8);
      break;
    default:
      break;
  }

  sub_1001F4CCC(a1, 3);
  int v9 = sub_100109858(a1, (unsigned __int8 *)a2);
  if (v9) {
    sub_1001F4A7C(a1, "(");
  }
  switch(*(_BYTE *)a2)
  {
    case 1:
    case 2:
      if (*(unsigned __int16 *)(a2 + 2) >= 5u)
      {
        sub_1001F4A7C(a1, "0x");
        uint64_t v10 = *(unsigned int **)(a2 + 8);
        if (*(_WORD *)(a2 + 2) == 8)
        {
          sub_1001F4D5C(a1, *v10, 8);
          unsigned int v11 = *(_DWORD *)(*(void *)(a2 + 8) + 4LL);
        }

        else
        {
          sub_1001F4D5C(a1, *v10, 8);
          sub_1001F4D5C(a1, *(_DWORD *)(*(void *)(a2 + 8) + 4LL), 8);
          sub_1001F4D5C(a1, *(_DWORD *)(*(void *)(a2 + 8) + 8LL), 8);
          unsigned int v11 = *(_DWORD *)(*(void *)(a2 + 8) + 12LL);
        }

        uint64_t v16 = a1;
        int v15 = 8;
        goto LABEL_48;
      }

      if (*(_BYTE *)a2 != 1) {
        goto LABEL_45;
      }
      sub_1001F4A7C(a1, "0x");
      unsigned int v11 = *(_DWORD *)(a2 + 8);
      unsigned int v13 = *(unsigned __int16 *)(a2 + 2);
      goto LABEL_44;
    case 3:
      sub_1001F4A7C(a1, "0x");
      unsigned int v13 = *(unsigned __int16 *)(a2 + 2);
      if (v13 > 4)
      {
        sub_1001F4D5C(a1, **(_DWORD **)(a2 + 8), 8);
        sub_1001F4A7C(a1, ",");
        for (uint64_t i = 4LL; i != 16; ++i)
        {
          sub_1001F4D5C(a1, *(unsigned __int8 *)(*(void *)(a2 + 8) + i), 2);
          unsigned int v18 = (i - 4);
          if (v18 <= 5 && ((1 << v18) & 0x2A) != 0) {
            sub_1001F4A7C(a1, ",");
          }
        }
      }

      else
      {
        unsigned int v11 = *(_DWORD *)(a2 + 8);
LABEL_44:
        int v15 = 2 * v13;
        uint64_t v16 = a1;
LABEL_48:
        sub_1001F4D5C(v16, v11, v15);
      }

      break;
    case 4:
    case 8:
      sub_1001F494C(a1, *(char **)(a2 + 8), *(unsigned __int16 *)(a2 + 2));
      break;
    case 6:
    case 7:
      sub_1001F4A7C(a1, "\n");
      if (*(_WORD *)(a2 + 2))
      {
        int v12 = 0;
        do
          sub_100109A70(a1, *(void *)(a2 + 8) + 16LL * v12++, (a3 + 4), 0LL);
        while (*(unsigned __int16 *)(a2 + 2) > v12);
      }

      goto LABEL_40;
    case 0x11:
      for (uint64_t j = 0LL; j != 6; ++j)
      {
        if (j) {
          sub_1001F4A7C(a1, ":");
        }
        sub_1001F4D5C(a1, *(unsigned __int8 *)(*(void *)(a2 + 8) + j), 2);
      }

      break;
    case 0x12:
      sub_1001099B4(a1, *(void *)(a2 + 8), *(unsigned __int16 *)(a2 + 2), (a3 + 4));
      goto LABEL_40;
    case 0x13:
LABEL_45:
      sub_1001F4DE8(a1, *(_DWORD *)(a2 + 8));
      break;
    case 0x14:
      sub_1001098F8(a1, *(void *)(a2 + 8), *(unsigned __int16 *)(a2 + 2), (a3 + 4));
LABEL_40:
      sub_1001F4CCC(a1, a3);
      break;
    default:
      sub_1001F4A7C(a1, "!!!Corrupt Data Element!!!");
      break;
  }

  if (v9) {
    sub_1001F4A7C(a1, ")");
  }
  uint64_t v6 = "\n";
  return sub_1001F4A7C(a1, v6);
}

void sub_100109EA8(uint64_t a1, char *__s)
{
  v8[0] = 0LL;
  v8[1] = 0LL;
  __int16 v4 = strlen(__s);
  sub_1001F48C8((uint64_t)v8, (unsigned __int16)(v4 + 1));
  sub_1001F4A7C((uint64_t)v8, "\n");
  unsigned __int16 v5 = strlen(__s);
  sub_1001F494C((uint64_t)v8, __s, v5);
  sub_100109A70((uint64_t)v8, a1, 5);
  uint64_t v6 = (os_log_s *)sub_100086554(0x5Cu);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = sub_1001F5F50((uint64_t)v8);
    *(_DWORD *)int buf = 136446210;
    uint64_t v10 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%{public}s", buf, 0xCu);
  }

  sub_1001F4914((uint64_t)v8);
}

uint64_t sub_100109FB0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  __int128 ptr = xmmword_1006BCB98;
  uint64_t v84 = 0LL;
  LOWORD(ptr) = 0;
  int v4 = *(unsigned __int16 *)(a1 + 10);
  int v5 = *(unsigned __int16 *)(a1 + 12);
  unsigned __int16 v6 = v4 - v5;
  if (v4 == v5)
  {
    p___int128 ptr = &ptr;
LABEL_3:
    if ((_DWORD)a2) {
      sub_1001EE2A0();
    }
    goto LABEL_5;
  }

  p___int128 ptr = &ptr;
  while (2)
  {
    int v11 = *a3;
    if (v11 == 32)
    {
      a3 = (unsigned __int8 *)*((void *)a3 + 1);
      int v11 = *a3;
    }

    uint64_t v12 = *((unsigned __int16 *)a3 + 1);
    switch(v11)
    {
      case 0:
        if ((_DWORD)a2)
        {
          a2 = (a2 - 1);
        }

        else
        {
          if (*(_BYTE *)(a1 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
LABEL_160:
            uint64_t v78 = "ByteStream_NumReadBytesAvail(*ByteStream) >= 1";
LABEL_162:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  174,  v78);
          }

          if (*(_BYTE *)(a1 + 14) != 2)
          {
            uint64_t v78 = "(*ByteStream).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_162;
          }

          a2 = 0LL;
          uint64_t v44 = *(void *)a1;
          *(_WORD *)(a1 + 12) = v5 + 1;
          *(_BYTE *)(v44 + (unsigned __int16)v5) = 0;
        }

        goto LABEL_106;
      case 1:
      case 2:
      case 5:
      case 19:
        goto LABEL_12;
      case 3:
        if ((_DWORD)v12 == 4)
        {
          if (*((_DWORD *)a3 + 2) >= 0x10000u) {
            LODWORD(v12) = 4;
          }
          else {
            LODWORD(v12) = 2;
          }
        }

LABEL_122:
        if ((a2 & 0x80000000) != 0) {
          sub_1001EE2A0();
        }
        return a2;
      case 20:
        uint64_t v30 = sub_10010ABC8((uint64_t *)a1, a2, 2 * (int)v12, 20);
        if ((_DWORD)v30 == -1) {
          goto LABEL_5;
        }
        a2 = v30;
        if (!(_DWORD)v12) {
          goto LABEL_106;
        }
        uint64_t v31 = 0LL;
        unsigned __int16 v32 = *(_WORD *)(a1 + 12);
        unsigned __int16 v33 = *(_WORD *)(a1 + 10) - v32;
        while (1)
        {
          if ((_DWORD)a2)
          {
            a2 = (a2 - 2);
          }

          else
          {
            if (v33 < 2u) {
              goto LABEL_5;
            }
            if (*(_BYTE *)(a1 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
LABEL_130:
              uint64_t v70 = "ByteStream_NumReadBytesAvail(*ByteStream) >= 2";
LABEL_131:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  301,  v70);
            }

            if (*(_BYTE *)(a1 + 14) != 2)
            {
              uint64_t v70 = "(*ByteStream).__RWFlag == BYTESTREAM_WRITE";
              goto LABEL_131;
            }

            a2 = 0LL;
            *(_BYTE *)(*(void *)a1 + v32 + 1LL) = *(_BYTE *)(*((void *)a3 + 1) + v31);
            *(_BYTE *)(*(void *)a1 + *(unsigned __int16 *)(a1 + 12)) = *(_BYTE *)(*((void *)a3 + 1) + v31 + 1);
            unsigned __int16 v32 = *(_WORD *)(a1 + 12) + 2;
            *(_WORD *)(a1 + 12) = v32;
            v33 -= 2;
          }

          v31 += 2LL;
          if (2 * v12 == v31) {
            goto LABEL_106;
          }
        }

      default:
LABEL_67:
        sub_1001EE2A0();
        goto LABEL_106;
    }
  }

  int v55 = sub_100404FE8();
  v91[0] = _NSConcreteStackBlock;
  v91[1] = 3321888768LL;
  v91[2] = sub_1005CDACC;
  v91[3] = &unk_1008A3398;
  unsigned int v92 = v5;
  if ((char)a3[23] < 0)
  {
    sub_100024238(&v93, *(void **)a3, *((void *)a3 + 1));
  }

  else
  {
    uint64_t v93 = *(_OWORD *)a3;
    uint64_t v94 = *((void *)a3 + 2);
  }

  sub_100405384(v55, v91);
  if (SHIBYTE(v94) < 0) {
    operator delete((void *)v93);
  }

  int v19 = a3[23];
LABEL_128:
  if ((v19 & 0x80) == 0)
  {
LABEL_129:
    if (v19 != 9) {
      goto LABEL_138;
    }
    uint64_t v56 = a3;
    goto LABEL_133;
  }

  if (*((void *)a3 + 1) != 9LL) {
    goto LABEL_141;
  }
  uint64_t v56 = *(unsigned __int8 **)a3;
LABEL_133:
  uint64_t v57 = *(void *)v56;
  uint64_t v58 = v56[8];
  if (v57 == 0x73756F4D454C7349LL && v58 == 101)
  {
    uint64_t v61 = sub_100404FE8();
    v88[0] = _NSConcreteStackBlock;
    v88[1] = 3221225472LL;
    v88[2] = sub_1005CDB80;
    v88[3] = &unk_1008800B8;
    uint64_t v90 = a1;
    int v89 = v5;
    sub_100405384(v61, v88);

    int v19 = a3[23];
    if ((v19 & 0x80) == 0)
    {
LABEL_138:
      unsigned int v60 = (uint64_t *)a3;
      if (v19 != 17) {
        goto LABEL_153;
      }
      goto LABEL_143;
    }
  }

  else if ((v19 & 0x80) == 0)
  {
    goto LABEL_138;
  }

uint64_t sub_10010AAD0(uint64_t a1, uint64_t a2, int a3)
{
  if ((_DWORD)a2 != -1)
  {
    uint64_t v3 = *(unsigned __int16 *)(a1 + 12);
    int v4 = *(unsigned __int16 *)(a1 + 10) - (_DWORD)v3;
    if ((v4 & 0xFFFC) == 0) {
      return 0xFFFFFFFFLL;
    }
    if (*(_BYTE *)(a1 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
    }

    else if (v4 > 3)
    {
      if (*(_BYTE *)(a1 + 14) == 2)
      {
        *(_BYTE *)(*(void *)a1 + v3 + 3) = a3;
        *(_BYTE *)(*(void *)a1 + *(unsigned __int16 *)(a1 + 12) + 2LL) = BYTE1(a3);
        *(_BYTE *)(*(void *)a1 + *(unsigned __int16 *)(a1 + 12) + 1LL) = BYTE2(a3);
        *(_BYTE *)(*(void *)a1 + *(unsigned __int16 *)(a1 + 12)) = HIBYTE(a3);
        *(_WORD *)(a1 + 12) += 4;
        return a2;
      }

      unsigned __int16 v6 = "(*ByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_14:
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  119,  v6);
    }

    unsigned __int16 v6 = "ByteStream_NumReadBytesAvail(*ByteStream) >= 4";
    goto LABEL_14;
  }

  return a2;
}

uint64_t sub_10010ABC8(uint64_t *a1, int a2, unsigned int a3, char a4)
{
  if (a3 > 0xFFFE) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v4 = *((unsigned __int16 *)a1 + 6);
  int v5 = *((unsigned __int16 *)a1 + 5) - (_DWORD)v4;
  if (a3 < 0x100)
  {
    if ((v5 & 0xFFFE) == 0) {
      return 0xFFFFFFFFLL;
    }
    if (a2)
    {
      uint64_t v6 = (a2 - 2);
      if (a2 - 2 >= 0) {
        return v6;
      }
      return 0xFFFFFFFFLL;
    }

    if (*((_BYTE *)a1 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
    }

    else if (v5 > 0)
    {
      if (*((_BYTE *)a1 + 14) == 2)
      {
        uint64_t v8 = *a1;
        *((_WORD *)a1 + 6) = v4 + 1;
        *(_BYTE *)(v8 + v4) = (8 * a4) | 5;
        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
        }

        else
        {
          uint64_t v9 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v9)
          {
            if (*((_BYTE *)a1 + 14) == 2)
            {
              uint64_t v6 = 0LL;
              uint64_t v10 = *a1;
              *((_WORD *)a1 + 6) = v9 + 1;
              *(_BYTE *)(v10 + v9) = a3;
              return v6;
            }

            unsigned int v14 = "(*ByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  92,  v14);
          }
        }

        unsigned int v14 = "ByteStream_NumReadBytesAvail(*ByteStream) >= 1";
        goto LABEL_33;
      }

      unsigned int v13 = "(*ByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  91,  v13);
    }

    unsigned int v13 = "ByteStream_NumReadBytesAvail(*ByteStream) >= 1";
    goto LABEL_29;
  }

  if (!a2)
  {
    if (*((_BYTE *)a1 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
    }

    else if (v5 > 0)
    {
      if (*((_BYTE *)a1 + 14) == 2)
      {
        uint64_t v11 = *a1;
        *((_WORD *)a1 + 6) = v4 + 1;
        *(_BYTE *)(v11 + v4) = (8 * a4) | 6;
        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
        }

        else
        {
          uint64_t v12 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) - (int)v12 > 1)
          {
            if (*((_BYTE *)a1 + 14) == 2)
            {
              uint64_t v6 = 0LL;
              *(_BYTE *)(*a1 + v12 + 1) = a3;
              *(_BYTE *)(*a1 + *((unsigned __int16 *)a1 + 6)) = BYTE1(a3);
              *((_WORD *)a1 + 6) += 2;
              return v6;
            }

            size_t v16 = "(*ByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  79,  v16);
          }
        }

        size_t v16 = "ByteStream_NumReadBytesAvail(*ByteStream) >= 2";
        goto LABEL_41;
      }

      uint64_t v15 = "(*ByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  78,  v15);
    }

    uint64_t v15 = "ByteStream_NumReadBytesAvail(*ByteStream) >= 1";
    goto LABEL_37;
  }

  uint64_t v6 = (a2 - 3);
  if (a2 - 3 < 0) {
    return 0xFFFFFFFFLL;
  }
  return v6;
}

uint64_t sub_10010AE3C(unsigned __int8 *a1)
{
  __int128 ptr = xmmword_1006BCB98;
  uint64_t v28 = 0LL;
  __int16 v2 = 1;
  p___int128 ptr = &ptr;
LABEL_2:
  *(_WORD *)p___int128 ptr = v2 - 1;
  __int16 v4 = *((_WORD *)p_ptr + 1) + 1;
  *((_WORD *)p_ptr + 1) = v4;
  int v5 = *a1;
  if (v5 == 32)
  {
    a1 = (unsigned __int8 *)*((void *)a1 + 1);
    int v5 = *a1;
  }

  unsigned int v6 = *((unsigned __int16 *)a1 + 1);
  switch(v5)
  {
    case 0:
      goto LABEL_24;
    case 1:
    case 2:
    case 5:
    case 19:
      goto LABEL_5;
    case 3:
      if (v6 == 4)
      {
        if (*((_DWORD *)a1 + 2) >= 0x10000u) {
          LOWORD(v6) = 4;
        }
        else {
          LOWORD(v6) = 2;
        }
      }

BOOL sub_10010B0BC(uint64_t a1, unsigned __int8 *a2)
{
  return sub_100109FB0(a1, 0LL, a2) == 0;
}

BOOL sub_10010B0E0(uint64_t a1, _WORD *a2, unsigned __int8 *a3)
{
  int v4 = sub_100109FB0(a1, (unsigned __int16)*a2, a3);
  if (v4 == -1) {
    __int16 v5 = 0;
  }
  else {
    __int16 v5 = v4;
  }
  *a2 = v5;
  return v4 != -1;
}

uint64_t sub_10010B118(uint64_t a1, _BYTE *a2, __int16 *a3)
{
  if (*(_BYTE *)(a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  782,  "(*ByteStream).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v4 = *(unsigned __int16 *)(a1 + 12);
  if (*(_BYTE *)(a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
LABEL_8:
    *(_BYTE *)(a1 + 15) = 1;
    uint64_t result = 843LL;
    goto LABEL_9;
  }

  uint64_t v6 = *(void *)a1;
  *(_WORD *)(a1 + 12) = v4 + 1;
  unsigned int v7 = *(unsigned __int8 *)(v6 + v4);
  *a2 = v7 >> 3;
  if (a3)
  {
    if (v7 >= 8)
    {
      int v10 = sub_10010B244((uint64_t *)a1, v7 & 7);
      *a3 = v10;
      int v11 = *(unsigned __int16 *)(a1 + 12);
      __int16 v8 = v10 - v4 + v11;
    }

    else
    {
      __int16 v8 = 1;
    }

    *a3 = v8;
  }

  if (*(_BYTE *)(a1 + 15)) {
    uint64_t result = 843LL;
  }
  else {
    uint64_t result = 0LL;
  }
LABEL_9:
  if (v4 > *(unsigned __int16 *)(a1 + 10)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  806,  "(size_t)(pos) <= (size_t)((*ByteStream).__size)");
  }
  *(_WORD *)(a1 + 12) = v4;
  return result;
}

uint64_t sub_10010B244(uint64_t *a1, int a2)
{
  uint64_t result = 1LL;
  switch(a2)
  {
    case 0:
      return result;
    case 1:
      return 2LL;
    case 2:
      return 4LL;
    case 3:
      return 8LL;
    case 4:
      return 16LL;
    case 5:
      if (*((_BYTE *)a1 + 14) != 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  589,  "(*ByteStream).__RWFlag == BYTESTREAM_READ");
      }
      if (*((_BYTE *)a1 + 15)) {
        goto LABEL_17;
      }
      uint64_t v12 = *((unsigned __int16 *)a1 + 6);
      uint64_t v13 = *a1;
      *((_WORD *)a1 + 6) = v12 + 1;
      return *(unsigned __int8 *)(v13 + v12);
    case 6:
      if (*((_BYTE *)a1 + 14) != 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  596,  "(*ByteStream).__RWFlag == BYTESTREAM_READ");
      }
      if (*((_BYTE *)a1 + 15)) {
        goto LABEL_17;
      }
      uint64_t v16 = *((unsigned __int16 *)a1 + 6);
      uint64_t result = bswap32(*(unsigned __int16 *)(*a1 + v16)) >> 16;
      __int16 v15 = v16 + 2;
      goto LABEL_26;
    case 7:
      if (*((_BYTE *)a1 + 14) != 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  603,  "(*ByteStream).__RWFlag == BYTESTREAM_READ");
      }
      if (*((_BYTE *)a1 + 15))
      {
LABEL_17:
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
LABEL_18:
        uint64_t result = 0LL;
        *((_BYTE *)a1 + 15) = 1;
        return result;
      }

      uint64_t v14 = *((unsigned __int16 *)a1 + 6);
      uint64_t result = bswap32(*(unsigned __int16 *)(*a1 + v14 + 2)) >> 16;
      __int16 v15 = v14 + 4;
LABEL_26:
      *((_WORD *)a1 + 6) = v15;
      return result;
    default:
      *((_BYTE *)a1 + 15) = 1;
      uint64_t result = sub_1000A86F0();
      if ((_DWORD)result)
      {
        sub_1001EE134((uint64_t)"Bad dataelement size index", v4, v5, v6, v7, v8, v9, v10, v17);
        int v11 = (os_log_s *)sub_100086554(0x2Bu);
        uint64_t result = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);
        if ((_DWORD)result)
        {
          sub_10065B830();
          return 0LL;
        }
      }

      return result;
  }

uint64_t sub_10010B44C(uint64_t a1, _WORD *a2, _WORD *a3)
{
  if (*(_BYTE *)(a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  818,  "(*ByteStream).__RWFlag == BYTESTREAM_READ");
  }
  if (*(_BYTE *)(a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
LABEL_10:
    *(_BYTE *)(a1 + 15) = 1;
    return 843LL;
  }

  uint64_t v4 = *(unsigned __int16 *)(a1 + 12);
  uint64_t v5 = *(void *)a1;
  *(_WORD *)(a1 + 12) = v4 + 1;
  char v6 = *(_BYTE *)(v5 + v4);
  if ((v6 & 0xF0) != 0x30) {
    return 808LL;
  }
  int v7 = v6 & 7;
  *a2 = 0x500030002uLL >> (16 * (v7 - 5));
  *a3 = sub_10010B244((uint64_t *)a1, v7);
  if (*(_BYTE *)(a1 + 15)) {
    return 843LL;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_10010B540(uint64_t *a1, uint64_t a2, char a3)
{
  for (uint64_t i = a2; *(_BYTE *)i == 33; i += 16LL)
  {
    uint64_t i = *(void *)(i + 8);
LABEL_78:
    BOOL v14 = i == a2;
    if (v14) {
      return 0LL;
    }
  }

  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  873,  "(*ByteStream).__RWFlag == BYTESTREAM_READ");
  }
  if (!*((_BYTE *)a1 + 15))
  {
    unsigned int v7 = *((unsigned __int16 *)a1 + 5);
    uint64_t v8 = *((unsigned __int16 *)a1 + 6);
    uint64_t v9 = *a1;
    uint64_t v10 = v8 + 1;
    *((_WORD *)a1 + 6) = v8 + 1;
    uint64_t v11 = *(unsigned __int8 *)(v9 + v8);
    unsigned int v12 = v11 >> 3;
    *(_BYTE *)uint64_t i = *(_BYTE *)(v9 + v8) >> 3;
    if (!(_DWORD)v11)
    {
      *(_WORD *)(i + 2) = 0;
      goto LABEL_78;
    }

    if ((a3 & 1) == 0 && v12 - 17 <= 3)
    {
      sub_1001EE134((uint64_t)"Reserved BHAPI Desc Rxed, discarded: %2x\n", v49, v50, v51, v52, v53, v54, v55, v11);
      uint64_t v56 = (os_log_s *)sub_100086554(0x2Bu);
      if (!os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
        return 808LL;
      }
      goto LABEL_96;
    }

    unsigned int v13 = v11 & 7;
    switch(v12)
    {
      case 0u:
      case 5u:
        if ((v11 & 7) != 0) {
          return 808LL;
        }
LABEL_21:
        if (v7 <= (unsigned __int16)v10)
        {
          int v15 = 0;
          *((_BYTE *)a1 + 15) = 1;
        }

        else
        {
          *((_WORD *)a1 + 6) = v8 + 2;
          int v15 = *(unsigned __int8 *)(v9 + v10);
        }

        *(_DWORD *)(i + 8) = v15;
        *(_WORD *)(i + 2) = 1;
        goto LABEL_77;
      case 1u:
      case 2u:
      case 0x13u:
        break;
      case 3u:
        BOOL v14 = (v11 & 7) == 0 || v13 == 3;
        if (!v14) {
          break;
        }
        return 808LL;
      case 4u:
      case 6u:
      case 7u:
      case 8u:
      case 0x11u:
      case 0x12u:
      case 0x14u:
        if (v13 < 5) {
          return 808LL;
        }
        break;
      default:
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Reserved Elem Desc Rxed, discarded: %2x\n", v57, v58, v59, v60, v61, v62, v63, v11);
          uint64_t v64 = (os_log_s *)sub_100086554(0x2Bu);
          if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR)) {
            goto LABEL_96;
          }
        }

        return 808LL;
    }

    switch(v11 & 7)
    {
      case 0LL:
        goto LABEL_21;
      case 1LL:
        if ((int)(v7 - (unsigned __int16)v10) < 2)
        {
          unsigned int v16 = 0;
          *((_BYTE *)a1 + 15) = 1;
        }

        else
        {
          unsigned int v16 = __rev16(*(unsigned __int16 *)(v9 + v10));
          *((_WORD *)a1 + 6) = v8 + 3;
        }

        *(_DWORD *)(i + 8) = v16;
        __int16 v22 = 2;
        goto LABEL_44;
      case 2LL:
        if ((int)(v7 - (unsigned __int16)v10) < 4)
        {
          unsigned int v17 = 0;
          *((_BYTE *)a1 + 15) = 1;
        }

        else
        {
          unsigned int v17 = bswap32(*(_DWORD *)(v9 + v10));
          *((_WORD *)a1 + 6) = v8 + 5;
        }

        *(_DWORD *)(i + 8) = v17;
        __int16 v22 = 4;
LABEL_44:
        *(_WORD *)(i + 2) = v22;
        goto LABEL_77;
      case 3LL:
        uint64_t v18 = sub_1000B17F4(8uLL);
        *(void *)(i + 8) = v18;
        if (!v18) {
          return 106LL;
        }
        if (*((_BYTE *)a1 + 14) != 1) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  988,  "(*ByteStream).__RWFlag == BYTESTREAM_READ");
        }
        if (*((_BYTE *)a1 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
          int v19 = *((unsigned __int8 *)a1 + 14);
          *((_BYTE *)a1 + 15) = 1;
          if (v19 != 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  989,  "(*ByteStream).__RWFlag == BYTESTREAM_READ");
          }
          goto LABEL_65;
        }

        uint64_t v24 = *((unsigned __int16 *)a1 + 6);
        if (*((unsigned __int16 *)a1 + 5) - (int)v24 <= 3)
        {
          *((_BYTE *)a1 + 15) = 1;
LABEL_65:
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
          goto LABEL_66;
        }

        *uint64_t v18 = bswap32(*(_DWORD *)(*a1 + v24));
        *((_WORD *)a1 + 6) = v24 + 4;
        if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v24 + 4) >= 4)
        {
          *(_DWORD *)(*(void *)(i + 8) + 4LL) = bswap32(*(_DWORD *)(*a1 + (unsigned __int16)(v24 + 4)));
          *((_WORD *)a1 + 6) = v24 + 8;
          goto LABEL_67;
        }

LABEL_74:
                *((_BYTE *)a1 + 15) = 1;
LABEL_75:
                __int16 v36 = 16;
LABEL_76:
                *(_WORD *)(i + 2) = v36;
LABEL_77:
                if (!*((_BYTE *)a1 + 15)) {
                  goto LABEL_78;
                }
                sub_1001EE134((uint64_t)"Unmarshal error", v41, v42, v43, v44, v45, v46, v47, v65);
                uint64_t v48 = (os_log_s *)sub_100086554(0x2Bu);
                if (!os_log_type_enabled(v48, OS_LOG_TYPE_ERROR)) {
                  return 808LL;
                }
LABEL_96:
                sub_10065B830();
                return 808LL;
              }

              *((_BYTE *)a1 + 15) = 1;
LABEL_73:
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
              goto LABEL_74;
            }

            *((_BYTE *)a1 + 15) = 1;
LABEL_72:
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
            int v38 = *((unsigned __int8 *)a1 + 14);
            *((_BYTE *)a1 + 15) = 1;
            if (v38 != 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  1009,  "(*ByteStream).__RWFlag == BYTESTREAM_READ");
            }
            goto LABEL_73;
          }

          *((_BYTE *)a1 + 15) = 1;
        }

        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
        int v37 = *((unsigned __int8 *)a1 + 14);
        *((_BYTE *)a1 + 15) = 1;
        if (v37 != 1) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c",  1008,  "(*ByteStream).__RWFlag == BYTESTREAM_READ");
        }
        goto LABEL_72;
      default:
        return 808LL;
    }
  }

  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/dataelem/marshaller.c");
LABEL_84:
  *((_BYTE *)a1 + 15) = 1;
  return 808LL;
}

      v57[72] = v44;
      v57[73] = v46;
      uint64_t v18 = sub_100184F74(*(__int128 **)v57, (char *)buf, 2uLL, 0);
      if ((_DWORD)v18) {
        sub_100184BB0(v57, v18, 1);
      }
      else {
        sub_100185420((uint64_t)v57, 16);
      }
      return v18;
    }

    uint64_t v57 = sub_100185244(a1);
    if (v57) {
      goto LABEL_74;
    }
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Could not allocate a pairing record for handle 0x%x",  v83,  v84,  v85,  v86,  v87,  v88,  v89,  a1);
      uint64_t v90 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v90, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    return 104LL;
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"You cannot send this command when central.", v75, v76, v77, v78, v79, v80, v81, v91);
      uint64_t v82 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 4822LL;
  }

  uint64_t v28 = objc_autoreleasePoolPush();
  if ((_BYTE)v50)
  {
    uint64_t v29 = sub_1000B9B18();
    unint64_t v30 = (os_log_s *)qword_1008F7578;
    if (v29)
    {
      if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "Successfully started HCI tracing", buf, 2u);
      }
    }

    else if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_ERROR))
    {
      sub_100668DF8();
    }
  }

  else
  {
    __int16 v31 = CFDateFormatterCreate(kCFAllocatorDefault, 0LL, kCFDateFormatterShortStyle, kCFDateFormatterFullStyle);
    CFDateFormatterSetFormat(v31, @"yyyy_MM_dd-HH_mm_ss");
    int v32 = +[NSDate date];
    StringWithDate = CFDateFormatterCreateStringWithDate(kCFAllocatorDefault, v31, v32);
    if (v9) {
      __int16 v34 = @"%@/bluetoothd-hcilite-%@.pklg";
    }
    else {
      __int16 v34 = @"%@/bluetoothd-hci-%@.pklg";
    }
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  v34,  qword_1008EFC48,  StringWithDate));
    CFRelease(v31);
    __int16 v36 = v35;
    sub_1000B9FCC((uint64_t)[v36 UTF8String]);
    int v37 = (os_log_s *)qword_1008F7578;
    if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "Successfully stopped HCI tracing", buf, 2u);
    }

    CFRelease(StringWithDate);
  }

  objc_autoreleasePoolPop(v28);
  if ((v53[7] & 0x80000000) != 0) {
    operator delete(__p);
  }
}

      if (__p)
      {
        uint64_t v39 = (uint64_t *)__p;
        operator delete(__p);
      }

      sub_100242FAC((uint64_t)v41);
    }
  }

  return sub_100242CD8(&v44);
}

void sub_10010C23C(unsigned __int8 *a1)
{
  int v2 = 0;
  char v3 = 0;
  uint64_t v4 = a1;
  uint64_t v5 = a1;
LABEL_2:
  while (2)
  {
    int v6 = v2 + 1;
    unsigned int v7 = v5;
    do
    {
      uint64_t v8 = *v7;
      if (*v7 > 7u)
      {
        if (((1LL << v8) & 0x160100) != 0) {
          goto LABEL_16;
        }
        if (v8 == 19)
        {
LABEL_13:
          goto LABEL_16;
        }

        if (v8 == 32) {
          sub_1001EE2A0();
        }
      }

      else
      {
        if ((v8 - 6) >= 2)
        {
          if ((_DWORD)v8 != 4) {
            goto LABEL_18;
          }
LABEL_16:
          uint64_t v9 = (void *)*((void *)v7 + 1);
          if (v9)
          {
            sub_1000B1838(v9);
            *((void *)v7 + 1) = 0LL;
          }

          goto LABEL_18;
        }

        uint64_t v5 = (unsigned __int8 *)*((void *)v7 + 1);
        if (v5)
        {
          int v2 = *((unsigned __int16 *)v7 + 1) - 1;
          char v3 = 1;
          uint64_t v4 = v7;
          if (!*((_WORD *)v7 + 1)) {
            goto LABEL_21;
          }
          goto LABEL_2;
        }
      }

uint64_t sub_10010C368(uint64_t *a1, unsigned __int8 *a2)
{
  if (!a2) {
    sub_1001EE2A0();
  }
  *a2 = 0;
  uint64_t v4 = sub_10010B540(a1, (uint64_t)a2, 0);
  if ((_DWORD)v4)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_DataElement_Unmarshal error status %!", v5, v6, v7, v8, v9, v10, v11, v4);
      unsigned int v12 = (os_log_s *)sub_100086554(0x2Bu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_10065B898();
      }
    }

    sub_10010C23C(a2);
  }

  return v4;
}

void sub_10010C410(unsigned __int8 *a1)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  sub_10010C23C(a1);
}

  ;
}

uint64_t sub_10010C454(uint64_t result)
{
  byte_1008E1ED0 = result;
  return result;
}

uint64_t sub_10010C460()
{
  uint64_t result = sub_1000B6578();
  if ((_DWORD)result)
  {
    sub_10012F348();
    return sub_10010C490();
  }

  return result;
}

uint64_t sub_10010C490()
{
  else {
    unint64_t v0 = "";
  }
  sub_1001EE0E4("RequestQueue: %s\n", v0);
  if (!qword_1008E1EF0) {
    return sub_1001EE0E4("Current Request: none\n");
  }
  sub_1001EE0E4("Current Request: ");
  return sub_10010F9D4(qword_1008E1EF0);
}

uint64_t sub_10010C538(uint64_t a1)
{
  if (a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_DEVMGR_Init: configuration parameter is deprecated", v2, v3, v4, v5, v6, v7, v8, v11);
      uint64_t v9 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EDBE4(a1, 44LL);
  }

  if ((_DWORD)xmmword_1008F6FB8) {
    return 140LL;
  }
  qword_1008F6D08 = sub_1001EDBA0(0x2Cu);
  if (!qword_1008F6D08)
  {
    sub_1001EE2A0();
    if (!qword_1008F6D08) {
      return 127LL;
    }
  }

  byte_1008E1EE9 = 0;
  byte_1008E1EEA = 0;
  byte_1008E1EEB = 0;
  byte_1008E1F38 = 0;
  byte_1008F6D10 = 0;
  dword_1008E20D0 = 0;
  off_1008E1F00 = 0LL;
  qword_1008E1EF8 = 0LL;
  off_1008E1F10 = 0LL;
  qword_1008E1F08 = 0LL;
  off_1008E1F40 = 0LL;
  off_1008E1F48 = 0LL;
  off_1008E1F18 = 0LL;
  qword_1008E1F28 = 0LL;
  unk_1008E1F30 = 0LL;
  qword_1008E1F20[0] = 0LL;
  sub_1001EF1B4(&qword_1008E1ED8);
  qword_1008E1EF0 = 0LL;
  byte_1008F6D7C = 0;
  byte_1008F6D7D = 0;
  byte_1008F6D7E = 0;
  *(_OWORD *)&dword_1008F6D18 = 0u;
  unk_1008F6D28 = 0u;
  xmmword_1008F6D38 = 0u;
  unk_1008F6D48 = 0u;
  xmmword_1008F6D58 = 0u;
  *(_OWORD *)&byte_1008F6D68 = 0u;
  dword_1008F6D78 = 0;
  sub_1001EF1B4(&qword_1008E1ED8);
  byte_1008E1EE8 = 0;
  sub_1001135A8();
  sub_100112A44();
  sub_1001141C8();
  sub_100119B38();
  sub_1001178D8();
  uint64_t result = 0LL;
  LODWORD(xmmword_1008F6FB8) = 1;
  return result;
}

void sub_10010C6D8()
{
  byte_1008E1EE9 = 1;
}

uint64_t sub_10010C6E8()
{
  return byte_1008E1EE9;
}

void sub_10010C6F4()
{
  byte_1008E1EEA = 1;
}

uint64_t sub_10010C704()
{
  return byte_1008E1EEA;
}

uint64_t sub_10010C710(uint64_t a1, uint64_t a2)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  uint64_t v4 = sub_1000B17F4(0x38uLL);
  *uint64_t v4 = 0;
  __int16 v5 = *(_WORD *)(a2 + 4);
  void v4[2] = *(_DWORD *)a2;
  *((_WORD *)v4 + 6) = v5;
  *((void *)v4 + 2) = a1;
  sub_1000B0400((uint64_t)(v4 + 8));
  v4[8] += *(unsigned __int8 *)(qword_1008F6D08 + 6);
  uint64_t v6 = sub_10010C948((uint64_t)v4);
  if ((_DWORD)v6) {
    sub_1000B1838(v4);
  }
  return v6;
}

uint64_t sub_10010C7B0(unsigned __int16 *a1)
{
  if ((sub_100112720(*((unsigned __int8 *)a1 + 54)) & 1) != 0)
  {
    uint64_t v2 = sub_100128D24(5LL);
    uint64_t v3 = sub_100136C78((uint64_t)a1, v2);
    if ((_DWORD)v3)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_Disconnect failed (%d)", v4, v5, v6, v7, v8, v9, v10, *a1);
        uint64_t v11 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }
    }

    else
    {
      *((_BYTE *)a1 + 54) = 6;
      *((_DWORD *)a1 + 37) = 0;
    }
  }

  else
  {
    if (*((_DWORD *)a1 + 37)) {
      sub_10010CAA4((uint64_t)a1, 0x13u);
    }
    return 1301LL;
  }

  return v3;
}

uint64_t sub_10010C890(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 148) || !sub_1001EE9D8(*(_DWORD *)(a1 + 72))) {
    return 0LL;
  }
  if ((byte_1008E1EE9 & 1) != 0)
  {
    int v2 = 0;
  }

  else if (*(unsigned __int16 *)(qword_1008F6D08 + 4) <= *(unsigned __int16 *)(a1 + 274))
  {
    int v2 = *(unsigned __int16 *)(a1 + 274);
  }

  else
  {
    int v2 = *(unsigned __int16 *)(qword_1008F6D08 + 4);
  }

  uint64_t v3 = sub_1001EE978(*(_DWORD *)(a1 + 72), v2);
  if ((_DWORD)v3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_Dispatch_SetFuncTimeout failed", v5, v6, v7, v8, v9, v10, v11, v13);
      unsigned int v12 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  return v3;
}

uint64_t sub_10010C948(uint64_t a1)
{
  uint64_t v1 = sub_1001EE6DC((uint64_t)sub_10010D114, 0LL, 0LL);
  if ((_DWORD)v1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_Dispatch_RegisterFunc failed", v2, v3, v4, v5, v6, v7, v8, v11);
      uint64_t v9 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  return v1;
}

uint64_t sub_10010C9D4(uint64_t a1)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (byte_1008E1EEB) {
    return 1319LL;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 54);
  if (v2 > 6)
  {
    sub_1001EE2A0();
    return 105LL;
  }

  else
  {
    int v3 = 1 << v2;
    if ((v3 & 0x39) != 0)
    {
      sub_1001127A8(a1);
      return 0LL;
    }

    else
    {
      if ((v3 & 6) != 0)
      {
        sub_1001EE2A0();
      }

      else if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Race condition - OI_LP_ConnectionAdded request while disconnect in progress",  v4,  v5,  v6,  v7,  v8,  v9,  v10,  v12);
        uint64_t v11 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 601LL;
    }
  }

uint64_t sub_10010CAA4(uint64_t a1, unsigned __int8 a2)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (sub_10012D514(a1))
  {
    switch(*(_BYTE *)(a1 + 54))
    {
      case 0:
      case 3:
      case 4:
      case 5:
        if (*(int *)(a1 + 148) < 1)
        {
          uint64_t result = sub_1000A86F0();
          if ((_DWORD)result)
          {
            sub_1001EE134( (uint64_t)"OI_LP_DisconnectReq %: reference count == 0 ignoring disconnect request",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  a1 + 48);
            uint64_t v29 = (os_log_s *)sub_100086554(0x2Cu);
            uint64_t result = os_log_type_enabled(v29, OS_LOG_TYPE_ERROR);
            if ((_DWORD)result) {
              goto LABEL_31;
            }
          }
        }

        else
        {
          sub_10011286C(a1);
          if (*(_DWORD *)(a1 + 148)) {
            return 0LL;
          }
          int v4 = *(unsigned __int16 *)(a1 + 324);
          if (!*(_WORD *)(a1 + 324)) {
            int v4 = *(unsigned __int16 *)(qword_1008F6D08 + 2);
          }
          uint64_t result = sub_10010CD08(a1, v4, a2);
        }

        break;
      case 1:
      case 2:
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"OI_LP_DisconnectReq, connection state ST_CONNECT_IN_PROGRESS",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  v46);
          int v21 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        uint64_t result = 1310LL;
        break;
      case 6:
        uint64_t result = sub_1000A86F0();
        if ((_DWORD)result)
        {
          sub_1001EE134( (uint64_t)"OI_LP_DisconnectReq, disconnect already in progress",  v30,  v31,  v32,  v33,  v34,  v35,  v36,  v46);
          int v37 = (os_log_s *)sub_100086554(0x2Cu);
          uint64_t result = os_log_type_enabled(v37, OS_LOG_TYPE_ERROR);
          if ((_DWORD)result) {
            goto LABEL_31;
          }
        }

        break;
      case 7:
        if (*(int *)(a1 + 148) >= 1)
        {
          sub_10011286C(a1);
          if (!*(_DWORD *)(a1 + 148))
          {
            sub_1001E6EB8(a1, 0LL);
            sub_1001E1B88(a1);
            sub_10012E320((unsigned __int16 *)a1);
          }

          return 0LL;
        }

        uint64_t result = sub_1000A86F0();
        if ((_DWORD)result)
        {
          sub_1001EE134( (uint64_t)"OI_LP_DisconnectReq %: reference count == 0 ignoring disconnect request",  v38,  v39,  v40,  v41,  v42,  v43,  v44,  a1 + 48);
          uint64_t v45 = (os_log_s *)sub_100086554(0x2Cu);
          uint64_t result = os_log_type_enabled(v45, OS_LOG_TYPE_ERROR);
          if ((_DWORD)result) {
            goto LABEL_31;
          }
        }

        break;
      default:
        sub_1001EE2A0();
        uint64_t result = 105LL;
        break;
    }
  }

  else
  {
    uint64_t result = sub_1000A86F0();
    if ((_DWORD)result)
    {
      sub_1001EE134( (uint64_t)"OI_LP_DisconnectReq %d already released, ignoring disconnect request",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  a1);
      uint64_t v13 = (os_log_s *)sub_100086554(0x2Cu);
      uint64_t result = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);
      if ((_DWORD)result)
      {
LABEL_31:
        sub_100657858();
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_10010CD08(uint64_t a1, int a2, unsigned __int8 a3)
{
  uint64_t v6 = (int *)(a1 + 72);
  if (sub_1001EE9D8(*(_DWORD *)(a1 + 72))) {
    sub_1001EE2A0();
  }
  v18[0] = a1;
  v18[1] = a3;
  v19[1] = v18;
  v19[0] = (const void *)16;
  if (a2)
  {
    if (byte_1008E1EE9) {
      int v7 = 0;
    }
    else {
      int v7 = a2;
    }
    uint64_t v8 = sub_1001EE6E8((uint64_t)sub_10010FADC, v19, v7, v6);
    if ((_DWORD)v8)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_Dispatch_RegisterTimedFunc failed", v9, v10, v11, v12, v13, v14, v15, v18[0]);
        uint64_t v16 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }
    }
  }

  else
  {
    sub_10010FADC((uint64_t)v19);
    return 0LL;
  }

  return v8;
}

uint64_t sub_10010CDEC(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"ForceDisconnect (%:, reason %!)", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v40 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  uint64_t v10 = sub_10012D890(a1);
  if (!v10) {
    return 1310LL;
  }
  uint64_t v11 = (unsigned __int16 *)v10;
  uint64_t v38 = 0LL;
  uint64_t v12 = 0LL;
  while (sub_10012EEA0((uint64_t *)&v38))
  {
    uint64_t v13 = (uint64_t)v38;
    if (v38[6] == v11)
    {
      uint64_t v14 = sub_100128D24(5LL);
      uint64_t v15 = sub_100136C78(v13, v14);
      if ((_DWORD)v15)
      {
        uint64_t v16 = v15;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"OI_HCICMD_Disconnect SCO handle %d failed",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  *(unsigned __int16 *)v38);
          uint64_t v24 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
          {
            uint64_t v25 = sub_1001EDDCC();
            *(_DWORD *)int buf = 136446466;
            uint64_t v40 = v25;
            __int16 v41 = 1024;
            int v42 = v16;
            _os_log_error_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
          }
        }

        uint64_t v12 = v16;
      }
    }
  }

  uint64_t v26 = sub_100128D24(5LL);
  uint64_t v27 = sub_100136C78((uint64_t)v11, v26);
  if ((_DWORD)v27)
  {
    uint64_t v28 = v27;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_Disconnect ACL handle %d failed", v29, v30, v31, v32, v33, v34, v35, *v11);
      uint64_t v36 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    return v28;
  }

  return v12;
}

uint64_t sub_10010D064(uint64_t a1)
{
  return sub_10010CDEC(a1);
}

uint64_t sub_10010D06C()
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (!byte_1008E1EEB) {
    return 117LL;
  }
  byte_1008E1EEB = 0;
  uint64_t v0 = sub_1001EE6DC((uint64_t)sub_10010D114, 0LL, 0LL);
  if ((_DWORD)v0)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_Dispatch_RegisterFunc failed", v1, v2, v3, v4, v5, v6, v7, v10);
      uint64_t v8 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  return v0;
}

void sub_10010D114()
{
  if (qword_1008E1EF0) {
    BOOL v0 = 0;
  }
  else {
    BOOL v0 = byte_1008E1EEB == 0;
  }
  if (v0 && (byte_1008E1F38 & 1) == 0 && (uint64_t *)qword_1008E1ED8 != &qword_1008E1ED8)
  {
    uint64_t v1 = sub_1001EF264((void **)&qword_1008E1ED8);
    int v2 = *(_DWORD *)(v1 - 40);
    qword_1008E1EF0 = v1 - 40;
    if (v2 == 2)
    {
      sub_100110108();
    }

    else if (v2 == 1)
    {
      uint64_t v20 = 0LL;
      sub_100113628(v1 - 32, &v20);
      uint64_t v11 = sub_100128D24(19LL);
      if ((_DWORD)v11)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"OI_HCICMD_RemoteNameRequest on %: failed",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  qword_1008E1EF0 + 8);
          uint64_t v19 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
            sub_10065A878();
          }
        }

        sub_10010EAC4(v11, 0LL);
      }
    }

    else if (v2)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Invalid request type %d", v3, v4, v5, v6, v7, v8, v9, *(unsigned int *)qword_1008E1EF0);
        uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      sub_1001102BC(1343);
      sub_1001EE2A0();
    }

    else
    {
      sub_10010FC74();
    }
  }

  sub_1001104A8();
}

uint64_t sub_10010D2C4(void *a1, unsigned __int16 *a2)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (!a1) {
    return 123LL;
  }
  if (!byte_1008E1EEB) {
    return 117LL;
  }
  if (off_1008E1F10)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_DevMgr_BondingDisconnect - busy with previous disconnect",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  v13);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 1319LL;
  }

  else
  {
    uint64_t result = sub_10010C7B0(a2);
    if (!(_DWORD)result)
    {
      off_1008E1F10 = a1;
      qword_1008E1F08 = (uint64_t)a2;
    }
  }

  return result;
}

uint64_t sub_10010D394(uint64_t result, char a2)
{
  if ((_DWORD)xmmword_1008F6FB8) {
    *(_BYTE *)(result + 152) = a2;
  }
  return result;
}

void sub_10010D3AC(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((_DWORD)xmmword_1008F6FB8) {
    BOOL v5 = byte_1008E1ED0 == 0;
  }
  else {
    BOOL v5 = 0;
  }
  if (!v5) {
    return;
  }
  uint64_t v6 = a4;
  if (a2)
  {
    BOOL v12 = (_DWORD)a4 == 1 || (a4 & 0xFE) == 240;
    if (!(_DWORD)a1 && v12)
    {
      byte_1008F6D10 = 0;
      sub_1001E6B80((uint64_t)a2, a5);
    }

    if (off_1008E1F18) {
      off_1008E1F18(a1, a2, a3, v6, a5);
    }
    if (!*((_BYTE *)a2 + 2))
    {
      for (uint64_t i = 0LL; i != 3; ++i)
      {
        uint64_t v14 = qword_1008E1F20[i];
        if (v14)
        {
          uint64_t v15 = *(void (**)(uint64_t, unsigned __int16 *, uint64_t, uint64_t, uint64_t))(v14 + 8);
          if (v15) {
            v15(a1, a2, a3, v6, a5);
          }
        }
      }
    }

    if ((_DWORD)a1)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_HCIEventHandler_ConnectionComplete with status %!, bdaddr %:, lm 0x%x, type %d, mode %d",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  a1);
        uint64_t v23 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      if (!sub_10011A138(a3)) {
        LODWORD(v6) = 1;
      }
      if ((_DWORD)a1 == 711)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Controller returned CONNECTION_ALREADY_EXISTS",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  v111);
          uint64_t v31 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int buf = 136446210;
            uint64_t v113 = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
      }
    }

    if (*((_BYTE *)a2 + 2))
    {
      uint64_t v32 = sub_10012D890(a3);
      *((void *)a2 + 6) = v32;
      if (v32)
      {
        sub_100119DBC((uint64_t)a2, a3, v6, a1);
      }

      else if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCI_AclConnectionFromAddr failed: (%:)", v43, v44, v45, v46, v47, v48, v49, a3);
        uint64_t v50 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
          sub_10065B970();
        }
      }

      return;
    }

    if (*((unsigned __int8 *)a2 + 54) - 1 < 2)
    {
      if ((_DWORD)a1)
      {
        sub_10010DF9C((uint64_t)a2, a1);
        return;
      }

      *((_BYTE *)a2 + 278) = 0;
      if ((v6 & 0xFE) == 0xF0)
      {
        *((_BYTE *)a2 + 278) = 1;
        if (byte_1008F6CF8) {
          int v68 = dword_1008F6CFC;
        }
        else {
          int v68 = *(unsigned __int16 *)(qword_1008F6D08 + 8);
        }
        *((_DWORD *)a2 + 70) = v68;
        if (sub_10010DA34((uint64_t)(a2 + 24)))
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"OI_DEVMGR_HDRChangeConnPktType", v77, v78, v79, v80, v81, v82, v83, v111);
            uint64_t v84 = (os_log_s *)sub_100086554(0x2Cu);
            if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR)) {
              goto LABEL_76;
            }
          }
        }
      }

      else
      {
        uint64_t v111 = (uint64_t)a2;
        if (sub_100128D24(14LL))
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"OI_HCICMD_ChangeConnectionPacketType",  v69,  v70,  v71,  v72,  v73,  v74,  v75,  (uint64_t)a2);
            uint64_t v76 = (os_log_s *)sub_100086554(0x2Cu);
            if (os_log_type_enabled(v76, OS_LOG_TYPE_ERROR)) {
LABEL_76:
            }
              sub_10065A878();
          }
        }
      }

      *((_BYTE *)a2 + 54) = 3;
      int v85 = sub_1001146A0((void (*)(int))sub_10010DA80, (uint64_t)a2);
      if (v85)
      {
        int v86 = v85;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_DEVMGR_ReadRemoteExtendedFeatures", v87, v88, v89, v90, v91, v92, v93, v111);
          uint64_t v94 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v94, OS_LOG_TYPE_ERROR)) {
            sub_10065A878();
          }
        }

        sub_10010DA80(v86, a3, 0LL);
      }

      else if (sub_1001149A8((void (*)(int))sub_10010DD8C, (uint64_t)a2))
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"OI_DEVMGR_ReadRemoteVersionInformation failed with %!",  v95,  v96,  v97,  v98,  v99,  v100,  v101,  0LL);
          uint64_t v102 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v102, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }

      else if ((v6 & 0xFE) == 0xF0)
      {
        if (sub_10010DEE8((uint64_t)(a2 + 24)))
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"OI_DEVMGR_ReadProprietaryRemoteFeatures",  v103,  v104,  v105,  v106,  v107,  v108,  v109,  v111);
            v110 = (os_log_s *)sub_100086554(0x2Cu);
            if (os_log_type_enabled(v110, OS_LOG_TYPE_ERROR)) {
              sub_10065A878();
            }
          }
        }
      }

      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_HCIEventHandler_ConnectionComplete %:, inconsistent state %d, dropping connection",  v51,  v52,  v53,  v54,  v55,  v56,  v57,  a3);
      uint64_t v58 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    uint64_t v59 = sub_100128D24(5LL);
    if (sub_100136C78((uint64_t)a2, v59))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_Disconnect failed (%d)", v60, v61, v62, v63, v64, v65, v66, *a2);
        uint64_t v67 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }
    }

    sub_100119B6C((uint64_t)a2, 1348LL);
    *((_BYTE *)a2 + 54) = 7;
    sub_1001E6EB8((uint64_t)a2, 1348LL);
    sub_1001E1B88((uint64_t)a2);
    sub_100173630((uint64_t)a2, 0x544u);
    sub_100136880((uint64_t)a2);
    sub_10012E320(a2);
  }

  else
  {
    BOOL v34 = (_DWORD)a4 == 1 || (a4 & 0xFE) == 240;
    if ((_DWORD)a1 || !v34)
    {
      if (!(_DWORD)a1) {
        sub_1001EE2A0();
      }
      sub_100119DBC(0LL, a3, v6, a1);
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Ignoring ConnectionComplete for %: Unknown connection handle",  v35,  v36,  v37,  v38,  v39,  v40,  v41,  a3);
      int v42 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
        sub_10065B904();
      }
    }
  }

uint64_t sub_10010DA34(uint64_t a1)
{
  if (!a1) {
    return 101LL;
  }
  if (sub_10012D890(a1)) {
    return sub_100191CA8();
  }
  return 1301LL;
}

void sub_10010DA80(int a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = (unsigned __int16 *)sub_10012D890(a2);
  if (sub_10012D514((uint64_t)v6))
  {
    int v7 = *((unsigned __int8 *)v6 + 54);
    if (v7 != 3 && v7 != 6)
    {
      sub_1001EE2A0();
      int v7 = *((unsigned __int8 *)v6 + 54);
    }

    if (v7 != 6)
    {
      if (v7 == 3)
      {
        if (a1 || !a3)
        {
          *((_BYTE *)v6 + 224) = 1;
          *((_BYTE *)v6 + 227) = 1;
          return;
        }

        int v9 = *((char *)a3 + 7);
        uint64_t v10 = *a3;
        *(void *)(v6 + 129) = *a3;
        *((_BYTE *)v6 + 224) = *((_BYTE *)a3 + 3) >> 7;
        *((_BYTE *)v6 + 225) = (*((_BYTE *)a3 + 1) & 0x30) != 0;
        *((_BYTE *)v6 + 227) = *((_BYTE *)a3 + 3) & 6;
        *((_BYTE *)v6 + 226) = (v10 & 0x600380000000LL) == 0x80000000LL;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Remote classic supported features: %@",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  (uint64_t)(v6 + 129));
          uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int buf = 136446210;
            uint64_t v57 = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        if (v9 < 0)
        {
          int v46 = sub_100114810((void (*)(int))sub_1001108B8, (uint64_t)v6);
          if (!v46) {
            goto LABEL_17;
          }
          int v19 = v46;
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"OI_DEVMGR_ReadRemoteExtendedFeatures", v47, v48, v49, v50, v51, v52, v53, v55);
            uint64_t v54 = (os_log_s *)sub_100086554(0x2Cu);
            if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
              sub_10065A878();
            }
          }
        }

        else
        {
          int v19 = 102;
        }

        sub_1001108B8(v19, a2, 0, 0LL, 0LL);
LABEL_17:
        if (!*((_DWORD *)v6 + 37) && *(_WORD *)(qword_1008F6D08 + 4))
        {
          else {
            int v20 = *(unsigned __int16 *)(qword_1008F6D08 + 4);
          }
          if (sub_10010CD08((uint64_t)v6, v20, 0x14u) && sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"postDisconnectTimeout failed", v21, v22, v23, v24, v25, v26, v27, v55);
            uint64_t v28 = (os_log_s *)sub_100086554(0x2Cu);
            if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
              sub_10065A878();
            }
          }
        }

        return;
      }

      if (sub_1000A86F0())
      {
        uint64_t v37 = *v6;
        sub_10012EFE0(*((unsigned __int8 *)v6 + 54));
        sub_1001EE134( (uint64_t)"orphaned newConnectionReadFeaturesCb, handle %d, state %s",  v38,  v39,  v40,  v41,  v42,  v43,  v44,  v37);
        uint64_t v45 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"newConnectionReadFeaturesCb: connection has gone away",  v29,  v30,  v31,  v32,  v33,  v34,  v35,  v55);
    uint64_t v36 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

void sub_10010DD8C(uint64_t a1, uint64_t a2, char a3, __int16 a4, __int16 a5)
{
  uint64_t v9 = sub_10012D890(a2);
  if (sub_10012D514(v9))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Remote classic version information: status=%!, addr=%: LMPVersion=%x, mfgrName=%x, LMPSubVersion=%x",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  a1);
      uint64_t v17 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v28 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    *(_WORD *)(v9 + 20) = a4;
    *(_BYTE *)(v9 + 24) = a3;
    *(_WORD *)(v9 + 22) = a5;
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"newConnectionReadRemoteVersionInformationCb: connection has gone away",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  v26);
    uint64_t v25 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

uint64_t sub_10010DEE8(uint64_t a1)
{
  if (!a1) {
    return 101LL;
  }
  if (sub_10012D890(a1)) {
    return sub_100191C20();
  }
  return 1301LL;
}

void sub_10010DF24(uint64_t a1, int a2, int a3)
{
  uint64_t v4 = sub_10012D6D8(a2);
  if (sub_10012D514((uint64_t)v4))
  {
    *((_DWORD *)v4 + 73) = a3;
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Device disconnected during the read of remote features. Ignoring event.",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  v13);
    uint64_t v12 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_10010DF9C(uint64_t a1, uint64_t a2)
{
  if (!(_DWORD)a2) {
    *(_BYTE *)(a1 + 54) = 0;
  }
  if (*(_BYTE *)(a1 + 198))
  {
    *(_BYTE *)(a1 + 198) = 0;
    sub_1001179D0(a1);
  }

  if (qword_1008E1EF0)
  {
    if ((*(_DWORD *)qword_1008E1EF0 == 3 || *(_DWORD *)qword_1008E1EF0 == 0)
      && *(_DWORD *)(a1 + 48) == *(_DWORD *)(qword_1008E1EF0 + 8)
      && *(unsigned __int16 *)(a1 + 52) == *(unsigned __int16 *)(qword_1008E1EF0 + 12))
    {
      sub_1001106E8(a1, a2);
      if (!(_DWORD)a2) {
        return;
      }
      goto LABEL_18;
    }
  }

  if (sub_10012D514(a1)) {
    sub_100100DA8(a2, (int *)(a1 + 48), a1);
  }
  if ((_DWORD)a2)
  {
LABEL_18:
    if (*(_BYTE *)(a1 + 54) != 3)
    {
      sub_1001E6EB8(a1, a2);
      sub_1001E1B88(a1);
      sub_10012E320((unsigned __int16 *)a1);
    }
  }

void sub_10010E088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)xmmword_1008F6FB8)
  {
    if (!byte_1008E1EEB)
    {
      if ((a3 & 0xFFFFFFFD) == 0)
      {
        sub_10011A6C4(a1, a2, a3);
LABEL_16:
        byte_1008E1F38 = 0;
        return;
      }

      if ((a3 - 240) < 2 || (_DWORD)a3 == 1)
      {
        if ((byte_1008E1EE8 & 1) != 0)
        {
LABEL_14:
          sub_100128D24(9LL);
          return;
        }

        for (uint64_t i = 0LL; i != 384; i += 6LL)
        {
          uint64_t v16 = (char *)&xmmword_1008E1F50 + i;
          BOOL v17 = !*(_DWORD *)((char *)&xmmword_1008E1F50 + i) && *(_WORD *)((char *)&xmmword_1008E1F50 + i + 4) == 0;
          if (v17) {
            break;
          }
          int v18 = *(_DWORD *)v16;
          int v19 = *((unsigned __int16 *)v16 + 2);
        }

        uint64_t v21 = sub_10012D890(a1);
        if (v21)
        {
          uint64_t v22 = v21;
          int v23 = *(unsigned __int8 *)(v21 + 54);
          if (v23 == 2)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Duplicate incoming connection requests detected, ignore duplicate",  v40,  v41,  v42,  v43,  v44,  v45,  v46,  v85);
              uint64_t v47 = (os_log_s *)sub_100086554(0x2Cu);
              if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
                sub_100657F74();
              }
            }

            goto LABEL_16;
          }

          if (v23 == 1)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Overlapping Local/Remote Connection requests",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  v85);
              uint64_t v31 = (os_log_s *)sub_100086554(0x2Cu);
              if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
                sub_100657F74();
              }
            }

            byte_1008E1F38 = 1;
            sub_10010D3AC(1339LL, (unsigned __int16 *)v22, a1, a3, 0LL);
          }

          else
          {
            if (sub_1000A86F0())
            {
              uint64_t v48 = sub_10012EFE0(*(unsigned __int8 *)(v22 + 54));
              sub_1001EE134( (uint64_t)"Incoming connection requested on same handle during state %s",  v49,  v50,  v51,  v52,  v53,  v54,  v55,  (uint64_t)v48);
              uint64_t v56 = (os_log_s *)sub_100086554(0x2Cu);
              if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
                sub_100657F74();
              }
            }

            sub_10010E504(0LL, (unsigned __int16 *)v22, 1339LL);
          }
        }

        uint64_t v57 = sub_10012DBE0(a1, 2);
        if (v57)
        {
          uint64_t v58 = v57;
          uint64_t v59 = 0LL;
          char v60 = 0;
          do
          {
            while (1)
            {
              uint64_t v61 = (void (**)(uint64_t, uint64_t))qword_1008E1F20[v59];
              if (!v61) {
                break;
              }
              uint64_t v62 = *v61;
              if (!v62) {
                break;
              }
              v62(a1, a2);
              char v60 = 1;
              BOOL v17 = v59++ == 2;
              if (v17) {
                goto LABEL_55;
              }
            }

            ++v59;
          }

          while (v59 != 3);
          if ((v60 & 1) != 0)
          {
LABEL_55:
            dword_1008F6D14 = a2;
            *(_DWORD *)(v58 + 48) = 0;
            *(_WORD *)(v58 + 52) = 0;
          }

          else
          {
            *(_DWORD *)(v58 + 56) = a2;
            *(_BYTE *)(v58 + 327) = 1;
            if (sub_100112A10() && !*(_BYTE *)(qword_1008F6D08 + 14)) {
              sub_100118D7C();
            }
            if (!sub_100128D24(8LL))
            {
              if ((a2 & 0x1F00) == 0x100)
              {
                *(_WORD *)(v58 + 138) = *(_WORD *)(sub_1001EDBA0(0x2Cu) + 10);
                sub_1001214B4(49, (uint64_t)nullsub_72, v79, v80, v81, v82, v83, v84, v58);
              }

              goto LABEL_16;
            }

            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"OI_HCICMD_AcceptConnectionRequest failed (%:)",  v71,  v72,  v73,  v74,  v75,  v76,  v77,  a1);
              uint64_t v78 = (os_log_s *)sub_100086554(0x2Cu);
              if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR)) {
                sub_10065A878();
              }
            }
          }

          sub_10012E320((unsigned __int16 *)v58);
          goto LABEL_16;
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Cannot accept ACL connection - connection list is full!",  v63,  v64,  v65,  v66,  v67,  v68,  v69,  v85);
          uint64_t v70 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v70, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }

      else if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCIEventHandler_ConnectionRequested: (%d)", v32, v33, v34, v35, v36, v37, v38, a3);
        uint64_t v39 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
          sub_10065B9E0();
        }
      }
    }

    if ((_DWORD)a3 == 2) {
      uint64_t v5 = 29LL;
    }
    else {
      uint64_t v5 = 9LL;
    }
    if (sub_100128D24(v5) && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_RejectConnectionRequest failed", v6, v7, v8, v9, v10, v11, v12, a1);
      uint64_t v13 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    goto LABEL_16;
  }

void sub_10010E504(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  if (a2)
  {
    if ((_DWORD)xmmword_1008F6FB8)
    {
      if (!*((_BYTE *)a2 + 2))
      {
        for (uint64_t i = 0LL; i != 3; ++i)
        {
          uint64_t v7 = qword_1008E1F20[i];
          if (v7)
          {
            uint64_t v8 = *(void (**)(uint64_t, unsigned __int16 *, uint64_t))(v7 + 16);
            if (v8) {
              v8(a1, a2, a3);
            }
          }
        }
      }

      if ((_DWORD)a1 == 702) {
        a3 = 702LL;
      }
      else {
        a3 = a3;
      }
      if ((_DWORD)a1 == 702) {
        a1 = 0LL;
      }
      else {
        a1 = a1;
      }
      sub_10011AFEC(a1, (uint64_t)a2, a3);
      sub_100117EB4(1);
      if (!*((_BYTE *)a2 + 2))
      {
        if ((_DWORD)a1)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"OI_HCIEventHandler_DisconnectionComplete error (%d)",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  *a2);
            uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
              sub_10065A878();
            }
          }

          if (*((_BYTE *)a2 + 54) == 6) {
            *((_BYTE *)a2 + 54) = 0;
          }
        }

        else
        {
          sub_100118B98((uint64_t)a2);
          sub_1001E6EB8((uint64_t)a2, a3);
          sub_1001E1B88((uint64_t)a2);
          if (qword_1008E1EF0
            && !sub_1001EE9D8(dword_1008E20D0)
            && (*(_DWORD *)qword_1008E1EF0 == 3 || !*(_DWORD *)qword_1008E1EF0)
            && *((_DWORD *)a2 + 12) == *(_DWORD *)(qword_1008E1EF0 + 8)
            && a2[26] == *(unsigned __int16 *)(qword_1008E1EF0 + 12))
          {
            (*(void (**)(uint64_t))(qword_1008E1EF0 + 16))(a3);
            sub_1001102BC(1344);
          }

          int v28 = *((_DWORD *)a2 + 12);
          unsigned __int16 v29 = a2[26];
          sub_100101818((uint64_t)a2, a3);
          sub_100173630((uint64_t)a2, a3);
          sub_1001F0D54((uint64_t)&v28);
        }
      }

      uint64_t v9 = (void (*)(uint64_t, unsigned __int16 *))off_1008E1F00;
      if (off_1008E1F00 && (unsigned __int16 *)qword_1008E1EF8 == a2)
      {
        off_1008E1F00 = 0LL;
        v9(a1, a2);
      }

      if (byte_1008E1EEB)
      {
        uint64_t v10 = (void (*)(uint64_t, unsigned __int16 *))off_1008E1F10;
        if (off_1008E1F10)
        {
          if ((unsigned __int16 *)qword_1008E1F08 == a2)
          {
            off_1008E1F10 = 0LL;
            v10(a1, a2);
          }
        }
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"OI_HCIEventHandler_DisconnectionComplete no connection handle: reason %! ignoring",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  a3);
    int v18 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

uint64_t sub_10010E794(uint64_t a1, uint64_t a2)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (!a1) {
    return 123LL;
  }
  uint64_t v4 = sub_1000B17F4(0x38uLL);
  *uint64_t v4 = 1;
  __int16 v5 = *(_WORD *)(a2 + 4);
  void v4[2] = *(_DWORD *)a2;
  *((_WORD *)v4 + 6) = v5;
  *((void *)v4 + 2) = a1;
  *((void *)v4 + 3) = 0LL;
  sub_1000B0400((uint64_t)(v4 + 8));
  v4[8] += *(unsigned __int8 *)(qword_1008F6D08 + 6);
  uint64_t v6 = sub_10010C948((uint64_t)v4);
  if ((_DWORD)v6) {
    sub_1000B1838(v4);
  }
  return v6;
}

uint64_t sub_10010E844(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (!a1) {
    return 123LL;
  }
  uint64_t v8 = sub_1000B17F4(0x38uLL);
  *uint64_t v8 = 1;
  __int16 v9 = *(_WORD *)(a2 + 4);
  void v8[2] = *(_DWORD *)a2;
  *((_WORD *)v8 + 6) = v9;
  *((void *)v8 + 2) = a1;
  *((void *)v8 + 3) = a4;
  sub_1000B0400((uint64_t)(v8 + 8));
  v8[8] += a3;
  uint64_t v10 = sub_10010C948((uint64_t)v8);
  if ((_DWORD)v10) {
    sub_1000B1838(v8);
  }
  return v10;
}

uint64_t sub_10010E8F8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (!qword_1008E1EF0) {
    return 1359LL;
  }
  if (*(_DWORD *)qword_1008E1EF0 == 1
    && *(_DWORD *)a1 == *(_DWORD *)(qword_1008E1EF0 + 8)
    && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(qword_1008E1EF0 + 12))
  {
    return sub_1001214B4(20, 0LL, a3, a4, a5, a6, a7, a8, a1);
  }

  __int16 v9 = (uint64_t *)qword_1008E1ED8;
  for (BOOL i = qword_1008E1ED8 == 0; !i && v9 != &qword_1008E1ED8; BOOL i = v9 == 0LL)
  {
    if (*((_DWORD *)v9 - 10) == 1
      && *(_DWORD *)a1 == *((_DWORD *)v9 - 8)
      && *(unsigned __int16 *)(a1 + 4) == *((unsigned __int16 *)v9 - 14))
    {
      uint64_t v14 = (void (*)(uint64_t, uint64_t *, void, void))*(v9 - 3);
      if (!v14)
      {
        sub_1001EE2A0();
        uint64_t v14 = (void (*)(uint64_t, uint64_t *, void, void))*(v9 - 3);
      }

      v14(1362LL, v9 - 4, 0LL, *(v9 - 2));
      sub_1001EF1E4(v9);
      return 1358LL;
    }

    __int16 v9 = (uint64_t *)*v9;
  }

  return 1358LL;
}

void sub_10010EA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCIEventHandler_RemoteNameRequestComplete: (%:)", v6, v7, v8, v9, v10, v11, v12, a2);
      uint64_t v13 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  if (qword_1008E1EF0
    && *(_DWORD *)qword_1008E1EF0 == 1
    && *(_DWORD *)a2 == *(_DWORD *)(qword_1008E1EF0 + 8)
    && *(unsigned __int16 *)(a2 + 4) == *(unsigned __int16 *)(qword_1008E1EF0 + 12))
  {
    sub_10010EAC4(a1, a3);
  }

uint64_t sub_10010EAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_1008E1EF0;
  if (!qword_1008E1EF0)
  {
    sub_1001EE2A0();
    uint64_t v4 = qword_1008E1EF0;
  }

  if (*(_DWORD *)v4 != 1)
  {
    sub_1001EE2A0();
    uint64_t v4 = qword_1008E1EF0;
  }

  __int16 v5 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v4 + 16);
  if (!v5)
  {
    sub_1001EE2A0();
    uint64_t v4 = qword_1008E1EF0;
    __int16 v5 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(qword_1008E1EF0 + 16);
  }

  v5(a1, v4 + 8, a2, *(void *)(v4 + 24));
  return sub_1001102BC(1346);
}

void sub_10010EB40(int a1)
{
  if (sub_1000A86F0()
    && (int v2 = sub_1001EE1D8(a1),
        sub_1001EE134( (uint64_t)"OI_HCIEventHandler_DataBufferOverflow, linkType %s",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  (uint64_t)v2),  uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu),  os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)))
  {
    sub_100657858();
    if (a1) {
      return;
    }
  }

  else if (a1)
  {
    return;
  }

  if ((_DWORD)xmmword_1008F6FB8) {
    sub_10011B1A4();
  }
}

uint64_t sub_10010EBCC()
{
  if (off_1008E1F48) {
    return off_1008E1F48();
  }
  return result;
}

uint64_t sub_10010EBE0(uint64_t a1)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (a1)
  {
    for (uint64_t i = 0LL; i != 3; ++i)
    {
      if (!qword_1008E1F20[i])
      {
        uint64_t result = 0LL;
        qword_1008E1F20[i] = a1;
        return result;
      }
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"All callbacks used up", v3, v4, v5, v6, v7, v8, v9, v20);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 1317LL;
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Extra callbacks cannot be null", v12, v13, v14, v15, v16, v17, v18, v20);
      uint64_t v19 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 101LL;
  }

uint64_t sub_10010ECD0(uint64_t a1)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  for (uint64_t i = 0LL; i != 3; ++i)
  {
    if (qword_1008E1F20[i] == a1)
    {
      uint64_t result = 0LL;
      qword_1008E1F20[i] = 0LL;
      return result;
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Cannot unregister extra callbacks that are not registered", v2, v3, v4, v5, v6, v7, v8, v11);
    uint64_t v9 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 120LL;
}

uint64_t sub_10010ED74(uint64_t (*a1)(void, void, void, void, void))
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (a1)
  {
    if (off_1008E1F18)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Extra callbacks already registered", v2, v3, v4, v5, v6, v7, v8, v19);
        uint64_t v9 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 119LL;
    }

    else
    {
      uint64_t result = 0LL;
      off_1008E1F18 = a1;
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Extra callbacks cannot be null", v11, v12, v13, v14, v15, v16, v17, v19);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 101LL;
  }

  return result;
}

uint64_t sub_10010EE50(uint64_t (*a1)(void, void, void, void, void))
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (off_1008E1F18 == a1)
  {
    uint64_t result = 0LL;
    off_1008E1F18 = 0LL;
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Cannot unregister extra callbacks that are not registered",  v1,  v2,  v3,  v4,  v5,  v6,  v7,  v10);
      uint64_t v8 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 120LL;
  }

  return result;
}

uint64_t sub_10010EEE0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = 101LL;
  if (a1 && a2)
  {
    uint64_t v5 = sub_10012D890(a1);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t result = 0LL;
      *a2 = v6;
    }

    else
    {
      return 1301LL;
    }
  }

  return result;
}

uint64_t sub_10010EF2C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = 101LL;
  if (a1 && a2)
  {
    uint64_t v5 = sub_10012D8E8(a1);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t result = 0LL;
      *a2 = v6;
    }

    else
    {
      return 1301LL;
    }
  }

  return result;
}

uint64_t sub_10010EF78(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 101LL;
  }
  uint64_t v3 = a1;
  if (sub_10012D514(a1))
  {
LABEL_5:
    uint64_t result = 0LL;
    int v5 = *(_DWORD *)(v3 + 48);
    *(_WORD *)(a2 + 4) = *(_WORD *)(v3 + 52);
    *(_DWORD *)a2 = v5;
    return result;
  }

  if (sub_10012D5BC(v3))
  {
    uint64_t v3 = *(void *)(v3 + 48);
    goto LABEL_5;
  }

  return 1301LL;
}

uint64_t sub_10010EFD8(uint64_t a1, uint64_t a2)
{
  uint64_t result = 101LL;
  if (a1 && a2)
  {
    uint64_t v5 = sub_10012D890(a1);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t result = 0LL;
      *(_BYTE *)a2 = *(_BYTE *)(v6 + 227);
      *(_BYTE *)(a2 + 1) = *(_BYTE *)(v6 + 144);
      *(_BYTE *)(a2 + 2) = *(_BYTE *)(v6 + 152);
      *(_WORD *)(a2 + 4) = *(_WORD *)(v6 + 140);
      *(_WORD *)(a2 + 6) = *(_WORD *)(v6 + 136);
    }

    else
    {
      return 1301LL;
    }
  }

  return result;
}

uint64_t sub_10010F048(uint64_t a1, _BYTE *a2)
{
  uint64_t result = 101LL;
  if (a1 && a2)
  {
    uint64_t v5 = sub_10012D8E8(a1);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t result = 0LL;
      *a2 = *(_BYTE *)(v6 + 58);
    }

    else
    {
      return 1301LL;
    }
  }

  return result;
}

uint64_t sub_10010F098(void *a1)
{
  if (!a1) {
    return 101LL;
  }
  uint64_t result = sub_1001910C0();
  if (!(_DWORD)result) {
    *(void *)((char *)&xmmword_1008F6D38 + 4) = *a1;
  }
  return result;
}

uint64_t sub_10010F0DC(uint64_t a1, void *a2, void *a3)
{
  uint64_t result = 101LL;
  if (a1 && a2)
  {
    uint64_t v7 = sub_10012D890(a1);
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      uint64_t result = 0LL;
      uint64_t v8 = (void *)((char *)v8 + 258);
      *a2 = *v8;
      *a3 = v8[1];
    }

    else
    {
      return 1301LL;
    }
  }

  return result;
}

uint64_t sub_10010F13C(uint64_t a1, _WORD *a2, _BYTE *a3, _WORD *a4)
{
  uint64_t result = 101LL;
  if (a1 && a2 && a3 && a4)
  {
    uint64_t v9 = (__int16 *)sub_10012D890(a1);
    if (v9)
    {
      uint64_t v10 = v9;
      if (*v9 == -1)
      {
        return 103LL;
      }

      else
      {
        uint64_t result = 0LL;
        *a2 = v10[10];
        *a3 = *((_BYTE *)v10 + 24);
        *a4 = v10[11];
      }
    }

    else
    {
      return 1301LL;
    }
  }

  return result;
}

uint64_t sub_10010F1C8(_DWORD *a1, void *a2)
{
  uint64_t result = 101LL;
  if (a1 && a2)
  {
    uint64_t v5 = sub_10012D98C(a1);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t result = 0LL;
      *a2 = *(void *)(v6 + 170);
    }

    else
    {
      return 1301LL;
    }
  }

  return result;
}

uint64_t sub_10010F218(_DWORD *a1, _WORD *a2, _BYTE *a3, _WORD *a4)
{
  uint64_t result = 101LL;
  if (a1 && a2 && a3 && a4)
  {
    uint64_t v9 = sub_10012D98C(a1);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t result = 0LL;
      *a2 = *(_WORD *)(v10 + 20);
      *a3 = *(_BYTE *)(v10 + 24);
      *a4 = *(_WORD *)(v10 + 22);
    }

    else
    {
      return 1301LL;
    }
  }

  return result;
}

uint64_t sub_10010F290()
{
  return (BYTE4(xmmword_1008F6D38) >> 5) & 1;
}

uint64_t sub_10010F2A0()
{
  return BYTE5(xmmword_1008F6D38) & 1;
}

uint64_t sub_10010F2B0()
{
  return (BYTE5(xmmword_1008F6D38) >> 6) & 1;
}

BOOL sub_10010F2C0()
{
  return (BYTE8(xmmword_1008F6D38) & 6) != 0;
}

uint64_t sub_10010F2D4()
{
  return byte_1008F6D35 & 1;
}

BOOL sub_10010F2E4()
{
  return (dword_1008F6D54 & 6) != 0;
}

uint64_t sub_10010F2F8()
{
  return (dword_1008F6D54 >> 6) & 1;
}

void sub_10010F308(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 257)) {
    sub_1001EE2A0();
  }
  *(_BYTE *)(a1 + 257) = 0;
}

uint64_t sub_10010F334(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = sub_10012D890(a1);
    if (v1)
    {
      uint64_t v2 = v1;
      if (sub_1000A86F0())
      {
        uint64_t v9 = sub_10018BE60();
        sub_1001EE134((uint64_t)"Setting flush timeout, chipId:%lu", v10, v11, v12, v13, v14, v15, v16, v9);
        uint64_t v17 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 136446210;
          unsigned __int16 v29 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      return sub_1001214B4(85, 0LL, v3, v4, v5, v6, v7, v8, v2);
    }

    uint64_t v18 = 1301LL;
  }

  else
  {
    uint64_t v18 = 101LL;
  }

  if (sub_1000A86F0())
  {
    sub_10018BE60();
    sub_1001EE134( (uint64_t)"Setting flush timeout skipped, status:%!, chipId:%lu",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v18);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return v18;
}

uint64_t sub_10010F494(uint64_t a1, int a2)
{
  if (!a1) {
    return 101LL;
  }
  uint64_t v4 = sub_10012D890(a1);
  if (!v4) {
    return 1301LL;
  }
  uint64_t v5 = v4;
  if (sub_1000A86F0())
  {
    sub_10012EB98();
    sub_10012EC68();
    sub_1001EE134( (uint64_t)"Accept RS on single-conn for device %: enabled %d with switch-enable %d, numAcl %d, numLE %d",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  a1);
    uint64_t v13 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v36 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  *(_BYTE *)(v5 + 199) = a2;
  if (!a2) {
    return 0LL;
  }
  if ((*(_WORD *)(v5 + 138) & 1) != 0) {
    return 0LL;
  }
  int v14 = sub_10012EB98();
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Enabling Switch policy", v15, v16, v17, v18, v19, v20, v21, v34);
    uint64_t v22 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v23 = sub_1001EDDCC();
      *(_DWORD *)int buf = 136446210;
      uint64_t v36 = v23;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  *(_WORD *)(v5 + 138) |= 1u;
  uint64_t v24 = sub_1001214B4(49, 0LL, v16, v17, v18, v19, v20, v21, v5);
  if ((_DWORD)v24)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Could not write link settings to Central only %!", v25, v26, v27, v28, v29, v30, v31, v24);
      uint64_t v32 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  return v24;
}

uint64_t sub_10010F6AC(uint64_t a1, char a2)
{
  if (!a1) {
    return 101LL;
  }
  uint64_t v4 = sub_10012D890(a1);
  if (!v4) {
    return 1301LL;
  }
  uint64_t v5 = v4;
  if (sub_1000A86F0())
  {
    sub_10012EB98();
    sub_10012EC68();
    sub_1001EE134( (uint64_t)"Disable RS on single-conn for device %: enabled %d numAcl %d, numLE %d",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  a1);
    uint64_t v13 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v16 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t result = 0LL;
  *(_BYTE *)(v5 + 200) = a2;
  return result;
}

uint64_t sub_10010F7B4(uint64_t a1, __int16 a2)
{
  if (!a1) {
    return 101LL;
  }
  uint64_t v4 = sub_10012D890(a1);
  if (!v4) {
    return 1301LL;
  }
  uint64_t v5 = v4;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Increasing disconnection timeout override for device %:", v6, v7, v8, v9, v10, v11, v12, a1);
    uint64_t v13 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v16 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t result = 0LL;
  *(_WORD *)(v5 + 324) = 10 * a2;
  return result;
}

uint64_t sub_10010F8B0(uint64_t a1, _WORD *a2)
{
  if (!a1) {
    return 101LL;
  }
  uint64_t v3 = sub_10012D890(a1);
  if (!v3) {
    return 1301LL;
  }
  uint64_t v4 = v3;
  uint64_t result = 0LL;
  *a2 = *(_WORD *)(v4 + 20);
  return result;
}

void sub_10010F8F8()
{
  byte_1008E1EE8 = 1;
}

double sub_10010F908()
{
  double result = 0.0;
  xmmword_1008E20B0 = 0u;
  unk_1008E20C0 = 0u;
  xmmword_1008E2090 = 0u;
  unk_1008E20A0 = 0u;
  xmmword_1008E2070 = 0u;
  unk_1008E2080 = 0u;
  xmmword_1008E2050 = 0u;
  unk_1008E2060 = 0u;
  xmmword_1008E2030 = 0u;
  unk_1008E2040 = 0u;
  xmmword_1008E2010 = 0u;
  unk_1008E2020 = 0u;
  xmmword_1008E1FF0 = 0u;
  unk_1008E2000 = 0u;
  xmmword_1008E1FD0 = 0u;
  unk_1008E1FE0 = 0u;
  xmmword_1008E1FB0 = 0u;
  unk_1008E1FC0 = 0u;
  xmmword_1008E1F90 = 0u;
  unk_1008E1FA0 = 0u;
  xmmword_1008E1F70 = 0u;
  unk_1008E1F80 = 0u;
  xmmword_1008E1F50 = 0u;
  unk_1008E1F60 = 0u;
  return result;
}

void sub_10010F948()
{
  byte_1008E1EE8 = 0;
}

uint64_t sub_10010F954(uint64_t result)
{
  byte_1008F6CF8 = result;
  return result;
}

uint64_t sub_10010F960(uint64_t result)
{
  dword_1008F6CFC = result;
  return result;
}

uint64_t sub_10010F96C(uint64_t result)
{
  byte_1008F6D00 = result;
  return result;
}

uint64_t sub_10010F978(uint64_t result)
{
  byte_1008D7400 = result;
  return result;
}

uint64_t sub_10010F984()
{
  return BYTE11(xmmword_1008F6D58);
}

uint64_t sub_10010F990(uint64_t a1, char a2)
{
  if (!a1) {
    return 101LL;
  }
  if (!sub_10012D890(a1)) {
    return 1301LL;
  }
  uint64_t result = 0LL;
  BYTE11(xmmword_1008F6D58) = a2;
  return result;
}

uint64_t sub_10010F9D4(uint64_t a1)
{
  uint64_t v3 = 0LL;
  uint64_t result = sub_1000B0400((uint64_t)&v3);
  switch(*(_DWORD *)a1)
  {
    case 0:
      uint64_t result = sub_1001EE0E4( "DEVMGR_OP_ACL_CONNECT,  bdaddr: %:, now %d:%d, expires %d:%d, cb 0x%x\n",  a1 + 8,  v3 & 0x1FFF,  SWORD2(v3),  *(_DWORD *)(a1 + 32) & 0x1FFF,  *(__int16 *)(a1 + 36),  *(void *)(a1 + 16));
      break;
    case 1:
      uint64_t result = sub_1001EE0E4( "DEVMGR_OP_READ_NAME,    bdaddr: %:, now %d:%d, expires %d:%d, cb 0x%x\n",  a1 + 8,  v3 & 0x1FFF,  SWORD2(v3),  *(_DWORD *)(a1 + 32) & 0x1FFF,  *(__int16 *)(a1 + 36),  *(void *)(a1 + 16));
      break;
    case 2:
      uint64_t result = sub_1001EE0E4("DEVMGR_OP_BOND_ENTER");
      break;
    case 3:
      uint64_t result = sub_1001EE0E4( "DEVMGR_OP_BOND_CONNECT, bdaddr: %:, now %d:%d, expires %d:%d, cb 0x%x\n",  a1 + 8,  v3 & 0x1FFF,  SWORD2(v3),  *(_DWORD *)(a1 + 32) & 0x1FFF,  *(__int16 *)(a1 + 36),  *(void *)(a1 + 16));
      break;
    default:
      return result;
  }

  return result;
}

void sub_10010FADC(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 8);
  if (!sub_10012D514(*v1)) {
    sub_1001EE2A0();
  }
  if (*(_DWORD *)(*v1 + 148)) {
    return;
  }
  if (!sub_100112720(*(unsigned __int8 *)(*v1 + 54)))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"disconnectTimeoutCb - connection state no longer connected",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  v28);
      uint64_t v19 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  if (sub_1001E6620(*v1) && (byte_1008E1EE9 & 1) == 0)
  {
    sub_1001EE134((uint64_t)"postDisconnectTimeout failed", v20, v21, v22, v23, v24, v25, v26, v28);
    uint64_t v27 = (os_log_s *)sub_100086554(0x2Cu);
    if (!os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_11:
    sub_10065A878();
    return;
  }

  sub_100118B98(*v1);
  uint64_t v2 = *v1;
  uint64_t v3 = sub_100128D24(5LL);
  if (!sub_100136C78(v2, v3))
  {
    *(_BYTE *)(*v1 + 54) = 6;
    return;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HCICMD_Disconnect failed (%d)", v4, v5, v6, v7, v8, v9, v10, *(unsigned __int16 *)*v1);
    uint64_t v11 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
  }

void sub_10010FC74()
{
  BOOL v0 = (_DWORD *)qword_1008E1EF0;
  if (!qword_1008E1EF0)
  {
    sub_1001EE2A0();
    BOOL v0 = (_DWORD *)qword_1008E1EF0;
  }

  if (*v0) {
    BOOL v1 = *v0 == 3;
  }
  else {
    BOOL v1 = 1;
  }
  if (!v1)
  {
    sub_1001EE2A0();
    BOOL v0 = (_DWORD *)qword_1008E1EF0;
  }

  uint64_t v2 = sub_10012D890((uint64_t)(v0 + 2));
  if (!v2)
  {
    uint64_t v4 = sub_1001124D4();
    if (v4)
    {
      uint64_t v5 = v4;
      if (*(_WORD *)(v4 + 274))
      {
        sub_100112528();
      }

      else
      {
        if (*(_BYTE *)(v4 + 54)) {
          sub_1001EE2A0();
        }
        uint64_t v62 = v5;
        uint64_t v8 = sub_100128D24(5LL);
        uint64_t v7 = sub_100136C78(v5, v8);
        if ((_DWORD)v7) {
          goto LABEL_41;
        }
        *(_BYTE *)(v5 + 54) = 6;
      }

      goto LABEL_36;
    }

    if (!sub_100112528())
    {
      if (!sub_10012EB98() || byte_1008F6D10 || *(_BYTE *)(qword_1008F6D08 + 13))
      {
        uint64_t v6 = qword_1008E1EF0 + 8;
        sub_100112A10();
        if (sub_10012D890(v6))
        {
          uint64_t v7 = 1314LL;
          goto LABEL_41;
        }

        uint64_t v25 = sub_10012DBE0(v6, 1);
        if (!v25)
        {
          uint64_t v7 = 1309LL;
          goto LABEL_41;
        }

        uint64_t v26 = (unsigned __int16 *)v25;
        uint64_t v63 = 0LL;
        if (sub_100113628(v6, &v63))
        {
          if (byte_1008F6D00)
          {
LABEL_52:
            uint64_t v44 = sub_100192060();
LABEL_55:
            uint64_t v7 = v44;
            if (!(_DWORD)v44) {
              return;
            }
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"OI_HCICMD_CreateACLConnection failed", v45, v46, v47, v48, v49, v50, v51, v62);
              uint64_t v52 = (os_log_s *)sub_100086554(0x2Cu);
              if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
                sub_10065A878();
              }
            }

            sub_10012E320(v26);
            goto LABEL_41;
          }

          uint64_t v62 = v6;
        }

        else
        {
          if (off_1008E1F40) {
            off_1008E1F40(v6);
          }
          if (byte_1008F6D00) {
            goto LABEL_52;
          }
          uint64_t v62 = v6;
        }

        uint64_t v44 = sub_100128D24(4LL);
        goto LABEL_55;
      }

      sub_100117EB4(0);
    }

uint64_t sub_100110108()
{
  BOOL v0 = (_DWORD *)qword_1008E1EF0;
  if (!qword_1008E1EF0)
  {
    sub_1001EE2A0();
    BOOL v0 = (_DWORD *)qword_1008E1EF0;
  }

  if (*v0 != 2) {
    sub_1001EE2A0();
  }
  byte_1008E1EEB = 1;
  if (!sub_100112528()) {
    goto LABEL_15;
  }
  while (1)
  {
    if (sub_1001F4468(qword_1008E1EF0 + 32))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Enter bonding attempt deferred too long, giving up", v1, v2, v3, v4, v5, v6, v7, v32);
        uint64_t v8 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    uint64_t result = sub_1001EE6E8((uint64_t)sub_100110108, 0LL, 1, 0LL);
    if (!(_DWORD)result) {
      break;
    }
    uint64_t v10 = result;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_Dispatch_RegisterFunc failed: %!", v11, v12, v13, v14, v15, v16, v17, v10);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1000AFE20(v10);
LABEL_15:
    uint64_t v19 = sub_1001124D4();
    if (!v19) {
      return sub_1001107B0(0LL);
    }
    uint64_t v20 = v19;
    uint64_t v32 = v19;
    uint64_t v21 = sub_100128D24(5LL);
    uint64_t v22 = sub_100136C78(v20, v21);
    if ((_DWORD)v22)
    {
      uint64_t v23 = v22;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_Disconnect failed", v24, v25, v26, v27, v28, v29, v30, v32);
        uint64_t v31 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }

      return sub_1001107B0(v23);
    }

    *(_BYTE *)(v20 + 54) = 6;
  }

  return result;
}

uint64_t sub_1001102BC(int a1)
{
  uint64_t v2 = (void *)qword_1008E1EF0;
  int v30 = *(_DWORD *)(qword_1008E1EF0 + 8);
  __int16 v31 = *(_WORD *)(qword_1008E1EF0 + 12);
  if (a1 == 704)
  {
    uint64_t v3 = (uint64_t *)qword_1008E1ED8;
    if (qword_1008E1ED8 && qword_1008E1ED8 != (void)&qword_1008E1ED8)
    {
      do
      {
        if (v30 == *((_DWORD *)v3 - 8) && v31 == *((_WORD *)v3 - 14))
        {
          v29[1] = v3 - 5;
          v29[0] = 704LL;
          v28[1] = v29;
          v28[0] = (const void *)16;
          uint64_t v6 = sub_1001EE6DC((uint64_t)sub_100110814, v28, 0LL);
          if ((_DWORD)v6)
          {
            uint64_t v7 = v6;
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"Dispatch Register failed with %!", v8, v9, v10, v11, v12, v13, v14, v7);
              uint64_t v15 = (os_log_s *)sub_100086554(0x2Cu);
              if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
                sub_10065BAC0();
              }
            }
          }

          sub_1001EF1E4(v3);
        }

        uint64_t v3 = (uint64_t *)*v3;
        if (v3) {
          BOOL v16 = v3 == &qword_1008E1ED8;
        }
        else {
          BOOL v16 = 1;
        }
      }

      while (!v16);
      uint64_t v2 = (void *)qword_1008E1EF0;
    }
  }

  sub_1000B1838(v2);
  qword_1008E1EF0 = 0LL;
  uint64_t result = sub_1001EE6DC((uint64_t)sub_10010D114, 0LL, 0LL);
  if ((_DWORD)result)
  {
    uint64_t v18 = result;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_Dispatch_RegisterFunc failed!", v19, v20, v21, v22, v23, v24, v25, v27);
      uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    sub_1000AFE20(v18);
  }

  return result;
}

void sub_1001104A8()
{
  uint64_t v0 = qword_1008E1ED8;
  if ((uint64_t *)qword_1008E1ED8 != &qword_1008E1ED8)
  {
    while (sub_1001F4468(v0 - 8))
    {
      uint64_t v1 = (unsigned int *)(v0 - 40);
      sub_10010C490();
      sub_1001EF264((void **)&qword_1008E1ED8);
      switch(*(_DWORD *)(v0 - 40))
      {
        case 0:
        case 3:
          (*(void (**)(uint64_t, uint64_t, void))(v0 - 24))(1334LL, v0 - 32, 0LL);
          break;
        case 1:
          (*(void (**)(uint64_t, uint64_t, void, void))(v0 - 24))( 1334LL,  v0 - 32,  0LL,  *(void *)(v0 - 16));
          break;
        case 2:
          (*(void (**)(uint64_t))(v0 - 32))(1334LL);
          break;
        default:
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Invalid request type %d", v2, v3, v4, v5, v6, v7, v8, *v1);
            uint64_t v9 = (os_log_s *)sub_100086554(0x2Cu);
            if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
              sub_10065BAC0();
            }
          }

          sub_1001EE2A0();
          break;
      }

      sub_1000B1838(v1);
      uint64_t v0 = qword_1008E1ED8;
    }

    if ((uint64_t *)qword_1008E1ED8 != &qword_1008E1ED8)
    {
      uint64_t v26 = 0LL;
      sub_1000B0400((uint64_t)&v26);
      uint64_t v10 = (int *)(qword_1008E1ED8 - 8);
      if (sub_1001F4468(qword_1008E1ED8 - 8))
      {
        int v11 = 0;
      }

      else
      {
        unsigned int v12 = sub_1001F4324((int *)&v26, v10);
        int v11 = v12 <= 1 ? 1 : v12;
      }

      uint64_t v13 = sub_1001EE9D8(dword_1008E20D4)
          ? sub_1001EE978(dword_1008E20D4, v11)
          : sub_1001EE6E8((uint64_t)sub_1001104A8, 0LL, v11, &dword_1008E20D4);
      uint64_t v14 = v13;
      if ((_DWORD)v13)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"OI_Dispatch_RegisterFunc/OI_Dispatch_SetFuncTimeout failed",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  v25);
          uint64_t v22 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
            sub_10065A878();
          }
        }

        sub_1000AFE20(v14);
        sub_1001106E8(v23, v24);
      }
    }
  }

uint64_t sub_1001106E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_1008E1EF0;
  if (!qword_1008E1EF0)
  {
    sub_1001EE2A0();
    uint64_t v4 = qword_1008E1EF0;
  }

  if (*(void *)(v4 + 16))
  {
    if (a1) {
      goto LABEL_5;
    }
  }

  else
  {
    sub_1001EE2A0();
    if (a1)
    {
LABEL_5:
      if (*(_DWORD *)(a1 + 48) != *(_DWORD *)(qword_1008E1EF0 + 8)
        || *(unsigned __int16 *)(a1 + 52) != *(unsigned __int16 *)(qword_1008E1EF0 + 12))
      {
        sub_1001EE2A0();
      }

      if (!(_DWORD)a2) {
        goto LABEL_16;
      }
LABEL_14:
      a1 = 0LL;
      goto LABEL_17;
    }
  }

  if ((_DWORD)a2) {
    goto LABEL_14;
  }
  sub_1001EE2A0();
LABEL_16:
  sub_1001127A8(a1);
LABEL_17:
  if (sub_1001EE9D8(dword_1008E20D0)) {
    sub_1001EEB14(dword_1008E20D0);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(qword_1008E1EF0 + 16))(a2, qword_1008E1EF0 + 8, a1);
  return sub_1001102BC(a2);
}

uint64_t sub_1001107B0(uint64_t a1)
{
  uint64_t v2 = qword_1008E1EF0;
  if (!qword_1008E1EF0)
  {
    sub_1001EE2A0();
    uint64_t v2 = qword_1008E1EF0;
  }

  if (*(_DWORD *)v2 != 2)
  {
    sub_1001EE2A0();
    uint64_t v2 = qword_1008E1EF0;
  }

  byte_1008E1EEB = (_DWORD)a1 == 0;
  (*(void (**)(uint64_t))(v2 + 8))(a1);
  return sub_1001102BC(1345);
}

void sub_100110814(uint64_t a1)
{
  uint64_t v1 = *(unsigned int **)(a1 + 8);
  uint64_t v2 = *v1;
  uint64_t v3 = (void *)*((void *)v1 + 1);
  if (v3)
  {
    uint64_t v4 = (void (*)(uint64_t, void *, void))v3[2];
    if (v4) {
      v4(v2, v3 + 1, 0LL);
    }
    sub_1000B1838(v3);
  }

  else
  {
    sub_1001EE2A0();
    if ((sub_1000A86F0() & 1) != 0)
    {
      sub_1001EE134((uint64_t)"Request is NULL, status is %!", v5, v6, v7, v8, v9, v10, v11, v2);
      unsigned int v12 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

void sub_1001108B8(int a1, uint64_t a2, int a3, uint64_t a4, void *a5)
{
  uint64_t v8 = (unsigned __int16 *)sub_10012D890(a2);
  if (sub_10012D514((uint64_t)v8))
  {
    int v15 = *((unsigned __int8 *)v8 + 54);
    if (v15 != 3 && v15 != 6)
    {
      sub_1001EE2A0();
      int v15 = *((unsigned __int8 *)v8 + 54);
    }

    if (v15 != 6)
    {
      if (v15 == 3)
      {
        if (!a1 && a3 == 1 && a5)
        {
          *(void *)(v8 + 133) = *a5;
          *((_BYTE *)v8 + 277) = *(_BYTE *)a5 & 1;
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Remote classic extended features page 1: %@",  v17,  v9,  v10,  v11,  v12,  v13,  v14,  (uint64_t)(v8 + 133));
            uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
            if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)int buf = 136446210;
              uint64_t v49 = sub_1001EDDCC();
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
        }

        else
        {
          *((_BYTE *)v8 + 277) = 0;
        }

        uint64_t v36 = sub_1001214B4(46, (uint64_t)sub_100110B00, v9, v10, v11, v12, v13, v14, (uint64_t)v8);
        if ((_DWORD)v36)
        {
          uint64_t v37 = v36;
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"OI_HCICMD_RoleDiscovery", v38, v39, v40, v41, v42, v43, v44, v47);
            uint64_t v45 = (os_log_s *)sub_100086554(0x2Cu);
            if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
              sub_10065A878();
            }
          }

          sub_100110CC8((uint64_t)v8, v37);
        }

        *((_BYTE *)v8 + 212) = 1;
      }

      else if (sub_1000A86F0())
      {
        uint64_t v27 = *v8;
        sub_10012EFE0(*((unsigned __int8 *)v8 + 54));
        sub_1001EE134( (uint64_t)"orphaned newConnectionReadExtendedFeaturesCb, handle %d, state %s",  v28,  v29,  v30,  v31,  v32,  v33,  v34,  v27);
        uint64_t v35 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"newConnectionReadExtendedFeaturesCb: connection has gone away",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v46);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

void sub_100110B00( uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a2)
  {
    if (sub_1000A86F0()
      && (sub_1001EE134( (uint64_t)"newConnectionReadRoleCb: connection has gone away",  v21,  v22,  v23,  v24,  v25,  v26,  v27,  v47),  uint64_t v28 = (os_log_s *)sub_100086554(0x2Cu),  os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)))
    {
      sub_10065A878();
      if ((_DWORD)a1) {
        return;
      }
    }

    else if ((_DWORD)a1)
    {
      return;
    }

    sub_1001EE2A0();
    return;
  }

  char v9 = a3;
  int v11 = *((unsigned __int8 *)a2 + 54);
  if (v11 != 3 && v11 != 6)
  {
    sub_1001EE2A0();
    int v11 = *((unsigned __int8 *)a2 + 54);
  }

  if (v11 != 6)
  {
    if (v11 == 3)
    {
      if ((_DWORD)a1)
      {
        sub_1001EE134((uint64_t)"newConnectionReadRoleCb failed", v13, v14, v15, v16, v17, v18, v19, v47);
        uint64_t v20 = (os_log_s *)sub_100086554(0x2Cu);
        if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          goto LABEL_24;
        }
      }

      else
      {
        *((_BYTE *)a2 + 144) = v9;
        uint64_t v38 = sub_1001214B4(49, (uint64_t)sub_100110D6C, a3, a4, a5, a6, a7, a8, (uint64_t)a2);
        if (!(_DWORD)v38) {
          return;
        }
        a1 = v38;
        a2[69] = -1;
        sub_1001EE134((uint64_t)"OI_HCICMD_WriteLinkPolicySettings failed", v39, v40, v41, v42, v43, v44, v45, v48);
        uint64_t v46 = (os_log_s *)sub_100086554(0x2Cu);
        if (!os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
          goto LABEL_24;
        }
      }

      sub_10065A878();
LABEL_24:
      sub_100110CC8((uint64_t)a2, a1);
      return;
    }

    if (sub_1000A86F0())
    {
      uint64_t v29 = *a2;
      sub_10012EFE0(*((unsigned __int8 *)a2 + 54));
      sub_1001EE134( (uint64_t)"orphaned newConnectionReadRoleCb, handle %d, state %s",  v30,  v31,  v32,  v33,  v34,  v35,  v36,  v29);
      uint64_t v37 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

void sub_100110CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100128D24(5LL);
  if (sub_100136C78(a1, v4))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_Disconnect failed", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  sub_10010DF9C(a1, a2);
}

void sub_100110D6C(uint64_t a1, unsigned __int16 *a2)
{
  int v2 = a1;
  if (!a2)
  {
    if (sub_1000A86F0()
      && (sub_1001EE134( (uint64_t)"newConnectionWritePolicyCb: connection has gone away",  v4,  v5,  v6,  v7,  v8,  v9,  v10,  v22),  uint64_t v11 = (os_log_s *)sub_100086554(0x2Cu),  os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)))
    {
      sub_10065A878();
      if (v2) {
        return;
      }
    }

    else if (v2)
    {
      return;
    }

    sub_1001EE2A0();
    return;
  }

  if ((_DWORD)a1)
  {
    a2[69] = -1;
    sub_100110CC8((uint64_t)a2, a1);
  }

  else
  {
    int v12 = *((unsigned __int8 *)a2 + 54);
    if (v12 != 3 && v12 != 6)
    {
      sub_1001EE2A0();
      int v12 = *((unsigned __int8 *)a2 + 54);
    }

    if (v12 != 6)
    {
      if (v12 == 3)
      {
        sub_10010DF9C((uint64_t)a2, 0LL);
      }

      else if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Unexpected writeLinkPolicy callback, handle: %d",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  *a2);
        uint64_t v21 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

void sub_100110EAC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_100110EC0(__int128 *a1, uint64_t *a2, _WORD *a3)
{
  uint64_t v4 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  uint64_t v5 = *a2;
  v15[0] = 0LL;
  v15[1] = v5;
  __int128 v14 = *a1;
  unint64_t v6 = 0xF00000000LL;
  do
  {
    char v7 = *((_BYTE *)v15 + v4);
    *((_BYTE *)v15 + v4) = *((_BYTE *)v15 + HIDWORD(v6));
    *((_BYTE *)v15 + HIDWORD(v6)) = v7;
    ++v4;
    v6 -= 0x100000000LL;
  }

  while (v4 != 8);
  uint64_t v8 = 0LL;
  unint64_t v9 = 0xF00000000LL;
  do
  {
    char v10 = *((_BYTE *)&v15[-1] + v8);
    *((_BYTE *)&v15[-1] + v8) = *((_BYTE *)&v15[-1] + HIDWORD(v9));
    *((_BYTE *)&v15[-1] + HIDWORD(v9)) = v10;
    ++v8;
    v9 -= 0x100000000LL;
  }

  while (v8 != 8);
  uint64_t result = sub_1000B0974(a1, 0x10uLL, v15, 0x10u, &v12, 0x10u);
  if (!(_DWORD)result) {
    *a3 = bswap32(HIWORD(v13)) >> 16;
  }
  return result;
}

uint64_t sub_100110FB8(__int128 *a1, __int16 *a2, uint64_t a3)
{
  uint64_t v26 = 0LL;
  uint64_t v27 = 0LL;
  if (a1 && a2)
  {
    uint64_t v4 = 0LL;
    __int16 v30 = *a2;
    char v31 = *((_BYTE *)a2 + 2);
    __int128 key = *a1;
    unint64_t v5 = 0xF00000000LL;
    do
    {
      char v6 = v29[v4 - 8];
      v29[v4 - 8] = v29[HIDWORD(v5) - 8];
      v29[HIDWORD(v5) - 8] = v6;
      ++v4;
      v5 -= 0x100000000LL;
    }

    while (v4 != 8);
    uint64_t v7 = sub_1000B0974(&key, 0x10uLL, v29, 0x10u, &v26, 0x10u);
    if ((_DWORD)v7)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"AES128Encrypt returned %d irk:%@ r:%@", v8, v9, v10, v11, v12, v13, v14, v7);
        uint64_t v15 = (os_log_s *)sub_100086554(0x43u);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_100657F08();
        }
      }
    }

    else
    {
      *(_WORD *)a3 = *(_WORD *)((char *)&v27 + 5);
      *(_BYTE *)(a3 + 2) = HIBYTE(v27);
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"No IRK key available - can't run AH.", v16, v17, v18, v19, v20, v21, v22, v25);
      uint64_t v23 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 4828LL;
  }

  return v7;
}

uint64_t sub_100111148( __int128 *a1, int8x16_t *a2, int8x16_t *a3, int8x16_t *a4, int8x16_t *a5, int a6, void *a7)
{
  uint64_t v9 = 0LL;
  int8x16_t v50 = 0uLL;
  int8x16_t v49 = 0uLL;
  int8x16_t v48 = 0uLL;
  if (!a6) {
    a4 = a5;
  }
  int8x16_t v49 = veorq_s8(*a4, *a2);
  __int128 key = *a1;
  unint64_t v11 = 0xF00000000LL;
  do
  {
    char v12 = *((_BYTE *)&key + v9);
    *((_BYTE *)&key + v9) = *((_BYTE *)&key + HIDWORD(v11));
    *((_BYTE *)&key + HIDWORD(v11)) = v12;
    ++v9;
    v11 -= 0x100000000LL;
  }

  while (v9 != 8);
  uint64_t v13 = 0LL;
  unint64_t v14 = 0xF00000000LL;
  do
  {
    __int8 v15 = v49.i8[v13];
    v49.i8[v13] = v49.i8[HIDWORD(v14)];
    v49.i8[HIDWORD(v14)] = v15;
    ++v13;
    v14 -= 0x100000000LL;
  }

  while (v13 != 8);
  uint64_t v16 = sub_1000B0974(&key, 0x10uLL, &v49, 0x10u, &v50, 0x10u);
  if ((_DWORD)v16)
  {
    uint64_t v17 = v16;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Failed to run AES 128 encryption %!.", v18, v19, v20, v21, v22, v23, v24, v17);
      uint64_t v25 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    uint64_t v26 = 0LL;
    unint64_t v27 = 0xF00000000LL;
    do
    {
      __int8 v28 = v50.i8[v26];
      v50.i8[v26] = v50.i8[HIDWORD(v27)];
      v50.i8[HIDWORD(v27)] = v28;
      ++v26;
      v27 -= 0x100000000LL;
    }

    while (v26 != 8);
    uint64_t v29 = 0LL;
    int8x16_t v48 = veorq_s8(*a3, v50);
    unint64_t v30 = 0xF00000000LL;
    do
    {
      __int8 v31 = v48.i8[v29];
      v48.i8[v29] = v48.i8[HIDWORD(v30)];
      v48.i8[HIDWORD(v30)] = v31;
      ++v29;
      v30 -= 0x100000000LL;
    }

    while (v29 != 8);
    uint64_t v32 = sub_1000B0974(&key, 0x10uLL, &v48, 0x10u, a7, 0x10u);
    if ((_DWORD)v32)
    {
      uint64_t v17 = v32;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Failed to run AES 128 encryption %!.", v33, v34, v35, v36, v37, v38, v39, v17);
        uint64_t v40 = (os_log_s *)sub_100086554(0x43u);
        if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    else
    {
      uint64_t v41 = 0LL;
      unint64_t v42 = 0xF00000000LL;
      do
      {
        char v43 = *((_BYTE *)a7 + v41);
        *((_BYTE *)a7 + v41) = *((_BYTE *)a7 + HIDWORD(v42));
        *((_BYTE *)a7 + HIDWORD(v42)) = v43;
        ++v41;
        v42 -= 0x100000000LL;
      }

      while (v41 != 8);
      uint64_t v44 = 0LL;
      unint64_t v45 = 0xF00000000LL;
      do
      {
        char v46 = *((_BYTE *)&key + v44);
        *((_BYTE *)&key + v44) = *((_BYTE *)&key + HIDWORD(v45));
        *((_BYTE *)&key + HIDWORD(v45)) = v46;
        ++v44;
        v45 -= 0x100000000LL;
      }

      while (v44 != 8);
      return 0LL;
    }
  }

  return v17;
}

uint64_t sub_1001113F0(__int128 *a1, uint64_t *a2, void *a3, void *a4)
{
  uint64_t v5 = *a2;
  v27[0] = *a3;
  v27[1] = v5;
  __int128 key = *a1;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Running S1 on key=%@, r1=%@, r2=%@, r'=%@", v6, v7, v8, v9, v10, v11, v12, (uint64_t)&key);
    uint64_t v13 = (os_log_s *)sub_100086554(0x43u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v25 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v14 = 0LL;
  unint64_t v15 = 0xF00000000LL;
  do
  {
    char v16 = *((_BYTE *)&v27[-1] + v14);
    *((_BYTE *)&v27[-1] + v14) = *((_BYTE *)&v27[-1] + HIDWORD(v15));
    *((_BYTE *)&v27[-1] + HIDWORD(v15)) = v16;
    ++v14;
    v15 -= 0x100000000LL;
  }

  while (v14 != 8);
  uint64_t v17 = 0LL;
  unint64_t v18 = 0xF00000000LL;
  do
  {
    char v19 = *((_BYTE *)v27 + v17);
    *((_BYTE *)v27 + v17) = *((_BYTE *)v27 + HIDWORD(v18));
    *((_BYTE *)v27 + HIDWORD(v18)) = v19;
    ++v17;
    v18 -= 0x100000000LL;
  }

  while (v17 != 8);
  uint64_t result = sub_1000B0974(&key, 0x10uLL, v27, 0x10u, a4, 0x10u);
  if (!(_DWORD)result)
  {
    uint64_t v21 = 0LL;
    unint64_t v22 = 0xF00000000LL;
    do
    {
      char v23 = *((_BYTE *)a4 + v21);
      *((_BYTE *)a4 + v21) = *((_BYTE *)a4 + HIDWORD(v22));
      *((_BYTE *)a4 + HIDWORD(v22)) = v23;
      ++v21;
      v22 -= 0x100000000LL;
    }

    while (v21 != 8);
  }

  return result;
}

uint64_t sub_1001115A4(__int128 *a1, __int16 a2, __int16 a3, void *a4)
{
  uint64_t v5 = 0LL;
  int v17 = 0;
  uint64_t v16 = 0LL;
  char v18 = HIBYTE(a3);
  char v19 = a3;
  char v20 = HIBYTE(a2);
  char v21 = a2;
  __int128 v15 = *a1;
  unint64_t v6 = 0xF00000000LL;
  do
  {
    char v7 = *((_BYTE *)&v15 + v5);
    *((_BYTE *)&v15 + v5) = *((_BYTE *)&v15 + HIDWORD(v6));
    *((_BYTE *)&v15 + HIDWORD(v6)) = v7;
    ++v5;
    v6 -= 0x100000000LL;
  }

  while (v5 != 8);
  uint64_t v8 = 0LL;
  unint64_t v9 = 0xF00000000LL;
  do
  {
    char v10 = *((_BYTE *)&v16 + v8);
    *((_BYTE *)&v16 + v8) = *((_BYTE *)&v16 + HIDWORD(v9));
    *((_BYTE *)&v16 + HIDWORD(v9)) = v10;
    ++v8;
    v9 -= 0x100000000LL;
  }

  while (v8 != 8);
  uint64_t result = sub_1000B0974(a1, 0x10uLL, &v16, 0x10u, a4, 0x10u);
  if (!(_DWORD)result)
  {
    uint64_t v12 = 0LL;
    unint64_t v13 = 0xF00000000LL;
    do
    {
      char v14 = *((_BYTE *)a4 + v12);
      *((_BYTE *)a4 + v12) = *((_BYTE *)a4 + HIDWORD(v13));
      *((_BYTE *)a4 + HIDWORD(v13)) = v14;
      ++v12;
      v13 -= 0x100000000LL;
    }

    while (v12 != 8);
  }

  return result;
}

uint64_t sub_1001116D0(_OWORD *a1, _OWORD *a2, __int128 *a3, char a4, void *a5)
{
  uint64_t v6 = 0LL;
  __int128 v7 = a1[1];
  v22[0] = *a1;
  v22[1] = v7;
  __int128 v8 = a2[1];
  v23[0] = *a2;
  v23[1] = v8;
  char v24 = a4;
  unint64_t v9 = 0x1F00000000LL;
  do
  {
    char v10 = *((_BYTE *)v22 + v6);
    *((_BYTE *)v22 + v6) = *((_BYTE *)v22 + HIDWORD(v9));
    *((_BYTE *)v22 + HIDWORD(v9)) = v10;
    ++v6;
    v9 -= 0x100000000LL;
  }

  while (v6 != 16);
  unint64_t v11 = 0x1F00000000LL;
  for (uint64_t i = 32LL; i != 48; ++i)
  {
    char v13 = *((_BYTE *)v22 + i);
    *((_BYTE *)v22 + i) = *((_BYTE *)v23 + HIDWORD(v11));
    *((_BYTE *)v23 + HIDWORD(v11)) = v13;
    v11 -= 0x100000000LL;
  }

  uint64_t v14 = 0LL;
  __int128 v21 = *a3;
  unint64_t v15 = 0xF00000000LL;
  do
  {
    char v16 = *((_BYTE *)&v22[-1] + v14);
    *((_BYTE *)&v22[-1] + v14) = *((_BYTE *)&v22[-1] + HIDWORD(v15));
    *((_BYTE *)&v22[-1] + HIDWORD(v15)) = v16;
    ++v14;
    v15 -= 0x100000000LL;
  }

  while (v14 != 8);
  uint64_t result = sub_1000B0B5C(&v21, 0x10uLL, v22, 0x41u, a5, 0x10u);
  if (!(_DWORD)result)
  {
    uint64_t v18 = 0LL;
    unint64_t v19 = 0xF00000000LL;
    do
    {
      char v20 = *((_BYTE *)a5 + v18);
      *((_BYTE *)a5 + v18) = *((_BYTE *)a5 + HIDWORD(v19));
      *((_BYTE *)a5 + HIDWORD(v19)) = v20;
      ++v18;
      v19 -= 0x100000000LL;
    }

    while (v18 != 8);
  }

  return result;
}

uint64_t sub_10011182C(_OWORD *a1, _OWORD *a2, _OWORD *a3, int a4, uint64_t a5, uint64_t a6, char *a7, int a8)
{
  if (a8 != 32) {
    return 101LL;
  }
  uint64_t v14 = 0LL;
  uint64_t v27 = 0LL;
  v28[0] = 0LL;
  *(void *)((char *)v28 + 5) = 0LL;
  __int128 v15 = a1[1];
  v26[0] = *a1;
  v26[1] = v15;
  unint64_t v16 = 0x1F00000000LL;
  do
  {
    char v17 = *((_BYTE *)v26 + v14);
    *((_BYTE *)v26 + v14) = *((_BYTE *)v26 + HIDWORD(v16));
    *((_BYTE *)v26 + HIDWORD(v16)) = v17;
    ++v14;
    v16 -= 0x100000000LL;
  }

  while (v14 != 16);
  v29[0] = 0LL;
  v29[1] = 0LL;
  sub_100111A0C((uint64_t)v26, 0, a4, a2, a3, a5, a6);
  if (!sub_1000B0B5C(v29, 0x10uLL, v26, 0x35u, a7, 0x10u))
  {
    uint64_t v19 = 0LL;
    unint64_t v20 = 0xF00000000LL;
    do
    {
      char v21 = a7[v19];
      a7[v19] = a7[HIDWORD(v20)];
      a7[HIDWORD(v20)] = v21;
      ++v19;
      v20 -= 0x100000000LL;
    }

    while (v19 != 8);
  }

  sub_100111A0C((uint64_t)v26, 1, a4, a2, a3, a5, a6);
  unint64_t v22 = a7 + 16;
  uint64_t result = sub_1000B0B5C(v29, 0x10uLL, v26, 0x35u, v22, 0x10u);
  if (!(_DWORD)result)
  {
    uint64_t v23 = 0LL;
    unint64_t v24 = 0xF00000000LL;
    do
    {
      char v25 = *((_BYTE *)v22 + v23);
      *((_BYTE *)v22 + v23) = *((_BYTE *)v22 + HIDWORD(v24));
      *((_BYTE *)v22 + HIDWORD(v24)) = v25;
      ++v23;
      v24 -= 0x100000000LL;
    }

    while (v23 != 8);
    return 0LL;
  }

  return result;
}

uint64_t sub_100111A0C(uint64_t result, char a2, int a3, _OWORD *a4, _OWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = 0LL;
  *(_BYTE *)uint64_t result = a2;
  *(_BYTE *)(result + 1) = HIBYTE(a3);
  *(_BYTE *)(result + 2) = BYTE2(a3);
  *(_BYTE *)(result + 3) = BYTE1(a3);
  *(_BYTE *)(result + 4) = a3;
  uint64_t v8 = result + 5;
  *(_OWORD *)(result + 5) = *a4;
  uint64_t v9 = result + 21;
  *(_OWORD *)(result + 21) = *a5;
  *(_BYTE *)(result + 37) = *(_BYTE *)a6;
  int v10 = *(_DWORD *)(a6 + 1);
  *(_WORD *)(result + 42) = *(_WORD *)(a6 + 5);
  *(_DWORD *)(result + 38) = v10;
  *(_BYTE *)(result + 44) = *(_BYTE *)a7;
  int v11 = *(_DWORD *)(a7 + 1);
  *(_WORD *)(result + 49) = *(_WORD *)(a7 + 5);
  *(_DWORD *)(result + 45) = v11;
  *(_WORD *)(result + 51) = 1;
  unint64_t v12 = 0xF00000000LL;
  do
  {
    char v13 = *(_BYTE *)(v8 + v7);
    *(_BYTE *)(v8 + v7) = *(_BYTE *)(v8 + HIDWORD(v12));
    *(_BYTE *)(v8 + HIDWORD(v12)) = v13;
    ++v7;
    v12 -= 0x100000000LL;
  }

  while (v7 != 8);
  uint64_t v14 = 0LL;
  unint64_t v15 = 0xF00000000LL;
  do
  {
    char v16 = *(_BYTE *)(v9 + v14);
    *(_BYTE *)(v9 + v14) = *(_BYTE *)(v9 + HIDWORD(v15));
    *(_BYTE *)(v9 + HIDWORD(v15)) = v16;
    ++v14;
    v15 -= 0x100000000LL;
  }

  while (v14 != 8);
  return result;
}

uint64_t sub_100111AE0( __int128 *a1, __int128 *a2, __int128 *a3, __int128 *a4, __int16 *a5, char *a6, char *a7, void *a8)
{
  uint64_t v9 = 0LL;
  __int128 v10 = *a3;
  __int128 v28 = *a2;
  __int128 v29 = v10;
  __int128 v11 = *a4;
  __int16 v31 = *a5;
  __int128 v30 = v11;
  char v32 = *((_BYTE *)a5 + 2);
  char v33 = *a6;
  __int16 v35 = *(_WORD *)(a6 + 5);
  int v34 = *(_DWORD *)(a6 + 1);
  char v36 = *a7;
  int v37 = *(_DWORD *)(a7 + 1);
  unint64_t v12 = 0xF00000000LL;
  __int16 v38 = *(_WORD *)(a7 + 5);
  do
  {
    char v13 = *((_BYTE *)&v28 + v9);
    *((_BYTE *)&v28 + v9) = *((_BYTE *)&v28 + HIDWORD(v12));
    *((_BYTE *)&v28 + HIDWORD(v12)) = v13;
    ++v9;
    v12 -= 0x100000000LL;
  }

  while (v9 != 8);
  unint64_t v14 = 0xF00000000LL;
  for (uint64_t i = 16LL; i != 24; ++i)
  {
    char v16 = *((_BYTE *)&v28 + i);
    *((_BYTE *)&v28 + i) = *((_BYTE *)&v29 + HIDWORD(v14));
    *((_BYTE *)&v29 + HIDWORD(v14)) = v16;
    v14 -= 0x100000000LL;
  }

  unint64_t v17 = 0xF00000000LL;
  for (uint64_t j = 32LL; j != 40; ++j)
  {
    char v19 = *((_BYTE *)&v28 + j);
    *((_BYTE *)&v28 + j) = *((_BYTE *)&v30 + HIDWORD(v17));
    *((_BYTE *)&v30 + HIDWORD(v17)) = v19;
    v17 -= 0x100000000LL;
  }

  uint64_t v20 = 0LL;
  __int128 v27 = 0uLL;
  __int128 v27 = *a1;
  unint64_t v21 = 0xF00000000LL;
  do
  {
    char v22 = *((_BYTE *)&v27 + v20);
    *((_BYTE *)&v27 + v20) = *((_BYTE *)&v27 + HIDWORD(v21));
    *((_BYTE *)&v27 + HIDWORD(v21)) = v22;
    ++v20;
    v21 -= 0x100000000LL;
  }

  while (v20 != 8);
  uint64_t result = sub_1000B0B5C(&v27, 0x10uLL, &v28, 0x41u, a8, 0x10u);
  if (!(_DWORD)result)
  {
    uint64_t v24 = 0LL;
    unint64_t v25 = 0xF00000000LL;
    do
    {
      char v26 = *((_BYTE *)a8 + v24);
      *((_BYTE *)a8 + v24) = *((_BYTE *)a8 + HIDWORD(v25));
      *((_BYTE *)a8 + HIDWORD(v25)) = v26;
      ++v24;
      v25 -= 0x100000000LL;
    }

    while (v24 != 8);
  }

  return result;
}

uint8x8_t sub_100111CB8(_OWORD *a1, _OWORD *a2, __int128 *a3, __int128 *a4, _DWORD *a5)
{
  uint64_t v6 = 0LL;
  __int128 v7 = a1[1];
  v25[0] = *a1;
  v25[1] = v7;
  __int128 v8 = a2[1];
  v26[0] = *a2;
  v26[1] = v8;
  __int128 v27 = *a4;
  unint64_t v9 = 0x1F00000000LL;
  do
  {
    char v10 = *((_BYTE *)v25 + v6);
    *((_BYTE *)v25 + v6) = *((_BYTE *)v25 + HIDWORD(v9));
    *((_BYTE *)v25 + HIDWORD(v9)) = v10;
    ++v6;
    v9 -= 0x100000000LL;
  }

  while (v6 != 16);
  unint64_t v11 = 0x1F00000000LL;
  for (uint64_t i = 32LL; i != 48; ++i)
  {
    char v13 = *((_BYTE *)v25 + i);
    *((_BYTE *)v25 + i) = *((_BYTE *)v26 + HIDWORD(v11));
    *((_BYTE *)v26 + HIDWORD(v11)) = v13;
    v11 -= 0x100000000LL;
  }

  unint64_t v14 = 0xF00000000LL;
  for (uint64_t j = 64LL; j != 72; ++j)
  {
    char v16 = *((_BYTE *)v25 + j);
    *((_BYTE *)v25 + j) = *((_BYTE *)&v27 + HIDWORD(v14));
    *((_BYTE *)&v27 + HIDWORD(v14)) = v16;
    v14 -= 0x100000000LL;
  }

  uint64_t v17 = 0LL;
  __int128 v22 = *a3;
  unint64_t v18 = 0xF00000000LL;
  do
  {
    char v19 = *((_BYTE *)&v22 + v17);
    *((_BYTE *)&v22 + v17) = *((_BYTE *)&v22 + HIDWORD(v18));
    *((_BYTE *)&v22 + HIDWORD(v18)) = v19;
    ++v17;
    v18 -= 0x100000000LL;
  }

  while (v17 != 8);
  uint64_t v23 = 0LL;
  uint64_t v24 = 0LL;
  if (!sub_1000B0B5C(&v22, 0x10uLL, v25, 0x50u, &v23, 0x10u))
  {
    result.i32[0] = HIDWORD(v24);
    int16x8_t v21 = (int16x8_t)vmovl_u8(result);
    *(int16x4_t *)v21.i8 = vrev64_s16(*(int16x4_t *)v21.i8);
    uint8x8_t result = (uint8x8_t)vmovn_s16(v21);
    *a5 = result.i32[0];
  }

  return result;
}

uint64_t sub_100111E38(__int128 *a1, unsigned int a2, void *a3)
{
  uint64_t v4 = 0LL;
  __int128 v21 = *a1;
  unint64_t v5 = 0xF00000000LL;
  do
  {
    char v6 = *((_BYTE *)&v21 + v4);
    *((_BYTE *)&v21 + v4) = *((_BYTE *)&v21 + HIDWORD(v5));
    *((_BYTE *)&v21 + HIDWORD(v5)) = v6;
    ++v4;
    v5 -= 0x100000000LL;
  }

  while (v4 != 8);
  unsigned int v20 = bswap32(a2);
  uint64_t v7 = sub_1000B0B5C(&v21, 0x10uLL, &v20, 4u, a3, 0x10u);
  if ((_DWORD)v7)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Failed h6() with error %!", v8, v9, v10, v11, v12, v13, v14, v7);
      unint64_t v15 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  uint64_t v16 = 0LL;
  unint64_t v17 = 0xF00000000LL;
  do
  {
    char v18 = *((_BYTE *)a3 + v16);
    *((_BYTE *)a3 + v16) = *((_BYTE *)a3 + HIDWORD(v17));
    *((_BYTE *)a3 + HIDWORD(v17)) = v18;
    ++v16;
    v17 -= 0x100000000LL;
  }

  while (v16 != 8);
  return v7;
}

uint64_t sub_100111F70(__int128 *a1, __int128 *a2, void *a3)
{
  uint64_t v4 = 0LL;
  __int128 v24 = *a1;
  unint64_t v5 = 0xF00000000LL;
  do
  {
    char v6 = *((_BYTE *)&v24 + v4);
    *((_BYTE *)&v24 + v4) = *((_BYTE *)&v24 + HIDWORD(v5));
    *((_BYTE *)&v24 + HIDWORD(v5)) = v6;
    ++v4;
    v5 -= 0x100000000LL;
  }

  while (v4 != 8);
  uint64_t v7 = 0LL;
  __int128 v23 = *a2;
  unint64_t v8 = 0xF00000000LL;
  do
  {
    char v9 = *((_BYTE *)&v23 + v7);
    *((_BYTE *)&v23 + v7) = *((_BYTE *)&v23 + HIDWORD(v8));
    *((_BYTE *)&v23 + HIDWORD(v8)) = v9;
    ++v7;
    v8 -= 0x100000000LL;
  }

  while (v7 != 8);
  uint64_t v10 = sub_1000B0B5C(&v23, 0x10uLL, &v24, 0x10u, a3, 0x10u);
  if ((_DWORD)v10)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Failed h7() with error %!", v11, v12, v13, v14, v15, v16, v17, v10);
      char v18 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  uint64_t v19 = 0LL;
  unint64_t v20 = 0xF00000000LL;
  do
  {
    char v21 = *((_BYTE *)a3 + v19);
    *((_BYTE *)a3 + v19) = *((_BYTE *)a3 + HIDWORD(v20));
    *((_BYTE *)a3 + HIDWORD(v20)) = v21;
    ++v19;
    v20 -= 0x100000000LL;
  }

  while (v19 != 8);
  return v10;
}

uint64_t sub_1001120DC(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = sub_1000B1020(a1, a2);
  if ((_DWORD)v4)
  {
    uint64_t v5 = v4;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Failed to generate public/private key %!", v6, v7, v8, v9, v10, v11, v12, v5);
      uint64_t v13 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657F08();
      }
    }
  }

  else
  {
    uint64_t v14 = 0LL;
    unint64_t v15 = 0x1F00000000LL;
    do
    {
      char v16 = *((_BYTE *)a2 + v14);
      *((_BYTE *)a2 + v14) = *((_BYTE *)a2 + HIDWORD(v15));
      *((_BYTE *)a2 + HIDWORD(v15)) = v16;
      ++v14;
      v15 -= 0x100000000LL;
    }

    while (v14 != 16);
    uint64_t v17 = 0LL;
    char v18 = a2 + 2;
    unint64_t v19 = 0x1F00000000LL;
    do
    {
      char v20 = *((_BYTE *)v18 + v17);
      *((_BYTE *)v18 + v17) = *((_BYTE *)v18 + HIDWORD(v19));
      *((_BYTE *)v18 + HIDWORD(v19)) = v20;
      ++v17;
      v19 -= 0x100000000LL;
    }

    while (v17 != 16);
    uint64_t v21 = 0LL;
    __int128 v22 = a2 + 4;
    unint64_t v23 = 0x1F00000000LL;
    do
    {
      char v24 = *((_BYTE *)v22 + v21);
      *((_BYTE *)v22 + v21) = *((_BYTE *)v22 + HIDWORD(v23));
      *((_BYTE *)v22 + HIDWORD(v23)) = v24;
      ++v21;
      v23 -= 0x100000000LL;
    }

    while (v21 != 16);
    uint64_t v25 = 0LL;
    unint64_t v26 = 0x1F00000000LL;
    do
    {
      char v27 = *((_BYTE *)a1 + v25);
      *((_BYTE *)a1 + v25) = *((_BYTE *)a1 + HIDWORD(v26));
      *((_BYTE *)a1 + HIDWORD(v26)) = v27;
      ++v25;
      v26 -= 0x100000000LL;
    }

    while (v25 != 16);
    uint64_t v28 = 0LL;
    __int128 v29 = a1 + 2;
    unint64_t v30 = 0x1F00000000LL;
    do
    {
      char v31 = *((_BYTE *)v29 + v28);
      *((_BYTE *)v29 + v28) = *((_BYTE *)v29 + HIDWORD(v30));
      *((_BYTE *)v29 + HIDWORD(v30)) = v31;
      ++v28;
      v30 -= 0x100000000LL;
    }

    while (v28 != 16);
    return 0LL;
  }

  return v5;
}

uint64_t sub_100112260(const void *a1, uint64_t a2, const void *a3, unsigned int a4, void *a5)
{
  int v8 = a2;
  size_t v10 = a2;
  __chkstk_darwin(a1, a2);
  uint64_t v12 = (char *)&v41 - v11;
  bzero((char *)&v41 - v11, v10);
  __chkstk_darwin(v13, v14);
  char v16 = (char *)&v41 - v15;
  bzero((char *)&v41 - v15, a4);
  memmove(v12, a1, v10);
  uint64_t v17 = 0LL;
  unint64_t v18 = 0x1F00000000LL;
  do
  {
    char v19 = v12[v17];
    v12[v17] = v12[HIDWORD(v18)];
    v12[HIDWORD(v18)] = v19;
    ++v17;
    v18 -= 0x100000000LL;
  }

  while (v17 != 16);
  char v20 = v12 + 32;
  unint64_t v21 = 0x1F00000000LL;
  for (uint64_t i = 32LL; i != 48; ++i)
  {
    char v23 = v12[i];
    v12[i] = v20[HIDWORD(v21)];
    v20[HIDWORD(v21)] = v23;
    v21 -= 0x100000000LL;
  }

  memmove(v16, a3, a4);
  uint64_t v24 = 0LL;
  unint64_t v25 = 0x1F00000000LL;
  do
  {
    char v26 = v16[v24];
    v16[v24] = v16[HIDWORD(v25)];
    v16[HIDWORD(v25)] = v26;
    ++v24;
    v25 -= 0x100000000LL;
  }

  while (v24 != 16);
  char v27 = v16 + 32;
  unint64_t v28 = 0x1F00000000LL;
  for (uint64_t j = 32LL; j != 48; ++j)
  {
    char v30 = v16[j];
    v16[j] = v27[HIDWORD(v28)];
    v27[HIDWORD(v28)] = v30;
    v28 -= 0x100000000LL;
  }

  char v31 = v16 + 64;
  unint64_t v32 = 0x1F00000000LL;
  for (uint64_t k = 64LL; k != 80; ++k)
  {
    char v34 = v16[k];
    v16[k] = v31[HIDWORD(v32)];
    v31[HIDWORD(v32)] = v34;
    v32 -= 0x100000000LL;
  }

  uint64_t v35 = sub_1000B0E34((uint64_t)v12, v8, (uint64_t)v16, a4, a5);
  if ((_DWORD)v35)
  {
    uint64_t v36 = v35;
    sub_1001EE0E4("Error: DHKey generation failed %!", v35);
  }

  else
  {
    uint64_t v37 = 0LL;
    unint64_t v38 = 0x1F00000000LL;
    do
    {
      char v39 = *((_BYTE *)a5 + v37);
      *((_BYTE *)a5 + v37) = *((_BYTE *)a5 + HIDWORD(v38));
      *((_BYTE *)a5 + HIDWORD(v38)) = v39;
      ++v37;
      v38 -= 0x100000000LL;
    }

    while (v37 != 16);
    return 0LL;
  }

  return v36;
}

uint64_t sub_1001124D4()
{
  uint64_t v2 = 0LL;
  BOOL v0 = sub_10012EBEC(&v2);
  uint64_t result = 0LL;
  if (v0)
  {
    while (1)
    {
      uint64_t result = v2;
      if (!*(_DWORD *)(v2 + 148) && !*(_BYTE *)(v2 + 54)) {
        break;
      }
      if (!sub_10012EBEC(&v2)) {
        return 0LL;
      }
    }
  }

  return result;
}

BOOL sub_100112528()
{
  uint64_t v3 = 0LL;
  BOOL result = sub_10012EBEC(&v3);
  if (result)
  {
    do
    {
      int v1 = *(unsigned __int8 *)(v3 + 54);
      if (v1 != 7 && v1 != 0) {
        return 1LL;
      }
    }

    while (sub_10012EBEC(&v3));
    return 0LL;
  }

  return result;
}

uint64_t sub_10011257C(uint64_t a1)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 0LL;
  }
  uint64_t result = sub_10012D890(a1);
  if (result) {
    return *(_BYTE *)(result + 144) == 0;
  }
  return result;
}

uint64_t sub_1001125B8(uint64_t a1, _BYTE *a2)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  uint64_t v3 = sub_10012D890(a1);
  if (!v3) {
    return 1301LL;
  }
  uint64_t v4 = v3;
  uint64_t result = 0LL;
  *a2 = *(_BYTE *)(v4 + 152) & 0x7F;
  return result;
}

uint64_t sub_100112610(uint64_t a1)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 0LL;
  }
  uint64_t v6 = 0LL;
  if (sub_100113628(a1, &v6)) {
    unsigned int v2 = *(_DWORD *)(v6 + 8);
  }
  else {
    unsigned int v2 = 0;
  }
  uint64_t v4 = sub_10012D890(a1);
  if (v4) {
    unsigned int v5 = *(_DWORD *)(v4 + 56);
  }
  else {
    unsigned int v5 = 0;
  }
  if (v2) {
    return v2;
  }
  else {
    return v5;
  }
}

uint64_t sub_10011268C(uint64_t a1, int a2)
{
  if (!a1) {
    return 101LL;
  }
  uint64_t v13 = 0LL;
  uint64_t result = sub_10010EEE0(a1, &v13);
  if (!(_DWORD)result)
  {
    if ((a2 & 0x1FFC) == 0 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"SetRemoteDeviceClass is zero !!!!!!", v4, v5, v6, v7, v8, v9, v10, v12);
      uint64_t v11 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t result = 0LL;
    *(_DWORD *)(v13 + 56) = a2;
  }

  return result;
}

uint64_t sub_100112720(uint64_t a1)
{
  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result)
  {
    sub_1001EE134((uint64_t)"unknown connection state %d", v3, v4, v5, v6, v7, v8, v9, a1);
    uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu);
    uint64_t result = os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_100657858();
      return 0LL;
    }
  }

  return result;
}

void sub_1001127A8(uint64_t a1)
{
  unsigned int v2 = (unsigned int *)(a1 + 148);
  uint64_t v3 = *(unsigned int *)(a1 + 72);
  if (*(_DWORD *)(a1 + 148))
  {
    if (sub_1001EE9D8(v3)) {
      sub_1001EE2A0();
    }
  }

  else
  {
    sub_1001EEB14(v3);
    *(_DWORD *)(a1 + 72) = 0;
  }

  if ((int)*v2 <= 254)
  {
    do
      unsigned int v12 = __ldxr(v2);
    while (__stxr(v12 + 1, v2));
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Reached max connection retain count. Not incrementing ref count",  v4,  v5,  v6,  v7,  v8,  v9,  v10,  v13);
      uint64_t v11 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

void sub_10011286C(uint64_t a1)
{
  unsigned int v2 = (unsigned int *)(a1 + 148);
  int v1 = *(_DWORD *)(a1 + 148);
  if (v1 < 255)
  {
    if (v1)
    {
      do
        unsigned int v11 = __ldxr(v2);
      while (__stxr(v11 - 1, v2));
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Device attempted to decrement when reference count is already zero",  v12,  v13,  v14,  v15,  v16,  v17,  v18,  v20);
      char v19 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Reached max connection retain count. Not decrementing ref count",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  v20);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

uint64_t sub_100112940()
{
  uint64_t v3 = 0LL;
  uint64_t v4 = 0LL;
  if (sub_10012EBEC(&v4))
  {
    unsigned int v0 = 0;
    int v1 = 0;
    do
    {
      if (!*(_BYTE *)(v4 + 54))
      {
        if (*(_BYTE *)(v4 + 144)) {
          ++v0;
        }
        else {
          ++v1;
        }
      }
    }

    while (sub_10012EBEC(&v4));
  }

  else
  {
    int v1 = 0;
    unsigned int v0 = 0;
  }

  while (sub_10012ECBC(&v3))
  {
    if (*(_BYTE *)(v3 + 124) != 7)
    {
      if (*(_BYTE *)(v3 + 70)) {
        ++v0;
      }
      else {
        ++v1;
      }
    }
  }

  if (v1) {
    return v0 + 1;
  }
  else {
    return v0;
  }
}

BOOL sub_1001129EC(uint64_t a1)
{
  return *(_BYTE *)(a1 + 144) == 1 && *(_BYTE *)(a1 + 226);
}

BOOL sub_100112A10()
{
  unsigned int v0 = *(unsigned __int8 *)(qword_1008F6D08 + 12);
  return sub_100112940() < v0;
}

double sub_100112A44()
{
  off_1008E2138 = 0LL;
  double result = 0.0;
  xmmword_1008E2118 = 0u;
  *(_OWORD *)&qword_1008E2128 = 0u;
  xmmword_1008E20F8 = 0u;
  *(_OWORD *)&qword_1008E2108 = 0u;
  xmmword_1008E20D8 = 0u;
  *(_OWORD *)&qword_1008E20E8 = 0u;
  return result;
}

uint64_t sub_100112A64(uint64_t a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *(unsigned __int8 *)(qword_1008F6D08 + 7);
  if (a1)
  {
    if (*(_BYTE *)(qword_1008F6D08 + 7)) {
      goto LABEL_3;
    }
LABEL_14:
    sub_1001EE2A0();
    if (a2) {
      goto LABEL_4;
    }
    goto LABEL_15;
  }

  sub_1001EE2A0();
  if (!(_DWORD)v6) {
    goto LABEL_14;
  }
LABEL_3:
  if (a2) {
    goto LABEL_4;
  }
LABEL_15:
  sub_1001EE2A0();
LABEL_4:
  uint64_t v7 = *a2;
  if (*a2)
  {
    if (!(_DWORD)v6) {
      return 1317LL;
    }
    uint64_t v8 = 0LL;
    LODWORD(v9) = 0;
    do
    {
      if (v7[v8] == a1) {
        uint64_t v9 = 1316LL;
      }
      else {
        uint64_t v9 = v9;
      }
      v8 += 2LL;
    }

    while (2LL * v6 != v8);
    if ((_DWORD)v9) {
      return v9;
    }
  }

  else
  {
    uint64_t v7 = sub_1000B1814(16 * v6);
    *a2 = v7;
    if (!v7) {
      return 106LL;
    }
  }

  if (!(_DWORD)v6) {
    return 1317LL;
  }
  unsigned int v10 = 0;
  while (*v7)
  {
    ++v10;
    v7 += 2;
  }

  uint64_t v9 = 0LL;
  *uint64_t v7 = a1;
  v7[1] = a3;
  return v9;
}

uint64_t sub_100112B4C(uint64_t a1, void **a2)
{
  uint64_t v4 = *(unsigned __int8 *)(qword_1008F6D08 + 7);
  uint64_t v5 = *a2;
  if (!a1)
  {
    sub_1001EE2A0();
    if ((_DWORD)v4) {
      goto LABEL_3;
    }
LABEL_15:
    sub_1001EE2A0();
    if (!v5) {
      return 1318LL;
    }
    int v7 = 0;
    goto LABEL_17;
  }

  if (!*(_BYTE *)(qword_1008F6D08 + 7)) {
    goto LABEL_15;
  }
LABEL_3:
  if (!v5) {
    return 1318LL;
  }
  int v6 = 0;
  int v7 = 0;
  uint64_t v8 = v5;
  do
  {
    if (*v8 == a1)
    {
      ++v7;
      *uint64_t v8 = 0LL;
      v8[1] = 0LL;
    }

    else if (*v8)
    {
      ++v6;
    }

    v8 += 2;
    --v4;
  }

  while (v4);
  if (v6)
  {
    if (!v7) {
      return 1318LL;
    }
    return 0LL;
  }

uint64_t sub_100112C10(uint64_t a1, uint64_t a2)
{
  return sub_100112A64(a1, (void **)&qword_1008E20E8, a2);
}

uint64_t sub_100112C20(uint64_t a1, uint64_t a2)
{
  return sub_100112A64(a1, (void **)&qword_1008E20F0, a2);
}

uint64_t sub_100112C30(uint64_t a1, uint64_t a2)
{
  return sub_100112A64(a1, (void **)&xmmword_1008E20F8, a2);
}

uint64_t sub_100112C40(uint64_t a1, uint64_t a2)
{
  return sub_100112A64(a1, (void **)&xmmword_1008E2118 + 1, a2);
}

uint64_t sub_100112C50(uint64_t a1)
{
  return sub_100112B4C(a1, (void **)&xmmword_1008E2118 + 1);
}

void *sub_100112C5C(void *result)
{
  off_1008E2138 = result;
  return result;
}

uint64_t sub_100112C68(uint64_t result, uint64_t a2)
{
  uint64_t v2 = xmmword_1008E20D8;
  if ((void)xmmword_1008E20D8)
  {
    uint64_t v3 = qword_1008F6D08;
    if (*(_BYTE *)(qword_1008F6D08 + 7))
    {
      uint64_t v5 = result;
      uint64_t v6 = 0LL;
      unint64_t v7 = 0LL;
      do
      {
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, void))(v2 + v6);
        if (v8)
        {
          double result = v8(v5, a2, *(void *)(v2 + v6 + 8));
          uint64_t v2 = xmmword_1008E20D8;
          uint64_t v3 = qword_1008F6D08;
        }

        ++v7;
        v6 += 16LL;
      }

      while (v7 < *(unsigned __int8 *)(v3 + 7));
    }
  }

  return result;
}

uint64_t sub_100112CF8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *((void *)&xmmword_1008E20D8 + 1);
  if (*((void *)&xmmword_1008E20D8 + 1))
  {
    uint64_t v3 = qword_1008F6D08;
    if (*(_BYTE *)(qword_1008F6D08 + 7))
    {
      uint64_t v5 = result;
      uint64_t v6 = 0LL;
      unint64_t v7 = 0LL;
      do
      {
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, void))(v2 + v6);
        if (v8)
        {
          double result = v8(v5, a2, *(void *)(v2 + v6 + 8));
          uint64_t v2 = *((void *)&xmmword_1008E20D8 + 1);
          uint64_t v3 = qword_1008F6D08;
        }

        ++v7;
        v6 += 16LL;
      }

      while (v7 < *(unsigned __int8 *)(v3 + 7));
    }
  }

  return result;
}

uint64_t sub_100112D88(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = qword_1008E20E8;
  if (qword_1008E20E8)
  {
    uint64_t v4 = qword_1008F6D08;
    if (*(_BYTE *)(qword_1008F6D08 + 7))
    {
      uint64_t v7 = result;
      uint64_t v8 = 0LL;
      unint64_t v9 = 0LL;
      do
      {
        unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v3 + v8);
        if (v10)
        {
          double result = v10(v7, a2, *(void *)(v3 + v8 + 8), a3);
          uint64_t v3 = qword_1008E20E8;
          uint64_t v4 = qword_1008F6D08;
        }

        ++v9;
        v8 += 16LL;
      }

      while (v9 < *(unsigned __int8 *)(v4 + 7));
    }
  }

  return result;
}

void sub_100112E28(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"%! (%d)", v2, v3, v4, v5, v6, v7, v8, 1305LL);
    unint64_t v9 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_10065AFF0(v9);
    }
  }

  uint64_t v10 = qword_1008E20F0;
  if (qword_1008E20F0)
  {
    uint64_t v11 = qword_1008F6D08;
    if (*(_BYTE *)(qword_1008F6D08 + 7))
    {
      uint64_t v12 = 0LL;
      unint64_t v13 = 0LL;
      do
      {
        uint64_t v14 = *(void (**)(uint64_t, void))(v10 + v12);
        if (v14)
        {
          v14(a1, *(void *)(v10 + v12 + 8));
          uint64_t v10 = qword_1008E20F0;
          uint64_t v11 = qword_1008F6D08;
        }

        ++v13;
        v12 += 16LL;
      }

      while (v13 < *(unsigned __int8 *)(v11 + 7));
    }
  }

uint64_t sub_100112F04(uint64_t result, uint64_t a2)
{
  uint64_t v2 = xmmword_1008E20F8;
  if ((void)xmmword_1008E20F8)
  {
    uint64_t v3 = qword_1008F6D08;
    if (*(_BYTE *)(qword_1008F6D08 + 7))
    {
      uint64_t v5 = result;
      uint64_t v6 = 0LL;
      unint64_t v7 = 0LL;
      do
      {
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, void))(v2 + v6);
        if (v8)
        {
          double result = v8(v5, a2, *(void *)(v2 + v6 + 8));
          uint64_t v2 = xmmword_1008E20F8;
          uint64_t v3 = qword_1008F6D08;
        }

        ++v7;
        v6 += 16LL;
      }

      while (v7 < *(unsigned __int8 *)(v3 + 7));
    }
  }

  return result;
}

void sub_100112F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (sub_10012D514(a2))
  {
    if ((_DWORD)a1)
    {
      sub_10010D394(a2, *(_BYTE *)(a2 + 152) & 0x7F);
    }

    else
    {
      *(_WORD *)(a2 + 136) = a4;
      if (!(_DWORD)a3) {
        sub_1001197E4();
      }
    }

    if (off_1008E2138) {
      off_1008E2138(a1, a2, a3, a4);
    }
    uint64_t v16 = *((void *)&xmmword_1008E2118 + 1);
    if (*((void *)&xmmword_1008E2118 + 1))
    {
      uint64_t v17 = qword_1008F6D08;
      if (*(_BYTE *)(qword_1008F6D08 + 7))
      {
        uint64_t v18 = 0LL;
        unint64_t v19 = 0LL;
        uint64_t v20 = a2 + 48;
        do
        {
          unint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v16 + v18);
          if (v21)
          {
            v21(a1, v20, a3, a4, *(void *)(v16 + v18 + 8));
            uint64_t v16 = *((void *)&xmmword_1008E2118 + 1);
            uint64_t v17 = qword_1008F6D08;
          }

          ++v19;
          v18 += 16LL;
        }

        while (v19 < *(unsigned __int8 *)(v17 + 7));
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HCIEventHandler_ModeChange Bad Handle: %x", v8, v9, v10, v11, v12, v13, v14, a2);
    uint64_t v15 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_1001130F4(uint64_t a1, uint64_t a2)
{
  if (sub_10012D514(a1))
  {
    uint64_t v4 = *((void *)&xmmword_1008E20F8 + 1);
    if (*((void *)&xmmword_1008E20F8 + 1))
    {
      uint64_t v5 = qword_1008F6D08;
      if (*(_BYTE *)(qword_1008F6D08 + 7))
      {
        uint64_t v6 = 0LL;
        unint64_t v7 = 0LL;
        uint64_t v8 = a1 + 48;
        do
        {
          uint64_t v9 = *(void (**)(uint64_t, uint64_t, void))(v4 + v6);
          if (v9)
          {
            v9(v8, a2, *(void *)(v4 + v6 + 8));
            uint64_t v4 = *((void *)&xmmword_1008E20F8 + 1);
            uint64_t v5 = qword_1008F6D08;
          }

          ++v7;
          v6 += 16LL;
        }

        while (v7 < *(unsigned __int8 *)(v5 + 7));
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HCIEventHandler_MaxSlotsChange Bad Handle: %x", v10, v11, v12, v13, v14, v15, v16, a1);
    uint64_t v17 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_1001131E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"ConnectionPacketTypeChanged ERROR: %!", v6, v7, v8, v9, v10, v11, v12, a1);
      uint64_t v13 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  if (sub_10012D514(a2) || sub_10012D5BC(a2))
  {
    uint64_t v14 = qword_1008E2108;
    if (qword_1008E2108)
    {
      uint64_t v15 = qword_1008F6D08;
      if (*(_BYTE *)(qword_1008F6D08 + 7))
      {
        uint64_t v16 = 0LL;
        unint64_t v17 = 0LL;
        do
        {
          uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v14 + v16);
          if (v18)
          {
            v18(a1, a2, a3, *(void *)(v14 + v16 + 8));
            uint64_t v14 = qword_1008E2108;
            uint64_t v15 = qword_1008F6D08;
          }

          ++v17;
          v16 += 16LL;
        }

        while (v17 < *(unsigned __int8 *)(v15 + 7));
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"ConnectionPacketTypeChanged, Unknown Handle: %d", v19, v20, v21, v22, v23, v24, v25, a2);
    char v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_100113330(uint64_t result, uint64_t a2)
{
  uint64_t v2 = qword_1008E2110;
  if (qword_1008E2110)
  {
    uint64_t v3 = qword_1008F6D08;
    if (*(_BYTE *)(qword_1008F6D08 + 7))
    {
      uint64_t v5 = result;
      uint64_t v6 = 0LL;
      unint64_t v7 = 0LL;
      do
      {
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, void))(v2 + v6);
        if (v8)
        {
          double result = v8(v5, a2, *(void *)(v2 + v6 + 8));
          uint64_t v2 = qword_1008E2110;
          uint64_t v3 = qword_1008F6D08;
        }

        ++v7;
        v6 += 16LL;
      }

      while (v7 < *(unsigned __int8 *)(v3 + 7));
    }
  }

  return result;
}

uint64_t sub_1001133C0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = xmmword_1008E2118;
  if ((void)xmmword_1008E2118)
  {
    uint64_t v3 = qword_1008F6D08;
    if (*(_BYTE *)(qword_1008F6D08 + 7))
    {
      uint64_t v5 = result;
      uint64_t v6 = 0LL;
      unint64_t v7 = 0LL;
      do
      {
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, void))(v2 + v6);
        if (v8)
        {
          double result = v8(v5, a2, *(void *)(v2 + v6 + 8));
          uint64_t v2 = xmmword_1008E2118;
          uint64_t v3 = qword_1008F6D08;
        }

        ++v7;
        v6 += 16LL;
      }

      while (v7 < *(unsigned __int8 *)(v3 + 7));
    }
  }

  return result;
}

uint64_t sub_100113450(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2) {
    uint64_t v6 = a2 + 48;
  }
  else {
    uint64_t v6 = 0LL;
  }
  uint64_t v7 = qword_1008E2128;
  if (qword_1008E2128)
  {
    uint64_t v8 = qword_1008F6D08;
    if (*(_BYTE *)(qword_1008F6D08 + 7))
    {
      uint64_t v13 = result;
      uint64_t v14 = 0LL;
      unint64_t v15 = 0LL;
      do
      {
        uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7 + v14);
        if (v16)
        {
          double result = v16(v13, v6, a3, a4, a5, a6, *(void *)(v7 + v14 + 8));
          uint64_t v7 = qword_1008E2128;
          uint64_t v8 = qword_1008F6D08;
        }

        ++v15;
        v14 += 16LL;
      }

      while (v15 < *(unsigned __int8 *)(v8 + 7));
    }
  }

  return result;
}

uint64_t sub_100113518(uint64_t result, uint64_t a2)
{
  uint64_t v2 = qword_1008E2130;
  if (qword_1008E2130)
  {
    uint64_t v3 = qword_1008F6D08;
    if (*(_BYTE *)(qword_1008F6D08 + 7))
    {
      uint64_t v5 = result;
      uint64_t v6 = 0LL;
      unint64_t v7 = 0LL;
      do
      {
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, void))(v2 + v6);
        if (v8)
        {
          double result = v8(v5, a2, *(void *)(v2 + v6 + 8));
          uint64_t v2 = qword_1008E2130;
          uint64_t v3 = qword_1008F6D08;
        }

        ++v7;
        v6 += 16LL;
      }

      while (v7 < *(unsigned __int8 *)(v3 + 7));
    }
  }

  return result;
}

void sub_1001135A8()
{
  unsigned int v0 = *(unsigned __int16 *)qword_1008F6D08;
  if (!*(_WORD *)qword_1008F6D08)
  {
    sub_1001EE2A0();
    unsigned int v0 = *(unsigned __int16 *)qword_1008F6D08;
  }

  int v1 = sub_1000B1814(16LL * v0);
  qword_1008E2140 = (uint64_t)v1;
  if (!v1)
  {
    sub_1001EE2A0();
    int v1 = (void *)qword_1008E2140;
  }

  dword_1008E2148 = 0;
  off_1008E2150 = 0LL;
  off_1008E2158 = 0LL;
  dword_1008E2178 = 0;
  bzero(v1, 16LL * *(unsigned __int16 *)qword_1008F6D08);
}

BOOL sub_100113628(uint64_t a1, uint64_t *a2)
{
  unsigned int v2 = *(unsigned __int16 *)qword_1008F6D08;
  BOOL v3 = *(_WORD *)qword_1008F6D08 != 0;
  if (*(_WORD *)qword_1008F6D08)
  {
    unsigned int v4 = 0;
    for (uint64_t i = qword_1008E2140;
          *(_DWORD *)a1 != *(_DWORD *)i || *(unsigned __int16 *)(a1 + 4) != *(unsigned __int16 *)(i + 4);
          i += 16LL)
    {
      BOOL v3 = ++v4 < v2;
      if (v4 >= v2) {
        return v3;
      }
    }

    *a2 = i;
  }

  return v3;
}

uint64_t sub_100113690( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void), void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (dword_1008E2148)
  {
    if (dword_1008E2148 == 1) {
      return 1311LL;
    }
    if (dword_1008E2148 == 2) {
      return 1312LL;
    }
    sub_1001EE2A0();
    return 103LL;
  }

  off_1008E2150 = a4;
  off_1008E2158 = a5;
  qword_1008E2160 = a6;
  dword_1008E2148 = 1;
  uint64_t result = sub_100128D24(0, a2, a3, (uint64_t)a4, (uint64_t)a5, a6, a7, a8, a1);
  if ((_DWORD)result) {
    dword_1008E2148 = 0;
  }
  return result;
}

uint64_t sub_100113738( uint64_t (*a1)(void, void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((_DWORD)xmmword_1008F6FB8)
  {
    switch(dword_1008E2148)
    {
      case 0:
        return 1313LL;
      case 1:
        off_1008E2168 = a1;
        qword_1008E2170 = a2;
        uint64_t result = sub_1001214B4(1, (uint64_t)sub_1001137BC, a3, a4, a5, a6, a7, a8, v9);
        dword_1008E2148 = 0;
        return result;
      case 2:
        return 1312LL;
    }

    sub_1001EE2A0();
  }

  return 103LL;
}

uint64_t sub_1001137BC(uint64_t result)
{
  if (off_1008E2168) {
    return off_1008E2168(result, qword_1008E2170);
  }
  return result;
}

uint64_t sub_1001137D8(uint64_t result)
{
  if ((_DWORD)xmmword_1008F6FB8)
  {
    if ((_DWORD)result != 621) {
      goto LABEL_7;
    }
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Inquiry not finished in time... Cancelling.", v1, v2, v3, v4, v5, v6, v7, v9);
      uint64_t v8 = (os_log_s *)sub_100086554(0x3Fu);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100657FDC(v8);
      }
    }

    uint64_t result = sub_1001214B4(1, (uint64_t)sub_1001137D8, v2, v3, v4, v5, v6, v7, v9);
    if ((_DWORD)result)
    {
LABEL_7:
      if (off_1008E2158)
      {
        if (dword_1008E2148 != 2)
        {
          if (dword_1008E2148 != 1) {
            return result;
          }
          dword_1008E2148 = 0;
        }

        return ((uint64_t (*)(void))off_1008E2158)();
      }
    }
  }

  return result;
}

uint64_t sub_100113890(uint64_t result)
{
  if ((_DWORD)xmmword_1008F6FB8)
  {
    if ((dword_1008E2148 - 1) <= 1 && off_1008E2150 != 0LL)
    {
      uint64_t v2 = result;
      uint64_t result = off_1008E2150(result, qword_1008E2160);
      int v3 = dword_1008E2178;
      uint64_t v4 = qword_1008E2140 + 16LL * dword_1008E2178;
      int v5 = *(_DWORD *)v2;
      *(_WORD *)(v4 + 4) = *(_WORD *)(v2 + 4);
      *(_DWORD *)uint64_t v4 = v5;
      *(_DWORD *)(v4 + 8) = *(_DWORD *)(v2 + 8);
      *(_BYTE *)(v4 + 12) = *(_BYTE *)(v2 + 6);
      *(_BYTE *)(v4 + 13) = *(_BYTE *)(v2 + 12);
      *(_WORD *)(v4 + 14) = *(_WORD *)(v2 + 14);
      else {
        int v6 = 0;
      }
      dword_1008E2178 = v6;
    }
  }

  return result;
}

uint64_t sub_10011394C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  uint64_t v4 = sub_10012D890(a1);
  if (!v4) {
    return 1301LL;
  }
  uint64_t v5 = v4;
  if ((*(_WORD *)(v4 + 138) & 4) == 0) {
    return 1333LL;
  }
  uint64_t result = sub_100128D24(41LL);
  if (!(_DWORD)result) {
    *(_BYTE *)(v5 + 152) |= 0x80u;
  }
  return result;
}

uint64_t sub_100113A28(uint64_t a1, __int16 a2, unsigned int a3, unsigned int a4, __int16 a5, __int16 a6)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  uint64_t v11 = sub_10012D890(a1);
  if (!v11) {
    return 1301LL;
  }
  if (*(_DWORD *)(v11 + 176)) {
    return 119LL;
  }
  if (!*(_BYTE *)(v11 + 144))
  {
    unsigned int v13 = *(unsigned __int16 *)(v11 + 140);
    if (v13 < a4) {
      return 1337LL;
    }
    if (v13 < a3) {
      LOWORD(a3) = *(_WORD *)(v11 + 140);
    }
  }

  if ((*(_WORD *)(v11 + 138) & 4) == 0) {
    return 1333LL;
  }
  uint64_t v19 = 0LL;
  v20[0] = 0LL;
  *(_BYTE *)(v11 + 192) = 0;
  uint64_t v14 = v11;
  __int16 v15 = a2;
  __int16 v16 = a3;
  __int16 v17 = a4;
  __int16 v18 = a5;
  LOWORD(v19) = a6;
  v20[1] = &v14;
  LOWORD(v20[0]) = 24;
  return sub_1001EE6E8((uint64_t)sub_100113B24, v20, 2 * ((5 * a2) & 0x7FFFu), (int *)(v11 + 176));
}

void sub_100113B24(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 8);
  *(_DWORD *)(*v1 + 176) = 0;
  uint64_t v2 = *v1;
  if (*(_BYTE *)(*v1 + 192)
    || (BOOL v3 = sub_10011A138(v2 + 48), v2 = *v1, v3)
    || (uint64_t v4 = sub_10012D8E8(v2 + 48), v2 = *v1, v4))
  {
    v24[0] = 0LL;
    *(_BYTE *)(v2 + 192) = 0;
    __int128 v5 = *(_OWORD *)v1;
    uint64_t v26 = v1[2];
    __int128 v25 = v5;
    v24[1] = &v25;
    LOWORD(v24[0]) = 24;
    if (sub_1001EE6E8( (uint64_t)sub_100113B24,  v24,  2 * ((5 * *((_WORD *)v1 + 4)) & 0x7FFFu),  (int *)(*v1 + 176))
      && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Error registering automatic sniff", v6, v7, v8, v9, v10, v11, v12, v22);
      unsigned int v13 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_10065B898();
      }
    }
  }

  else if (!*(_BYTE *)(v2 + 152))
  {
    uint64_t v23 = *v1;
    if (sub_100128D24(41LL))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Automatic sniff failed", v14, v15, v16, v17, v18, v19, v20, v23);
        uint64_t v21 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_10065B898();
        }
      }
    }

    else
    {
      *(_BYTE *)(*v1 + 152) |= 0x80u;
    }
  }

uint64_t sub_100113CA0(uint64_t a1)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  uint64_t v1 = sub_10012D890(a1);
  if (!v1) {
    return 1301LL;
  }
  uint64_t v2 = v1;
  *(_BYTE *)(v1 + 192) = 1;
  uint64_t result = sub_100128D24(42LL);
  if (!(_DWORD)result) {
    *(_BYTE *)(v2 + 152) |= 0x80u;
  }
  return result;
}

uint64_t sub_100113D20(uint64_t a1)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  uint64_t v1 = sub_10012D890(a1);
  if (!v1) {
    return 1301LL;
  }
  uint64_t v2 = v1;
  uint64_t result = *(unsigned int *)(v1 + 176);
  if ((_DWORD)result)
  {
    uint64_t result = sub_1001EEB14(result);
    if (!(_DWORD)result) {
      *(_DWORD *)(v2 + 176) = 0;
    }
  }

  return result;
}

uint64_t sub_100113D78(uint64_t a1, uint64_t *a2)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  uint64_t v3 = sub_10012D890(a1);
  if (!v3)
  {
    uint64_t v6 = 1301LL;
    if ((sub_1000A86F0() & 1) == 0) {
      return v6;
    }
    uint64_t v16 = 0LL;
    goto LABEL_16;
  }

  uint64_t v4 = (unsigned __int16 *)v3;
  uint64_t v5 = sub_100112C40((uint64_t)sub_100113E98, 0LL);
  if ((_DWORD)v5 != 1316)
  {
    uint64_t v6 = v5;
    if ((_DWORD)v5)
    {
      if ((sub_1000A86F0() & 1) == 0) {
        return v6;
      }
      goto LABEL_15;
    }
  }

  uint64_t v7 = v4 + 90;
  if (a2)
  {
    uint64_t v8 = *a2;
    *((_DWORD *)v4 + 47) = *((_DWORD *)a2 + 2);
    *uint64_t v7 = v8;
  }

  else
  {
    *(_DWORD *)uint64_t v7 = 0;
  }

  uint64_t v6 = sub_100113EF8((uint64_t)v4, 1);
  if ((_DWORD)v6 && sub_1000A86F0())
  {
LABEL_15:
    uint64_t v16 = *v4;
LABEL_16:
    sub_1001EE134( (uint64_t)"Could not apply power-saving policy for handle 0x%x: %!",  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v16);
    uint64_t v17 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_10065BB00();
    }
  }

  return v6;
}

uint64_t sub_100113E98(int a1, uint64_t a2)
{
  uint64_t result = sub_10012D890(a2);
  return result;
}

uint64_t sub_100113EF8(uint64_t a1, int a2)
{
  uint64_t v4 = a1 + 48;
  if (!*(_DWORD *)(a1 + 176) || (uint64_t result = sub_100113D20(a1 + 48), !(_DWORD)result))
  {
    int v6 = *(_DWORD *)(a1 + 180);
    if ((v6 - 2) >= 2)
    {
      if (v6 == 1) {
        goto LABEL_8;
      }
      if (v6)
      {
        sub_1001EE2A0();
      }

      else if (a2)
      {
LABEL_8:
        if (*(_BYTE *)(a1 + 152) != 2) {
          return 0LL;
        }
        return sub_100113CA0(v4);
      }

      return 0LL;
    }

    if (*(_BYTE *)(a1 + 152) == 2)
    {
      return sub_100113CA0(v4);
    }

    if (*(unsigned __int8 *)(a1 + 54) > 5u)
    {
      int v7 = sub_1000A86F0();
      uint64_t result = 0LL;
      if (v7)
      {
        uint64_t v8 = sub_10012EFE0(*(unsigned __int8 *)(a1 + 54));
        sub_1001EE134( (uint64_t)"Tried to sniff while in state %s. Ignoring.",  v9,  v10,  v11,  v12,  v13,  v14,  v15,  (uint64_t)v8);
        uint64_t v16 = (os_log_s *)sub_100086554(0x2Cu);
        BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);
        uint64_t result = 0LL;
        if (v17)
        {
          *(_DWORD *)int buf = 136446210;
          uint64_t v19 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          return 0LL;
        }
      }
    }

    else if (v6 == 2 || *(_BYTE *)(a1 + 193))
    {
      *(_BYTE *)(a1 + 193) = 0;
      return sub_10011394C(v4, *(unsigned __int16 *)(a1 + 184), *(unsigned __int16 *)(a1 + 184));
    }

    else
    {
      return sub_100113A28( v4,  *(_WORD *)(a1 + 190),  *(unsigned __int16 *)(a1 + 184),  *(unsigned __int16 *)(a1 + 184),  *(_WORD *)(a1 + 186),  *(_WORD *)(a1 + 188));
    }
  }

  return result;
}

uint64_t sub_10011412C()
{
  uint64_t v2 = 0LL;
  char v0 = 1;
  while (sub_10012EBEC(&v2))
  {
    if (*(_DWORD *)(v2 + 176) && *(_BYTE *)(v2 + 152) != 2)
    {
      sub_10011394C(v2 + 48, *(unsigned __int16 *)(v2 + 184), *(unsigned __int16 *)(v2 + 184));
      char v0 = 0;
    }
  }

  return v0 & 1;
}

uint64_t sub_1001141A4(uint64_t result)
{
  word_1008D7420 = result;
  return result;
}

uint64_t sub_1001141B0(uint64_t result)
{
  byte_1008D7424 = result;
  return result;
}

uint64_t sub_1001141BC(uint64_t result)
{
  word_1008D7414 = result;
  return result;
}

void sub_1001141C8()
{
  byte_1008E2182 = 0;
  byte_1008E2204 = 0;
  byte_1008E21B9 = 0;
  byte_1008E2205 = 0;
  byte_1008E21F8 = 0;
  byte_1008E2202 = -1;
  byte_1008E21ED = 0;
  byte_1008E21EC = 0;
  byte_1008E21B8 = 0;
  byte_1008E21C8 = 0;
  byte_1008E2181 = 0;
  byte_1008E2180 = 0;
  dword_1008E21E8 = 0;
  off_1008E2198 = 0LL;
  off_1008E21A0 = 0LL;
  off_1008E21A8 = 0LL;
  off_1008E21B0 = 0LL;
  word_1008E2200 = 96;
  dword_1008E21FC = 0;
  qword_1008E2208 = 0LL;
}

uint64_t sub_100114274()
{
  if (byte_1008E2181 || (sub_10010C6E8() & 1) != 0)
  {
    uint64_t v6 = 0LL;
    char v7 = 2;
  }

  else
  {
    byte_1008E2181 = 1;
    uint64_t v6 = sub_1001214B4(81, (uint64_t)sub_100115AE4, v0, v1, v2, v3, v4, v5, dword_1008E21FC);
    if (!(_DWORD)v6) {
      return v6;
    }
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteClassofDevice failed", v9, v10, v11, v12, v13, v14, v15, v17);
      uint64_t v16 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    char v7 = 0;
  }

  byte_1008E2181 = v7;
  return v6;
}

uint64_t sub_100114338(uint64_t a1)
{
  int v1 = dword_1008F6D18;
  *(_WORD *)(a1 + 4) = word_1008F6D1C;
  *(_DWORD *)a1 = v1;
  return 0LL;
}

uint64_t sub_100114358()
{
  return byte_1008F6D20;
}

uint64_t sub_100114368(void (*a1)(int a1), uint64_t a2)
{
  uint64_t result = 1325LL;
  if ((byte_1008E2182 & 1) == 0)
  {
    BOOL v4 = !byte_1008E21B8 && byte_1008E21C8 == 0;
    if (v4 && (byte_1008E21EC & 1) == 0 && !byte_1008E21ED)
    {
      uint64_t v6 = sub_1001EDBA0(0x2Cu);
      uint64_t result = sub_1001214B4(51, (uint64_t)sub_100114454, v7, v8, v9, v10, v11, v12, *(_WORD *)(v6 + 10) & 6 | 1u);
      if ((_DWORD)result == 628) {
        uint64_t result = sub_1001EE6DC((uint64_t)sub_100114634, 0LL, 0LL);
      }
      if (!(_DWORD)result)
      {
        byte_1008E2182 = 1;
        dword_1008E2184 = 0;
        qword_1008E2188 = a2;
        uint64_t v13 = sub_10011463C;
        if (a1) {
          uint64_t v13 = a1;
        }
        off_1008E2190 = (uint64_t (*)(void, void))v13;
      }
    }
  }

  return result;
}

void sub_100114454( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 != 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writeDefaultLinkPolicyCb - orphan callback", v11, v12, v13, v14, v15, v16, v17, v45);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v8 = a1;
  if ((_DWORD)a1 == 628) {
    goto LABEL_17;
  }
  if ((a1 - 701) <= 0x44)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write_Default_Link_Policy, ignoring error", v9, a3, a4, a5, a6, a7, a8, v45);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    dword_1008E2184 = v8;
LABEL_17:
    uint64_t v29 = sub_1001214B4(67, (uint64_t)sub_100115B80, a3, a4, a5, a6, a7, a8, *(unsigned __int16 *)qword_1008E2188);
    if (!(_DWORD)v29) {
      return;
    }
    uint64_t v8 = v29;
    if ((_DWORD)v29 == 628)
    {
      sub_100115B80(628LL, v30, v31, v32, v33, v34, v35, v36);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WritePageTimeout", v37, v38, v39, v40, v41, v42, v43, v46);
      uint64_t v44 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    byte_1008E2182 = 0;
    char v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
    if (off_1008E2190)
    {
      uint64_t v28 = qword_1008E2188;
      goto LABEL_25;
    }

    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_17;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writeDefaultLinkPolicyCb", v19, v20, v21, v22, v23, v24, v25, v45);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  byte_1008E2182 = 0;
  char v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
  if (off_1008E2190)
  {
    uint64_t v28 = qword_1008E2188;
LABEL_25:
    v27(v8, v28);
  }

void sub_100114634( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10011463C(int a1)
{
  if (a1 && sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"devmgrCommandCompleteCallback", v1, v2, v3, v4, v5, v6, v7, v9);
    uint64_t v8 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

uint64_t sub_1001146A0(void (*a1)(int a1), uint64_t a2)
{
  if (!sub_10012D514(a2)) {
    sub_1001EE2A0();
  }
  if (off_1008E2198) {
    return 1319LL;
  }
  uint64_t result = sub_100128D24(21LL);
  if (!(_DWORD)result)
  {
    uint64_t v4 = sub_10011463C;
    if (a1) {
      uint64_t v4 = a1;
    }
    off_1008E2198 = v4;
  }

  return result;
}

void sub_100114718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (off_1008E2198)
  {
    uint64_t v23 = (void (*)(uint64_t, uint64_t, uint64_t))off_1008E2198;
    off_1008E2198 = 0LL;
    if (sub_10012D514(a2))
    {
      v23(a1, a2 + 48, a3);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Device disconnected during the name request. Ignoring event.",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  v22);
      uint64_t v21 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        goto LABEL_9;
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"orphan event - ReadRemoteSupportedFeaturesComplete", v6, v7, v8, v9, v10, v11, v12, v22);
    uint64_t v13 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
LABEL_9:
    }
      sub_100657858();
  }

uint64_t sub_100114810(void (*a1)(int a1), uint64_t a2)
{
  if (!sub_10012D514(a2)) {
    sub_1001EE2A0();
  }
  if (off_1008E21A0) {
    return 1319LL;
  }
  uint64_t result = sub_100128D24(22LL);
  if (!(_DWORD)result)
  {
    uint64_t v4 = sub_10011463C;
    if (a1) {
      uint64_t v4 = a1;
    }
    off_1008E21A0 = v4;
  }

  return result;
}

void sub_100114890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v27 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))off_1008E21A0;
  if (sub_10012D514(a2))
  {
    if (v27)
    {
      off_1008E21A0 = 0LL;
      v27(a1, a2 + 48, a3, a4, a5);
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"orphan event - OI_HCIEventHandler_ReadRemoteExtendedFeaturesComplete",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  v26);
      uint64_t v25 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"NULL handle - OI_HCIEventHandler_ReadRemoteExtendedFeaturesComplete",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v26);
      uint64_t v17 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    off_1008E21A0 = 0LL;
  }

uint64_t sub_1001149A8(void (*a1)(int a1), uint64_t a2)
{
  if (!sub_10012D514(a2)) {
    sub_1001EE2A0();
  }
  if (off_1008E21A8) {
    return 1319LL;
  }
  uint64_t result = sub_100128D24(23LL);
  if (!(_DWORD)result)
  {
    uint64_t v4 = sub_10011463C;
    if (a1) {
      uint64_t v4 = a1;
    }
    off_1008E21A8 = v4;
  }

  return result;
}

void sub_100114A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (off_1008E21A8)
  {
    char v27 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))off_1008E21A8;
    off_1008E21A8 = 0LL;
    if (sub_10012D514(a2))
    {
      v27(a1, a2 + 48, a3, a4, a5);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Device disconnected during the version request. Ignoring event.",  v18,  v19,  v20,  v21,  v22,  v23,  v24,  v26);
      uint64_t v25 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        goto LABEL_9;
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"orphan event - ReadRemoteVersionInformationComplete",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v26);
    uint64_t v17 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
LABEL_9:
    }
      sub_100657858();
  }

void sub_100114B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void (*)(uint64_t, uint64_t))off_1008E21B0;
  if (off_1008E21B0)
  {
    off_1008E21B0 = 0LL;
    v2(a1, a2 + 48);
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"orphan event - ReadClockOffsetComplete", v3, v4, v5, v6, v7, v8, v9, v11);
    uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_100114BAC( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = byte_1008E21B8;
  BOOL v11 = 1;
  if ((byte_1008E2182 & 1) == 0)
  {
    BOOL v12 = !byte_1008E21B8 && byte_1008E21C8 == 0;
    if (v12 && (byte_1008E21EC & 1) == 0) {
      BOOL v11 = byte_1008E21ED != 0;
    }
  }

  if (v11 && byte_1008E21B9)
  {
    if (--byte_1008E21B9) {
      return;
    }
    if ((_DWORD)a1)
    {
      if (byte_1008E2202 == 1) {
        byte_1008E2202 = -1;
      }
      if (byte_1008E21B8 == 1)
      {
        int v10 = 2;
        byte_1008E21B8 = 2;
      }

      if (byte_1008E21ED == 1) {
        byte_1008E21ED = 2;
      }
      if (byte_1008E21C8 == 1) {
        byte_1008E21C8 = 2;
      }
    }

    else
    {
      int v21 = (byte_1008E2203 & byte_1008E2204) | a2 & ~byte_1008E2204;
      byte_1008E2203 = byte_1008E2203 & byte_1008E2204 | a2 & ~byte_1008E2204;
      byte_1008E2202 = 0;
      if (v21 == a2)
      {
        if (byte_1008E21ED == 1) {
          byte_1008E21ED = 2;
        }
        if (byte_1008E21C8 == 1) {
          byte_1008E21C8 = 2;
        }
      }

      else
      {
        if (!(byte_1008E21ED | byte_1008E21C8))
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"readScanEnableCb - LC settings don't match last write (%2x != %2x)\n",  v22,  a3,  a4,  a5,  a6,  a7,  a8,  byte_1008E2203);
            uint64_t v23 = (os_log_s *)sub_100086554(0x2Cu);
            if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }
        }

        uint64_t v24 = sub_1001214B4(71, (uint64_t)sub_100117300, a3, a4, a5, a6, a7, a8, byte_1008E2203);
        if ((_DWORD)v24)
        {
          uint64_t v25 = v24;
          if (byte_1008E21ED == 1)
          {
            byte_1008E2210 &= ~2u;
            byte_1008E21ED = 0;
            off_1008E21F0(v24, byte_1008E2211 != 0);
          }

          if (byte_1008E21C8 == 1)
          {
            byte_1008E2210 &= ~1u;
            sub_10011750C(v25);
          }
        }

        else
        {
          ++byte_1008E2205;
        }
      }

      int v10 = byte_1008E21B8;
      if (byte_1008E21B8 == 1) {
        goto LABEL_41;
      }
    }

    if (v10 != 2)
    {
LABEL_48:
      if (byte_1008E21EC == 1)
      {
        byte_1008E21EC = 0;
        off_1008E21F0(a1, (a2 >> 1) & 1);
      }

      if (byte_1008E21ED == 2)
      {
        byte_1008E2210 &= ~2u;
        byte_1008E21ED = 0;
        off_1008E21F0(a1, byte_1008E2211 != 0);
      }

      if (byte_1008E21C8 == 2)
      {
        byte_1008E2210 &= ~1u;
        sub_10011750C(a1);
      }

      return;
    }

uint64_t sub_100114F18( void (*a1)(int a1), int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = 1325LL;
  if ((byte_1008E2182 & 1) == 0 && !byte_1008E21C8)
  {
    uint64_t v11 = 1LL;
    if (a2 && a2 != 2)
    {
      if (a2 != 1) {
        return 101LL;
      }
      word_1008E21CA = 600;
      qword_1008E21D0 = (uint64_t)sub_100115050;
      uint64_t v11 = 2LL;
    }

    uint64_t result = sub_1001214B4(100, (uint64_t)sub_1001150C0, a3, a4, a5, a6, a7, a8, v11);
    if (!(_DWORD)result)
    {
      byte_1008E21C8 = 1;
      dword_1008E21D8 = a2;
      BOOL v12 = sub_10011463C;
      if (a1) {
        BOOL v12 = a1;
      }
      off_1008E21E0 = v12;
      uint64_t result = dword_1008E21E8;
      if (dword_1008E21E8)
      {
        if (sub_1001EEB14(dword_1008E21E8) && sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_Dispatch_CancelFunc", v13, v14, v15, v16, v17, v18, v19, v21);
          uint64_t v20 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
            sub_10065A878();
          }
        }

        uint64_t result = 0LL;
        dword_1008E21E8 = 0;
      }
    }
  }

  return result;
}

void sub_100115050()
{
  if (sub_100114F18(0LL, 2LL) && sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_DEVMGR_WriteDiscoverability", v0, v1, v2, v3, v4, v5, v6, v8);
    uint64_t v7 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

void sub_1001150C0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  if (byte_1008E21C8 == 1)
  {
    if ((_DWORD)a1)
    {
LABEL_3:
      sub_10011750C(v8);
      return;
    }

    uint64_t v17 = word_1008E2203 & 0xFE | (dword_1008E21D8 != 0);
    word_1008E2203 = __PAIR16__(HIBYTE(word_1008E2203), word_1008E2203 & 0xFE | (dword_1008E21D8 != 0)) | 0x100;
    if (byte_1008E2202 != 1)
    {
      if (byte_1008E2202 == 255)
      {
        uint64_t v8 = sub_1001214B4(70, (uint64_t)sub_100114BAC, a3, a4, a5, a6, a7, a8, v36);
        if ((_DWORD)v8) {
          goto LABEL_3;
        }
        ++byte_1008E21B9;
        byte_1008E2202 = 1;
      }

      else
      {
        uint64_t v18 = sub_1001214B4(71, (uint64_t)sub_100117300, a3, a4, a5, a6, a7, a8, v17);
        if ((_DWORD)v18)
        {
          uint64_t v8 = v18;
          sub_1001EE134((uint64_t)"OI_HCICMD_WriteScanEnable", v19, v20, v21, v22, v23, v24, v25, v36);
          uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
          if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
            goto LABEL_3;
          }
LABEL_15:
          sub_10065A878();
          goto LABEL_3;
        }

        ++byte_1008E2205;
      }
    }

    byte_1008E2210 |= 1u;
    if (dword_1008E21D8 == 1)
    {
      uint64_t v27 = sub_1001EE6E8((uint64_t)sub_10011755C, 0LL, (unsigned __int16)word_1008E21CA, &dword_1008E21E8);
      if ((_DWORD)v27)
      {
        uint64_t v8 = v27;
        sub_1001EE134((uint64_t)"OI_Dispatch_RegisterTimedFunc", v28, v29, v30, v31, v32, v33, v34, v36);
        uint64_t v35 = (os_log_s *)sub_100086554(0x2Cu);
        if (!os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
          goto LABEL_3;
        }
        goto LABEL_15;
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"wrdiscWriteIacLapCb - orphan callback", v9, v10, v11, v12, v13, v14, v15, v36);
    uint64_t v16 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

uint64_t sub_1001152C8( void (*a1)(int a1), int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v41[0] = 0LL;
  if (a2)
  {
    if (byte_1008E21F8)
    {
      uint64_t v9 = sub_1000B17F4(0x10uLL);
      __int128 ptr = v9;
      if (v9)
      {
        *(void *)uint64_t v9 = a1;
        v9[8] = 1;
        char v10 = byte_1008E21F8 + 1;
LABEL_13:
        byte_1008E21F8 = v10;
        goto LABEL_14;
      }

      return 0LL;
    }

    uint64_t v11 = sub_1001154B4(a1, 1, a3, a4, a5, a6, a7, a8);
    if ((_DWORD)v11)
    {
      sub_1001EE134((uint64_t)"_OI_DEVMGR_SetLocalDeviceConnectability", v29, v30, v31, v32, v33, v34, v35, v39);
      uint64_t v36 = (os_log_s *)sub_100086554(0x2Cu);
      if (!os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        return v11;
      }
      goto LABEL_9;
    }

    char v37 = byte_1008E21F8 + 1;
    goto LABEL_26;
  }

  if (byte_1008E21F8 == 1)
  {
    uint64_t v11 = sub_1001154B4(a1, 0, a3, a4, a5, a6, a7, a8);
    if ((_DWORD)v11)
    {
      sub_1001EE134((uint64_t)"_OI_DEVMGR_SetLocalDeviceConnectability", v12, v13, v14, v15, v16, v17, v18, v39);
      uint64_t v19 = (os_log_s *)sub_100086554(0x2Cu);
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        return v11;
      }
LABEL_9:
      sub_10065A878();
      return v11;
    }

    char v37 = byte_1008E21F8 - 1;
LABEL_26:
    byte_1008E21F8 = v37;
    return v11;
  }

  uint64_t v20 = sub_1000B17F4(0x10uLL);
  __int128 ptr = v20;
  if (!v20) {
    return 0LL;
  }
  *(void *)uint64_t v20 = a1;
  v20[8] = 0;
  if (byte_1008E21F8)
  {
    char v10 = byte_1008E21F8 - 1;
    goto LABEL_13;
  }

  sub_1001EE2A0();
LABEL_14:
  v41[1] = &ptr;
  LOWORD(v41[0]) = 8;
  uint64_t v11 = sub_1001EE6E8((uint64_t)sub_100115640, v41, 0, 0LL);
  if ((_DWORD)v11)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Failed to dispatch fake connectable CB", v21, v22, v23, v24, v25, v26, v27, v39);
      uint64_t v28 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    sub_1000B1838(ptr);
  }

  return v11;
}

uint64_t sub_1001154B4( void (*a1)(int a1), int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = 1325LL;
  if ((byte_1008E2182 & 1) != 0 || (byte_1008E21EC & 1) != 0 || byte_1008E21ED) {
    return v8;
  }
  char v9 = a2;
  HIBYTE(word_1008E2203) |= 2u;
  if (a2) {
    int v11 = 2;
  }
  else {
    int v11 = 0;
  }
  uint64_t v12 = word_1008E2203 & 0xFD | v11;
  LOBYTE(word_1008E2203) = word_1008E2203 & 0xFD | v11;
  if (byte_1008E2202 == 1) {
    goto LABEL_16;
  }
  if (byte_1008E2202 == 255)
  {
    uint64_t v8 = sub_1001214B4(70, (uint64_t)sub_100114BAC, a3, a4, a5, a6, a7, a8, v24);
    if ((_DWORD)v8) {
      return v8;
    }
    ++byte_1008E21B9;
    byte_1008E2202 = 1;
    goto LABEL_16;
  }

  uint64_t v13 = sub_1001214B4(71, (uint64_t)sub_100117300, a3, a4, a5, a6, a7, a8, v12);
  if (!(_DWORD)v13)
  {
    ++byte_1008E2205;
LABEL_16:
    uint64_t v8 = 0LL;
    byte_1008E21ED = 1;
    byte_1008E2211 = v9;
    uint64_t v22 = sub_10011463C;
    if (a1) {
      uint64_t v22 = a1;
    }
    off_1008E21F0 = (uint64_t (*)(void, void))v22;
    byte_1008E2210 |= 2u;
    return v8;
  }

  uint64_t v8 = v13;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HCICMD_WriteScanEnable", v14, v15, v16, v17, v18, v19, v20, v25);
    uint64_t v21 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  return v8;
}

void sub_100115640(uint64_t a1)
{
  uint64_t v1 = **(unsigned __int8 ***)(a1 + 8);
  if (v1)
  {
    if (*(void *)v1) {
      (*(void (**)(void, void))v1)(0LL, v1[8]);
    }
    sub_1000B1838(v1);
  }

uint64_t sub_100115688(int a1)
{
  return sub_100115690(a1, 1);
}

uint64_t sub_100115690(int a1, int a2)
{
  if ((a1 & 0xFF001FFF) != 0) {
    return 101LL;
  }
  uint64_t v3 = 0LL;
  char v4 = 0;
  int v5 = dword_1008E21FC;
  do
  {
    int v6 = 1 << (v3 + 16);
    if ((v6 & a1) == 0) {
      goto LABEL_13;
    }
    int v7 = *((unsigned __int8 *)&qword_1008E2208 + v3);
    if (a2)
    {
      if (v7 == 255) {
        return 104LL;
      }
      *((_BYTE *)&qword_1008E2208 + v3) = v7 + 1;
      if (!v7)
      {
        v5 |= v6;
LABEL_12:
        dword_1008E21FC = v5;
        char v4 = 1;
      }
    }

    else
    {
      if (!*((_BYTE *)&qword_1008E2208 + v3)) {
        return 121LL;
      }
      char v8 = v7 - 1;
      *((_BYTE *)&qword_1008E2208 + v3) = v8;
      if (!v8)
      {
        v5 &= ~v6;
        goto LABEL_12;
      }
    }

uint64_t sub_10011573C(int a1)
{
  return sub_100115690(a1, 0);
}

uint64_t sub_100115744(__int16 a1, char a2)
{
  dword_1008E21FC = a2 & 0xFC | a1 & 0x1F00 | dword_1008E21FC & 0xFFE000;
  return sub_100114274();
}

uint64_t sub_100115768()
{
  return (unsigned __int16)word_1008E2200;
}

uint64_t sub_100115774( char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a1 & 1) != 0) {
    uint64_t v8 = 0LL;
  }
  else {
    uint64_t v8 = *(unsigned __int8 *)(qword_1008E2188 + 18);
  }
  uint64_t v9 = sub_1001214B4(107, (uint64_t)sub_100115824, a3, a4, a5, a6, a7, a8, v8);
  uint64_t v10 = v9;
  if ((_DWORD)v9)
  {
    if ((_DWORD)v9 == 628)
    {
      sub_100115824(628);
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteInquiryScanType", v11, v12, v13, v14, v15, v16, v17, v20);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  return v10;
}

void sub_100115824(int a1)
{
  if (a1 == 717 || a1 == 628)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writeInqScanInterlaceTypeCb", v1, v2, v3, v4, v5, v6, v7, v25);
      uint64_t v8 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
LABEL_13:
      }
        sub_10065A878();
    }
  }

  else if ((a1 - 701) > 0x44)
  {
    if (a1)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"writeInqScanInterlaceTypeCb", v17, v18, v19, v20, v21, v22, v23, v25);
        uint64_t v24 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          goto LABEL_13;
        }
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writeInqScanInterlaceTypeCb", v9, v10, v11, v12, v13, v14, v15, v25);
    uint64_t v16 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      goto LABEL_13;
    }
  }

uint64_t sub_10011592C( char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a1 & 1) != 0) {
    uint64_t v8 = 0LL;
  }
  else {
    uint64_t v8 = *(unsigned __int8 *)(qword_1008E2188 + 20);
  }
  uint64_t v9 = sub_1001214B4(111, (uint64_t)sub_1001159DC, a3, a4, a5, a6, a7, a8, v8);
  uint64_t v10 = v9;
  if ((_DWORD)v9)
  {
    if ((_DWORD)v9 == 628)
    {
      sub_1001159DC(628);
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WritePageScanType", v11, v12, v13, v14, v15, v16, v17, v20);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  return v10;
}

void sub_1001159DC(int a1)
{
  if (a1 == 717 || a1 == 628)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writePageScanInterlaceTypeCb", v1, v2, v3, v4, v5, v6, v7, v25);
      uint64_t v8 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
LABEL_13:
      }
        sub_10065A878();
    }
  }

  else if ((a1 - 701) > 0x44)
  {
    if (a1)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"writePageScanInterlaceTypeCb", v17, v18, v19, v20, v21, v22, v23, v25);
        uint64_t v24 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          goto LABEL_13;
        }
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writePageScanInterlaceTypeCb", v9, v10, v11, v12, v13, v14, v15, v25);
    uint64_t v16 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      goto LABEL_13;
    }
  }

void sub_100115AE4(int a1)
{
  if (!byte_1008E2181)
  {
    sub_1001EE2A0();
    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    byte_1008E2180 = 0;
    goto LABEL_8;
  }

  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"devmgrWriteClassOfDeviceCB failed", v2, v3, v4, v5, v6, v7, v8, v11);
    uint64_t v9 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

void sub_100115B80( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 != 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writeConnectionAcceptTimeoutCb - orphan callback", v11, v12, v13, v14, v15, v16, v17, v45);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v8 = a1;
  if ((_DWORD)a1 == 628) {
    goto LABEL_17;
  }
  if ((a1 - 701) <= 0x44)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write_Cnct_Accept_Timeout, ignoring error", v9, a3, a4, a5, a6, a7, a8, v45);
      int v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    dword_1008E2184 = v8;
LABEL_17:
    uint64_t v29 = sub_1001214B4(69, (uint64_t)sub_100115D60, a3, a4, a5, a6, a7, a8, *(unsigned __int16 *)(qword_1008E2188 + 2));
    if (!(_DWORD)v29) {
      return;
    }
    uint64_t v8 = v29;
    if ((_DWORD)v29 == 628)
    {
      sub_100115D60(628LL, v30, v31, v32, v33, v34, v35, v36);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WritePageTimeout", v37, v38, v39, v40, v41, v42, v43, v46);
      uint64_t v44 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    byte_1008E2182 = 0;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
    if (off_1008E2190)
    {
      uint64_t v28 = qword_1008E2188;
      goto LABEL_25;
    }

    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_17;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writeConnectionAcceptTimeoutCb", v19, v20, v21, v22, v23, v24, v25, v45);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  byte_1008E2182 = 0;
  uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
  if (off_1008E2190)
  {
    uint64_t v28 = qword_1008E2188;
LABEL_25:
    v27(v8, v28);
  }

void sub_100115D60( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 != 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writePageTimeoutCb - orphan callback", v11, v12, v13, v14, v15, v16, v17, v45);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v8 = a1;
  if ((_DWORD)a1 == 628) {
    goto LABEL_17;
  }
  if ((a1 - 701) <= 0x44)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write_Page_Timeout, ignoring error", v9, a3, a4, a5, a6, a7, a8, v45);
      int v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    dword_1008E2184 = v8;
LABEL_17:
    uint64_t v29 = sub_1001214B4(73, (uint64_t)sub_100115F44, a3, a4, a5, a6, a7, a8, *(unsigned __int16 *)(qword_1008E2188 + 4));
    if (!(_DWORD)v29) {
      return;
    }
    uint64_t v8 = v29;
    if ((_DWORD)v29 == 628)
    {
      sub_100115F44(628LL, v30, v31, v32, v33, v34, v35, v36);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WritePageScanActivity", v37, v38, v39, v40, v41, v42, v43, v46);
      uint64_t v44 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    byte_1008E2182 = 0;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
    if (off_1008E2190)
    {
      uint64_t v28 = qword_1008E2188;
      goto LABEL_25;
    }

    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_17;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writePageTimeoutCb", v19, v20, v21, v22, v23, v24, v25, v45);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  byte_1008E2182 = 0;
  uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
  if (off_1008E2190)
  {
    uint64_t v28 = qword_1008E2188;
LABEL_25:
    v27(v8, v28);
  }

void sub_100115F44( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 != 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writePageScanActivityCb - orphan callback", v11, v12, v13, v14, v15, v16, v17, v45);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v8 = a1;
  if ((_DWORD)a1 == 628) {
    goto LABEL_17;
  }
  if ((a1 - 701) <= 0x44)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write_PageScan_Activity, ignoring error", v9, a3, a4, a5, a6, a7, a8, v45);
      int v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    dword_1008E2184 = v8;
LABEL_17:
    uint64_t v29 = sub_1001214B4(75, (uint64_t)sub_100116128, a3, a4, a5, a6, a7, a8, *(unsigned __int16 *)(qword_1008E2188 + 8));
    if (!(_DWORD)v29) {
      return;
    }
    uint64_t v8 = v29;
    if ((_DWORD)v29 == 628)
    {
      sub_100116128(628LL, v30, v31, v32, v33, v34, v35, v36);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteInquiryScanActivity", v37, v38, v39, v40, v41, v42, v43, v46);
      uint64_t v44 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    byte_1008E2182 = 0;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
    if (off_1008E2190)
    {
      uint64_t v28 = qword_1008E2188;
      goto LABEL_25;
    }

    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_17;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writePageScanActivityCb", v19, v20, v21, v22, v23, v24, v25, v45);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  byte_1008E2182 = 0;
  uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
  if (off_1008E2190)
  {
    uint64_t v28 = qword_1008E2188;
LABEL_25:
    v27(v8, v28);
  }

void sub_100116128( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 != 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writeInquiryScanActivityCb - orphan callback", v11, v12, v13, v14, v15, v16, v17, v45);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v8 = a1;
  if ((_DWORD)a1 == 628) {
    goto LABEL_17;
  }
  if ((a1 - 701) <= 0x44)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write_InquiryScan_Activity, ignoring error", v9, a3, a4, a5, a6, a7, a8, v45);
      int v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    dword_1008E2184 = v8;
LABEL_17:
    uint64_t v29 = sub_1001214B4(83, (uint64_t)sub_100116308, a3, a4, a5, a6, a7, a8, *(unsigned __int16 *)(qword_1008E2188 + 12));
    if (!(_DWORD)v29) {
      return;
    }
    uint64_t v8 = v29;
    if ((_DWORD)v29 == 628)
    {
      sub_100116308(628LL, v30, v31, v32, v33, v34, v35, v36);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteVoiceSetting", v37, v38, v39, v40, v41, v42, v43, v46);
      uint64_t v44 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    byte_1008E2182 = 0;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
    if (off_1008E2190)
    {
      uint64_t v28 = qword_1008E2188;
      goto LABEL_25;
    }

    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_17;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writeInquiryScanActivityCb", v19, v20, v21, v22, v23, v24, v25, v45);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  byte_1008E2182 = 0;
  uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
  if (off_1008E2190)
  {
    uint64_t v28 = qword_1008E2188;
LABEL_25:
    v27(v8, v28);
  }

void sub_100116308( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 != 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writeVoiceSettingCb - orphan callback", v11, v12, v13, v14, v15, v16, v17, v45);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v8 = a1;
  if ((_DWORD)a1 == 628) {
    goto LABEL_17;
  }
  if ((a1 - 701) <= 0x44)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write_Voice_Setting, ignoring error", v9, a3, a4, a5, a6, a7, a8, v45);
      int v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    dword_1008E2184 = v8;
LABEL_17:
    word_1008E2200 = *(_WORD *)(qword_1008E2188 + 12);
    uint64_t v29 = sub_1001214B4(87, (uint64_t)sub_1001164F4, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1008E2188 + 14));
    if (!(_DWORD)v29) {
      return;
    }
    uint64_t v8 = v29;
    if ((_DWORD)v29 == 628)
    {
      sub_1001164F4(628LL, v30, v31, v32, v33, v34, v35, v36);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteNumBroadcastRetransmissions", v37, v38, v39, v40, v41, v42, v43, v46);
      uint64_t v44 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    byte_1008E2182 = 0;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
    if (off_1008E2190)
    {
      uint64_t v28 = qword_1008E2188;
      goto LABEL_25;
    }

    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_17;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writeVoiceSettingCb", v19, v20, v21, v22, v23, v24, v25, v45);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  byte_1008E2182 = 0;
  uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
  if (off_1008E2190)
  {
    uint64_t v28 = qword_1008E2188;
LABEL_25:
    v27(v8, v28);
  }

void sub_1001164F4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 != 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"writeNumBroadcastRetransmissionsCb - orphan callback",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  v45);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v8 = a1;
  if ((_DWORD)a1 == 628) {
    goto LABEL_17;
  }
  if ((a1 - 701) <= 0x44)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write_Num_Broadcast_Retransmissions, ignoring error", v9, a3, a4, a5, a6, a7, a8, v45);
      int v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    dword_1008E2184 = v8;
LABEL_17:
    uint64_t v29 = sub_1001214B4(89, (uint64_t)sub_1001166D4, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1008E2188 + 15));
    if (!(_DWORD)v29) {
      return;
    }
    uint64_t v8 = v29;
    if ((_DWORD)v29 == 628)
    {
      sub_1001166D4(628LL, v30, v31, v32, v33, v34, v35, v36);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteHoldModeActivity", v37, v38, v39, v40, v41, v42, v43, v46);
      uint64_t v44 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    byte_1008E2182 = 0;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
    if (off_1008E2190)
    {
      uint64_t v28 = qword_1008E2188;
      goto LABEL_25;
    }

    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_17;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writeNumBroadcastRetransmissionsCb", v19, v20, v21, v22, v23, v24, v25, v45);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  byte_1008E2182 = 0;
  uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
  if (off_1008E2190)
  {
    uint64_t v28 = qword_1008E2188;
LABEL_25:
    v27(v8, v28);
  }

void sub_1001166D4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 != 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writeHoldModeActivityCb - orphan callback", v11, v12, v13, v14, v15, v16, v17, v45);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v8 = a1;
  if ((_DWORD)a1 == 628) {
    goto LABEL_17;
  }
  if ((a1 - 701) <= 0x44)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write_Hold_Mode_Activity, ignoring error", v9, a3, a4, a5, a6, a7, a8, v45);
      int v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    dword_1008E2184 = v8;
LABEL_17:
    uint64_t v29 = sub_1001214B4(92, (uint64_t)sub_1001168B4, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1008E2188 + 16));
    if (!(_DWORD)v29) {
      return;
    }
    uint64_t v8 = v29;
    if ((_DWORD)v29 == 628)
    {
      sub_1001168B4(628, v30, v31, v32, v33, v34, v35, v36);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteSCOFlowControlEnable", v37, v38, v39, v40, v41, v42, v43, v46);
      uint64_t v44 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    byte_1008E2182 = 0;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
    if (off_1008E2190)
    {
      uint64_t v28 = qword_1008E2188;
      goto LABEL_25;
    }

    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_17;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writeHoldModeActivityCb", v19, v20, v21, v22, v23, v24, v25, v45);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  byte_1008E2182 = 0;
  uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
  if (off_1008E2190)
  {
    uint64_t v28 = qword_1008E2188;
LABEL_25:
    v27(v8, v28);
  }

void sub_1001168B4( int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 == 1)
  {
    if (a1)
    {
      if (a1 != 628)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Write_Sco_Flow_Control_Enable failed, ignoring error",  v8,  a3,  a4,  a5,  a6,  a7,  a8,  v35);
          uint64_t v9 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
            sub_10065A878();
          }
        }
      }
    }

    uint64_t v10 = sub_1001214B4(102, (uint64_t)sub_100116A1C, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1008E2188 + 17));
    if ((_DWORD)v10)
    {
      uint64_t v18 = v10;
      if ((_DWORD)v10 == 628)
      {
        sub_100116A1C(628LL, v11, v12, v13, v14, v15, v16, v17);
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_HCICMD_WritePageScanPeriodMode", v27, v28, v29, v30, v31, v32, v33, v36);
          uint64_t v34 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
            sub_10065A878();
          }
        }

        byte_1008E2182 = 0;
        if (off_1008E2190) {
          off_1008E2190(v18, qword_1008E2188);
        }
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writeSCOFlowControlEnableCb - orphan callback", v19, v20, v21, v22, v23, v24, v25, v35);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_100116A1C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 != 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writePageScanPeriodModeCb - orphan callback", v11, v12, v13, v14, v15, v16, v17, v45);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v8 = a1;
  if ((_DWORD)a1 == 628) {
    goto LABEL_17;
  }
  if ((a1 - 701) <= 0x44)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write_Page_Scan_Period_Mode, ignoring error", v9, a3, a4, a5, a6, a7, a8, v45);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    dword_1008E2184 = v8;
LABEL_17:
    uint64_t v29 = sub_1001214B4(107, (uint64_t)sub_100116BFC, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1008E2188 + 18));
    if (!(_DWORD)v29) {
      return;
    }
    uint64_t v8 = v29;
    if ((_DWORD)v29 == 628)
    {
      sub_100116BFC(628LL, v30, v31, v32, v33, v34, v35, v36);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteInquiryScanType", v37, v38, v39, v40, v41, v42, v43, v46);
      uint64_t v44 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    byte_1008E2182 = 0;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
    if (off_1008E2190)
    {
      uint64_t v28 = qword_1008E2188;
      goto LABEL_25;
    }

    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_17;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writePageScanPeriodModeCb", v19, v20, v21, v22, v23, v24, v25, v45);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  byte_1008E2182 = 0;
  uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
  if (off_1008E2190)
  {
    uint64_t v28 = qword_1008E2188;
LABEL_25:
    v27(v8, v28);
  }

void sub_100116BFC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 != 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writeInquiryScanTypeCb - orphan callback", v11, v12, v13, v14, v15, v16, v17, v45);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v8 = a1;
  if ((_DWORD)a1 == 628) {
    goto LABEL_17;
  }
  if ((a1 - 701) <= 0x44)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write_Inquiry_Scan_Type, ignoring error", v9, a3, a4, a5, a6, a7, a8, v45);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    dword_1008E2184 = v8;
LABEL_17:
    uint64_t v29 = sub_1001214B4(109, (uint64_t)sub_100116DDC, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1008E2188 + 19));
    if (!(_DWORD)v29) {
      return;
    }
    uint64_t v8 = v29;
    if ((_DWORD)v29 == 628)
    {
      sub_100116DDC(628LL, v30, v31, v32, v33, v34, v35, v36);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteInquiryMode", v37, v38, v39, v40, v41, v42, v43, v46);
      uint64_t v44 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    byte_1008E2182 = 0;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
    if (off_1008E2190)
    {
      uint64_t v28 = qword_1008E2188;
      goto LABEL_25;
    }

    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_17;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writeInquiryScanTypeCb", v19, v20, v21, v22, v23, v24, v25, v45);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  byte_1008E2182 = 0;
  uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
  if (off_1008E2190)
  {
    uint64_t v28 = qword_1008E2188;
LABEL_25:
    v27(v8, v28);
  }

void sub_100116DDC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 != 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writeInquiryModeCb - orphan callback", v11, v12, v13, v14, v15, v16, v17, v45);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v8 = a1;
  if ((_DWORD)a1 == 628) {
    goto LABEL_17;
  }
  if ((a1 - 701) <= 0x44)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write_Inquiry_Mode, ignoring error", v9, a3, a4, a5, a6, a7, a8, v45);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    dword_1008E2184 = v8;
LABEL_17:
    uint64_t v29 = sub_1001214B4(111, (uint64_t)sub_100116FBC, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1008E2188 + 20));
    if (!(_DWORD)v29) {
      return;
    }
    uint64_t v8 = v29;
    if ((_DWORD)v29 == 628)
    {
      sub_100116FBC(628LL, v30, v31, v32, v33, v34, v35, v36);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WritePageScanType", v37, v38, v39, v40, v41, v42, v43, v46);
      uint64_t v44 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    byte_1008E2182 = 0;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
    if (off_1008E2190)
    {
      uint64_t v28 = qword_1008E2188;
      goto LABEL_25;
    }

    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_17;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writeInquiryModeCb", v19, v20, v21, v22, v23, v24, v25, v45);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  byte_1008E2182 = 0;
  uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
  if (off_1008E2190)
  {
    uint64_t v28 = qword_1008E2188;
LABEL_25:
    v27(v8, v28);
  }

void sub_100116FBC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E2182 != 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"writePageScanTypeCb - orphan callback", v11, v12, v13, v14, v15, v16, v17, v38);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  uint64_t v8 = a1;
  if ((_DWORD)a1 == 628) {
    goto LABEL_17;
  }
  if ((a1 - 701) <= 0x44)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write_Page_Scan_Type, ignoring error", v9, a3, a4, a5, a6, a7, a8, v38);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    dword_1008E2184 = v8;
LABEL_17:
    uint64_t v29 = sub_1001214B4(113, (uint64_t)sub_10011719C, a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)(qword_1008E2188 + 21));
    if (!(_DWORD)v29) {
      return;
    }
    uint64_t v8 = v29;
    if ((_DWORD)v29 == 628)
    {
      sub_10011719C(0x274u);
      return;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteAfhChannelAssessmentMode", v30, v31, v32, v33, v34, v35, v36, v39);
      uint64_t v37 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    byte_1008E2182 = 0;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
    if (off_1008E2190)
    {
      uint64_t v28 = qword_1008E2188;
      goto LABEL_25;
    }

    return;
  }

  if (!(_DWORD)a1) {
    goto LABEL_17;
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writePageScanTypeCb", v19, v20, v21, v22, v23, v24, v25, v38);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

  byte_1008E2182 = 0;
  uint64_t v27 = (void (*)(uint64_t, uint64_t))off_1008E2190;
  if (off_1008E2190)
  {
    uint64_t v28 = qword_1008E2188;
LABEL_25:
    v27(v8, v28);
  }

void sub_10011719C(unsigned int a1)
{
  if (byte_1008E2182 == 1)
  {
    unsigned int v1 = a1;
    if (a1 == 628)
    {
      unsigned int v1 = 0;
    }

    else
    {
      if (a1 - 701 <= 0x44)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Write_AFH_Channel_Assessment_Mode, ignoring error",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  v28);
          uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            sub_10065A878();
          }
        }

        dword_1008E2184 = v1;
        int v2 = 1;
        unsigned int v1 = 0;
        goto LABEL_18;
      }

      if (a1)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"writeAfhChannelAssessmentModeCb", v19, v20, v21, v22, v23, v24, v25, v28);
          uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
            sub_10065A878();
          }
        }

        int v2 = 0;
        goto LABEL_18;
      }
    }

    int v2 = 1;
LABEL_18:
    byte_1008E2182 = 0;
    if (off_1008E2190)
    {
      if (v2) {
        uint64_t v27 = dword_1008E2184;
      }
      else {
        uint64_t v27 = v1;
      }
      off_1008E2190(v27, qword_1008E2188);
    }

    return;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"writeAfhChannelAssessmentModeCb - orphan callback", v3, v4, v5, v6, v7, v8, v9, v28);
    uint64_t v10 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_100117300(uint64_t a1)
{
  int v1 = byte_1008E21ED;
  if (byte_1008E2182 & 1 | (byte_1008E21B8 != 0) | (byte_1008E21C8 != 0) | byte_1008E21EC & 1 | (byte_1008E21ED != 0)
    && byte_1008E2205)
  {
    if (--byte_1008E2205) {
      return;
    }
    uint64_t v2 = a1;
    if (byte_1008E21C8 == 1)
    {
      int v3 = byte_1008E21ED;
      if ((byte_1008E2210 & 1) != 0)
      {
        byte_1008E2210 &= ~1u;
        if ((_DWORD)a1)
        {
LABEL_22:
          sub_10011750C(a1);
          int v3 = byte_1008E21ED;
          goto LABEL_23;
        }

        unsigned int v4 = dword_1008E21FC;
        if (dword_1008E21D8 != 2)
        {
          if (dword_1008E21D8 == 1)
          {
            a1 = 0LL;
            int v5 = dword_1008E21FC;
            unsigned int v4 = dword_1008E21FC | 0x2000;
LABEL_20:
            if (v4 != v5)
            {
              dword_1008E21FC = v4;
              a1 = sub_100114274();
            }

            goto LABEL_22;
          }

          if (dword_1008E21D8)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"invalid discoSettingContext %d",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  dword_1008E21D8);
              uint64_t v21 = (os_log_s *)sub_100086554(0x2Cu);
              if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
                sub_100657858();
              }
            }

            sub_1001EE2A0();
            int v5 = dword_1008E21FC;
            a1 = 105LL;
            goto LABEL_20;
          }
        }

        a1 = 0LL;
        int v5 = dword_1008E21FC;
        unsigned int v4 = dword_1008E21FC & 0xFFFFDFFF;
        goto LABEL_20;
      }
    }

    else
    {
      int v3 = byte_1008E21ED;
    }

uint64_t sub_10011750C(uint64_t a1)
{
  if (!byte_1008E21C8) {
    sub_1001EE2A0();
  }
  uint64_t v2 = (uint64_t (*)(uint64_t))off_1008E21E0;
  if (!off_1008E21E0)
  {
    sub_1001EE2A0();
    uint64_t v2 = (uint64_t (*)(uint64_t))off_1008E21E0;
  }

  byte_1008E21C8 = 0;
  return v2(a1);
}

void sub_10011755C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  dword_1008E21E8 = 0;
  if (byte_1008E21C8)
  {
    sub_1001EE2A0();
    if (byte_1008E21C8)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"discoLimitedTimeoutCb, !discoWriteSettingsState", v8, v9, v10, v11, v12, v13, v14, v25);
        uint64_t v15 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return;
    }
  }

  uint64_t v16 = byte_1008E2203 & 0xFE;
  byte_1008E2203 &= ~1u;
  if (byte_1008E2202 == 1)
  {
LABEL_12:
    dword_1008E21D8 = 0;
    byte_1008E21C8 = 1;
    off_1008E21E0 = (_UNKNOWN *)qword_1008E21D0;
    byte_1008E2210 |= 1u;
    return;
  }

  if (!sub_1001214B4(71, (uint64_t)sub_100117300, a3, a4, a5, a6, a7, a8, v16))
  {
    ++byte_1008E2205;
    goto LABEL_12;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HCICMD_WriteScanEnable", v17, v18, v19, v20, v21, v22, v23, v26);
    uint64_t v24 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      sub_10065A878();
    }
  }

void sub_10011769C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v10 = sub_1000A86F0();
  if (a2)
  {
    if (v10)
    {
      sub_1001EE134( (uint64_t)"_qosSetupCompleteCB: status %!, role %s, lmhandle 0x%x, retries %d, flags 0x%x, serviceType 0x%x, token Rate 0x%x, peakBandwidth 0x%x, latency 0x%x, delayVariation 0x%x",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  a1);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v31 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    if (!(_DWORD)a1 && a7 >= 0x4E21 && *(_BYTE *)(a2 + 144) == 1)
    {
      unsigned int v19 = ++*(_BYTE *)(a2 + 154);
      if (v19 > 2)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"QOS setup retry limited exceeded", v21, v22, v23, v24, v25, v26, v27, v29);
          uint64_t v28 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
            sub_100657F08();
          }
        }
      }

      else
      {
        sub_10011BD90(a2);
      }
    }
  }

  else if (v10)
  {
    sub_1001EE134( (uint64_t)"qosSetupCompleteCB connection was released, exiting",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  v29);
    uint64_t v20 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v31 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

void sub_1001178D8()
{
  byte_1008E2212 = 0;
}

uint64_t sub_1001178E4(uint64_t a1, int a2)
{
  if (!a1) {
    return 101LL;
  }
  uint64_t v4 = 0LL;
  uint64_t result = sub_10010EEE0(a1, &v4);
  if (!(_DWORD)result) {
    *(_WORD *)(v4 + 142) = (858993460 * (unint64_t)(8 * a2)) >> 32;
  }
  return result;
}

uint64_t sub_100117940(uint64_t a1, char a2)
{
  if (!a1) {
    return 101LL;
  }
  uint64_t v4 = 0LL;
  uint64_t result = sub_10010EEE0(a1, &v4);
  if (!(_DWORD)result) {
    *(_BYTE *)(v4 + 196) = a2;
  }
  return result;
}

uint64_t sub_100117988(uint64_t a1, char a2)
{
  if (!a1) {
    return 101LL;
  }
  uint64_t v4 = 0LL;
  uint64_t result = sub_10010EEE0(a1, &v4);
  if (!(_DWORD)result) {
    *(_BYTE *)(v4 + 328) = a2;
  }
  return result;
}

uint64_t sub_1001179D0(uint64_t a1)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)(a1 + 54) == 3)
  {
    return 1342LL;
  }

  if (*(_BYTE *)(a1 + 54) || *(_BYTE *)(a1 + 196) || *(_BYTE *)(a1 + 144) != 1) {
    return 1342LL;
  }
  if (sub_1001E6620(a1))
  {
    *(_BYTE *)(a1 + 194) = 1;
    return 1342LL;
  }

  if (sub_10012D8E8(a1 + 48)) {
    return 1342LL;
  }
  if (*(_DWORD *)(a1 + 248))
  {
    *(_BYTE *)(a1 + 197) = 1;
    return 1342LL;
  }

  if (*(_BYTE *)(a1 + 195))
  {
    int v4 = *(_DWORD *)(a1 + 320);
    uint64_t v2 = 1342LL;
    if (v4 == 733 || v4 == 736) {
      return v2;
    }
    if (sub_10012EC5C()
      || sub_10012EE4C()
      || sub_10012EB98() == 1 && !sub_10012EC68())
    {
      return 1342LL;
    }
  }

  if (!*(_DWORD *)(a1 + 148))
  {
    uint64_t v13 = sub_10010C890(a1);
    if ((_DWORD)v13)
    {
      uint64_t v14 = v13;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_DevMgr_aclActivity failed with %!", v15, v16, v17, v18, v19, v20, v21, v14);
        uint64_t v22 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

  uint64_t v2 = sub_100117BA8((uint64_t)sub_100117C74, a1, 0);
  if ((_DWORD)v2)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"startRoleSwitch failed %!", v5, v6, v7, v8, v9, v10, v11, v2);
      uint64_t v12 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  return v2;
}

uint64_t sub_100117BA8(uint64_t a1, uint64_t a2, char a3)
{
  unsigned int v6 = *(unsigned __int8 *)(a2 + 152);
  if (v6 < 2) {
    return sub_100118E2C(a1, a2, a3);
  }
  if (v6 != 2) {
    return 101LL;
  }
  uint64_t result = sub_100112C40((uint64_t)sub_100119030, 0LL);
  if ((_DWORD)result == 1316 || !(_DWORD)result)
  {
    *(_BYTE *)(a2 + 213) = 1;
    *(void *)(a2 + 216) = a1;
    *(_BYTE *)(a2 + 276) = a3;
    uint64_t result = sub_100128D24(42LL);
    if ((_DWORD)result) {
      *(_BYTE *)(a2 + 213) = 0;
    }
    else {
      *(_BYTE *)(a2 + 152) |= 0x80u;
    }
  }

  return result;
}

void sub_100117C74(int a1, uint64_t a2, int a3)
{
  uint64_t v5 = sub_10012D890(a2);
  if (!v5)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"gentlyCentralrRsCb Orphaned!  %!", v23, v24, v25, v26, v27, v28, v29, 105LL);
      uint64_t v30 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    goto LABEL_19;
  }

  uint64_t v12 = v5;
  if (a3)
  {
    *(_BYTE *)(v5 + 195) = 1;
    *(_DWORD *)(v5 + 320) = a1;
    uint64_t v13 = sub_10011BD54(sub_10011769C, 0LL);
    if ((_DWORD)v13)
    {
      uint64_t v14 = v13;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCIAPI_RegisterQosCallback failed with %!", v15, v16, v17, v18, v19, v20, v21, v14);
        uint64_t v22 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          sub_100657F08();
        }
      }
    }

    else
    {
      *(_BYTE *)(v12 + 154) = 0;
      sub_10011BD90(v12);
    }
  }

  else
  {
    *(_BYTE *)(v5 + 195) = 0;
    *(_DWORD *)(v5 + 320) = 0xFFFF;
    if (!*(_BYTE *)(v5 + 199) || (int v31 = sub_10012EB98(), sub_10012EC68() + v31 >= 2))
    {
      *(_WORD *)(v12 + 138) &= ~1u;
      uint64_t v32 = sub_1001214B4(49, (uint64_t)nullsub_73, v6, v7, v8, v9, v10, v11, v12);
      if ((_DWORD)v32)
      {
        uint64_t v33 = v32;
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Could not write link settings to Central only %!",  v34,  v35,  v36,  v37,  v38,  v39,  v40,  v33);
          uint64_t v41 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }
    }
  }

  if (!*(_DWORD *)(v12 + 148))
  {
    uint64_t v42 = sub_10010C890(v12);
    if ((_DWORD)v42)
    {
      uint64_t v43 = v42;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_DevMgr_aclActivity failed with %!", v44, v45, v46, v47, v48, v49, v50, v43);
        uint64_t v51 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

  if (!sub_100118094(v12)) {
LABEL_19:
  }
    byte_1008F6D10 = 1;
}

BOOL sub_100117EA8(uint64_t a1)
{
  return sub_100117EB4(**(_DWORD **)(a1 + 8));
}

BOOL sub_100117EB4(int a1)
{
  uint64_t v27 = 0LL;
  unsigned int v1 = a1 != 0;
  BOOL result = sub_10012EBEC(&v27);
  if (result)
  {
    while (1)
    {
      uint64_t v9 = v27;
      if (!*(_BYTE *)(v27 + 54) && !*(_BYTE *)(v27 + 144)) {
        break;
      }
LABEL_14:
      BOOL result = sub_10012EBEC(&v27);
      if (!result) {
        goto LABEL_15;
      }
    }

    int v10 = *(unsigned __int16 *)(v27 + 138);
    if (*(_BYTE *)(v27 + 199))
    {
      int v11 = sub_10012EB98();
      int v12 = sub_10012EC68();
      uint64_t v9 = v27;
      int v13 = *(unsigned __int16 *)(v27 + 138);
      if (v12 + v11 <= v1)
      {
        int v14 = v13 | 1;
LABEL_9:
        *(_WORD *)(v9 + 138) = v14;
        if (v10 != v14)
        {
          uint64_t v15 = sub_1001214B4(49, (uint64_t)nullsub_73, v3, v4, v5, v6, v7, v8, v9);
          if ((_DWORD)v15)
          {
            uint64_t v16 = v15;
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Could not write link settings to Central only %!",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  v16);
              uint64_t v24 = (os_log_s *)sub_100086554(0x2Cu);
              if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
              {
                uint64_t v25 = sub_1001EDDCC();
                *(_DWORD *)int buf = 136446466;
                uint64_t v29 = v25;
                __int16 v30 = 1024;
                int v31 = 0xFFFF;
                _os_log_error_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
              }
            }
          }
        }

        goto LABEL_14;
      }
    }

    else
    {
      LOWORD(v13) = *(_WORD *)(v27 + 138);
    }

    int v14 = v13 & 0xFFFE;
    goto LABEL_9;
  }

BOOL sub_100118094(uint64_t a1)
{
  uint64_t v3 = a1;
  do
    BOOL v1 = sub_10012EBEC(&v3);
  while (v1 && sub_1001179D0(v3));
  return v1;
}

uint64_t sub_1001180D8(uint64_t a1, uint64_t a2, char a3, __int16 a4, int a5)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (a1 && a2)
  {
    uint64_t v10 = sub_10012D890(a2);
    if (v10)
    {
      v14[0] = 0LL;
      __int128 v15 = 0u;
      v13[0] = 0LL;
      v14[1] = a1;
      DWORD1(v15) = a5;
      BYTE2(v15) = a3;
      LOWORD(v15) = a4;
      LODWORD(v14[0]) = *(_DWORD *)a2;
      WORD2(v14[0]) = *(_WORD *)(a2 + 4);
      else {
        int v11 = (2684355 * (unint64_t)(*(unsigned __int16 *)(v10 + 140) + 1599)) >> 32;
      }
      sub_1000B0400((uint64_t)&v15 + 8);
      DWORD2(v15) += v11;
      v13[1] = v14;
      LOWORD(v13[0]) = 32;
      return sub_1001EE6DC((uint64_t)sub_1001181E4, v13, 0LL);
    }

    else
    {
      return 1301LL;
    }
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

uint64_t sub_1001181E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = sub_10012D890(v2);
  if (!v3)
  {
    if (sub_1000A86F0())
    {
      uint64_t v13 = 1301LL;
      sub_1001EE134((uint64_t)"deferredEnforceLinkPolicy orphaned %!", v14, v15, v16, v17, v18, v19, v20, 1301LL);
      uint64_t v21 = (os_log_s *)sub_100086554(0x2Cu);
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 + 8))(v13, v2, *(unsigned int *)(v2 + 20));
      }
      sub_100657858();
    }

    uint64_t v13 = 1301LL;
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 + 8))(v13, v2, *(unsigned int *)(v2 + 20));
  }

  uint64_t v4 = v3;
  if (!*(_BYTE *)(v3 + 54))
  {
    uint64_t v22 = sub_1000B17F4(0x10uLL);
    *(void *)(v4 + 128) = v22;
    if (v22)
    {
      *uint64_t v22 = *(_OWORD *)(v2 + 8);
      if (!*(_BYTE *)(*(void *)(v4 + 128) + 10LL) || !*(_BYTE *)(v4 + 144)) {
        return sub_100119288(v4);
      }
      uint64_t result = sub_100117BA8((uint64_t)sub_1001191E8, v4, 0);
      if (!(_DWORD)result) {
        return result;
      }
      uint64_t v13 = result;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"startRoleSwitch failed %!", v24, v25, v26, v27, v28, v29, v30, v13);
        int v31 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      goto LABEL_26;
    }

    if (sub_1000A86F0())
    {
      uint64_t v13 = 106LL;
      sub_1001EE134((uint64_t)"OI_Malloc failed %!", v32, v33, v34, v35, v36, v37, v38, 106LL);
      uint64_t v39 = (os_log_s *)sub_100086554(0x2Cu);
      if (!os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
        goto LABEL_26;
      }
      sub_100657858();
    }

    uint64_t v13 = 106LL;
LABEL_26:
    uint64_t v40 = *(void **)(v4 + 128);
    if (v40)
    {
      sub_1000B1838(v40);
      *(void *)(v4 + 128) = 0LL;
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 + 8))(v13, v2, *(unsigned int *)(v2 + 20));
  }

  if (sub_1001F4468(v2 + 24))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Enforce policy on %: deferral timed out, giving up",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  v4 + 48);
      int v12 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v13 = 118LL;
    goto LABEL_26;
  }

  uint64_t result = sub_1001EE6E8((uint64_t)sub_1001181E4, (const void **)a1, 1, 0LL);
  uint64_t v13 = result;
  if ((_DWORD)result) {
    goto LABEL_26;
  }
  return result;
}

void sub_10011840C(uint64_t a1, uint64_t a2, int a3)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return;
  }
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCIEventHandler_RoleChange: %! (%:)", v5, v6, v7, v8, v9, v10, v11, a1);
      int v12 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v13 = sub_10012D890(a2);
    if (!v13) {
      goto LABEL_17;
    }
  }

  else
  {
    uint64_t v15 = sub_10012D890(a2);
    if (!v15)
    {
LABEL_17:
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_HCIEventHandler_RoleChange, no connection to %:",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  a2);
        uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return;
    }

    uint64_t v13 = v15;
    *(_BYTE *)(v15 + 144) = a3;
    sub_10010EBCC();
  }

  if (*(_BYTE *)(v13 + 54) == 5)
  {
    uint64_t v16 = *(_BYTE **)(v13 + 120);
    if (!v16)
    {
      sub_1001EE2A0();
      uint64_t v16 = *(_BYTE **)(v13 + 120);
    }

    switch(*v16)
    {
      case 0:
        uint64_t v17 = v13;
        uint64_t v18 = a1;
        goto LABEL_24;
      case 1:
      case 3:
        return;
      case 2:
        uint64_t v35 = sub_100128D24(16LL);
        if ((_DWORD)v35)
        {
          uint64_t v36 = v35;
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"OI_HCICMD_SetConnectionEncryption failed %!, forcing disconnect",  v37,  v38,  v39,  v40,  v41,  v42,  v43,  v36);
            uint64_t v44 = (os_log_s *)sub_100086554(0x2Cu);
            if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          sub_100118720(v13, v36);
          sub_10010CDEC(a2);
        }

        else
        {
          **(_BYTE **)(v13 + 120) = 3;
        }

        break;
      default:
        sub_1001EE2A0();
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_HCIEventHandler_RoleChange %!", v27, v28, v29, v30, v31, v32, v33, 105LL);
          uint64_t v34 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        uint64_t v17 = v13;
        uint64_t v18 = 105LL;
LABEL_24:
        sub_100118720(v17, v18);
        break;
    }
  }

uint64_t sub_100118658(uint64_t a1, unsigned int a2)
{
  if (!sub_10012D514(a1)) {
    return 1301LL;
  }
  else {
    unsigned int v10 = a2;
  }
  *(_WORD *)(a1 + 140) = v10;
  if (*(_BYTE *)(a1 + 144)) {
    return 0LL;
  }
  uint64_t v11 = sub_1001214B4(97, (uint64_t)sub_1001187BC, v4, v5, v6, v7, v8, v9, a1);
  if ((_DWORD)v11)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteLinkSupervisionTimeout failed %!", v13, v14, v15, v16, v17, v18, v19, v11);
      uint64_t v20 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  return v11;
}

void sub_100118720(uint64_t a1, uint64_t a2)
{
  if (!sub_10012D514(a1)) {
    sub_1001EE2A0();
  }
  uint64_t v4 = *(void **)(a1 + 120);
  if (!v4)
  {
    sub_1001EE2A0();
    uint64_t v4 = *(void **)(a1 + 120);
  }

  uint64_t v6 = (void (*)(uint64_t, uint64_t, void))v4[1];
  sub_1000B1838(v4);
  *(void *)(a1 + 120) = 0LL;
  int v5 = *(unsigned __int8 *)(a1 + 54);
  if ((v5 - 6) >= 2)
  {
    if (v5 == 5) {
      *(_BYTE *)(a1 + 54) = 0;
    }
    else {
      sub_1001EE2A0();
    }
  }

  if (v6) {
    v6(a2, a1 + 48, *(unsigned __int8 *)(a1 + 144));
  }
}

void sub_1001187BC(uint64_t a1)
{
  if ((_DWORD)a1 && sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Failed to write LinkTO %!", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1006578C0();
    }
  }

void sub_10011882C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v57 = a2;
  if ((_DWORD)xmmword_1008F6FB8)
  {
    if (*(_BYTE *)(a2 + 54) == 5)
    {
      uint64_t v6 = *(_BYTE **)(a2 + 120);
      if (!v6)
      {
        sub_1001EE2A0();
        uint64_t v6 = *(_BYTE **)(a2 + 120);
      }

      switch(*v6)
      {
        case 0:
        case 2:
          return;
        case 1:
          if ((_DWORD)a1 || a3)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Failed to disable encryption %! %:, encrypt = %d",  v36,  v37,  v38,  v39,  v40,  v41,  v42,  a1);
              uint64_t v43 = (os_log_s *)sub_100086554(0x2Cu);
              if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
LABEL_28:
              }
                sub_100657858();
            }

void sub_100118AFC(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 8);
  if (sub_10012D514(v1))
  {
    if (sub_1001E64D0(v1))
    {
      *(_DWORD *)(v1 + 244) = 0;
    }

    else if (sub_100128D24(16LL) && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Could not re-enable encryption on the link.", v2, v3, v4, v5, v6, v7, v8, v1);
      uint64_t v9 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

void sub_100118B98(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 54);
  if (*(void *)(a1 + 120))
  {
    sub_100118720(a1, 1301LL);
    if (v2 != 5)
    {
      if (sub_1000A86F0())
      {
        uint64_t v3 = sub_10012EFE0(v2);
        sub_1001EE134((uint64_t)"Connection Handle state inconsistent: %s", v4, v5, v6, v7, v8, v9, v10, (uint64_t)v3);
        uint64_t v11 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

  if (*(void *)(a1 + 128))
  {
    sub_100118C98(a1, 1301LL);
    if (v2 != 4)
    {
      if (sub_1000A86F0())
      {
        uint64_t v12 = sub_10012EFE0(v2);
        sub_1001EE134( (uint64_t)"Connection Handle state inconsistent: %s",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  (uint64_t)v12);
        uint64_t v20 = (os_log_s *)sub_100086554(0x2Cu);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

uint64_t sub_100118C98(uint64_t a1, uint64_t a2)
{
  if (!sub_10012D514(a1)) {
    sub_1001EE2A0();
  }
  uint64_t v4 = *(void **)(a1 + 128);
  if (!v4)
  {
    sub_1001EE2A0();
    uint64_t v4 = *(void **)(a1 + 128);
  }

  if (!*v4) {
    sub_1001EE2A0();
  }
  int v5 = *(unsigned __int8 *)(a1 + 54);
  if ((v5 - 6) >= 2 && v5 != 0)
  {
    if (v5 == 4) {
      *(_BYTE *)(a1 + 54) = 0;
    }
    else {
      sub_1001EE2A0();
    }
  }

  uint64_t v7 = *(unsigned int **)(a1 + 128);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v7;
  uint64_t v8 = v7[3];
  sub_1000B1838(v7);
  *(void *)(a1 + 128) = 0LL;
  return v10(a2, a1 + 48, v8);
}

BOOL sub_100118D44(BOOL result)
{
  char v1 = result;
  if (result && !byte_1008E2212) {
    uint64_t result = sub_100118094(0LL);
  }
  byte_1008E2212 = v1;
  return result;
}

uint64_t sub_100118D7C()
{
  return byte_1008E2212;
}

void sub_100118D88(uint64_t a1, int a2)
{
  int v13 = a2;
  v12[1] = &v13;
  v12[0] = (const void *)4;
  if (a1)
  {
    if (*(_BYTE *)(a1 + 54) != 5)
    {
      uint64_t v2 = sub_1001EE6DC((uint64_t)sub_100117EA8, v12, 0LL);
      if ((_DWORD)v2)
      {
        uint64_t v3 = v2;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Gentle Central dispatch failed %!", v4, v5, v6, v7, v8, v9, v10, v3);
          uint64_t v11 = (os_log_s *)sub_100086554(0x2Cu);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
            sub_100657F08();
          }
        }
      }
    }
  }

uint64_t sub_100118E2C(uint64_t a1, uint64_t a2, int a3)
{
  if (!sub_10012D514(a2)) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)(a2 + 54)) {
    sub_1001EE2A0();
  }
  if (*(void *)(a2 + 120)) {
    sub_1001EE2A0();
  }
  uint64_t v6 = sub_1000B17F4(0x10uLL);
  *(void *)(a2 + 120) = v6;
  if (v6)
  {
    v6[1] = a3;
    *(void *)(*(void *)(a2 + 120) + 8LL) = a1;
    if (sub_1001E64D0(a2)
      && (*(_BYTE *)(qword_1008F6D08 + 13) || (*(_BYTE *)(a2 + 263) & 4) == 0 || (byte_1008F6D29 & 4) == 0))
    {
      uint64_t v7 = sub_100128D24(16LL);
      if (!(_DWORD)v7)
      {
        *(_BYTE *)(a2 + 54) = 5;
        **(_BYTE **)(a2 + 120) = 1;
        return v7;
      }

      sub_1001EE134((uint64_t)"OI_HCICMD_SetConnectionEncryption failed %!", v8, v9, v10, v11, v12, v13, v14, v7);
      uint64_t v15 = (os_log_s *)sub_100086554(0x2Cu);
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        goto LABEL_26;
      }
      goto LABEL_25;
    }

    uint64_t v7 = sub_100128D24(47LL);
    if (!(_DWORD)v7)
    {
      *(_BYTE *)(a2 + 54) = 5;
      **(_BYTE **)(a2 + 120) = 0;
      return v7;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_SwitchRole failed %!", v24, v25, v26, v27, v28, v29, v30, v7);
      uint64_t v31 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
LABEL_25:
      }
        sub_100657858();
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      uint64_t v7 = 106LL;
      sub_1001EE134((uint64_t)"OI_Malloc failed %!", v16, v17, v18, v19, v20, v21, v22, 106LL);
      uint64_t v23 = (os_log_s *)sub_100086554(0x2Cu);
      if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        goto LABEL_26;
      }
      sub_100657858();
    }

    uint64_t v7 = 106LL;
  }

void sub_100119030(uint64_t a1, uint64_t a2, int a3)
{
  if (!a2)
  {
    sub_1001EE134((uint64_t)"roleChangeCb : NULL address", v19, v20, v21, v22, v23, v24, v25, v44);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Cu);
    if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_11:
    sub_100657858();
    return;
  }

  uint64_t v6 = sub_10012D890(a2);
  if (!v6)
  {
    sub_1001EE134((uint64_t)"roleChangeCb : The connection is gone.", v27, v28, v29, v30, v31, v32, v33, v44);
    uint64_t v34 = (os_log_s *)sub_100086554(0x2Cu);
    if (!os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_11;
  }

  uint64_t v7 = v6;
  if (!*(_BYTE *)(v6 + 213)) {
    return;
  }
  *(_BYTE *)(v6 + 213) = 0;
  uint64_t v8 = *(void *)(v6 + 216);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 216);
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"roleChangeCb : Cound not change mode : %!", v9, v10, v11, v12, v13, v14, v15, a1);
      uint64_t v16 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v17 = *(unsigned __int8 *)(v7 + 144);
    uint64_t v18 = a1;
LABEL_20:
    v45(v18, a2, v17);
    return;
  }

  if (a3)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"roleChangeCb : why didn't we unsniff ? We want to change role !",  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v44);
      uint64_t v42 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v17 = *(unsigned __int8 *)(v7 + 144);
    uint64_t v18 = 0LL;
    goto LABEL_20;
  }

  uint64_t v43 = sub_100118E2C(v8, v7, *(unsigned __int8 *)(v7 + 276));
  if ((_DWORD)v43) {
    v45(v43, a2, *(unsigned __int8 *)(v7 + 144));
  }
}

void sub_1001191E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10012D890(a2);
  if (v3)
  {
    if ((_DWORD)a1) {
      sub_100118C98(v3, a1);
    }
    else {
      sub_100119288(v3);
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"enforcePolicyRsCb Orphaned!  %!", v4, v5, v6, v7, v8, v9, v10, 105LL);
    uint64_t v11 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_100119288(uint64_t a1)
{
  if (!sub_10012D514(a1)) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)(a1 + 54)) {
    sub_1001EE2A0();
  }
  uint64_t v8 = *(void *)(a1 + 128);
  if (!v8)
  {
    sub_1001EE2A0();
    uint64_t v8 = *(void *)(a1 + 128);
  }

  int v9 = *(_WORD *)(v8 + 8) & 6;
  int v10 = *(unsigned __int16 *)(a1 + 138);
  if (*(_BYTE *)(v8 + 10)) {
    int v11 = 0;
  }
  else {
    int v11 = v10 & 1;
  }
  int v12 = v9 | v11;
  *(_BYTE *)(a1 + 54) = 4;
  if (v12 == v10) {
    return sub_100118C98(a1, 0LL);
  }
  *(_WORD *)(a1 + 138) = v12;
  uint64_t result = sub_1001214B4(49, (uint64_t)sub_1001193A0, v2, v3, v4, v5, v6, v7, a1);
  if ((_DWORD)result)
  {
    uint64_t v14 = result;
    *(_WORD *)(a1 + 138) = -1;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteLinkPolicySettings failed %!", v15, v16, v17, v18, v19, v20, v21, v14);
      uint64_t v22 = (os_log_s *)sub_100086554(0x2Cu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return sub_100118C98(a1, v14);
  }

  return result;
}

void sub_1001193A0(uint64_t a1, uint64_t a2)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0()
      && (sub_1001EE134((uint64_t)"enforcementWriteLinkPolicyCb failed %!", v4, v5, v6, v7, v8, v9, v10, a1),
          int v11 = (os_log_s *)sub_100086554(0x2Cu),
          os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)))
    {
      sub_100657858();
      if (a2) {
        goto LABEL_5;
      }
    }

    else if (a2)
    {
LABEL_5:
      *(_WORD *)(a2 + 138) = -1;
LABEL_7:
      sub_100118C98(a2, a1);
      return;
    }
  }

  else if (a2)
  {
    goto LABEL_7;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"enforcementWriteLinkPolicyCb orphaned!  %!", v12, v13, v14, v15, v16, v17, v18, 1301LL);
    uint64_t v19 = (os_log_s *)sub_100086554(0x2Cu);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_100119484(uint64_t a1, uint64_t a2)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (!a1) {
    return 101LL;
  }
  if (!a2)
  {
    uint64_t v4 = &qword_1008E2218;
    if (qword_1008E2218) {
      return 1327LL;
    }
LABEL_10:
    uint64_t result = 0LL;
    *uint64_t v4 = a1;
    return result;
  }

  uint64_t v3 = sub_10012D890(a2);
  if (v3)
  {
    uint64_t v4 = (uint64_t *)(v3 + 80);
    if (*(void *)(v3 + 80)) {
      return 1327LL;
    }
    goto LABEL_10;
  }

  return 1301LL;
}

uint64_t sub_100119508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (!a1) {
    return 101LL;
  }
  if (a2)
  {
    uint64_t v5 = sub_10012D890(a2);
    if (v5)
    {
      uint64_t v6 = v5;
      if (!*(void *)(v5 + 88))
      {
        uint64_t result = 0LL;
        *(void *)(v6 + 88) = a1;
        *(void *)(v6 + 96) = a3;
        return result;
      }

      return 1327LL;
    }

    return 1301LL;
  }

  else
  {
    if (qword_1008E2220) {
      return 1327LL;
    }
    uint64_t result = 0LL;
    qword_1008E2220 = a1;
  }

  return result;
}

uint64_t sub_100119598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (!a3)
  {
    qword_1008E2228 = a1;
    uint64_t v6 = &qword_1008E2230;
    goto LABEL_7;
  }

  uint64_t v5 = sub_10012D890(a3);
  if (v5)
  {
    *(void *)(v5 + 104) = a1;
    uint64_t v6 = (uint64_t *)(v5 + 112);
LABEL_7:
    uint64_t result = 0LL;
    *uint64_t v6 = a2;
    return result;
  }

  return 1301LL;
}

uint64_t sub_10011960C(uint64_t result)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (result)
  {
    uint64_t v1 = sub_10012D890(result);
    if (v1)
    {
      uint64_t v2 = v1;
      uint64_t result = 0LL;
      *(void *)(v2 + 104) = 0LL;
      *(void *)(v2 + 112) = 0LL;
    }

    else
    {
      return 1301LL;
    }
  }

  else
  {
    qword_1008E2228 = 0LL;
    qword_1008E2230 = 0LL;
  }

  return result;
}

uint64_t sub_100119668(uint64_t a1)
{
  uint64_t v4 = 0LL;
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  uint64_t v1 = sub_10012D890(a1);
  if (!v1) {
    return 1301LL;
  }
  uint64_t v2 = v1;
  if (sub_10012EEA0(&v4))
  {
    while (*(void *)(v4 + 48) != v2 || *(_BYTE *)(v4 + 56))
    {
      if (!sub_10012EEA0(&v4)) {
        goto LABEL_7;
      }
    }

    return 141LL;
  }

  else
  {
LABEL_7:
    uint64_t result = 0LL;
    *(void *)(v2 + 80) = 0LL;
  }

  return result;
}

uint64_t sub_1001196F8(uint64_t a1)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (a1)
  {
    if (sub_10012D8E8(a1))
    {
      return 141LL;
    }

    else
    {
      uint64_t result = sub_10012D890(a1);
      if (result)
      {
        uint64_t v3 = result;
        uint64_t result = 0LL;
        *(void *)(v3 + 88) = 0LL;
        *(void *)(v3 + 96) = 0LL;
      }
    }
  }

  else
  {
    uint64_t result = 0LL;
    qword_1008E2220 = 0LL;
  }

  return result;
}

uint64_t sub_10011976C(uint64_t a1)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (!sub_10012D5BC(a1)) {
    return 1301LL;
  }
  uint64_t v9 = sub_100128D24(5u, v2, v3, v4, v5, v6, v7, v8, a1);
  uint64_t result = sub_100136C78(a1, v9);
  if (!(_DWORD)result) {
    byte_1008E2243 = 1;
  }
  return result;
}

uint64_t sub_1001197E4()
{
  uint64_t result = dword_1008E2244;
  if (dword_1008E2244) {
    return sub_1001EECE0(dword_1008E2244);
  }
  return result;
}

uint64_t sub_1001197F8(uint64_t a1)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (HIBYTE(word_1008E2239)) {
    return 1319LL;
  }
  if ((_BYTE)word_1008E2239)
  {
  }

  unsigned int v5 = sub_10012EC5C();
  if (v5 >= *(unsigned __int8 *)(sub_1001EDBA0(0x28u) + 1))
  {
    if (sub_1000A86F0())
    {
      sub_1001EDBA0(0x28u);
      uint64_t v1 = 1309LL;
      sub_1001EE134((uint64_t)"OI_DEVMGR_ScoCreateConnection: %! (%d) %:", v7, v8, v9, v10, v11, v12, v13, 1309LL);
      uint64_t v14 = (os_log_s *)sub_100086554(0x3Eu);
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        return v1;
      }
      sub_100657858();
    }

    return 1309LL;
  }

  if (!qword_1008E2218)
  {
    uint64_t v15 = sub_10012D890(a1);
    if (!v15 || !*(void *)(v15 + 80)) {
      return 1328LL;
    }
  }

  uint64_t v1 = sub_10010C710((uint64_t)sub_100119960, a1);
  if (!(_DWORD)v1)
  {
    *(__int16 *)((char *)&word_1008E2239 + 1) = 1;
    int v6 = *(_DWORD *)a1;
    word_1008E2241 = *(_WORD *)(a1 + 4);
    dword_1008E223D = v6;
    dword_1008E2244 = 0;
    byte_1008E223C = 0;
  }

  return v1;
}

void sub_100119960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (HIBYTE(word_1008E2239))
  {
    sub_10011A1AC(a1, a3, 3, 0LL);
  }

  else
  {
    if (!(_DWORD)a1) {
      sub_1001EE2A0();
    }
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Orphan connectAclForScoCb", v3, v4, v5, v6, v7, v8, v9, v11);
      uint64_t v10 = (os_log_s *)sub_100086554(0x3Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

uint64_t sub_1001199E4(unsigned __int16 *a1, char *a2, size_t a3, char a4)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (!byte_1008E2243) {
    return sub_10013596C(a1, a2, a3, a4);
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Sco Disconnect is in progress", v4, v5, v6, v7, v8, v9, v10, v13);
    uint64_t v11 = (os_log_s *)sub_100086554(0x3Eu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return 1347LL;
}

uint64_t sub_100119A70()
{
  return byte_1008E2243;
}

uint64_t sub_100119A7C(_WORD *a1, _WORD *a2)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (a1 && a2)
  {
    sub_100135CFC(a1);
    __int16 v3 = sub_100135F28();
    uint64_t result = 0LL;
    *a2 = v3;
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

  return result;
}

uint64_t sub_100119AD8(int a1, int a2)
{
  if (!(_DWORD)xmmword_1008F6FB8) {
    return 103LL;
  }
  if (a1 && a2) {
    return sub_100135D40(a1, a2);
  }
  sub_1001EE2A0();
  return 101LL;
}

uint64_t sub_100119B1C()
{
  if ((_DWORD)xmmword_1008F6FB8) {
    return sub_100135D88();
  }
  else {
    return 103LL;
  }
}

void sub_100119B38()
{
  word_1008E2239 = 0;
  byte_1008E2243 = 0;
  qword_1008E2218 = 0LL;
  qword_1008E2220 = 0LL;
  qword_1008E2228 = 0LL;
  qword_1008E2230 = 0LL;
}

uint64_t sub_100119B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 + 48;
  int v4 = *(_DWORD *)(a1 + 48);
  uint64_t v33 = 0LL;
  int v6 = 0;
  if (dword_1008E223D == v4 && word_1008E2241 == *(_WORD *)(a1 + 52))
  {
    byte_1008E2243 = 0;
    if (HIBYTE(word_1008E2239)) {
      BOOL v8 = 1;
    }
    else {
      BOOL v8 = word_1008E2239 == 1;
    }
    if (v8)
    {
      uint64_t v9 = sub_10012DB74((uint64_t)&dword_1008E223D);
      sub_100119DBC((uint64_t)v9, v5, 0, a2);
      int v6 = HIBYTE(word_1008E2239);
    }

    word_1008E2239 = 0;
  }

  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v11 = qword_1008E2218;
  uint64_t result = sub_10012EEA0((uint64_t *)&v33);
  if ((_DWORD)result)
  {
    if (v10) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = v11;
    }
    uint64_t v32 = 136446210LL;
    do
    {
      if (*((void *)v33 + 6) == a1)
      {
        if (v13) {
          (*(void (**)(void))(v13 + 8))(0LL);
        }
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Disconnecting SCO riding on top of ACL", v14, v15, v16, v17, v18, v19, v20, v32);
          uint64_t v21 = (os_log_s *)sub_100086554(0x3Eu);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v22 = sub_1001EDDCC();
            *(_DWORD *)int buf = v32;
            uint64_t v35 = v22;
            _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        sub_100135CD4();
        sub_10010CAA4(a1, 2u);
        sub_10012E320(v33);
        uint64_t v33 = 0LL;
      }

      uint64_t result = sub_10012EEA0((uint64_t *)&v33);
    }

    while ((result & 1) != 0);
  }

  if (v6 == 1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received disconnect while OB SCO connection was in progress",  v23,  v24,  v25,  v26,  v27,  v28,  v29,  v32);
      uint64_t v30 = (os_log_s *)sub_100086554(0x3Eu);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v31 = sub_1001EDDCC();
        *(_DWORD *)int buf = 136446210;
        uint64_t v35 = v31;
        _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    return sub_10010CAA4(a1, 2u);
  }

  return result;
}

void sub_100119DBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (a1)
  {
    *(_BYTE *)(a1 + 58) = a3;
    uint64_t v7 = *(void *)(a1 + 48);
    if (word_1008E2239 != 2)
    {
      int v8 = HIBYTE(word_1008E2239);
      BOOL v10 = v7
         && HIBYTE(word_1008E2239) | word_1008E2239
         && *(_DWORD *)(v7 + 48) == dword_1008E223D
         && *(unsigned __int16 *)(v7 + 52) == (unsigned __int16)word_1008E2241;
      goto LABEL_25;
    }
  }

  else
  {
    int v11 = word_1008E2239;
    if (word_1008E2239 != 2)
    {
LABEL_68:
      if (byte_1008E2238) {
        --byte_1008E2238;
      }
      if ((v11 - 3) <= 1)
      {
        LOBYTE(word_1008E2239) = 0;
        uint64_t v44 = sub_10012D890(a2);
        if (v44)
        {
          uint64_t v45 = *(void (***)(uint64_t, void, uint64_t))(v44 + 80);
          if (v45)
          {
            if (*v45) {
              (*v45)(a4, 0LL, a2);
            }
          }
        }
      }

      return;
    }

    uint64_t v7 = 0LL;
  }

  if ((_DWORD)a4)
  {
    LOBYTE(word_1008E2239) = 0;
    return;
  }

  BOOL v10 = 0;
  int v8 = HIBYTE(word_1008E2239);
  if (v7 && HIBYTE(word_1008E2239)) {
    BOOL v10 = *(_DWORD *)(v7 + 48) == dword_1008E223D && *(unsigned __int16 *)(v7 + 52) == (unsigned __int16)word_1008E2241;
  }
  if (!a1)
  {
    int v11 = 2;
    goto LABEL_68;
  }

BOOL sub_10011A138(uint64_t a1)
{
  if (a1)
  {
    if (dword_1008E223D != *(_DWORD *)a1 || word_1008E2241 != *(_WORD *)(a1 + 4)) {
      return 0LL;
    }
  }

  if (byte_1008E2243) {
    return 1LL;
  }
  return (word_1008E2239 & 0xFB) != 0 && word_1008E2239 != 3 || HIBYTE(word_1008E2239) != 0;
}

void sub_10011A1AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (!HIBYTE(word_1008E2239)) {
    sub_1001EE2A0();
  }
  uint64_t v39 = 0LL;
  uint64_t v40 = 0LL;
  uint64_t v37 = 0LL;
  uint64_t v38 = 0LL;
  if (!sub_10012D514(a2)) {
    a2 = 0LL;
  }
  if ((_DWORD)a1 || !a2)
  {
    if (!(_DWORD)a1) {
      return;
    }
LABEL_69:
    HIBYTE(word_1008E2239) = 0;
    if (!a2)
    {
      uint64_t v25 = 0LL;
      goto LABEL_72;
    }

uint64_t sub_10011A6C4(uint64_t a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if (a3 != 2) {
      sub_1001EE2A0();
    }
    char v5 = 4;
  }

  else
  {
    char v5 = 3;
  }

  uint64_t v6 = sub_10012D890(a1);
  if (!v6)
  {
    sub_1001EE134( (uint64_t)"Cannot accept SCO connection, no ACL connection record for %:",  v23,  v24,  v25,  v26,  v27,  v28,  v29,  a1);
    uint64_t v30 = (os_log_s *)sub_100086554(0x3Eu);
    if (!os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }

  if ((_BYTE)word_1008E2239)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Cannot accept SCO connection, Incoming sco connection already in progress (%:)",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  (uint64_t)&dword_1008E223D);
      uint64_t v14 = (os_log_s *)sub_100086554(0x3Eu);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EE134((uint64_t)"ob: %d\nib: %d", v15, v16, v17, v18, v19, v20, v21, HIBYTE(word_1008E2239));
    uint64_t v22 = (os_log_s *)sub_100086554(0x3Eu);
    if (!os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      goto LABEL_35;
    }
LABEL_34:
    sub_100657858();
    goto LABEL_35;
  }

  uint64_t v31 = v6;
  if (HIBYTE(word_1008E2239) && !*(_BYTE *)(v6 + 144))
  {
    sub_1001EE134( (uint64_t)"Cannot accept SCO connection, Outgoing sco connection already in progress (%:)",  v46,  v47,  v48,  v49,  v50,  v51,  v52,  (uint64_t)&dword_1008E223D);
    uint64_t v53 = (os_log_s *)sub_100086554(0x3Eu);
    if (!os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }

  unsigned int v32 = sub_10012EC5C();
  if (v32 >= *(unsigned __int8 *)(sub_1001EDBA0(0x28u) + 1))
  {
    sub_1001EDBA0(0x28u);
    sub_1001EE134( (uint64_t)"Cannot accept SCO connection from %:, already reached max SCO connections (%d)",  v38,  v39,  v40,  v41,  v42,  v43,  v44,  a1);
    uint64_t v45 = (os_log_s *)sub_100086554(0x3Eu);
    if (!os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }

  if (HIBYTE(word_1008E2239))
  {
    if (*(_BYTE *)(v31 + 144) == 1)
    {
      HIBYTE(word_1008E2239) = 0;
      uint64_t v33 = (unsigned __int16 *)sub_10012D8E8(a1);
      if (v33)
      {
        sub_10012E320(v33);
        sub_10011286C(v31);
      }
    }
  }

  uint64_t v34 = *(void *)(v31 + 80);
  if (!v34) {
    uint64_t v34 = qword_1008E2218;
  }
  if (v34)
  {
    uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 16);
    if (v35)
    {
      LOBYTE(word_1008E2239) = v5;
      int v36 = *(_DWORD *)a1;
      word_1008E2241 = *(_WORD *)(a1 + 4);
      dword_1008E223D = v36;
      return v35(a1, a2);
    }
  }

uint64_t sub_10011A99C(uint64_t a1, int a2)
{
  uint64_t v70 = 0LL;
  int v4 = word_1008E2239;
  if (word_1008E2239 - 5 <= 0xFFFFFFFD)
  {
    if (a2)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Cannot accept a Sco connection at this time (%:)", v5, v6, v7, v8, v9, v10, v11, a1);
        uint64_t v12 = (os_log_s *)sub_100086554(0x3Eu);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    return 1310LL;
  }

  if (!a2) {
    goto LABEL_20;
  }
  if (*(_DWORD *)a1 != dword_1008E223D || *(unsigned __int16 *)(a1 + 4) != (unsigned __int16)word_1008E2241)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Cannot accept SCO for %:", v15, v16, v17, v18, v19, v20, v21, a1);
      uint64_t v22 = (os_log_s *)sub_100086554(0x3Eu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

uint64_t sub_10011AC98(uint64_t a1, int a2)
{
  if (!a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Can't find ACL connection for SCO!\n", v5, v6, v7, v8, v9, v10, v11, v41);
      uint64_t v12 = (os_log_s *)sub_100086554(0x3Eu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    LOBYTE(word_1008E2239) = 0;
    if (sub_1000A86F0())
    {
      uint64_t v4 = 1301LL;
      sub_1001EE134((uint64_t)"Accept sco connect request failed %! (unk)", v13, v14, v15, v16, v17, v18, v19, 1301LL);
      uint64_t v20 = (os_log_s *)sub_100086554(0x3Eu);
      if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        return v4;
      }
      sub_100657858();
    }

    return 1301LL;
  }

  if (*(_BYTE *)(sub_1001EDBA0(0x28u) + 10) && *(_BYTE *)(a1 + 152) == 2)
  {
    if (dword_1008E2244)
    {
      if (a2)
      {
LABEL_8:
        v43[0] = a1;
        v43[1] = (a2 - 1);
        v42[1] = v43;
        v42[0] = (const void *)16;
        return sub_1001EE6E8( (uint64_t)sub_10011B848,  v42,  (42949673 * (unint64_t)(*(unsigned __int16 *)(a1 + 136) + 99)) >> 32,  &dword_1008E2244);
      }
    }

    else if (!sub_100128D24(42LL))
    {
      *(_BYTE *)(a1 + 152) |= 0x80u;
      if (a2) {
        goto LABEL_8;
      }
    }
  }

  dword_1008E2244 = 0;
  if (*(void *)(a1 + 112)) {
    uint64_t v21 = *(void *)(a1 + 112);
  }
  else {
    uint64_t v21 = qword_1008E2230;
  }
  if (v21)
  {
    if (!*(_WORD *)(v21 + 10)) {
      sub_100115768();
    }
    if (*(_BYTE *)(a1 + 278)) {
      goto LABEL_27;
    }
LABEL_28:
    uint64_t v22 = sub_100128D24(28LL);
    goto LABEL_29;
  }

  sub_100115768();
  sub_1001129EC(a1);
  if (!*(_BYTE *)(a1 + 278)) {
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v22 = sub_100191DB8();
LABEL_29:
  uint64_t v4 = v22;
  if (!(_DWORD)v22)
  {
    LOBYTE(word_1008E2239) = 1;
    return v4;
  }

  LOBYTE(word_1008E2239) = 0;
  uint64_t v23 = sub_10010CAA4(a1, 0x13u);
  if (sub_1000A86F0()
    && (sub_1001EE134((uint64_t)"Accept sco connect request failed %! (%:)", v24, v25, v26, v27, v28, v29, v30, v4),
        uint64_t v31 = (os_log_s *)sub_100086554(0x3Eu),
        os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)))
  {
    sub_100657858();
    if (!(_DWORD)v23) {
      return v4;
    }
  }

  else if (!(_DWORD)v23)
  {
    return v4;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_LP_DisconnectReq failed: %!", v32, v33, v34, v35, v36, v37, v38, v23);
    uint64_t v39 = (os_log_s *)sub_100086554(0x3Eu);
    if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  return v4;
}

uint64_t sub_10011AFEC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!(_DWORD)result)
  {
    if (*(_BYTE *)(a2 + 2))
    {
      byte_1008E2243 = 0;
      uint64_t v5 = *(void *)(*(void *)(a2 + 48) + 80LL);
      uint64_t v6 = sub_10010CAA4(*(void *)(a2 + 48), 0x13u);
      if ((_DWORD)v6)
      {
        uint64_t v7 = v6;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_LP_DisconnectReq failed: %! (%d)", v8, v9, v10, v11, v12, v13, v14, v7);
          uint64_t v15 = (os_log_s *)sub_100086554(0x3Eu);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }

      uint64_t v16 = qword_1008E2218;
      if (v5) {
        uint64_t v16 = v5;
      }
      if (v16)
      {
        uint64_t v17 = *(void (**)(void, uint64_t, uint64_t))(v16 + 8);
        if (v17) {
          v17(0LL, a2, a3);
        }
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Disconnecting SCO", v18, v19, v20, v21, v22, v23, v24, v26);
        uint64_t v25 = (os_log_s *)sub_100086554(0x3Eu);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 136446210;
          uint64_t v28 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }

      sub_100135CD4();
      return sub_1001ABEF8(0);
    }

    else
    {
      return sub_100119B6C(a2, a3);
    }
  }

  return result;
}

uint64_t sub_10011B1A4()
{
  uint64_t v3 = 0LL;
  uint64_t result = sub_10012EEA0(&v3);
  if ((_DWORD)result)
  {
    do
    {
      if (!sub_10012D514(*(void *)(v3 + 48))) {
        sub_1001EE2A0();
      }
      uint64_t v1 = *(void (***)(void))(*(void *)(v3 + 48) + 88LL);
      if (v1)
      {
        uint64_t v2 = *v1;
        if (v2) {
          v2();
        }
      }

      uint64_t result = sub_10012EEA0(&v3);
    }

    while ((result & 1) != 0);
  }

  if (qword_1008E2220)
  {
    if (*(void *)qword_1008E2220) {
      return (*(uint64_t (**)(void))qword_1008E2220)();
    }
  }

  return result;
}

void sub_10011B220()
{
  if ((_DWORD)xmmword_1008F6FB8)
  {
    if (!sub_10012D5BC(qword_1008E2248)) {
      qword_1008E2248 = 0LL;
    }
    do
    {
      if (!sub_10012EEA0(&qword_1008E2248)) {
        break;
      }
      if (!sub_10012D514(*(void *)(qword_1008E2248 + 48))) {
        sub_1001EE2A0();
      }
      uint64_t v0 = *(void *)(*(void *)(qword_1008E2248 + 48) + 88LL);
      if (!v0) {
        uint64_t v0 = qword_1008E2220;
      }
      if (v0)
      {
        uint64_t v1 = *(void (**)(void))(v0 + 16);
        if (v1) {
          v1();
        }
      }
    }

    while ((sub_100135FB8() & 1) != 0);
  }

void sub_10011B2C0(uint64_t a1, uint64_t a2)
{
  if (sub_10012D5BC(a1))
  {
    if ((_DWORD)xmmword_1008F6FB8)
    {
      if (!sub_10012D514(*(void *)(a1 + 48))) {
        sub_1001EE2A0();
      }
      uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 88LL);
      if (!v4) {
        uint64_t v4 = qword_1008E2220;
      }
      if (v4)
      {
        uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 24);
        if (v5) {
          v5(a1, a2);
        }
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HCIEventHandler_ScoPacketComplete - %! 0x%x", v6, v7, v8, v9, v10, v11, v12, 1338LL);
    uint64_t v13 = (os_log_s *)sub_100086554(0x3Eu);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_10011B394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (sub_10012D5BC(a2))
  {
    if ((_DWORD)xmmword_1008F6FB8)
    {
      if (!sub_10012D514(*(void *)(a2 + 48))) {
        sub_1001EE2A0();
      }
      uint64_t v12 = *(void *)(a2 + 48);
      uint64_t v13 = *(void *)(v12 + 88);
      uint64_t v14 = *(void *)(v12 + 96);
      uint64_t v15 = qword_1008E2220;
      if (v13)
      {
        uint64_t v15 = v13;
        uint64_t v16 = v14;
      }

      else
      {
        uint64_t v16 = 0LL;
      }

      if (v15)
      {
        uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(v15 + 32);
        if (v17) {
          v17(a1, a2, a3, a4, a5, a6, *(unsigned __int8 *)(a2 + 57), v16);
        }
      }

      *(_BYTE *)(a2 + 60) = a3;
      *(_BYTE *)(a2 + 61) = a4;
      sub_1001ABEF8(1u);
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HCIEventHandler_ScoConfigChanged - %! 0x%x", v18, v19, v20, v21, v22, v23, v24, 1338LL);
    uint64_t v25 = (os_log_s *)sub_100086554(0x3Eu);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_10011B4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!sub_10012D5BC(a1)) {
    sub_1001EE2A0();
  }
  if ((_DWORD)xmmword_1008F6FB8)
  {
    if (!sub_10012D5BC(a1)) {
      sub_1001EE2A0();
    }
    if (*(_BYTE *)(a5 + 8))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_HCIEventHandler_ScoDataPacketReceived: wakeupCause SCO Packet from BT Controller (handle=0x%hX err oneous=%hhu len=%hu)\n",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  a1);
        uint64_t v17 = (os_log_s *)sub_100086554(0x3Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 136446210;
          uint64_t v34 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }

    if (!(_DWORD)a4 || !*(_BYTE *)(a1 + 59))
    {
      uint64_t v18 = *(void *)(a1 + 48);
      uint64_t v19 = *(void *)(v18 + 88);
      uint64_t v20 = *(void *)(v18 + 96);
      uint64_t v21 = qword_1008E2220;
      if (v19)
      {
        uint64_t v21 = v19;
        uint64_t v22 = v20;
      }

      else
      {
        uint64_t v22 = 0LL;
      }

      if (v21)
      {
        uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8);
        if (v23) {
          v23(a1, a4, a2, a3, v22, a5);
        }
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)" OI_STATUS_NOT_INITIALIZED", v24, v25, v26, v27, v28, v29, v30, v32);
    uint64_t v31 = (os_log_s *)sub_100086554(0x3Eu);
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
      sub_100657F08();
    }
  }

void sub_10011B66C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  BOOL v17 = sub_10012D5BC(a2);
  if ((_DWORD)a1 || v17)
  {
    sub_10010D3AC(a1, (unsigned __int16 *)a2, a3, a4, 0LL);
    if ((_DWORD)a1) {
      return;
    }
  }

  else
  {
    sub_1001EE2A0();
    sub_10010D3AC(0LL, (unsigned __int16 *)a2, a3, a4, 0LL);
  }

  sub_100135CD0(a9);
  *(_BYTE *)(a2 + 58) = a4;
  else {
    uint64_t v18 = 0LL;
  }
  else {
    uint64_t v19 = 6LL;
  }
  *(_BYTE *)(a2 + 57) = a9;
  sub_10011B394(0LL, a2, v19, v18, a7, a8);
}

uint64_t sub_10011B764(uint64_t a1)
{
  if (HIBYTE(word_1008E2239) != 1 || dword_1008E2244 == 0) {
    return 1301LL;
  }
  sub_1001EEB14(dword_1008E2244);
  dword_1008E2244 = 0;
  HIBYTE(word_1008E2239) = 0;
  uint64_t v3 = sub_10012D890(a1);
  sub_10010CAA4(v3, 2u);
  return 0LL;
}

void sub_10011B7C4(uint64_t a1)
{
  if (HIBYTE(word_1008E2239))
  {
    sub_10011A1AC(0LL, **(void **)(a1 + 8), *(unsigned int *)(*(void *)(a1 + 8) + 8LL), 0LL);
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Orphan deferredConnectScoCb", v1, v2, v3, v4, v5, v6, v7, v9);
    uint64_t v8 = (os_log_s *)sub_100086554(0x3Eu);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_10011B848(uint64_t result)
{
  if (dword_1008E2244)
  {
    uint64_t v1 = *(uint64_t **)(result + 8);
    uint64_t v2 = *v1;
    uint64_t result = sub_10011AC98(*v1, *((unsigned int *)v1 + 2));
    if (v2 && (_DWORD)result != 0)
    {
      uint64_t v4 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v2 + 80);
      if (!v4) {
        uint64_t v4 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))qword_1008E2218;
      }
      if (v4)
      {
        if (*v4) {
          return (*v4)(result, v2, v2 + 48);
        }
      }
    }
  }

  return result;
}

uint64_t sub_10011B8C0(unsigned __int8 *a1, void *a2, _BYTE *a3, char *a4)
{
  uint64_t v4 = 101LL;
  if (a3 && a2 && a4)
  {
    if (a1)
    {
      int v5 = 240;
      uint64_t v6 = a1;
      do
      {
        uint64_t v7 = *v6;
        if (!*v6) {
          break;
        }
        if (v6[1] == 9)
        {
          if (v5 > v7)
          {
            char v10 = 1;
LABEL_21:
            uint64_t v4 = 0LL;
            *a3 = v7 - 1;
            *a4 = v10;
            *a2 = v6 + 2;
            return v4;
          }

          break;
        }

        uint64_t v8 = v7 + 1;
        v6 += v8;
        BOOL v9 = __OFSUB__(v5, (_DWORD)v8);
        v5 -= v8;
      }

      while (!((v5 < 0) ^ v9 | (v5 == 0)));
      int v11 = 240;
      do
      {
        uint64_t v7 = *a1;
        if (!*a1) {
          break;
        }
        if (a1[1] == 8)
        {
          char v10 = 0;
          uint64_t v6 = a1;
          goto LABEL_21;
        }

        a1 += v7 + 1;
        BOOL v9 = __OFSUB__(v11, v7 + 1);
        v11 -= v7 + 1;
      }

      while (!((v11 < 0) ^ v9 | (v11 == 0)));
    }

    return 120LL;
  }

  return v4;
}

uint64_t sub_10011B978(unsigned __int8 *a1, int a2, int *a3)
{
  if (!a3) {
    return 101LL;
  }
  int v3 = 0;
  int v4 = 0;
  *a3 = 0;
  unsigned __int8 v5 = 2;
  char v6 = 15;
  do
  {
    if (!a1) {
      goto LABEL_42;
    }
    int v7 = 240;
    uint64_t v8 = a1;
    while (1)
    {
      uint64_t v9 = *v8;
      if (!*v8) {
        goto LABEL_42;
      }
      if (v8[1] == v5) {
        break;
      }
      uint64_t v10 = v9 + 1;
      v8 += v10;
      BOOL v11 = __OFSUB__(v7, (_DWORD)v10);
      v7 -= v10;
      if ((v7 < 0) ^ v11 | (v7 == 0)) {
        goto LABEL_42;
      }
    }

    uint64_t v12 = (v9 - 1);
    if (v5 < 6u)
    {
      if (v5 < 4u)
      {
        if ((((_BYTE)v9 - 1) & 1) != 0)
        {
LABEL_49:
          int v21 = 0;
          uint64_t result = 131LL;
          goto LABEL_48;
        }
      }

      else if ((((_BYTE)v9 - 1) & 3) != 0)
      {
        goto LABEL_49;
      }
    }

    else if ((((_BYTE)v9 - 1) & 0xF) != 0)
    {
      goto LABEL_49;
    }

    if ((v5 & 1) != 0)
    {
      v6 -= v5;
      if (v3) {
        goto LABEL_23;
      }
      int v3 = 3;
    }

    else
    {
      int v3 = 2;
    }

    *a3 = v3;
LABEL_23:
    uint64_t v13 = (unsigned __int16 *)(v8 + 2);
    while ((_BYTE)v12)
    {
      uint64_t v14 = v13 + 8;
      LODWORD(v15) = v12;
      while (v5 - 6 < 2)
      {
        uint64_t v15 = (v15 - 16);
        if (*((void *)v14 - 2) == 0x800000805F9B34FBLL && *((_DWORD *)v14 - 2) == 4096)
        {
          int v4 = *((_DWORD *)v14 - 1);
          goto LABEL_40;
        }

        v14 += 8;
        if (!(_BYTE)v15) {
          goto LABEL_42;
        }
      }

      if (v5 - 4 < 2)
      {
        int v18 = *(_DWORD *)v13;
        v13 += 2;
        int v4 = v18;
        uint64_t v15 = (v12 - 4);
      }

      else if (v5 - 2 > 1)
      {
        uint64_t v15 = v12;
      }

      else
      {
        int v17 = *v13++;
        int v4 = v17;
        uint64_t v15 = (v12 - 2);
      }

      uint64_t v14 = v13;
LABEL_40:
      uint64_t v12 = v15;
      uint64_t v13 = v14;
      if (v4 == a2)
      {
        uint64_t result = 0LL;
        goto LABEL_47;
      }
    }

uint64_t sub_10011BB1C(unsigned __int8 *a1, uint64_t a2, int *a3, uint8x8_t a4)
{
  uint64_t v4 = 101LL;
  if (a2 && a3)
  {
    if (*(void *)(a2 + 4) == 0x8000008000100000LL && *(_DWORD *)(a2 + 12) == -80438433) {
      return sub_10011B978(a1, *(_DWORD *)a2, a3);
    }
    *a3 = 0;
    for (unsigned __int8 i = 7; i > 5u; --i)
    {
      if (a1)
      {
        int v7 = 240;
        uint64_t v8 = a1;
        do
        {
          uint64_t v9 = *v8;
          if (!*v8) {
            break;
          }
          if (v8[1] == i)
          {
            int v12 = v9 - 1;
            if (i == 6) {
              int v13 = 2;
            }
            else {
              int v13 = 1;
            }
            *a3 = v13;
            if ((v12 & 0xF) != 0)
            {
              *a3 = 0;
              return 131LL;
            }

            else
            {
              if (!(_BYTE)v12) {
                break;
              }
              uint64_t v14 = v8 + 7;
              while (1)
              {
                LODWORD(v18) = *(_DWORD *)(v14 + 7);
                a4.i32[0] = *(_DWORD *)(v14 + 3);
                int16x8_t v15 = (int16x8_t)vmovl_u8(a4);
                *(int16x4_t *)v15.i8 = vrev64_s16(*(int16x4_t *)v15.i8);
                a4 = (uint8x8_t)vmovn_s16(v15);
                HIDWORD(v18) = a4.i32[0];
                if (v18 == *(void *)a2)
                {
                  HIBYTE(v19) = *(v14 - 5);
                  BYTE6(v19) = *(v14 - 4);
                  BYTE5(v19) = *(v14 - 3);
                  BYTE4(v19) = *(v14 - 2);
                  BYTE3(v19) = *(v14 - 1);
                  BYTE2(v19) = *v14;
                  BYTE1(v19) = v14[1];
                  LOBYTE(v19) = v14[2];
                  BOOL v16 = v19 == *(void *)(a2 + 8);
                }

                else
                {
                  BOOL v16 = 0;
                }

                if (v16) {
                  break;
                }
                v14 += 16;
                v12 -= 16;
                if (!(_BYTE)v12) {
                  goto LABEL_27;
                }
              }

              uint64_t v4 = 0LL;
              *a3 = 1;
            }

            return v4;
          }

          uint64_t v10 = v9 + 1;
          v8 += v10;
          BOOL v11 = __OFSUB__(v7, (_DWORD)v10);
          v7 -= v10;
        }

        while (!((v7 < 0) ^ v11 | (v7 == 0)));
      }

uint64_t sub_10011BCE4(unsigned __int8 *a1, int a2, _BYTE *a3, unsigned __int8 **a4)
{
  uint64_t v4 = 101LL;
  if (a3 && a4)
  {
    if (a1)
    {
      int v5 = 240;
      do
      {
        uint64_t v6 = *a1;
        if (!*a1) {
          break;
        }
        if (a1[1] == a2)
        {
          *a3 = v6 - 1;
          uint64_t v9 = a1 + 2;
          goto LABEL_13;
        }

        uint64_t v7 = v6 + 1;
        a1 += v7;
        BOOL v8 = __OFSUB__(v5, (_DWORD)v7);
        v5 -= v7;
      }

      while (!((v5 < 0) ^ v8 | (v5 == 0)));
    }

    uint64_t v9 = 0LL;
LABEL_13:
    *a4 = v9;
    if (v9) {
      return 0LL;
    }
    else {
      return 120LL;
    }
  }

  return v4;
}

uint64_t sub_10011BD54(void *a1, void *a2)
{
  if (!DWORD2(xmmword_1008F6FB8)) {
    return 103LL;
  }
  if (a2) {
    *a2 = off_1008F6D98;
  }
  uint64_t v2 = 0LL;
  off_1008F6D98 = a1;
  return v2;
}

uint64_t sub_10011BD90(uint64_t a1)
{
  if (sub_10012D514(a1)) {
    return sub_100128D24(45LL);
  }
  else {
    return 101LL;
  }
}

uint64_t sub_10011BE14(uint64_t (*a1)(void, void, void, void, void))
{
  if (qword_1008E2250) {
    sub_1001EE2A0();
  }
  if (!sub_10010F2D4())
  {
    byte_1008E2258 = 0;
    return 4831LL;
  }

  byte_1008E2258 = sub_1001853DC();
  if ((byte_1008E2258 & 1) == 0) {
    return 4831LL;
  }
  off_1008F6EC0 = a1;
  uint64_t v2 = sub_1001732EC(7u, 1, 8, 8u, &qword_1008E2250, (uint64_t)sub_100184DA0);
  if ((_DWORD)v2 || !qword_1008E2250)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Could not register the Classic SecurityManager : %!",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  v2);
      uint64_t v18 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100657F08();
      }
    }

    goto LABEL_16;
  }

  *(_WORD *)sub_10017AF44((unsigned int *)qword_1008E2250) = 65;
  *(_WORD *)(sub_10017AF44((unsigned int *)qword_1008E2250) + 2) = -1;
  uint64_t v2 = sub_100179804((uint64_t)sub_10011BF84, 7);
  if ((_DWORD)v2)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_ConnectMan_Register_FixedChannelInfo_callback returned %!",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  v2);
      uint64_t v10 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

uint64_t sub_10011BF84(uint64_t a1)
{
  uint64_t v2 = 0LL;
  uint64_t result = sub_10010EEE0(a1, &v2);
  if (!(_DWORD)result)
  {
    if (byte_1008E2258) {
      *(_BYTE *)(v2 + 304) = 1;
    }
  }

  return result;
}

uint64_t sub_10011BFC4()
{
  if (!byte_1008E2258) {
    return 4831LL;
  }
  uint64_t result = qword_1008E2250;
  if (qword_1008E2250)
  {
    sub_1001734D8(qword_1008E2250);
    uint64_t result = 0LL;
    qword_1008E2250 = 0LL;
  }

  return result;
}

uint64_t sub_10011C008(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"StartPairing was called", v2, v3, v4, v5, v6, v7, v8, v81);
    uint64_t v9 = (os_log_s *)sub_100086554(0x43u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v83 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if (!byte_1008E2258)
  {
    sub_1001EE134((uint64_t)"Controller does not support Secured Connections", v20, v21, v22, v23, v24, v25, v26, v81);
    uint64_t v27 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      return 117LL;
    }
LABEL_20:
    sub_100657858();
    return 117LL;
  }

  if (!sub_10012D514(a1))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Connection is invalid", v28, v29, v30, v31, v32, v33, v34, v81);
      uint64_t v35 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 414LL;
  }

  if (!*(_BYTE *)(a1 + 304))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Remote does not support BR/EDR SMP", v36, v37, v38, v39, v40, v41, v42, v81);
      uint64_t v43 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v44 = sub_1001EDDCC();
        *(_DWORD *)int buf = 136446210;
        uint64_t v83 = v44;
        _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    return 414LL;
  }

  if (!off_1008F6EC0)
  {
    sub_1001EE134((uint64_t)"Local device does not support BR/EDR SMP", v46, v47, v48, v49, v50, v51, v52, v81);
    uint64_t v53 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
      return 117LL;
    }
    goto LABEL_20;
  }

  uint64_t v10 = sub_1001D36EC();
  if ((_DWORD)v10) {
    return v10;
  }
  *(_WORD *)int buf = 1;
  if (byte_1008E2259) {
    uint8_t v11 = 0;
  }
  else {
    uint8_t v11 = 32;
  }
  buf[2] = 0;
  buf[3] = v11;
  LOWORD(v83) = 784;
  BYTE2(v83) = 3;
  if (sub_10012D514(a1))
  {
    if (*(_BYTE *)(a1 + 144))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"You cannot send this command when peripheral.", v12, v13, v14, v15, v16, v17, v18, v81);
        uint64_t v19 = (os_log_s *)sub_100086554(0x43u);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 4821LL;
    }

    uint64_t v62 = sub_100184F2C(a1);
    if (v62)
    {
      uint64_t v63 = (_BYTE *)v62;
      if (*(unsigned __int8 *)(v62 + 8) >= 0x11u)
      {
        if (sub_1000A86F0())
        {
          uint64_t v64 = sub_100185414();
          sub_1001EE134( (uint64_t)"Cannot ask for pairing, device is already in state %s.",  v65,  v66,  v67,  v68,  v69,  v70,  v71,  (uint64_t)v64);
          uint64_t v72 = (os_log_s *)sub_100086554(0x43u);
          if (os_log_type_enabled(v72, OS_LOG_TYPE_ERROR)) {
            sub_100657F08();
          }
        }

        return 4804LL;
      }

void sub_10011C448()
{
  byte_1008E2259 = 1;
}

void sub_10011C458()
{
  byte_1008E225A = 1;
}

void sub_10011C468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (char *)sub_100184F2C(a1);
  if ((_DWORD)a3 != 6)
  {
    sub_1001EE134((uint64_t)"Invalid Pairing Request size %d.", v16, v17, v18, v19, v20, v21, v22, a3);
    uint64_t v23 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      goto LABEL_14;
    }
LABEL_13:
    sub_100657858();
LABEL_14:
    char v15 = 8;
LABEL_22:
    sub_10011DC18((__int128 *)a1, v15, v6);
    return;
  }

  if (!off_1008F6EC0)
  {
    sub_1001EE134((uint64_t)"Local device does not support BR/EDR SMP", v24, v25, v26, v27, v28, v29, v30, v102);
    uint64_t v31 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
      goto LABEL_21;
    }
LABEL_20:
    sub_100657858();
LABEL_21:
    char v15 = 14;
    goto LABEL_22;
  }

  if (!byte_1008E2258)
  {
    sub_1001EE134((uint64_t)"Controller does not support Secured Connections", v32, v33, v34, v35, v36, v37, v38, v102);
    uint64_t v39 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }

  if (!sub_10012D514(a1))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Connection is invalid", v40, v41, v42, v43, v44, v45, v46, v102);
      uint64_t v47 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  *(_BYTE *)(a1 + 304) = 1;
  if (!*(_BYTE *)(a1 + 144))
  {
    sub_1001EE134((uint64_t)"You cannot send this command when peripheral.", v48, v49, v50, v51, v52, v53, v54, v102);
    uint64_t v55 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  if (v6)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Classic SMP pairing is already in progress", v7, v8, v9, v10, v11, v12, v13, v102);
      uint64_t v14 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    char v15 = 13;
    goto LABEL_22;
  }

  uint64_t v56 = sub_100185244(a1);
  if (!v56)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Could not allocate new device...", v94, v95, v96, v97, v98, v99, v100, v102);
      uint64_t v101 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v101, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v6 = 0LL;
    goto LABEL_14;
  }

  uint64_t v6 = v56;
  sub_1001852E0( (uint64_t)v56,  *(_BYTE *)a2,  *(_BYTE *)(a2 + 1),  *(_BYTE *)(a2 + 2),  *(unsigned __int8 *)(a2 + 3),  *(_BYTE *)(a2 + 4),  *(_BYTE *)(a2 + 5));
  unsigned int v57 = v6[82];
  if (v57 >= 8 || (unsigned int v58 = v6[83], v58 >= 8))
  {
    sub_1001EE134( (uint64_t)"Invalid key distribution parameters initiator:0x%x, responder:0xx",  v86,  v87,  v88,  v89,  v90,  v91,  v92,  v6[82]);
    uint64_t v93 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v93, OS_LOG_TYPE_ERROR)) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }

  v6[74] = v57 & 3;
  v6[75] = 0;
  v6[76] = v58 & 3;
  v6[77] = 0;
  sub_100185420((uint64_t)v6, 17);
  v6[72] = 0;
  if ((byte_1008E2259 & 1) == 0 && (v6[80] & 0x20) != 0)
  {
    v6[72] = 32;
    v6[593] = 1;
  }

  if (byte_1008E225A == 1 && !v6[593])
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Force replying with CT2=1", v59, v60, v61, v62, v63, v64, v65, v102);
      uint64_t v66 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v104 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    v6[72] |= 0x20u;
    v6[593] = 1;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"authReq=%x isSecuredConnectionControllerSupported=%d expectedKeys=%x requestedKeys=%x",  v67,  v68,  v69,  v70,  v71,  v72,  v73,  v6[72]);
    uint64_t v74 = (os_log_s *)sub_100086554(0x43u);
    if (os_log_type_enabled(v74, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v75 = sub_1001EDDCC();
      *(_DWORD *)int buf = 136446210;
      uint64_t v104 = v75;
      _os_log_impl((void *)&_mh_execute_header, v74, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  uint64_t v76 = sub_10011D7B0(a1, v6[72], v6[74], v6[76]);
  if ((_DWORD)v76)
  {
    uint64_t v77 = v76;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"smpSendPairingResponse failed with error %!", v78, v79, v80, v81, v82, v83, v84, v77);
      uint64_t v85 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v85, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    goto LABEL_14;
  }

  if ((v6[76] & 2) != 0)
  {
    sub_10011D9AC((uint64_t)v6);
    sub_10011DB24((uint64_t)v6);
    v6[77] |= 2u;
    sub_100185420((uint64_t)v6, 67);
  }

  if ((v6[74] & 2) == 0)
  {
    sub_100185420((uint64_t)v6, 65);
    sub_100184BB0(v6, 0LL, 1);
  }

void sub_10011C9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100184F2C(a1);
  if (!off_1008F6EC0)
  {
    sub_1001EE134((uint64_t)"Local device does not support BR/EDR SMP", v15, v16, v17, v18, v19, v20, v21, v90);
    uint64_t v22 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }

  if ((_DWORD)a3 != 6)
  {
    sub_1001EE134((uint64_t)"Invalid Pairing Request size %d.", v23, v24, v25, v26, v27, v28, v29, a3);
    uint64_t v30 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }

  if (!byte_1008E2258)
  {
    sub_1001EE134((uint64_t)"Controller does not support Secured Connections", v32, v33, v34, v35, v36, v37, v38, v90);
    uint64_t v39 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }

  if (sub_10012D514(a1))
  {
    *(_BYTE *)(a1 + 304) = 1;
    if (*(_BYTE *)(a1 + 144))
    {
      sub_1001EE134( (uint64_t)"This command should only be received if we are central.",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v90);
      uint64_t v14 = (os_log_s *)sub_100086554(0x43u);
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }

    if (v6)
    {
      if (sub_10018550C(v6, 17))
      {
        sub_1001852E0( v6,  *(_BYTE *)a2,  *(_BYTE *)(a2 + 1),  *(_BYTE *)(a2 + 2),  *(unsigned __int8 *)(a2 + 3),  *(_BYTE *)(a2 + 4),  *(_BYTE *)(a2 + 5));
        sub_100185340((uint64_t *)v6);
        if ((*(_BYTE *)(v6 + 80) & 0xDF) != 0)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"Invalid authentication requirements 0x%x.",  v48,  v49,  v50,  v51,  v52,  v53,  v54,  *(unsigned __int8 *)(v6 + 80));
            uint64_t v55 = (os_log_s *)sub_100086554(0x43u);
            if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }
        }

        unsigned int v56 = *(unsigned __int8 *)(v6 + 82);
        if (v56 <= 7)
        {
          unsigned int v57 = *(unsigned __int8 *)(v6 + 83);
          if (v57 < 8)
          {
            *(_BYTE *)(v6 + 76) = v56 & 3;
            *(_BYTE *)(v6 + 75) = 0;
            *(_BYTE *)(v6 + 74) = v57 & 3;
            *(_BYTE *)(v6 + 77) = 0;
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"We got those keys : requested(aka initiator)=0x%x expected(aka responder)=0x%x",  v58,  v59,  v60,  v61,  v62,  v63,  v64,  *(unsigned __int8 *)(v6 + 76));
              uint64_t v65 = (os_log_s *)sub_100086554(0x43u);
              if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)int buf = 136446210;
                uint64_t v92 = sub_1001EDDCC();
                _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }

            if ((*(_BYTE *)(v6 + 80) & 0x20) != 0 && (*(_BYTE *)(v6 + 72) & 0x20) != 0) {
              *(_BYTE *)(v6 + 593) = 1;
            }
            sub_100185420(v6, 18);
            if ((*(_BYTE *)(v6 + 74) & 2) == 0)
            {
              sub_100185420(v6, 67);
              if ((*(_BYTE *)(v6 + 76) & 2) != 0)
              {
                sub_100185420(v6, 67);
                sub_10011D9AC(v6);
                sub_10011DB24(v6);
                *(_BYTE *)(v6 + 77) |= 2u;
              }

              else
              {
                sub_100185420(v6, 65);
              }

              sub_100184BB0((char *)v6, 0LL, 1);
            }

            return;
          }
        }

        if (!sub_1000A86F0()
          || (sub_1001EE134( (uint64_t)"Invalid key distribution parameters initiator:0x%x, responder:0xx",  v82,  v83,  v84,  v85,  v86,  v87,  v88,  *(unsigned __int8 *)(v6 + 82)),  uint64_t v89 = (os_log_s *)sub_100086554(0x43u),  !os_log_type_enabled(v89, OS_LOG_TYPE_ERROR)))
        {
LABEL_19:
          char v31 = 14;
          goto LABEL_20;
        }

void sub_10011CE48(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)sub_100184F2C(a1);
  if (v5)
  {
    uint64_t v6 = (char *)v5;
    sub_100185340(v5);
    if ((_DWORD)a3 == 1)
    {
      unsigned int v7 = *a2;
    }

    else
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Invalid Pairing Failed size %d", v16, v17, v18, v19, v20, v21, v22, a3);
        uint64_t v23 = (os_log_s *)sub_100086554(0x43u);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      unsigned int v7 = 8;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Peer sent Pairing Failed with reason=%d", v24, v25, v26, v27, v28, v29, v30, v7);
      char v31 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    uint64_t v32 = sub_1001853E8(v7);
    sub_100184BB0(v6, v32, 1);
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Could not find associated pairing data.", v8, v9, v10, v11, v12, v13, v14, v33);
    uint64_t v15 = (os_log_s *)sub_100086554(0x43u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

__n128 sub_10011CF80(uint64_t a1, __n128 *a2, uint64_t a3)
{
  if (!off_1008F6EC0)
  {
    sub_1001EE134((uint64_t)"Local device does not support BR/EDR SMP", v9, v10, v11, v12, v13, v14, v15, v74);
    uint64_t v16 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
LABEL_19:
    sub_100657858();
LABEL_20:
    uint64_t v7 = 0LL;
LABEL_21:
    sub_10011DC18((__int128 *)a1, 8, (char *)v7);
    return result;
  }

  if ((_DWORD)a3 != 16)
  {
    sub_1001EE134((uint64_t)"Invalid Identity Information size %d", v17, v18, v19, v20, v21, v22, v23, a3);
    uint64_t v24 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }

  uint64_t v6 = sub_100184F2C(a1);
  if (!v6)
  {
    sub_1001EE134((uint64_t)"Could not find associated pairing data.", v25, v26, v27, v28, v29, v30, v31, v74);
    uint64_t v32 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }

  uint64_t v7 = v6;
  if (!byte_1008E2258)
  {
    sub_1001EE134((uint64_t)"Controller does not support Secured Connections", v34, v35, v36, v37, v38, v39, v40, v74);
    uint64_t v41 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
      goto LABEL_21;
    }
LABEL_25:
    sub_100657858();
    goto LABEL_21;
  }

  if (!sub_10012D514(a1))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Connection is invalid", v42, v43, v44, v45, v46, v47, v48, v74);
      uint64_t v49 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
        goto LABEL_28;
      }
    }

    return result;
  }

  if (!*(_BYTE *)(a1 + 304))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Remote does not support BR/EDR SMP", v50, v51, v52, v53, v54, v55, v56, v74);
      unsigned int v57 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v76 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    goto LABEL_21;
  }

  sub_100185340((uint64_t *)v7);
  if (*(_BYTE *)(v7 + 75)) {
    goto LABEL_34;
  }
  if (!*(_BYTE *)(a1 + 144))
  {
    char v8 = 66;
    goto LABEL_33;
  }

  if (!sub_10018550C(v7, 67))
  {
    sub_1001EE134((uint64_t)"Central is sending keys before we are ...", v66, v67, v68, v69, v70, v71, v72, v74);
    uint64_t v73 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v73, OS_LOG_TYPE_ERROR)) {
      goto LABEL_21;
    }
    goto LABEL_25;
  }

  char v8 = 64;
LABEL_33:
  sub_100185420(v7, v8);
LABEL_34:
  if ((*(_BYTE *)(v7 + 74) & 2) != 0)
  {
    __n128 result = *a2;
    *(__n128 *)(v7 + 562) = *a2;
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"We were not expecting IRK...", v58, v59, v60, v61, v62, v63, v64, v74);
    uint64_t v65 = (os_log_s *)sub_100086554(0x43u);
    if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)) {
LABEL_28:
    }
      sub_100657858();
  }

  return result;
}

void sub_10011D2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a3 != 7)
  {
    sub_1001EE134((uint64_t)"Invalid Identity Address Information size %d", v17, v18, v19, v20, v21, v22, v23, a3);
    uint64_t v24 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      goto LABEL_24;
    }
LABEL_23:
    sub_100657858();
LABEL_24:
    uint64_t v6 = 0LL;
    goto LABEL_25;
  }

  uint64_t v5 = sub_100184F2C(a1);
  if (!v5)
  {
    sub_1001EE134((uint64_t)"Could not find associated pairing data.", v25, v26, v27, v28, v29, v30, v31, v99);
    uint64_t v32 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }

  uint64_t v6 = v5;
  if (!off_1008F6EC0)
  {
    sub_1001EE134((uint64_t)"Local device does not support BR/EDR SMP", v33, v34, v35, v36, v37, v38, v39, v99);
    uint64_t v40 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
      goto LABEL_25;
    }
LABEL_49:
    sub_100657858();
    goto LABEL_25;
  }

  if (!byte_1008E2258)
  {
    sub_1001EE134((uint64_t)"Controller does not support Secured Connections", v41, v42, v43, v44, v45, v46, v47, v99);
    uint64_t v48 = (os_log_s *)sub_100086554(0x43u);
    if (!os_log_type_enabled(v48, OS_LOG_TYPE_ERROR)) {
      goto LABEL_25;
    }
    goto LABEL_49;
  }

  if (!sub_10012D514(a1))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Connection is invalid", v49, v50, v51, v52, v53, v54, v55, v99);
      uint64_t v56 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  if (!*(_BYTE *)(a1 + 304))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Remote does not support BR/EDR SMP", v57, v58, v59, v60, v61, v62, v63, v99);
      uint64_t v64 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        *(void *)&uint8_t buf[4] = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }

    goto LABEL_25;
  }

  sub_100185340((uint64_t *)v6);
  if (!*(_BYTE *)(v6 + 75))
  {
    if (*(_BYTE *)(a1 + 144))
    {
      if (!sub_10018550C(v6, 64))
      {
LABEL_47:
        sub_1001EE134((uint64_t)"We got an address without IRK.", v73, v74, v75, v76, v77, v78, v79, v99);
        uint64_t v80 = (os_log_s *)sub_100086554(0x43u);
        if (!os_log_type_enabled(v80, OS_LOG_TYPE_ERROR)) {
          goto LABEL_25;
        }
        goto LABEL_49;
      }

      if (*(_BYTE *)(a1 + 144)) {
        goto LABEL_8;
      }
    }

    if (sub_10018550C(v6, 66)) {
      goto LABEL_8;
    }
    goto LABEL_47;
  }

uint64_t sub_10011D7B0(uint64_t a1, char a2, char a3, char a4)
{
  __int16 v42 = 2;
  char v43 = 0;
  char v44 = a2;
  char v45 = 16;
  char v46 = a3;
  char v47 = a4;
  if (sub_10012D514(a1))
  {
    if (*(_BYTE *)(a1 + 144))
    {
      uint64_t v5 = sub_100184F2C(a1);
      if (v5)
      {
        uint64_t v6 = (__int128 **)v5;
        if (sub_10018550C(v5, 17))
        {
          uint64_t v7 = sub_100184F74(*v6, (char *)&v42, 7uLL, 1);
          if ((_DWORD)v7)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"SMP_SendPacket failed with error %!", v8, v9, v10, v11, v12, v13, v14, v7);
              BOOL v15 = (os_log_s *)sub_100086554(0x43u);
              if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
                sub_100657858();
              }
            }

            sub_100184BB0((char *)v6, v7, 1);
          }

          else
          {
            sub_100185420((uint64_t)v6, 18);
          }

          return v7;
        }

        if (sub_1000A86F0())
        {
          sub_100185414();
          goto LABEL_22;
        }
      }

      else if ((sub_1000A86F0() & 1) != 0)
      {
LABEL_22:
        sub_1001EE134((uint64_t)"Invalid pairing state for handle 0x%x : %s", v32, v33, v34, v35, v36, v37, v38, a1);
        uint64_t v39 = (os_log_s *)sub_100086554(0x43u);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      return 4823LL;
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"You cannot send smpSendPairingResponse command when peripheral.",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  v41);
      uint64_t v31 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 4822LL;
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"This command is only available to Classic devices.",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v41);
      uint64_t v23 = (os_log_s *)sub_100086554(0x43u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 4820LL;
  }

void sub_10011D9AC(uint64_t a1)
{
  HIBYTE(vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = 8;
  char v11 = *(_BYTE *)sub_100184B70();
  char v12 = *((_BYTE *)sub_100184B70() + 1);
  char v13 = *((_BYTE *)sub_100184B70() + 2);
  char v14 = *((_BYTE *)sub_100184B70() + 3);
  char v15 = *((_BYTE *)sub_100184B70() + 4);
  char v16 = *((_BYTE *)sub_100184B70() + 5);
  char v17 = *((_BYTE *)sub_100184B70() + 6);
  char v18 = *((_BYTE *)sub_100184B70() + 7);
  char v19 = *((_BYTE *)sub_100184B70() + 8);
  char v20 = *((_BYTE *)sub_100184B70() + 9);
  char v21 = *((_BYTE *)sub_100184B70() + 10);
  char v22 = *((_BYTE *)sub_100184B70() + 11);
  char v23 = *((_BYTE *)sub_100184B70() + 12);
  char v24 = *((_BYTE *)sub_100184B70() + 13);
  char v25 = *((_BYTE *)sub_100184B70() + 14);
  char v26 = *((_BYTE *)sub_100184B70() + 15);
  if (*(_BYTE *)(a1 + 9))
  {
    sub_100184F74(*(__int128 **)a1, (char *)&v10 + 7, 0x11uLL, 1);
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"This link is not encrypted, cannot send IRK.", v2, v3, v4, v5, v6, v7, v8, v10);
    uint64_t v9 = (os_log_s *)sub_100086554(0x43u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_10011DB24(uint64_t a1)
{
  *(_DWORD *)((char *)v13 + 3) = 0;
  v13[0] = 0;
  sub_1001BDFE8((uint64_t)v13);
  v14[0] = 9;
  v14[1] = v13[0];
  v2.i32[0] = *(_DWORD *)((char *)v13 + 3);
  int16x8_t v3 = (int16x8_t)vmovl_u8(v2);
  *(int16x4_t *)v3.i8 = vrev64_s16(*(int16x4_t *)v3.i8);
  unsigned __int32 v15 = vmovn_s16(v3).u32[0];
  char v16 = BYTE2(v13[0]);
  char v17 = BYTE1(v13[0]);
  if (*(_BYTE *)(a1 + 9))
  {
    sub_100184F74(*(__int128 **)a1, v14, 8uLL, 1);
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"This link is not encrypted, cannot send address.", v4, v5, v6, v7, v8, v9, v10, v12);
    char v11 = (os_log_s *)sub_100086554(0x43u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_10011DC18(__int128 *a1, char a2, char *a3)
{
  v6[0] = 5;
  v6[1] = a2;
  sub_100184F74(a1, v6, 2uLL, 0);
  if (a3)
  {
    uint64_t v5 = sub_1001853E8(a2);
    sub_100184BB0(a3, v5, 1);
  }

void sub_10011DC7C( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Read max data length failed %!", v9, v10, v11, v12, v13, v14, v15, a1);
      char v16 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  else
  {
    int v17 = a5;
    unsigned int v18 = a4;
    int v19 = a3;
    sub_1001214B4(199, (uint64_t)sub_10011DD94, a3, a4, a5, a6, a7, a8, 0LL);
    sub_1001AF8F0(a2, v19, v18, v17);
  }

  sub_10011DE9C(0LL, (uint64_t)"initCmdLeReadMaxDataLengthCB");
}

void sub_10011DD94(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"_SetDefaultPhyCB status %!", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      int v19 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  if ((_DWORD)a1 && sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Set default Phy failed with %!", v10, v11, v12, v13, v14, v15, v16, a1);
    int v17 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

void sub_10011DE9C(uint64_t a1, uint64_t a2)
{
  if (dword_1008F6D88 > 5 || ((1 << dword_1008F6D88) & 0x32) == 0)
  {
    sub_1001EE134((uint64_t)"%s orphaned", v21, v22, v23, v24, v25, v26, v27, a2);
    uint64_t v28 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_16:
    sub_100657858();
    return;
  }

  if (!qword_1008E2270)
  {
    sub_1001EE134((uint64_t)"%s orphaned", v13, v14, v15, v16, v17, v18, v19, a2);
    char v20 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_16;
  }

  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"%s failed: %!", v5, v6, v7, v8, v9, v10, v11, a2);
      uint64_t v12 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, a1);
  }

  else
  {
    sub_1001EDA8C(qword_1008E2270);
  }

uint64_t sub_10011DFF0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!BYTE9(xmmword_1008F6D58)) {
    return 0LL;
  }
  uint64_t v8 = sub_1001214B4(167, (uint64_t)sub_10011E07C, a3, a4, a5, a6, a7, a8, v18);
  if ((_DWORD)v8)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_LE_ReadAdvertisingChannelTxPower", v9, v10, v11, v12, v13, v14, v15, v19);
      uint64_t v16 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  return v8;
}

void sub_10011E07C(uint64_t a1, uint64_t a2)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Read LE Advertising TX power failed %!", v3, v4, v5, v6, v7, v8, v9, a1);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  else if (sub_10019C5A4())
  {
    int v12 = 0;
    do
      sub_1001BEB28(a2, v12++);
    while (sub_10019C5A4() > v12);
  }

uint64_t sub_10011E114(uint64_t a1)
{
  if (DWORD2(xmmword_1008F6FB8)) {
    return 140LL;
  }
  if (a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCIAPI_Init: configuration parameter is deprecated", v3, v4, v5, v6, v7, v8, v9, v11);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EDBE4(a1, 46LL);
  }

  qword_1008F6D80 = sub_1001EDBA0(0x2Eu);
  if (!qword_1008F6D80)
  {
    sub_1001EE2A0();
    if (!qword_1008F6D80) {
      return 127LL;
    }
  }

  dword_1008F6D88 = 0;
  byte_1008F6D8C = 0;
  qword_1008F6D90 = (uint64_t)off_100884470;
  off_1008F6D98 = (uint64_t (*)(void, void, void, void, void, void, void, void))nullsub_74;
  off_1008F6DA0 = (uint64_t (*)(void, void, void, void, void, void, void, void, _DWORD))nullsub_74;
  unk_1008F6DB9 = 0u;
  *(__int128 *)((char *)&xmmword_1008F6DC8 + 1) = 0u;
  xmmword_1008F6DD8 = 0u;
  byte_1008F6DB8 = 7;
  xmmword_1008F6DA8 = xmmword_1006BCC10;
  off_1008E2268 = 0LL;
  qword_1008E2270 = 0LL;
  off_1008E2278 = sub_1000AFE20;
  off_1008F6DE8 = 0LL;
  off_1008F6DF0 = 0LL;
  uint64_t result = sub_10012D414();
  if (!(_DWORD)result)
  {
    uint64_t result = sub_1000B6578();
    if (!(_DWORD)result)
    {
      uint64_t result = sub_1001334F8();
      if (!(_DWORD)result)
      {
        uint64_t result = sub_10012CD7C();
        if (!(_DWORD)result)
        {
          uint64_t result = sub_1001389EC();
          if (!(_DWORD)result) {
            DWORD2(xmmword_1008F6FB8) = 1;
          }
        }
      }
    }
  }

  return result;
}

uint64_t sub_10011E290(uint64_t a1)
{
  uint64_t v4 = a1;
  if (!DWORD2(xmmword_1008F6FB8)) {
    return 103LL;
  }
  dword_1008F6D88 = 1;
  qword_1008E2270 = (uint64_t)off_100884490;
  sub_1001ED90C(off_100884490);
  if (!a1) {
    return sub_10011E32C();
  }
  v3[1] = &v4;
  v3[0] = (const void *)8;
  return sub_1001EE6E8((uint64_t)sub_10011E39C, v3, 1, 0LL);
}

uint64_t sub_10011E32C()
{
  if (!DWORD2(xmmword_1008F6FB8)) {
    return 103LL;
  }
  uint64_t result = 109LL;
  switch(dword_1008F6D88)
  {
    case 0:
      sub_1001EE2A0();
      return 103LL;
    case 1:
      return result;
    case 2:
      uint64_t result = 0LL;
      break;
    case 3:
      uint64_t result = 108LL;
      break;
    default:
      sub_1001EE2A0();
      uint64_t result = 637LL;
      break;
  }

  return result;
}

uint64_t sub_10011E39C(uint64_t a1)
{
  else {
    return (**(uint64_t (***)(void))(a1 + 8))();
  }
}

uint64_t sub_10011E3EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (dword_1008F6D88 != 4) {
    sub_1001EE2A0();
  }
  if (qword_1008E2270) {
    sub_1001EE2A0();
  }
  if (off_1008E2268) {
    sub_1001EE2A0();
  }
  sub_100136E38();
  sub_10012CDE0();
  sub_100133DC0();
  dword_1008F6D88 = 5;
  qword_1008E2270 = *(void *)(v1 + 8);
  off_1008E2268 = *(_UNKNOWN **)v1;
  return sub_1001ED90C((void *)qword_1008E2270);
}

void sub_10011E468()
{
  v52[0] = 0LL;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HCIIfc_DeviceHasBeenReset", v0, v1, v2, v3, v4, v5, v6, v51);
    uint64_t v7 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  if (DWORD2(xmmword_1008F6FB8))
  {
    switch(dword_1008F6D88)
    {
      case 0:
      case 3:
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Device is not initialized, cannot restore device context",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v51);
          uint64_t v15 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            goto LABEL_23;
          }
        }

        break;
      case 1:
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Device reset during initialization - terminating failed initialization",  v34,  v35,  v36,  v37,  v38,  v39,  v40,  v51);
          uint64_t v41 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        __int16 v42 = (void (**)(uint64_t))qword_1008E2270;
        goto LABEL_25;
      case 2:
      case 6:
        v53[0] = sub_10011E6C8;
        v53[1] = off_1008845B0;
        v52[1] = v53;
        LOWORD(v52[0]) = 16;
        uint64_t v24 = sub_1001EE6E8((uint64_t)sub_10011E3EC, v52, 10, 0LL);
        if ((_DWORD)v24)
        {
          uint64_t v25 = v24;
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"OI_Dispatch_RegisterFunc failed %!", v26, v27, v28, v29, v30, v31, v32, v25);
            uint64_t v33 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }
        }

        else
        {
          dword_1008F6D88 = 4;
        }

        break;
      case 4:
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Device reset process is already pending", v43, v44, v45, v46, v47, v48, v49, v51);
          uint64_t v50 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
            goto LABEL_23;
          }
        }

        break;
      case 5:
        sub_10013928C(632LL);
        __int16 v42 = (void (**)(uint64_t))qword_1008E2270;
        if (qword_1008E2270) {
LABEL_25:
        }
          sub_1001EDAF0(v42, 632LL);
        break;
      default:
        sub_1001EE2A0();
        break;
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"HCI is not initialized, cannot restore device context",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v51);
    uint64_t v23 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
LABEL_23:
    }
      sub_100657858();
  }

void sub_10011E6C8(int a1)
{
  if (a1)
  {
    v22[0] = 0LL;
    int v1 = dword_1008E22B8++;
    if (v1 >= 3)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Reset retries exhausted", v3, v4, v5, v6, v7, v8, v9, v21);
        uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    else
    {
      v23[0] = sub_10011E6C8;
      v23[1] = off_100884560;
      v22[1] = v23;
      LOWORD(v22[0]) = 16;
      uint64_t v2 = sub_1001EE6E8((uint64_t)sub_10011E3EC, v22, 10, 0LL);
      if (!(_DWORD)v2)
      {
        dword_1008F6D88 = 4;
        return;
      }

      uint64_t v11 = v2;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_Dispatch_RegisterFunc failed %!", v12, v13, v14, v15, v16, v17, v18, v11);
        uint64_t v19 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    sub_1000AFE20(631LL);
    sub_10011E7EC(v20);
  }

  else
  {
    dword_1008E22B8 = 0;
  }

void sub_10011E7EC(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HCIIfc_DataErrorDetected %!", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_10011E854(uint64_t a1)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HCIIfc_FatalErrorDetected %!", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  if (off_1008E2278) {
    return off_1008E2278(a1);
  }
  sub_1000AFE20(a1);
  return sub_10011E8D8(v11, v12);
}

uint64_t sub_10011E8D8(void *a1, void *a2)
{
  if (!DWORD2(xmmword_1008F6FB8)) {
    return 103LL;
  }
  if (!a1)
  {
    sub_1001EE2A0();
    return 101LL;
  }

  if (!a1[1])
  {
    sub_1001EE2A0();
    if (!a1[1]) {
      return 101LL;
    }
  }

  if (!a1[2])
  {
    sub_1001EE2A0();
    if (!a1[2]) {
      return 101LL;
    }
  }

  if (!a1[3])
  {
    sub_1001EE2A0();
    if (!a1[3]) {
      return 101LL;
    }
  }

  if (a2) {
    *a2 = qword_1008F6D90;
  }
  uint64_t result = 0LL;
  qword_1008F6D90 = (uint64_t)a1;
  return result;
}

uint64_t sub_10011E974( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100128D24(0xEu, a2, a3, a4, a5, a6, a7, a8, a1);
}

uint64_t sub_10011E99C( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(56, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011E9D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(64, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011EA04( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1001214B4(65, a1, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_10011EA10( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(69, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011EA40( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(154, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011EA6C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(7, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011EA98( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(105, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011EAC4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(155, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011EAF0(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 101LL;
  }
  uint64_t v10 = 0LL;
  uint64_t result = sub_10010EEE0(a2, &v10);
  if (!(_DWORD)result) {
    return sub_1001214B4(156, a1, v4, v5, v6, v7, v8, v9, v10);
  }
  return result;
}

uint64_t sub_10011EB54(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 101LL;
  }
  uint64_t v10 = 0LL;
  uint64_t result = sub_10010EEE0(a2, &v10);
  if (!(_DWORD)result) {
    return sub_1001214B4(157, a1, v4, v5, v6, v7, v8, v9, v10);
  }
  return result;
}

uint64_t sub_10011EBB0( unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(272, a4, a3, a4, a5, a6, a7, a8, a1);
}

uint64_t sub_10011EBE4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_1008F6D88)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCI_Reset(), HCI already initialized", v9, a3, a4, a5, a6, a7, a8, v12);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_10065BB70();
      }
    }
  }

  return sub_1001214B4(55, a1, a3, a4, a5, a6, a7, a8, v12);
}

uint64_t sub_10011EC58( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(115, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011EC88( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(134, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011ECB8( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(135, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011ECE8( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(136, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011ED18( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(138, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011ED50( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(90, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011ED80( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(189, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011EDB0( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(190, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011EDEC( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(201, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011EE28( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001214B4(202, a1, a3, a4, a5, a6, a7, a8, a2);
}

uint64_t sub_10011EE68(char a1, __int16 a2, uint64_t a3, unsigned int a4)
{
  qword_1008E2280 = a3;
  qword_1008E2288 = 0LL;
  word_1008E229C = a4;
  byte_1008E2290 = a1;
  word_1008E2298 = a2;
  if ((sub_10010C704() & 1) != 0) {
    return 0LL;
  }
  uint64_t v4 = sub_1000FC2F0();
  if (qword_1008E2280)
  {
    qword_1008E2280 = 0LL;
    if (qword_1008E2288)
    {
      sub_1000B1838((void *)qword_1008E2288);
      qword_1008E2288 = 0LL;
    }
  }

  return v4;
}

uint64_t sub_10011EF18()
{
  if ((sub_10010C704() & 1) != 0) {
    return 0LL;
  }
  else {
    return sub_1000FC2F0();
  }
}

void sub_10011EF64(char *a1)
{
  if (qword_1008E2280)
  {
    sub_1001EFCEC(a1, qword_1008E2280, (unsigned __int16)word_1008E229C);
    sub_1000BA1F0();
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HciIfc_CopyPayload: OI_HCIIfc_Send_Req not in progress", v1, v2, v3, v4, v5, v6, v7, v9);
    uint64_t v8 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

uint64_t sub_10011EFFC()
{
  if (!qword_1008E2280)
  {
    sub_1001EE134( (uint64_t)"OI_HciIfc_GetPacket: OI_HCIIfc_Send_Req not in progress",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v24);
    uint64_t v14 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
LABEL_10:
    sub_100657858();
    return 0LL;
  }

  uint64_t v0 = sub_1000B17F4((unsigned __int16)word_1008E229C + 5LL);
  if (!v0)
  {
    sub_1001EE134( (uint64_t)"OI_HciIfc_GetPacket: could not allocate packet buffer",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  v24);
    uint64_t v22 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
    goto LABEL_10;
  }

  uint64_t v1 = v0;
  qword_1008E2288 = (uint64_t)v0;
  int v2 = byte_1008E2290;
  _BYTE *v0 = byte_1008E2290;
  char v3 = HIBYTE(word_1008E2298);
  v1[1] = word_1008E2298;
  v1[2] = v3;
  unsigned int v4 = (unsigned __int16)word_1008E229C;
  char v5 = word_1008E229C;
  if (v2 == 2)
  {
    v1[4] = HIBYTE(word_1008E229C);
    uint64_t v6 = 5LL;
  }

  else
  {
    uint64_t v6 = 4LL;
  }

  v1[3] = v5;
  if (v4) {
    sub_1001EFCEC(&v1[v6], qword_1008E2280, v4);
  }
  sub_1000BA1F0();
  return qword_1008E2288;
}

uint64_t sub_10011F14C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1001214B4(160, a1, a3, a4, a5, a6, a7, a8, a9);
}

void sub_10011F158()
{
  byte_1008E2260 = 1;
}

uint64_t sub_10011F168()
{
  return byte_1008E2260;
}

uint64_t sub_10011F174(uint64_t result)
{
  byte_1008E229E = result;
  return result;
}

uint64_t sub_10011F188()
{
  return 0xBF3FF3F86FA7FLL;
}

uint64_t sub_10011F19C(uint64_t result)
{
  int v1 = *(_DWORD *)result;
  word_1008E22A3 = *(_WORD *)(result + 4);
  dword_1008E229F = v1;
  return result;
}

uint64_t sub_10011F1B8(uint64_t result)
{
  if ((_DWORD)result) {
    int v1 = 3;
  }
  else {
    int v1 = 2;
  }
  dword_1008F6D88 = v1;
  qword_1008E2270 = 0LL;
  return result;
}

void sub_10011F1D8()
{
  if (dword_1008E229F | (unsigned __int16)word_1008E22A3)
  {
    if (dword_1008F6D88 == 1 || (sub_1001EE2A0(), dword_1008F6D88 == 1))
    {
      byte_1008F6D8C = 1;
      uint64_t v0 = sub_100195D70((uint64_t)&dword_1008E229F);
      byte_1008F6D8C = 0;
      if ((_DWORD)v0)
      {
        uint64_t v1 = v0;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"BT_VSC_Write_Bd_Addr failed: %!", v2, v3, v4, v5, v6, v7, v8, v1);
          uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v1);
      }
    }
  }

  else
  {
    sub_10011DE9C(0LL, (uint64_t)"initCmdWriteBdAddrCB");
  }

void sub_10011F2D4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = dword_1008F6D88;
  if (dword_1008F6D88 > 5 || ((1 << dword_1008F6D88) & 0x32) == 0)
  {
    sub_1001EE2A0();
    unsigned int v8 = dword_1008F6D88;
  }

  BOOL v10 = v8 > 5;
  int v11 = (1 << v8) & 0x32;
  if (v10 || v11 == 0)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"initCmdReset, orphaned", v23, v24, v25, v26, v27, v28, v29, v31);
      uint64_t v30 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else if (*(_BYTE *)(qword_1008F6D80 + 10))
  {
    sub_1001EDA8C(qword_1008E2270);
  }

  else
  {
    byte_1008F6D8C = 1;
    uint64_t v13 = sub_1001214B4(55, (uint64_t)sub_1001206BC, a3, a4, a5, a6, a7, a8, v31);
    byte_1008F6D8C = 0;
    if ((_DWORD)v13)
    {
      uint64_t v14 = v13;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_Reset failed: %!", v15, v16, v17, v18, v19, v20, v21, v14);
        uint64_t v22 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v14);
    }
  }

void sub_10011F428( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_1008F6D88 == 1 || (sub_1001EE2A0(), dword_1008F6D88 == 1))
  {
    byte_1008F6D8C = 1;
    uint64_t v8 = sub_1001214B4(143, (uint64_t)sub_100120750, a3, a4, a5, a6, a7, a8, v18);
    byte_1008F6D8C = 0;
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_HCICMD_ReadLocalVersionInformation failed: %!",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v9);
        uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
    }
  }

void sub_10011F4E4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_1008F6D88 == 1 || (sub_1001EE2A0(), dword_1008F6D88 == 1))
  {
    byte_1008F6D8C = 1;
    int v8 = sub_1001214B4(144, (uint64_t)sub_100120818, a3, a4, a5, a6, a7, a8, v9);
    byte_1008F6D8C = 0;
    if (v8) {
      sub_1001EDA8C(qword_1008E2270);
    }
  }

void sub_10011F554( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_1008F6D88 == 1 || (sub_1001EE2A0(), dword_1008F6D88 == 1))
  {
    byte_1008F6D8C = 1;
    uint64_t v8 = sub_1001214B4(149, (uint64_t)sub_100120828, a3, a4, a5, a6, a7, a8, v26);
    byte_1008F6D8C = 0;
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if ((_DWORD)v8 == 628)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"OI_HCICMD_ReadBDADDR failed: %!, ignoring error",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  628LL);
          uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        sub_1001EDA8C(qword_1008E2270);
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_HCICMD_ReadBDADDR failed: %!", v18, v19, v20, v21, v22, v23, v24, v9);
          uint64_t v25 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
      }
    }
  }

void sub_10011F668( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_1008F6D88 == 1 || (sub_1001EE2A0(), dword_1008F6D88 == 1))
  {
    byte_1008F6D8C = 1;
    uint64_t v8 = sub_1001214B4(145, (uint64_t)sub_1001208CC, a3, a4, a5, a6, a7, a8, v18);
    byte_1008F6D8C = 0;
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_ReadLocalSupportedFeatures failed: %!", v10, v11, v12, v13, v14, v15, v16, v9);
        uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
    }
  }

void sub_10011F724( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_1008F6D88 == 1 || (sub_1001EE2A0(), dword_1008F6D88 == 1))
  {
    byte_1008F6D8C = 1;
    uint64_t v8 = sub_1001214B4(146, (uint64_t)sub_1001209A0, a3, a4, a5, a6, a7, a8, 2LL);
    byte_1008F6D8C = 0;
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_ReadLocalExtendedFeatures failed: %!", v10, v11, v12, v13, v14, v15, v16, v9);
        uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
    }
  }

void sub_10011F7E8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (BYTE9(xmmword_1008F6D58))
  {
    uint64_t v8 = sub_1001214B4(164, (uint64_t)sub_100120B00, a3, a4, a5, a6, a7, a8, v18);
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_LE_ReadLocalSupportedFeatures", v10, v11, v12, v13, v14, v15, v16, v19);
        uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
    }
  }

  else
  {
    sub_1001EDA8C(qword_1008E2270);
  }

void sub_10011F890( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((byte_1008F6D20 & 0xFE) == 4)
  {
    uint64_t v8 = sub_1001214B4(54, (uint64_t)sub_100120C34, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_1006BCC29);
    if (!(_DWORD)v8) {
      return;
    }
    uint64_t v9 = v8;
    sub_1001EE134((uint64_t)"OI_HCICMD_SetEventMask returned %!", v10, v11, v12, v13, v14, v15, v16, v27);
    uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
LABEL_10:
    sub_10065A878();
LABEL_11:
    sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
    return;
  }

  if (byte_1008F6D20 < 6u)
  {
    sub_1001EDA8C(qword_1008E2270);
    return;
  }

  uint64_t v18 = sub_1001214B4(54, (uint64_t)sub_100120C34, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_1006BCC31);
  if ((_DWORD)v18)
  {
    uint64_t v9 = v18;
    sub_1001EE134((uint64_t)"OI_HCICMD_SetEventMask returned %!", v19, v20, v21, v22, v23, v24, v25, v28);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

void sub_10011F9C8()
{
  if (byte_1008F6D20 < 0xCu)
  {
    sub_1001EDA8C(qword_1008E2270);
  }

  else
  {
    unint64_t v6 = *((unsigned __int16 *)sub_10016F424(0x85u) + 2);
    if ((v6 & 0xC000) == 0 && (*((_BYTE *)&xmmword_1008F6DA8 + (v6 >> 8)) & v6) != 0)
    {
      byte_1008E22A8 |= 2u;
      byte_1008D75CC = 89;
      byte_1008D7438["ateFrameworks/CoreTime.framework/CoreTime"] = 89;
    }

    uint64_t v7 = sub_1001214B4(126, (uint64_t)sub_100120CA8, v0, v1, v2, v3, v4, v5, (uint64_t)&unk_1008E22A5);
    if ((_DWORD)v7)
    {
      uint64_t v8 = v7;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_SetEventMaskPage2 returned %!", v9, v10, v11, v12, v13, v14, v15, v17);
        uint64_t v16 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v8);
    }
  }

void sub_10011FAE0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008F6D20 < 6u)
  {
    sub_1001EDA8C(qword_1008E2270);
  }

  else
  {
    uint64_t v8 = sub_1001214B4(162, (uint64_t)sub_100120D1C, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_1006BCC21);
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_LE_SetEventMask returned %!", v10, v11, v12, v13, v14, v15, v16, v18);
        uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
    }
  }

void sub_10011FBA4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (BYTE8(xmmword_1008F6D58)) {
    BOOL v8 = byte_1008F6D20 >= 4u;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    uint64_t v9 = sub_1001214B4(118, (uint64_t)sub_100120D90, a3, a4, a5, a6, a7, a8, byte_1008D742C);
    if ((_DWORD)v9)
    {
      uint64_t v10 = v9;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_WriteSimplePairingMode", v11, v12, v13, v14, v15, v16, v17, v19);
        uint64_t v18 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v10);
    }
  }

  else
  {
    sub_1001EDA8C(qword_1008E2270);
  }

void sub_10011FC70( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (BYTE9(xmmword_1008F6D58))
  {
    uint64_t v8 = sub_1001214B4(131, (uint64_t)sub_100120E04, a3, a4, a5, a6, a7, a8, 1LL);
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_WriteLeHostSupported", v10, v11, v12, v13, v14, v15, v16, v18);
        uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
    }
  }

  else
  {
    sub_1001EDA8C(qword_1008E2270);
  }

void sub_10011FD2C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (BYTE9(xmmword_1008F6D58))
  {
    if (BYTE7(xmmword_1008F6D38) >= 0x10u)
    {
      uint64_t v8 = sub_100120E14;
      int v9 = 244;
    }

    else
    {
      uint64_t v8 = sub_100120ECC;
      int v9 = 163;
    }

    uint64_t v10 = sub_1001214B4(v9, (uint64_t)v8, a3, a4, a5, a6, a7, a8, v19);
    if ((_DWORD)v10)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_WriteLeHostSupported", v11, v12, v13, v14, v15, v16, v17, v20);
        uint64_t v18 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v10);
    }
  }

  else
  {
    sub_1001EDA8C(qword_1008E2270);
  }

void sub_10011FDF0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!BYTE9(xmmword_1008F6D58)) {
    goto LABEL_4;
  }
  uint64_t v8 = sub_1001214B4(197, (uint64_t)sub_10011DC7C, a3, a4, a5, a6, a7, a8, v18);
  if (!(_DWORD)v8) {
    return;
  }
  uint64_t v9 = v8;
  if ((_DWORD)v8 != 628)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_LE_ReadMaximumLength %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
  }

  else
  {
LABEL_4:
    sub_1001EDA8C(qword_1008E2270);
  }

void sub_10011FEAC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (BYTE9(xmmword_1008F6D58))
  {
    uint64_t v8 = sub_1001214B4(188, (uint64_t)sub_100120F3C, a3, a4, a5, a6, a7, a8, v18);
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_LE_ReadSupportedStates", v10, v11, v12, v13, v14, v15, v16, v19);
        uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
    }
  }

  else
  {
    sub_1001EDA8C(qword_1008E2270);
  }

void sub_10011FF54( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (BYTE9(xmmword_1008F6D58))
  {
    uint64_t v8 = sub_1001214B4(175, (uint64_t)sub_100120F64, a3, a4, a5, a6, a7, a8, v18);
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_LE_ReadFilterAcceptListSize", v10, v11, v12, v13, v14, v15, v16, v19);
        uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
    }
  }

  else
  {
    sub_1001EDA8C(qword_1008E2270);
  }

void sub_10011FFFC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_1008F6D88 == 1 || (sub_1001EE2A0(), dword_1008F6D88 == 1))
  {
    byte_1008F6D8C = 1;
    uint64_t v8 = sub_1001214B4(147, (uint64_t)sub_100120F8C, a3, a4, a5, a6, a7, a8, v18);
    byte_1008F6D8C = 0;
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_ReadBufferSize failed: %!", v10, v11, v12, v13, v14, v15, v16, v9);
        uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
    }
  }

void sub_1001200B8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (BYTE9(xmmword_1008F6D58) && (BYTE7(xmmword_1008F6D38) & 0x30) != 0)
  {
    uint64_t v8 = sub_1001214B4(243, (uint64_t)sub_1001210BC, a3, a4, a5, a6, a7, a8, 32LL);
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if ((_DWORD)v8 == 628)
      {
        sub_1001EDA8C(qword_1008E2270);
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_HCI_CMD_LE_SetHostFeatureCommand %!", v10, v11, v12, v13, v14, v15, v16, v9);
          uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }

        sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
      }
    }

    BYTE8(xmmword_1008F6D38) |= 1u;
  }

  else
  {
    sub_1001EDA8C(qword_1008E2270);
  }

void sub_1001201B4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (BYTE9(xmmword_1008F6D58) && (BYTE8(xmmword_1008F6D38) & 0x60) != 0)
  {
    uint64_t v8 = sub_1001214B4(243, (uint64_t)sub_1001210CC, a3, a4, a5, a6, a7, a8, 38LL);
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if ((_DWORD)v8 == 628)
      {
        sub_1001EDA8C(qword_1008E2270);
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_HCI_CMD_LE_SetHostFeatureCommand %!", v10, v11, v12, v13, v14, v15, v16, v9);
          uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            sub_100657F74();
          }
        }

        sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
      }
    }

    BYTE8(xmmword_1008F6D38) |= 0x40u;
  }

  else
  {
    sub_1001EDA8C(qword_1008E2270);
  }

void sub_1001202B0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!BYTE9(xmmword_1008F6D58) || (BYTE8(xmmword_1008F6D38) & 0x60) == 0) {
    goto LABEL_5;
  }
  uint64_t v8 = sub_1001214B4(250, (uint64_t)sub_1001210DC, a3, a4, a5, a6, a7, a8, 1LL);
  if (!(_DWORD)v8) {
    return;
  }
  uint64_t v9 = v8;
  if ((_DWORD)v8 != 628)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_LE_SetDefaultSubrate %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
  }

  else
  {
LABEL_5:
    sub_1001EDA8C(qword_1008E2270);
  }

void sub_100120394()
{
  unsigned int v0 = dword_1008F6D88;
  if (dword_1008F6D88 > 5 || ((1 << dword_1008F6D88) & 0x32) == 0)
  {
    sub_1001EE2A0();
    unsigned int v0 = dword_1008F6D88;
  }

  BOOL v2 = v0 > 5;
  int v3 = (1 << v0) & 0x32;
  if (!v2 && v3 != 0)
  {
    int v5 = sub_100135E0C();
    byte_1008F6D8C = 1;
    uint64_t v12 = sub_1001214B4(94, (uint64_t)sub_1001210EC, v6, v7, v8, v9, v10, v11, (v5 + 4));
    byte_1008F6D8C = 0;
    if ((_DWORD)v12)
    {
      uint64_t v13 = v12;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_HostBufferSize failed: %!", v14, v15, v16, v17, v18, v19, v20, v13);
        uint64_t v21 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v13);
    }
  }

void sub_1001204A4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = dword_1008F6D88;
  if (dword_1008F6D88 > 5 || ((1 << dword_1008F6D88) & 0x32) == 0)
  {
    sub_1001EE2A0();
    unsigned int v8 = dword_1008F6D88;
  }

  BOOL v10 = v8 > 5;
  int v11 = (1 << v8) & 0x32;
  if (!v10 && v11 != 0)
  {
    unsigned __int8 v13 = *(_BYTE *)(qword_1008F6D80 + 8) ? *(_BYTE *)(qword_1008F6D80 + 7) | 2 : *(_BYTE *)(qword_1008F6D80 + 7);
    byte_1008F6D8C = 1;
    uint64_t v14 = sub_1001214B4(93, (uint64_t)sub_100121168, a3, a4, a5, a6, a7, a8, v13);
    byte_1008F6D8C = 0;
    if ((_DWORD)v14)
    {
      uint64_t v15 = v14;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_HCICMD_SetHostControllerToHostFlowControl failed: %!",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v15);
        uint64_t v23 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v15);
    }
  }

void sub_1001205AC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = sub_1001214B4(124, (uint64_t)sub_1001211D8, a3, a4, a5, a6, a7, a8, 1LL);
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteDefaultErroneousDataReporting", v10, v11, v12, v13, v14, v15, v16, v18);
      uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }

    sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v9);
  }

void sub_100120640(uint64_t a1)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write BD Addr cmd failed %!", v2, v3, v4, v5, v6, v7, v8, a1);
      uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdWriteBdAddrCB");
}

void sub_1001206BC(uint64_t a1)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"reset command failed (%!), ignoring error and continuing initialization",  v2,  v3,  v4,  v5,  v6,  v7,  v8,  a1);
      uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    if ((_DWORD)a1 == 621) {
      byte_1008F6E19 = 1;
    }
  }

  sub_10011DE9C(0LL, (uint64_t)"initCmdResetCB");
}

void sub_100120750(uint64_t a1, unsigned __int8 *a2)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Read Local Version failed %!", v3, v4, v5, v6, v7, v8, v9, a1);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    if (!a2) {
      sub_1001EE2A0();
    }
    BYTE14(xmmword_1008F6DA8) = BYTE14(xmmword_1008F6DA8) & 0xEF | (16 * (*a2 > 1u));
    word_1008F6D1E = *((_WORD *)a2 + 1);
    byte_1008F6D20 = a2[4];
    word_1008F6D22 = *((_WORD *)a2 + 4);
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdReadLocalVersionCB");
}

void sub_100120818()
{
}

void sub_100120828(uint64_t a1, uint64_t a2)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Read BD Addr cmd failed %!", v3, v4, v5, v6, v7, v8, v9, a1);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else if (dword_1008F6D88 == 1)
  {
    int v11 = *(_DWORD *)a2;
    word_1008F6D1C = *(_WORD *)(a2 + 4);
    dword_1008F6D18 = v11;
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdReadBdAddrCB");
}

void sub_1001208CC(uint64_t a1, uint64_t a2)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Read local features cmd failed %!", v3, v4, v5, v6, v7, v8, v9, a1);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else if (a2 && dword_1008F6D88 == 1)
  {
    unk_1008F6D24 = *(void *)a2;
    if (byte_1008F6D20 < 6u)
    {
      WORD4(xmmword_1008F6D58) = 1;
    }

    else
    {
      BYTE8(xmmword_1008F6D58) = (*(_BYTE *)(a2 + 4) & 0x20) == 0;
      BYTE9(xmmword_1008F6D58) = (*(_BYTE *)(a2 + 4) & 0x40) != 0;
    }
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdReadLocalFeaturesCB");
}

void sub_1001209A0(uint64_t a1, int a2, unsigned int a3, void *a4)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Read local features cmd failed %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else if (a4)
  {
    if (dword_1008F6D88 == 1)
    {
      *(void *)&dword_1008F6D18[2 * a2 + 3] = *a4;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Extended features, max %d, pageNumber %d: %@", v14, v15, v16, v17, v18, v19, v20, a3);
        uint64_t v21 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 136446210;
          uint64_t v23 = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdReadLocalExtendedFeaturesCB");
}

void sub_100120B00(uint64_t a1, void *a2)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Read local supported features failed %!", v3, v4, v5, v6, v7, v8, v9, a1);
      uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  else if (a2)
  {
    *(void *)((char *)&xmmword_1008F6D38 + 4) = *a2;
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"LE local supported features %@",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  (uint64_t)&xmmword_1008F6D38 + 4);
      uint64_t v18 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v20 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }

  sub_10011DE9C(0LL, (uint64_t)"initCmdReadLeLocalSupportedFeaturesCB");
}

void sub_100120C34(uint64_t a1)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write event mask", v2, v3, v4, v5, v6, v7, v8, v10);
      uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdWriteEventMaskCb");
}

void sub_100120CA8(uint64_t a1)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write event mask page 2", v2, v3, v4, v5, v6, v7, v8, v10);
      uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdWriteEventMaskPage2Cb");
}

void sub_100120D1C(uint64_t a1)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write le event mask", v2, v3, v4, v5, v6, v7, v8, v10);
      uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdWriteLeEventMaskCb");
}

void sub_100120D90(uint64_t a1)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write SSP mode", v2, v3, v4, v5, v6, v7, v8, v10);
      uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_10065A878();
      }
    }
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdWriteSspCb");
}

void sub_100120E04()
{
}

void sub_100120E14(uint64_t a1, int a2, int a3, int a4, int a5)
{
  if (!(_DWORD)a1)
  {
    if ((a2 != 0) != (a3 != 0)) {
      sub_1001EE2A0();
    }
    if ((a4 != 0) != (a5 != 0)) {
      sub_1001EE2A0();
    }
    word_1008E22AE = a2;
    byte_1008E22B0 = a3;
    word_1008E22B2 = a4;
    byte_1008E22B4 = a5;
    if (a2) {
      BOOL v10 = a3 == 0;
    }
    else {
      BOOL v10 = 1;
    }
    char v11 = v10;
    byte_1008E22B5 = v11;
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdReadLeBufferSizeV2CB");
}

void sub_100120ECC(int a1, int a2, int a3)
{
  if (!a1)
  {
    if ((a2 != 0) != (a3 != 0)) {
      sub_1001EE2A0();
    }
    word_1008E22AE = a2;
    byte_1008E22B0 = a3;
    if (a2) {
      BOOL v5 = a3 == 0;
    }
    else {
      BOOL v5 = 1;
    }
    char v6 = v5;
    byte_1008E22B5 = v6;
  }

  sub_10011DE9C(0LL, (uint64_t)"initCmdReadLeBufferSizeCB");
}

void sub_100120F3C(int a1, uint64_t *a2)
{
  if (!a1) {
    sub_1001BA108(a2);
  }
  sub_10011DE9C(0LL, (uint64_t)"initCmdReadLeSupportedStatesCB");
}

void sub_100120F64(int a1, unsigned int a2)
{
  if (!a1) {
    sub_1001D5CB8(a2);
  }
  sub_10011DE9C(0LL, (uint64_t)"initCmdReadLeFilterAcceptListSizeCB");
}

void sub_100120F8C(uint64_t a1, unsigned int a2, __int16 a3, int a4, int a5)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Read device buffer sizes failed %!", v6, v7, v8, v9, v10, v11, v12, a1);
      uint64_t v13 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    goto LABEL_11;
  }

  if (dword_1008F6D88 != 1
    || (uint64_t v14 = sub_100136C80( a2,  a3,  word_1008E22AE,  word_1008E22B2,  a4,  a5,  byte_1008E22B0,  byte_1008E22B4,  byte_1008E22B5),  !(_DWORD)v14))
  {
LABEL_11:
    sub_10011DE9C(a1, (uint64_t)"initCmdReadDeviceBufferSizesCB");
    return;
  }

  uint64_t v15 = (uint64_t)v14;
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"OI_HCIFlow_Init failed: %!", v16, v17, v18, v19, v20, v21, v22, 0LL);
    uint64_t v23 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v15);
}

void sub_1001210BC()
{
}

void sub_1001210CC()
{
}

void sub_1001210DC()
{
}

void sub_1001210EC(uint64_t a1)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Host buffer size cmd failed %!", v2, v3, v4, v5, v6, v7, v8, a1);
      uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdHostBufferSizeCB");
}

void sub_100121168(uint64_t a1)
{
  if ((_DWORD)a1 == 717)
  {
    a1 = sub_1000A86F0();
    if ((_DWORD)a1)
    {
      sub_1001EE134((uint64_t)"HCI HostFlowControl unsupported (ignoring)", v1, v2, v3, v4, v5, v6, v7, v9);
      uint64_t v8 = (os_log_s *)sub_100086554(0x2Eu);
      a1 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
      if ((_DWORD)a1)
      {
        sub_100657858();
        a1 = 0LL;
      }
    }
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdHostFlowControlCB");
}

void sub_1001211D8(uint64_t a1)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Write Erroneous Data Reporting failed %!", v2, v3, v4, v5, v6, v7, v8, a1);
      uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  sub_10011DE9C(a1, (uint64_t)"initCmdWriteErroneousDataReportingCB");
}

void sub_100121254(uint64_t a1)
{
  int v2 = dword_1008F6D88;
  if ((dword_1008F6D88 & 0xFFFFFFFE) != 4)
  {
    sub_1001EE2A0();
    int v2 = dword_1008F6D88;
  }

  if ((v2 - 6) > 0xFFFFFFFD)
  {
    qword_1008E2270 = 0LL;
    if ((_DWORD)a1 || (a1 = sub_100139244(sub_100121440), (_DWORD)a1)) {
      sub_100121440(a1);
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"resetCmdChainTermination, deviceReset is not active", v3, v4, v5, v6, v7, v8, v9, v11);
    uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_100121308()
{
  unsigned int v0 = dword_1008F6D88;
  if (dword_1008F6D88 > 5 || ((1 << dword_1008F6D88) & 0x32) == 0)
  {
    sub_1001EE2A0();
    unsigned int v0 = dword_1008F6D88;
  }

  BOOL v2 = v0 > 5;
  int v3 = (1 << v0) & 0x32;
  if (v2 || v3 == 0)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"initCmdStackResetHCITransport, orphaned", v15, v16, v17, v18, v19, v20, v21, v23);
      uint64_t v22 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else if (*(_BYTE *)(qword_1008F6D80 + 10) || (uint64_t v5 = sub_1000FC2BC(), !(_DWORD)v5))
  {
    sub_1001EDA8C(qword_1008E2270);
  }

  else
  {
    uint64_t v6 = (uint64_t)v5;
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCIIfc_StackResetHCITransport failed: %!", v7, v8, v9, v10, v11, v12, v13, v6);
      uint64_t v14 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EDAF0((void (**)(uint64_t))qword_1008E2270, v6);
  }

void sub_100121440(uint64_t a1)
{
  if ((dword_1008F6D88 & 0xFFFFFFFE) != 4) {
    sub_1001EE2A0();
  }
  if ((_DWORD)a1)
  {
    if (dword_1008F6D88 == 4) {
      goto LABEL_8;
    }
    int v2 = 6;
  }

  else
  {
    int v2 = 2;
  }

  dword_1008F6D88 = v2;
LABEL_8:
  int v3 = (void (*)(uint64_t))off_1008E2268;
  if (off_1008E2268)
  {
    off_1008E2268 = 0LL;
    v3(a1);
  }

uint64_t sub_1001214B4( int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (!DWORD2(xmmword_1008F6FB8)) {
    return 103LL;
  }
  if ((sub_1000B1BD0() & 1) != 0) {
    return 3704LL;
  }
  if ((sub_10010C704() & 1) != 0) {
    return 0LL;
  }
  if (dword_1008F6D88 != 2 && byte_1008F6D8C == 0)
  {
    uint64_t result = 627LL;
    if (a1 <= 161)
    {
      if (((a1 - 98) > 0x33 || ((1LL << (a1 - 98)) & 0xBE00214100001LL) == 0)
        && (a1 - 54) >= 2)
      {
        return result;
      }
    }

    else if (((a1 - 162) > 0x3E || ((1LL << (a1 + 94)) & 0x4000002C04002027LL) == 0) {
           && ((a1 - 243) > 0x1D || ((1 << (a1 + 13)) & 0x20190083) == 0))
    }
    {
      return result;
    }
  }

  __int128 ptr = 0LL;
  uint64_t v27 = 0LL;
  v25[0] = 0LL;
  v25[1] = 0LL;
  uint64_t v28 = &a9;
  uint64_t v12 = sub_10016F424((unsigned __int16)a1);
  if (!v12) {
    return 616LL;
  }
  uint64_t v13 = (uint64_t)v12;
  unint64_t v14 = *((unsigned __int16 *)v12 + 2);
  if (v12[17]) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)(v13 + 16)) {
    uint64_t result = sub_10012176C((int *)v28, v13, (uint64_t *)&ptr, 0LL, 0LL, (uint64_t)v25, 0LL);
  }
  else {
    uint64_t result = sub_1001278B8(v28, v13, (uint64_t *)&ptr, 0LL, 0LL, 0LL, 0LL);
  }
  if (!(_DWORD)result)
  {
    if (a1 == 272)
    {
      if (!*(_BYTE *)(v13 + 16)) {
        sub_1001EE2A0();
      }
    }

    else
    {
      sub_1001289D0(v13);
    }

    if (*(_BYTE *)(v13 + 22))
    {
      uint64_t v15 = sub_100138A28((uint64_t)ptr, WORD1(v27));
      if ((_DWORD)v15)
      {
        uint64_t v16 = v15;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_HCIParmCache failed %!", v17, v18, v19, v20, v21, v22, v23, v16);
          uint64_t v24 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }
    }

    return sub_10012CEF4(ptr);
  }

  return result;
}

uint64_t sub_10012176C(int *a1, uint64_t a2, uint64_t *a3, uint64_t a4, _WORD *a5, uint64_t a6, _BYTE *a7)
{
  int v13 = *(unsigned __int16 *)(a2 + 6) + 4;
  unint64_t v14 = sub_1000B17F4(*(unsigned __int16 *)(a2 + 6) + 4LL);
  if (!v14) {
    return 104LL;
  }
  uint64_t v15 = v14;
  *((_BYTE *)a3 + 15) = 0;
  *a3 = (uint64_t)v14;
  *((_WORD *)a3 + 4) = v13;
  *((_WORD *)a3 + 5) = v13;
  uint64_t v16 = (_WORD *)a3 + 5;
  if (!(_WORD)v13) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1494,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a3 + 6) = 1;
  *((_BYTE *)a3 + 14) = 2;
  v652 = (_WORD *)a3 + 6;
  v653 = (char *)a3 + 14;
  *((_WORD *)a3 + 5) = v13;
  *unint64_t v14 = 1;
  int v17 = sub_10016F45C(a2);
  if (v17 == 272)
  {
    uint64_t v18 = (char *)a3 + 14;
    uint64_t v19 = a1;
    int v20 = *a1;
    int v21 = a1[2];
    v655 = a1 + 6;
    uint64_t v22 = (char *)*((void *)v19 + 2);
    uint64_t v23 = (_WORD *)a3 + 6;
    if (a6)
    {
      *(_WORD *)(a6 + 8) = v20;
      *(_BYTE *)(a6 + 12) = v21;
      if (v22)
      {
        *(_BYTE *)(a6 + sub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = *v22;
      }

      else
      {
        sub_1001EE2A0();
        uint64_t v23 = (_WORD *)a3 + 6;
        uint64_t v18 = (char *)a3 + 14;
      }

      if ((v21 & 0xFE) != 0) {
        *(_BYTE *)(a6 + 11) = v22[1];
      }
      *(void *)a6 = *v655;
    }

    if ((~v20 & 0xFC00) == 0)
    {
      if (*((_BYTE *)a3 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
      }

      else
      {
        uint64_t v51 = (unsigned __int16)*v23;
        if ((unsigned __int16)*v16 - (int)v51 > 1)
        {
          if (*v18 == 2)
          {
            *(_BYTE *)(*a3 + v51) = v20;
            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v20);
            __int16 v52 = *((_WORD *)a3 + 6);
            *((_WORD *)a3 + 6) = v52 + 2;
            if (*((_BYTE *)a3 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }

            else if ((unsigned __int16)*v16 > (unsigned __int16)(v52 + 2))
            {
              if (*v18 == 2)
              {
                uint64_t v53 = *a3;
                *((_WORD *)a3 + 6) = v52 + 3;
                *(_BYTE *)(v53 + (unsigned __int16)(v52 + 2)) = v21;
                while (1)
                {
                  if (!(_BYTE)v21) {
                    goto LABEL_596;
                  }
                  if (*((_BYTE *)a3 + 15)) {
                    break;
                  }
                  uint64_t v54 = (unsigned __int16)*v23;
                  if (*v18 != 2)
                  {
                    v482 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                    goto LABEL_632;
                  }

                  --v21;
                  char v55 = *v22++;
                  uint64_t v56 = *a3;
                  *((_WORD *)a3 + 6) = v54 + 1;
                  *(_BYTE *)(v56 + v54) = v55;
                }

                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_630:
                v482 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_632:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1659,  v482);
              }

              v495 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_685:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1655,  v495);
            }

            v495 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
            goto LABEL_685;
          }

          v494 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_681:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1652,  v494);
        }
      }

      v494 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
      goto LABEL_681;
    }

    uint64_t v24 = 623LL;
    goto LABEL_61;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    goto LABEL_651;
  }

  uint64_t v23 = (_WORD *)a3 + 6;
  uint64_t v18 = (char *)a3 + 14;
  uint64_t v25 = (unsigned __int16)*v652;
  if ((unsigned __int16)*v16 - (int)v25 <= 1)
  {
LABEL_651:
    v487 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_653;
  }

  if (*v653 != 2)
  {
    v487 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_653:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1499,  v487);
  }

  *(_BYTE *)(*a3 + v25) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(a2 + 3);
  __int16 v26 = *((_WORD *)a3 + 6);
  unsigned __int16 v27 = v26 + 2;
  *((_WORD *)a3 + 6) = v26 + 2;
  uint64_t v24 = 615LL;
  if (v17 <= 204)
  {
    if (v17 > 99)
    {
      if ((v17 - 134) < 4)
      {
        int v28 = *a1;
        if (*((_BYTE *)a3 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
        }

        else if ((unsigned __int16)*v16 > v27)
        {
          if (*v653 == 2)
          {
            uint64_t v29 = (char *)*((void *)a1 + 1);
            uint64_t v30 = *a3;
            *((_WORD *)a3 + 6) = v26 + 3;
            *(_BYTE *)(v30 + (unsigned __int16)(v26 + 2)) = v28;
            while (1)
            {
              if (!(_BYTE)v28) {
                goto LABEL_596;
              }
              if (*((_BYTE *)a3 + 15)) {
                break;
              }
              uint64_t v31 = (unsigned __int16)*v652;
              if (*v653 != 2)
              {
                v483 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                goto LABEL_636;
              }

              LOBYTE(v28) = v28 - 1;
              char v32 = *v29++;
              uint64_t v33 = *a3;
              *((_WORD *)a3 + 6) = v31 + 1;
              *(_BYTE *)(v33 + v31) = v32;
            }

            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_634:
            v483 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_636:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1686,  v483);
          }

          v541 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_868:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1683,  v541);
        }

        v541 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
        goto LABEL_868;
      }

      if (v17 != 100)
      {
        if (v17 == 138)
        {
          int v75 = *a1;
          int v76 = a1[2];
          uint64_t v77 = (_BYTE *)*((void *)a1 + 2);
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else if ((unsigned __int16)*v16 > v27)
          {
            if (*v653 == 2)
            {
              uint64_t v78 = (_BYTE *)*((void *)a1 + 3);
              uint64_t v79 = *a3;
              *((_WORD *)a3 + 6) = v26 + 3;
              *(_BYTE *)(v79 + (unsigned __int16)(v26 + 2)) = v75;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
              }

              else
              {
                uint64_t v80 = (unsigned __int16)*v652;
                if ((unsigned __int16)*v16 > v80)
                {
                  if (*v653 == 2)
                  {
                    uint64_t v81 = *a3;
                    *((_WORD *)a3 + 6) = v80 + 1;
                    *(_BYTE *)(v81 + v80) = v76;
                    uint64_t v82 = v76;
                    if ((_BYTE)v76)
                    {
                      uint64_t v83 = v76;
                      while (!*((_BYTE *)a3 + 15))
                      {
                        uint64_t v84 = (unsigned __int16)*v652;
                        if (*v653 != 2)
                        {
                          v484 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                          goto LABEL_641;
                        }

                        *(_BYTE *)(*a3 + v84) = *v77;
                        *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = v77[1];
                        *((_WORD *)a3 + 6) += 2;
                        v77 += 2;
                        if (!--v83)
                        {
                          while (!*((_BYTE *)a3 + 15))
                          {
                            uint64_t v85 = (unsigned __int16)*v652;
                            if (*v653 != 2)
                            {
                              v485 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                              goto LABEL_645;
                            }

                            int v86 = 0;
                            *(_BYTE *)(*a3 + v85) = *v78;
                            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = v78[1];
                            *((_WORD *)a3 + 6) += 2;
                            v78 += 2;
                            if (!--v82) {
                              goto LABEL_622;
                            }
                          }

                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corest"
                                                 "ack/hci/hcicmdapi.c");
LABEL_643:
                          v485 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_645:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1719,  v485);
                        }
                      }

                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_639:
                      v484 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_641:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1715,  v484);
                    }

LABEL_596:
                    int v86 = 0;
                    goto LABEL_622;
                  }

                  v554 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_922:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1712,  v554);
                }
              }

              v554 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              goto LABEL_922;
            }

            v553 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_918:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1711,  v553);
          }

          v553 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_918;
        }

LABEL_552:
                          int v86 = 0;
                          *(_BYTE *)(v641 + v639) = v432 + v643;
                          goto LABEL_621;
                        }

                        v622 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1198:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2287,  v622);
                      }
                    }

                    v622 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                    goto LABEL_1198;
                  }

                  v621 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1194:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2286,  v621);
                }
              }

              v621 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              goto LABEL_1194;
            }

            v620 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1190:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2285,  v620);
          }

          v620 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_1190;
        case 254:
          v242 = a1;
          int v243 = *a1;
          int v244 = a1[2];
          int v245 = a1[4];
          int v246 = a1[6];
          int v247 = a1[8];
          v662 = (const void **)(a1 + 12);
          int v248 = v242[10];
          size_t v249 = v248;
          if ((_BYTE)v248) {
            v250 = *v662;
          }
          else {
            v250 = 0LL;
          }
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else if ((unsigned __int16)*v16 > v27)
          {
            if (*v653 == 2)
            {
              uint64_t v451 = *a3;
              *((_WORD *)a3 + 6) = v26 + 3;
              *(_BYTE *)(v451 + (unsigned __int16)(v26 + 2)) = v248 + 8;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
              }

              else
              {
                uint64_t v452 = (unsigned __int16)*v652;
                if ((unsigned __int16)*v16 - (int)v452 > 1)
                {
                  if (*v653 == 2)
                  {
                    *(_BYTE *)(*a3 + v452) = v243;
                    *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v243);
                    unsigned __int16 v453 = *((_WORD *)a3 + 6) + 2;
                    *((_WORD *)a3 + 6) = v453;
                    if (*((_BYTE *)a3 + 15))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                    }

                    else if ((unsigned __int16)*v16 - v453 > 1)
                    {
                      if (*v653 == 2)
                      {
                        *(_BYTE *)(*a3 + v453) = v244;
                        *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v244);
                        __int16 v454 = *((_WORD *)a3 + 6);
                        *((_WORD *)a3 + 6) = v454 + 2;
                        if (*((_BYTE *)a3 + 15))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corest"
                                                 "ack/hci/hcicmdapi.c");
                        }

                        else if ((unsigned __int16)*v16 > (unsigned __int16)(v454 + 2))
                        {
                          if (*v653 == 2)
                          {
                            uint64_t v455 = *a3;
                            *((_WORD *)a3 + 6) = v454 + 3;
                            *(_BYTE *)(v455 + (unsigned __int16)(v454 + 2)) = v245;
                            if (*((_BYTE *)a3 + 15))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/co"
                                                     "restack/hci/hcicmdapi.c");
                            }

                            else
                            {
                              uint64_t v456 = (unsigned __int16)*v652;
                              if ((unsigned __int16)*v16 > v456)
                              {
                                if (*v653 == 2)
                                {
                                  uint64_t v457 = *a3;
                                  *((_WORD *)a3 + 6) = v456 + 1;
                                  *(_BYTE *)(v457 + v456) = v246;
                                  if (*((_BYTE *)a3 + 15))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/corestack/hci/hcicmdapi.c");
                                  }

                                  else
                                  {
                                    uint64_t v458 = (unsigned __int16)*v652;
                                    if ((unsigned __int16)*v16 > v458)
                                    {
                                      if (*v653 == 2)
                                      {
                                        uint64_t v459 = *a3;
                                        *((_WORD *)a3 + 6) = v458 + 1;
                                        *(_BYTE *)(v459 + v458) = v247;
                                        if (*((_BYTE *)a3 + 15))
                                        {
                                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/corestack/hci/hcicmdapi.c");
                                        }

                                        else
                                        {
                                          uint64_t v460 = (unsigned __int16)*v652;
                                          if ((unsigned __int16)*v16 > v460)
                                          {
                                            if (*v653 == 2)
                                            {
                                              uint64_t v461 = *a3;
                                              *((_WORD *)a3 + 6) = v460 + 1;
                                              *(_BYTE *)(v461 + v460) = v248;
                                              uint64_t v462 = *a3;
                                              uint64_t v463 = *((unsigned __int16 *)a3 + 6);
                                              if (*((_BYTE *)a3 + 15))
                                              {
                                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluet"
                                                                       "ooth_base/Stack/corestack/hci/hcicmdapi.c");
                                                uint64_t v18 = (char *)a3 + 14;
                                                int v464 = 0;
                                              }

                                              else
                                              {
                                                int v464 = (unsigned __int16)*v16 - (_DWORD)v463;
                                              }

                                              if (v464 < (int)v249)
                                              {
                                                v638 = "ByteStream_NumReadBytesAvail(*pBs) >= (responseDataLength)";
                                              }

                                              else
                                              {
                                                if (*v18 == 2)
                                                {
LABEL_619:
                                                  memmove((void *)(v462 + v463), v250, v249);
                                                  int v86 = 0;
                                                  uint64_t v23 = (_WORD *)a3 + 6;
                                                  __int16 v332 = *v652 + v249;
                                                  goto LABEL_620;
                                                }

                                                v638 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                              }

                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/coresta ck/hci/hcicmdapi.c",  2339,  v638);
                                            }

                                            v629 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1226:
                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack /hci/hcicmdapi.c",  2338,  v629);
                                          }
                                        }

                                        v629 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                        goto LABEL_1226;
                                      }

                                      v628 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1222:
                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2337,  v628);
                                    }
                                  }

                                  v628 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                  goto LABEL_1222;
                                }

                                v627 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1218:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2336,  v627);
                              }
                            }

                            v627 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                            goto LABEL_1218;
                          }

                          v626 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1214:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2335,  v626);
                        }

                        v626 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                        goto LABEL_1214;
                      }

                      v625 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1210:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2334,  v625);
                    }

                    v625 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
                    goto LABEL_1210;
                  }

                  v624 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1206:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2333,  v624);
                }
              }

              v624 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
              goto LABEL_1206;
            }

            v623 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1202:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2332,  v623);
          }

          v623 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_1202;
        case 255:
          v251 = a1;
          int v252 = *a1;
          int v253 = a1[2];
          v663 = (char **)(a1 + 6);
          int v254 = v251[4];
          uint64_t v255 = v254;
          if ((_BYTE)v254) {
            v256 = *v663;
          }
          else {
            v256 = 0LL;
          }
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else if ((unsigned __int16)*v16 > v27)
          {
            if (*v653 == 2)
            {
              uint64_t v465 = *a3;
              *((_WORD *)a3 + 6) = v26 + 3;
              *(_BYTE *)(v465 + (unsigned __int16)(v26 + 2)) = v254 + 5;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
              }

              else
              {
                uint64_t v466 = (unsigned __int16)*v652;
                if ((unsigned __int16)*v16 - (int)v466 > 1)
                {
                  if (*v653 == 2)
                  {
                    *(_BYTE *)(*a3 + v466) = v252;
                    *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v252);
                    unsigned __int16 v467 = *((_WORD *)a3 + 6) + 2;
                    *((_WORD *)a3 + 6) = v467;
                    if (*((_BYTE *)a3 + 15))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                    }

                    else if ((unsigned __int16)*v16 - v467 > 1)
                    {
                      if (*v653 == 2)
                      {
                        *(_BYTE *)(*a3 + v467) = v253;
                        *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v253);
                        __int16 v468 = *((_WORD *)a3 + 6);
                        *((_WORD *)a3 + 6) = v468 + 2;
                        if (*((_BYTE *)a3 + 15))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corest"
                                                 "ack/hci/hcicmdapi.c");
                        }

                        else if ((unsigned __int16)*v16 > (unsigned __int16)(v468 + 2))
                        {
                          if (*v653 == 2)
                          {
                            uint64_t v469 = *a3;
                            *((_WORD *)a3 + 6) = v468 + 3;
                            *(_BYTE *)(v469 + (unsigned __int16)(v468 + 2)) = v254;
                            if ((_BYTE)v254)
                            {
                              while (!*((_BYTE *)a3 + 15))
                              {
                                uint64_t v470 = (unsigned __int16)*v652;
                                if (*v653 != 2)
                                {
                                  v524 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                  goto LABEL_800;
                                }

                                int v86 = 0;
                                char v471 = *v256++;
                                uint64_t v472 = *a3;
                                *((_WORD *)a3 + 6) = v470 + 1;
                                *(_BYTE *)(v472 + v470) = v471;
                                if (!--v255) {
                                  goto LABEL_622;
                                }
                              }

                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/co"
                                                     "restack/hci/hcicmdapi.c");
LABEL_798:
                              v524 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_800:
                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2369,  v524);
                            }

                            goto LABEL_596;
                          }

                          v633 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1242:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2367,  v633);
                        }

                        v633 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                        goto LABEL_1242;
                      }

                      v632 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1238:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2366,  v632);
                    }

                    v632 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
                    goto LABEL_1238;
                  }

                  v631 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1234:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2365,  v631);
                }
              }

              v631 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
              goto LABEL_1234;
            }

            v630 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1230:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2364,  v630);
          }

          v630 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_1230;
        case 256:
          char v257 = 0;
          int v258 = *a1;
          int v259 = a1[2];
          int v260 = a1[4];
          int v261 = a1[6];
          int v262 = a1[8];
          uint64_t v263 = *((void *)a1 + 5);
          int v264 = a1[12];
          uint64_t v265 = *((void *)a1 + 7);
          uint64_t v266 = *((void *)a1 + 8);
          uint64_t v267 = *((void *)a1 + 9);
          uint64_t v268 = *((void *)a1 + 10);
          uint64_t v269 = *((void *)a1 + 11);
          uint64_t v270 = *((void *)a1 + 12);
          uint64_t v271 = *((void *)a1 + 13);
          uint64_t v272 = *((void *)a1 + 14);
          int v273 = 8;
          unsigned __int8 v274 = v264;
          do
          {
            v257 += v274 & 1;
            v274 >>= 1;
            --v273;
          }

          while (v273);
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            goto LABEL_1009;
          }

          if ((unsigned __int16)*v16 <= v27)
          {
LABEL_1009:
            v576 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
            goto LABEL_1011;
          }

          if (*v653 != 2)
          {
            v576 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1011:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2423,  v576);
          }

          uint64_t v275 = *a3;
          *((_WORD *)a3 + 6) = v26 + 3;
          *(_BYTE *)(v275 + (unsigned __int16)(v26 + 2)) = (16 * v257) | 0xC;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            goto LABEL_1013;
          }

          uint64_t v276 = (unsigned __int16)*v652;
          if ((unsigned __int16)*v16 <= v276)
          {
LABEL_1013:
            v577 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
            goto LABEL_1015;
          }

          if (*v653 != 2)
          {
            v577 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1015:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2424,  v577);
          }

          uint64_t v277 = *a3;
          *((_WORD *)a3 + 6) = v276 + 1;
          *(_BYTE *)(v277 + v276) = v258;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            goto LABEL_1017;
          }

          uint64_t v278 = (unsigned __int16)*v652;
          if ((unsigned __int16)*v16 <= v278)
          {
LABEL_1017:
            v578 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
            goto LABEL_1019;
          }

          if (*v653 != 2)
          {
            v578 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1019:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2425,  v578);
          }

          uint64_t v279 = *a3;
          *((_WORD *)a3 + 6) = v278 + 1;
          *(_BYTE *)(v279 + v278) = v259;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            goto LABEL_1021;
          }

          uint64_t v280 = (unsigned __int16)*v652;
          if ((unsigned __int16)*v16 <= v280)
          {
LABEL_1021:
            v579 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
            goto LABEL_1023;
          }

          if (*v653 != 2)
          {
            v579 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1023:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2426,  v579);
          }

          uint64_t v281 = *a3;
          *((_WORD *)a3 + 6) = v280 + 1;
          *(_BYTE *)(v281 + v280) = v260;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            goto LABEL_1025;
          }

          uint64_t v282 = (unsigned __int16)*v652;
          if ((unsigned __int16)*v16 <= v282)
          {
LABEL_1025:
            v580 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
            goto LABEL_1027;
          }

          if (*v653 != 2)
          {
            v580 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1027:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2427,  v580);
          }

          uint64_t v283 = *a3;
          *((_WORD *)a3 + 6) = v282 + 1;
          *(_BYTE *)(v283 + v282) = v261;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            goto LABEL_1029;
          }

          uint64_t v284 = (unsigned __int16)*v652;
          if ((unsigned __int16)*v16 <= v284)
          {
LABEL_1029:
            v581 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
            goto LABEL_1031;
          }

          if (*v653 != 2)
          {
            v581 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1031:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2428,  v581);
          }

          uint64_t v285 = *a3;
          *((_WORD *)a3 + 6) = v284 + 1;
          *(_BYTE *)(v285 + v284) = v262;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            goto LABEL_1033;
          }

          uint64_t v286 = (unsigned __int16)*v652;
          if ((unsigned __int16)*v16 - (int)v286 <= 5)
          {
LABEL_1033:
            v582 = "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE";
            goto LABEL_1035;
          }

          uint64_t v640 = v268;
          uint64_t v642 = v267;
          uint64_t v644 = v266;
          uint64_t v647 = v265;
          char v650 = v262;
          if (*v653 != 2)
          {
            v582 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1035:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2429,  v582);
          }

          uint64_t v287 = v263;
          sub_1001F0050(*a3 + v286, v263, 6uLL);
          __int16 v288 = *((_WORD *)a3 + 6);
          *((_WORD *)a3 + 6) = v288 + 6;
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_1037:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2430,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }

          uint64_t v18 = (char *)a3 + 14;
          uint64_t v23 = (_WORD *)a3 + 6;
          if (*v653 != 2) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2430,  "(*pBs).__RWFlag == BYTESTREAM_WRITE");
          }
          uint64_t v289 = 0LL;
          uint64_t v290 = *a3;
          *((_WORD *)a3 + 6) = v288 + 7;
          *(_BYTE *)(v290 + (unsigned __int16)(v288 + 6)) = v264;
          do
          {
            if ((v264 & 1) != 0)
            {
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_834:
                v533 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_836:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2436,  v533);
              }

              uint64_t v291 = (unsigned __int16)*v652;
              if (*v653 != 2)
              {
                v533 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                goto LABEL_836;
              }

              *(_BYTE *)(*a3 + v291) = *(_BYTE *)(v647 + v289);
              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v647 + v289 + 1);
              unsigned __int16 v292 = *((_WORD *)a3 + 6) + 2;
              *((_WORD *)a3 + 6) = v292;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_838:
                v534 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_840:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2437,  v534);
              }

              if (*v653 != 2)
              {
                v534 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                goto LABEL_840;
              }

              *(_BYTE *)(*a3 + v292) = *(_BYTE *)(v644 + v289);
              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v644 + v289 + 1);
              unsigned __int16 v293 = *((_WORD *)a3 + 6) + 2;
              *((_WORD *)a3 + 6) = v293;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_842:
                v535 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_844:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2438,  v535);
              }

              if (*v653 != 2)
              {
                v535 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                goto LABEL_844;
              }

              *(_BYTE *)(*a3 + v293) = *(_BYTE *)(v642 + v289);
              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v642 + v289 + 1);
              unsigned __int16 v294 = *((_WORD *)a3 + 6) + 2;
              *((_WORD *)a3 + 6) = v294;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_846:
                v536 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_848:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2439,  v536);
              }

              if (*v653 != 2)
              {
                v536 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                goto LABEL_848;
              }

              *(_BYTE *)(*a3 + v294) = *(_BYTE *)(v640 + v289);
              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v640 + v289 + 1);
              unsigned __int16 v295 = *((_WORD *)a3 + 6) + 2;
              *((_WORD *)a3 + 6) = v295;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_850:
                v537 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_852:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2440,  v537);
              }

              if (*v653 != 2)
              {
                v537 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                goto LABEL_852;
              }

              *(_BYTE *)(*a3 + v295) = *(_BYTE *)(v269 + v289);
              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v269 + v289 + 1);
              unsigned __int16 v296 = *((_WORD *)a3 + 6) + 2;
              *((_WORD *)a3 + 6) = v296;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_854:
                v538 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_856:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2441,  v538);
              }

              if (*v653 != 2)
              {
                v538 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                goto LABEL_856;
              }

              *(_BYTE *)(*a3 + v296) = *(_BYTE *)(v270 + v289);
              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v270 + v289 + 1);
              unsigned __int16 v297 = *((_WORD *)a3 + 6) + 2;
              *((_WORD *)a3 + 6) = v297;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_858:
                v539 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_860:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2442,  v539);
              }

              if (*v653 != 2)
              {
                v539 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                goto LABEL_860;
              }

              *(_BYTE *)(*a3 + v297) = *(_BYTE *)(v271 + v289);
              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v271 + v289 + 1);
              unsigned __int16 v298 = *((_WORD *)a3 + 6) + 2;
              *((_WORD *)a3 + 6) = v298;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_862:
                v540 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_864:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2443,  v540);
              }

              if (*v653 != 2)
              {
                v540 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                goto LABEL_864;
              }

              *(_BYTE *)(*a3 + v298) = *(_BYTE *)(v272 + v289);
              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(v272 + v289 + 1);
              *((_WORD *)a3 + 6) += 2;
            }

            LOBYTE(v264) = v264 >> 1;
            v289 += 2LL;
          }

          while (v289 != 16);
          *(_BYTE *)a4 = v650;
          if (!v287) {
            goto LABEL_596;
          }
          int v86 = 0;
          int v299 = *(_DWORD *)v287;
          *(_WORD *)(a4 + 5) = *(_WORD *)(v287 + 4);
          *(_DWORD *)(a4 + 1) = v299;
LABEL_622:
          if (*v18 == 2) {
            _WORD *v16 = *v23;
          }
          *uint64_t v18 = 15;
          return 0LL;
        case 257:
          v300 = a1;
          int v301 = *a1;
          int v302 = a1[2];
          v664 = (const void **)(a1 + 6);
          int v303 = v300[4];
          size_t v249 = v303;
          if ((_BYTE)v303) {
            v250 = *v664;
          }
          else {
            v250 = 0LL;
          }
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else if ((unsigned __int16)*v16 > v27)
          {
            if (*v653 == 2)
            {
              uint64_t v473 = *a3;
              *((_WORD *)a3 + 6) = v26 + 3;
              *(_BYTE *)(v473 + (unsigned __int16)(v26 + 2)) = v303 + 3;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
              }

              else
              {
                uint64_t v474 = (unsigned __int16)*v652;
                if ((unsigned __int16)*v16 > v474)
                {
                  if (*v653 == 2)
                  {
                    uint64_t v475 = *a3;
                    *((_WORD *)a3 + 6) = v474 + 1;
                    *(_BYTE *)(v475 + v474) = v301;
                    if (*((_BYTE *)a3 + 15))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                    }

                    else
                    {
                      uint64_t v476 = (unsigned __int16)*v652;
                      if ((unsigned __int16)*v16 > v476)
                      {
                        if (*v653 == 2)
                        {
                          uint64_t v477 = *a3;
                          *((_WORD *)a3 + 6) = v476 + 1;
                          *(_BYTE *)(v477 + v476) = v302;
                          if (*((_BYTE *)a3 + 15))
                          {
                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/core"
                                                   "stack/hci/hcicmdapi.c");
                          }

                          else
                          {
                            uint64_t v478 = (unsigned __int16)*v652;
                            if ((unsigned __int16)*v16 > v478)
                            {
                              if (*v653 == 2)
                              {
                                uint64_t v479 = *a3;
                                *((_WORD *)a3 + 6) = v478 + 1;
                                *(_BYTE *)(v479 + v478) = v303;
                                uint64_t v462 = *a3;
                                uint64_t v463 = *((unsigned __int16 *)a3 + 6);
                                if (*((_BYTE *)a3 + 15))
                                {
                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/corestack/hci/hcicmdapi.c");
                                  uint64_t v18 = (char *)a3 + 14;
                                  int v480 = 0;
                                }

                                else
                                {
                                  int v480 = (unsigned __int16)*v16 - (_DWORD)v463;
                                }

                                if (v480 < (int)v249) {
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2481,  "ByteStream_NumReadBytesAvail(*pBs) >= (decisionDataLength)");
                                }
                                if (*v18 != 2) {
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2481,  "(*pBs).__RWFlag == BYTESTREAM_WRITE");
                                }
                                goto LABEL_619;
                              }

                              v637 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1258:
                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2480,  v637);
                            }
                          }

                          v637 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                          goto LABEL_1258;
                        }

                        v636 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1254:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2479,  v636);
                      }
                    }

                    v636 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                    goto LABEL_1254;
                  }

                  v635 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1250:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2478,  v635);
                }
              }

              v635 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              goto LABEL_1250;
            }

            v634 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1246:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2477,  v634);
          }

          v634 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_1246;
        case 258:
          int v304 = *a1;
          v305 = (char *)*((void *)a1 + 1);
          v306 = (char *)*((void *)a1 + 2);
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
          }

          else if ((unsigned __int16)*v16 > v27)
          {
            if (*v653 == 2)
            {
              v307 = (__int128 *)*((void *)a1 + 3);
              uint64_t v308 = *a3;
              *((_WORD *)a3 + 6) = v26 + 3;
              *(_BYTE *)(v308 + (unsigned __int16)(v26 + 2)) = (18 * v304) | 1;
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
              }

              else
              {
                uint64_t v309 = (unsigned __int16)*v652;
                if ((unsigned __int16)*v16 > v309)
                {
                  if (*v653 == 2)
                  {
                    uint64_t v310 = *a3;
                    *((_WORD *)a3 + 6) = v309 + 1;
                    *(_BYTE *)(v310 + v309) = v304;
                    uint64_t v311 = v304;
                    if ((_BYTE)v304)
                    {
                      while (!*((_BYTE *)a3 + 15))
                      {
                        uint64_t v312 = (unsigned __int16)*v652;
                        if (*v653 != 2)
                        {
                          v516 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                          goto LABEL_769;
                        }

                        char v313 = *v305;
                        uint64_t v314 = *a3;
                        *((_WORD *)a3 + 6) = v312 + 1;
                        *(_BYTE *)(v314 + v312) = v313;
                        if (*((_BYTE *)a3 + 15))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corest"
                                                 "ack/hci/hcicmdapi.c");
LABEL_771:
                          v517 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_773:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2509,  v517);
                        }

                        uint64_t v315 = (unsigned __int16)*v652;
                        if (*v653 != 2)
                        {
                          v517 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                          goto LABEL_773;
                        }

                        char v316 = *v306;
                        uint64_t v317 = *a3;
                        *((_WORD *)a3 + 6) = v315 + 1;
                        *(_BYTE *)(v317 + v315) = v316;
                        if (*((_BYTE *)a3 + 15))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corest"
                                                 "ack/hci/hcicmdapi.c");
LABEL_775:
                          v518 = "ByteStream_NumReadBytesAvail(*pBs) >= (16)";
LABEL_777:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2510,  v518);
                        }

                        uint64_t v318 = *((unsigned __int16 *)a3 + 6);
                        if (*v653 != 2)
                        {
                          v518 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                          goto LABEL_777;
                        }

                        int v86 = 0;
                        __int128 v319 = *v307++;
                        *(_OWORD *)(*a3 + v318) = v319;
                        *v652 += 16;
                        ++v306;
                        ++v305;
                        if (!--v311) {
                          goto LABEL_622;
                        }
                      }

                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_767:
                      v516 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_769:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2508,  v516);
                    }

                    goto LABEL_596;
                  }

                  v584 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1045:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2505,  v584);
                }
              }

              v584 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              goto LABEL_1045;
            }

            v583 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1041:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2504,  v583);
          }

          v583 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
          goto LABEL_1041;
        default:
          switch(v17)
          {
            case 230:
              uint64_t v87 = a1;
              int v88 = *a1;
              unsigned int v89 = a1[2];
              unsigned int v90 = a1[4];
              int v91 = a1[6];
              int v92 = a1[8];
              int v93 = a1[10];
              int v94 = a1[12];
              int v95 = a1[14];
              v657 = a1 + 18;
              int v96 = v87[16];
              uint64_t v97 = v96;
              if ((_BYTE)v96)
              {
                uint64_t v98 = *(char **)v657;
                uint64_t v99 = (_BYTE *)*((void *)v657 + 1);
                uint64_t v100 = (_BYTE *)*((void *)v657 + 2);
                uint64_t v101 = (char *)*((void *)v657 + 3);
                uint64_t v102 = (char *)*((void *)v657 + 4);
                uint64_t v103 = (char *)*((void *)v657 + 5);
                uint64_t v104 = (char *)*((void *)v657 + 6);
              }

              else
              {
                uint64_t v98 = 0LL;
                uint64_t v99 = 0LL;
                uint64_t v100 = 0LL;
                uint64_t v101 = 0LL;
                uint64_t v102 = 0LL;
                uint64_t v103 = 0LL;
                uint64_t v104 = 0LL;
              }

              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
              }

              else if ((unsigned __int16)*v16 > v27)
              {
                if (*v653 == 2)
                {
                  uint64_t v333 = *a3;
                  *((_WORD *)a3 + 6) = v26 + 3;
                  *(_BYTE *)(v333 + (unsigned __int16)(v26 + 2)) = 9 * v96 + 16;
                  if (*((_BYTE *)a3 + 15))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                  }

                  else
                  {
                    uint64_t v334 = (unsigned __int16)*v652;
                    if ((unsigned __int16)*v16 > v334)
                    {
                      if (*v653 == 2)
                      {
                        uint64_t v335 = *a3;
                        *((_WORD *)a3 + 6) = v334 + 1;
                        *(_BYTE *)(v335 + v334) = v88;
                        if (*((_BYTE *)a3 + 15))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corest"
                                                 "ack/hci/hcicmdapi.c");
                        }

                        else
                        {
                          uint64_t v336 = (unsigned __int16)*v652;
                          if ((unsigned __int16)*v16 - (int)v336 > 2)
                          {
                            if (*v653 == 2)
                            {
                              if (!HIBYTE(v89))
                              {
                                *(_BYTE *)(*a3 + v336) = v89;
                                *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v89);
                                *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 2) = BYTE2(v89);
                                unsigned __int16 v337 = *((_WORD *)a3 + 6) + 3;
                                *((_WORD *)a3 + 6) = v337;
                                if (*((_BYTE *)a3 + 15))
                                {
                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/corestack/hci/hcicmdapi.c");
                                }

                                else if ((unsigned __int16)*v16 - v337 > 2)
                                {
                                  if (*v653 == 2)
                                  {
                                    if (!HIBYTE(v90))
                                    {
                                      *(_BYTE *)(*a3 + v337) = v90;
                                      *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v90);
                                      *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 2) = BYTE2(v90);
                                      __int16 v338 = *((_WORD *)a3 + 6);
                                      *((_WORD *)a3 + 6) = v338 + 3;
                                      if (*((_BYTE *)a3 + 15))
                                      {
                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/corestack/hci/hcicmdapi.c");
                                      }

                                      else
                                      {
                                        uint64_t v18 = (char *)a3 + 14;
                                        if ((unsigned __int16)*v16 > (unsigned __int16)(v338 + 3))
                                        {
                                          if (*v653 == 2)
                                          {
                                            uint64_t v339 = *a3;
                                            *((_WORD *)a3 + 6) = v338 + 4;
                                            *(_BYTE *)(v339 + (unsigned __int16)(v338 + 3)) = v91;
                                            if (*((_BYTE *)a3 + 15))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/corestack/hci/hcicmdapi.c");
                                            }

                                            else
                                            {
                                              uint64_t v340 = (unsigned __int16)*v652;
                                              if ((unsigned __int16)*v16 > v340)
                                              {
                                                if (*v653 == 2)
                                                {
                                                  uint64_t v341 = *a3;
                                                  *((_WORD *)a3 + 6) = v340 + 1;
                                                  *(_BYTE *)(v341 + v340) = v92;
                                                  if (*((_BYTE *)a3 + 15))
                                                  {
                                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileB"
                                                                           "luetooth_base/Stack/corestack/hci/hcicmdapi.c");
                                                  }

                                                  else
                                                  {
                                                    uint64_t v342 = (unsigned __int16)*v652;
                                                    if ((unsigned __int16)*v16 > v342)
                                                    {
                                                      if (*v653 == 2)
                                                      {
                                                        uint64_t v343 = *a3;
                                                        *((_WORD *)a3 + 6) = v342 + 1;
                                                        *(_BYTE *)(v343 + v342) = v93;
                                                        if (*((_BYTE *)a3 + 15))
                                                        {
                                                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/M"
                                                                                 "obileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                                                        }

                                                        else
                                                        {
                                                          uint64_t v344 = (unsigned __int16)*v652;
                                                          if ((unsigned __int16)*v16 - (int)v344 > 1)
                                                          {
                                                            if (*v653 == 2)
                                                            {
                                                              *(_BYTE *)(*a3 + v344) = v94;
                                                              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v94);
                                                              unsigned __int16 v345 = *((_WORD *)a3 + 6) + 2;
                                                              *((_WORD *)a3 + 6) = v345;
                                                              if (*((_BYTE *)a3 + 15))
                                                              {
                                                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sou"
                                                                                       "rces/MobileBluetooth_base/Stack/c"
                                                                                       "orestack/hci/hcicmdapi.c");
                                                              }

                                                              else if ((unsigned __int16)*v16 - v345 > 1)
                                                              {
                                                                if (*v653 == 2)
                                                                {
                                                                  *(_BYTE *)(*a3 + v345) = v95;
                                                                  *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v95);
                                                                  __int16 v346 = *((_WORD *)a3 + 6);
                                                                  *((_WORD *)a3 + 6) = v346 + 2;
                                                                  if (*((_BYTE *)a3 + 15))
                                                                  {
                                                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/corestack/hci/hcicmdapi.c");
                                                                  }

                                                                  else if ((unsigned __int16)*v16 > (unsigned __int16)(v346 + 2))
                                                                  {
                                                                    if (*v653 == 2)
                                                                    {
                                                                      uint64_t v347 = *a3;
                                                                      *((_WORD *)a3 + 6) = v346 + 3;
                                                                      *(_BYTE *)(v347 + (unsigned __int16)(v346 + 2)) = v96;
                                                                      if ((_BYTE)v96)
                                                                      {
                                                                        while (!*((_BYTE *)a3 + 15))
                                                                        {
                                                                          uint64_t v348 = (unsigned __int16)*v652;
                                                                          if (*v653 != 2)
                                                                          {
                                                                            v496 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                            goto LABEL_689;
                                                                          }

                                                                          char v349 = *v98;
                                                                          uint64_t v350 = *a3;
                                                                          *((_WORD *)a3 + 6) = v348 + 1;
                                                                          *(_BYTE *)(v350 + v348) = v349;
                                                                          if (*((_BYTE *)a3 + 15))
                                                                          {
                                                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.a"
                                                                                                   "pple.xbs/Sources/Mobi"
                                                                                                   "leBluetooth_base/Stac"
                                                                                                   "k/corestack/hci/hcicmdapi.c");
LABEL_691:
                                                                            v497 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_693:
                                                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mobi leBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2046,  v497);
                                                                          }

                                                                          uint64_t v351 = (unsigned __int16)*v652;
                                                                          if (*v653 != 2)
                                                                          {
                                                                            v497 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                            goto LABEL_693;
                                                                          }

                                                                          *(_BYTE *)(*a3 + v351) = *v99;
                                                                          *(_BYTE *)(*a3
                                                                          unsigned __int16 v352 = *((_WORD *)a3 + 6) + 2;
                                                                          *((_WORD *)a3 + 6) = v352;
                                                                          if (*((_BYTE *)a3 + 15))
                                                                          {
                                                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.a"
                                                                                                   "pple.xbs/Sources/Mobi"
                                                                                                   "leBluetooth_base/Stac"
                                                                                                   "k/corestack/hci/hcicmdapi.c");
LABEL_695:
                                                                            v498 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_697:
                                                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mobi leBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2047,  v498);
                                                                          }

                                                                          if (*v653 != 2)
                                                                          {
                                                                            v498 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                            goto LABEL_697;
                                                                          }

                                                                          *(_BYTE *)(*a3 + v352) = *v100;
                                                                          *(_BYTE *)(*a3
                                                                          __int16 v353 = *((_WORD *)a3 + 6);
                                                                          *((_WORD *)a3 + 6) = v353 + 2;
                                                                          if (*((_BYTE *)a3 + 15))
                                                                          {
                                                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.a"
                                                                                                   "pple.xbs/Sources/Mobi"
                                                                                                   "leBluetooth_base/Stac"
                                                                                                   "k/corestack/hci/hcicmdapi.c");
LABEL_699:
                                                                            v499 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_701:
                                                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mobi leBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2048,  v499);
                                                                          }

                                                                          if (*v653 != 2)
                                                                          {
                                                                            v499 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                            goto LABEL_701;
                                                                          }

                                                                          char v354 = *v101;
                                                                          uint64_t v355 = *a3;
                                                                          *((_WORD *)a3 + 6) = v353 + 3;
                                                                          *(_BYTE *)(v355 + (unsigned __int16)(v353 + 2)) = v354;
                                                                          if (*((_BYTE *)a3 + 15))
                                                                          {
                                                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.a"
                                                                                                   "pple.xbs/Sources/Mobi"
                                                                                                   "leBluetooth_base/Stac"
                                                                                                   "k/corestack/hci/hcicmdapi.c");
LABEL_703:
                                                                            v500 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_705:
                                                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mobi leBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2049,  v500);
                                                                          }

                                                                          uint64_t v356 = (unsigned __int16)*v652;
                                                                          if (*v653 != 2)
                                                                          {
                                                                            v500 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                            goto LABEL_705;
                                                                          }

                                                                          char v357 = *v102;
                                                                          uint64_t v358 = *a3;
                                                                          *((_WORD *)a3 + 6) = v356 + 1;
                                                                          *(_BYTE *)(v358 + v356) = v357;
                                                                          if (*((_BYTE *)a3 + 15))
                                                                          {
                                                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.a"
                                                                                                   "pple.xbs/Sources/Mobi"
                                                                                                   "leBluetooth_base/Stac"
                                                                                                   "k/corestack/hci/hcicmdapi.c");
LABEL_707:
                                                                            v501 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_709:
                                                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mobi leBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2050,  v501);
                                                                          }

                                                                          uint64_t v359 = (unsigned __int16)*v652;
                                                                          if (*v653 != 2)
                                                                          {
                                                                            v501 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                            goto LABEL_709;
                                                                          }

                                                                          char v360 = *v103;
                                                                          uint64_t v361 = *a3;
                                                                          *((_WORD *)a3 + 6) = v359 + 1;
                                                                          *(_BYTE *)(v361 + v359) = v360;
                                                                          if (*((_BYTE *)a3 + 15))
                                                                          {
                                                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.a"
                                                                                                   "pple.xbs/Sources/Mobi"
                                                                                                   "leBluetooth_base/Stac"
                                                                                                   "k/corestack/hci/hcicmdapi.c");
LABEL_711:
                                                                            v502 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_713:
                                                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mobi leBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2051,  v502);
                                                                          }

                                                                          uint64_t v362 = (unsigned __int16)*v652;
                                                                          if (*v653 != 2)
                                                                          {
                                                                            v502 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                            goto LABEL_713;
                                                                          }

                                                                          int v86 = 0;
                                                                          char v363 = *v104++;
                                                                          uint64_t v364 = *a3;
                                                                          *((_WORD *)a3 + 6) = v362 + 1;
                                                                          *(_BYTE *)(v364 + v362) = v363;
                                                                          ++v103;
                                                                          ++v102;
                                                                          ++v101;
                                                                          v100 += 2;
                                                                          v99 += 2;
                                                                          ++v98;
                                                                          if (!--v97) {
                                                                            goto LABEL_622;
                                                                          }
                                                                        }

                                                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple"
                                                                                               ".xbs/Sources/MobileBlueto"
                                                                                               "oth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_687:
                                                                        v496 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_689:
                                                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBl uetooth_base/Stack/corestack/hci/hcicmdapi.c",  2045,  v496);
                                                                      }

                                                                      goto LABEL_596;
                                                                    }

                                                                    v598 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1102:
                                                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBlueto oth_base/Stack/corestack/hci/hcicmdapi.c",  2042,  v598);
                                                                  }

                                                                  v598 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                                                  goto LABEL_1102;
                                                                }

                                                                v597 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1098:
                                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_ base/Stack/corestack/hci/hcicmdapi.c",  2041,  v597);
                                                              }

                                                              v597 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
                                                              goto LABEL_1098;
                                                            }

                                                            v596 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1094:
                                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base /Stack/corestack/hci/hcicmdapi.c",  2040,  v596);
                                                          }
                                                        }

                                                        v596 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
                                                        goto LABEL_1094;
                                                      }

                                                      v595 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1090:
                                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack /corestack/hci/hcicmdapi.c",  2039,  v595);
                                                    }
                                                  }

                                                  v595 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                                  goto LABEL_1090;
                                                }

                                                v594 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1086:
                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/cores tack/hci/hcicmdapi.c",  2038,  v594);
                                              }
                                            }

                                            v594 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                            goto LABEL_1086;
                                          }

                                          v593 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1082:
                                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2037,  v593);
                                        }
                                      }

                                      v593 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                      goto LABEL_1082;
                                    }

                                    v592 = "0 == ((SDU_Interval_S_To_M) & 0xFF000000)";
                                  }

                                  else
                                  {
                                    v592 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                  }

LABEL_1078:
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2036,  v592);
                                }

                                v592 = "ByteStream_NumReadBytesAvail(*pBs) >= 3";
                                goto LABEL_1078;
                              }

                              v591 = "0 == ((SDU_Interval_M_To_S) & 0xFF000000)";
                            }

                            else
                            {
                              v591 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                            }

                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2035,  v591);
                          }
                        }

                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2035,  "ByteStream_NumReadBytesAvail(*pBs) >= 3");
                      }

                      v590 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1068:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2034,  v590);
                    }
                  }

                  v590 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                  goto LABEL_1068;
                }

                v589 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1064:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2033,  v589);
              }

              v589 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              goto LABEL_1064;
            case 231:
              v205 = a1;
              int v206 = *a1;
              int v207 = a1[2];
              int v208 = a1[4];
              int v209 = a1[6];
              int v210 = a1[8];
              int v211 = a1[10];
              int v212 = a1[12];
              int v213 = a1[14];
              int v214 = a1[16];
              v659 = a1 + 20;
              int v215 = v205[18];
              uint64_t v216 = v215;
              if ((_BYTE)v215)
              {
                v217 = *(char **)v659;
                v218 = (char *)*((void *)v659 + 1);
                v219 = (_BYTE *)*((void *)v659 + 2);
                v220 = (_BYTE *)*((void *)v659 + 3);
                v221 = (_BYTE *)*((void *)v659 + 4);
                v222 = (_BYTE *)*((void *)v659 + 5);
                v223 = (char *)*((void *)v659 + 6);
                v224 = (char *)*((void *)v659 + 7);
                v225 = (char *)*((void *)v659 + 8);
                v226 = (char *)*((void *)v659 + 9);
              }

              else
              {
                v217 = 0LL;
                v218 = 0LL;
                v219 = 0LL;
                v220 = 0LL;
                v221 = 0LL;
                v222 = 0LL;
                v223 = 0LL;
                v224 = 0LL;
                v225 = 0LL;
                v226 = 0LL;
              }

              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
              }

              else if ((unsigned __int16)*v16 > v27)
              {
                if (*v653 == 2)
                {
                  uint64_t v365 = *a3;
                  *((_WORD *)a3 + 6) = v26 + 3;
                  *(_BYTE *)(v365 + (unsigned __int16)(v26 + 2)) = 14 * v215 + 16;
                  if (*((_BYTE *)a3 + 15))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                  }

                  else
                  {
                    uint64_t v366 = (unsigned __int16)*v652;
                    if ((unsigned __int16)*v16 > v366)
                    {
                      if (*v653 == 2)
                      {
                        uint64_t v367 = *a3;
                        *((_WORD *)a3 + 6) = v366 + 1;
                        *(_BYTE *)(v367 + v366) = v206;
                        if (*((_BYTE *)a3 + 15))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corest"
                                                 "ack/hci/hcicmdapi.c");
                        }

                        else
                        {
                          uint64_t v368 = (unsigned __int16)*v652;
                          if ((unsigned __int16)*v16 - (int)v368 > 3)
                          {
                            if (*v653 == 2)
                            {
                              *(_BYTE *)(*a3 + v368) = v207;
                              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v207);
                              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 2) = BYTE2(v207);
                              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 3) = HIBYTE(v207);
                              unsigned __int16 v369 = *((_WORD *)a3 + 6) + 4;
                              *((_WORD *)a3 + 6) = v369;
                              if (*((_BYTE *)a3 + 15))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "corestack/hci/hcicmdapi.c");
                              }

                              else if ((unsigned __int16)*v16 - v369 > 3)
                              {
                                if (*v653 == 2)
                                {
                                  *(_BYTE *)(*a3 + v369) = v208;
                                  *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v208);
                                  *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 2) = BYTE2(v208);
                                  *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 3) = HIBYTE(v208);
                                  __int16 v370 = *((_WORD *)a3 + 6);
                                  *((_WORD *)a3 + 6) = v370 + 4;
                                  if (*((_BYTE *)a3 + 15))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/corestack/hci/hcicmdapi.c");
                                  }

                                  else if ((unsigned __int16)*v16 > (unsigned __int16)(v370 + 4))
                                  {
                                    if (*v653 == 2)
                                    {
                                      uint64_t v371 = *a3;
                                      *((_WORD *)a3 + 6) = v370 + 5;
                                      *(_BYTE *)(v371 + (unsigned __int16)(v370 + 4)) = v209;
                                      if (*((_BYTE *)a3 + 15))
                                      {
                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/corestack/hci/hcicmdapi.c");
                                      }

                                      else
                                      {
                                        uint64_t v372 = (unsigned __int16)*v652;
                                        if ((unsigned __int16)*v16 > v372)
                                        {
                                          if (*v653 == 2)
                                          {
                                            uint64_t v373 = *a3;
                                            *((_WORD *)a3 + 6) = v372 + 1;
                                            *(_BYTE *)(v373 + v372) = v210;
                                            if (*((_BYTE *)a3 + 15))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/corestack/hci/hcicmdapi.c");
                                            }

                                            else
                                            {
                                              uint64_t v374 = (unsigned __int16)*v652;
                                              if ((unsigned __int16)*v16 - (int)v374 > 1)
                                              {
                                                if (*v653 == 2)
                                                {
                                                  *(_BYTE *)(*a3 + v374) = v211;
                                                  *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v211);
                                                  __int16 v375 = *((_WORD *)a3 + 6);
                                                  *((_WORD *)a3 + 6) = v375 + 2;
                                                  if (*((_BYTE *)a3 + 15))
                                                  {
                                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileB"
                                                                           "luetooth_base/Stack/corestack/hci/hcicmdapi.c");
                                                  }

                                                  else if ((unsigned __int16)*v16 > (unsigned __int16)(v375 + 2))
                                                  {
                                                    if (*v653 == 2)
                                                    {
                                                      uint64_t v376 = *a3;
                                                      *((_WORD *)a3 + 6) = v375 + 3;
                                                      *(_BYTE *)(v376 + (unsigned __int16)(v375 + 2)) = v212;
                                                      if (*((_BYTE *)a3 + 15))
                                                      {
                                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                                                      }

                                                      else
                                                      {
                                                        uint64_t v377 = (unsigned __int16)*v652;
                                                        uint64_t v18 = (char *)a3 + 14;
                                                        if ((unsigned __int16)*v16 > v377)
                                                        {
                                                          if (*v653 == 2)
                                                          {
                                                            uint64_t v378 = *a3;
                                                            *((_WORD *)a3 + 6) = v377 + 1;
                                                            *(_BYTE *)(v378 + v377) = v213;
                                                            if (*((_BYTE *)a3 + 15))
                                                            {
                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sourc"
                                                                                     "es/MobileBluetooth_base/Stack/cores"
                                                                                     "tack/hci/hcicmdapi.c");
                                                            }

                                                            else
                                                            {
                                                              uint64_t v379 = (unsigned __int16)*v652;
                                                              if ((unsigned __int16)*v16 > v379)
                                                              {
                                                                if (*v653 == 2)
                                                                {
                                                                  uint64_t v380 = *a3;
                                                                  *((_WORD *)a3 + 6) = v379 + 1;
                                                                  *(_BYTE *)(v380 + v379) = v214;
                                                                  if (*((_BYTE *)a3 + 15))
                                                                  {
                                                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/corestack/hci/hcicmdapi.c");
                                                                  }

                                                                  else
                                                                  {
                                                                    uint64_t v381 = (unsigned __int16)*v652;
                                                                    if ((unsigned __int16)*v16 > v381)
                                                                    {
                                                                      if (*v653 == 2)
                                                                      {
                                                                        uint64_t v382 = *a3;
                                                                        *((_WORD *)a3 + 6) = v381 + 1;
                                                                        *(_BYTE *)(v382 + v381) = v215;
                                                                        if ((_BYTE)v215)
                                                                        {
                                                                          while (!*((_BYTE *)a3 + 15))
                                                                          {
                                                                            uint64_t v383 = (unsigned __int16)*v652;
                                                                            if (*v653 != 2)
                                                                            {
                                                                              v503 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                              goto LABEL_717;
                                                                            }

                                                                            char v384 = *v217;
                                                                            uint64_t v385 = *a3;
                                                                            *((_WORD *)a3 + 6) = v383 + 1;
                                                                            *(_BYTE *)(v385 + v383) = v384;
                                                                            if (*((_BYTE *)a3 + 15))
                                                                            {
                                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_719:
                                                                              v504 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_721:
                                                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mo bileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2146,  v504);
                                                                            }

                                                                            uint64_t v386 = (unsigned __int16)*v652;
                                                                            if (*v653 != 2)
                                                                            {
                                                                              v504 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                              goto LABEL_721;
                                                                            }

                                                                            char v387 = *v218;
                                                                            uint64_t v388 = *a3;
                                                                            *((_WORD *)a3 + 6) = v386 + 1;
                                                                            *(_BYTE *)(v388 + v386) = v387;
                                                                            if (*((_BYTE *)a3 + 15))
                                                                            {
                                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_723:
                                                                              v505 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_725:
                                                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mo bileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2147,  v505);
                                                                            }

                                                                            uint64_t v389 = (unsigned __int16)*v652;
                                                                            if (*v653 != 2)
                                                                            {
                                                                              v505 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                              goto LABEL_725;
                                                                            }

                                                                            *(_BYTE *)(*a3 + v389) = *v219;
                                                                            *(_BYTE *)(*a3
                                                                            unsigned __int16 v390 = *((_WORD *)a3 + 6) + 2;
                                                                            *((_WORD *)a3 + 6) = v390;
                                                                            if (*((_BYTE *)a3 + 15))
                                                                            {
                                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_727:
                                                                              v506 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_729:
                                                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mo bileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2148,  v506);
                                                                            }

                                                                            if (*v653 != 2)
                                                                            {
                                                                              v506 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                              goto LABEL_729;
                                                                            }

                                                                            *(_BYTE *)(*a3 + v390) = *v220;
                                                                            *(_BYTE *)(*a3
                                                                            unsigned __int16 v391 = *((_WORD *)a3 + 6) + 2;
                                                                            *((_WORD *)a3 + 6) = v391;
                                                                            if (*((_BYTE *)a3 + 15))
                                                                            {
                                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_731:
                                                                              v507 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_733:
                                                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mo bileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2149,  v507);
                                                                            }

                                                                            if (*v653 != 2)
                                                                            {
                                                                              v507 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                              goto LABEL_733;
                                                                            }

                                                                            *(_BYTE *)(*a3 + v391) = *v221;
                                                                            *(_BYTE *)(*a3
                                                                            unsigned __int16 v392 = *((_WORD *)a3 + 6) + 2;
                                                                            *((_WORD *)a3 + 6) = v392;
                                                                            if (*((_BYTE *)a3 + 15))
                                                                            {
                                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_735:
                                                                              v508 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_737:
                                                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mo bileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2150,  v508);
                                                                            }

                                                                            if (*v653 != 2)
                                                                            {
                                                                              v508 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                              goto LABEL_737;
                                                                            }

                                                                            *(_BYTE *)(*a3 + v392) = *v222;
                                                                            *(_BYTE *)(*a3
                                                                            __int16 v393 = *((_WORD *)a3 + 6);
                                                                            *((_WORD *)a3 + 6) = v393 + 2;
                                                                            if (*((_BYTE *)a3 + 15))
                                                                            {
                                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_739:
                                                                              v509 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_741:
                                                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mo bileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2151,  v509);
                                                                            }

                                                                            if (*v653 != 2)
                                                                            {
                                                                              v509 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                              goto LABEL_741;
                                                                            }

                                                                            char v394 = *v223;
                                                                            uint64_t v395 = *a3;
                                                                            *((_WORD *)a3 + 6) = v393 + 3;
                                                                            *(_BYTE *)(v395
                                                                                     + (unsigned __int16)(v393 + 2)) = v394;
                                                                            if (*((_BYTE *)a3 + 15))
                                                                            {
                                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_743:
                                                                              v510 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_745:
                                                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mo bileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2152,  v510);
                                                                            }

                                                                            uint64_t v396 = (unsigned __int16)*v652;
                                                                            if (*v653 != 2)
                                                                            {
                                                                              v510 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                              goto LABEL_745;
                                                                            }

                                                                            char v397 = *v224;
                                                                            uint64_t v398 = *a3;
                                                                            *((_WORD *)a3 + 6) = v396 + 1;
                                                                            *(_BYTE *)(v398 + v396) = v397;
                                                                            if (*((_BYTE *)a3 + 15))
                                                                            {
                                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_747:
                                                                              v511 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_749:
                                                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mo bileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2153,  v511);
                                                                            }

                                                                            uint64_t v399 = (unsigned __int16)*v652;
                                                                            if (*v653 != 2)
                                                                            {
                                                                              v511 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                              goto LABEL_749;
                                                                            }

                                                                            char v400 = *v225;
                                                                            uint64_t v401 = *a3;
                                                                            *((_WORD *)a3 + 6) = v399 + 1;
                                                                            *(_BYTE *)(v401 + v399) = v400;
                                                                            if (*((_BYTE *)a3 + 15))
                                                                            {
                                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_751:
                                                                              v512 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_753:
                                                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mo bileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2154,  v512);
                                                                            }

                                                                            uint64_t v402 = (unsigned __int16)*v652;
                                                                            if (*v653 != 2)
                                                                            {
                                                                              v512 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                                              goto LABEL_753;
                                                                            }

                                                                            int v86 = 0;
                                                                            char v403 = *v226++;
                                                                            *((_WORD *)a3 + 6) = v402 + 1;
                                                                            *(_BYTE *)(*a3 + v402) = v403;
                                                                            ++v225;
                                                                            ++v224;
                                                                            ++v223;
                                                                            v222 += 2;
                                                                            v221 += 2;
                                                                            v220 += 2;
                                                                            v219 += 2;
                                                                            ++v218;
                                                                            ++v217;
                                                                            if (!--v216) {
                                                                              goto LABEL_622;
                                                                            }
                                                                          }

                                                                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.app"
                                                                                                 "le.xbs/Sources/MobileBl"
                                                                                                 "uetooth_base/Stack/core"
                                                                                                 "stack/hci/hcicmdapi.c");
LABEL_715:
                                                                          v503 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_717:
                                                                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mobile Bluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2145,  v503);
                                                                        }

                                                                        goto LABEL_596;
                                                                      }

                                                                      v609 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1146:
                                                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBlue tooth_base/Stack/corestack/hci/hcicmdapi.c",  2142,  v609);
                                                                    }
                                                                  }

                                                                  v609 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                                                  goto LABEL_1146;
                                                                }

                                                                v608 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1142:
                                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_ base/Stack/corestack/hci/hcicmdapi.c",  2141,  v608);
                                                              }
                                                            }

                                                            v608 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                                            goto LABEL_1142;
                                                          }

                                                          v607 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1138:
                                                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/S tack/corestack/hci/hcicmdapi.c",  2140,  v607);
                                                        }
                                                      }

                                                      v607 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                                      goto LABEL_1138;
                                                    }

                                                    v606 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1134:
                                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/c orestack/hci/hcicmdapi.c",  2139,  v606);
                                                  }

                                                  v606 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                                  goto LABEL_1134;
                                                }

                                                v605 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1130:
                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/cores tack/hci/hcicmdapi.c",  2138,  v605);
                                              }
                                            }

                                            v605 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
                                            goto LABEL_1130;
                                          }

                                          v604 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1126:
                                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2137,  v604);
                                        }
                                      }

                                      v604 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                      goto LABEL_1126;
                                    }

                                    v603 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1122:
                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2136,  v603);
                                  }

                                  v603 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                  goto LABEL_1122;
                                }

                                v602 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1118:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2135,  v602);
                              }

                              v602 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
                              goto LABEL_1118;
                            }

                            v601 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1114:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2134,  v601);
                          }
                        }

                        v601 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
                        goto LABEL_1114;
                      }

                      v600 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1110:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2133,  v600);
                    }
                  }

                  v600 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                  goto LABEL_1110;
                }

                v599 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1106:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2132,  v599);
              }

              v599 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              goto LABEL_1106;
            case 232:
              v227 = a1;
              v660 = a1 + 2;
              int v228 = *v227;
              uint64_t v229 = *v227;
              if ((_DWORD)v229)
              {
                v230 = *(_BYTE ***)v660;
                v231 = (_BYTE **)*((void *)v660 + 1);
              }

              else
              {
                v230 = 0LL;
                v231 = 0LL;
              }

              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
              }

              else if ((unsigned __int16)*v16 > v27)
              {
                if (*v653 == 2)
                {
                  uint64_t v404 = *a3;
                  *((_WORD *)a3 + 6) = v26 + 3;
                  *(_BYTE *)(v404 + (unsigned __int16)(v26 + 2)) = (4 * v228) | 2;
                  if (*((_BYTE *)a3 + 15))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                  }

                  else
                  {
                    uint64_t v405 = (unsigned __int16)*v652;
                    if ((unsigned __int16)*v16 > v405)
                    {
                      if (*v653 == 2)
                      {
                        uint64_t v406 = *a3;
                        *((_WORD *)a3 + 6) = v405 + 1;
                        *(_BYTE *)(v406 + v405) = v228;
                        if ((_DWORD)v229)
                        {
                          while (!*((_BYTE *)a3 + 15))
                          {
                            uint64_t v407 = (unsigned __int16)*v652;
                            if (*v653 != 2)
                            {
                              v513 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                              goto LABEL_757;
                            }

                            *(_BYTE *)(*a3 + v407) = **v230;
                            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = (*v230)[1];
                            unsigned __int16 v408 = *((_WORD *)a3 + 6) + 2;
                            *((_WORD *)a3 + 6) = v408;
                            if (*((_BYTE *)a3 + 15))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/co"
                                                     "restack/hci/hcicmdapi.c");
LABEL_759:
                              v514 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_761:
                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2188,  v514);
                            }

                            if (*v653 != 2)
                            {
                              v514 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                              goto LABEL_761;
                            }

                            int v86 = 0;
                            *(_BYTE *)(*a3 + v408) = **v231;
                            v409 = *v231++;
                            *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = v409[1];
                            *((_WORD *)a3 + 6) += 2;
                            v410 = *v230++;
                            *a5++ = *(_WORD *)v410;
                            if (!--v229) {
                              goto LABEL_622;
                            }
                          }

                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corest"
                                                 "ack/hci/hcicmdapi.c");
LABEL_755:
                          v513 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_757:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2187,  v513);
                        }

                        goto LABEL_596;
                      }

                      v611 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1154:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2184,  v611);
                    }
                  }

                  v611 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                  goto LABEL_1154;
                }

                v610 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1150:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2183,  v610);
              }

              v610 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              goto LABEL_1150;
            case 239:
              v232 = a1;
              int v233 = *a1;
              int v234 = a1[2];
              int v235 = a1[4];
              v236 = (_OWORD *)*((void *)a1 + 3);
              int v237 = a1[8];
              int v238 = a1[10];
              v661 = (char **)(a1 + 14);
              int v239 = v232[12];
              uint64_t v240 = v239;
              if ((_BYTE)v239) {
                v241 = *v661;
              }
              else {
                v241 = 0LL;
              }
              if (*((_BYTE *)a3 + 15))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
              }

              else if ((unsigned __int16)*v16 > v27)
              {
                if (*v653 == 2)
                {
                  uint64_t v411 = *a3;
                  *((_WORD *)a3 + 6) = v26 + 3;
                  *(_BYTE *)(v411 + (unsigned __int16)(v26 + 2)) = v239 + 25;
                  if (*((_BYTE *)a3 + 15))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
                  }

                  else
                  {
                    uint64_t v412 = (unsigned __int16)*v652;
                    if ((unsigned __int16)*v16 > v412)
                    {
                      if (*v653 == 2)
                      {
                        uint64_t v413 = *a3;
                        *((_WORD *)a3 + 6) = v412 + 1;
                        *(_BYTE *)(v413 + v412) = v233;
                        if (*((_BYTE *)a3 + 15))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corest"
                                                 "ack/hci/hcicmdapi.c");
                        }

                        else
                        {
                          uint64_t v414 = (unsigned __int16)*v652;
                          if ((unsigned __int16)*v16 - (int)v414 > 1)
                          {
                            if (*v653 == 2)
                            {
                              *(_BYTE *)(*a3 + v414) = v234;
                              *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v234);
                              __int16 v415 = *((_WORD *)a3 + 6);
                              *((_WORD *)a3 + 6) = v415 + 2;
                              if (*((_BYTE *)a3 + 15))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "corestack/hci/hcicmdapi.c");
                              }

                              else if ((unsigned __int16)*v16 > (unsigned __int16)(v415 + 2))
                              {
                                if (*v653 == 2)
                                {
                                  uint64_t v416 = *a3;
                                  *((_WORD *)a3 + 6) = v415 + 3;
                                  *(_BYTE *)(v416 + (unsigned __int16)(v415 + 2)) = v235;
                                  if (*((_BYTE *)a3 + 15))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/corestack/hci/hcicmdapi.c");
                                  }

                                  else
                                  {
                                    uint64_t v417 = *((unsigned __int16 *)a3 + 6);
                                    if ((unint64_t)(unsigned __int16)*v16 - v417 > 0xF)
                                    {
                                      if (*v653 == 2)
                                      {
                                        *(_OWORD *)(*a3 + v417) = *v236;
                                        __int16 v418 = *((_WORD *)a3 + 6);
                                        *((_WORD *)a3 + 6) = v418 + 16;
                                        if (*((_BYTE *)a3 + 15))
                                        {
                                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/corestack/hci/hcicmdapi.c");
                                        }

                                        else if ((unsigned __int16)*v16 > (unsigned __int16)(v418 + 16))
                                        {
                                          if (*v653 == 2)
                                          {
                                            uint64_t v419 = *a3;
                                            *((_WORD *)a3 + 6) = v418 + 17;
                                            *(_BYTE *)(v419 + (unsigned __int16)(v418 + 16)) = v237;
                                            if (*((_BYTE *)a3 + 15))
                                            {
                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/corestack/hci/hcicmdapi.c");
                                            }

                                            else
                                            {
                                              uint64_t v420 = (unsigned __int16)*v652;
                                              if ((unsigned __int16)*v16 - (int)v420 > 1)
                                              {
                                                if (*v653 == 2)
                                                {
                                                  *(_BYTE *)(*a3 + v420) = v238;
                                                  *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = BYTE1(v238);
                                                  __int16 v421 = *((_WORD *)a3 + 6);
                                                  *((_WORD *)a3 + 6) = v421 + 2;
                                                  if (*((_BYTE *)a3 + 15))
                                                  {
                                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileB"
                                                                           "luetooth_base/Stack/corestack/hci/hcicmdapi.c");
                                                  }

                                                  else if ((unsigned __int16)*v16 > (unsigned __int16)(v421 + 2))
                                                  {
                                                    if (*v653 == 2)
                                                    {
                                                      uint64_t v422 = *a3;
                                                      *((_WORD *)a3 + 6) = v421 + 3;
                                                      *(_BYTE *)(v422 + (unsigned __int16)(v421 + 2)) = v239;
                                                      if ((_BYTE)v239)
                                                      {
                                                        while (!*((_BYTE *)a3 + 15))
                                                        {
                                                          uint64_t v423 = (unsigned __int16)*v652;
                                                          if (*v653 != 2)
                                                          {
                                                            v515 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
                                                            goto LABEL_765;
                                                          }

                                                          char v424 = *v241++;
                                                          uint64_t v425 = *a3;
                                                          *((_WORD *)a3 + 6) = v423 + 1;
                                                          *(_BYTE *)(v425 + v423) = v424;
                                                          if (!--v240) {
                                                            goto LABEL_521;
                                                          }
                                                        }

                                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_763:
                                                        v515 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_765:
                                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Sta ck/corestack/hci/hcicmdapi.c",  2246,  v515);
                                                      }

LABEL_521:
                                                      if (!a7) {
                                                        goto LABEL_596;
                                                      }
                                                      int v86 = 0;
                                                      *a7 = v233;
                                                      goto LABEL_622;
                                                    }

                                                    v619 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1186:
                                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/c orestack/hci/hcicmdapi.c",  2243,  v619);
                                                  }

                                                  v619 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                                  goto LABEL_1186;
                                                }

                                                v618 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1182:
                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/cores tack/hci/hcicmdapi.c",  2242,  v618);
                                              }
                                            }

                                            v618 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
                                            goto LABEL_1182;
                                          }

                                          v617 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1178:
                                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2241,  v617);
                                        }

                                        v617 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                                        goto LABEL_1178;
                                      }

                                      v616 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1174:
                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2240,  v616);
                                    }
                                  }

                                  v616 = "ByteStream_NumReadBytesAvail(*pBs) >= (BROADCAST_CODE_SIZE)";
                                  goto LABEL_1174;
                                }

                                v615 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1170:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2239,  v615);
                              }

                              v615 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                              goto LABEL_1170;
                            }

                            v614 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1166:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2238,  v614);
                          }
                        }

                        v614 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
                        goto LABEL_1166;
                      }

                      v613 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1162:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2237,  v613);
                    }
                  }

                  v613 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
                  goto LABEL_1162;
                }

                v612 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_1158:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2236,  v612);
              }

              v612 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              goto LABEL_1158;
            default:
              goto LABEL_61;
          }
      }
  }

uint64_t sub_1001278B8(uint64_t *a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, _BYTE *a6, _BYTE *a7)
{
  int v13 = *(unsigned __int16 *)(a2 + 6) + 4;
  unint64_t v14 = sub_1000B17F4(*(unsigned __int16 *)(a2 + 6) + 4LL);
  if (!v14) {
    return 104LL;
  }
  *((_BYTE *)a3 + 15) = 0;
  *a3 = (uint64_t)v14;
  *((_WORD *)a3 + 4) = v13;
  *((_WORD *)a3 + 5) = v13;
  if (!(_WORD)v13) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2561,  "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_BYTE *)a3 + 14) = 2;
  *((_WORD *)a3 + 5) = v13;
  *((_WORD *)a3 + 6) = 1;
  *unint64_t v14 = 1;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    goto LABEL_138;
  }

  uint64_t v15 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) - (int)v15 <= 1)
  {
LABEL_138:
    int v105 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_140;
  }

  if (*((_BYTE *)a3 + 14) != 2)
  {
    int v105 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_140:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2563,  v105);
  }

  *(_BYTE *)(*a3 + v15) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(*a3 + *((unsigned __int16 *)a3 + 6) + 1) = *(_BYTE *)(a2 + 3);
  __int16 v16 = *((_WORD *)a3 + 6);
  *((_WORD *)a3 + 6) = v16 + 2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    goto LABEL_142;
  }

  if (*((unsigned __int16 *)a3 + 5) <= (unsigned __int16)(v16 + 2))
  {
LABEL_142:
    int v106 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_144;
  }

  __int128 ptr = v14;
  if (*((_BYTE *)a3 + 14) != 2)
  {
    int v106 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_144:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2564,  v106);
  }

  char v17 = *(_BYTE *)(a2 + 6);
  uint64_t v18 = *a3;
  *((_WORD *)a3 + 6) = v16 + 3;
  *(_BYTE *)(v18 + (unsigned __int16)(v16 + 2)) = v17;
  uint64_t v19 = *(unsigned __int8 **)(a2 + 8);
  if (v19)
  {
    int v20 = *v19;
    if (v20)
    {
      uint64_t v21 = 0LL;
      uint64_t v128 = a6 + 1;
      uint64_t v129 = a4;
      uint64_t v130 = a5;
      int v131 = v13;
      while (1)
      {
        switch(v20)
        {
          case 'a':
            uint64_t v22 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_146:
              int v107 = "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE";
LABEL_148:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2612,  v107);
            }

            uint64_t v23 = *((unsigned __int16 *)a3 + 6);
            if (*((_BYTE *)a3 + 14) != 2)
            {
              int v107 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
              goto LABEL_148;
            }

            uint64_t v24 = *v22;
            sub_1001F0050(*a3 + v23, *v22, 6uLL);
            *((_WORD *)a3 + 6) += 6;
            if (a5)
            {
              int v25 = *(_DWORD *)v24;
              *(_WORD *)(a5 + 4) = *(_WORD *)(v24 + 4);
              *(_DWORD *)a5 = v25;
            }

            if (a6)
            {
              int v26 = *(_DWORD *)v24;
              *((_WORD *)v128 + 2) = *(_WORD *)(v24 + 4);
              *(_DWORD *)uint64_t v128 = v26;
            }

            goto LABEL_110;
          case 'b':
            uint64_t v31 = (const void **)a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_154:
              uint64_t v109 = "ByteStream_NumReadBytesAvail(*pBs) >= (31)";
LABEL_156:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2725,  v109);
            }

            uint64_t v32 = *((unsigned __int16 *)a3 + 6);
            if (*((_BYTE *)a3 + 14) != 2)
            {
              uint64_t v109 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
              goto LABEL_156;
            }

            memmove((void *)(*a3 + v32), *v31, 0x1FuLL);
            __int16 v33 = *((_WORD *)a3 + 6) + 31;
LABEL_87:
            *((_WORD *)a3 + 6) = v33;
            goto LABEL_110;
          case 'c':
            uint64_t v34 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_158:
              uint64_t v110 = "ByteStream_NumReadBytesAvail(*pBs) >= (10)";
LABEL_159:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2694,  v110);
            }

            uint64_t v35 = *((unsigned __int16 *)a3 + 6);
            if (*((_BYTE *)a3 + 14) != 2)
            {
              uint64_t v110 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
              goto LABEL_159;
            }

LABEL_82:
            *(_OWORD *)(*a3 + v37) = *(_OWORD *)*v36;
            __int16 v61 = *((_WORD *)a3 + 6) + 16;
            goto LABEL_109;
          case 'e':
            uint64_t v38 = a1++;
            if (*((_BYTE *)a3 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_164:
              uint64_t v112 = "ByteStream_NumReadBytesAvail((*pBs)) >= (sizeof(*pVal))";
LABEL_165:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  2672,  v112);
            }

            uint64_t v39 = *((unsigned __int16 *)a3 + 6);
            if (*((_BYTE *)a3 + 14) != 2)
            {
              uint64_t v112 = "((*pBs)).__RWFlag == BYTESTREAM_WRITE";
              goto LABEL_165;
            }

    if (v22) {
      operator delete(v22);
    }
    return 0LL;
  }

  if (os_log_type_enabled((os_log_t)qword_1008F75B0, OS_LOG_TYPE_ERROR)) {
    sub_100690D48(a1 + 56, a1);
  }
  return 6LL;
}

  if (*((void *)a3 + 1) != 35LL) {
    goto LABEL_89;
  }
  __int16 v33 = *(unsigned __int8 **)a3;
LABEL_84:
  if (!memcmp(v33, "needsMFiAuthenticationCertClass2.0c", 0x23uLL))
  {
    int v36 = sub_1002E8F6C();
    (*(void (**)(uint64_t))(*(void *)v36 + 168LL))(v36);
    uint64_t v19 = a3[23];
    if ((v19 & 0x80) == 0) {
      goto LABEL_86;
    }
  }

  else if ((v19 & 0x80) == 0)
  {
    goto LABEL_86;
  }

    sub_10069E83C();
    goto LABEL_97;
  }

  unint64_t v14 = sub_100298544(6, (UInt8 *)(a1 + 248), 64LL, &v27);
  if (v14 == -34019)
  {
    if (os_log_type_enabled((os_log_t)qword_1008F75A8, OS_LOG_TYPE_ERROR)) {
      sub_10069E894();
    }
    goto LABEL_97;
  }

  if (v14 || v27 != 64)
  {
    buf[0] = 96;
    if (sub_1001120DC((_OWORD *)(a1 + 248), (_OWORD *)(a1 + 312)))
    {
      if (!os_log_type_enabled((os_log_t)qword_1008F75A8, OS_LOG_TYPE_ERROR)) {
        goto LABEL_97;
      }
      goto LABEL_47;
    }

    if (sub_10029871C(5u, (const UInt8 *)(a1 + 312), 0x60u))
    {
      if (!os_log_type_enabled((os_log_t)qword_1008F75A8, OS_LOG_TYPE_FAULT)) {
        goto LABEL_97;
      }
    }

    else
    {
      if (!os_log_type_enabled((os_log_t)qword_1008F75A8, OS_LOG_TYPE_FAULT)) {
        goto LABEL_97;
      }
    }

    goto LABEL_82;
  }

            if (SHIBYTE(v84) < 0) {
              operator delete((void *)buf);
            }
            break;
          default:
            uint64_t v30 = 0LL;
            uint64_t v31 = 0LL;
            goto LABEL_66;
        }
      }
    }

    else
    {
      uint64_t v7 = 0LL;
    }

    return;
  }

  uint64_t v4 = (os_log_s *)qword_1008F7578;
  if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
    LODWORD(buf) = 138412290;
    *(void *)((char *)&buf + 4) = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Waiting for current pairing prompt to go away before displaying prompt for device %@",  (uint8_t *)&buf,  0xCu);
  }

uint64_t (*sub_1001289D0( uint64_t a1))(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  int v1 = *(unsigned __int8 *)(a1 + 18);
  int v2 = a1;
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001292B0;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001292B4;
    case 2:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012937C;
    case 3:
      return sub_100129454;
    case 4:
      return sub_100129568;
    case 5:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100129684;
    case 6:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100129814;
    case 7:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100129948;
    case 8:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100129B40;
    case 9:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100129CAC;
    case 10:
      int v4 = sub_10016F45C(v2);
      if (v4 > 180)
      {
        if (v4 <= 243)
        {
          switch(v4)
          {
            case 181:
              return sub_10012B464;
            case 182:
            case 185:
            case 186:
            case 187:
              return 0LL;
            case 183:
              return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012B57C;
            case 184:
            case 188:
              return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012B630;
            default:
              if (v4 == 198)
              {
                uint64_t result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012B6E4;
              }

              else
              {
                if (v4 != 230) {
                  return 0LL;
                }
                uint64_t result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012B828;
              }

              break;
          }

          return result;
        }

        if (v4 <= 258)
        {
          switch(v4)
          {
            case 244:
              uint64_t result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012BA60;
              break;
            case 245:
              uint64_t result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012BE5C;
              break;
            case 253:
              uint64_t result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012BBE4;
              break;
            case 254:
              uint64_t result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012BD84;
              break;
            case 255:
              uint64_t result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012BCAC;
              break;
            default:
              return 0LL;
          }

          return result;
        }

        if (v4 == 259) {
          return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012BFF0;
        }
        if (v4 == 263) {
          return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012C478;
        }
        if (v4 != 272) {
          return 0LL;
        }
        return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))nullsub_74;
      }

      if (v4 > 119)
      {
        switch(v4)
        {
          case 143:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012A264;
          case 144:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012A420;
          case 145:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012A580;
          case 146:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012A68C;
          case 147:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012A7FC;
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
            return 0LL;
          case 155:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012A988;
          case 156:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012AC28;
          case 157:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012AD90;
          case 163:
            return sub_10012B244;
          case 164:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012B358;
          default:
            if (v4 == 120)
            {
              uint64_t result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012AEB8;
            }

            else
            {
              if (v4 != 132) {
                return 0LL;
              }
              uint64_t result = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012B11C;
            }

            break;
        }

        return result;
      }

      if (v4 <= 94)
      {
        switch(v4)
        {
          case 25:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012AAC4;
          case 65:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100129DA8;
          case 80:
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100129F90;
          default:
            return 0LL;
        }
      }

      else
      {
        if (v4 <= 113)
        {
          if (v4 != 95)
          {
            if (v4 != 99) {
              return 0LL;
            }
            return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_10012A070;
          }

          return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))nullsub_74;
        }

        if (v4 == 114)
        {
          return sub_10012AF84;
        }

        else
        {
          if (v4 != 119) {
            return 0LL;
          }
          return sub_10012B060;
        }
      }

    case 11:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_1001298F8;
    case 12:
      return (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t *))sub_100129998;
    default:
      sub_1001EE2A0();
      return 0LL;
  }

uint64_t sub_100128D24( unsigned __int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v23 = 0LL;
  uint64_t v27 = -1LL;
  if (!DWORD2(xmmword_1008F6FB8)) {
    return 103LL;
  }
  if ((sub_10010C704() & 1) != 0) {
    return 0LL;
  }
  if (dword_1008F6D88 != 2) {
    return 627LL;
  }
  if ((sub_1000B1BD0() & 1) != 0) {
    return 3704LL;
  }
  uint64_t v24 = 0LL;
  uint64_t v25 = 0LL;
  int v21 = 0;
  __int16 v22 = 0;
  v20[0] = 0;
  *(_DWORD *)((char *)v20 + 3) = 0;
  char v19 = 0;
  int v26 = &a9;
  uint64_t v11 = sub_10016F424(a1);
  if (!v11) {
    return 616LL;
  }
  uint64_t v12 = (uint64_t)v11;
  unint64_t v13 = *((unsigned __int16 *)v11 + 2);
  if (!v11[17]) {
    sub_1001EE2A0();
  }
  if (*(_BYTE *)(v12 + 16)) {
    uint64_t result = sub_10012176C((int *)v26, v12, (uint64_t *)&v24, (uint64_t)v20, &v27, 0LL, &v19);
  }
  else {
    uint64_t result = sub_1001278B8(v26, v12, (uint64_t *)&v24, &v23, (uint64_t)&v21, v20, &v19);
  }
  if (!(_DWORD)result)
  {
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    BYTE8(v17) = 15;
    WORD2(v17) = *(_WORD *)(v12 + 2);
    WORD3(v17) = a1;
    if (WORD2(v17) == 1064 || WORD2(v17) == 1031)
    {
      unint64_t v14 = v23;
      if (!v23)
      {
        sub_1001EE2A0();
        unint64_t v14 = v23;
      }

      int v21 = *((_DWORD *)v14 + 12);
      __int16 v22 = v14[26];
    }

    switch(*(_BYTE *)(v12 + 19))
    {
      case 6:
        uint64_t v15 = v23;
        if (!v23)
        {
          sub_1001EE2A0();
          uint64_t v15 = v23;
        }

        LOWORD(v18) = *v15;
        break;
      case 7:
        LODWORD(v18) = v21;
        WORD2(v18) = v22;
        break;
      case 8:
        int v16 = *(unsigned __int16 *)(v12 + 2);
        if (v16 != 8205 && v16 != 8259 && v16 != 8325) {
          sub_1001EE2A0();
        }
        LODWORD(v18) = v20[0];
        *(_DWORD *)((char *)&v18 + 3) = *(_DWORD *)((char *)v20 + 3);
        break;
      case 9:
        if (*(_WORD *)(v12 + 2) != 8292) {
          sub_1001EE2A0();
        }
        *(void *)&__int128 v18 = v27;
        break;
      case 0xA:
        LOBYTE(v18) = v19;
        break;
      default:
        return sub_10012CEF4(v24, SWORD1(v25), &v17);
    }

    return sub_10012CEF4(v24, SWORD1(v25), &v17);
  }

  return result;
}

uint64_t sub_100128FB0(unsigned __int8 *a1, uint64_t a2)
{
  int v4 = *a1;
  if (v4 == 14)
  {
    uint64_t v5 = 2LL;
    uint64_t v6 = 5LL;
    uint64_t v7 = 3LL;
    uint64_t v8 = 4LL;
  }

  else
  {
    if (v4 != 15) {
      return 1LL;
    }
    uint64_t v5 = 3LL;
    uint64_t v6 = 2LL;
    uint64_t v7 = 4LL;
    uint64_t v8 = 5LL;
  }

  uint64_t v9 = a1[v7] | (a1[v8] << 8);
  uint64_t v10 = a1[v6];
  byte_1008F6E19 = a1[v5];
  sub_1000BAAF0("raw HCI Event");
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"raw HCI Event :opcode=0x%4x payloadlen=%d", v11, v12, v13, v14, v15, v16, v17, v9);
    __int128 v18 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  if (off_1008F6E08) {
    off_1008F6E08(v10, a1, a2, qword_1008F6E00);
  }
  off_1008F6E10 = 0LL;
  int v20 = 0;
  if (sub_100133CDC(254, &v20)) {
    sub_100133D98(v20);
  }
  return 0LL;
}

uint64_t sub_1001290F0( unsigned int a1, const void *a2, unsigned int a3, uint64_t (*a4)(void, void, void, void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v30 = 0LL;
  size_t v14 = a3 + 7;
  sub_1000BAAF0("raw HCI command");
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"raw HCI command: opcode=0x%4x payloadlen=%d", v15, v16, v17, v18, v19, v20, v21, a1);
    __int16 v22 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

  uint64_t v23 = (char *)sub_1000B17F4(v14);
  if (!v23) {
    return 104LL;
  }
  if (!(_WORD)v14) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  3165,  "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  uint64_t v24 = v23;
  *uint64_t v23 = 1;
  if ((unsigned __int16)v14 <= 2u) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  3167,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }
  *(_WORD *)(v23 + 1) = a1;
  if ((unsigned __int16)v14 == 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  3168,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  v23[3] = a3;
  if (a3)
  {
    if ((unsigned __int16)v14 - 4 < a3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  3170,  "ByteStream_NumReadBytesAvail(bs) >= (len)");
    }
    memmove(v23 + 4, a2, a3);
    __int16 v25 = a3 + 4;
  }

  else
  {
    __int16 v25 = 4;
  }

  word_1008F6DF8 = a1;
  uint64_t v30 = &a10;
  qword_1008F6E00 = a9;
  off_1008F6E08 = a4;
  LODWORD(v27) = 0;
  *((void *)&v27 + 1) = 0LL;
  WORD2(v27) = a1;
  *(_DWORD *)((char *)&v27 + 6) = -16908016;
  uint64_t v28 = 0LL;
  int v29 = a4;
  off_1008F6E10 = (uint64_t (*)(void, void, void))sub_100128FB0;
  return sub_10012CEF4(v24, v25, &v27);
}

uint64_t sub_1001292B4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
  }

  else
  {
    unsigned int v5 = *((unsigned __int16 *)a3 + 5);
    uint64_t v6 = *((unsigned __int16 *)a3 + 6);
    if (v5 != (_DWORD)v6)
    {
      if (v5 > v6)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v9 = *a3;
          *((_WORD *)a3 + 6) = v6 + 1;
          uint64_t v7 = *(unsigned __int8 *)(v9 + v6);
          return v3(a1, v7);
        }

        uint64_t v10 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      else
      {
        uint64_t v10 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  135,  v10);
    }
  }

  uint64_t v7 = 0LL;
  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return v3(a1, v7);
}

uint64_t sub_10012937C(uint64_t a1, uint64_t (*a2)(uint64_t, void), uint64_t a3)
{
  int v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
  }

  else
  {
    int v5 = *(unsigned __int16 *)(a3 + 12);
    if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) > 1u)
    {
      if (*(_BYTE *)(a3 + 14) == 1)
      {
        if (*(unsigned __int16 *)(a3 + 10) - v5 > 1)
        {
          unsigned __int16 v6 = *(_WORD *)(*(void *)a3 + *(unsigned __int16 *)(a3 + 12));
          *(_WORD *)(a3 + 12) = v5 + 2;
          return v3(a1, v6);
        }

        uint64_t v8 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
      }

      else
      {
        uint64_t v8 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  160,  v8);
    }
  }

  unsigned __int16 v6 = 0;
  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return v3(a1, v6);
}

uint64_t sub_100129454(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  unsigned int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 2u)
  {
LABEL_4:
    uint64_t v7 = 0LL;
    uint64_t v8 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    size_t v14 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_14;
  }

  if ((int)(v5 - v6) <= 1)
  {
    size_t v14 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_14:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  208,  v14);
  }

  uint64_t v10 = *a3;
  uint64_t v11 = (unsigned __int8 *)(*a3 + v6);
  int v12 = *v11;
  int v13 = v11[1];
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  209,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v7 = v12 | (v13 << 8);
  *((_WORD *)a3 + 6) = v6 + 3;
  uint64_t v8 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v6 + 2));
  return v3(a1, v7, v8);
}

uint64_t sub_100129568(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, void), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 3u)
  {
LABEL_4:
    uint64_t v7 = 0LL;
    unsigned __int16 v8 = 0;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    size_t v14 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_14;
  }

  if (v5 - (int)v6 <= 1)
  {
    size_t v14 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_14:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  324,  v14);
  }

  uint64_t v10 = *a3;
  uint64_t v11 = (unsigned __int8 *)(*a3 + v6);
  int v12 = *v11;
  int v13 = v11[1];
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 - (unsigned __int16)(v6 + 2) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  325,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v7 = v12 | (v13 << 8);
  unsigned __int16 v8 = *(_WORD *)(v10 + (unsigned __int16)(v6 + 2));
  *((_WORD *)a3 + 6) = v6 + 4;
  return v3(a1, v7, v8);
}

uint64_t sub_100129684( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, uint64_t, void), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 7u)
  {
LABEL_4:
    unsigned __int16 v7 = 0;
    unsigned __int16 v8 = 0;
    uint64_t v9 = 0LL;
    unsigned __int16 v10 = 0;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8, v9, v10);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v16 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_16;
  }

  if (v5 - (int)v6 <= 1)
  {
    uint64_t v16 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_16:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  372,  v16);
  }

  uint64_t v12 = *a3;
  unsigned __int16 v7 = *(_WORD *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 - (unsigned __int16)(v6 + 2) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  373,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  unsigned __int16 v8 = *(_WORD *)(v12 + (unsigned __int16)(v6 + 2));
  *((_WORD *)a3 + 6) = v6 + 4;
  if (v5 - (unsigned __int16)(v6 + 4) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  374,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  int v13 = (unsigned __int8 *)(v12 + (unsigned __int16)(v6 + 4));
  int v14 = *v13;
  int v15 = v13[1];
  *((_WORD *)a3 + 6) = v6 + 6;
  if (v5 - (unsigned __int16)(v6 + 6) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  375,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v9 = v14 | (v15 << 8);
  unsigned __int16 v10 = *(_WORD *)(v12 + (unsigned __int16)(v6 + 6));
  *((_WORD *)a3 + 6) = v6 + 8;
  return v3(a1, v7, v8, v9, v10);
}

uint64_t sub_100129814(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *), uint64_t a3)
{
  int v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
  }

  else
  {
    int v5 = *(unsigned __int16 *)(a3 + 12);
    if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) > 1u)
    {
      if (*(_BYTE *)(a3 + 14) == 1)
      {
        if (*(unsigned __int16 *)(a3 + 10) - v5 > 1)
        {
          int v8 = *(unsigned __int16 *)(*(void *)a3 + *(unsigned __int16 *)(a3 + 12));
          *(_WORD *)(a3 + 12) = v5 + 2;
          uint64_t v6 = sub_10012D6D8(v8);
          int v3 = a2;
          return v3(a1, v6);
        }

        uint64_t v9 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
      }

      else
      {
        uint64_t v9 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  181,  v9);
    }
  }

  uint64_t v6 = 0LL;
  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return v3(a1, v6);
}

uint64_t sub_1001298F8(unsigned int a1, uint64_t (*a2)(uint64_t, __int128 *, void), uint64_t *a3)
{
  int v8 = 0LL;
  char v7 = 0;
  LODWORD(v4) = sub_10012C5EC(&v8, &v7, a3);
  if (a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = v4;
  }
  return a2(v4, v8, v7);
}

uint64_t sub_100129948(unsigned int a1, uint64_t (*a2)(uint64_t, __int128 *, void), uint64_t *a3)
{
  int v8 = 0LL;
  unsigned __int8 v7 = 0;
  LODWORD(v4) = sub_10012C5EC(&v8, &v7, a3);
  if (a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = v4;
  }
  return a2(v4, v8, v7);
}

uint64_t sub_100129998( unsigned int a1, uint64_t (*a2)(uint64_t, __int128 *, uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
LABEL_4:
    unsigned __int8 v7 = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v9 = 0LL;
    unsigned int v10 = 605;
    goto LABEL_5;
  }

  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v17 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_21;
  }

  if (*((unsigned __int16 *)a3 + 5) - (int)v6 <= 1)
  {
    uint64_t v17 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_21:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  245,  v17);
  }

  int v13 = *(unsigned __int16 *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  unsigned __int8 v7 = sub_10012D6D8(v13);
  if (v7)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    }

    else
    {
      unsigned int v14 = *((unsigned __int16 *)a3 + 5);
      uint64_t v15 = *((unsigned __int16 *)a3 + 6);
      if (v14 > v15)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v16 = *a3;
          *((_WORD *)a3 + 6) = v15 + 1;
          if (v14 <= (int)v15 + 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  251,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          unsigned int v10 = 0;
          uint64_t v8 = *(unsigned __int8 *)(v16 + v15);
          *((_WORD *)a3 + 6) = v15 + 2;
          uint64_t v9 = *(unsigned __int8 *)(v16 + v15 + 1);
          goto LABEL_18;
        }

        uint64_t v18 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_25:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  250,  v18);
      }
    }

    uint64_t v18 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_25;
  }

  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  unsigned int v10 = 601;
LABEL_18:
  int v3 = a2;
LABEL_5:
  if (a1) {
    uint64_t v11 = a1;
  }
  else {
    uint64_t v11 = v10;
  }
  return v3(v11, v7, v8, v9);
}

uint64_t sub_100129B40(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *, void), uint64_t a3)
{
  int v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
  }

  else
  {
    int v6 = *(unsigned __int16 *)(a3 + 12);
    if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v6) > 3u)
    {
      if (*(_BYTE *)(a3 + 14) == 1)
      {
        if (*(unsigned __int16 *)(a3 + 10) - v6 > 1)
        {
          int v10 = *(unsigned __int16 *)(*(void *)a3 + *(unsigned __int16 *)(a3 + 12));
          *(_WORD *)(a3 + 12) = v6 + 2;
          uint64_t v11 = sub_10012D6D8(v10);
          if (*(_BYTE *)(a3 + 14) == 1)
          {
            int v3 = a2;
            if (*(_BYTE *)(a3 + 15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
            }

            else
            {
              uint64_t v12 = *(unsigned __int16 *)(a3 + 12);
              if (*(unsigned __int16 *)(a3 + 10) - (int)v12 > 1)
              {
                uint64_t v8 = v11;
                unsigned __int16 v7 = *(_WORD *)(*(void *)a3 + v12);
                *(_WORD *)(a3 + 12) = v12 + 2;
                return v3(a1, v8, v7);
              }
            }

            unsigned int v14 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
          }

          else
          {
            unsigned int v14 = "(*pBs).__RWFlag == BYTESTREAM_READ";
          }

          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  348,  v14);
        }

        int v13 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
      }

      else
      {
        int v13 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  346,  v13);
    }
  }

  unsigned __int16 v7 = 0;
  uint64_t v8 = 0LL;
  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return v3(a1, v8, v7);
}

uint64_t sub_100129CAC(uint64_t a1, uint64_t (*a2)(uint64_t, int *), uint64_t a3)
{
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    __int16 v12 = 0;
    int v11 = 0;
  }

  else
  {
    unsigned int v6 = *(unsigned __int16 *)(a3 + 12);
    int v7 = *(unsigned __int16 *)(a3 + 10) - v6;
    unsigned int v8 = (unsigned __int16)(*(_WORD *)(a3 + 10) - v6);
    __int16 v12 = 0;
    int v11 = 0;
    if (v8 > 5)
    {
      if (v7 <= 5)
      {
        int v10 = "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE";
      }

      else
      {
        if (*(_BYTE *)(a3 + 14) == 1)
        {
          sub_1001F0050((uint64_t)&v11, *(void *)a3 + v6, 6uLL);
          *(_WORD *)(a3 + 12) += 6;
          return a2(a1, &v11);
        }

        int v10 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  402,  v10);
    }
  }

  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return a2(a1, &v11);
}

void sub_100129DA8(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3)
{
  int v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
LABEL_4:
    if ((_DWORD)a1) {
      uint64_t v6 = a1;
    }
    else {
      uint64_t v6 = 605LL;
    }
    v3(v6, 0LL);
    return;
  }

  unsigned int v7 = *(unsigned __int8 *)(sub_1001EDBA0(0x28u) + 6);
  if (v7 >= 0xF9) {
    sub_1001EE2A0();
  }
  if (v7 >= 0xF8) {
    uint64_t v8 = 248LL;
  }
  else {
    uint64_t v8 = v7;
  }
  uint64_t v9 = (_BYTE *)(*(void *)a3 + *(unsigned __int16 *)(a3 + 12));
  if ((_DWORD)v8)
  {
    uint64_t v10 = 0LL;
    while (v9[v10])
    {
      if (v8 == ++v10) {
        goto LABEL_20;
      }
    }

    LODWORD(v8) = v10;
LABEL_20:
    if (v8 < 0xF8)
    {
      __int16 v12 = 0LL;
    }

    else
    {
      int v11 = sub_1000B1814(0xF9uLL);
      if (v11)
      {
        __int16 v12 = v11;
        memmove(v11, v9, 0xF8uLL);
        uint64_t v9 = v12;
        LODWORD(v8) = 248;
      }

      else
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Malloc for local name failed, name truncated to 247 characters.",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  v23);
          uint64_t v20 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        __int16 v12 = 0LL;
        LODWORD(v8) = 247;
      }
    }

    uint64_t v21 = v8;
    if ((_DWORD)v8 && (char)v9[v8] < 0)
    {
      while (v9[v8] <= 0xBFu)
      {
        BOOL v22 = __OFSUB__((_DWORD)v8, 1);
        LODWORD(v8) = v8 - 1;
        if (((int)v8 < 0) ^ v22 | ((_DWORD)v8 == 0))
        {
          LODWORD(v8) = 0;
          break;
        }
      }

      uint64_t v21 = v8;
    }

    v9[v21] = 0;
    a2(a1, v9);
    if (v12) {
      sub_1000B1838(v12);
    }
  }

  else
  {
    *uint64_t v9 = 0;
    a2(a1, v9);
  }

uint64_t sub_100129F90(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  int v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
  }

  else
  {
    int v5 = *(unsigned __int16 *)(a3 + 12);
    if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) > 2u)
    {
      if (*(unsigned __int16 *)(a3 + 10) - v5 <= 2)
      {
        uint64_t v8 = "ByteStream_NumReadBytesAvail(*pBs) >= 3";
      }

      else
      {
        if (*(_BYTE *)(a3 + 14) == 1)
        {
          uint64_t v6 = *(unsigned __int16 *)(*(void *)a3 + *(unsigned __int16 *)(a3 + 12)) | (*(unsigned __int8 *)(*(void *)a3 + *(unsigned __int16 *)(a3 + 12) + 2LL) << 16);
          *(_WORD *)(a3 + 12) = v5 + 3;
          return v3(a1, v6);
        }

        uint64_t v8 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  462,  v8);
    }
  }

  uint64_t v6 = 0LL;
  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return v3(a1, v6);
}

void sub_10012A070(uint64_t a1, void (*a2)(uint64_t, uint64_t, void *), uint64_t *a3)
{
  uint64_t v4 = a1;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    unsigned int v5 = 0;
    if ((_DWORD)v4)
    {
LABEL_3:
      uint64_t v6 = 0LL;
LABEL_4:
      a2(v4, v6, 0LL);
      return;
    }
  }

  else
  {
    unsigned int v5 = (unsigned __int16)(*((_WORD *)a3 + 5) - *((_WORD *)a3 + 6));
    if ((_DWORD)a1) {
      goto LABEL_3;
    }
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    goto LABEL_23;
  }

  uint64_t v7 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v7)
  {
LABEL_23:
    uint64_t v17 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_25;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v17 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_25:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  482,  v17);
  }

  uint64_t v8 = *a3;
  *((_WORD *)a3 + 6) = v7 + 1;
  uint64_t v6 = *(unsigned __int8 *)(v8 + v7);
  uint64_t v9 = sub_1000B17F4(4 * v6);
  if (!v9)
  {
    uint64_t v4 = 106LL;
    goto LABEL_4;
  }

  uint64_t v10 = v9;
  if (v5 >= 3 * (int)v6)
  {
    if ((_DWORD)v6)
    {
      if (*((_BYTE *)a3 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_27:
        uint64_t v16 = "ByteStream_NumReadBytesAvail(*pBs) >= 3";
      }

      else
      {
        int v12 = *((unsigned __int16 *)a3 + 5) - 2;
        unsigned __int16 v13 = *((_WORD *)a3 + 6);
        uint64_t v14 = v6;
        uint64_t v15 = (int *)v9;
        while (1)
        {
          if (v12 <= v13) {
            goto LABEL_27;
          }
          if (*((_BYTE *)a3 + 14) != 1) {
            break;
          }
          *v15++ = *(unsigned __int16 *)(*a3 + v13) | (*(unsigned __int8 *)(*a3 + v13 + 2) << 16);
          v13 += 3;
          *((_WORD *)a3 + 6) = v13;
          if (!--v14) {
            goto LABEL_19;
          }
        }

        uint64_t v16 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  498,  v16);
    }

uint64_t sub_10012A264(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *), uint64_t *a3)
{
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    __int16 v11 = 0;
    uint64_t v10 = 0LL;
    goto LABEL_4;
  }

  unsigned int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  __int16 v11 = 0;
  uint64_t v10 = 0LL;
  if ((unsigned __int16)(v5 - v6) <= 7u)
  {
LABEL_4:
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return a2(a1, &v10);
  }

  if (v5 <= v6)
  {
    uint64_t v9 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_17;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v9 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_17:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c", 831, v9);
  }

  uint64_t v8 = *a3;
  *((_WORD *)a3 + 6) = v6 + 1;
  LOBYTE(vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = *(_BYTE *)(v8 + v6);
  if ((int)(v5 - (unsigned __int16)(v6 + 1)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  832,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  WORD1(vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = *(_WORD *)(v8 + v6 + 1);
  *((_WORD *)a3 + 6) = v6 + 3;
  if (v5 <= (unsigned __int16)(v6 + 3)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  833,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  *((_WORD *)a3 + 6) = v6 + 4;
  BYTE4(vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = *(_BYTE *)(v8 + (unsigned __int16)(v6 + 3));
  if ((int)(v5 - (unsigned __int16)(v6 + 4)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  834,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  HIWORD(vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = *(_WORD *)(v8 + (unsigned __int16)(v6 + 4));
  *((_WORD *)a3 + 6) = v6 + 6;
  if ((int)(v5 - (unsigned __int16)(v6 + 6)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  835,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  __int16 v11 = *(_WORD *)(v8 + (unsigned __int16)(v6 + 6));
  *((_WORD *)a3 + 6) = v6 + 8;
  return a2(a1, &v10);
}

uint64_t sub_10012A420(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *), uint64_t a3)
{
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    goto LABEL_4;
  }

  uint64_t v5 = *(unsigned __int16 *)(a3 + 12);
  if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) <= 0x3Fu)
  {
LABEL_4:
    uint64_t v6 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return a2(a1, v6);
  }

  uint64_t v6 = (__int128 *)(*(void *)a3 + v5);
  __int128 v8 = *v6;
  __int128 v9 = v6[1];
  __int128 v10 = v6[3];
  xmmword_1008F6DC8 = v6[2];
  xmmword_1008F6DD8 = v10;
  xmmword_1008F6DA8 = v8;
  *(_OWORD *)&byte_1008F6DB8 = v9;
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"command supported mask is: %@",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  (uint64_t)&xmmword_1008F6DA8);
    uint64_t v18 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v20 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  BYTE14(xmmword_1008F6DA8) |= 0x10u;
  return a2(a1, v6);
}

uint64_t sub_10012A580(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *), uint64_t a3)
{
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    uint64_t v9 = 0LL;
  }

  else
  {
    uint64_t v5 = *(unsigned __int16 *)(a3 + 10);
    uint64_t v6 = *(unsigned __int16 *)(a3 + 12);
    uint64_t v9 = 0LL;
    if ((unsigned __int16)(v5 - v6) > 7u)
    {
      if (*(_BYTE *)(a3 + 14) == 1)
      {
        if ((unint64_t)(v5 - v6) > 7)
        {
          uint64_t v9 = *(void *)(*(void *)a3 + v6);
          *(_WORD *)(a3 + 12) = v6 + 8;
          return a2(a1, &v9);
        }

        __int128 v8 = "ByteStream_NumReadBytesAvail((*pBs)) >= (sizeof(lmpFeatures))";
      }

      else
      {
        __int128 v8 = "((*pBs)).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  626,  v8);
    }
  }

  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return a2(a1, &v9);
}

uint64_t sub_10012A68C( uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t *), uint64_t *a3)
{
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    uint64_t v12 = 0LL;
    goto LABEL_4;
  }

  uint64_t v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  uint64_t v12 = 0LL;
  if ((unsigned __int16)(v5 - v6) <= 9u)
  {
LABEL_4:
    uint64_t v7 = 0LL;
    uint64_t v8 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return a2(a1, v7, v8, &v12);
  }

  if (v5 <= v6)
  {
    uint64_t v11 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_15;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v11 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_15:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  653,  v11);
  }

  uint64_t v10 = *a3;
  *((_WORD *)a3 + 6) = v6 + 1;
  if (v5 <= (unsigned __int16)(v6 + 1)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  654,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v7 = *(unsigned __int8 *)(v10 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if ((unint64_t)(v5 - (v6 + 2)) <= 7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  655,  "ByteStream_NumReadBytesAvail((*pBs)) >= (sizeof(lmpFeatures))");
  }
  uint64_t v8 = *(unsigned __int8 *)(v10 + v6 + 1);
  uint64_t v12 = *(void *)(v10 + v6 + 2);
  *((_WORD *)a3 + 6) = v6 + 10;
  return a2(a1, v7, v8, &v12);
}

uint64_t sub_10012A7FC( uint64_t a1, uint64_t (*a2)(uint64_t, void, uint64_t, uint64_t, void), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  unsigned int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 6u)
  {
LABEL_4:
    unsigned __int16 v7 = 0;
    uint64_t v8 = 0LL;
    uint64_t v9 = 0LL;
    unsigned __int16 v10 = 0;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8, v9, v10);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v16 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_16;
  }

  if ((int)(v5 - v6) <= 1)
  {
    uint64_t v16 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_16:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  430,  v16);
  }

  uint64_t v12 = *a3;
  unsigned __int16 v7 = *(_WORD *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  431,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  *((_WORD *)a3 + 6) = v6 + 3;
  if ((int)(v5 - (unsigned __int16)(v6 + 3)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  432,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v8 = *(unsigned __int8 *)(v12 + (unsigned __int16)(v6 + 2));
  uint64_t v13 = (unsigned __int8 *)(v12 + (unsigned __int16)(v6 + 3));
  int v14 = *v13;
  int v15 = v13[1];
  *((_WORD *)a3 + 6) = v6 + 5;
  if ((int)(v5 - (unsigned __int16)(v6 + 5)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  433,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v9 = v14 | (v15 << 8);
  unsigned __int16 v10 = *(_WORD *)(v12 + (unsigned __int16)(v6 + 5));
  *((_WORD *)a3 + 6) = v6 + 7;
  return v3(a1, v7, v8, v9, v10);
}

uint64_t sub_10012A988( uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *, uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  unsigned int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 0xCu)
  {
LABEL_4:
    unsigned __int16 v7 = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v9 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8, v9);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v17 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_14;
  }

  if ((int)(v5 - v6) <= 1)
  {
    uint64_t v17 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_14:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  710,  v17);
  }

  uint64_t v11 = *a3;
  uint64_t v12 = (unsigned __int8 *)(*a3 + v6);
  int v13 = *v12;
  int v14 = v12[1];
  unsigned __int16 v15 = v6 + 2;
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  711,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  unsigned __int16 v16 = v6 + 3;
  *((_WORD *)a3 + 6) = v16;
  uint64_t v8 = *(unsigned __int8 *)(v11 + v15);
  uint64_t v9 = v11 + v16;
  unsigned __int16 v7 = sub_10012D6D8(v13 | (v14 << 8));
  int v3 = a2;
  return v3(a1, v7, v8, v9);
}

uint64_t sub_10012AAC4( uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *, uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  unsigned int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 6u)
  {
LABEL_4:
    unsigned __int16 v7 = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v9 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8, v9);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v13 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_15;
  }

  if ((int)(v5 - v6) <= 1)
  {
    int v13 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_15:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  803,  v13);
  }

  uint64_t v11 = *a3;
  unsigned __int16 v12 = *(_WORD *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  804,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  *((_WORD *)a3 + 6) = v6 + 3;
  if ((int)(v5 - (unsigned __int16)(v6 + 3)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  805,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  uint64_t v8 = *(unsigned __int8 *)(v11 + (unsigned __int16)(v6 + 2));
  uint64_t v9 = *(unsigned int *)(v11 + (unsigned __int16)(v6 + 3));
  *((_WORD *)a3 + 6) = v6 + 7;
  unsigned __int16 v7 = sub_10012D6D8(v12);
  int v3 = a2;
  return v3(a1, v7, v8, v9);
}

uint64_t sub_10012AC28( uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *, uint64_t, void), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 7u)
  {
LABEL_4:
    unsigned __int16 v7 = 0LL;
    uint64_t v8 = 0LL;
    unsigned __int16 v9 = 0;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8, v9);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v13 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_15;
  }

  if (v5 - (int)v6 <= 1)
  {
    int v13 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_15:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  741,  v13);
  }

  uint64_t v11 = *a3;
  unsigned __int16 v12 = *(_WORD *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 - (unsigned __int16)(v6 + 2) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  742,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  uint64_t v8 = *(unsigned int *)(v11 + (unsigned __int16)(v6 + 2));
  *((_WORD *)a3 + 6) = v6 + 6;
  if (v5 - (unsigned __int16)(v6 + 6) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  743,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  unsigned __int16 v9 = *(_WORD *)(v11 + (unsigned __int16)(v6 + 6));
  *((_WORD *)a3 + 6) = v6 + 8;
  unsigned __int16 v7 = sub_10012D6D8(v12);
  int v3 = a2;
  return v3(a1, v7, v8, v9);
}

uint64_t sub_10012AD90(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  unsigned int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 2u)
  {
LABEL_4:
    unsigned __int16 v7 = 0LL;
    uint64_t v8 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v14 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_14;
  }

  if ((int)(v5 - v6) <= 1)
  {
    int v14 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_14:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  772,  v14);
  }

  uint64_t v10 = *a3;
  uint64_t v11 = (unsigned __int8 *)(*a3 + v6);
  int v12 = *v11;
  int v13 = v11[1];
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  773,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  *((_WORD *)a3 + 6) = v6 + 3;
  uint64_t v8 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v6 + 2));
  unsigned __int16 v7 = sub_10012D6D8(v12 | (v13 << 8));
  int v3 = a2;
  return v3(a1, v7, v8);
}

uint64_t sub_10012AEB8(uint64_t a1, uint64_t (*a2)(uint64_t, void), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
  }

  else
  {
    unsigned int v5 = *((unsigned __int16 *)a3 + 5);
    uint64_t v6 = *((unsigned __int16 *)a3 + 6);
    if (v5 != (_DWORD)v6)
    {
      if (v5 > v6)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v9 = *a3;
          *((_WORD *)a3 + 6) = v6 + 1;
          char v7 = *(_BYTE *)(v9 + v6);
          return v3(a1, v7);
        }

        uint64_t v10 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      else
      {
        uint64_t v10 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  860,  v10);
    }
  }

  char v7 = 0;
  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return v3(a1, v7);
}

uint64_t sub_10012AF84(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
  }

  else
  {
    unsigned int v5 = *((unsigned __int16 *)a3 + 5);
    uint64_t v6 = *((unsigned __int16 *)a3 + 6);
    if ((unsigned __int16)(v5 - v6) > 0x1Fu)
    {
      if (v5 <= v6)
      {
        uint64_t v11 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      }

      else
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v10 = *a3;
          *((_WORD *)a3 + 6) = v6 + 1;
          uint64_t v7 = *(unsigned __int8 *)(v10 + v6);
          uint64_t v8 = v10 + (unsigned __int16)(v6 + 1);
          return v3(a1, v7, v8);
        }

        uint64_t v11 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  886,  v11);
    }
  }

  uint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return v3(a1, v7, v8);
}

uint64_t sub_10012B060(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  uint64_t v5 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(*((_WORD *)a3 + 5) - v5) <= 0x1Fu)
  {
LABEL_4:
    uint64_t v6 = 0LL;
    uint64_t v7 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v6, v7);
  }

  if (*((unsigned __int16 *)a3 + 5) - (int)v5 <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  914,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  uint64_t v9 = *a3;
  uint64_t v6 = *a3 + v5;
  unsigned __int16 v10 = v5 + 16;
  *((_WORD *)a3 + 6) = v10;
  uint64_t v7 = v9 + v10;
  return v3(a1, v6, v7);
}

uint64_t sub_10012B11C( uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 0x3Fu)
  {
LABEL_4:
    uint64_t v7 = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v9 = 0LL;
    uint64_t v10 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8, v9, v10);
  }

  if (v5 - (int)v6 <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  945,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  uint64_t v12 = *a3;
  *((_WORD *)a3 + 6) = v6 + 16;
  if (v5 - (unsigned __int16)(v6 + 16) <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  947,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  *((_WORD *)a3 + 6) = v6 + 32;
  if (v5 - (unsigned __int16)(v6 + 32) <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  949,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  uint64_t v7 = v12 + v6;
  uint64_t v8 = v12 + (unsigned __int16)(v6 + 16);
  uint64_t v9 = v12 + (unsigned __int16)(v6 + 32);
  unsigned __int16 v13 = v6 + 48;
  *((_WORD *)a3 + 6) = v13;
  uint64_t v10 = v12 + v13;
  return v3(a1, v7, v8, v9, v10);
}

uint64_t sub_10012B244(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  unsigned int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 2u)
  {
LABEL_4:
    uint64_t v7 = 0LL;
    uint64_t v8 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v14 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_14;
  }

  if ((int)(v5 - v6) <= 1)
  {
    int v14 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_14:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1015,  v14);
  }

  uint64_t v10 = *a3;
  uint64_t v11 = (unsigned __int8 *)(*a3 + v6);
  int v12 = *v11;
  int v13 = v11[1];
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1016,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v7 = v12 | (v13 << 8);
  *((_WORD *)a3 + 6) = v6 + 3;
  uint64_t v8 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v6 + 2));
  return v3(a1, v7, v8);
}

uint64_t sub_10012B358(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *), uint64_t a3)
{
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    uint64_t v9 = 0LL;
  }

  else
  {
    uint64_t v5 = *(unsigned __int16 *)(a3 + 10);
    uint64_t v6 = *(unsigned __int16 *)(a3 + 12);
    uint64_t v9 = 0LL;
    if ((unsigned __int16)(v5 - v6) > 7u)
    {
      if (*(_BYTE *)(a3 + 14) == 1)
      {
        if ((unint64_t)(v5 - v6) > 7)
        {
          uint64_t v9 = *(void *)(*(void *)a3 + v6);
          *(_WORD *)(a3 + 12) = v6 + 8;
          return a2(a1, &v9);
        }

        uint64_t v8 = "ByteStream_NumReadBytesAvail((*pBs)) >= (sizeof(lmpFeatures))";
      }

      else
      {
        uint64_t v8 = "((*pBs)).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  681,  v8);
    }
  }

  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return a2(a1, &v9);
}

uint64_t sub_10012B464(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 6u)
  {
LABEL_4:
    uint64_t v7 = 0LL;
    uint64_t v8 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v14 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_14;
  }

  if (v5 - (int)v6 <= 1)
  {
    int v14 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_14:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1037,  v14);
  }

  uint64_t v10 = *a3;
  uint64_t v11 = (unsigned __int8 *)(*a3 + v6);
  int v12 = *v11;
  int v13 = v11[1];
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 - (unsigned __int16)(v6 + 2) <= 4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1039,  "ByteStream_NumReadBytesAvail(*pBs) >= (5)");
  }
  uint64_t v8 = v10 + (unsigned __int16)(v6 + 2);
  uint64_t v7 = v12 | (v13 << 8);
  *((_WORD *)a3 + 6) = v6 + 7;
  return v3(a1, v7, v8);
}

uint64_t sub_10012B57C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  int v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  uint64_t v5 = *(unsigned __int16 *)(a3 + 12);
  if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) <= 0xFu)
  {
LABEL_4:
    uint64_t v6 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v6);
  }

  if (*(unsigned __int16 *)(a3 + 10) - (int)v5 <= 15) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  993,  "ByteStream_NumReadBytesAvail(*pBs) >= ((16))");
  }
  uint64_t v6 = *(void *)a3 + v5;
  *(_WORD *)(a3 + 12) = v5 + 16;
  return v3(a1, v6);
}

uint64_t sub_10012B630(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  int v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  uint64_t v5 = *(unsigned __int16 *)(a3 + 12);
  if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) <= 7u)
  {
LABEL_4:
    uint64_t v6 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v6);
  }

  if (*(unsigned __int16 *)(a3 + 10) - (int)v5 <= 7) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  971,  "ByteStream_NumReadBytesAvail(*pBs) >= ((8))");
  }
  uint64_t v6 = *(void *)a3 + v5;
  *(_WORD *)(a3 + 12) = v5 + 8;
  return v3(a1, v6);
}

uint64_t sub_10012B6E4(uint64_t a1, uint64_t (*a2)(uint64_t, void, uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  unsigned int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 3u)
  {
LABEL_4:
    unsigned __int16 v7 = 0;
    uint64_t v8 = 0LL;
    uint64_t v9 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8, v9);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v12 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_15;
  }

  if ((int)(v5 - v6) <= 1)
  {
    int v12 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_15:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1061,  v12);
  }

  uint64_t v11 = *a3;
  unsigned __int16 v7 = *(_WORD *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1062,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  *((_WORD *)a3 + 6) = v6 + 3;
  if (v5 <= (unsigned __int16)(v6 + 3)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1063,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v8 = *(unsigned __int8 *)(v11 + (unsigned __int16)(v6 + 2));
  *((_WORD *)a3 + 6) = v6 + 4;
  uint64_t v9 = *(unsigned __int8 *)(v11 + (unsigned __int16)(v6 + 3));
  return v3(a1, v7, v8, v9);
}

void sub_10012B828(unsigned int a1, void (*a2)(uint64_t, uint64_t, uint64_t, void *), uint64_t *a3)
{
  LODWORD(v5) = a1;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    if ((_DWORD)v5) {
      uint64_t v5 = v5;
    }
    else {
      uint64_t v5 = 605LL;
    }
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
      goto LABEL_33;
    }

    unint64_t v6 = 0LL;
  }

  else
  {
    if (a1) {
      BOOL v7 = 1;
    }
    else {
      BOOL v7 = (unsigned __int16)(*((_WORD *)a3 + 5) - *((_WORD *)a3 + 6)) >= 2u;
    }
    if (v7) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = 605LL;
    }
    unint64_t v6 = (unsigned __int16)(*((_WORD *)a3 + 5) - *((_WORD *)a3 + 6));
  }

  unsigned int v8 = *((unsigned __int16 *)a3 + 5);
  uint64_t v9 = *((unsigned __int16 *)a3 + 6);
  if (v8 <= v9)
  {
LABEL_33:
    uint64_t v18 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_34:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1084,  v18);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v18 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_34;
  }

  uint64_t v10 = *a3;
  *((_WORD *)a3 + 6) = v9 + 1;
  if (v8 <= (int)v9 + 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1085,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v11 = *(unsigned __int8 *)(v10 + v9);
  *((_WORD *)a3 + 6) = v9 + 2;
  uint64_t v12 = *(unsigned __int8 *)(v10 + v9 + 1);
  unint64_t v13 = 2 * v12;
  int v14 = sub_1000B1814(2 * v12);
  if (2 * v12 + 2 > v6)
  {
    if ((_DWORD)v5) {
      uint64_t v5 = v5;
    }
    else {
      uint64_t v5 = 605LL;
    }
    goto LABEL_27;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v19 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_37;
  }

  uint64_t v15 = *a3;
  uint64_t v16 = *((unsigned __int16 *)a3 + 6);
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    unint64_t v17 = 0LL;
  }

  else
  {
    unint64_t v17 = *((unsigned __int16 *)a3 + 5) - v16;
  }

  if (v17 < v13)
  {
    uint64_t v19 = "ByteStream_NumReadBytesAvail(*pBs) >= (sizeof(uint16_t) * param2)";
LABEL_37:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1094,  v19);
  }

  memmove(v14, (const void *)(v15 + v16), 2 * v12);
  *((_WORD *)a3 + 6) += v13;
LABEL_27:
  a2(v5, v11, v12, v14);
  if (v14) {
    sub_1000B1838(v14);
  }
}

uint64_t sub_10012BA60( uint64_t a1, uint64_t (*a2)(uint64_t, void, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
    goto LABEL_4;
  }

  unsigned int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((unsigned __int16)(v5 - v6) <= 5u)
  {
LABEL_4:
    unsigned __int16 v7 = 0;
    uint64_t v8 = 0LL;
    uint64_t v9 = 0LL;
    uint64_t v10 = 0LL;
    if ((_DWORD)a1) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
    return v3(a1, v7, v8, v9, v10);
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v16 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_16;
  }

  if ((int)(v5 - v6) <= 1)
  {
    uint64_t v16 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_16:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1122,  v16);
  }

  uint64_t v12 = *a3;
  unsigned __int16 v7 = *(_WORD *)(*a3 + v6);
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1123,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  *((_WORD *)a3 + 6) = v6 + 3;
  if ((int)(v5 - (unsigned __int16)(v6 + 3)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1124,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v8 = *(unsigned __int8 *)(v12 + (unsigned __int16)(v6 + 2));
  unint64_t v13 = (unsigned __int8 *)(v12 + (unsigned __int16)(v6 + 3));
  int v14 = *v13;
  int v15 = v13[1];
  *((_WORD *)a3 + 6) = v6 + 5;
  if (v5 <= (unsigned __int16)(v6 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1125,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v9 = v14 | (v15 << 8);
  *((_WORD *)a3 + 6) = v6 + 6;
  uint64_t v10 = *(unsigned __int8 *)(v12 + (unsigned __int16)(v6 + 5));
  return v3(a1, v7, v8, v9, v10);
}

uint64_t sub_10012BBE4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  int v3 = a2;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
  }

  else
  {
    unsigned int v5 = *((unsigned __int16 *)a3 + 5);
    uint64_t v6 = *((unsigned __int16 *)a3 + 6);
    if (v5 != (_DWORD)v6)
    {
      if (v5 > v6)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v9 = *a3;
          *((_WORD *)a3 + 6) = v6 + 1;
          uint64_t v7 = *(unsigned __int8 *)(v9 + v6);
          return v3(a1, v7);
        }

        uint64_t v10 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      else
      {
        uint64_t v10 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1145,  v10);
    }
  }

  uint64_t v7 = 0LL;
  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return v3(a1, v7);
}

uint64_t sub_10012BCAC(uint64_t a1, uint64_t (*a2)(uint64_t, void), uint64_t a3)
{
  int v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
  }

  else
  {
    int v5 = *(unsigned __int16 *)(a3 + 12);
    if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) > 1u)
    {
      if (*(_BYTE *)(a3 + 14) == 1)
      {
        if (*(unsigned __int16 *)(a3 + 10) - v5 > 1)
        {
          unsigned __int16 v6 = *(_WORD *)(*(void *)a3 + *(unsigned __int16 *)(a3 + 12));
          *(_WORD *)(a3 + 12) = v5 + 2;
          return v3(a1, v6);
        }

        uint64_t v8 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
      }

      else
      {
        uint64_t v8 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1165,  v8);
    }
  }

  unsigned __int16 v6 = 0;
  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return v3(a1, v6);
}

uint64_t sub_10012BD84(uint64_t a1, uint64_t (*a2)(uint64_t, void), uint64_t a3)
{
  int v3 = a2;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    int v3 = a2;
  }

  else
  {
    int v5 = *(unsigned __int16 *)(a3 + 12);
    if ((unsigned __int16)(*(_WORD *)(a3 + 10) - v5) > 1u)
    {
      if (*(_BYTE *)(a3 + 14) == 1)
      {
        if (*(unsigned __int16 *)(a3 + 10) - v5 > 1)
        {
          unsigned __int16 v6 = *(_WORD *)(*(void *)a3 + *(unsigned __int16 *)(a3 + 12));
          *(_WORD *)(a3 + 12) = v5 + 2;
          return v3(a1, v6);
        }

        uint64_t v8 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
      }

      else
      {
        uint64_t v8 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }

      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1185,  v8);
    }
  }

  unsigned __int16 v6 = 0;
  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
  return v3(a1, v6);
}

uint64_t sub_10012BE5C( uint64_t a1, uint64_t (*a2)(uint64_t, void, uint64_t, uint64_t, void), uint64_t *a3)
{
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
  }

  else if ((unsigned __int16)(*((_WORD *)a3 + 5) - *((_WORD *)a3 + 6)) > 4u)
  {
    goto LABEL_7;
  }

  if ((_DWORD)a1) {
    a1 = a1;
  }
  else {
    a1 = 605LL;
  }
LABEL_7:
  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v14 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_17;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    goto LABEL_16;
  }

  unsigned int v5 = *((unsigned __int16 *)a3 + 5);
  uint64_t v6 = *((unsigned __int16 *)a3 + 6);
  if ((int)(v5 - v6) <= 1)
  {
LABEL_16:
    int v14 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_17:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1206,  v14);
  }

  uint64_t v7 = *a3;
  uint64_t v8 = (unsigned __int8 *)(*a3 + v6);
  int v9 = *v8;
  int v10 = v8[1];
  *((_WORD *)a3 + 6) = v6 + 2;
  if (v5 <= (unsigned __int16)(v6 + 2)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1207,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  *((_WORD *)a3 + 6) = v6 + 3;
  if (v5 <= (unsigned __int16)(v6 + 3)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1208,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + (unsigned __int16)(v6 + 2));
  *((_WORD *)a3 + 6) = v6 + 4;
  if (v5 <= (unsigned __int16)(v6 + 4)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1209,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v12 = *(unsigned __int8 *)(v7 + (unsigned __int16)(v6 + 3));
  *((_WORD *)a3 + 6) = v6 + 5;
  return a2(a1, v9 | (v10 << 8), v11, v12, *(unsigned __int8 *)(v7 + (unsigned __int16)(v6 + 4)));
}

uint64_t sub_10012BFF0( uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int, uint64_t), uint64_t *a3)
{
  unsigned int v5 = a1;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    if (v5) {
      a1 = v5;
    }
    else {
      a1 = 605LL;
    }
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_32:
      uint64_t v34 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      goto LABEL_34;
    }
  }

  else
  {
    if ((_DWORD)a1) {
      BOOL v6 = 1;
    }
    else {
      BOOL v6 = (unsigned __int16)(*((_WORD *)a3 + 5) - *((_WORD *)a3 + 6)) >= 0x16u;
    }
    if (v6) {
      a1 = a1;
    }
    else {
      a1 = 605LL;
    }
  }

  unsigned int v7 = *((unsigned __int16 *)a3 + 5);
  uint64_t v8 = *((unsigned __int16 *)a3 + 6);
  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v34 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_34:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1245,  v34);
  }

  uint64_t v9 = *a3;
  uint64_t v10 = v8 + 1;
  *((_WORD *)a3 + 6) = v8 + 1;
  if ((int)(v7 - (v8 + 1)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1246,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v11 = *(unsigned __int8 *)(v9 + v8);
  uint64_t v12 = v9 + v10;
  int v13 = *(unsigned __int8 *)(v9 + v10);
  int v14 = *(unsigned __int8 *)(v12 + 1);
  *((_WORD *)a3 + 6) = v8 + 3;
  if (v7 <= (unsigned __int16)(v8 + 3)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1247,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  *((_WORD *)a3 + 6) = v8 + 4;
  if (v7 <= (unsigned __int16)(v8 + 4)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1248,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v15 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 3));
  *((_WORD *)a3 + 6) = v8 + 5;
  if (v7 <= (unsigned __int16)(v8 + 5)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1249,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v16 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 4));
  *((_WORD *)a3 + 6) = v8 + 6;
  if (v7 <= (unsigned __int16)(v8 + 6)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1250,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v17 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 5));
  *((_WORD *)a3 + 6) = v8 + 7;
  if (v7 <= (unsigned __int16)(v8 + 7)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1251,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v18 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 6));
  *((_WORD *)a3 + 6) = v8 + 8;
  if (v7 <= (unsigned __int16)(v8 + 8)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1252,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v19 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 7));
  *((_WORD *)a3 + 6) = v8 + 9;
  if (v7 <= (unsigned __int16)(v8 + 9)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1253,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  char v20 = *(_BYTE *)(v9 + (unsigned __int16)(v8 + 8));
  *((_WORD *)a3 + 6) = v8 + 10;
  if (v7 <= (unsigned __int16)(v8 + 10)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1254,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  char v21 = *(_BYTE *)(v9 + (unsigned __int16)(v8 + 9));
  *((_WORD *)a3 + 6) = v8 + 11;
  if ((int)(v7 - (unsigned __int16)(v8 + 11)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1255,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  char v22 = *(_BYTE *)(v9 + (unsigned __int16)(v8 + 10));
  *((_WORD *)a3 + 6) = v8 + 13;
  if ((int)(v7 - (unsigned __int16)(v8 + 13)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1256,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  *((_WORD *)a3 + 6) = v8 + 15;
  if ((int)(v7 - (unsigned __int16)(v8 + 15)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1257,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v23 = (unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 15));
  __int16 v24 = *v23;
  __int16 v25 = v23[1];
  *((_WORD *)a3 + 6) = v8 + 17;
  if ((int)(v7 - (unsigned __int16)(v8 + 17)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1258,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  int v26 = (unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 17));
  __int16 v27 = *v26;
  __int16 v28 = v26[1];
  *((_WORD *)a3 + 6) = v8 + 19;
  if ((int)(v7 - (unsigned __int16)(v8 + 19)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1259,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  int v29 = (unsigned __int8 *)(v9 + (unsigned __int16)(v8 + 19));
  __int16 v30 = *v29;
  __int16 v31 = v29[1];
  *((_WORD *)a3 + 6) = v8 + 21;
  if (v7 <= (unsigned __int16)(v8 + 21)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1260,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  *((_WORD *)a3 + 6) = v8 + 22;
  if (v7 <= (unsigned __int16)(v8 + 22)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1261,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  char v32 = *(_BYTE *)(v9 + (unsigned __int16)(v8 + 21));
  *((_WORD *)a3 + 6) = v8 + 23;
  HIBYTE(v36) = *(_BYTE *)(v9 + (unsigned __int16)(v8 + 22));
  BYTE6(v36) = v32;
  WORD2(v36) = v30 | (v31 << 8);
  WORD1(v36) = v27 | (v28 << 8);
  LOWORD(v36) = v24 | (v25 << 8);
  BYTE2(v35) = v22;
  BYTE1(v35) = v21;
  LOBYTE(v35) = v20;
  return a2(a1, v11, v13 | (v14 << 8), v15, v16, v17, v18, v19, v35, v36);
}

uint64_t sub_10012C478(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *), uint64_t *a3)
{
  unsigned int v5 = a1;
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    uint64_t v20 = 0LL;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    if (v5) {
      a1 = v5;
    }
    else {
      a1 = 605LL;
    }
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
LABEL_7:
      BOOL v6 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_22:
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  1282,  v6);
    }
  }

  else
  {
    unsigned int v7 = (unsigned __int16)(*((_WORD *)a3 + 5) - *((_WORD *)a3 + 6));
    uint64_t v20 = 0LL;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    if ((_DWORD)a1) {
      unsigned int v8 = a1;
    }
    else {
      unsigned int v8 = 605;
    }
    if (v7 <= 0x48) {
      a1 = v8;
    }
    else {
      a1 = a1;
    }
  }

  uint64_t v9 = 0LL;
  unsigned int v10 = *((unsigned __int16 *)a3 + 5);
  uint64_t v11 = *((unsigned __int16 *)a3 + 6);
  BOOL v12 = v10 >= v11;
  LODWORD(v13) = v10 - v11;
  if (v12) {
    uint64_t v13 = v13;
  }
  else {
    uint64_t v13 = 0LL;
  }
  do
  {
    if (v13 == v9) {
      goto LABEL_7;
    }
    if (*((_BYTE *)a3 + 14) != 1)
    {
      BOOL v6 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      goto LABEL_22;
    }

    uint64_t v14 = *a3;
    *((_WORD *)a3 + 6) = v11 + v9 + 1;
    *((_BYTE *)&v16 + v9) = *(_BYTE *)(v11 + v9 + v14);
    ++v9;
  }

  while (v9 != 72);
  return a2(a1, &v16);
}

uint64_t sub_10012C5EC(__int128 **a1, _BYTE *a2, uint64_t *a3)
{
  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    return 605LL;
  }

  int v4 = *((unsigned __int16 *)a3 + 6);
  if (*((_BYTE *)a3 + 14) != 1)
  {
    BOOL v12 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_15;
  }

  if (*((unsigned __int16 *)a3 + 5) - v4 <= 1)
  {
    BOOL v12 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_15:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  224,  v12);
  }

  int v8 = *(unsigned __int16 *)(*a3 + *((unsigned __int16 *)a3 + 6));
  *((_WORD *)a3 + 6) = v4 + 2;
  uint64_t v9 = sub_10012D6D8(v8);
  *a1 = v9;
  if (v9)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c");
    }

    else
    {
      uint64_t v10 = *((unsigned __int16 *)a3 + 6);
      if (*((unsigned __int16 *)a3 + 5) > v10)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t result = 0LL;
          uint64_t v11 = *a3;
          *((_WORD *)a3 + 6) = v10 + 1;
          *a2 = *(_BYTE *)(v11 + v10);
          return result;
        }

        uint64_t v13 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_19:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcicmdapi.c",  229,  v13);
      }
    }

    uint64_t v13 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_19;
  }

  return 601LL;
}

uint64_t sub_10012C740(uint64_t a1)
{
  if (!a1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c",  47LL,  "pool");
  }
  pthread_mutex_lock((pthread_mutex_t *)a1);
  sub_1001EE0E4("_block_size: %u", *(void *)(a1 + 120));
  sub_1001EE0E4("_num_blocks_total: %u", *(_DWORD *)(a1 + 128));
  sub_1001EE0E4("_num_blocks_free: %u", *(_DWORD *)(a1 + 132));
  sub_1001EE0E4("_num_blocks_allocated: %u", *(_DWORD *)(a1 + 136));
  sub_1001EE0E4("_node_pool: %p", *(const void **)(a1 + 176));
  sub_1001EE0E4("_start_addr: %p", *(const void **)(a1 + 184));
  sub_1001EE0E4("_end_addr: %p", *(const void **)(a1 + 192));
  if (*(void *)(a1 + 160))
  {
    sub_1001EE0E4("[START] FREE LIST");
    for (uint64_t i = *(void *)(a1 + 160); i; uint64_t i = *(void *)(i + 8))
      sub_1001EE0E4("%p", *(const void **)i);
    sub_1001EE0E4("[END] FREE LIST");
  }

  else
  {
    sub_1001EE0E4("Free List Empty");
  }

  if (*(void *)(a1 + 144))
  {
    sub_1001EE0E4("[START] ALLOCATED LIST");
    for (uint64_t j = *(void *)(a1 + 144); j; uint64_t j = *(void *)(j + 8))
      sub_1001EE0E4("%p", *(const void **)j);
    sub_1001EE0E4("[END] ALLOCATED LIST");
  }

  else
  {
    sub_1001EE0E4("Allocated List Empty");
  }

  return pthread_mutex_unlock((pthread_mutex_t *)a1);
}

void sub_10012C8E4(pthread_mutex_t *a1)
{
  if (!a1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c",  64,  "pool");
  }
  if (*(void *)&a1[2].__opaque[8]) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c",  67,  "STAILQ_EMPTY(&pool->_allocated_list)");
  }
  pthread_mutex_destroy(a1);
  pthread_cond_destroy((pthread_cond_t *)&a1[1]);
  int v2 = *(void **)&a1[2].__opaque[40];
  if (v2)
  {
    free(v2);
    *(void *)&a1[2].__opaque[40] = 0LL;
  }

  int v3 = *(void **)&a1[2].__opaque[48];
  if (v3) {
    free(v3);
  }
  free(a1);
}

pthread_mutex_t *sub_10012C96C(unsigned int a1, size_t a2)
{
  if (!a1 || !a2)
  {
    sub_1001EE0E4("invalid input parameters, num_blocks_total: %u, block_size: %u", a1, a2);
    return 0LL;
  }

  int v4 = (pthread_mutex_t *)calloc(1uLL, 0xC8uLL);
  unsigned int v5 = v4;
  if (!v4)
  {
    sub_1001EE0E4("failed to allocate memory for pool struct");
    return v5;
  }

  pthread_mutex_init(v4, 0LL);
  pthread_cond_init((pthread_cond_t *)&v5[1], 0LL);
  *(void *)&v5[2].__opaque[8] = 0LL;
  *(_DWORD *)&v5[1].__opaque[40] = 0;
  *(void *)&v5[1].__opaque[48] = a2;
  LODWORD(v5[2].__sig) = a1;
  HIDWORD(v5[2].__sig) = a1;
  *(_DWORD *)v5[2].__opaque = 0;
  *(void *)&v5[2].__opaque[16] = (char *)v5 + 144;
  *(void *)&v5[2].__opaque[24] = 0LL;
  *(void *)&v5[2].__opaque[32] = (char *)v5 + 160;
  BOOL v6 = (char *)calloc(a1, a2);
  *(void *)&v5[2].__opaque[48] = v6;
  if (!v6)
  {
    sub_1001EE0E4("failed to allocate memory for pool");
LABEL_13:
    sub_10012C8E4(v5);
    return 0LL;
  }

  size_t sig_low = LODWORD(v5[2].__sig);
  v5[3].__sig = (uint64_t)&v6[*(void *)&v5[1].__opaque[48] * sig_low];
  int v8 = calloc(sig_low, 0x10uLL);
  *(void *)&v5[2].__opaque[40] = v8;
  if (!v8)
  {
    sub_1001EE0E4("failed to allocate memory for mem_addr_node_pool");
    goto LABEL_13;
  }

  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t v12 = *(void *)&v5[1].__opaque[48];
  uint64_t v13 = *(void **)&v5[2].__opaque[32];
  do
  {
    uint64_t v14 = *(void *)&v5[2].__opaque[40];
    uint64_t v15 = (void *)(v14 + v10);
    void *v15 = *(void *)&v5[2].__opaque[48] + v9;
    v15[1] = 0LL;
    *uint64_t v13 = v14 + v10;
    uint64_t v13 = (void *)(v14 + 16 * v11 + 8);
    *(void *)&v5[2].__opaque[32] = v14 + v10 + 8;
    ++v11;
    v10 += 16LL;
    v9 += v12;
  }

  while (16LL * a1 != v10);
  return v5;
}

uint64_t sub_10012CAD8(uint64_t a1)
{
  if (!a1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c",  140,  "pool");
  }
  pthread_mutex_lock((pthread_mutex_t *)a1);
  *(_DWORD *)(a1 + 112) = 1;
  if (*(void *)(a1 + 144))
  {
    int v2 = pthread_cond_wait((pthread_cond_t *)(a1 + 64), (pthread_mutex_t *)a1);
    if (v2 || *(void *)(a1 + 144))
    {
      int v4 = v2;
      pthread_mutex_unlock((pthread_mutex_t *)a1);
      sub_1001EE0E4("retval: %d", v4);
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c",  150,  "false");
    }
  }

  return pthread_mutex_unlock((pthread_mutex_t *)a1);
}

uint64_t sub_10012CB7C(uint64_t a1)
{
  if (!a1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c",  158,  "pool");
  }
  pthread_mutex_lock((pthread_mutex_t *)a1);
  int v2 = (void *)(a1 + 160);
  int v3 = *(void **)(a1 + 160);
  if (v3)
  {
    uint64_t v4 = v3[1];
    *int v2 = v4;
    if (!v4) {
      *(void *)(a1 + 168) = v2;
    }
    v3[1] = 0LL;
    **(void **)(a1 + 152) = v3;
    *(void *)(a1 + 152) = v3 + 1;
    *(int32x2_t *)(a1 + 132) = vadd_s32(*(int32x2_t *)(a1 + 132), (int32x2_t)0x1FFFFFFFFLL);
    pthread_mutex_unlock((pthread_mutex_t *)a1);
    return *v3;
  }

  else
  {
    pthread_mutex_unlock((pthread_mutex_t *)a1);
    sub_1001EE0E4("free list empty. Cannot allocate memory from pool");
    return 0LL;
  }

uint64_t sub_10012CC24(uint64_t a1, unint64_t a2)
{
  if (!a1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c",  201,  "pool");
  }
  pthread_mutex_lock((pthread_mutex_t *)a1);
  unint64_t v4 = *(void *)(a1 + 184);
  if (v4 > a2 || *(void *)(a1 + 192) <= a2)
  {
    sub_1001EE0E4("%p not from pool");
    goto LABEL_18;
  }

  unint64_t v5 = (a2 - v4) / *(void *)(a1 + 120);
  uint64_t v6 = *(void *)(a1 + 176);
  unsigned int v7 = (void *)(v6 + 16LL * (int)v5);
  if (*v7 != a2)
  {
    sub_1001EE0E4("node->addr: %p, addr: %p");
LABEL_18:
    pthread_mutex_unlock((pthread_mutex_t *)a1);
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/pcie_mempool.c",  209,  "false");
  }

  int v8 = (void *)(a1 + 144);
  uint64_t v9 = *(void **)(a1 + 144);
  if (v9 == v7)
  {
    uint64_t v15 = *(void *)(v6 + 16LL * (int)v5 + 8);
    *int v8 = v15;
    uint64_t v12 = (void *)(a1 + 144);
    if (v15) {
      goto LABEL_9;
    }
  }

  else
  {
    do
    {
      uint64_t v10 = v9;
      uint64_t v9 = (void *)v9[1];
    }

    while (v9 != v7);
    uint64_t v11 = *(void *)(v6 + 16LL * (int)v5 + 8);
    v10[1] = v11;
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_9;
    }
  }

  *(void *)(a1 + 152) = v12;
LABEL_9:
  uint64_t v13 = v6 + 16LL * (int)v5;
  *(void *)(v13 + 8) = 0LL;
  **(void **)(a1 + 168) = v7;
  *(void *)(a1 + 168) = v13 + 8;
  *(int32x2_t *)(a1 + 132) = vadd_s32(*(int32x2_t *)(a1 + 132), (int32x2_t)0xFFFFFFFF00000001LL);
  if (*(_DWORD *)(a1 + 112) && !*v8) {
    pthread_cond_signal((pthread_cond_t *)(a1 + 64));
  }
  return pthread_mutex_unlock((pthread_mutex_t *)a1);
}

uint64_t sub_10012CD7C()
{
  byte_1008F6E19 = 1;
  byte_1008E22C0 = 1;
  dword_1008E22C4 = 0;
  dword_1008E22C8 = 0;
  qword_1008E22D0 = (uint64_t)sub_1000B1814(48LL * *(unsigned __int8 *)(qword_1008F6D80 + 2));
  if (qword_1008E22D0) {
    return 0LL;
  }
  else {
    return 106LL;
  }
}

void sub_10012CDE0()
{
  int v0 = dword_1008E22C4;
  if (dword_1008E22C4)
  {
    uint64_t v1 = 0LL;
    unint64_t v2 = 0LL;
    do
    {
      int v3 = (void **)(qword_1008E22D0 + v1);
      if (*(_WORD *)(qword_1008E22D0 + v1 + 20) != 3125) {
        sub_100131480(129LL, (uint64_t)(v3 + 2));
      }
      sub_1000B1838(*v3);
      ++v2;
      int v0 = dword_1008E22C4;
      v1 += 48LL;
    }

    while (v2 < dword_1008E22C4);
  }

  if (!byte_1008F6E19) {
    byte_1008F6E19 = 1;
  }
  if (byte_1008E22C0)
  {
    if (!v0) {
      return;
    }
  }

  else
  {
    byte_1008E22C0 = 1;
    if (!v0) {
      return;
    }
  }

  dword_1008E22C4 = 0;
}

void sub_10012CE94()
{
  byte_1008E22C0 = 1;
  if (dword_1008E22C4) {
    BOOL v0 = byte_1008F6E19 == 0;
  }
  else {
    BOOL v0 = 1;
  }
  if (!v0) {
    sub_10012D018();
  }
}

uint64_t sub_10012CEC4()
{
  if (dword_1008E22C4)
  {
    if (byte_1008E22C0) {
      BOOL v0 = byte_1008F6E19 == 0;
    }
    else {
      BOOL v0 = 1;
    }
    if (!v0) {
      return sub_10012D018();
    }
  }

  return result;
}

uint64_t sub_10012CEF4(void *ptr, __int16 a2, _OWORD *a3)
{
  *(_OWORD *)&v10[6] = *a3;
  *(_WORD *)&v10[4] = 0;
  *(_DWORD *)uint64_t v10 = 0;
  *(_OWORD *)&v10[22] = a3[1];
  unsigned int v5 = dword_1008E22C4;
  unsigned int v6 = *(unsigned __int8 *)(qword_1008F6D80 + 2);
  if (dword_1008E22C4 > v6)
  {
    sub_1001EE2A0();
    unsigned int v5 = dword_1008E22C4;
    unsigned int v6 = *(unsigned __int8 *)(qword_1008F6D80 + 2);
  }

  if (v5 == v6)
  {
    sub_1000B1838(ptr);
    return 611LL;
  }

  else
  {
    uint64_t v8 = qword_1008E22D0 + 48LL * v5;
    *(_OWORD *)(v8 + sub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = *(_OWORD *)v10;
    *(void *)uint64_t v8 = ptr;
    *(_WORD *)(v8 + 8) = a2;
    *(_OWORD *)(v8 + 26) = *(_OWORD *)&v10[16];
    *(void *)(v8 + 40) = *(void *)&v10[30];
    unsigned int v9 = v5 + 1;
    dword_1008E22C4 = v9;
    if (v9 > dword_1008E22C8) {
      dword_1008E22C8 = v9;
    }
    uint64_t result = 0LL;
    if (byte_1008E22C0)
    {
      if (byte_1008F6E19)
      {
        sub_10012D018();
        return 0LL;
      }
    }
  }

  return result;
}

void sub_10012D018()
{
  BOOL v0 = (_WORD *)qword_1008E22D0;
  if (byte_1008E22C0) {
    BOOL v1 = byte_1008F6E19 == 0;
  }
  else {
    BOOL v1 = 1;
  }
  if (v1) {
    sub_1001EE2A0();
  }
  int v39 = 0;
  int v2 = (unsigned __int16)v0[10];
  if (v2 != 3125 && sub_100133868((uint64_t)(v0 + 8), (unsigned int *)&v39))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Unable to add opcode 0x%x to expected event queue with status %!",  v29,  v30,  v31,  v32,  v33,  v34,  v35,  (unsigned __int16)v0[10]);
      uint64_t v36 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_10065AFF0(v36);
      }
    }

    uint64_t v37 = sub_10016F5D4((unsigned __int16)v0[10]);
    sub_1000B034C(635LL, v37);
  }

  if (off_1008F6DE8)
  {
    uint64_t v3 = 629LL;
LABEL_14:
    if (v2 != 3125)
    {
      uint64_t v4 = sub_100133D98(v39);
      if ((_DWORD)v4)
      {
        uint64_t v5 = v4;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_HCIExpEvQ_RemoveEvent failed: %!", v6, v7, v8, v9, v10, v11, v12, v5);
          uint64_t v13 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
            sub_10065BB00();
          }
        }
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCIIfc_SendHciCommand failed", v14, v15, v16, v17, v18, v19, v20, v38);
        char v21 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_10065BBEC();
        }
      }
    }

uint64_t sub_10012D31C()
{
  if (dword_1008E22C4)
  {
    unint64_t v0 = 0LL;
    uint64_t v1 = 20LL;
    do
    {
      sub_1001EE0E4("   cmd opcode: 0x%4x\n", *(unsigned __int16 *)(qword_1008E22D0 + v1));
      ++v0;
      v1 += 48LL;
    }

    while (v0 < dword_1008E22C4);
  }

  sub_1001EE0E4("   queueHighWaterMaruint64_t k = %d\n", dword_1008E22C8);
  if (byte_1008E22C0) {
    int v2 = "TRUE";
  }
  else {
    int v2 = "FALSE";
  }
  sub_1001EE0E4("   Command Transport Ready = %s\n", v2);
  return sub_1001EE0E4("   OI_HCIFlow_NumCmdPktsAllowed = %d\n", byte_1008F6E19);
}

uint64_t sub_10012D414()
{
  dword_1008E2578 = 0;
  qword_1008E2580 = 0LL;
  dword_1008E2588 = 0;
  qword_1008E2590 = 0LL;
  dword_1008E2598 = 0;
  qword_1008E25A0 = 0LL;
  dword_1008E25A8 = 0;
  qword_1008E25B0 = 0LL;
  dword_1008E25B8 = 0;
  qword_1008E25C0 = 0LL;
  dword_1008E25C8 = 0;
  qword_1008E25D0 = 0LL;
  xmmword_1008E22D8 = 0u;
  *(_OWORD *)&word_1008E22E8 = 0u;
  xmmword_1008E22F8 = 0u;
  unk_1008E2308 = 0u;
  xmmword_1008E2318 = 0u;
  unk_1008E2328 = 0u;
  xmmword_1008E2338 = 0u;
  unk_1008E2348 = 0u;
  xmmword_1008E2358 = 0u;
  unk_1008E2368 = 0u;
  xmmword_1008E2378 = 0u;
  unk_1008E2388 = 0u;
  xmmword_1008E2398 = 0u;
  unk_1008E23A8 = 0u;
  xmmword_1008E23B8 = 0u;
  unk_1008E23C8 = 0u;
  xmmword_1008E23D8 = 0u;
  unk_1008E23E8 = 0u;
  xmmword_1008E23F8 = 0u;
  unk_1008E2408 = 0u;
  xmmword_1008E2418 = 0u;
  BYTE2(xmmword_1008E22D8) = 2;
  int v0 = dword_1008D7430 + 1;
  DWORD1(xmmword_1008E22D8) = dword_1008D7430;
  xmmword_1008E2428 = 0u;
  *(_OWORD *)&word_1008E2438 = 0u;
  xmmword_1008E2448 = 0u;
  unk_1008E2458 = 0u;
  xmmword_1008E2468 = 0u;
  unk_1008E2478 = 0u;
  xmmword_1008E2488 = 0u;
  unk_1008E2498 = 0u;
  xmmword_1008E24A8 = 0u;
  unk_1008E24B8 = 0u;
  xmmword_1008E24C8 = 0u;
  unk_1008E24D8 = 0u;
  xmmword_1008E24E8 = 0u;
  unk_1008E24F8 = 0u;
  xmmword_1008E2508 = 0u;
  unk_1008E2518 = 0u;
  xmmword_1008E2528 = 0u;
  unk_1008E2538 = 0u;
  xmmword_1008E2548 = 0u;
  unk_1008E2558 = 0u;
  xmmword_1008E2568 = 0u;
  BYTE2(xmmword_1008E2428) = 3;
  dword_1008D7430 += 2;
  DWORD1(xmmword_1008E2428) = v0;
  return 0LL;
}

BOOL sub_10012D514(uint64_t a1)
{
  BOOL v1 = 0LL;
  if (a1)
  {
    for (uint64_t i = qword_1008E2580; i; uint64_t i = *(void *)(i + 40))
    {
      BOOL v1 = i == a1;
      if (i == a1) {
        break;
      }
    }
  }

  return v1;
}

BOOL sub_10012D544(uint64_t a1)
{
  uint64_t v1 = 0LL;
  if (a1)
  {
    uint64_t v2 = qword_1008E2580;
    if (qword_1008E2580)
    {
      while (v2 != a1)
      {
        uint64_t v2 = *(void *)(v2 + 40);
        if (!v2) {
          return 0LL;
        }
      }

      return *(_BYTE *)(a1 + 304) != 0;
    }
  }

  return v1;
}

uint64_t sub_10012D584(uint64_t a1)
{
  uint64_t v1 = 0LL;
  if (a1)
  {
    uint64_t v2 = qword_1008E2580;
    if (qword_1008E2580)
    {
      while (v2 != a1)
      {
        uint64_t v2 = *(void *)(v2 + 40);
        if (!v2) {
          return 0LL;
        }
      }

      return *(unsigned __int8 *)(a1 + 153);
    }
  }

  return v1;
}

BOOL sub_10012D5BC(uint64_t a1)
{
  BOOL v1 = 0LL;
  if (a1)
  {
    for (uint64_t i = qword_1008E2590; i; uint64_t i = *(void *)(i + 40))
    {
      BOOL v1 = i == a1;
      if (i == a1) {
        break;
      }
    }
  }

  return v1;
}

BOOL sub_10012D5EC(uint64_t a1)
{
  BOOL v1 = 0LL;
  if (a1)
  {
    for (uint64_t i = qword_1008E25A0; i; uint64_t i = *(void *)(i + 40))
    {
      BOOL v1 = i == a1;
      if (i == a1) {
        break;
      }
    }
  }

  return v1;
}

uint64_t sub_10012D61C(uint64_t a1)
{
  uint64_t v1 = 0LL;
  if (a1)
  {
    uint64_t v2 = qword_1008E25D0;
    if (qword_1008E25D0)
    {
      while (v2 != a1)
      {
        uint64_t v2 = *(void *)(v2 + 40);
        if (!v2) {
          return 0LL;
        }
      }

      return 1LL;
    }
  }

  return v1;
}

uint64_t sub_10012D654(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 2)) {
    sub_1001EE2A0();
  }
  return (*(unsigned __int8 *)(a1 + 152) >> 7) ^ 1u;
}

BOOL sub_10012D688(uint64_t a1)
{
  BOOL result = *(_BYTE *)(a1 + 2) != 4 && (sub_1001EE2A0(), *(_BYTE *)(a1 + 2) != 4) || *(_BYTE *)(a1 + 166) != 2;
  return result;
}

__int128 *sub_10012D6D8(int a1)
{
  BOOL result = (__int128 *)qword_1008E2580;
  if (qword_1008E2580)
  {
    while (*((_BYTE *)result + 54) == 7 || *(unsigned __int16 *)result != a1)
    {
      BOOL result = (__int128 *)*((void *)result + 5);
      if (!result) {
        goto LABEL_5;
      }
    }
  }

  else
  {
LABEL_5:
    BOOL result = (__int128 *)qword_1008E2590;
    if (qword_1008E2590)
    {
      while (*(unsigned __int16 *)result != a1)
      {
        BOOL result = (__int128 *)*((void *)result + 5);
        if (!result) {
          goto LABEL_8;
        }
      }
    }

    else
    {
LABEL_8:
      BOOL result = (__int128 *)qword_1008E25A0;
      if (qword_1008E25A0)
      {
        while (*(unsigned __int16 *)result != a1)
        {
          BOOL result = (__int128 *)*((void *)result + 5);
          if (!result) {
            goto LABEL_11;
          }
        }
      }

      else
      {
LABEL_11:
        BOOL result = (__int128 *)qword_1008E25B0;
        if (qword_1008E25B0)
        {
          while (*(unsigned __int16 *)result != a1)
          {
            BOOL result = (__int128 *)*((void *)result + 5);
            if (!result) {
              goto LABEL_14;
            }
          }
        }

        else
        {
LABEL_14:
          BOOL result = (__int128 *)qword_1008E25C0;
          if (qword_1008E25C0)
          {
            while (*(unsigned __int16 *)result != a1)
            {
              BOOL result = (__int128 *)*((void *)result + 5);
              if (!result) {
                goto LABEL_17;
              }
            }
          }

          else
          {
LABEL_17:
            BOOL result = (__int128 *)qword_1008E25D0;
            if (qword_1008E25D0)
            {
              while (*(unsigned __int16 *)result != a1)
              {
                BOOL result = (__int128 *)*((void *)result + 5);
                if (!result) {
                  goto LABEL_20;
                }
              }
            }

            else
            {
LABEL_20:
              BOOL result = &xmmword_1008E22D8;
              if ((unsigned __int16)xmmword_1008E22D8 != a1)
              {
                else {
                  return 0LL;
                }
              }
            }
          }
        }
      }
    }
  }

  return result;
}

uint64_t sub_10012D7D4(unsigned __int16 *a1)
{
  uint64_t v1 = qword_1008E2580;
  if (qword_1008E2580)
  {
    while ((unsigned __int16 *)v1 != a1 || *(_BYTE *)(v1 + 54) == 7)
    {
      uint64_t v1 = *(void *)(v1 + 40);
      if (!v1) {
        goto LABEL_5;
      }
    }
  }

  else
  {
LABEL_5:
    uint64_t v2 = qword_1008E2590;
    if (qword_1008E2590)
    {
      while ((unsigned __int16 *)v2 != a1)
      {
        uint64_t v2 = *(void *)(v2 + 40);
        if (!v2) {
          goto LABEL_8;
        }
      }
    }

    else
    {
LABEL_8:
      uint64_t v3 = qword_1008E25A0;
      if (qword_1008E25A0)
      {
        while ((unsigned __int16 *)v3 != a1)
        {
          uint64_t v3 = *(void *)(v3 + 40);
          if (!v3) {
            goto LABEL_11;
          }
        }
      }

      else
      {
LABEL_11:
        uint64_t v4 = qword_1008E25D0;
        if (qword_1008E25D0)
        {
          while ((unsigned __int16 *)v4 != a1)
          {
            uint64_t v4 = *(void *)(v4 + 40);
            if (!v4) {
              goto LABEL_14;
            }
          }
        }

        else
        {
LABEL_14:
          uint64_t v5 = qword_1008E25B0;
          if (!qword_1008E25B0) {
            return 0LL;
          }
          while ((unsigned __int16 *)v5 != a1)
          {
            uint64_t v5 = *(void *)(v5 + 40);
            if (!v5) {
              return 0LL;
            }
          }
        }
      }
    }
  }

  return *a1;
}

uint64_t sub_10012D87C(uint64_t a1)
{
  uint64_t v1 = (unsigned __int16 *)sub_10012D890(a1);
  return sub_10012D7D4(v1);
}

uint64_t sub_10012D890(uint64_t a1)
{
  uint64_t v1 = 0LL;
  if (a1)
  {
    uint64_t v2 = qword_1008E2580;
    if (qword_1008E2580)
    {
      while (*(_BYTE *)(v2 + 54) == 7
           || *(_DWORD *)(v2 + 48) != *(_DWORD *)a1
           || *(unsigned __int16 *)(v2 + 52) != *(unsigned __int16 *)(a1 + 4))
      {
        uint64_t v2 = *(void *)(v2 + 40);
        if (!v2) {
          return 0LL;
        }
      }

      return v2;
    }
  }

  return v1;
}

uint64_t sub_10012D8E8(uint64_t a1)
{
  for (uint64_t i = qword_1008E2590; i; uint64_t i = *(void *)(i + 40))
  {
    uint64_t v3 = *(void *)(i + 48);
    if (v3)
    {
      if (*(_BYTE *)(v3 + 54) != 7)
      {
        int v4 = *(_DWORD *)(v3 + 48);
        int v5 = *(unsigned __int16 *)(v3 + 52);
      }
    }

    else
    {
      sub_1001EE2A0();
    }
  }

  return i;
}

uint64_t sub_10012D954(unint64_t a1)
{
  uint64_t v1 = sub_1001BCDB0(a1);
  int v3 = v1;
  char v5 = BYTE6(v1);
  __int16 v4 = WORD2(v1);
  return sub_10012D98C(&v3);
}

uint64_t sub_10012D98C(_DWORD *a1)
{
  for (uint64_t result = qword_1008E25A0; result; uint64_t result = *(void *)(result + 40))
  {
    if (*(_BYTE *)(result + 124) != 7)
    {
      if (*(_BYTE *)(result + 55))
      {
      }
    }
  }

  return result;
}

uint64_t sub_10012D9F4(uint64_t a1)
{
  uint64_t result = qword_1008E2580;
  if (qword_1008E2580)
  {
    while (*(_BYTE *)(result + 54) == 7
         || *(_DWORD *)(result + 48) != *(_DWORD *)a1
         || *(unsigned __int16 *)(result + 52) != *(unsigned __int16 *)(a1 + 4))
    {
      uint64_t result = *(void *)(result + 40);
      if (!result) {
        goto LABEL_8;
      }
    }
  }

  else
  {
LABEL_8:
    uint64_t result = qword_1008E25A0;
    if (qword_1008E25A0)
    {
      while (1)
      {
        if (*(_BYTE *)(result + 124) != 7)
        {
          if (*(_BYTE *)(result + 55))
          {
            if (*(_DWORD *)(result + 57) == *(_DWORD *)a1
              && *(unsigned __int16 *)(result + 61) == *(unsigned __int16 *)(a1 + 4))
            {
              break;
            }
          }

          if (*(_DWORD *)(result + 49) == *(_DWORD *)a1
            && *(unsigned __int16 *)(result + 53) == *(unsigned __int16 *)(a1 + 4))
          {
            break;
          }
        }

        uint64_t result = *(void *)(result + 40);
        if (!result) {
          goto LABEL_20;
        }
      }
    }

    else
    {
LABEL_20:
      for (uint64_t result = qword_1008E2590; result; uint64_t result = *(void *)(result + 40))
      {
        uint64_t v6 = *(void *)(result + 48);
        if (v6 && *(_BYTE *)(v6 + 54) != 7)
        {
          int v7 = *(_DWORD *)(v6 + 48);
          int v8 = *(unsigned __int16 *)(v6 + 52);
        }
      }
    }
  }

  return result;
}

uint64_t sub_10012DADC(uint64_t a1)
{
  uint64_t v1 = 0LL;
  if (a1)
  {
    uint64_t v2 = qword_1008E25A0;
    if (qword_1008E25A0)
    {
      while (v2 != a1 || *(_BYTE *)(v2 + 124) == 7)
      {
        uint64_t v2 = *(void *)(v2 + 40);
        if (!v2) {
          return 0LL;
        }
      }

      uint64_t v1 = a1 + 48;
      if (*(_BYTE *)(a1 + 55)) {
        return a1 + 56;
      }
    }
  }

  return v1;
}

uint64_t sub_10012DB30(uint64_t a1)
{
  uint64_t v1 = 0LL;
  if (a1)
  {
    uint64_t v2 = qword_1008E2580;
    if (qword_1008E2580)
    {
      while (v2 != a1 || *(_BYTE *)(v2 + 54) == 7)
      {
        uint64_t v2 = *(void *)(v2 + 40);
        if (!v2) {
          return 0LL;
        }
      }

      return a1 + 48;
    }
  }

  return v1;
}

__int16 *sub_10012DB74(uint64_t a1)
{
  uint64_t v1 = (__int16 *)qword_1008E2590;
  if (qword_1008E2590)
  {
    do
    {
      if (*v1 == -1)
      {
        uint64_t v3 = *((void *)v1 + 6);
        if (v3)
        {
          int v4 = *(_DWORD *)(v3 + 48);
          int v5 = *(unsigned __int16 *)(v3 + 52);
        }

        else
        {
          sub_1001EE2A0();
        }
      }

      uint64_t v1 = (__int16 *)*((void *)v1 + 5);
    }

    while (v1);
  }

  return v1;
}

uint64_t sub_10012DBE0(uint64_t a1, char a2)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Allocating ACL connection for %: at state:%d while numAclConnections is %d",  v4,  v5,  v6,  v7,  v8,  v9,  v10,  a1);
    uint64_t v11 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136446210;
      uint64_t v47 = sub_1001EDDCC();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }

  int v12 = dword_1008E2578;
  if (v12 == *(unsigned __int8 *)sub_1001EDBA0(0x28u))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Max ACL connections reached - refusing to allocate acl connection record",  v13,  v14,  v15,  v16,  v17,  v18,  v19,  v45);
      uint64_t v20 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EE2A0();
    return 0LL;
  }

  char v21 = sub_1000B1814(0x150uLL);
  if (!v21)
  {
LABEL_20:
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Out of memory - unable to allocate acl connection record",  v36,  v37,  v38,  v39,  v40,  v41,  v42,  v45);
      uint64_t v43 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 0LL;
  }

  uint64_t v22 = (uint64_t)v21;
  int v23 = *(_DWORD *)a1;
  v21[26] = *(_WORD *)(a1 + 4);
  *((_DWORD *)v21 + 12) = v23;
  *((_BYTE *)v21 + 54) = a2;
  v21[69] = *(_WORD *)(qword_1008F6D08 + 10) & 6 | 1;
  *((_BYTE *)v21 + 144) = -1;
  *((_BYTE *)v21 + 152) = 0;
  v21[70] = 32000;
  *((_BYTE *)v21 + 2) = 0;
  *char v21 = -1;
  int v24 = dword_1008D7430++;
  *((_DWORD *)v21 + 1) = v24;
  v21[10] = -1;
  *((_BYTE *)v21 + 256) = *(_BYTE *)(sub_1001EDBA0(0x28u) + 10) != 0;
  *(_BYTE *)(v22 + 153) = 0;
  *(_DWORD *)(v22 + 324) = 0;
  uint64_t v25 = &qword_1008E2580;
  uint64_t v26 = qword_1008E2580;
  if (qword_1008E2580)
  {
    do
    {
      uint64_t v27 = v26;
      uint64_t v26 = *(void *)(v26 + 40);
    }

    while (v26);
    uint64_t v25 = (uint64_t *)(v27 + 40);
  }

  *uint64_t v25 = v22;
  ++dword_1008E2578;
  if (sub_10018A4AC(v22))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Fail to allocate L2CAP resources for new ACL connection",  v28,  v29,  v30,  v31,  v32,  v33,  v34,  v45);
      uint64_t v35 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10012DE94(v22);
    sub_1000B1838((void *)v22);
    goto LABEL_20;
  }

  return v22;
}

void sub_10012DE94(uint64_t a1)
{
  uint64_t v2 = qword_1008E2580;
  if (qword_1008E2580 == a1)
  {
    qword_1008E2580 = *(void *)(a1 + 40);
LABEL_6:
    --dword_1008E2578;
  }

  else
  {
    while (v2)
    {
      uint64_t v3 = v2;
      uint64_t v2 = *(void *)(v2 + 40);
      if (v2 == a1)
      {
        *(void *)(v3 + 40) = *(void *)(a1 + 40);
        goto LABEL_6;
      }
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"RemoveAclHandleFromList: invalid handle %x", v4, v5, v6, v7, v8, v9, v10, a1);
      uint64_t v11 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_10065BC5C();
      }
    }
  }

char *sub_10012DF44(uint64_t a1)
{
  int v2 = dword_1008E2588;
  if (v2 == *(unsigned __int8 *)(sub_1001EDBA0(0x28u) + 1))
  {
    sub_1001EE134( (uint64_t)"Max SCO connections reached - refusing to allocate sco connection record",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  v26);
    uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
    goto LABEL_12;
  }

  uint64_t v11 = (char *)sub_1000B1814(0x40uLL);
  if (!v11)
  {
    sub_1001EE134( (uint64_t)"Out of memory - unable to allocate sco connection record",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  v26);
    int v24 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
LABEL_12:
    sub_100657858();
    return 0LL;
  }

  int v12 = v11;
  *((void *)v11 + 6) = sub_10012D890(a1);
  *(_WORD *)(v12 + 57) = 255;
  v12[59] = 0;
  _DWORD v12[2] = 1;
  *(_WORD *)int v12 = -1;
  int v13 = dword_1008D7430++;
  *((_DWORD *)v12 + 1) = v13;
  uint64_t v14 = &qword_1008E2590;
  uint64_t v15 = qword_1008E2590;
  if (qword_1008E2590)
  {
    do
    {
      uint64_t v16 = v15;
      uint64_t v15 = *(void *)(v15 + 40);
    }

    while (v15);
    uint64_t v14 = (uint64_t *)(v16 + 40);
  }

  *uint64_t v14 = (uint64_t)v12;
  ++dword_1008E2588;
  return v12;
}

void *sub_10012E08C(int *a1)
{
  int v2 = dword_1008E2598;
  if (v2 == *(unsigned __int8 *)(sub_1001EDBA0(0x28u) + 2))
  {
    sub_1001EE134( (uint64_t)"Max LE connections reached - refusing to allocate LE connection record",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  v28);
    uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
    goto LABEL_10;
  }

  uint64_t v11 = sub_1000B1814(0x150uLL);
  if (!v11)
  {
    sub_1001EE134( (uint64_t)"Out of memory - unable to allocate LE connection record",  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v28);
    uint64_t v23 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
LABEL_10:
    sub_100657858();
    return 0LL;
  }

  int v12 = v11;
  int v13 = *a1;
  __int16 v14 = *((_WORD *)a1 + 2);
  *((_BYTE *)v11 + 54) = *((_BYTE *)a1 + 6);
  *((_WORD *)v11 + 26) = v14;
  *((_DWORD *)v11 + 12) = v13;
  *((_BYTE *)v11 + 2) = 4;
  int v15 = dword_1008D7430++;
  *((_DWORD *)v11 + 1) = v15;
  if (sub_10018A4AC((uint64_t)v11))
  {
    sub_1000B1838(v12);
    return 0LL;
  }

  uint64_t v25 = &qword_1008E25A0;
  uint64_t v26 = qword_1008E25A0;
  if (qword_1008E25A0)
  {
    do
    {
      uint64_t v27 = v26;
      uint64_t v26 = *(void *)(v26 + 40);
    }

    while (v26);
    uint64_t v25 = (uint64_t *)(v27 + 40);
  }

  *uint64_t v25 = (uint64_t)v12;
  ++dword_1008E2598;
  return v12;
}

void *sub_10012E1E0(uint64_t a1)
{
  int v2 = dword_1008E25C8;
  if (v2 == *(unsigned __int8 *)(sub_1001EDBA0(0x28u) + 5))
  {
    sub_1001EE134( (uint64_t)"Max OTHER connections reached - refusing to allocate new OTHER connection record",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  v26);
    uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
    goto LABEL_10;
  }

  uint64_t v11 = sub_1000B1814(0x48uLL);
  if (!v11)
  {
    sub_1001EE134( (uint64_t)"Out of memory - unable to allocate OTHER connection record",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  v26);
    uint64_t v21 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
LABEL_10:
    sub_100657858();
    return 0LL;
  }

  int v12 = v11;
  *((_BYTE *)v11 + 2) = 8;
  *((void *)v11 + 6) = a1;
  int v13 = dword_1008D7430++;
  *((_DWORD *)v11 + 1) = v13;
  if (sub_10018A4AC((uint64_t)v11))
  {
    sub_1000B1838(v12);
    return 0LL;
  }

  uint64_t v23 = &qword_1008E25D0;
  uint64_t v24 = qword_1008E25D0;
  if (qword_1008E25D0)
  {
    do
    {
      uint64_t v25 = v24;
      uint64_t v24 = *(void *)(v24 + 40);
    }

    while (v24);
    uint64_t v23 = (uint64_t *)(v25 + 40);
  }

  *uint64_t v23 = (uint64_t)v12;
  ++dword_1008E25C8;
  return v12;
}

void sub_10012E320(unsigned __int16 *a1)
{
  if (a1)
  {
    switch(*((_BYTE *)a1 + 2))
    {
      case 0:
        uint64_t v2 = qword_1008E2580;
        if (qword_1008E2580)
        {
          while ((unsigned __int16 *)v2 != a1)
          {
            uint64_t v2 = *(void *)(v2 + 40);
            if (!v2) {
              goto LABEL_6;
            }
          }
        }

        else
        {
LABEL_6:
          sub_1001EE2A0();
        }

        sub_10018A554((uint64_t)a1);
        if (*((void *)a1 + 20)) {
          sub_1001EE2A0();
        }
        if (*((void *)a1 + 15)) {
          sub_1001EE2A0();
        }
        if (*((void *)a1 + 16)) {
          sub_1001EE2A0();
        }
        uint64_t v3 = (void *)*((void *)a1 + 15);
        if (v3)
        {
          sub_1000B1838(v3);
          *((void *)a1 + 15) = 0LL;
        }

        uint64_t v4 = (void *)*((void *)a1 + 16);
        if (v4)
        {
          sub_1000B1838(v4);
          *((void *)a1 + 16) = 0LL;
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Releasing ACL connection 0x%x with addr %: numAclConnections:%d",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  *a1);
          int v12 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int buf = 136446210;
            uint64_t v129 = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        sub_1001EEB14(*((unsigned int *)a1 + 18));
        *((_DWORD *)a1 + 18) = 0;
        uint64_t v13 = *((unsigned int *)a1 + 44);
        if ((_DWORD)v13) {
          sub_1001EEB14(v13);
        }
        sub_10013354C(a1);
        sub_10012DE94((uint64_t)a1);
        break;
      case 1:
        uint64_t v22 = qword_1008E2590;
        if (qword_1008E2590)
        {
          while ((unsigned __int16 *)v22 != a1)
          {
            uint64_t v22 = *(void *)(v22 + 40);
            if (!v22) {
              goto LABEL_29;
            }
          }
        }

        else
        {
LABEL_29:
          sub_1001EE2A0();
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Releasing SCO connection 0x%4x", v23, v24, v25, v26, v27, v28, v29, *a1);
          uint64_t v30 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int buf = 136446210;
            uint64_t v129 = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        sub_10013354C(a1);
        uint64_t v31 = qword_1008E2590;
        if ((unsigned __int16 *)qword_1008E2590 == a1)
        {
          qword_1008E2590 = *((void *)a1 + 5);
LABEL_91:
          --dword_1008E2588;
        }

        else
        {
          while (v31)
          {
            uint64_t v32 = v31;
            uint64_t v31 = *(void *)(v31 + 40);
            if ((unsigned __int16 *)v31 == a1)
            {
              *(void *)(v32 + 40) = *((void *)a1 + 5);
              goto LABEL_91;
            }
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"OI_HCI_ReleaseConnection: %x", v80, v81, v82, v83, v84, v85, v86, (uint64_t)a1);
            uint64_t v87 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v87, OS_LOG_TYPE_ERROR)) {
              goto LABEL_118;
            }
          }
        }

        break;
      case 4:
        uint64_t v44 = qword_1008E25A0;
        if (qword_1008E25A0)
        {
          while ((unsigned __int16 *)v44 != a1)
          {
            uint64_t v44 = *(void *)(v44 + 40);
            if (!v44) {
              goto LABEL_52;
            }
          }
        }

        else
        {
LABEL_52:
          sub_1001EE2A0();
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Releasing LE connection 0x%4x", v45, v46, v47, v48, v49, v50, v51, *a1);
          uint64_t v52 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int buf = 136446210;
            uint64_t v129 = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        sub_10018A554((uint64_t)a1);
        sub_1001EEB14(*((unsigned int *)a1 + 50));
        *((_DWORD *)a1 + 50) = 0;
        sub_10013354C(a1);
        sub_1001D3230((uint64_t)a1);
        uint64_t v53 = qword_1008E25A0;
        if ((unsigned __int16 *)qword_1008E25A0 == a1)
        {
          qword_1008E25A0 = *((void *)a1 + 5);
LABEL_95:
          --dword_1008E2598;
        }

        else
        {
          while (v53)
          {
            uint64_t v54 = v53;
            uint64_t v53 = *(void *)(v53 + 40);
            if ((unsigned __int16 *)v53 == a1)
            {
              *(void *)(v54 + 40) = *((void *)a1 + 5);
              goto LABEL_95;
            }
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"OI_HCI_ReleaseConnection: %x", v96, v97, v98, v99, v100, v101, v102, (uint64_t)a1);
            uint64_t v103 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v103, OS_LOG_TYPE_ERROR)) {
              goto LABEL_118;
            }
          }
        }

        break;
      case 5:
        uint64_t v55 = qword_1008E25B0;
        if (qword_1008E25B0)
        {
          while ((unsigned __int16 *)v55 != a1)
          {
            uint64_t v55 = *(void *)(v55 + 40);
            if (!v55) {
              goto LABEL_63;
            }
          }
        }

        else
        {
LABEL_63:
          sub_1001EE2A0();
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Releasing LE CIS connection 0x%4x", v56, v57, v58, v59, v60, v61, v62, *a1);
          uint64_t v63 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int buf = 136446210;
            uint64_t v129 = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        uint64_t v64 = qword_1008E25B0;
        if ((unsigned __int16 *)qword_1008E25B0 == a1)
        {
          qword_1008E25B0 = *((void *)a1 + 5);
LABEL_97:
          --dword_1008E25A8;
        }

        else
        {
          while (v64)
          {
            uint64_t v65 = v64;
            uint64_t v64 = *(void *)(v64 + 40);
            if ((unsigned __int16 *)v64 == a1)
            {
              *(void *)(v65 + 40) = *((void *)a1 + 5);
              goto LABEL_97;
            }
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"OI_HCI_ReleaseConnection: %x",  v104,  v105,  v106,  v107,  v108,  v109,  v110,  (uint64_t)a1);
            uint64_t v111 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v111, OS_LOG_TYPE_ERROR)) {
              goto LABEL_118;
            }
          }
        }

        break;
      case 6:
        uint64_t v66 = qword_1008E25C0;
        if (qword_1008E25C0)
        {
          while ((unsigned __int16 *)v66 != a1)
          {
            uint64_t v66 = *(void *)(v66 + 40);
            if (!v66) {
              goto LABEL_74;
            }
          }
        }

        else
        {
LABEL_74:
          sub_1001EE2A0();
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Releasing LE BIS connection 0x%4x", v67, v68, v69, v70, v71, v72, v73, *a1);
          uint64_t v74 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v74, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int buf = 136446210;
            uint64_t v129 = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v74, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        uint64_t v75 = qword_1008E25C0;
        if ((unsigned __int16 *)qword_1008E25C0 == a1)
        {
          qword_1008E25C0 = *((void *)a1 + 5);
LABEL_99:
          --dword_1008E25B8;
        }

        else
        {
          while (v75)
          {
            uint64_t v76 = v75;
            uint64_t v75 = *(void *)(v75 + 40);
            if ((unsigned __int16 *)v75 == a1)
            {
              *(void *)(v76 + 40) = *((void *)a1 + 5);
              goto LABEL_99;
            }
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"OI_HCI_ReleaseConnection: %x",  v112,  v113,  v114,  v115,  v116,  v117,  v118,  (uint64_t)a1);
            uint64_t v119 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR)) {
              goto LABEL_118;
            }
          }
        }

        break;
      case 7:
        uint64_t v33 = qword_1008E25D8;
        if (qword_1008E25D8)
        {
          while ((unsigned __int16 *)v33 != a1)
          {
            uint64_t v33 = *(void *)(v33 + 40);
            if (!v33) {
              goto LABEL_41;
            }
          }
        }

        else
        {
LABEL_41:
          sub_1001EE2A0();
        }

        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Releasing LE BIS sync connection 0x%4x", v34, v35, v36, v37, v38, v39, v40, *a1);
          uint64_t v41 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int buf = 136446210;
            uint64_t v129 = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }

        uint64_t v42 = qword_1008E25D8;
        if ((unsigned __int16 *)qword_1008E25D8 == a1)
        {
          qword_1008E25D8 = *((void *)a1 + 5);
LABEL_93:
          --dword_1008E25E0;
        }

        else
        {
          while (v42)
          {
            uint64_t v43 = v42;
            uint64_t v42 = *(void *)(v42 + 40);
            if ((unsigned __int16 *)v42 == a1)
            {
              *(void *)(v43 + 40) = *((void *)a1 + 5);
              goto LABEL_93;
            }
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"OI_HCI_ReleaseConnection: %x", v88, v89, v90, v91, v92, v93, v94, (uint64_t)a1);
            int v95 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v95, OS_LOG_TYPE_ERROR)) {
LABEL_118:
            }
              sub_10065BC5C();
          }
        }

        break;
      case 8:
        uint64_t v77 = qword_1008E25D0;
        if (qword_1008E25D0)
        {
          while ((unsigned __int16 *)v77 != a1)
          {
            uint64_t v77 = *(void *)(v77 + 40);
            if (!v77) {
              goto LABEL_85;
            }
          }
        }

        else
        {
LABEL_85:
          sub_1001EE2A0();
        }

        sub_10018A554((uint64_t)a1);
        uint64_t v78 = qword_1008E25D0;
        if ((unsigned __int16 *)qword_1008E25D0 == a1)
        {
          qword_1008E25D0 = *((void *)a1 + 5);
LABEL_101:
          --dword_1008E25C8;
        }

        else
        {
          while (v78)
          {
            uint64_t v79 = v78;
            uint64_t v78 = *(void *)(v78 + 40);
            if ((unsigned __int16 *)v78 == a1)
            {
              *(void *)(v79 + 40) = *((void *)a1 + 5);
              goto LABEL_101;
            }
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"OI_HCI_ReleaseConnection: %x",  v120,  v121,  v122,  v123,  v124,  v125,  v126,  (uint64_t)a1);
            uint64_t v127 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v127, OS_LOG_TYPE_ERROR)) {
              sub_10065BC5C();
            }
          }
        }

        break;
      default:
        sub_1001EE2A0();
        break;
    }

    sub_1000B1838(a1);
  }

  else
  {
    sub_1001EE2A0();
    if ((sub_1000A86F0() & 1) != 0)
    {
      sub_1001EE134( (uint64_t)"connection handle is null, numAclConnections:%d",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  dword_1008E2578);
      uint64_t v21 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

uint64_t sub_10012EB98()
{
  uint64_t v2 = 0LL;
  uint64_t v0 = 0LL;
  while (sub_10012EBEC(&v2))
  {
    if (*(_BYTE *)(v2 + 54) == 7) {
      uint64_t v0 = v0;
    }
    else {
      uint64_t v0 = (v0 + 1);
    }
  }

  return v0;
}

BOOL sub_10012EBEC(uint64_t *a1)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = qword_1008E2580;
    if (qword_1008E2580)
    {
      while (v3 != v2)
      {
        uint64_t v3 = *(void *)(v3 + 40);
        if (!v3) {
          goto LABEL_7;
        }
      }
    }

    else
    {
LABEL_7:
      sub_1001EE2A0();
      uint64_t v2 = *a1;
    }

    uint64_t v4 = (uint64_t *)(v2 + 40);
  }

  else
  {
    uint64_t v4 = &qword_1008E2580;
  }

  uint64_t v5 = *v4;
  *a1 = v5;
  return v5 != 0;
}

uint64_t sub_10012EC5C()
{
  return dword_1008E2588;
}

uint64_t sub_10012EC68()
{
  uint64_t v2 = 0LL;
  uint64_t v0 = 0LL;
  while (sub_10012ECBC(&v2))
  {
    if (*(_BYTE *)(v2 + 124) == 7) {
      uint64_t v0 = v0;
    }
    else {
      uint64_t v0 = (v0 + 1);
    }
  }

  return v0;
}

BOOL sub_10012ECBC(uint64_t *a1)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = qword_1008E25A0;
    if (qword_1008E25A0)
    {
      while (v3 != v2)
      {
        uint64_t v3 = *(void *)(v3 + 40);
        if (!v3) {
          goto LABEL_7;
        }
      }
    }

    else
    {
LABEL_7:
      sub_1001EE2A0();
      uint64_t v2 = *a1;
    }

    uint64_t v4 = (uint64_t *)(v2 + 40);
  }

  else
  {
    uint64_t v4 = &qword_1008E25A0;
  }

  uint64_t v5 = *v4;
  *a1 = v5;
  return v5 != 0;
}

uint64_t sub_10012ED2C()
{
  uint64_t v2 = 0LL;
  uint64_t v0 = 0LL;
  while (sub_10012ECBC(&v2))
  {
    if (*(_BYTE *)(v2 + 124) != 7) {
      uint64_t v0 = v0 + *(unsigned __int8 *)(v2 + 127);
    }
  }

  return v0;
}

uint64_t sub_10012ED88()
{
  uint64_t v2 = 0LL;
  uint64_t v0 = 0LL;
  while (sub_10012EDDC(&v2))
  {
    if (*(_BYTE *)(v2 + 60) == 7) {
      uint64_t v0 = v0;
    }
    else {
      uint64_t v0 = (v0 + 1);
    }
  }

  return v0;
}

BOOL sub_10012EDDC(uint64_t *a1)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = qword_1008E25D0;
    if (qword_1008E25D0)
    {
      while (v3 != v2)
      {
        uint64_t v3 = *(void *)(v3 + 40);
        if (!v3) {
          goto LABEL_7;
        }
      }
    }

    else
    {
LABEL_7:
      sub_1001EE2A0();
      uint64_t v2 = *a1;
    }

    uint64_t v4 = (uint64_t *)(v2 + 40);
  }

  else
  {
    uint64_t v4 = &qword_1008E25D0;
  }

  uint64_t v5 = *v4;
  *a1 = v5;
  return v5 != 0;
}

uint64_t sub_10012EE4C()
{
  uint64_t v2 = 0LL;
  uint64_t v0 = 0LL;
  while (sub_10012EBEC(&v2))
  {
    if (*(_DWORD *)(v2 + 248)) {
      uint64_t v0 = (v0 + 1);
    }
    else {
      uint64_t v0 = v0;
    }
  }

  return v0;
}

BOOL sub_10012EEA0(uint64_t *a1)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = qword_1008E2590;
    if (qword_1008E2590)
    {
      while (v3 != v2)
      {
        uint64_t v3 = *(void *)(v3 + 40);
        if (!v3) {
          goto LABEL_7;
        }
      }
    }

    else
    {
LABEL_7:
      sub_1001EE2A0();
      uint64_t v2 = *a1;
    }

    uint64_t v4 = (uint64_t *)(v2 + 40);
  }

  else
  {
    uint64_t v4 = &qword_1008E2590;
  }

  uint64_t v5 = *v4;
  *a1 = v5;
  return v5 != 0;
}

BOOL sub_10012EF10(uint64_t *a1)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = qword_1008E25B0;
    if (qword_1008E25B0)
    {
      while (v3 != v2)
      {
        uint64_t v3 = *(void *)(v3 + 40);
        if (!v3) {
          goto LABEL_7;
        }
      }
    }

    else
    {
LABEL_7:
      sub_1001EE2A0();
      uint64_t v2 = *a1;
    }

    uint64_t v4 = (uint64_t *)(v2 + 40);
  }

  else
  {
    uint64_t v4 = &qword_1008E25B0;
  }

  uint64_t v5 = *v4;
  *a1 = v5;
  return v5 != 0;
}

uint64_t sub_10012EF80(uint64_t a1)
{
  if (a1 && (uint64_t v1 = qword_1008E2580) != 0)
  {
    while (v1 != a1)
    {
      uint64_t v1 = *(void *)(v1 + 40);
      if (!v1) {
        goto LABEL_5;
      }
    }

    return 1LL;
  }

  else
  {
LABEL_5:
    uint64_t v2 = 0LL;
    if (a1)
    {
      uint64_t v3 = qword_1008E25A0;
      if (qword_1008E25A0)
      {
        while (v3 != a1)
        {
          uint64_t v3 = *(void *)(v3 + 40);
          if (!v3) {
            return 0LL;
          }
        }

        return 3LL;
      }
    }
  }

  return v2;
}

const char *sub_10012EFE0(unsigned int a1)
{
  if (a1 > 7) {
    return "unknown";
  }
  else {
    return (&off_100884658)[(char)a1];
  }
}

void sub_10012F008(uint64_t a1, float a2)
{
  *(void *)uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  memset(v12, 0, sizeof(v12));
  LOWORD(a2) = *(_WORD *)(a1 + 80);
  gcvt((float)((float)LODWORD(a2) * 1.25), 7, v10);
  sub_1001EE274(*(unsigned __int8 *)(a1 + 70));
  sub_1001EE10C( (uint64_t)"Le topology - {adv-addr: %:-%s, resolved-addr: %:-%s, lmhandle: 0x%2x, interval: %s ms, latency: %d, lsto: %d, minCE: %d, maxCE: %d, role: %s, state: %s, ready-state: %s, enc-state: %s, phyStatsEnabled: %d}",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  a1 + 49);
}

void sub_10012F188(uint64_t a1, float a2)
{
  *(void *)uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  memset(v12, 0, sizeof(v12));
  LOWORD(a2) = *(_WORD *)(a1 + 136);
  gcvt((float)((float)LODWORD(a2) * 0.625), 7, v10);
  sub_1001EE274(*(unsigned __int8 *)(a1 + 144));
  sub_1001EE24C(*(unsigned __int8 *)(a1 + 152));
  sub_1001EE1B0(*(unsigned __int8 *)(a1 + 153));
  sub_1001EE10C( (uint64_t)"ACL topology - {bd-addr: %:, lmhandle: 0x%2x, reference: %d, role: %s, state: %s, lk-mode: %s, enc-state: % s, lsto: %d, interval: %s ms, phyStatsEnabled: %d}",  v3,  v4,  v5,  v6,  v7,  v8,  v9,  a1 + 48);
}

void sub_10012F2A0(unsigned __int16 *a1)
{
  uint64_t v1 = *a1;
  sub_1001EE1D8(*((unsigned __int8 *)a1 + 58));
  sub_1001EE10C( (uint64_t)"Voice topology - {lmhandle: 0x%2x, voicehandle: 0x%2x, lk-type: %d, phyStatsEnabled: %d}}",  v2,  v3,  v4,  v5,  v6,  v7,  v8,  v1);
}

void sub_10012F300()
{
  if (dword_1008E2598)
  {
    for (uint64_t i = 0LL; sub_10012ECBC(&i); sub_10012F008(i, v0))
      ;
  }

void sub_10012F348()
{
  int v0 = dword_1008E2588;
  if (dword_1008E2578 | dword_1008E2588)
  {
    if (dword_1008E2578)
    {
      int v0 = dword_1008E2588;
    }

    if (v0)
    {
    }
  }

void sub_10012F3D4()
{
  if (dword_1008E2578) {
    BOOL v0 = 0;
  }
  else {
    BOOL v0 = dword_1008E2588 == 0;
  }
  if (!v0 || dword_1008E2598 != 0 || dword_1008E25A8 != 0)
  {
    if (dword_1008E2578)
    {
    }

    if (dword_1008E2588)
    {
    }

    if (dword_1008E2598)
    {
    }

    if (dword_1008E25A8)
    {
      for (uint64_t i = 0LL;
            sub_10012EF10((uint64_t *)&i);
            sub_1001EE10C( (uint64_t)"Le CIS topology - {cisHandle: 0x%2x, isoInterval: %d}",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  *i))
      {
        ;
      }
    }
  }

void sub_10012F510(uint64_t a1, uint64_t a2)
{
  if (DWORD2(xmmword_1008F6FB8))
  {
    switch((int)a1)
    {
      case 1:
        ++dword_1008E25E8;
        sub_10012CE94();
        break;
      case 2:
        ++dword_1008E25F0;
        sub_100133FD0(a2);
        break;
      case 3:
        ++dword_1008E25F8;
        sub_100134154(a2);
        break;
      case 4:
        sub_1001EE134((uint64_t)"OI_HCIIfc_SendCompleted, invalid sendType %d", v19, v20, v21, v22, v23, v24, v25, 4LL);
        uint64_t v26 = (os_log_s *)sub_100086554(0x2Eu);
        if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          goto LABEL_15;
        }
        goto LABEL_14;
      default:
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"OI_HCIIfc_SendCompleted, unknown sendType %d", v11, v12, v13, v14, v15, v16, v17, a1);
          uint64_t v18 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
LABEL_14:
          }
            sub_100657858();
        }

char *sub_10012F690(_BYTE *a1)
{
  if (a1) {
    *a1 = 5;
  }
  return &byte_1008E2600;
}

uint64_t sub_10012F6A8(int a1, unsigned __int8 *a2, unsigned int a3)
{
  switch(a1)
  {
    case 2:
    case 6:
      goto LABEL_5;
    case 3:
      if (a3 >= 3) {
        LOWORD(a3) = a2[2] + 3;
      }
      return (unsigned __int16)a3;
    case 4:
      if (a3 >= 2) {
        LOWORD(a3) = a2[1] + 2;
      }
      return (unsigned __int16)a3;
    case 5:
      if (a3 < 4) {
        return (unsigned __int16)a3;
      }
      __int16 v3 = a2[2] | ((a2[3] & 0xF) << 8);
      goto LABEL_11;
    case 7:
      if (a3) {
        LOWORD(a3) = *a2 + 1;
      }
      return (unsigned __int16)a3;
    default:
      if (a1 != 243) {
        return (unsigned __int16)a3;
      }
LABEL_5:
      if (a3 < 4) {
        return (unsigned __int16)a3;
      }
      __int16 v3 = *((_WORD *)a2 + 1);
LABEL_11:
      LOWORD(a3) = v3 + 4;
      return (unsigned __int16)a3;
  }

void sub_10012F73C(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (os_log_s *)a3;
  if (DWORD2(xmmword_1008F6FB8))
  {
    uint64_t v4 = a4;
    byte_1008E2600 = a1;
    if ((_DWORD)a3)
    {
      else {
        a3 = a3;
      }
      __memmove_chk(&unk_1008E2601, a2, a3, 4LL);
    }

    sub_1000BA78C();
    if ((sub_10010C704() & 1) == 0)
    {
      switch((int)a1)
      {
        case 1:
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"OI_HCIIfc_DataReceived, invalid dataType %d, NumBytes %d",  v23,  v24,  v25,  v26,  v27,  v28,  v29,  1LL);
            uint64_t v30 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
              goto LABEL_26;
            }
          }

          goto LABEL_27;
        case 2:
        case 6:
          ++dword_1008E25F4;
          if (dword_1008F6D88 == 2)
          {
            sub_1001348A0((unsigned __int16 *)a2, (uint64_t)v5, a1, v4);
            return;
          }

          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"OI_HCIIfc_DataReceived, HCI not initialized - discarding ACL packet State %d, Numbytes %d",  v36,  v37,  v38,  v39,  v40,  v41,  v42,  dword_1008F6D88);
            uint64_t v43 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
              goto LABEL_43;
            }
          }

          return;
        case 3:
          goto LABEL_19;
        case 4:
          if (*(_BYTE *)(v4 + 8))
          {
            int v82 = 0;
            __int128 v80 = 0u;
            __int128 v81 = 0u;
            __int128 v78 = 0u;
            __int128 v79 = 0u;
            *(_OWORD *)__str = 0u;
            __int128 v77 = 0u;
            snprintf(__str, 0x64uLL, "BT Controller HCI_EVENT wakeupCause (eventCode=0x%x paramLen=%d)", *a2, a2[1]);
            sub_1001EE0E4("OI_HCIIfc_DataReceived: %s", __str);
            sub_1000BA160(__str);
          }

          if (v5 < 3)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134((uint64_t)"Short event, numBytes = %d", v52, v53, v54, v55, v56, v57, v58, (uint64_t)v5);
              uint64_t v59 = (os_log_s *)sub_100086554(0x2Eu);
              if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR)) {
                sub_100657858();
              }
            }
          }

          else
          {
            ++dword_1008E25EC;
            uint64_t v31 = (void (*)(uint64_t, uint64_t, os_log_s *, unsigned __int8 *, uint64_t))off_1008F6DE8;
            uint64_t v32 = *a2;
            if (off_1008F6DE8)
            {
              uint64_t v33 = (os_log_s *)a2[1];
              uint64_t v34 = a2 + 2;
              uint64_t v35 = 4LL;
              goto LABEL_40;
            }

            if ((_DWORD)v32 == 19)
            {
              sub_100136048((uint64_t)a2, v5, v4);
LABEL_61:
              sub_1001EEF6C();
              return;
            }

            if (!off_1008F6E10 || off_1008F6E10(a2, v5, v4))
            {
              sub_10012FCF0(a2, (uint64_t)v5, v4);
              goto LABEL_61;
            }
          }

          return;
        case 5:
          goto LABEL_21;
        case 7:
          if (*(_BYTE *)(v4 + 8))
          {
            int v82 = 0;
            __int128 v80 = 0u;
            __int128 v81 = 0u;
            __int128 v78 = 0u;
            __int128 v79 = 0u;
            *(_OWORD *)__str = 0u;
            __int128 v77 = 0u;
            snprintf(__str, 0x64uLL, "BT Controller HCI_LMP wakeupCause (len=0x%x)", *a2);
            sub_1001EE0E4("OI_HCIIfc_DataReceived: %s", __str);
            sub_1000BA160(__str);
          }

          if (dword_1008F6D88 == 2)
          {
            uint64_t v32 = *a2;
            if ((_DWORD)v5 - 1 == (_DWORD)v32)
            {
              uint64_t v31 = (void (*)(uint64_t, uint64_t, os_log_s *, unsigned __int8 *, uint64_t))off_1008F6DE8;
              if (off_1008F6DE8)
              {
                uint64_t v34 = a2 + 1;
                uint64_t v35 = 7LL;
                uint64_t v33 = v5;
LABEL_40:
                v31(v35, v32, v33, v34, v4);
              }

              return;
            }

            sub_1001EE134( (uint64_t)"OI_HCIIfc_DataReceived, Got incorrect packet on LMP channel: expected %d gotfirst 3 bytes %d %d %d",  v68,  v69,  v70,  v71,  v72,  v73,  v74,  (uint64_t)v5);
            uint64_t v75 = (os_log_s *)sub_100086554(0x2Eu);
            if (!os_log_type_enabled(v75, OS_LOG_TYPE_ERROR)) {
              return;
            }
          }

          else
          {
            sub_1001EE134( (uint64_t)"OI_HCIIfc_DataReceived, HCI not initialized - discarding ACI packet State %d, Numbytes %d",  v60,  v61,  v62,  v63,  v64,  v65,  v66,  dword_1008F6D88);
            uint64_t v67 = (os_log_s *)sub_100086554(0x2Eu);
            if (!os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)) {
              return;
            }
          }

          sub_100657F74();
          return;
        default:
          goto LABEL_18;
      }
    }
  }

  else
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_HCIIfc_DataReceived, HCI not initialized - discarding data Type %d, NumBytes %d",  v8,  v9,  v10,  v11,  v12,  v13,  v14,  a1);
      uint64_t v5 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    if ((_DWORD)a1 == 4 && a2 && *a2 == 16)
    {
      sub_1000AFE20(650LL);
LABEL_18:
      if ((_DWORD)a1 == 243)
      {
LABEL_19:
        ++dword_1008E25FC;
        if (dword_1008F6D88 == 2)
        {
          sub_100134CCC((unsigned __int16 *)a2, (uint64_t)v5, v4);
        }

        else if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"OI_HCIIfc_DataReceived, HCI not initialized - discarding SCO packet State %d, Numbytes %d",  v44,  v45,  v46,  v47,  v48,  v49,  v50,  dword_1008F6D88);
          uint64_t v51 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
LABEL_43:
          }
            sub_100657F74();
        }
      }

      else
      {
LABEL_21:
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"OI_HCIIfc_DataReceived, unknown dataType %d, state %d",  v15,  v16,  v17,  v18,  v19,  v20,  v21,  a1);
          uint64_t v22 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
LABEL_26:
          }
            sub_100657F74();
        }

void sub_10012FCF0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v324 = 0LL;
  uint64_t v325 = 0LL;
  if (a2 > 1)
  {
    if (!a1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  2041,  "buf");
    }
    uint64_t v324 = a1;
    LOWORD(v325) = a2;
    BYTE6(v325) = 1;
    WORD1(v325) = a2;
    uint64_t v14 = *a1;
    WORD2(v325) = 2;
    uint64_t v15 = a1[1];
    uint64_t v16 = sub_10016F4A0(v14);
    if (!v16)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"%! (%d)", v32, v33, v34, v35, v36, v37, v38, 607LL);
        uint64_t v39 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      uint64_t v30 = (void (*)(uint64_t, uint64_t))off_1008E2618;
      if (off_1008E2618)
      {
        uint64_t v31 = 607LL;
        goto LABEL_18;
      }

      sub_1000AFE20(607LL);
      goto LABEL_277;
    }

    uint64_t v21 = v16;
    if ((int)a2 - 2 < (int)v15)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"event data underrun, paramTotalLen: %d, bytesAvail: %d, eventId: %d",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  v15);
        uint64_t v29 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      uint64_t v30 = (void (*)(uint64_t, uint64_t))off_1008E2618;
      if (off_1008E2618)
      {
        uint64_t v31 = 651LL;
LABEL_18:
        v30(v31, v14);
        return;
      }

LABEL_277:
      sub_1000AFE20(651LL);
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_278:
      uint64_t v308 = "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE";
      goto LABEL_280;
    }

    if (dword_1008F6D88 <= 6)
    {
      if (((1 << dword_1008F6D88) & 0x33) != 0)
      {
        if ((v14 > 0x15 || ((1 << v14) & 0x20C000) == 0) && (_DWORD)v14 != 255)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"HCI Device initialization in progress, ignoring event %@",  v40,  v41,  v42,  v43,  v44,  v45,  v46,  (uint64_t)a1);
            uint64_t v47 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
              goto LABEL_4;
            }
          }

          return;
        }
      }

      else if (((1 << dword_1008F6D88) & 0x48) != 0)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"HCI device initialation/reset failed, ignoring event %@",  v48,  v49,  v50,  v51,  v52,  v53,  v54,  (uint64_t)a1);
          uint64_t v55 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
            goto LABEL_4;
          }
        }

        return;
      }
    }

    if (!v16[1])
    {
      LOWORD(v326) = 0;
      WORD2(v329[0]) = 0;
      LODWORD(v329[0]) = 0;
      *(void *)&__int128 v335 = 0LL;
      __int128 v333 = 0u;
      __int128 v334 = 0u;
      *(_OWORD *)int buf = 0u;
      __int128 v332 = 0u;
      if (*(_BYTE *)(a3 + 8))
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"_genericEventHandler: wakeupCause HCI_EVENT Packet from BT Controller (id=0x%02x paramLen=%d)\n",  v71,  v72,  v73,  v74,  v75,  v76,  v77,  *v21);
          __int128 v78 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v78, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)unsigned __int16 v352 = 136446210;
            *(void *)&v352[4] = sub_1001EDDCC();
            _os_log_impl((void *)&_mh_execute_header, v78, OS_LOG_TYPE_DEFAULT, " %{public}s", v352, 0xCu);
          }
        }
      }

      int v79 = sub_100132A04((uint64_t)buf, (uint64_t)v21, (uint64_t *)&v324, v15, &v326, (uint64_t)v329);
      if (v79)
      {
        int v80 = v79;
        sub_1001332DC(v21);
        __int128 v81 = (_BYTE *)*((void *)v21 + 1);
        if (!v81 || *v81 != 115) {
          return;
        }
        *(_DWORD *)int buf = v80;
      }

      else
      {
        sub_100133370(v21, (unsigned __int16)v326, (uint64_t)v329, 1);
      }

      uint64_t v84 = *v21;
      uint64_t v85 = *(unsigned __int8 *)(a3 + 8);
      uint64_t v86 = *(void *)a3;
      uint64_t v87 = buf;
LABEL_180:
      sub_100131D6C(v84, v87, v85, v86, v17, v18, v19, v20, v56);
      return;
    }

    uint64_t v330 = 0LL;
    __n128 v56 = 0uLL;
    memset(v329, 0, sizeof(v329));
    if (*(_BYTE *)(a3 + 8))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"_specialEventHandler: wakeupCause HCI_EVENT Packet from BT Controller (id=0x%02x paramLen=%d)\n",  v57,  v58,  v59,  v17,  v18,  v19,  v20,  *v21);
        uint64_t v60 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 136446210;
          *(void *)&uint8_t buf[4] = sub_1001EDDCC();
          _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }

    int v61 = *(unsigned __int8 *)(a3 + 8);
    uint64_t v62 = *v21;
    if (*v21 > 0x21u)
    {
      if (*v21 > 0x3Du)
      {
        if ((_DWORD)v62 == 62)
        {
          *(_DWORD *)int buf = 0;
          if (sub_100133CDC(62, buf))
          {
            uint64_t v121 = sub_100133D98(*(int *)buf);
            if ((_DWORD)v121)
            {
              uint64_t v122 = v121;
              if (sub_1000A86F0())
              {
                sub_1001EE134((uint64_t)"%! (%d)", v123, v124, v125, v126, v127, v128, v129, v122);
                uint64_t v130 = (os_log_s *)sub_100086554(0x2Eu);
                if (os_log_type_enabled(v130, OS_LOG_TYPE_ERROR)) {
                  sub_100657858();
                }
              }
            }
          }

          sub_1001B02D8((uint64_t)&v324, (uint64_t)v21, v15, v61 != 0);
          return;
        }

        if ((_DWORD)v62 != 254)
        {
          if ((_DWORD)v62 == 255) {
            sub_100112D88((uint64_t)v324, (unsigned __int16)v325, v61 != 0);
          }
          return;
        }

  int v112 = sub_1002E6E00();
  sub_10002418C(buf, "BLESCAN");
  sub_10002418C(__p, "PrioritizationOverWiFiEnabled");
  uint64_t v113 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, char *))(*(void *)v112 + 72LL))( v112,  buf,  __p,  &byte_1008F1E9E);
  if (byte_1008F1E9E) {
    uint64_t v114 = v113;
  }
  else {
    uint64_t v114 = 0;
  }
  if (v140 < 0) {
    operator delete(__p[0]);
  }
  if ((v142[3] & 0x80000000) != 0)
  {
    operator delete(*(void **)buf);
    if (!v114) {
      goto LABEL_288;
    }
  }

  else if (!v114)
  {
    goto LABEL_288;
  }

  uint64_t v115 = (os_log_s *)qword_1008F75B8;
  if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v115,  OS_LOG_TYPE_DEFAULT,  "Scan Prioritization over WiFi is supported.",  buf,  2u);
  }

LABEL_68:
        uint64_t v85 = v61 != 0;
        *(void *)&v329[0] = &v324[WORD2(v325)];
        DWORD2(v329[0]) = v15;
        uint64_t v87 = (uint8_t *)v329;
        goto LABEL_179;
      }

      switch((_DWORD)v62)
      {
        case '""':
          int v82 = v15;
          int v83 = 1;
          break;
        case ',':
          goto LABEL_69;
        case '/':
          int v82 = v15;
          int v83 = 2;
          break;
        default:
          return;
      }
    }

    else
    {
      if (*v21 > 0xDu)
      {
        switch(*v21)
        {
          case 0xEu:
            *(_OWORD *)unsigned __int16 v352 = 0u;
            __int128 v353 = 0u;
            if (v15 <= 2)
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"bad parm length: expected at least 3, got %d; eventId %d",
                  v63,
                  v64,
                  v65,
                  v66,
                  v67,
                  v68,
                  v69,
                  v15);
                uint64_t v70 = (os_log_s *)sub_100086554(0x2Eu);
                if (os_log_type_enabled(v70, OS_LOG_TYPE_ERROR)) {
LABEL_208:
                }
                  sub_100657858();
              }

  *(_DWORD *)(a1 + 152) = v9;
LABEL_69:
  uint64_t v25 = (os_log_s *)qword_1008F76F8;
  if (os_log_type_enabled((os_log_t)qword_1008F76F8, OS_LOG_TYPE_DEFAULT))
  {
    if (v9 > 7) {
      uint64_t v26 = "Unknown BSM Band Code";
    }
    else {
      uint64_t v26 = off_100889F80[v9];
    }
    *(_DWORD *)int buf = 136315138;
    *(void *)&uint8_t buf[4] = v26;
    _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Warning: BandSwitchManager: Defaults write ForceUnii is enabled for UNII %s",  buf,  0xCu);
  }

  *(_BYTE *)(a1 + 144) = 1;
}

  uint64_t v30 = sub_1002E6E00();
  sub_10002418C(buf, "LE");
  sub_10002418C(__p, "EnforceUseCaseRequiredList");
  uint64_t v31 = (*(uint64_t (**)(uint64_t, _BYTE *, void **, int *))(*(void *)v30 + 72LL))(v30, buf, __p, &v38);
  if (v37 < 0) {
    operator delete(__p[0]);
  }
  if (v42 < 0)
  {
    operator delete(*(void **)buf);
    if (!v31) {
      return;
    }
  }

  else if (!v31)
  {
    return;
  }

  uint64_t v32 = v38;
  *(_BYTE *)(a1 + 154) = v38;
  uint64_t v33 = (os_log_s *)qword_1008F7698;
  if (os_log_type_enabled((os_log_t)qword_1008F7698, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v34 = "Yes";
    if (!v32) {
      uint64_t v34 = "No";
    }
    *(_DWORD *)int buf = 136315138;
    *(void *)&uint8_t buf[4] = v34;
    _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "Warning: Overriding - Enforce Use Case Required List: %s",  buf,  0xCu);
  }

LABEL_273:
              if (!byte_1008F6E19) {
                return;
              }
              goto LABEL_274;
            }

            if (WORD1(v325) - WORD2(v325) < (int)v15)
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134((uint64_t)"%! (%d)", v198, v199, v200, v201, v202, v203, v204, 605LL);
                v205 = (os_log_s *)sub_100086554(0x2Eu);
                if (os_log_type_enabled(v205, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_208;
                }
              }

              goto LABEL_273;
            }

            uint64_t v206 = WORD2(v325);
            if (WORD1(v325) <= WORD2(v325))
            {
              uint64_t v320 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
            }

            else
            {
              if (BYTE6(v325) == 1)
              {
                ++WORD2(v325);
                byte_1008F6E19 = v324[v206];
                if (WORD1(v325) - ((int)v206 + 1) <= 1) {
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1578,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
                }
                uint64_t v207 = *(unsigned __int16 *)&v324[v206 + 1];
                WORD2(v325) = v206 + 3;
                if (!(_DWORD)v207) {
                  goto LABEL_273;
                }
                if (WORD1(v325) <= (unsigned __int16)(v206 + 3))
                {
                  if (sub_1000A86F0())
                  {
                    sub_1001EE134( (uint64_t)"handle_CommandComplete bad parm length: no status byte",  v214,  v215,  v216,  v217,  v218,  v219,  v220,  v323);
                    v221 = (os_log_s *)sub_100086554(0x2Eu);
                    if (os_log_type_enabled(v221, OS_LOG_TYPE_ERROR)) {
                      goto LABEL_208;
                    }
                  }

                  goto LABEL_273;
                }

                WORD2(v325) = v206 + 4;
                uint64_t v208 = sub_10016F5B0(v324[(unsigned __int16)(v206 + 3)]);
                if (sub_100133BA4((uint64_t)&v324, v207, v352))
                {
                  if (*(unsigned __int16 *)&v352[4] == 1026)
                  {
                    *(_OWORD *)int buf = 0u;
                    __int128 v332 = 0u;
                  }

                  ((void (*)(uint64_t, void, unsigned __int8 **))v353)(v208, *((void *)&v353 + 1), &v324);
                  goto LABEL_273;
                }

                if (sub_100133CC4((uint64_t)&v324, v207, v352))
                {
                  if ((_DWORD)v208) {
                    int v253 = v208;
                  }
                  else {
                    int v253 = 769;
                  }
                  sub_1001317D4((uint64_t)v352, v253);
                  goto LABEL_273;
                }

                if ((~(_DWORD)v207 & 0xFC00) == 0)
                {
                  sub_100112D88((uint64_t)v324, (unsigned __int16)v325, v61 != 0);
                  goto LABEL_273;
                }

                if (sub_1000A86F0())
                {
                  sub_1001EE134( (uint64_t)"Command Complete, orphan event, opcode: %x, status %!\n",  v279,  v280,  v281,  v282,  v283,  v284,  v285,  v207);
                  uint64_t v286 = (os_log_s *)sub_100086554(0x2Eu);
                  if (os_log_type_enabled(v286, OS_LOG_TYPE_ERROR)) {
                    sub_100657858();
                  }
                }

                if (sub_1000B6578())
                {
                  __int128 v345 = 0u;
                  __int128 v346 = 0u;
                  __int128 v343 = 0u;
                  __int128 v344 = 0u;
                  __int128 v341 = 0u;
                  __int128 v342 = 0u;
                  __int128 v339 = 0u;
                  __int128 v340 = 0u;
                  __int128 v337 = 0u;
                  __int128 v338 = 0u;
                  __int128 v335 = 0u;
                  __int128 v336 = 0u;
                  __int128 v333 = 0u;
                  __int128 v334 = 0u;
                  *(_OWORD *)int buf = 0u;
                  __int128 v332 = 0u;
                  if (sub_1000B0174())
                  {
                    sub_1001EE0BC( (uint64_t)buf,  256,  (uint64_t)"Bluetooth error - simulated { build=internal, reason=%d, description=%!, context=%d }",  v287,  v288,  v289,  v290,  v291,  635LL);
                    sub_1000BAAF0((const char *)buf);
                    sub_1001EE134( (uint64_t)"Bluetooth error - simulated { build=internal, reason=%d, description=%!, context=%d }",  v292,  v293,  v294,  v295,  v296,  v297,  v298,  635LL);
                    int v299 = (os_log_s *)sub_100086554(0x2Eu);
                    if (!os_log_type_enabled(v299, OS_LOG_TYPE_FAULT)) {
                      goto LABEL_273;
                    }
                  }

                  else
                  {
                    sub_1001EE0BC( (uint64_t)buf,  256,  (uint64_t)"Bluetooth error - simulated { build=release, reason=%d, context=%d }",  v287,  v288,  v289,  v290,  v291,  635LL);
                    sub_1000BAAF0((const char *)buf);
                    sub_1001EE134( (uint64_t)"Bluetooth error - simulated { build=release, reason=%d, context=%d }",  v300,  v301,  v302,  v303,  v304,  v305,  v306,  635LL);
                    v307 = (os_log_s *)sub_100086554(0x2Eu);
                    if (!os_log_type_enabled(v307, OS_LOG_TYPE_FAULT)) {
                      goto LABEL_273;
                    }
                  }

                  sub_10065BCC4();
                  goto LABEL_273;
                }

                if (off_1008E2618)
                {
                  off_1008E2618(635LL, v207);
                  goto LABEL_273;
                }

                int v321 = v207;
LABEL_302:
                uint64_t v322 = sub_10016F5D4(v321);
                sub_1000B034C(635LL, v322);
              }

              uint64_t v320 = "(*pBs).__RWFlag == BYTESTREAM_READ";
            }

            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1575,  v320);
          case 0xFu:
            *(_OWORD *)int buf = 0u;
            __int128 v332 = 0u;
            if ((_DWORD)v15 != 4)
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"handle_CommandStatus bad parm length: expected 4, got %d",  v139,  v140,  v141,  v142,  v143,  v144,  v145,  v15);
                uint64_t v146 = (os_log_s *)sub_100086554(0x2Eu);
                if (os_log_type_enabled(v146, OS_LOG_TYPE_ERROR)) {
                  sub_100657858();
                }
              }

              goto LABEL_140;
            }

            uint64_t v107 = WORD2(v325);
            if (BYTE6(v325) == 1)
            {
              ++WORD2(v325);
              uint64_t v108 = sub_10016F5B0(v324[v107]);
              uint64_t v109 = WORD2(v325);
              if (WORD1(v325) <= WORD2(v325))
              {
                __int128 v319 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              }

              else
              {
                if (BYTE6(v325) == 1)
                {
                  ++WORD2(v325);
                  byte_1008F6E19 = v324[v109];
                  if (WORD1(v325) - ((int)v109 + 1) <= 1) {
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1727,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
                  }
                  uint64_t v110 = v108;
                  uint64_t v111 = *(unsigned __int16 *)&v324[v109 + 1];
                  WORD2(v325) = v109 + 3;
                  if (!(_DWORD)v111) {
                    goto LABEL_140;
                  }
                  int v112 = v111 & 0xFC00;
                  if (dword_1008F6D88 != 2 && !(_DWORD)v110 && v112 != 64512)
                  {
                    sub_1001EE134( (uint64_t)"HCI not initialized, ignoring event: %16@",  v113,  v114,  v115,  v116,  v117,  v118,  v119,  (uint64_t)v324);
                    uint64_t v120 = (os_log_s *)sub_100086554(0x2Eu);
                    if (!os_log_type_enabled(v120, OS_LOG_TYPE_ERROR)) {
                      return;
                    }
                    goto LABEL_167;
                  }

                  if (sub_100133CC4((uint64_t)&v324, v111, buf))
                  {
                    if ((_DWORD)v110)
                    {
                      sub_1001317D4((uint64_t)buf, v110);
                      goto LABEL_140;
                    }

                    int v254 = sub_10016F424(*(unsigned __int16 *)&buf[6]);
                    if (v254)
                    {
                      if ((_DWORD)v111 != 8205 && (_DWORD)v111 != 8259 && (_DWORD)v111 != 8325)
                      {
                        *(_WORD *)&buf[8] = *((_WORD *)v254 + 10);
                        if (sub_100133868((uint64_t)buf, 0LL))
                        {
                          if (sub_1000A86F0())
                          {
                            sub_1001EE134( (uint64_t)"Unable to add opcode 0x%x to expected event queue with status %!",  v255,  v256,  v257,  v258,  v259,  v260,  v261,  v111);
                            int v262 = (os_log_s *)sub_100086554(0x2Eu);
                            if (os_log_type_enabled(v262, OS_LOG_TYPE_ERROR)) {
                              sub_100657F74();
                            }
                          }

                          if (!off_1008E2618)
                          {
                            int v321 = v111;
                            goto LABEL_302;
                          }

                          off_1008E2618(635LL, v111);
                        }
                      }

                      goto LABEL_140;
                    }

                    sub_1001EE134((uint64_t)"%! (%d)", v271, v272, v273, v274, v275, v276, v277, 620LL);
                    uint64_t v278 = (os_log_s *)sub_100086554(0x2Eu);
                    if (!os_log_type_enabled(v278, OS_LOG_TYPE_ERROR)) {
                      goto LABEL_140;
                    }
                  }

                  else
                  {
                    if (sub_100133BA4((uint64_t)&v324, v111, buf))
                    {
                      unsigned int v222 = 769;
                      if (v112 == 64512 && off_1008E2610)
                      {
                        else {
                          unsigned int v222 = 769;
                        }
                      }

                      if ((_DWORD)v110) {
                        uint64_t v223 = v110;
                      }
                      else {
                        uint64_t v223 = v222;
                      }
                      ((void (*)(uint64_t, void, unsigned __int8 **))v332)( v223,  *((void *)&v332 + 1),  &v324);
                      goto LABEL_140;
                    }

                    if (v112 == 64512)
                    {
                      sub_100112D88((uint64_t)v324, (unsigned __int16)v325, v61 != 0);
                      goto LABEL_140;
                    }

                    if (!sub_1000A86F0()
                      || (sub_1001EE134( (uint64_t)"Command Status, orphan event, opcode: %x, status %!",  v263,  v264,  v265,  v266,  v267,  v268,  v269,  v111),  uint64_t v270 = (os_log_s *)sub_100086554(0x2Eu),  !os_log_type_enabled(v270, OS_LOG_TYPE_ERROR)))
                    {
LABEL_140:
                      if (!byte_1008F6E19) {
                        return;
                      }
LABEL_274:
                      sub_1001EE6DC((uint64_t)sub_10012CEC4, 0LL, 0LL);
                      return;
                    }
                  }

                  sub_100657858();
                  goto LABEL_140;
                }

                __int128 v319 = "(*pBs).__RWFlag == BYTESTREAM_READ";
              }

              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1724,  v319);
            }

            uint64_t v318 = "(*pBs).__RWFlag == BYTESTREAM_READ";
            goto LABEL_291;
          case 0x13u:
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Numcompleted packets should be handled by HCI flow",  v96,  v97,  v98,  v99,  v100,  v101,  v102,  v323);
              uint64_t v103 = (os_log_s *)sub_100086554(0x2Eu);
              if (os_log_type_enabled(v103, OS_LOG_TYPE_ERROR)) {
                goto LABEL_167;
              }
            }

            return;
          case 0x15u:
            *(_WORD *)&v352[4] = 0;
            *(_DWORD *)unsigned __int16 v352 = 0;
            memset(buf, 0, sizeof(buf));
            if ((_DWORD)v15)
            {
              uint64_t v104 = WORD2(v325);
              if (WORD1(v325) <= WORD2(v325))
              {
                uint64_t v309 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              }

              else
              {
                if (BYTE6(v325) == 1)
                {
                  ++WORD2(v325);
                  int v105 = v324[v104];
                  if (((22 * v105) | 1) == (_DWORD)v15)
                  {
                    if (!v324[v104]) {
                      return;
                    }
                    while (1)
                    {
                      if (WORD1(v325) - WORD2(v325) <= 5) {
                        goto LABEL_278;
                      }
                      if (BYTE6(v325) != 1) {
                        break;
                      }
                      sub_1001F0050((uint64_t)v352, (uint64_t)&v324[WORD2(v325)], 6uLL);
                      __int16 v106 = WORD2(v325);
                      WORD2(v325) += 6;
                      if (WORD1(v325) - (unint64_t)WORD2(v325) <= 0xF) {
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1887,  "ByteStream_NumReadBytesAvail((*pBs)) >= (sizeof(linkKey))");
                      }
                      *(_OWORD *)int buf = *(_OWORD *)&v324[WORD2(v325)];
                      WORD2(v325) = v106 + 22;
                      nullsub_63(v352, buf);
                      if (!--v105) {
                        return;
                      }
                    }

                    uint64_t v308 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_280:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1886,  v308);
                  }

                  sub_1001EE134( (uint64_t)"handle_ReturnLinkKeys bad parm length: expected %d, got %d",  v179,  v180,  v181,  v182,  v183,  v184,  v185,  (22 * v105) | 1u);
                  uint64_t v186 = (os_log_s *)sub_100086554(0x2Eu);
                  if (!os_log_type_enabled(v186, OS_LOG_TYPE_ERROR)) {
                    return;
                  }
LABEL_167:
                  sub_100657858();
                  return;
                }

                uint64_t v309 = "(*pBs).__RWFlag == BYTESTREAM_READ";
              }

              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1875,  v309);
            }

            sub_1001EE134( (uint64_t)"handle_ReturnLinkKeys bad parm length: expected at least 1, got %d",  v147,  v148,  v149,  v150,  v151,  v152,  v153,  0LL);
            uint64_t v154 = (os_log_s *)sub_100086554(0x2Eu);
            if (!os_log_type_enabled(v154, OS_LOG_TYPE_ERROR)) {
              return;
            }
            goto LABEL_167;
          case 0x19u:
            goto LABEL_68;
          default:
            return;
        }
      }

      if ((_DWORD)v62 != 2)
      {
        if ((_DWORD)v62 != 3)
        {
          if ((_DWORD)v62 != 5) {
            return;
          }
          uint64_t v88 = *(void *)a3;
          LOWORD(v326) = 0;
          *(_WORD *)&v352[4] = 0;
          *(_DWORD *)unsigned __int16 v352 = 0;
          *(void *)&__int128 v335 = 0LL;
          __int128 v333 = 0u;
          __int128 v334 = 0u;
          *(_OWORD *)int buf = 0u;
          __int128 v332 = 0u;
          int v89 = sub_100132A04((uint64_t)buf, (uint64_t)v21, (uint64_t *)&v324, v15, &v326, (uint64_t)v352);
          if (v89)
          {
            int v90 = v89;
            sub_1001332DC(v21);
            *(_DWORD *)int buf = v90;
          }

          else
          {
            int v155 = (unsigned __int16)v326;
            sub_100133370(v21, (unsigned __int16)v326, (uint64_t)v352, 1);
            unsigned __int8 v156 = sub_10016F4A0(6LL);
            sub_100133370(v156, v155, (uint64_t)v352, 1);
            if (!(*(_DWORD *)buf | v332))
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134( (uint64_t)"Status and Reason both SUCCESS for disconnect",  v157,  v158,  v159,  v160,  v161,  v162,  v163,  v323);
                uint64_t v164 = (os_log_s *)sub_100086554(0x2Eu);
                if (os_log_type_enabled(v164, OS_LOG_TYPE_ERROR)) {
                  sub_100657858();
                }
              }

              LODWORD(v332) = 105;
            }
          }

          uint64_t v165 = *(void *)&buf[8];
          if (*(void *)&buf[8])
          {
            switch(*(_BYTE *)(*(void *)&buf[8] + 2LL))
            {
              case 0:
                *(_BYTE *)(*(void *)&buf[8] + 54LL) = 7;
                int v166 = *(_DWORD *)(v165 + 148);
                break;
              case 1:
                int v166 = 0;
                *(_BYTE *)(*(void *)&buf[8] + 56LL) = 1;
                break;
              case 4:
                goto LABEL_203;
              case 5:
                int v166 = 0;
                *(_BYTE *)(*(void *)&buf[8] + 48LL) = 7;
                break;
              default:
                sub_1001EE2A0();
LABEL_203:
                *(_BYTE *)(v165 + memset(v42, 0, 124) = 7;
                int v166 = *(_DWORD *)(v165 + 204);
                break;
            }

            sub_100136880(v165);
            sub_100131D6C(5LL, buf, v61 != 0, v88, v209, v210, v211, v212, v213);
            if (!v166) {
              sub_10012E320((unsigned __int16 *)v165);
            }
            return;
          }

          sub_1001EE134( (uint64_t)"Disconnect complete event for a connection we didn't know about %d\n",  v167,  v168,  v169,  v170,  v171,  v172,  v173,  (unsigned __int16)v326);
          uint64_t v174 = (os_log_s *)sub_100086554(0x2Eu);
          if (!os_log_type_enabled(v174, OS_LOG_TYPE_ERROR)) {
            return;
          }
          goto LABEL_155;
        }

LABEL_123:
              v135 = v326;
              goto LABEL_160;
            }

            goto LABEL_156;
          }
        }

        if (v94 && *v94 != -1)
        {
          char v326 = 0LL;
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"ConnectComplete RXed for existing remote device: %d - %d",  v131,  v132,  v133,  v17,  v18,  v19,  v20,  HIWORD(v328));
            uint64_t v134 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v134, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          goto LABEL_123;
        }

        int v82 = sub_10017AB4C(a1);
        sub_10017B47C(*(unsigned __int16 **)(v82 + 112));
        return 545LL;
      }
    }

    else if (((*(_DWORD *)(*(void *)(*(void *)(sub_10017AB4C(a1) + 112) + 176LL) + 32LL) {
              + (_BYTE)v68) & 0x3Fu) < v66)
    }
    {
      goto LABEL_114;
    }
  }

  if (((a2 >> 7) & 1) != 0 && *(_BYTE *)(*(void *)(sub_10017AB4C(a1) + 112) + 2LL)) {
    goto LABEL_114;
  }
  sub_100182D14(a1, a3);
  sub_100181EEC((uint64_t)a1, (a2 >> 8) & 0x3F, (a2 >> 7) & 1);
  LOWORD(a3) = *(_WORD *)(*(void *)(sub_10017AB4C(a1) + 112) + 18LL);
  memset(__src, 0, 126);
  if (*(unsigned __int16 *)(*(void *)(sub_10017AB4C(a1) + 112) + 144LL) >= 2u)
  {
    int v92 = 0LL;
    while (1)
    {
      uint64_t v15 = sub_100182A80((uint64_t)a1, a3, 0);
      if ((_DWORD)v15) {
        break;
      }
      if (v92 == 62)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Could not find txSeq %d in our SREJ list",  v112,  v113,  v114,  v115,  v116,  v117,  v118,  v10);
          uint64_t v119 = (os_log_s *)sub_100086554(0x2Fu);
          if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        goto LABEL_130;
      }

      LODWORD(a3) = *(unsigned __int8 *)(*(void *)(sub_10017AB4C(a1) + 112) + 2 * v92++ + 20);
      if ((_DWORD)a3 == (_DWORD)v10)
      {
        LOBYTE(a3) = v10;
        goto LABEL_142;
      }
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Failed to send SREJ: %!", v93, v94, v95, v96, v97, v98, v99, v15);
      uint64_t v100 = (os_log_s *)sub_100086554(0x2Fu);
      if (os_log_type_enabled(v100, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    __int128 v81 = *(void *)(v151 + 8);
    int v82 = *(void *)(v81 + 96);
    int v83 = *(void *)(v81 + 104);
    while (v82 != v83)
    {
      if (*(_DWORD *)(v82 + 104) == 2)
      {
        unsigned __int8 v156 = sub_10056AAD8(*(void *)(v150 + 8) + 48LL);
        uint64_t v154 = (unsigned __int8 *)sub_10056AAF0(*(void *)(v150 + 8) + 48LL);
        if (v156 >= 2 && *(_WORD *)v154 != 76)
        {
          uint64_t v191 = 0uLL;
          uint64_t v192 = 0LL;
          sub_100614930(*(void *)(v151 + 8), (uint64_t *)&v191);
          uint64_t v158 = *((void *)&v191 + 1);
          uint64_t v85 = v191;
          if ((void)v191 != *((void *)&v191 + 1))
          {
            uint64_t v165 = *(unsigned __int16 *)v154;
            do
            {
              if (v165 == *(unsigned __int16 *)(v85 + 16))
              {
                if (sub_10056AAC8(v85 + 40))
                {
                  uint64_t v86 = 1;
                }

                else
                {
                  uint64_t v86 = sub_10056AAC8(v85 + 56);
                  uint64_t v87 = v156 < 3 || v86;
                  if ((v87 & 1) == 0)
                  {
                    uint64_t v88 = sub_10056AAD8(v85 + 40);
                    int v89 = (unsigned __int8 *)sub_10056AAF0(v85 + 56);
                    int v90 = (unsigned __int8 *)sub_10056AAF0(v85 + 40);
                    uint64_t v86 = sub_1006145CC((uint64_t)v90, v154 + 2, v156 - 2, v88, v89, v90);
                  }
                }

                uint64_t v162 = v86;
                int v91 = *(id *)v85;
                sub_10002418C(__p, (char *)[v91 UTF8String]);
                int v92 = (char **)sub_100024098((uint64_t)&v180, (const void **)__p);
                if ((__p[23] & 0x80000000) != 0) {
                  operator delete(*(void **)__p);
                }

                if (v181 == v92)
                {
                  uint64_t v93 = *(id *)v85;
                  sub_10002418C(__p, (char *)[v93 UTF8String]);
                  *(void *)out = __p;
                  *((_BYTE *)sub_1002925B8( (uint64_t **)&v180,  (const void **)__p,  (uint64_t)&unk_1006C2518,  (_OWORD **)out)
                  + 56) = v162;
                  if ((__p[23] & 0x80000000) != 0) {
                    operator delete(*(void **)__p);
                  }
                }

                else
                {
                  uint64_t v93 = *(id *)v85;
                  sub_10002418C(__p, (char *)[v93 UTF8String]);
                  *(void *)out = __p;
                  uint64_t v94 = sub_1002925B8((uint64_t **)&v180, (const void **)__p, (uint64_t)&unk_1006C2518, (_OWORD **)out);
                  uint64_t v95 = v162;
                  if (!*((_BYTE *)v94 + 56)) {
                    uint64_t v95 = 0;
                  }
                  *((_BYTE *)v94 + 56) = v95;
                  if ((__p[23] & 0x80000000) != 0) {
                    operator delete(*(void **)__p);
                  }
                }

                uint64_t v96 = (os_log_s *)qword_1008F75B8;
                if (os_log_type_enabled((os_log_t)qword_1008F75B8, OS_LOG_TYPE_INFO))
                {
                  uint64_t v97 = v151 + 232;
                  memset(out, 0, sizeof(out));
                  uuid_unparse_upper(a2, out);
                  sub_10002418C(&v188, out);
                  if ((v188.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                    uint64_t v98 = &v188;
                  }
                  else {
                    uint64_t v98 = (std::stringbuf::string_type *)v188.__r_.__value_.__r.__words[0];
                  }
                  uint64_t v99 = *(unsigned __int16 *)(v85 + 16);
                  uint64_t v100 = sub_10056AB04(&v189, v154, v156);
                  sub_10056B0A4((uint64_t)v100, (std::stringbuf::string_type *)out);
                  if (out[23] >= 0) {
                    uint64_t v101 = out;
                  }
                  else {
                    uint64_t v101 = *(char **)out;
                  }
                  sub_10056B0A4(v85 + 40, &v170);
                  if ((v170.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                    uint64_t v102 = &v170;
                  }
                  else {
                    uint64_t v102 = (std::stringbuf::string_type *)v170.__r_.__value_.__r.__words[0];
                  }
                  sub_10056B0A4(v85 + 56, &v169);
                  if ((v169.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                    uint64_t v103 = &v169;
                  }
                  else {
                    uint64_t v103 = (std::stringbuf::string_type *)v169.__r_.__value_.__r.__words[0];
                  }
                  uint64_t v104 = *(id *)v85;
                  int v105 = *(id *)v85;
                  sub_10002418C(v167, (char *)[v105 UTF8String]);
                  uint64_t v182 = v167;
                  __int16 v106 = *((unsigned __int8 *)sub_1002925B8( (uint64_t **)&v180,  (const void **)v167,  (uint64_t)&unk_1006C2518,  (_OWORD **)&v182)
                         + 56);
                  *(_DWORD *)__p = 136317442;
                  *(void *)&__p[4] = v97;
                  *(_WORD *)&__p[12] = 2080;
                  *(void *)&__p[14] = v98;
                  *(_WORD *)&__p[22] = 1024;
                  *(_DWORD *)uint64_t v184 = v99;
                  *(_WORD *)&v184[4] = 1024;
                  *(_DWORD *)&v184[6] = v165;
                  *(_WORD *)uint64_t v185 = 2080;
                  *(void *)&v185[2] = v101;
                  *(_WORD *)&v185[10] = 2080;
                  *(void *)&v185[12] = v102;
                  *(_WORD *)&v185[20] = 2080;
                  *(void *)&v185[22] = v103;
                  *(_WORD *)&v185[30] = 1024;
                  *(_DWORD *)&v185[32] = v162;
                  *(_WORD *)uint64_t v186 = 2112;
                  *(void *)&v186[2] = v104;
                  LOWORD(v187[0]) = 1024;
                  *(_DWORD *)((char *)v187 + 2) = v106;
                  _os_log_impl( (void *)&_mh_execute_header,  v96,  OS_LOG_TYPE_INFO,  "filterByEnhancedRules NonAppleManufacturerData session:%s device:%s filterMfgrID:%04X payloadMfgrId: %04X payload:%s blob:%s mask:%s match:%d matchMap[%@]:%d",  __p,  0x56u);
                  if (v168 < 0) {
                    operator delete(v167[0]);
                  }

                  if (out[23] < 0) {
                    operator delete(*(void **)out);
                  }
                  *(void *)&uint64_t v189 = &off_10087FAA8;
                  if (*((void *)&v189 + 1)) {
                    sub_1002CD254(*((unsigned int **)&v189 + 1));
                  }
                }
              }

              v85 += 112LL;
            }

            while (v85 != v158);
          }

          *(void *)__p = &v191;
          sub_10004FF34((void ***)__p);
        }

        break;
      }

      v82 += 112LL;
    }

    uint64_t v107 = *(void *)(v151 + 8);
    uint64_t v108 = *(void *)(v107 + 96);
    uint64_t v109 = *(char ***)(v107 + 104);
    while (1)
    {
      if (*(_DWORD *)(v108 + 104) == 3) {
        break;
      }
      v108 += 112LL;
    }

    uint64_t v191 = 0uLL;
    uint64_t v192 = 0LL;
    sub_1006149E8(v107, (uint64_t *)&v191);
    uint64_t v159 = *((void *)&v191 + 1);
    for (uint64_t j = v191; j != v159; j += 112LL)
    {
      uint64_t v111 = *(void *)(v150 + 8);
      if (*(char *)(v111 + 39) < 0)
      {
        sub_100024238(__p, *(void **)(v111 + 16), *(void *)(v111 + 24));
      }

      else
      {
        *(_OWORD *)__p = *(_OWORD *)(v111 + 16);
        *(void *)&__p[16] = *(void *)(v111 + 32);
      }

      if (__p[23] >= 0) {
        int v112 = __p;
      }
      else {
        int v112 = *(_BYTE **)__p;
      }
      int v166 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v112, v147));
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
      uint64_t v163 = *(id *)(j + 96);
      uint64_t v113 = [v163 length];
      if (v113 <= [v166 length])
      {
        uint64_t v114 = 0;
        uint64_t v115 = *(_DWORD *)(j + 80);
        if (v115 > 1)
        {
          if (v115 != 2)
          {
            if (v115 == 1000)
            {
              uint64_t v117 = *(void *)(j + 88);
              if ((v117 & 2) != 0) {
                uint64_t v114 = [v166 compare:v163 options:v117 range:[v166 length]] == 0;
              }
              else {
                uint64_t v114 = [v166 rangeOfString:v163 options:v117 range:NSMakeRange(0, [v166 length])] != (id)0x7FFFFFFFFFFFFFFFLL;
              }
            }

            goto LABEL_226;
          }

          uint64_t v119 = *(void *)(v150 + 8);
          if (*(char *)(v119 + 39) < 0)
          {
            sub_100024238(__p, *(void **)(v119 + 16), *(void *)(v119 + 24));
          }

          else
          {
            *(_OWORD *)__p = *(_OWORD *)(v119 + 16);
            *(void *)&__p[16] = *(void *)(v119 + 32);
          }

          if (__p[23] >= 0) {
            uint64_t v124 = __p;
          }
          else {
            uint64_t v124 = *(_BYTE **)__p;
          }
          uint64_t v125 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v124));
          uint64_t v114 = [v125 hasSuffix:v163];

          goto LABEL_224;
        }

        if (!v115)
        {
          uint64_t v118 = *(void *)(v150 + 8);
          if (*(char *)(v118 + 39) < 0)
          {
            sub_100024238(__p, *(void **)(v118 + 16), *(void *)(v118 + 24));
          }

          else
          {
            *(_OWORD *)__p = *(_OWORD *)(v118 + 16);
            *(void *)&__p[16] = *(void *)(v118 + 32);
          }

          if (__p[23] >= 0) {
            uint64_t v122 = __p;
          }
          else {
            uint64_t v122 = *(_BYTE **)__p;
          }
          uint64_t v123 = (void *)[NSString stringWithUTF8String:v122];
          uint64_t v114 = [v123 containsString:v163];

LABEL_224:
          if ((__p[23] & 0x80000000) != 0) {
            operator delete(*(void **)__p);
          }
          goto LABEL_226;
        }

        if (v115 == 1)
        {
          uint64_t v116 = *(void *)(v150 + 8);
          if (*(char *)(v116 + 39) < 0)
          {
            sub_100024238(__p, *(void **)(v116 + 16), *(void *)(v116 + 24));
          }

          else
          {
            *(_OWORD *)__p = *(_OWORD *)(v116 + 16);
            *(void *)&__p[16] = *(void *)(v116 + 32);
          }

          if (__p[23] >= 0) {
            uint64_t v120 = __p;
          }
          else {
            uint64_t v120 = *(_BYTE **)__p;
          }
          uint64_t v121 = (void *)[NSString stringWithUTF8String:v120];
          uint64_t v114 = [v121 hasPrefix:v163];

          goto LABEL_224;
        }
      }

      else
      {
        uint64_t v114 = 0;
      }

LABEL_159:
        char v326 = (char *)v95;
        v135 = (char *)v95;
LABEL_160:
        if (v135)
        {
          *(void *)&v352[8] = v135;
          if (*(_DWORD *)v352)
          {
LABEL_178:
            uint64_t v85 = v61 != 0;
            uint64_t v87 = v352;
LABEL_179:
            uint64_t v84 = v62;
            uint64_t v86 = 0LL;
            goto LABEL_180;
          }

LABEL_176:
          uint64_t v196 = HIWORD(v328);
          if (sub_10012D6D8(HIWORD(v328)))
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Duplicate LM handle 0x%x was already in use %:",  v310,  v311,  v312,  v313,  v314,  v315,  v316,  v196);
              uint64_t v317 = (os_log_s *)sub_100086554(0x2Eu);
              if (os_log_type_enabled(v317, OS_LOG_TYPE_ERROR)) {
                sub_100657858();
              }
            }

            sub_1000AFE20(649LL);
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_289:
            uint64_t v318 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_291:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1720,  v318);
          }

          uint64_t v197 = (__int128 *)v326;
          *(_WORD *)char v326 = v196;
          sub_1001367F8(v197);
          goto LABEL_178;
        }

        if (*(_DWORD *)v352)
        {
          sub_10010D3AC(*(unsigned int *)v352, 0LL, (uint64_t)&v327, v93, 0LL);
          return;
        }

        if (v93 - 240 < 2 || v93 == 1)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"HCI Connection Completed event - unknown ACL connection (%:)",  v187,  v188,  v189,  v190,  v191,  v192,  v193,  (uint64_t)&v327);
            __int16 v194 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v194, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          uint64_t v195 = (char *)sub_10012DBE0((uint64_t)&v327, 2);
          char v326 = v195;
        }

        else
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"HCI Connection Completed event - unknown SCO connection (%:)",  v224,  v225,  v226,  v227,  v228,  v229,  v230,  (uint64_t)&v327);
            v231 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v231, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          char v326 = sub_10012DF44((uint64_t)&v327);
          if (!v326) {
            goto LABEL_225;
          }
          int v232 = sub_10010C9D4(v95);
          uint64_t v195 = v326;
          if (!v232)
          {
            *((void *)v326 + 6) = v95;
            goto LABEL_175;
          }
        }

        if (v195)
        {
LABEL_175:
          *(void *)&v352[8] = v195;
          goto LABEL_176;
        }

        *(_BYTE *)(v261 + 28) = BYTE6(v262);
        if ((v214 & 0x20) == 0)
        {
LABEL_150:
          if ((v214 & 0x40) == 0) {
            goto LABEL_151;
          }
          goto LABEL_178;
        }

LABEL_225:
        BOOL v233 = 0;
        __int128 v350 = 0u;
        __int128 v351 = 0u;
        __int128 v348 = 0u;
        __int128 v349 = 0u;
        __int128 v346 = 0u;
        __int128 v347 = 0u;
        __int128 v344 = 0u;
        __int128 v345 = 0u;
        __int128 v342 = 0u;
        __int128 v343 = 0u;
        __int128 v340 = 0u;
        __int128 v341 = 0u;
        __int128 v338 = 0u;
        __int128 v339 = 0u;
        __int128 v336 = 0u;
        __int128 v337 = 0u;
        __int128 v334 = 0u;
        __int128 v335 = 0u;
        __int128 v332 = 0u;
        __int128 v333 = 0u;
        *(_OWORD *)int buf = 0u;
        buf[2] = v233;
        *(_WORD *)int buf = HIWORD(v328);
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"HCI Connection Completed unable to allocate connection for %: disconnecting",  v234,  v235,  v236,  v237,  v238,  v239,  v240,  (uint64_t)&v327);
          v241 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v241, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

        uint64_t v242 = sub_100128D24(5u, v234, v235, v236, v237, v238, v239, v240, (uint64_t)buf);
        uint64_t v243 = sub_100136C78((uint64_t)buf, v242);
        if (!(_DWORD)v243) {
          return;
        }
        uint64_t v244 = v243;
        sub_1001EE134((uint64_t)"OI_HCICMD_Disconnect failed: %!", v245, v246, v247, v248, v249, v250, v251, v244);
        int v252 = (os_log_s *)sub_100086554(0x2Eu);
        if (!os_log_type_enabled(v252, OS_LOG_TYPE_ERROR)) {
          return;
        }
LABEL_155:
        sub_100657858();
        return;
      }

      int v82 = v15;
      int v83 = 0;
    }

    sub_10013248C((uint64_t *)&v324, v82, v83);
    return;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Short event, numBytes = %d", v4, v5, v6, v7, v8, v9, v10, a2);
    uint64_t v11 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
LABEL_4:
    }
      sub_100657858();
  }

void sub_100131480(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int16 *)(a2 + 4);
  unsigned int v5 = v4 >> 10;
  uint64_t v6 = *(unsigned __int8 *)(a2 + 8);
  sub_10016F5D4(v4);
  if (v5 < 0x3F) {
    sub_1001EE0BC( (uint64_t)v58,  256,  (uint64_t)"HCI expected event %d with opcode %s (0x%x) %s, reason is %!",  v7,  v8,  v9,  v10,  v11,  v6);
  }
  else {
    sub_1001EE0BC( (uint64_t)v58,  256,  (uint64_t)"HCI expected event %d with opcode %s (0x%x) %s, reason is %!. subopcode: 0x%02x -- subopcode2: 0x%02x",  v7,  v8,  v9,  v10,  v11,  v6);
  }
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)v58, v12, v13, v14, v15, v16, v17, v18, v51);
    uint64_t v19 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  sub_1000BAAF0((const char *)v58);
  if (sub_1000B1BD0())
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Controller core dump is in progress, don't trigger expected event timeouts",  v20,  v21,  v22,  v23,  v24,  v25,  v26,  v51);
      uint64_t v27 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    return;
  }

  if ((_DWORD)a1 == 621)
  {
    if (off_1008E2608) {
      off_1008E2608(621LL);
    }
    else {
      sub_1001EE2A0();
    }
  }

  uint64_t v28 = *(unsigned __int8 *)(a2 + 8);
  switch((_DWORD)v28)
  {
    case 0xE:
      __int16 v52 = 0;
      *(void *)&__int128 v53 = &v52;
      WORD4(v53) = 1;
      HIWORD(v53) = 1;
      *(_DWORD *)((char *)&v53 + sub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = 65537;
      (*(void (**)(uint64_t, void, __int128 *))(a2 + 16))(a1, *(void *)(a2 + 24), &v53);
      return;
    case 0x3E:
      uint64_t v57 = 0LL;
      __int128 v55 = 0u;
      __int128 v56 = 0u;
      __int128 v53 = 0u;
      __int128 v54 = 0u;
      if (sub_10016F4A0(62LL))
      {
        sub_1001319A4(a1, a2, (uint64_t)&v53);
        sub_1001B748C((unsigned __int16)v53, DWORD2(v53), (unsigned __int8 *)v54);
        return;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Failed to find event descriptor for %x", v35, v36, v37, v38, v39, v40, v41, 62LL);
        uint64_t v42 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
LABEL_29:
        }
          sub_100657858();
      }

      break;
    case 0xF:
      sub_1001317D4(a2, a1);
      return;
    default:
      uint64_t v57 = 0LL;
      __int128 v55 = 0u;
      __int128 v56 = 0u;
      __int128 v53 = 0u;
      __int128 v54 = 0u;
      uint64_t v29 = sub_10016F4A0(v28);
      if (v29)
      {
        sub_100131ABC(a1, a2, v29, (uint64_t *)&v53);
        sub_100131D6C(v28, &v53, 0LL, 0LL, v30, v31, v32, v33, v34);
        return;
      }

      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Failed to find event descriptor for %x", v43, v44, v45, v46, v47, v48, v49, v28);
        uint64_t v50 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
          goto LABEL_29;
        }
      }

      break;
  }

void sub_1001317D4(uint64_t a1, int a2)
{
  uint64_t v40 = 0LL;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  unsigned int v4 = sub_10016F424(*(unsigned __int16 *)(a1 + 6));
  if (!v4)
  {
    sub_1001EE134((uint64_t)"%! (%d)", v6, v7, v8, v9, v10, v11, v12, 620LL);
    uint64_t v13 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }

  uint64_t v5 = v4[20];
  if ((_DWORD)v5 == 62)
  {
    if (sub_10016F4A0(62LL))
    {
      sub_1001319A4(a2, a1, (uint64_t)&v36);
      sub_1001B748C((unsigned __int16)v36, DWORD2(v36), (unsigned __int8 *)v37);
      return;
    }

    sub_1001EE134((uint64_t)"%! (%d)", v20, v21, v22, v23, v24, v25, v26, 620LL);
    uint64_t v27 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }

  uint64_t v14 = sub_10016F4A0(v4[20]);
  if (v14)
  {
    sub_100131ABC(a2, a1, v14, (uint64_t *)&v36);
    sub_100131D6C(v5, &v36, 0LL, 0LL, v15, v16, v17, v18, v19);
    return;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"%! (%d)", v28, v29, v30, v31, v32, v33, v34, 620LL);
    uint64_t v35 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
LABEL_15:
    }
      sub_100657858();
  }

void sub_1001319A4(int a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 64) = 0LL;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)a3 = *(unsigned __int16 *)(a2 + 4);
  *(_DWORD *)(a3 + 8) = a1;
  unsigned int v3 = *(unsigned __int16 *)(a2 + 4);
  if (v3 > 0x2067)
  {
    if (v3 - 8296 >= 5)
    {
      if (v3 == 8318) {
        goto LABEL_15;
      }
      if (v3 != 8325) {
        goto LABEL_12;
      }
    }

    goto LABEL_9;
  }

  char v4 = v3 - 13;
  if (v3 - 8205 <= 0x37)
  {
    if (((1LL << v4) & 0x1240) != 0)
    {
LABEL_15:
      *(_DWORD *)(a3 + 16) = *(unsigned __int16 *)(a2 + 16);
      return;
    }

    if (((1LL << v4) & 0xC0000000000001LL) != 0) {
      goto LABEL_9;
    }
  }

  if (v3 == 8292)
  {
LABEL_9:
    *(void *)(a3 + 16) = a2 + 16;
    return;
  }

  if (v3 == 8294) {
    goto LABEL_15;
  }
LABEL_12:
  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Unknown expected param type.", v5, v6, v7, v8, v9, v10, v11, v13);
    uint64_t v12 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_100131ABC(int a1, uint64_t a2, unsigned __int8 *a3, uint64_t *a4)
{
  if (a3[4])
  {
    unint64_t v8 = 0LL;
    uint64_t v9 = (unsigned __int16 *)(a2 + 16);
    uint64_t v10 = a4;
    while (1)
    {
      switch(*(_BYTE *)(*((void *)a3 + 1) + v8))
      {
        case 'a':
          if (a3[17] != 7) {
            goto LABEL_4;
          }
          *uint64_t v10 = (uint64_t)v9;
          goto LABEL_5;
        case 'c':
        case 'e':
        case 'f':
        case 'k':
        case 'n':
        case 'p':
LABEL_4:
          *uint64_t v10 = (uint64_t)&unk_1006BCE4C;
          goto LABEL_5;
        case 'h':
          int v11 = a3[17];
          if (v11 == 7)
          {
            uint64_t v12 = (uint64_t)sub_10012DB74((uint64_t)v9);
            if (v12)
            {
              if (*(_BYTE *)(*(void *)(v12 + 48) + 54LL) == 7) {
                uint64_t v12 = *(void *)(v12 + 48);
              }
              if (v12) {
                goto LABEL_25;
              }
LABEL_22:
              if (!sub_1000A86F0()
                || (sub_1001EE134( (uint64_t)"No connection record found for %:",  v21,  v22,  v23,  v24,  v25,  v26,  v27,  (uint64_t)v9),  uint64_t v20 = (os_log_s *)sub_100086554(0x2Eu),  !os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)))
              {
LABEL_24:
                uint64_t v12 = 0LL;
                goto LABEL_25;
              }

void sub_100131D6C( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  switch((int)a1)
  {
    case 1:
      sub_1001137D8(*(unsigned int *)a2);
      return;
    case 2:
    case 34:
      sub_100113890(*a2);
      return;
    case 3:
      sub_10010D3AC( *(unsigned int *)a2,  (unsigned __int16 *)a2[1],  a2[2],  *((unsigned __int8 *)a2 + 24),  *((unsigned __int8 *)a2 + 32));
      return;
    case 4:
      sub_10010E088(*a2, *((unsigned int *)a2 + 2), *((unsigned __int8 *)a2 + 16));
      return;
    case 5:
      uint64_t v18 = a2[1];
      if (!v18) {
        goto LABEL_75;
      }
      int v19 = *(unsigned __int8 *)(v18 + 2);
      if (v19 != 5)
      {
        if (v19 == 4) {
          sub_1001AE924(*(unsigned int *)a2, a2[1], *((unsigned int *)a2 + 4), a3, a4);
        }
        else {
LABEL_75:
        }
          sub_10010E504(*(unsigned int *)a2, (unsigned __int16 *)a2[1], *((unsigned int *)a2 + 4));
      }

      return;
    case 6:
      sub_1001E9E64(*(unsigned int *)a2, a2[1]);
      return;
    case 7:
      sub_10010EA04(*(unsigned int *)a2, a2[1], a2[2]);
      return;
    case 8:
      uint64_t v20 = a2[1];
      if (v20 && *(_BYTE *)(v20 + 2) == 4) {
        goto LABEL_70;
      }
      uint64_t v21 = *(unsigned int *)a2;
      uint64_t v22 = *((unsigned __int8 *)a2 + 16);
      uint64_t v23 = a2[1];
      uint64_t v24 = 255LL;
      goto LABEL_74;
    case 9:
      sub_1001E7A20(*(unsigned int *)a2, a2[1]);
      return;
    case 10:
      sub_1001E7AE8();
      return;
    case 11:
      sub_100114718(*(unsigned int *)a2, a2[1], a2[2]);
      return;
    case 12:
      uint64_t v25 = a2[1];
      if (v25 && *(_BYTE *)(v25 + 2) == 4) {
        sub_1001AF6C0( *(unsigned int *)a2,  a2[1],  *((unsigned __int8 *)a2 + 16),  *((_WORD *)a2 + 12),  *((_WORD *)a2 + 16));
      }
      else {
        sub_100114A20( *(unsigned int *)a2,  a2[1],  *((unsigned __int8 *)a2 + 16),  *((unsigned __int16 *)a2 + 12),  *((unsigned __int16 *)a2 + 16));
      }
      return;
    case 13:
      off_1008F6D98( *(unsigned int *)a2,  a2[1],  *((unsigned __int8 *)a2 + 16),  *((unsigned __int8 *)a2 + 24),  *((unsigned int *)a2 + 8),  *((unsigned int *)a2 + 10),  *((unsigned int *)a2 + 12),  *((unsigned int *)a2 + 14));
      return;
    case 14:
    case 15:
    case 19:
      goto LABEL_2;
    case 16:
      sub_100112E28(*(unsigned __int8 *)a2);
      return;
    case 17:
      (*(void (**)(void))(qword_1008F6D90 + 24))(*a2);
      return;
    case 18:
      sub_10011840C(*(unsigned int *)a2, a2[1], *((unsigned __int8 *)a2 + 16));
      return;
    case 20:
      sub_100112F94(*(unsigned int *)a2, a2[1], *((unsigned __int8 *)a2 + 16), *((unsigned __int16 *)a2 + 12));
      return;
    case 21:
      uint64_t v26 = *a2;
      a2 = (void *)a2[1];
      goto LABEL_34;
    case 22:
      sub_1001E9454(*a2);
      return;
    case 23:
      sub_1001E9778(*a2, (uint64_t)a2, a3, a4, a5, a6, a7, a8);
      return;
    case 24:
      sub_1001E9D30(*a2, a2[1], *((unsigned int *)a2 + 4));
      return;
    case 25:
      sub_100112CF8(*a2, *((unsigned __int8 *)a2 + 8));
      return;
    case 26:
      sub_10010EB40(*(unsigned __int8 *)a2);
      return;
    case 27:
      sub_1001130F4(*a2, *((unsigned __int8 *)a2 + 8));
      return;
    case 28:
      sub_100114B34(*(unsigned int *)a2, a2[1]);
      return;
    case 29:
      sub_1001131E0(*(unsigned int *)a2, a2[1], *((unsigned __int16 *)a2 + 8));
      return;
    case 30:
      uint64_t v26 = *a2;
LABEL_34:
      nullsub_63(v26, a2);
      return;
    case 31:
      sub_100113330(*a2, *((unsigned __int8 *)a2 + 8));
      return;
    case 32:
      sub_1001133C0(*a2, *((unsigned __int8 *)a2 + 8));
      return;
    case 33:
      off_1008F6DA0( *(unsigned int *)a2,  a2[1],  *((unsigned __int8 *)a2 + 16),  *((unsigned __int8 *)a2 + 24),  *((unsigned __int8 *)a2 + 32),  *((unsigned int *)a2 + 10),  *((unsigned int *)a2 + 12),  *((unsigned int *)a2 + 14),  *((_DWORD *)a2 + 16));
      return;
    case 35:
      sub_100114890(*(unsigned int *)a2, a2[1], *((unsigned __int8 *)a2 + 16), *((unsigned __int8 *)a2 + 24), a2[4]);
      return;
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 47:
    case 55:
    case 58:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 88:
      goto LABEL_6;
    case 44:
      sub_10011B66C( *(unsigned int *)a2,  a2[1],  a2[2],  *((unsigned __int8 *)a2 + 24),  *((unsigned __int8 *)a2 + 32),  *((unsigned __int8 *)a2 + 40),  *((unsigned __int16 *)a2 + 24),  *((unsigned __int16 *)a2 + 28),  *((_DWORD *)a2 + 16));
      return;
    case 45:
      sub_10011B394( *(unsigned int *)a2,  a2[1],  *((unsigned __int8 *)a2 + 16),  *((unsigned __int8 *)a2 + 24),  *((unsigned __int16 *)a2 + 16),  *((unsigned __int16 *)a2 + 20));
      return;
    case 46:
      sub_100113450( *(unsigned int *)a2,  a2[1],  *((unsigned __int16 *)a2 + 8),  *((unsigned __int16 *)a2 + 12),  *((unsigned __int16 *)a2 + 16),  *((unsigned __int16 *)a2 + 20));
      return;
    case 48:
      uint64_t v27 = a2[1];
      if (v27 && *(_BYTE *)(v27 + 2) == 4) {
        sub_1001C7558(*(unsigned int *)a2, (_BYTE *)a2[1]);
      }
      else {
        sub_1001E74F8(*(unsigned int *)a2, a2[1]);
      }
      return;
    case 49:
      sub_1001E87D4(*a2);
      return;
    case 50:
      sub_1001E8E78(*a2, *((unsigned __int8 *)a2 + 8), *((unsigned __int8 *)a2 + 16), *((unsigned __int8 *)a2 + 24));
      return;
    case 51:
      sub_1001E7CE8(*a2, *((unsigned int *)a2 + 2));
      return;
    case 52:
      sub_1001E80DC(*a2);
      return;
    case 53:
      sub_1001E83E4(*a2);
      return;
    case 54:
      sub_1001EA1F8(*(unsigned int *)a2, a2[1], a9);
      return;
    case 56:
      nullsub_63(*a2, *((unsigned __int16 *)a2 + 4));
      return;
    case 57:
      sub_10010F308(*a2);
      return;
    case 59:
      sub_1001E82B4(*a2, *((unsigned int *)a2 + 2));
      return;
    case 60:
      sub_1001E81F4(*a2, *((unsigned __int8 *)a2 + 8));
      return;
    case 61:
      sub_100113518(*a2, a2[1]);
      return;
    case 71:
      return;
    case 87:
      sub_1001E742C(*a2);
      return;
    case 89:
      uint64_t v20 = a2[1];
      if (v20 && *(_BYTE *)(v20 + 2) == 4)
      {
LABEL_70:
        sub_1001C73C4(*(unsigned int *)a2, v20, *((unsigned __int8 *)a2 + 16));
      }

      else
      {
        uint64_t v21 = *(unsigned int *)a2;
        uint64_t v22 = *((unsigned __int8 *)a2 + 16);
        uint64_t v24 = *((unsigned __int8 *)a2 + 24);
        uint64_t v23 = a2[1];
LABEL_74:
        sub_1001E7550(v21, v23, v22, v24);
      }

      return;
    default:
      if ((_DWORD)a1 == 254)
      {
        sub_100112C68(*a2, *((unsigned __int8 *)a2 + 8));
      }

      else
      {
LABEL_6:
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"Unknown event type, event id %x", v10, v11, v12, v13, v14, v15, v16, a1);
          uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }

void *sub_100132474(void *result)
{
  off_1008E2610 = result;
  return result;
}

void *sub_100132480(void *result)
{
  off_1008E2608 = result;
  return result;
}

void sub_10013248C(uint64_t *a1, int a2, int a3)
{
  uint64_t v64 = 0LL;
  uint64_t v65 = 0LL;
  uint64_t v66 = 0LL;
  if (!a2)
  {
    sub_1001EE134( (uint64_t)"handle_InquiryResult bad parm length: expected %d, got %d",  v9,  v10,  v11,  v12,  v13,  v14,  v15,  1LL);
    uint64_t v16 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_10:
    sub_100657858();
    return;
  }

  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
    goto LABEL_67;
  }

  uint64_t v4 = *((unsigned __int16 *)a1 + 6);
  if (*((unsigned __int16 *)a1 + 5) <= v4)
  {
LABEL_67:
    uint64_t v63 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_69;
  }

  if (*((_BYTE *)a1 + 14) != 1)
  {
    uint64_t v63 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_69:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1164,  v63);
  }

  uint64_t v6 = *a1;
  *((_WORD *)a1 + 6) = v4 + 1;
  uint64_t v7 = *(unsigned __int8 *)(v6 + v4);
  if (a3 == 2)
  {
    if ((_DWORD)v7 != 1)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"handle_InquiryResult misinterpreted spec: expected 1 resp, got %d",  v53,  v54,  v55,  v56,  v57,  v58,  v59,  v7);
        uint64_t v60 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR)) {
          sub_100657F74();
        }
      }

      return;
    }

    uint64_t v8 = 255LL;
  }

  else
  {
    uint64_t v8 = (14 * (_DWORD)v7) | 1u;
    if (a3 == 1 && 15 * (_DWORD)v7 + 1 == a2)
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"handle_InquiryResult misinterpreted spec: expected %d, got %d",  v17,  v18,  v19,  v20,  v21,  v22,  v23,  (14 * (_DWORD)v7) | 1u);
        uint64_t v24 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      int v25 = 1;
      if ((_DWORD)v7) {
        goto LABEL_20;
      }
      return;
    }
  }

  if ((_DWORD)v8 != a2)
  {
    sub_1001EE134( (uint64_t)"handle_InquiryResult bad parm length: expected %d, got %d",  v45,  v46,  v47,  v48,  v49,  v50,  v51,  v8);
    __int16 v52 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_10;
  }

  int v25 = 0;
  if ((_DWORD)v7)
  {
LABEL_20:
    if (a3) {
      int v26 = v25;
    }
    else {
      int v26 = 1;
    }
    while (!*((_BYTE *)a1 + 15))
    {
      uint64_t v27 = *((unsigned __int16 *)a1 + 6);
      if (*((_BYTE *)a1 + 14) != 1)
      {
        int v61 = "(*pBs).__RWFlag == BYTESTREAM_READ";
        goto LABEL_56;
      }

      sub_1001F0050((uint64_t)&v64, *a1 + v27, 6uLL);
      __int16 v28 = *((_WORD *)a1 + 6);
      *((_WORD *)a1 + 6) = v28 + 6;
      if (*((_BYTE *)a1 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_58:
        uint64_t v62 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_60:
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1200,  v62);
      }

      unsigned int v29 = *((unsigned __int16 *)a1 + 5);
      if (*((_BYTE *)a1 + 14) != 1)
      {
        uint64_t v62 = "(*pBs).__RWFlag == BYTESTREAM_READ";
        goto LABEL_60;
      }

      uint64_t v30 = *a1;
      *((_WORD *)a1 + 6) = v28 + 7;
      BYTE6(v64) = *(_BYTE *)(v30 + (unsigned __int16)(v28 + 6));
      if (v29 <= (unsigned __int16)(v28 + 7)) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1201,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
      }
      unsigned __int16 v31 = v28 + 8;
      *((_WORD *)a1 + 6) = v28 + 8;
      HIBYTE(v64) = *(_BYTE *)(v30 + (unsigned __int16)(v28 + 7));
      if (v26)
      {
        if (v29 <= v31) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1206,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
        }
        unsigned __int16 v32 = v28 + 9;
        *((_WORD *)a1 + 6) = v32;
        char v33 = *(_BYTE *)(v30 + v31);
      }

      else
      {
        char v33 = 0;
        unsigned __int16 v32 = v28 + 8;
      }

      BYTE4(v65) = v33;
      if ((int)(v29 - v32) <= 2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1208,  "ByteStream_NumReadBytesAvail(*pBs) >= 3");
      }
      LODWORD(v65) = *(unsigned __int16 *)(v30 + v32) | (*(unsigned __int8 *)(v30 + v32 + 2) << 16);
      *((_WORD *)a1 + 6) = v32 + 3;
      if ((int)(v29 - (unsigned __int16)(v32 + 3)) < 2) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1209,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
      }
      HIWORD(v65) = *(_WORD *)(v30 + (unsigned __int16)(v32 + 3));
      unsigned __int16 v34 = v32 + 5;
      *((_WORD *)a1 + 6) = v32 + 5;
      uint64_t v66 = 0LL;
      BYTE5(v65) = 0;
      if (a3)
      {
        if (v29 <= v34) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1213,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
        }
        unsigned __int16 v35 = v32 + 6;
        *((_WORD *)a1 + 6) = v35;
        BYTE5(v65) = *(_BYTE *)(v30 + v34);
        if (a3 == 2)
        {
          if (v29 - 240 > 0x11)
          {
            if (sub_1000A86F0())
            {
              sub_1001EE134( (uint64_t)"Extended Inquiry Result bad parm length: maximum expected %d, got %d",  v36,  v37,  v38,  v39,  v40,  v41,  v42,  257LL);
              uint64_t v43 = (os_log_s *)sub_100086554(0x2Eu);
              if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
              {
                uint64_t v44 = sub_1001EDDCC();
                *(_DWORD *)int buf = 136446466;
                uint64_t v68 = v44;
                __int16 v69 = 1024;
                int v70 = 0xFFFF;
                _os_log_error_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
              }
            }
          }

          else
          {
            uint64_t v66 = v30 + v35;
          }
        }
      }

      sub_100113890((uint64_t)&v64);
      LODWORD(v7) = v7 - 1;
      if (!(_DWORD)v7) {
        return;
      }
    }

    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_54:
    int v61 = "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE";
LABEL_56:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  1199,  v61);
  }

uint64_t sub_100132A04(uint64_t a1, uint64_t a2, uint64_t *a3, int a4, _WORD *a5, uint64_t a6)
{
  if (!*(_BYTE *)(a2 + 4)) {
    return 0LL;
  }
  unint64_t v11 = 0LL;
  char v12 = 0;
  uint64_t v13 = &unk_1006BCE4C;
  while (2)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
      unsigned int v14 = 0;
    }

    else
    {
      unsigned int v14 = *((unsigned __int16 *)a3 + 5) - *((unsigned __int16 *)a3 + 6);
    }

    switch(*(_BYTE *)(*(void *)(a2 + 8) + v11))
    {
      case 'a':
        if (v14 < 6)
        {
          uint64_t v16 = v7;
          uint64_t v17 = v13;
          uint64_t v18 = v6;
          if ((v12 & 1) != 0) {
            uint64_t v20 = 0LL;
          }
          else {
            uint64_t v20 = 608LL;
          }
          uint64_t v19 = a6;
        }

        else
        {
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_106:
            uint64_t v49 = "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE";
LABEL_108:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  403,  v49);
          }

          uint64_t v15 = *((unsigned __int16 *)a3 + 6);
          if (*((_BYTE *)a3 + 14) != 1)
          {
            uint64_t v49 = "(*pBs).__RWFlag == BYTESTREAM_READ";
            goto LABEL_108;
          }

          uint64_t v16 = v7;
          uint64_t v17 = v13;
          uint64_t v18 = v6;
          uint64_t v19 = a6;
          sub_1001F0050(a6, *a3 + v15, 6uLL);
          uint64_t v20 = 0LL;
          *((_WORD *)a3 + 6) += 6;
        }

        *(void *)a1 = v19;
        uint64_t v6 = v18;
        uint64_t v13 = v17;
        uint64_t v7 = v16;
        goto LABEL_80;
      case 'b':
      case 'd':
      case 'e':
      case 'g':
      case 'i':
      case 'j':
      case 'l':
      case 'm':
      case 'o':
      case 'p':
      case 'q':
      case 'r':
LABEL_93:
        sub_1001EE2A0();
        uint64_t v20 = 620LL;
        goto LABEL_88;
      case 'c':
        if (v14 < 0xA) {
          goto LABEL_72;
        }
        *(void *)a1 = *a3 + *((unsigned __int16 *)a3 + 6);
        if (*((_BYTE *)a3 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_110:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  480,  "ByteStream_NumReadBytesAvail(*pBs) >= (10)");
        }

        int v22 = *((unsigned __int16 *)a3 + 6);
        uint64_t v20 = 0LL;
        __int16 v23 = v22 + 10;
        goto LABEL_71;
      case 'f':
        if (v14 < 8) {
          goto LABEL_72;
        }
        *(void *)a1 = *a3 + *((unsigned __int16 *)a3 + 6);
        if (*((_BYTE *)a3 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_112:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  465,  "ByteStream_NumReadBytesAvail(*pBs) >= (8)");
        }

        int v24 = *((unsigned __int16 *)a3 + 6);
        goto LABEL_70;
      case 'h':
        if (v14 < 2) {
          goto LABEL_64;
        }
        if (*((_BYTE *)a3 + 14) != 1)
        {
          uint64_t v50 = "(*pBs).__RWFlag == BYTESTREAM_READ";
          goto LABEL_116;
        }

        if (*((_BYTE *)a3 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_115:
          uint64_t v50 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_116:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  414,  v50);
        }

        uint64_t v25 = *((unsigned __int16 *)a3 + 6);
        *a5 = *(_WORD *)(*a3 + v25);
        *((_WORD *)a3 + 6) += 2;
        uint64_t v20 = 0LL;
        *(void *)a1 = sub_10012D6D8((unsigned __int16)*a5);
        goto LABEL_80;
      case 'k':
        if (v14 < 0x10) {
          goto LABEL_72;
        }
        *(void *)a1 = *a3 + *((unsigned __int16 *)a3 + 6);
        if (*((_BYTE *)a3 + 15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_118:
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  510,  "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
        }

        int v26 = *((unsigned __int16 *)a3 + 6);
        uint64_t v20 = 0LL;
        __int16 v23 = v26 + 16;
        goto LABEL_71;
      case 'n':
        if (v14 >= 0xF8)
        {
          *(void *)a1 = *a3 + *((unsigned __int16 *)a3 + 6);
          if (*((_BYTE *)a3 + 15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c");
LABEL_120:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hcievents.c",  447,  "ByteStream_NumReadBytesAvail(*pBs) >= (248)");
          }

          int v27 = *((unsigned __int16 *)a3 + 6);
          uint64_t v20 = 0LL;
          *((_WORD *)a3 + 6) = v27 + 248;
          *(_BYTE *)(*(void *)a1 + 247LL) = 0;
          goto LABEL_80;
        }

void sub_1001332DC(unsigned __int8 *a1)
{
  if (a1[16] != 3)
  {
    int v11 = 0;
    if (sub_100133CDC(*a1, &v11))
    {
      uint64_t v1 = sub_100133D98(v11);
      if ((_DWORD)v1)
      {
        uint64_t v2 = v1;
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"%! (%d)", v3, v4, v5, v6, v7, v8, v9, v2);
          uint64_t v10 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
            sub_100657858();
          }
        }
      }
    }
  }

uint64_t sub_100133370(unsigned __int8 *a1, int a2, uint64_t a3, int a4)
{
  if (a1[16] == 3) {
    return 0LL;
  }
  int v29 = 0;
  for (uint64_t i = sub_100133CDC(*a1, &v29); i; uint64_t i = sub_100133D30(*a1, &v29))
  {
    int v10 = a1[17];
    switch(v10)
    {
      case 6:
        break;
      case 7:
        if (*(_DWORD *)a3 == *(_DWORD *)(i + 16) && *(unsigned __int16 *)(a3 + 4) == *(unsigned __int16 *)(i + 20))
        {
LABEL_21:
          if (a4)
          {
            uint64_t v4 = sub_100133D98(v29);
            if ((_DWORD)v4)
            {
              if (sub_1000A86F0())
              {
                sub_1001EE134((uint64_t)"%! (%d)", v21, v22, v23, v24, v25, v26, v27, v4);
                uint64_t v28 = (os_log_s *)sub_100086554(0x2Eu);
                if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
                  sub_100657858();
                }
              }
            }

            return v4;
          }

          return 0LL;
        }

        break;
      case 5:
        goto LABEL_21;
    }
  }

  if (a1[16] == 2)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"%! (%d)", v12, v13, v14, v15, v16, v17, v18, 619LL);
      uint64_t v19 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  return 120LL;
}

void sub_1001334E4( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

uint64_t sub_1001334F8()
{
  word_1008E2620 = 0;
  dword_1008E2624 = 0;
  byte_1008E2628 = 0;
  qword_1008E2630 = (uint64_t)sub_1000B1814(32LL * *(unsigned __int8 *)(qword_1008F6D80 + 2));
  if (qword_1008E2630) {
    return 0LL;
  }
  else {
    return 106LL;
  }
}

void sub_10013354C(unsigned __int16 *a1)
{
  if (sub_10012D514((uint64_t)a1) || sub_10012D5EC((uint64_t)a1))
  {
    int v2 = 1;
  }

  else
  {
    if (!sub_10012D5BC((uint64_t)a1))
    {
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCIExpEvQ_Flush: %x", v21, v22, v23, v24, v25, v26, v27, (uint64_t)a1);
        uint64_t v28 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          sub_10065BD2C();
        }
      }

      return;
    }

    int v2 = 0;
  }

  unint64_t v3 = (unsigned __int16)word_1008E2620;
  if (word_1008E2620)
  {
    uint64_t v4 = 32LL * (unsigned __int16)word_1008E2620;
    do
    {
      int v5 = sub_10016F424(*(unsigned __int16 *)(qword_1008E2630 + v4 - 26))[19];
      if (v5 == 6)
      {
        uint64_t v7 = qword_1008E2630;
      }

      else if (v5 == 7 && v2 != 0)
      {
        uint64_t v7 = qword_1008E2630;
        if (*((_DWORD *)a1 + 12) == *(_DWORD *)(qword_1008E2630 + v4 - 16)
          && a1[26] == *(unsigned __int16 *)(qword_1008E2630 + v4 - 12))
        {
LABEL_18:
          __int128 v29 = 0u;
          __int128 v30 = 0u;
          uint64_t v9 = v7 + v4;
          __int128 v10 = *(_OWORD *)(v9 - 16);
          __int128 v29 = *(_OWORD *)(v9 - 32);
          __int128 v30 = v10;
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Handle disconnected: %d, expected %2x", v11, v12, v13, v14, v15, v16, v17, *a1);
            uint64_t v18 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
            {
              uint64_t v20 = sub_1001EDDCC();
              *(_DWORD *)int buf = 136446466;
              uint64_t v32 = v20;
              __int16 v33 = 1024;
              int v34 = 634;
              _os_log_error_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
            }
          }

          sub_1001337D4(v3 - 1);
          if (BYTE8(v29) > 0x2Cu
            || ((1LL << SBYTE8(v29)) & 0x100000100028LL) == 0
            && (BYTE8(v29) != 15LL || WORD3(v29) > 0x2Au || ((1LL << SBYTE6(v29)) & 0x60030000370LL) == 0))
          {
            sub_100131480(634LL, &v29);
          }
        }
      }

      v4 -= 32LL;
    }

    while (v3-- > 1);
  }

uint64_t sub_1001337D4(int a1)
{
  int v2 = (unsigned __int16)word_1008E2620;
  if ((unsigned __int16)word_1008E2620 <= a1)
  {
    sub_1001EE2A0();
    int v2 = (unsigned __int16)word_1008E2620;
  }

  if (!v2)
  {
    sub_1001EE2A0();
    int v2 = (unsigned __int16)word_1008E2620;
  }

  if (v2 <= a1) {
    return 640LL;
  }
  unsigned __int16 v3 = v2 - 1;
  word_1008E2620 = v3;
  if (a1 < v3)
  {
    uint64_t v4 = v3;
    int v5 = (_OWORD *)(qword_1008E2630 + 32LL * a1 + 32);
    uint64_t v6 = v4 - a1;
    do
    {
      __int128 v7 = v5[1];
      *(v5 - 2) = *v5;
      *(v5 - 1) = v7;
      v5 += 2;
      --v6;
    }

    while (v6);
  }

  return 0LL;
}

uint64_t sub_100133868(uint64_t a1, unsigned int *a2)
{
  uint64_t v16 = 0LL;
  sub_1000B0400((uint64_t)&v16);
  int v4 = v16;
  int v5 = *(unsigned __int8 *)(a1 + 8);
  switch(v5)
  {
    case 1:
      int v8 = byte_1008F6E18;
      if (!byte_1008F6E18)
      {
        sub_1001EE2A0();
        int v8 = byte_1008F6E18;
      }

      unsigned int v7 = 5 * v8;
      uint64_t v6 = qword_1008F6D80;
      break;
    case 14:
      unsigned int v9 = *(unsigned __int16 *)(a1 + 4);
      if (v9 >> 10 < 0x3F)
      {
        uint64_t v6 = qword_1008F6D80;
        BOOL v10 = v9 == 3108;
        unsigned int v7 = *(unsigned __int8 *)(qword_1008F6D80 + 3) / 3u;
        if (!v10) {
          unsigned int v7 = *(unsigned __int8 *)(qword_1008F6D80 + 3);
        }
      }

      else
      {
        uint64_t v6 = qword_1008F6D80;
        unsigned int v7 = *(unsigned __int8 *)(qword_1008F6D80 + 6);
      }

      break;
    case 15:
      uint64_t v6 = qword_1008F6D80;
      unsigned int v7 = *(unsigned __int8 *)(qword_1008F6D80 + 4);
      break;
    default:
      uint64_t v6 = qword_1008F6D80;
      unsigned int v7 = *(unsigned __int8 *)(qword_1008F6D80 + 5);
      break;
  }

  *(_DWORD *)a1 = v7 + v4;
  unsigned int v11 = (unsigned __int16)word_1008E2620;
  unsigned int v12 = *(unsigned __int8 *)(v6 + 2);
  if ((unsigned __int16)word_1008E2620 > v12)
  {
    sub_1001EE2A0();
    unsigned int v11 = (unsigned __int16)word_1008E2620;
    unsigned int v12 = *(unsigned __int8 *)(qword_1008F6D80 + 2);
  }

  if (v11 == v12) {
    return 603LL;
  }
  __int128 v14 = *(_OWORD *)(a1 + 16);
  uint64_t v15 = (_OWORD *)(qword_1008E2630 + 32LL * v11);
  _OWORD *v15 = *(_OWORD *)a1;
  v15[1] = v14;
  if (a2) {
    *a2 = v11;
  }
  word_1008E2620 = v11 + 1;
  sub_1001339D4();
  return 0LL;
}

void sub_1001339D4()
{
  __int128 v29 = 0LL;
  uint64_t v30 = 0LL;
  uint64_t v28 = 0LL;
  if (dword_1008E2624)
  {
    uint64_t v0 = sub_1001EEB14(dword_1008E2624);
    dword_1008E2624 = 0;
    if ((_DWORD)v0)
    {
      uint64_t v1 = v0;
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"%! (%d)", v2, v3, v4, v5, v6, v7, v8, v1);
        unsigned int v9 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }
  }

  if (word_1008E2620)
  {
    sub_1000B0400((uint64_t)&v28);
    uint64_t v10 = (unsigned __int16)word_1008E2620;
    if (word_1008E2620)
    {
      unsigned int v11 = v28;
      uint64_t v12 = qword_1008E2630;
      uint64_t v13 = 32LL * (unsigned __int16)word_1008E2620 - 32;
      unsigned int v14 = -1;
      do
      {
        unsigned int v15 = *(_DWORD *)(v12 + v13);
        BOOL v16 = v15 >= v11;
        unsigned int v17 = v15 - v11;
        if (v17 != 0 && v16)
        {
          if (v17 < v14) {
            unsigned int v14 = v17;
          }
        }

        else
        {
          uint64_t v30 = v12 + v13;
          LOWORD(v29) = 32;
          ++byte_1008E2628;
          sub_1001EE6DC((uint64_t)sub_100133E20, &v29, 0LL);
          sub_1001337D4(v10 - 1);
          uint64_t v12 = qword_1008E2630;
        }

        --v10;
        v13 -= 32LL;
      }

      while ((unint64_t)(v10 + 1) > 1);
      if (word_1008E2620)
      {
        uint64_t v18 = sub_1001EE6E8((uint64_t)sub_100133EA8, 0LL, (unsigned __int16)(10 * v14) | 1u, &dword_1008E2624);
        if ((_DWORD)v18)
        {
          uint64_t v19 = v18;
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"%! (%d)", v20, v21, v22, v23, v24, v25, v26, v19);
            uint64_t v27 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }
        }
      }
    }
  }

uint64_t sub_100133BA4(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  return sub_100133BB8(14, a1, a2, a3);
}

uint64_t sub_100133BB8(int a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  if (!word_1008E2620) {
    return 0LL;
  }
  uint64_t v7 = 0LL;
  unint64_t v8 = 0LL;
  unsigned int v9 = a3 >> 10;
  while (1)
  {
    uint64_t v10 = qword_1008E2630;
    uint64_t v11 = qword_1008E2630 + v7;
    if ((*(unsigned __int8 *)(qword_1008E2630 + v7 + 8) == a1 || *(unsigned __int8 *)(v11 + 9) == a1)
      && *(unsigned __int16 *)(v11 + 4) == (_DWORD)a3
      && (v9 < 0x3F
       || !off_1008E2638
       || ((uint64_t (*)(uint64_t, uint64_t, void, void))off_1008E2638)( a2,  a3,  *(unsigned __int8 *)(qword_1008E2630 + v7 + 10),  *(unsigned __int8 *)(qword_1008E2630 + v7 + 11))))
    {
      break;
    }

    ++v8;
    v7 += 32LL;
  }

  __int128 v13 = *(_OWORD *)(v10 + v7 + 16);
  *a4 = *(_OWORD *)(v10 + v7);
  a4[1] = v13;
  byte_1008E2628 = 0;
  sub_1001337D4(v8);
  sub_1001339D4();
  return 1LL;
}

uint64_t sub_100133CC4(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  return sub_100133BB8(15, a1, a2, a3);
}

uint64_t sub_100133CDC(int a1, _DWORD *a2)
{
  if (!word_1008E2620) {
    return 0LL;
  }
  uint64_t v3 = 0LL;
  for (uint64_t result = qword_1008E2630;
        *(unsigned __int8 *)(result + 8) != a1 && *(unsigned __int8 *)(result + 9) != a1;
        result += 32LL)
  {
  }

  *a2 = v3;
  return result;
}

uint64_t sub_100133D30(int a1, int *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = v2 + 1;
  for (uint64_t i = qword_1008E2630 + 32 * v2 + 32;
        *(unsigned __int8 *)(i + 8) != a1 && *(unsigned __int8 *)(i + 9) != a1;
        i += 32LL)
  {
  }

  *a2 = v3;
  return i;
}

uint64_t sub_100133D98(int a1)
{
  uint64_t v1 = sub_1001337D4(a1);
  sub_1001339D4();
  return v1;
}

void sub_100133DC0()
{
  for (__int16 i = word_1008E2620; word_1008E2620; __int16 i = word_1008E2620)
  {
    word_1008E2620 = i - 1;
    sub_100131480(129LL, qword_1008E2630 + 32LL * (unsigned __int16)(i - 1));
  }

  byte_1008E2628 = 0;
}

void *sub_100133E14(void *result)
{
  off_1008E2638 = result;
  return result;
}

void sub_100133E20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  sub_100131480(621LL, v1);
  int v2 = *(unsigned __int8 *)(v1 + 8);
  if (v2 == 15)
  {
    if (byte_1008F6E19) {
      return;
    }
LABEL_9:
    byte_1008F6E19 = 1;
    sub_1001EE6DC((uint64_t)sub_10012CEC4, 0LL, 0LL);
    return;
  }

  if (v2 == 14 && byte_1008F6E19 == 0) {
    goto LABEL_9;
  }
}

uint64_t sub_100133EA8()
{
  dword_1008E2624 = 0;
  return sub_1001339D4();
}

void sub_100133EB4(char a1, __int16 a2, __int16 a3, uint64_t a4)
{
  if (byte_1008F6E88)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Failed to add external transport - too many alreay registered.",  v4,  v5,  v6,  v7,  v8,  v9,  v10,  v12);
      uint64_t v11 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }
  }

  else
  {
    word_1008F6E78 = a2;
    word_1008F6E7A = a2;
    word_1008F6E7C = a3;
    byte_1008F6E7E = 1;
    byte_1008F6E7F = a1;
    qword_1008F6E80 = a4;
    byte_1008F6E90 = 1;
    byte_1008F6E88 = 1;
  }

void sub_100133F48()
{
  WORD3(xmmword_1008F6E30) = 1;
  if (BYTE14(xmmword_1008F6E30)) {
    BOOL v0 = WORD5(xmmword_1008F6E30) > 2u;
  }
  else {
    BOOL v0 = 0;
  }
  char v1 = v0;
  byte_1008F6E91 = v1;
}

void sub_100133F78()
{
  WORD3(xmmword_1008F6E30) = 0;
  if (BYTE14(xmmword_1008F6E30)) {
    BOOL v0 = WORD5(xmmword_1008F6E30) == 0;
  }
  else {
    BOOL v0 = 1;
  }
  char v1 = !v0;
  byte_1008F6E91 = v1;
}

BOOL sub_100133FA4()
{
  return !WORD3(xmmword_1008F6E30) || WORD5(xmmword_1008F6E30) > 1u;
}

uint64_t sub_100133FC4(uint64_t result)
{
  BYTE1(xmmword_1008F6E30) = result;
  return result;
}

void sub_100133FD0(uint64_t a1)
{
  if (dword_1008F6D88 == 2)
  {
    if (BYTE14(xmmword_1008F6E30[0])
      && (sub_1001EE2A0(), BYTE14(xmmword_1008F6E30[0]))
      && sub_1000A86F0()
      && (sub_1001EE134((uint64_t)"%! (%d)", v2, v3, v4, v5, v6, v7, v8, 614LL),
          uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu),
          os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)))
    {
      sub_10065BDA8();
      if ((_DWORD)a1) {
        goto LABEL_7;
      }
    }

    else if ((_DWORD)a1)
    {
LABEL_7:
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"ACL transmit error (%!)", v10, v11, v12, v13, v14, v15, v16, a1);
        unsigned int v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_10065A878();
        }
      }
    }

    BYTE14(xmmword_1008F6E30[0]) = 1;
    BOOL v18 = WORD5(xmmword_1008F6E30[0]) != 0;
    if (WORD3(xmmword_1008F6E30[0])) {
      BOOL v18 = WORD5(xmmword_1008F6E30[0]) > 2u;
    }
    byte_1008F6E91 = v18;
    if (v18) {
      (*(void (**)(void, uint64_t))(qword_1008F6D90 + 16))(0LL, 1LL);
    }
    return;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"HCI not initialized, ignoring AclPacketSent event", v19, v20, v21, v22, v23, v24, v25, v27);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10065BE10();
    }
  }

void sub_100134154(uint64_t a1)
{
  if (dword_1008F6D88 == 2)
  {
    if (byte_1008F6E4E
      && (sub_1001EE2A0(), byte_1008F6E4E)
      && sub_1000A86F0()
      && (sub_1001EE134((uint64_t)"%! (%d)", v2, v3, v4, v5, v6, v7, v8, 614LL),
          uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu),
          os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)))
    {
      sub_10065BDA8();
      if ((_DWORD)a1)
      {
LABEL_7:
        if (sub_1000A86F0())
        {
          sub_1001EE134((uint64_t)"SCO transmit error (%!)", v10, v11, v12, v13, v14, v15, v16, a1);
          unsigned int v17 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            sub_10065A878();
          }
        }
      }
    }

    else if ((_DWORD)a1)
    {
      goto LABEL_7;
    }

    byte_1008F6E4E = 1;
    sub_10011B220();
    return;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"HCI not initialized, ignoring ScoPacketSent event", v18, v19, v20, v21, v22, v23, v24, v26);
    uint64_t v25 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      sub_10065BE10();
    }
  }

void sub_100134294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (DWORD2(xmmword_1008F6FB8)) {
    BOOL v5 = dword_1008F6D88 == 2;
  }
  else {
    BOOL v5 = 0;
  }
  if (!v5)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_HCIIfc_AclPacketReceived, HCI not initialized - discarding data",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v58);
      uint64_t v13 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
LABEL_7:
        sub_10065BE78();
        return;
      }
    }

    return;
  }

  if (!(_DWORD)a2) {
    return;
  }
  int v16 = a4;
  unsigned int v18 = a1;
  if (off_1008F6DE8)
  {
    off_1008F6DE8(a4, a1, a2, a3, a5);
    return;
  }

  uint64_t v19 = a1 & 0xFFF;
  if ((a1 & 0x3000) == 0x2000)
  {
    uint64_t v20 = 2LL;
  }

  else if ((a1 & 0x3000) == 0x1000)
  {
    uint64_t v20 = 1LL;
  }

  else if ((a1 & 0x3000) != 0)
  {
    uint64_t v20 = 3LL;
  }

  else if ((byte_1008F6D2A & 0x40) != 0)
  {
    uint64_t v20 = 0LL;
  }

  else
  {
    uint64_t v20 = 3LL;
  }

  uint64_t v21 = sub_10012D6D8(a1 & 0xFFF);
  if (sub_10018BE60() <= 0x12 && !v21)
  {
    sub_1001EE2A0();
LABEL_33:
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"connection handle %p is invalid, ignoring ACL packet.",  v32,  v33,  v34,  v35,  v36,  v37,  v38,  0LL);
      uint64_t v39 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  if (!v21) {
    goto LABEL_33;
  }
  uint64_t v22 = (v18 >> 12) & 4;
  int v23 = *((unsigned __int8 *)v21 + 2);
  if (v23 == 1)
  {
    sub_1001EE2A0();
    int v23 = *((unsigned __int8 *)v21 + 2);
  }

  if (v23 != 8)
  {
    if (v23 == 4)
    {
      ++HIWORD(dword_1008E2646);
      LOWORD(dword_1008E2646) = v19;
      if (*((_BYTE *)v21 + 124) == 6 && (v16 != 6 || *a5 >= *((void *)v21 + 34)))
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Received ACL data for disconnecting handle %d, discarding packet",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  v19);
          uint64_t v57 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
            sub_10065BE78();
          }
        }
      }

      else
      {
        (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, BOOL, void *))(qword_1008F6D90 + 8))( v21,  v20,  v22,  a3,  a2,  v16 == 6,  a5);
      }

      if (!*(_BYTE *)(qword_1008F6D80 + 9)) {
        return;
      }
      uint64_t v56 = &dword_1008E2646;
    }

    else
    {
      if (v23)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Received ACL data for unknown handle %d, discarding packet",  v48,  v49,  v50,  v51,  v52,  v53,  v54,  v19);
          uint64_t v55 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
            sub_10065BEE0();
          }
        }

        return;
      }

      ++HIWORD(dword_1008E2640);
      LOWORD(dword_1008E2640) = v19;
      if (*((_BYTE *)v21 + 54) == 6)
      {
        if (sub_1000A86F0())
        {
          sub_1001EE134( (uint64_t)"Received ACL data for disconnecting handle %d, discarding packet",  v24,  v25,  v26,  v27,  v28,  v29,  v30,  v19);
          uint64_t v31 = (os_log_s *)sub_100086554(0x2Eu);
          if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
            sub_10065BE78();
          }
        }
      }

      else
      {
        (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, void, void *))(qword_1008F6D90 + 8))( v21,  v20,  v22,  a3,  a2,  0LL,  a5);
      }

      if (!*(_BYTE *)(qword_1008F6D80 + 7)) {
        return;
      }
      uint64_t v56 = &dword_1008E2640;
    }

    sub_1001346DC((unsigned __int16 *)v56, v24, v25, v26, v27, v28, v29, v30);
    return;
  }

  if (*((_BYTE *)v21 + 60) == 6)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received Other data for disconnecting handle %d, discarding packet",  v40,  v41,  v42,  v43,  v44,  v45,  v46,  v19);
      uint64_t v47 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
        goto LABEL_7;
      }
    }
  }

  else
  {
    (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, void, void *))(qword_1008F6D90 + 8))( v21,  v20,  v22,  a3,  a2,  0LL,  a5);
  }

void sub_1001346DC( unsigned __int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!*((_BYTE *)a1 + 4) && a1[1])
  {
    uint64_t v9 = sub_1001214B4(95, 0LL, a3, a4, a5, a6, a7, a8, *a1);
    if ((_DWORD)v9)
    {
      uint64_t v10 = v9;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_HCICMD_HostNumberOfCompletedPackets failed: %!",  v11,  v12,  v13,  v14,  v15,  v16,  v17,  v10);
        unsigned int v18 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_10065BF50();
        }
      }
    }

    else
    {
      a1[1] = 0;
    }
  }

uint64_t sub_100134778(uint64_t a1)
{
  uint64_t v2 = a1 & 0xFFF;
  uint64_t v3 = sub_10012D6D8(a1 & 0xFFF);
  if (v3)
  {
    uint64_t result = *((unsigned __int8 *)v3 + 2);
    if (!(_DWORD)result) {
      return result;
    }
    if ((_DWORD)result == 4)
    {
      if ((~(_DWORD)a1 & 0x3000) != 0) {
        return 1LL;
      }
      else {
        return 2LL;
      }
    }

    sub_1001EE134( (uint64_t)"lmHandle 0x%04X found as connectionHandle 0x%08X of non ACL/LE kind????\n",  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v2);
    uint64_t v13 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      return 4LL;
    }
LABEL_18:
    sub_10065BE78();
    return 4LL;
  }

  if (!off_1008F6DF0)
  {
    sub_1001EE134( (uint64_t)"No stack handle found for lmHandle 0x%04X, falling back to KIND_UNKNOWN\n",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  v2);
    uint64_t v21 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      return 4LL;
    }
    goto LABEL_18;
  }

  uint64_t result = off_1008F6DF0(a1);
  if ((~(_DWORD)a1 & 0x3000) != 0) {
    uint64_t v5 = 1LL;
  }
  else {
    uint64_t v5 = 2LL;
  }
  if ((_DWORD)result == 1) {
    return v5;
  }
  return result;
}

void sub_1001348A0(unsigned __int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((_DWORD)a2)
  {
    if (a2 > 3)
    {
      if (!a1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c",  728,  "buf");
      }
      uint64_t v16 = *a1;
      uint64_t v17 = a1[1];
      if (*(_BYTE *)(a4 + 8))
      {
        int v34 = 0;
        __int128 v32 = 0u;
        __int128 v33 = 0u;
        __int128 v30 = 0u;
        __int128 v31 = 0u;
        uint64_t v18 = "HCI_ACL";
        if ((_DWORD)a3 == 6) {
          uint64_t v18 = "HCI_ACL_TS";
        }
        *(_OWORD *)__str = 0uLL;
        __int128 v29 = 0uLL;
        snprintf(__str, 0x64uLL, "BT Controller %s wakeupCause (handle=0x%04X dataLen=%d)", v18, v16, v17);
        sub_1001EE0E4("OI_HCIFlow_AclPacketReceived: %s", __str);
        sub_1000BA160(__str);
      }

      uint64_t v19 = (a2 - 4);
      if ((_DWORD)v19 == (_DWORD)v17)
      {
        sub_100134294(v16, v17, (uint64_t)(a1 + 2), a3, (void *)a4);
        qword_1008E2658 = sub_1000B05D8();
        if (!dword_1008E2660)
        {
          sub_1000B12F4();
          sub_1001EE6E8((uint64_t)sub_1001374B4, 0LL, 2, &dword_1008E2660);
        }

        sub_1001EEF6C();
      }

      else if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"Potentially malicious packet received (actually %d bytes, but claims it is %d bytes), ignoring packet",  v20,  v21,  v22,  v23,  v24,  v25,  v26,  v19);
        uint64_t v27 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Short ACL packet received (%d bytes), ignoring packet", v5, v6, v7, v8, v9, v10, v11, a2);
      uint64_t v12 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_10065BFC0();
      }
    }
  }

void sub_100134A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (DWORD2(xmmword_1008F6FB8)) {
    BOOL v4 = dword_1008F6D88 == 2;
  }
  else {
    BOOL v4 = 0;
  }
  if (!v4)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_HCIIfc_ScoPacketReceived, HCI not initialized - discarding data, status %!",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  408LL);
      uint64_t v12 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    return;
  }

  unsigned int v16 = a1;
  if (off_1008F6DE8)
  {
    off_1008F6DE8(3LL, a1, a2, a3, a4);
    return;
  }

  if (*(_BYTE *)(qword_1008F6D80 + 8))
  {
    ++HIWORD(dword_1008E264C);
    LOWORD(dword_1008E264C) = a1 & 0xFFF;
  }

  uint64_t v17 = sub_10012D6D8(a1 & 0xFFF);
  if (v17 && ((uint64_t v18 = (uint64_t)v17, *((_BYTE *)v17 + 2) == 1) || (sub_1001EE2A0(), *(_BYTE *)(v18 + 2) == 1)))
  {
    if (!*(_BYTE *)(v18 + 56))
    {
      uint64_t v28 = *(void *)(v18 + 48);
      if (v28)
      {
        if (*(_BYTE *)(v28 + 54) != 6)
        {
          sub_10011B4BC(v18, a3, a2, (v16 >> 12) & 3, a4);
          goto LABEL_22;
        }
      }
    }

    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Received SCO data for disconnecting handle %d, discarding packet. Status %!",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v16 & 0xFFF);
      uint64_t v26 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
LABEL_21:
      }
        sub_100657F74();
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Received SCO data for unknown handle %d, discarding packet. Status %!",  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v16 & 0xFFF);
    uint64_t v27 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      goto LABEL_21;
    }
  }

void sub_100134CCC(unsigned __int16 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 > 2)
  {
    if (!a1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c",  847,  "buf");
    }
    uint64_t v14 = *a1;
    int v15 = byte_1008E2652;
    if ((byte_1008E2652 & 1) != 0)
    {
      if (a2 <= 3) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c",  857,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      unsigned __int16 v16 = a1[1];
      uint64_t v17 = 4LL;
    }

    else
    {
      unsigned __int16 v16 = *((unsigned __int8 *)a1 + 2);
      uint64_t v17 = 3LL;
    }

    if (*(_BYTE *)(a3 + 8))
    {
      int v35 = 0;
      __int128 v33 = 0u;
      __int128 v34 = 0u;
      __int128 v31 = 0u;
      __int128 v32 = 0u;
      int v18 = v16;
      *(_OWORD *)__str = 0u;
      __int128 v30 = 0u;
      snprintf(__str, 0x64uLL, "BT Controller HCI_SCO wakeupCause (handle=0x%04X dataLen=%d)", v14, v16);
      sub_1001EE0E4("OI_HCIFlow_ScoPacketReceived: %s", __str);
      sub_1000BA160(__str);
      int v15 = byte_1008E2652;
    }

    else
    {
      int v18 = v16;
    }

    if (v15) {
      int v19 = -4;
    }
    else {
      int v19 = -3;
    }
    uint64_t v20 = (v19 + a2);
    if ((_DWORD)v20 == v18)
    {
      sub_100134A9C(v14, v16, (uint64_t)a1 + v17, a3);
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"Potentially malicious packet received (actually %d bytes, but claims it is %d bytes), ignoring packet",  v21,  v22,  v23,  v24,  v25,  v26,  v27,  v20);
      uint64_t v28 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"Short SCO packet received (%d bytes), ignoring packet. Status %!",  v4,  v5,  v6,  v7,  v8,  v9,  v10,  a2);
    uint64_t v11 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

uint64_t sub_100134ECC(uint64_t a1)
{
  if (sub_10012D514(a1))
  {
    if (*(_BYTE *)(a1 + 26)) {
      return 1288;
    }
    else {
      return 679;
    }
  }

  else
  {
    BOOL v3 = sub_10012D5EC(a1);
    unsigned __int16 v2 = word_1008F6E5C;
    if (!v3) {
      return 0;
    }
  }

  return v2;
}

uint64_t sub_100134F24(unsigned __int16 *a1, unsigned int a2, int a3, uint64_t a4)
{
  if (sub_10012D514((uint64_t)a1))
  {
    if (DWORD2(xmmword_1008F6FB8)) {
      BOOL v8 = dword_1008F6D88 == 2;
    }
    else {
      BOOL v8 = 0;
    }
    if (!v8) {
      return 103LL;
    }
    if (!BYTE14(xmmword_1008F6E30[0]))
    {
LABEL_10:
      sub_1001EE134((uint64_t)"writeAclData, transmit is not ready", v9, v10, v11, v12, v13, v14, v15, v138);
      unsigned __int16 v16 = (os_log_s *)sub_100086554(0x2Eu);
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        return 613LL;
      }
      goto LABEL_12;
    }

    if (WORD3(xmmword_1008F6E30[0]))
    {
      if (WORD5(xmmword_1008F6E30[0]) <= 2u) {
        goto LABEL_10;
      }
    }

    else if (!WORD5(xmmword_1008F6E30[0]))
    {
      goto LABEL_10;
    }

    else {
      unsigned int v32 = *(unsigned __int16 *)(a4 + 4);
    }
    if (a3 != 2)
    {
      if (a3 != 1)
      {
        if (a3) {
          return 101LL;
        }
        if (*((_BYTE *)a1 + 2) || (int v96 = *a1, v96 == 0xFFFF))
        {
          sub_1001EE134( (uint64_t)"writeAclData, %d is not an ACL connection handle",  v33,  v34,  v35,  v36,  v37,  v38,  v39,  *a1);
          uint64_t v40 = (os_log_s *)sub_100086554(0x2Eu);
          if (!os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
            return 601LL;
          }
          goto LABEL_143;
        }

        if (*((_BYTE *)a1 + 152) == 2) {
          ++WORD2(xmmword_1008F6E30[0]);
        }
        __int16 v97 = v96 & 0xFFF;
LABEL_118:
        if (a2)
        {
          if (a2 != 1)
          {
            if (a2 == 2)
            {
              v97 |= 0x2000u;
              goto LABEL_126;
            }

            return 101LL;
          }

          v97 |= 0x1000u;
        }

        else if ((byte_1008F6D2A & 0x40) == 0)
        {
          sub_1001EE2A0();
        }

LABEL_126:
        int v100 = *((unsigned __int8 *)a1 + 54);
        if (v100 == 6)
        {
          if (sub_1000A86F0())
          {
            sub_1001EE134( (uint64_t)"writeAclData, handle %d is disconnecting.  Sending anyway",  v109,  v110,  v111,  v112,  v113,  v114,  v115,  *a1);
            uint64_t v116 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v116, OS_LOG_TYPE_ERROR)) {
              sub_10065C0F8();
            }
          }
        }

        else if (v100 == 7)
        {
          sub_1001EE134( (uint64_t)"writeAclData, handle %d is disconnected.  discarding",  v101,  v102,  v103,  v104,  v105,  v106,  v107,  *a1);
          uint64_t v108 = (os_log_s *)sub_100086554(0x2Eu);
          if (!os_log_type_enabled(v108, OS_LOG_TYPE_ERROR)) {
            return 601LL;
          }
          goto LABEL_143;
        }

        if (off_1008F6DE8)
        {
          uint64_t result = 629LL;
          goto LABEL_171;
        }

        uint64_t result = sub_10011EE68(2, v97, a4, v32);
        if ((_DWORD)result != 625)
        {
          if ((_DWORD)result) {
            goto LABEL_171;
          }
          BYTE14(xmmword_1008F6E30[0]) = 0;
        }

        --WORD5(xmmword_1008F6E30[0]);
        ++a1[8];
        ++WORD1(xmmword_1008F6E30[0]);
        (*(void (**)(unsigned __int16 *))qword_1008F6D90)(a1);
        uint64_t result = 0LL;
LABEL_171:
        char v136 = BYTE14(xmmword_1008F6E30[0]);
        if (BYTE14(xmmword_1008F6E30[0]))
        {
          if (WORD3(xmmword_1008F6E30[0])) {
            char v136 = WORD5(xmmword_1008F6E30[0]) > 2u;
          }
          else {
            char v136 = WORD5(xmmword_1008F6E30[0]) != 0;
          }
        }

                *(_BYTE *)(a1 + 208) = 1;
                goto LABEL_136;
              case 0xDu:
                memset(&__p, 0, sizeof(__p));
                uint64_t v30 = sub_1002E6B38();
                if (!(*(unsigned int (**)(uint64_t, std::string *))(*(void *)v30 + 64LL))(v30, &__p))
                {
                  __int128 v31 = __p.__r_.__value_.__s.__size_;
                  if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                    __int128 v31 = __p.__r_.__value_.__l.__size_;
                  }
                  if (v31
                    && (sub_10029C238((uint64_t *)&__p, "Figaro", 0LL) != -1LL
                     || sub_10029C238((uint64_t *)&__p, "Rudder", 0LL) != -1LL))
                  {
                    unsigned int v32 = (os_log_s *)qword_1008F7578;
                    if (os_log_type_enabled((os_log_t)qword_1008F7578, OS_LOG_TYPE_DEFAULT))
                    {
                      *(_WORD *)int buf = 0;
                      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "BCM_4355C1 that supports Wireless Splitter",  buf,  2u);
                    }

                    *(_BYTE *)(a1 + 271) = 1;
                  }
                }

LABEL_175:
        byte_1008F6E91 = v136;
        return result;
      }

      if (&xmmword_1008E22D8 != (__int128 *)a1)
      {
        sub_1001EE134( (uint64_t)"writeAclData not the active broadcast connection handle",  v51,  v52,  v53,  v54,  v55,  v56,  v57,  v138);
        uint64_t v58 = (os_log_s *)sub_100086554(0x2Eu);
        if (!os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)) {
          return 601LL;
        }
        goto LABEL_143;
      }

      unsigned __int16 v98 = *a1;
      __int16 v99 = 0x4000;
LABEL_117:
      __int16 v97 = v99 & 0xF000 | v98 & 0xFFF;
      goto LABEL_118;
    }

    if (&xmmword_1008E2428 == (__int128 *)a1)
    {
      unsigned __int16 v98 = *a1;
      __int16 v99 = 0x8000;
      goto LABEL_117;
    }

    sub_1001EE134( (uint64_t)"writeAclData not the piconet broadcast connection handle",  v43,  v44,  v45,  v46,  v47,  v48,  v49,  v138);
    uint64_t v50 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
      return 601LL;
    }
LABEL_143:
    sub_10065C090();
    return 601LL;
  }

  if (!sub_10012D5EC((uint64_t)a1))
  {
    if (sub_10012D61C((uint64_t)a1))
    {
      uint64_t v19 = byte_1008F6E88;
      if (byte_1008F6E88)
      {
        for (__int16 i = &qword_1008F6E80; *((_DWORD *)a1 + 14) != *((unsigned __int8 *)i - 1); i += 2)
        {
          if (!--v19) {
            return 105LL;
          }
        }

        else {
          uint64_t v41 = *(unsigned __int16 *)(a4 + 4);
        }
        if (a2 >= 2) {
          sub_1001EE2A0();
        }
        uint64_t result = ((uint64_t (*)(void, BOOL, uint64_t, uint64_t))*i)(*a1, a2 == 0, a4, v41);
        if ((_DWORD)result != 625)
        {
          if ((_DWORD)result)
          {
LABEL_64:
            byte_1008F6E90 = *((_BYTE *)i - 2);
            return result;
          }

          *((_BYTE *)i - 2) = 0;
        }

        --*((_WORD *)i - 3);
        ++WORD1(xmmword_1008F6E30[0]);
        ++a1[8];
        (*(void (**)(unsigned __int16 *))qword_1008F6D90)(a1);
        uint64_t result = 0LL;
        goto LABEL_64;
      }
    }

    else if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"Can't write to unknown handle type.", v24, v25, v26, v27, v28, v29, v30, v138);
      __int128 v31 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return 105LL;
  }

  if (DWORD2(xmmword_1008F6FB8)) {
    BOOL v18 = dword_1008F6D88 == 2;
  }
  else {
    BOOL v18 = 0;
  }
  if (!v18) {
    return 103LL;
  }
  int v21 = LOBYTE(xmmword_1008F6E30[0]);
  if (WORD4(xmmword_1008F6E30[0])) {
    BOOL v22 = LOBYTE(xmmword_1008F6E30[0]) == 0;
  }
  else {
    BOOL v22 = 1;
  }
  if (v22 && word_1008F6E58 == 0)
  {
    sub_1001EE2A0();
    int v21 = LOBYTE(xmmword_1008F6E30[0]);
  }

  if (v21)
  {
    if (BYTE14(xmmword_1008F6E30[0]))
    {
      if (WORD3(xmmword_1008F6E30[0]))
      {
        if (WORD5(xmmword_1008F6E30[0]) > 2u) {
          goto LABEL_79;
        }
      }

      else if (WORD5(xmmword_1008F6E30[0]))
      {
        goto LABEL_79;
      }
    }
  }

  else if (byte_1008F6E5E && word_1008F6E5A)
  {
    unsigned int v42 = *(unsigned __int16 *)(a4 + 4);
    if (a2 == 3) {
      goto LABEL_88;
    }
    goto LABEL_85;
  }

  if (!*((_BYTE *)a1 + 129))
  {
    sub_1001EE134((uint64_t)"writeLeData, transmit is not ready", v60, v61, v62, v63, v64, v65, v66, v138);
    uint64_t v67 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)) {
      return 613LL;
    }
LABEL_12:
    sub_10065C028();
    return 613LL;
  }

        *(_BYTE *)(v261 + 27) = BYTE5(v262);
        if ((v214 & 0x10) == 0)
        {
LABEL_149:
          if ((v214 & 0x20) == 0) {
            goto LABEL_150;
          }
          goto LABEL_177;
        }

uint64_t sub_1001358D0(_WORD *a1, uint64_t a2, unsigned int a3)
{
  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"LE connection handle is no longer valid. Dropping LEA data.",  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v15);
    uint64_t v14 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  return 601LL;
}

uint64_t sub_10013596C(unsigned __int16 *a1, char *a2, size_t a3, char a4)
{
  if (!sub_10012D5BC((uint64_t)a1))
  {
    sub_1001EE134( (uint64_t)"SCO connection handle is no longer valid. Dropping SCO data.",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v63);
    uint64_t v17 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      return 601LL;
    }
    goto LABEL_9;
  }

  if (DWORD2(xmmword_1008F6FB8)) {
    BOOL v8 = dword_1008F6D88 == 2;
  }
  else {
    BOOL v8 = 0;
  }
  if (!v8) {
    return 103LL;
  }
  if (!byte_1008F6E4E) {
    return 613LL;
  }
  if (!a1 || *((_BYTE *)a1 + 2) != 1)
  {
    uint64_t v9 = 601LL;
    sub_1001EE134( (uint64_t)"0x%x is not SCO connection handle, retval %!",  v27,  v28,  v29,  v30,  v31,  v32,  v33,  (uint64_t)a1);
    uint64_t v34 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      return v9;
    }
    goto LABEL_9;
  }

  if (*((_BYTE *)a1 + 56))
  {
    uint64_t v9 = 601LL;
    sub_1001EE134((uint64_t)"SCO connection %d is disconnected, retval %!", v19, v20, v21, v22, v23, v24, v25, *a1);
    uint64_t v26 = (os_log_s *)sub_100086554(0x2Eu);
    if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      return v9;
    }
LABEL_9:
    sub_100657F74();
    return 601LL;
  }

  if (!off_1008F6DE8)
  {
    memset(v64, 0, sizeof(v64));
    sub_1001EF520((uint64_t)v64, 1u);
    sub_1001EFB10((unsigned __int8 *)v64, a2, a3, 2u);
    if (byte_1008E2652 == 1)
    {
      __int16 v43 = *a1;
      char v44 = -13;
LABEL_39:
      uint64_t v9 = sub_10011EE68(v44, v43, (uint64_t)v64, a3);
      goto LABEL_40;
    }

    if (a3 < 0x100)
    {
      __int16 v43 = *a1;
      char v44 = 3;
      goto LABEL_39;
    }

    uint64_t v45 = sub_10011EE68(3, *a1 | 0x4000u, (uint64_t)v64, a3 >> 1);
    if ((_DWORD)v45 == 625)
    {
      uint64_t v46 = sub_10011EE68(3, *a1, (uint64_t)v64, a3 >> 1);
      if ((_DWORD)v46 == 625) {
        goto LABEL_43;
      }
      uint64_t v9 = v46;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_HCI_Send failed to write second SCO data chunk",  v47,  v48,  v49,  v50,  v51,  v52,  v53,  v63);
        uint64_t v54 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
          goto LABEL_37;
        }
      }
    }

    else
    {
      uint64_t v9 = v45;
      if (sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_HCI_Send failed to write first SCO data chunk",  v55,  v56,  v57,  v58,  v59,  v60,  v61,  v63);
        uint64_t v62 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR)) {
LABEL_37:
        }
          sub_10065A878();
      }
    }

uint64_t sub_100135CD8(int a1, uint64_t a2, void *a3)
{
  if (!a1) {
    a2 = 0LL;
  }
  if (!a1) {
    a3 = 0LL;
  }
  qword_1008F6E20 = a2;
  off_1008F6E28 = a3;
  return 0LL;
}

uint64_t sub_100135CFC(_WORD *a1)
{
  if (DWORD2(xmmword_1008F6FB8)) {
    BOOL v1 = dword_1008F6D88 == 2;
  }
  else {
    BOOL v1 = 0;
  }
  if (!v1) {
    return 103LL;
  }
  uint64_t result = 0LL;
  *a1 = word_1008F6E4C;
  return result;
}

uint64_t sub_100135D40(__int16 a1, __int16 a2)
{
  if (DWORD2(xmmword_1008F6FB8)) {
    BOOL v2 = dword_1008F6D88 == 2;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2) {
    return 103LL;
  }
  uint64_t result = 0LL;
  word_1008F6E4C = a1;
  word_1008F6E48 = a2;
  return result;
}

uint64_t sub_100135D88()
{
  if (DWORD2(xmmword_1008F6FB8)) {
    BOOL v0 = dword_1008F6D88 == 2;
  }
  else {
    BOOL v0 = 0;
  }
  if (!v0) {
    return 103LL;
  }
  uint64_t result = 0LL;
  byte_1008E2652 = 1;
  return result;
}

uint64_t sub_100135DC8(_WORD *a1)
{
  if (DWORD2(xmmword_1008F6FB8)) {
    BOOL v1 = dword_1008F6D88 == 2;
  }
  else {
    BOOL v1 = 0;
  }
  if (!v1) {
    return 103LL;
  }
  uint64_t result = 0LL;
  *a1 = WORD6(xmmword_1008F6E30);
  return result;
}

uint64_t sub_100135E0C()
{
  return WORD6(xmmword_1008F6E30);
}

uint64_t sub_100135E18()
{
  if (DWORD2(xmmword_1008F6FB8)) {
    BOOL v0 = dword_1008F6D88 == 2;
  }
  else {
    BOOL v0 = 0;
  }
  if (v0) {
    return WORD4(xmmword_1008F6E30[0]);
  }
  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result)
  {
    sub_1001EE134((uint64_t)"OI_HCIAPI_GetTotalNumAclBuffers - not initialized", v2, v3, v4, v5, v6, v7, v8, v10);
    uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
    uint64_t result = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_10065BE10();
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100135EA0()
{
  if (DWORD2(xmmword_1008F6FB8)) {
    BOOL v0 = dword_1008F6D88 == 2;
  }
  else {
    BOOL v0 = 0;
  }
  if (v0) {
    return (unsigned __int16)word_1008F6E58;
  }
  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result)
  {
    sub_1001EE134((uint64_t)"OI_HCIAPI_GetTotalNumAclBuffers - not initialized", v2, v3, v4, v5, v6, v7, v8, v10);
    uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
    uint64_t result = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_10065BE10();
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100135F28()
{
  if (DWORD2(xmmword_1008F6FB8)) {
    BOOL v0 = dword_1008F6D88 == 2;
  }
  else {
    BOOL v0 = 0;
  }
  if (v0) {
    return (unsigned __int16)word_1008F6E48;
  }
  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result)
  {
    sub_1001EE134((uint64_t)"OI_HCIAPI_GetTotalNumScoBuffers - not initialized", v2, v3, v4, v5, v6, v7, v8, v10);
    uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
    uint64_t result = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_10065BE10();
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100135FB0(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 16);
}

uint64_t sub_100135FB8()
{
  if (DWORD2(xmmword_1008F6FB8)) {
    BOOL v0 = dword_1008F6D88 == 2;
  }
  else {
    BOOL v0 = 0;
  }
  if (v0) {
    return byte_1008F6E4E != 0;
  }
  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result)
  {
    sub_1001EE134((uint64_t)"OI_HCIAPI_ReadyToTransmitSco - not initialized", v2, v3, v4, v5, v6, v7, v8, v10);
    uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
    uint64_t result = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_10065BE10();
      return 0LL;
    }
  }

  return result;
}

void sub_100136048(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (*(_BYTE *)(a3 + 8))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_HCIFlow_HandleNumCompletedPackets: wakeupCause HCI_EVENT Packet from BT Controller (len=%d)\n",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  a2);
      uint64_t v12 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v58 = sub_1001EDDCC();
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }

  if (dword_1008F6D88 != 2)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"HCI not initialized, ignoring AclPacketSent event",  v22,  v23,  v24,  v25,  v26,  v27,  v28,  v56);
      uint64_t v29 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_10065BE10();
      }
    }

    return;
  }

  if (!a1)
  {
    uint64_t v55 = "eventBuf";
    goto LABEL_66;
  }

  if (a2 == 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c",  1994,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  if (!a2)
  {
    uint64_t v55 = "(numBytes) > 0";
LABEL_66:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c", 1991, v55);
  }

  if (a2 <= 2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c",  1995,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  signed int v13 = *(unsigned __int8 *)(a1 + 1);
  if ((int)(a2 - 2) > v13)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"NumCompletedPackets short packet expected %d, got %d",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  (v13 + 2));
      uint64_t v21 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_10065BFC0();
      }
    }

    return;
  }

  int v30 = *(unsigned __int8 *)(a1 + 2);
  if (v13 == ((4 * v30) | 1))
  {
    if (!*(_BYTE *)(a1 + 2)) {
      return;
    }
    uint64_t v31 = 0LL;
    uint64_t v32 = (int)(a2 - 1);
    while (1)
    {
      if (v31 + 3 >= v32) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c",  2014,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      if (v31 + 5 >= v32) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciflow.c",  2015,  "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      unsigned __int16 v33 = *(_WORD *)(a1 + v31 + 5);
      uint64_t v34 = sub_10012D6D8(*(unsigned __int16 *)(a1 + v31 + 3));
      if (!v34) {
        goto LABEL_51;
      }
      uint64_t v35 = v34;
      switch(*((_BYTE *)v34 + 2))
      {
        case 0:
          sub_100136534((uint64_t)v34, v33);
          if (!BYTE14(xmmword_1008F6E30[0])) {
            goto LABEL_51;
          }
          if (WORD3(xmmword_1008F6E30[0]))
          {
            if (WORD5(xmmword_1008F6E30[0]) <= 2u) {
              goto LABEL_51;
            }
LABEL_50:
            (*(void (**)(void, uint64_t))(qword_1008F6D90 + 16))(0LL, 1LL);
            goto LABEL_51;
          }

          if (WORD5(xmmword_1008F6E30[0])) {
            goto LABEL_50;
          }
          goto LABEL_51;
        case 1:
          sub_10011B2C0((uint64_t)v34, v33);
          goto LABEL_51;
        case 4:
          if (*((_BYTE *)v34 + 129)) {
            goto LABEL_41;
          }
          sub_100136534((uint64_t)v34, v33);
          if (LOBYTE(xmmword_1008F6E30[0]))
          {
            if (!BYTE14(xmmword_1008F6E30[0])) {
              goto LABEL_51;
            }
            int v46 = WORD5(xmmword_1008F6E30[0]);
            if (WORD3(xmmword_1008F6E30[0]))
            {
              if (WORD5(xmmword_1008F6E30[0]) <= 2u) {
                goto LABEL_51;
              }
              goto LABEL_41;
            }
          }

          else
          {
            if (!byte_1008F6E5E) {
              goto LABEL_51;
            }
            int v46 = (unsigned __int16)word_1008F6E5A;
          }

          if (!v46) {
            goto LABEL_51;
          }
LABEL_41:
          (*(void (**)(void, uint64_t))(qword_1008F6D90 + 16))(0LL, 3LL);
LABEL_51:
          --v30;
          v31 += 4LL;
          if (!(_BYTE)v30) {
            return;
          }
          break;
        case 5:
        case 6:
          sub_100136534((uint64_t)v34, v33);
          goto LABEL_51;
        case 8:
          sub_100136534((uint64_t)v34, v33);
          if (byte_1008F6E7E) {
            (*(void (**)(void, uint64_t))(qword_1008F6D90 + 16))(0LL, 5LL);
          }
          goto LABEL_51;
        default:
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"Unknown connection type.", v37, v38, v39, v40, v41, v42, v43, v56);
            char v44 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
            {
              uint64_t v45 = sub_1001EDDCC();
              *(_DWORD *)int buf = 136446466;
              uint64_t v58 = v45;
              __int16 v59 = 1024;
              int v60 = 0xFFFF;
              _os_log_error_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_ERROR,  "%{public}s (status=%{bluetooth:OI_STATUS}u)",  buf,  0x12u);
            }
          }

          goto LABEL_51;
      }
    }
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"NumCompletedPackets bad parm length: expected %d, got %d",  v47,  v48,  v49,  v50,  v51,  v52,  v53,  (4 * v30) | 1u);
    uint64_t v54 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
      sub_10065BFC0();
    }
  }

void sub_100136534(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  unsigned int v4 = *(unsigned __int16 *)(a1 + 16);
  if (v4 < a2)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"hciflow inconsistency - %d packets completed for handle %d, but only %d were outstanding",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  v2);
      uint64_t v12 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_10065BE78();
      }
    }

    uint64_t v2 = *(unsigned __int16 *)(a1 + 16);
    LOWORD(v4) = *(_WORD *)(a1 + 16);
  }

  *(_WORD *)(a1 + 16) = v4 - v2;
  __int16 v13 = WORD1(xmmword_1008F6E30[0]);
  if (v2 > WORD1(xmmword_1008F6E30[0]))
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"hciflow inconsistency - %d packets completed, only %d were outstannding",  v14,  v15,  v16,  v17,  v18,  v19,  v20,  v2);
      uint64_t v21 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_10065BE78();
      }
    }

    __int16 v13 = WORD1(xmmword_1008F6E30[0]);
    LODWORD(v2) = WORD1(xmmword_1008F6E30[0]);
  }

  __int16 v22 = v13 - v2;
  WORD1(xmmword_1008F6E30[0]) = v22;
  if (!*(_BYTE *)(a1 + 2) && *(_BYTE *)(a1 + 152) == 2)
  {
    if (WORD2(xmmword_1008F6E30[0]) >= v2)
    {
      WORD2(xmmword_1008F6E30[0]) -= v2;
    }

    else
    {
      sub_1001EE2A0();
      WORD2(xmmword_1008F6E30[0]) = 0;
      __int16 v22 = WORD1(xmmword_1008F6E30[0]);
    }
  }

  if (!v22) {
    WORD2(xmmword_1008F6E30[0]) = 0;
  }
  switch(*(_BYTE *)(a1 + 2))
  {
    case 0:
      goto LABEL_24;
    case 4:
      if (LOBYTE(xmmword_1008F6E30[0]))
      {
LABEL_24:
        unsigned __int16 v31 = WORD5(xmmword_1008F6E30[0]) + v2;
        WORD5(xmmword_1008F6E30[0]) += v2;
        if (BYTE14(xmmword_1008F6E30[0]))
        {
          BOOL v32 = v31 != 0;
          BOOL v33 = v31 > 2u;
          if (!WORD3(xmmword_1008F6E30[0])) {
            BOOL v33 = v32;
          }
        }

        else
        {
          BOOL v33 = 0;
        }

        byte_1008F6E91 = v33;
      }

      else
      {
        word_1008F6E5A += v2;
        if (word_1008F6E5A) {
          BOOL v38 = byte_1008F6E5E == 0;
        }
        else {
          BOOL v38 = 1;
        }
        char v39 = !v38;
        byte_1008F6E92 = v39;
      }

      break;
    case 5:
    case 6:
      word_1008F6E6A += v2;
      break;
    case 8:
      word_1008F6E7A += v2;
      byte_1008F6E90 = byte_1008F6E7E;
      break;
    default:
      if (sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"Unexpected connection type", v23, v24, v25, v26, v27, v28, v29, v40);
        int v30 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      break;
  }

  int v34 = *(__int16 *)(a1 + 18);
  BOOL v35 = __OFSUB__(v34, 1);
  int v36 = v34 - 1;
  if (v36 < 0 == v35)
  {
    *(_WORD *)(a1 + 18) = v36;
    if (!(_WORD)v36)
    {
      uint64_t v37 = *(void (**)(uint64_t))(a1 + 8);
      if (v37)
      {
        *(void *)(a1 + 8) = 0LL;
        *(_WORD *)(a1 + 18) = 0;
      }

      else
      {
        sub_1001EE2A0();
        uint64_t v37 = *(void (**)(uint64_t))(a1 + 8);
        *(void *)(a1 + 8) = 0LL;
        *(_WORD *)(a1 + 18) = 0;
        if (!v37) {
          return;
        }
      }

      v37(a1);
    }
  }

__int128 *sub_1001367F8(__int128 *result)
{
  *((_WORD *)result + 8) = 0;
  int v1 = *(unsigned __int16 *)result;
  uint64_t v2 = &xmmword_1008E22D8;
  if (v1 == (unsigned __int16)xmmword_1008E22D8)
  {
    int v3 = 1794;
    do
    {
      int v4 = v3;
      uint64_t result = sub_10012D6D8((unsigned __int16)v3);
      int v3 = v4 + 2;
    }

    while (result);
  }

  else
  {
    uint64_t v2 = &xmmword_1008E2428;
    int v5 = 1795;
    do
    {
      int v4 = v5;
      uint64_t result = sub_10012D6D8((unsigned __int16)v5);
      int v5 = v4 + 2;
    }

    while (result);
  }

  *(_WORD *)uint64_t v2 = v4;
  return result;
}

void sub_100136880(uint64_t a1)
{
  char v2 = BYTE14(xmmword_1008F6E30[0]);
  if (!BYTE14(xmmword_1008F6E30[0]))
  {
    char v3 = 0;
    char v4 = 0;
    if (LOBYTE(xmmword_1008F6E30[0])) {
      goto LABEL_13;
    }
    goto LABEL_6;
  }

  if (WORD3(xmmword_1008F6E30[0])) {
    char v2 = WORD5(xmmword_1008F6E30[0]) > 2u;
  }
  else {
    char v2 = WORD5(xmmword_1008F6E30[0]) != 0;
  }
  char v3 = v2;
  char v4 = v2;
  if (!LOBYTE(xmmword_1008F6E30[0]))
  {
LABEL_6:
    if (byte_1008F6E5E) {
      BOOL v5 = word_1008F6E5A == 0;
    }
    else {
      BOOL v5 = 1;
    }
    char v4 = !v5;
    char v3 = v2;
  }

uint64_t sub_100136C78(uint64_t a1, uint64_t a2)
{
  return a2;
}

__int128 *sub_100136C80( unsigned int a1, __int16 a2, __int16 a3, __int16 a4, int a5, int a6, int a7, int a8, char a9)
{
  word_1008E2644 = 0;
  dword_1008E2640 = 0;
  dword_1008E264C = 0;
  word_1008E2650 = 0;
  dword_1008E2646 = 0;
  word_1008E264A = 0;
  xmmword_1008F6E30[0] = 0u;
  unk_1008F6E40 = 0u;
  unk_1008F6E50 = 0u;
  unk_1008F6E60 = 0u;
  unk_1008F6E70 = 0u;
  *(_OWORD *)&qword_1008F6E80 = 0u;
  unsigned int v17 = (unsigned __int16)(sub_1000FC300() - 4);
  if (a1 >= v17) {
    __int16 v18 = v17;
  }
  else {
    __int16 v18 = a1;
  }
  WORD6(xmmword_1008F6E30[0]) = v18;
  word_1008F6E4C = a2;
  word_1008F6E5C = a3;
  word_1008F6E6C = a4;
  WORD4(xmmword_1008F6E30[0]) = a5;
  word_1008F6E48 = a6;
  word_1008F6E58 = a7;
  word_1008F6E68 = a8;
  WORD5(xmmword_1008F6E30[0]) = a5;
  word_1008F6E5A = a7;
  word_1008F6E6A = a8;
  WORD3(xmmword_1008F6E30[0]) = 0;
  LOBYTE(xmmword_1008F6E30[0]) = a9;
  if ((a9 & 1) != 0)
  {
    BOOL v19 = 1;
    BOOL v20 = a5 != 0;
    BOOL v21 = 1;
    BOOL v22 = 1;
  }

  else
  {
    BOOL v21 = a6 != 0;
    BOOL v20 = a7 != 0;
    BOOL v19 = a5 != 0;
    BOOL v22 = a7 != 0;
  }

  BYTE14(xmmword_1008F6E30[0]) = v19;
  byte_1008F6E4E = v21;
  byte_1008F6E5E = v22;
  byte_1008F6E6E = a8 != 0;
  byte_1008F6E91 = a5 != 0;
  byte_1008F6E92 = v20;
  byte_1008F6E90 = 0;
  byte_1008F6E88 = 0;
  sub_100137518();
  int v23 = 1794;
  do
  {
    int v24 = v23;
    uint64_t v25 = sub_10012D6D8((unsigned __int16)v23);
    int v23 = v24 + 2;
  }

  while (v25);
  LOWORD(xmmword_1008E22D8) = v24;
  int v26 = 1795;
  do
  {
    int v27 = v26;
    uint64_t result = sub_10012D6D8((unsigned __int16)v26);
    int v26 = v27 + 2;
  }

  while (result);
  LOWORD(xmmword_1008E2428) = v27;
  return result;
}

void sub_100136E38()
{
  uint64_t v13 = 0LL;
  while (sub_10012EEA0((uint64_t *)&v13))
  {
    BOOL v0 = v13;
    if ((__int16)*v13 == -1)
    {
      sub_10010D3AC(129LL, v13, *((void *)v13 + 6) + 48LL, 0LL, 0LL);
    }

    else
    {
      *((_BYTE *)v13 + 56) = 1;
      sub_10010E504(0LL, v0, 129LL);
    }
  }

  uint64_t v13 = 0LL;
  if (sub_10012EBEC((uint64_t *)&v13))
  {
    while (1)
    {
      int v1 = v13;
      int v2 = *((unsigned __int8 *)v13 + 54);
      if (v2 != 7)
      {
        *((_BYTE *)v13 + 54) = 7;
        int v3 = *((_DWORD *)v1 + 37);
        sub_100136880((uint64_t)v1);
        sub_10010E504(0LL, v13, 129LL);
        if (!v3)
        {
          sub_1001E6EB8((uint64_t)v13, 129LL);
          sub_1001E1B88((uint64_t)v13);
          sub_10012E320(v13);
        }

        goto LABEL_14;
      }

uint64_t sub_100137114(int a1)
{
  return WORD5(xmmword_1008F6E30[a1]);
}

BOOL sub_100137128()
{
  return WORD3(xmmword_1008F6E30[0]) != 0;
}

uint64_t sub_10013713C()
{
  return BYTE1(xmmword_1008F6E30[0]);
}

void sub_100137148()
{
  byte_1008E2653 = 1;
}

uint64_t sub_100137158()
{
  sub_1001EE0E4("   gAssertOnControllerFlowPRoblems  = %d\n", byte_1008E2653);
  sub_1001EE0E4("   MaxAclDataPacketSize\t\t\t= %d\n", WORD6(xmmword_1008F6E30[0]));
  sub_1001EE0E4("   MaxScoDataPacketSize\t\t\t= %d\n", (unsigned __int16)word_1008F6E4C);
  sub_1001EE0E4("   MaxLeDataPacketSize\t\t\t= %d\n", (unsigned __int16)word_1008F6E5C);
  if (LOBYTE(xmmword_1008F6E30[0])) {
    BOOL v0 = "TRUE";
  }
  else {
    BOOL v0 = "FALSE";
  }
  sub_1001EE0E4("   sharedACLandLEbuffers     \t= %s\n", v0);
  sub_1001EE0E4("   totalNumOutstandingTransmits\t= %d\n", WORD1(xmmword_1008F6E30[0]));
  sub_1001EE0E4("   totalNumAclSlots\t\t\t\t= %d\n", WORD4(xmmword_1008F6E30[0]));
  sub_1001EE0E4("   totalNumScoSlots\t\t\t\t= %d\n", (unsigned __int16)word_1008F6E48);
  sub_1001EE0E4("   totalNumLeSlots\t\t\t\t= %d\n", (unsigned __int16)word_1008F6E58);
  sub_1001EE0E4("   curNumAclSlotsAvail\t\t\t= %d\n", WORD5(xmmword_1008F6E30[0]));
  sub_1001EE0E4("   curNumLeSlotsAvail\t\t\t= %d\n", (unsigned __int16)word_1008F6E5A);
  if (BYTE14(xmmword_1008F6E30[0])) {
    int v1 = "TRUE";
  }
  else {
    int v1 = "FALSE";
  }
  sub_1001EE0E4("   aclTransportReady\t\t\t\t= %s\n", v1);
  if (byte_1008F6E4E) {
    int v2 = "TRUE";
  }
  else {
    int v2 = "FALSE";
  }
  sub_1001EE0E4("   scoTransportReady\t\t\t\t= %s\n", v2);
  if (byte_1008F6E5E) {
    int v3 = "TRUE";
  }
  else {
    int v3 = "FALSE";
  }
  sub_1001EE0E4("   leTransportReady\t\t\t\t= %s\n", v3);
  sub_1001EE0E4("   needScoBuffers\t\t\t\t= %d\n", WORD3(xmmword_1008F6E30[0]));
  sub_1001EE0E4("   _OI_HCIAPI_ReadyToTransmitLe  = %d\n", byte_1008F6E92);
  sub_1001EE0E4("   _OI_HCIAPI_ReadyToTransmitAcl  = %d\n", byte_1008F6E91);
  sub_1001EE0E4("   _OI_HCIAPI_ReadyToTransmitOther  = %d\n", byte_1008F6E90);
  sub_10012F3D4();
  if (qword_1008F6D80 && *(_BYTE *)(qword_1008F6D80 + 7))
  {
    sub_1001EE0E4("HciFlow - aclRxFlowControl:\n");
    sub_1001EE0E4("   lmHandle\t = %d\n", (unsigned __int16)dword_1008E2640);
    if ((_BYTE)word_1008E2644) {
      char v4 = "TRUE";
    }
    else {
      char v4 = "FALSE";
    }
    sub_1001EE0E4("   flowIsPaused = %s\n", v4);
    sub_1001EE0E4("   numOutstandingReceives = %d\n");
  }

  else
  {
    sub_1001EE0E4("HciFlow - aclRxFlowControl not enabled\n");
  }

  if (qword_1008F6D80 && *(_BYTE *)(qword_1008F6D80 + 8))
  {
    sub_1001EE0E4("HciFlow - scoRxFlowControl:\n");
    sub_1001EE0E4("   lmHandle\t = %d\n", (unsigned __int16)dword_1008E264C);
    if ((_BYTE)word_1008E2650) {
      int v5 = "TRUE";
    }
    else {
      int v5 = "FALSE";
    }
    sub_1001EE0E4("   flowIsPaused = %s\n", v5);
    sub_1001EE0E4("   numOutstandingReceives = %d\n");
  }

  else
  {
    sub_1001EE0E4("HciFlow - scoRxFlowControl not enabled\n");
  }

  if (!qword_1008F6D80 || !*(_BYTE *)(qword_1008F6D80 + 9)) {
    return sub_1001EE0E4("HciFlow - leRxFlowControl not enabled\n");
  }
  sub_1001EE0E4("HciFlow - leRxFlowControl:\n");
  sub_1001EE0E4("   lmHandle\t = %d\n", (unsigned __int16)dword_1008E2646);
  if ((_BYTE)word_1008E264A) {
    int v6 = "TRUE";
  }
  else {
    int v6 = "FALSE";
  }
  sub_1001EE0E4("   flowIsPaused = %s\n", v6);
  return sub_1001EE0E4("   numOutstandingReceives = %d\n", HIWORD(dword_1008E2646));
}

void sub_1001374B4()
{
  dword_1008E2660 = 0;
  uint64_t v0 = sub_1000B05D8();
  if (v0 - qword_1008E2658 < 0x7D0) {
    sub_1001EE6E8( (uint64_t)sub_1001374B4,  0LL,  (unsigned __int16)(2099 - (v0 - qword_1008E2658)) / 0x64u,  &dword_1008E2660);
  }
  else {
    sub_1000B139C();
  }
}

void sub_100137518()
{
  if (dword_1008E2660)
  {
    sub_1001EEB14(dword_1008E2660);
    dword_1008E2660 = 0;
    sub_1000B139C();
  }

  qword_1008E2658 = 0LL;
}

  ;
}

  ;
}

  ;
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_100137610()
{
  if ((byte_1008E2668 & 1) != 0) {
    return 0LL;
  }
  mach_port_t v1 = dword_1008E2680;
  if (dword_1008E2680) {
    goto LABEL_4;
  }
  io_iterator_t notification = 0;
  int v3 = IONotificationPortCreate(kIOMainPortDefault);
  RunLoopSource = IONotificationPortGetRunLoopSource(v3);
  Current = CFRunLoopGetCurrent();
  CFRunLoopAddSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  int v6 = IOServiceNameMatching("AppleBTHci");
  uint64_t v7 = IOServiceAddMatchingNotification( v3,  "IOServiceFirstMatch",  v6,  (IOServiceMatchingCallback)sub_10013885C,  Current,  &notification);
  if ((_DWORD)v7)
  {
    uint64_t v0 = v7;
    if (qword_1008E2670 != -1) {
      dispatch_once(&qword_1008E2670, &stru_100884B38);
    }
    char v8 = (os_log_s *)qword_1008E2678;
    if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
      sub_10065C290(v0, v8, v9, v10, v11, v12, v13, v14);
    }
  }

  else
  {
    io_service_t v16 = IOIteratorNext(notification);
    for (dword_1008E2684 = v16; !v16; dword_1008E2684 = v16)
    {
      if (qword_1008E2670 != -1) {
        dispatch_once(&qword_1008E2670, &stru_100884B78);
      }
      unsigned int v17 = (os_log_s *)qword_1008E2678;
      if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136315138;
        int v36 = "AppleBTHci";
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "applebt_hci_connect: Couldn't find %s service, waiting for first match\n",  buf,  0xCu);
      }

      CFRunLoopRun();
      io_service_t v16 = IOIteratorNext(notification);
    }

    uint64_t v0 = IOServiceOpen(v16, mach_task_self_, 0, (io_connect_t *)&dword_1008E2680);
    if ((_DWORD)v0)
    {
      if (qword_1008E2670 != -1) {
        dispatch_once(&qword_1008E2670, &stru_100884BB8);
      }
      __int16 v18 = (os_log_s *)qword_1008E2678;
      if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
        sub_10065C22C(v0, v18, v19, v20, v21, v22, v23, v24);
      }
    }
  }

  CFRunLoopRemoveSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  IONotificationPortDestroy(v3);
  IOObjectRelease(notification);
  if (qword_1008E2670 != -1) {
    dispatch_once(&qword_1008E2670, &stru_100884BF8);
  }
  uint64_t v25 = (os_log_s *)qword_1008E2678;
  if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 136315138;
    int v36 = "AppleBTHci";
    _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "applebt_hci_connect: Service %s connected!\n",  buf,  0xCu);
  }

  if (!(_DWORD)v0)
  {
    mach_port_t v1 = dword_1008E2680;
LABEL_4:
    uint64_t v2 = IOConnectCallMethod(v1, 0, 0LL, 0, 0LL, 0LL, 0LL, 0LL, 0LL, 0LL);
    if ((_DWORD)v2)
    {
      uint64_t v0 = v2;
      if (qword_1008E2670 != -1) {
        dispatch_once(&qword_1008E2670, &stru_1008846F8);
      }
      if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
        sub_10065C160();
      }
    }

    else
    {
      if (qword_1008E2670 != -1) {
        dispatch_once(&qword_1008E2670, &stru_100884738);
      }
      uint64_t v15 = (os_log_s *)qword_1008E2678;
      if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136315138;
        int v36 = "AppleBTHci";
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "applebt_hci_open: Service %s opened!\n",  buf,  0xCu);
      }

      uint64_t v0 = 0LL;
      byte_1008E2668 = 1;
    }

    return v0;
  }

  if (qword_1008E2670 != -1) {
    dispatch_once(&qword_1008E2670, &stru_1008846B8);
  }
  int v26 = (os_log_s *)qword_1008E2678;
  if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
    sub_10065C1C8(v0, v26, v27, v28, v29, v30, v31, v32);
  }
  return v0;
}

void sub_100137A84(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100137AB0(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

const char *sub_100137ADC(int a1)
{
  if (a1 > -536870182)
  {
    if (a1 > -536870161)
    {
      switch(a1)
      {
        case -536870160:
          return "kIOReturnNotFound";
        case 0:
          return "kIOReturnSuccess";
        case 5:
          return "KERN_FAILURE";
      }
    }

    else
    {
      switch(a1)
      {
        case -536870181:
          return "kIOReturnNoSpace";
        case -536870167:
          return "kIOReturnDeviceError";
        case -536870165:
          return "kIOReturnAborted";
      }
    }

    return "UNKNOWN";
  }

  if (a1 <= -536870199)
  {
    if (a1 == -536870211) {
      return "kIOReturnNoMemory";
    }
    if (a1 == -536870206) {
      return "kIOReturnBadArgument";
    }
    return "UNKNOWN";
  }

  switch(a1)
  {
    case -536870198:
      uint64_t result = "kIOReturnIOError";
      break;
    case -536870197:
    case -536870196:
      return "UNKNOWN";
    case -536870195:
      uint64_t result = "kIOReturnNotOpen";
      break;
    case -536870194:
      uint64_t result = "kIOReturnNotReadable";
      break;
    case -536870193:
      uint64_t result = "kIOReturnNotWritable";
      break;
    default:
      if (a1 != -536870185) {
        return "UNKNOWN";
      }
      uint64_t result = "kIOReturnOffline";
      break;
  }

  return result;
}

void sub_100137C5C(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_100137C88()
{
  if ((byte_1008E2668 & 1) != 0)
  {
    byte_1008E2668 = 0;
    uint64_t v0 = IOConnectCallMethod(dword_1008E2680, 1u, 0LL, 0, 0LL, 0LL, 0LL, 0LL, 0LL, 0LL);
    if ((_DWORD)v0)
    {
      if (qword_1008E2670 != -1) {
        dispatch_once(&qword_1008E2670, &stru_1008847B8);
      }
      if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
        sub_10065C2F4();
      }
    }

    IOServiceClose(dword_1008E2680);
    dword_1008E2680 = 0;
    IOObjectRelease(dword_1008E2684);
    dword_1008E2684 = 0;
    if (qword_1008E2670 != -1) {
      dispatch_once(&qword_1008E2670, &stru_1008847F8);
    }
    mach_port_t v1 = (os_log_s *)qword_1008E2678;
    if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 136315138;
      char v4 = "AppleBTHci";
      _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEFAULT,  "applebt_hci_close: Service %s closed and disconnected!\n",  buf,  0xCu);
    }
  }

  else
  {
    if (qword_1008E2670 != -1) {
      dispatch_once(&qword_1008E2670, &stru_100884778);
    }
    if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
      sub_10065C35C();
    }
    return 5LL;
  }

  return v0;
}

void sub_100137E60(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100137E8C(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100137EB8(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_100137EE4()
{
  if ((byte_1008E2668 & 1) != 0)
  {
    uint64_t v0 = IOConnectCallMethod(dword_1008E2680, 4u, 0LL, 0, 0LL, 0LL, 0LL, 0LL, 0LL, 0LL);
    if ((_DWORD)v0)
    {
      if (qword_1008E2670 != -1) {
        dispatch_once(&qword_1008E2670, &stru_100884878);
      }
      if (!os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
        goto LABEL_9;
      }
      sub_10065C388();
    }

    if (qword_1008E2670 != -1) {
      dispatch_once(&qword_1008E2670, &stru_1008848B8);
    }
LABEL_9:
    mach_port_t v1 = (os_log_s *)qword_1008E2678;
    if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEFAULT,  "applebt_hci_transport_reset: HCI Transport was reset!\n",  buf,  2u);
    }

    return v0;
  }

  if (qword_1008E2670 != -1) {
    dispatch_once(&qword_1008E2670, &stru_100884838);
  }
  if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
    sub_10065C3F0();
  }
  return 5LL;
}

void sub_100138050(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10013807C(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001380A8(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_1001380D4(int a1, unsigned __int8 *inputStruct)
{
  if ((byte_1008E2668 & 1) != 0)
  {
    uint64_t v34 = 0LL;
    memset(outputStruct, 0, sizeof(outputStruct));
    uint64_t v26 = 8LL * a1;
    uint64_t v4 = IOConnectCallMethod( dword_1008E2680,  2u,  0LL,  0,  inputStruct,  16LL * a1,  0LL,  0LL,  outputStruct,  (size_t *)&v26);
    if ((_DWORD)v4)
    {
      uint64_t v5 = v4;
      if (qword_1008E2670 != -1) {
        dispatch_once(&qword_1008E2670, &stru_100884938);
      }
      if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
        sub_10065C41C();
      }
      return v5;
    }

    if (a1 < 1) {
      return 0LL;
    }
    uint64_t v5 = 0LL;
    uint64_t v7 = a1;
    char v8 = inputStruct + 1;
    for (__int16 i = (unsigned __int8 *)outputStruct + 4; ; i += 8)
    {
      int v10 = *((_DWORD *)i - 1);
      if (v10) {
        break;
      }
LABEL_30:
      v8 += 16;
      if (!--v7) {
        return v5;
      }
    }

    if (v10 == -536870181)
    {
      if (qword_1008E2670 != -1) {
        dispatch_once(&qword_1008E2670, &stru_1008849B8);
      }
      __int16 v18 = (os_log_s *)qword_1008E2678;
      if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_DEFAULT))
      {
        int v19 = *(v8 - 1);
        int v20 = *i;
        int v21 = *v8;
        *(_DWORD *)int buf = 67109632;
        int v28 = v19;
        __int16 v29 = 1024;
        int v30 = v20;
        __int16 v31 = 1024;
        LODWORD(v32) = v21;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "applebt_hci_write: write to discardable pipe %d failed with no space, written %d out of %d packets\n",  buf,  0x14u);
      }

      goto LABEL_30;
    }

    if (v10 == -536870198)
    {
      if (qword_1008E2670 != -1) {
        dispatch_once(&qword_1008E2670, &stru_100884978);
      }
      uint64_t v11 = qword_1008E2678;
      if (!os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
        goto LABEL_29;
      }
      int v12 = *(v8 - 1);
      int v13 = *i;
      int v14 = *v8;
      *(_DWORD *)int buf = 67109632;
      int v28 = v12;
      __int16 v29 = 1024;
      int v30 = v13;
      __int16 v31 = 1024;
      LODWORD(v32) = v14;
      uint64_t v15 = (os_log_s *)v11;
      io_service_t v16 = "applebt_hci_write: write to non-discardable pipe %d failed with no space, written %d out of %d packets\n";
      uint32_t v17 = 20;
    }

    else
    {
      if (qword_1008E2670 != -1) {
        dispatch_once(&qword_1008E2670, &stru_1008849F8);
      }
      uint64_t v22 = qword_1008E2678;
      if (!os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
        goto LABEL_29;
      }
      int v23 = *(v8 - 1);
      int v24 = *((_DWORD *)i - 1);
      uint64_t v25 = sub_100137ADC(v24);
      *(_DWORD *)int buf = 67109634;
      int v28 = v23;
      __int16 v29 = 1024;
      int v30 = v24;
      __int16 v31 = 2080;
      uint64_t v32 = v25;
      uint64_t v15 = (os_log_s *)v22;
      io_service_t v16 = "applebt_hci_write: write to pipe %d failed with (0x%08X, %s)\n";
      uint32_t v17 = 24;
    }

    _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, v16, buf, v17);
LABEL_29:
    uint64_t v5 = 5LL;
    goto LABEL_30;
  }

  if (qword_1008E2670 != -1) {
    dispatch_once(&qword_1008E2670, &stru_1008848F8);
  }
  if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
    sub_10065C484();
  }
  return 5LL;
}

void sub_100138478(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001384A4(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001384D0(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001384FC(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100138528(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_100138554(int a1, void *inputStruct, void *outputStruct)
{
  if ((byte_1008E2668 & 1) != 0)
  {
    uint64_t v11 = 8LL * a1;
    size_t v5 = 16LL * a1;
    while (1)
    {
      uint64_t v6 = IOConnectCallMethod(dword_1008E2680, 3u, 0LL, 0, inputStruct, v5, 0LL, 0LL, outputStruct, (size_t *)&v11);
      if ((_DWORD)v6 != -536870165) {
        break;
      }
      if (qword_1008E2670 != -1) {
        dispatch_once(&qword_1008E2670, &stru_100884AB8);
      }
      uint64_t v7 = (os_log_s *)qword_1008E2678;
      if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "applebt_hci_read: method kAppleBTHciRead was aborted by signal! Read again\n",  buf,  2u);
      }
    }

    uint64_t v8 = v6;
    if ((_DWORD)v6)
    {
      if (qword_1008E2670 != -1) {
        dispatch_once(&qword_1008E2670, &stru_100884A78);
      }
      if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
        sub_10065C4B0();
      }
    }
  }

  else
  {
    if (qword_1008E2670 != -1) {
      dispatch_once(&qword_1008E2670, &stru_100884A38);
    }
    if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
      sub_10065C518();
    }
    return 5LL;
  }

  return v8;
}

void sub_10013870C(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100138738(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100138764(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

CFTypeRef sub_100138790()
{
  if (dword_1008E2684) {
    return IORegistryEntrySearchCFProperty(dword_1008E2684, "IODeviceTree", @"pipes", kCFAllocatorDefault, 1u);
  }
  if (qword_1008E2670 != -1) {
    dispatch_once(&qword_1008E2670, &stru_100884AF8);
  }
  if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_ERROR)) {
    sub_10065C544();
  }
  return 0LL;
}

void sub_100138830(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10013885C(__CFRunLoop *a1)
{
  if (qword_1008E2670 != -1) {
    dispatch_once(&qword_1008E2670, &stru_100884C38);
  }
  uint64_t v2 = (os_log_s *)qword_1008E2678;
  if (os_log_type_enabled((os_log_t)qword_1008E2678, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v3 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "DeviceFoundCB: releasing waiting thread\n",  v3,  2u);
  }

  CFRunLoopStop(a1);
}

void sub_1001388F0(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10013891C(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100138948(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_100138974(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_1001389A0(id a1)
{
  qword_1008E2678 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

  ;
}

const char *sub_1001389E4(int a1)
{
  return sub_100137ADC(a1);
}

uint64_t sub_1001389EC()
{
  off_1008E27B0 = 0LL;
  byte_1008E27B8 = 0;
  return 0LL;
}

uint64_t sub_100138A28(uint64_t a1, unsigned int a2)
{
  if (!a1)
  {
    __int16 v18 = "cmdPacket";
    goto LABEL_123;
  }

  if (!a2)
  {
    __int16 v18 = "(cmdPacketLen) > 0";
LABEL_123:
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  203,  v18);
  }

  if (a2 <= 2)
  {
    sub_1001EE2A0();
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  210,  "ByteStream_NumReadBytesAvail(bs) >= 2");
  }

  if (a2 == 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  211,  "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 3);
  if (a2 - 4 == v4)
  {
    uint64_t v5 = *(unsigned __int16 *)(a1 + 1);
    if (*(unsigned __int16 *)(a1 + 1) > 0xC3Bu)
    {
      switch(*(_WORD *)(a1 + 1))
      {
        case 0xC3C:
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  290,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          byte_1008E269E = *(_BYTE *)(a1 + 4);
          break;
        case 0xC3D:
        case 0xC40:
        case 0xC41:
        case 0xC42:
        case 0xC44:
        case 0xC46:
        case 0xC48:
LABEL_113:
          if (sub_1000A86F0())
          {
            sub_1001EE134((uint64_t)"OI_HCIParmCache, unknown opcode 0x%x", v10, v11, v12, v13, v14, v15, v16, v5);
            uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
              sub_100657858();
            }
          }

          uint64_t result = 105LL;
          break;
        case 0xC3E:
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  295,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          byte_1008E269F = *(_BYTE *)(a1 + 4);
          break;
        case 0xC3F:
          if (v4 <= 9) {
            sub_1001EE2A0();
          }
          if (a2 - 14 >= 0xFFFFFFF6) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  223,  "ByteStream_NumReadBytesAvail(bs) >= (sizeof(parmCache.channelClassification))");
          }
          uint64_t result = 0LL;
          uint64_t v9 = *(void *)(a1 + 4);
          word_1008E26AC = *(_WORD *)(a1 + 12);
          qword_1008E26A4 = v9;
          break;
        case 0xC43:
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  300,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          byte_1008E26A0 = *(_BYTE *)(a1 + 4);
          break;
        case 0xC45:
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  305,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          byte_1008E26A1 = *(_BYTE *)(a1 + 4);
          break;
        case 0xC47:
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  310,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          byte_1008E26A2 = *(_BYTE *)(a1 + 4);
          break;
        case 0xC49:
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  315,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          byte_1008E26A3 = *(_BYTE *)(a1 + 4);
          break;
        default:
          switch(*(_WORD *)(a1 + 1))
          {
            case 0xC52:
              if (v4 <= 0xF0) {
                sub_1001EE2A0();
              }
              if (a2 - 245 >= 0xFFFFFF0F) {
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  348,  "ByteStream_NumReadBytesAvail(bs) >= (sizeof(parmCache.extendedInqResponse))");
              }
              memmove(&byte_1008E26B0, (const void *)(a1 + 4), 0xF1uLL);
              uint64_t result = 0LL;
              break;
            case 0xC56:
              if (!*(_BYTE *)(a1 + 3)) {
                sub_1001EE2A0();
              }
              if (a2 <= 4) {
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  332,  "ByteStream_NumReadBytesAvail(bs) >= 1");
              }
              uint64_t result = 0LL;
              byte_1008E26AE = *(_BYTE *)(a1 + 4);
              break;
            case 0xC59:
              if (!*(_BYTE *)(a1 + 3)) {
                sub_1001EE2A0();
              }
              if (a2 <= 4) {
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  337,  "ByteStream_NumReadBytesAvail(bs) >= 1");
              }
              uint64_t result = 0LL;
              char v7 = *(_BYTE *)(a1 + 4);
              uint64_t v8 = &byte_1008E27AA;
              goto LABEL_107;
            case 0xC5B:
              if (!*(_BYTE *)(a1 + 3)) {
                sub_1001EE2A0();
              }
              if (a2 <= 4) {
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  343,  "ByteStream_NumReadBytesAvail(bs) >= 1");
              }
              uint64_t result = 0LL;
              byte_1008E26AF = *(_BYTE *)(a1 + 4);
              break;
            default:
              goto LABEL_113;
          }

          break;
      }
    }

    else
    {
      switch(*(_WORD *)(a1 + 1))
      {
        case 0xC16:
          if (v4 <= 1) {
            sub_1001EE2A0();
          }
          if (a2 <= 5) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  233,  "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          uint64_t result = 0LL;
          word_1008E2688 = *(_WORD *)(a1 + 4);
          return result;
        case 0xC17:
        case 0xC19:
        case 0xC1B:
        case 0xC1D:
        case 0xC1F:
        case 0xC21:
        case 0xC23:
        case 0xC25:
        case 0xC27:
        case 0xC28:
        case 0xC29:
        case 0xC2B:
        case 0xC2D:
        case 0xC2E:
          goto LABEL_113;
        case 0xC18:
          if (v4 <= 1) {
            sub_1001EE2A0();
          }
          if (a2 <= 5) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  238,  "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          uint64_t result = 0LL;
          word_1008E268C = *(_WORD *)(a1 + 4);
          return result;
        case 0xC1A:
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  243,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          byte_1008E2698 = *(_BYTE *)(a1 + 4);
          return result;
        case 0xC1C:
          if (v4 <= 3) {
            sub_1001EE2A0();
          }
          if (a2 <= 5) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  248,  "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          word_1008E268E = *(_WORD *)(a1 + 4);
          if (a2 <= 7) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  249,  "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          uint64_t result = 0LL;
          word_1008E2690 = *(_WORD *)(a1 + 6);
          return result;
        case 0xC1E:
          if (v4 <= 3) {
            sub_1001EE2A0();
          }
          if (a2 <= 5) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  254,  "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          word_1008E2692 = *(_WORD *)(a1 + 4);
          if (a2 <= 7) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  255,  "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          uint64_t result = 0LL;
          word_1008E2694 = *(_WORD *)(a1 + 6);
          return result;
        case 0xC20:
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  260,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          byte_1008E2699 = *(_BYTE *)(a1 + 4);
          return result;
        case 0xC22:
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  265,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          byte_1008E269A = *(_BYTE *)(a1 + 4);
          return result;
        case 0xC24:
          if (v4 <= 2) {
            sub_1001EE2A0();
          }
          if (a2 <= 6) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  326,  "ByteStream_NumReadBytesAvail(bs) >= 3");
          }
          uint64_t result = 0LL;
          uint64_t v8 = &byte_1008E27A1;
          dword_1008E27A4 = *(unsigned __int16 *)(a1 + 4) | (*(unsigned __int8 *)(a1 + 6) << 16);
          goto LABEL_108;
        case 0xC26:
          if (v4 <= 1) {
            sub_1001EE2A0();
          }
          if (a2 <= 5) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  270,  "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          uint64_t result = 0LL;
          word_1008E268A = *(_WORD *)(a1 + 4);
          return result;
        case 0xC2A:
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  275,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          byte_1008E269B = *(_BYTE *)(a1 + 4);
          return result;
        case 0xC2C:
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  280,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          byte_1008E269C = *(_BYTE *)(a1 + 4);
          return result;
        case 0xC2F:
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  285,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          byte_1008E269D = *(_BYTE *)(a1 + 4);
          return result;
        default:
          if ((_DWORD)v5 == 2063)
          {
            if (!*(_BYTE *)(a1 + 3)) {
              sub_1001EE2A0();
            }
            if (a2 <= 4) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  228,  "ByteStream_NumReadBytesAvail(bs) >= 1");
            }
            uint64_t result = 0LL;
            word_1008E2696 = *(unsigned __int8 *)(a1 + 4);
            return result;
          }

          if ((_DWORD)v5 != 3082) {
            goto LABEL_113;
          }
          if (!*(_BYTE *)(a1 + 3)) {
            sub_1001EE2A0();
          }
          if (a2 <= 4) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/hci/hciparmcache.c",  320,  "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          uint64_t result = 0LL;
          char v7 = *(_BYTE *)(a1 + 4);
          uint64_t v8 = &byte_1008E27A8;
          break;
      }

LABEL_107:
      v8[1] = v7;
LABEL_108:
      *uint64_t v8 = 1;
    }
  }

  else
  {
    sub_1001EE2A0();
    return 101LL;
  }

  return result;
}

  uint64_t v120 = v65;
LABEL_19:
  int v20 = NSPrintF_safe("%u.%u.%u", BYTE1(a2[2]), a2[2] >> 4, a2[2] & 0xF);
  uint64_t v124 = (void *)objc_claimAutoreleasedReturnValue(v20);
  v130[0] = @"AverageHIDLatencyInMSec";
  uint64_t v119 = (void *)[NSNumber numberWithChar:*((unsigned __int8 *)a2 + 69)];
  v131[0] = v119;
  v130[1] = @"DisconnectReason";
  uint64_t v113 = (void *)[NSNumber numberWithUnsignedInt:a2[7]];
  v131[1] = v113;
  v130[2] = @"HIDType";
  uint64_t v115 = (void *)[NSNumber numberWithUnsignedChar:a4];
  v131[2] = v115;
  v130[3] = @"IsA2DPStreaming";
  if (qword_1008D6198 != -1) {
    dispatch_once(&qword_1008D6198, &stru_100890E78);
  }
  uint64_t v114 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *((unsigned __int8 *)off_1008D6190 + 197)));
  v131[3] = v114;
  v130[4] = @"IsDeviceStatisticEnabled";
  uint64_t v116 = (void *)[NSNumber numberWithBool:*((unsigned __int8 *)a2 + 12)];
  v131[4] = v116;
  v130[5] = @"IsHFPActive";
  if (qword_1008D6198 != -1) {
    dispatch_once(&qword_1008D6198, &stru_100890E78);
  }
  int v117 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *((unsigned __int8 *)off_1008D6190 + 198)));
  v131[5] = v117;
  v130[6] = @"IsLEAStreaming";
  if (qword_1008D6198 != -1) {
    dispatch_once(&qword_1008D6198, &stru_100890E78);
  }
  uint64_t v118 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *((unsigned __int8 *)off_1008D6190 + 199)));
  v131[6] = v118;
  v130[7] = @"NumberOfAppleMouseOrTrackpadConnected";
  if (qword_1008D5F50 != -1) {
    dispatch_once(&qword_1008D5F50, &stru_100890E18);
  }
  int v21 = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  sub_100402264((uint64_t)off_1008D5F48));
  uint64_t v112 = (void *)objc_claimAutoreleasedReturnValue(v21);
  v131[7] = v112;
  v130[8] = @"NumberOfAppleKeyboardConnected";
  if (qword_1008D5F50 != -1) {
    dispatch_once(&qword_1008D5F50, &stru_100890E18);
  }
  uint64_t v22 = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  sub_100402368((uint64_t)off_1008D5F48));
  uint64_t v111 = (void *)objc_claimAutoreleasedReturnValue(v22);
  v131[8] = v111;
  v130[9] = @"PER";
  uint64_t v110 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a2[6]));
  v131[9] = v110;
  v130[10] = @"PID";
  uint64_t v109 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", *a2));
  v131[10] = v109;
  v130[11] = @"RSSI";
  uint64_t v108 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a2[5]));
  v131[11] = v108;
  v130[12] = @"VID";
  uint64_t v106 = (void *)[NSNumber numberWithUnsignedInt:a2[1]];
  v131[12] = v106;
  v131[13] = v124;
  v130[13] = @"FWVersion";
  v130[14] = @"DSniffOffset";
  uint64_t v105 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedShort:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedShort:",  *((unsigned __int16 *)a2 + 16)));
  v131[14] = v105;
  v130[15] = @"StatisticsCollectedInSeconds";
  uint64_t v104 = (void *)[NSNumber numberWithUnsignedInt:a2[9]];
  v131[15] = v104;
  v130[16] = @"SniffIntervalServiced";
  uint64_t v103 = (void *)[NSNumber numberWithUnsignedInt:a2[10]];
  v131[16] = v103;
  v130[17] = @"SniffIntervalServicedPercentage";
  uint64_t v102 = (void *)[NSNumber numberWithChar:*((unsigned __int8 *)a2 + 44)];
  v131[17] = v102;
  v130[18] = @"SniffIntervalSkipped";
  uint64_t v101 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2[12]));
  v131[18] = v101;
  v130[19] = @"SniffIntervalSkippedPercentage";
  int v100 = [NSNumber numberWithChar:*((unsigned __int8 *)a2 + 52)];
  v131[19] = v100;
  v130[20] = @"CentralSkipDenials";
  __int16 v99 = [NSNumber numberWithUnsignedInt:a2[16]];
  v131[20] = v99;
  v130[21] = @"CentralSkipDenialsPercentage";
  unsigned __int16 v98 = [NSNumber numberWithChar:*((unsigned __int8 *)a2 + 68)];
  v131[21] = v98;
  v130[22] = @"NoSync";
  __int16 v97 = [NSNumber numberWithUnsignedInt:a2[14]];
  v131[22] = v97;
  v130[23] = @"NoSyncPercentage";
  int v96 = (void *)[NSNumber numberWithChar:*((unsigned __int8 *)a2 + 60)];
  v131[23] = v96;
  v131[24] = v11;
  v130[24] = @"MaxHIDLatencyInMSec";
  v130[25] = @"TotalAnomaliesInBins";
  __int16 v95 = [NSNumber numberWithUnsignedInt:a2[4]];
  v131[25] = v95;
  v130[26] = @"SniffInterval_Bin_00_7.5ms";
  unsigned __int16 v94 = [NSNumber numberWithUnsignedInt:a2[18]];
  v131[26] = v94;
  v130[27] = @"SniffInterval_Bin_01_11.25ms";
  uint64_t v93 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2[19]));
  v131[27] = v93;
  v130[28] = @"SniffInterval_Bin_02_15ms";
  uint64_t v92 = (void *)[NSNumber numberWithUnsignedInt:a2[20]];
  v131[28] = v92;
  v130[29] = @"SniffInterval_Bin_03_22.5ms";
  uint64_t v91 = (void *)[NSNumber numberWithUnsignedInt:a2[21]];
  v131[29] = v91;
  v130[30] = @"SniffInterval_Bin_04_30ms";
  uint64_t v90 = (void *)[NSNumber numberWithUnsignedInt:a2[22]];
  v131[30] = v90;
  v130[31] = @"SniffInterval_Bin_05_45ms";
  uint64_t v89 = (void *)[NSNumber numberWithUnsignedInt:a2[23]];
  v131[31] = v89;
  v130[32] = @"SniffInterval_Bin_06_60ms";
  uint64_t v88 = (void *)[NSNumber numberWithUnsignedInt:a2[24]];
  v131[32] = v88;
  v130[33] = @"SniffInterval_Bin_07_90ms";
  uint64_t v87 = (void *)[NSNumber numberWithUnsignedInt:a2[25]];
  v131[33] = v87;
  v130[34] = @"SniffInterval_Bin_08_120ms";
  uint64_t v86 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2[26]));
  v131[34] = v86;
  v130[35] = @"SniffInterval_Bin_09_150ms";
  uint64_t v85 = (void *)[NSNumber numberWithUnsignedInt:a2[27]];
  v131[35] = v85;
  v130[36] = @"SniffInterval_Bin_10_500ms";
  uint64_t v84 = (void *)[NSNumber numberWithUnsignedInt:a2[28]];
  v131[36] = v84;
  v130[37] = @"SniffInterval_Bin_11_750ms";
  uint64_t v83 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2[29]));
  v131[37] = v83;
  v130[38] = @"SniffInterval_Bin_12_>750ms";
  uint64_t v82 = (void *)[NSNumber numberWithUnsignedInt:a2[30]];
  v131[38] = v82;
  v131[39] = v9;
  v130[39] = @"TriggerReason";
  v130[40] = @"ConnectedClassicDevice";
  uint64_t v81 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedChar:](&OBJC_CLASS___NSNumber, "numberWithUnsignedChar:", v126.u8[0]));
  v131[40] = v81;
  v130[41] = @"ConnectedClassicHIDDevice";
  uint64_t v80 = (void *)[NSNumber numberWithUnsignedChar:v126.u8[2]];
  v131[41] = v80;
  v130[42] = @"ConnectedLEDevice";
  uint64_t v79 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedChar:](&OBJC_CLASS___NSNumber, "numberWithUnsignedChar:", v126.u8[4]));
  v131[42] = v79;
  v130[43] = @"ConnectedLEHIDDevice";
  uint64_t v78 = (void *)[NSNumber numberWithUnsignedChar:v126.u8[6]];
  v131[43] = v78;
  v130[44] = @"A2DPSessionState";
  uint64_t v77 = (void *)[NSNumber numberWithUnsignedChar:v17];
  v131[44] = v77;
  v130[45] = @"HFPSessionState";
  uint64_t v76 = (void *)[NSNumber numberWithUnsignedChar:v18];
  v131[45] = v76;
  v130[46] = @"LEASessionState";
  uint64_t v123 = (void *)[NSNumber numberWithUnsignedChar:v122];
  v131[46] = v123;
  v130[47] = @"WiFiPowerState";
  uint64_t v75 = (void *)[NSNumber numberWithUnsignedChar:v19];
  v131[47] = v75;
  v130[48] = @"WiFiOnWhichBand";
  uint64_t v121 = (void *)[NSNumber numberWithUnsignedChar:v120];
  v131[48] = v121;
  v130[49] = @"NumberOfRSSIIncreasedBetween03To05dBm";
  uint64_t v74 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2[31]));
  v131[49] = v74;
  v130[50] = @"NumberOfRSSIIncreasedBetween06To10dBm";
  uint64_t v73 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2[32]));
  v131[50] = v73;
  v130[51] = @"NumberOfRSSIIncreasedBetween11To15dBm";
  uint64_t v72 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2[33]));
  v131[51] = v72;
  v130[52] = @"NumberOfRSSIIncreasedBetween16To20dBm";
  uint64_t v71 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2[34]));
  v131[52] = v71;
  v130[53] = @"NumberOfRSSIIncreasedBetween21To25dBm";
  uint64_t v70 = (void *)[NSNumber numberWithUnsignedInt:a2[35]];
  v131[53] = v70;
  v130[54] = @"NumberOfRSSIIncreasedBetween26To30dBm";
  __int16 v69 = [NSNumber numberWithUnsignedInt:a2[36]];
  v131[54] = v69;
  v130[55] = @"NumberOfRSSIIncreasedMoreThan30dBm";
  int v68 = [NSNumber numberWithUnsignedInt:a2[37]];
  v131[55] = v68;
  v130[56] = @"NumberOfRSSIDecreasedBetween03To05dBm";
  int v23 = [NSNumber numberWithUnsignedInt:a2[38]];
  v131[56] = v23;
  v130[57] = @"NumberOfRSSIDecreasedBetween06To10dBm";
  int v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2[39]));
  v131[57] = v24;
  v130[58] = @"NumberOfRSSIDecreasedBetween11To15dBm";
  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2[40]));
  v131[58] = v25;
  v130[59] = @"NumberOfRSSIDecreasedBetween16To20dBm";
  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2[41]));
  v131[59] = v26;
  v130[60] = @"NumberOfRSSIDecreasedBetween21To25dBm";
  uint64_t v27 = (void *)[NSNumber numberWithUnsignedInt:a2[42]];
  v131[60] = v27;
  v130[61] = @"NumberOfRSSIDecreasedBetween26To30dBm";
  int v28 = (void *)[NSNumber numberWithUnsignedInt:a2[43]];
  v131[61] = v28;
  v130[62] = @"NumberOfRSSIDecreasedMoreThan30dBm";
  __int16 v29 = [NSNumber numberWithUnsignedInt:a2[44]];
  v131[62] = v29;
  v130[63] = @"DeviceHighestRSSI";
  int v30 = [NSNumber numberWithInt:a2[45]];
  v131[63] = v30;
  v130[64] = @"DeviceLowestRSSI";
  __int16 v31 = [NSNumber numberWithInt:a2[46]];
  v131[64] = v31;
  uint64_t v127 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v131,  v130,  65LL));

  sub_1002EFD68(a1, 0x58u, v127);
  if (a3 == 2)
  {
    uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithDictionary:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithDictionary:",  v127));
    [v32 setObject:@"HIDLagDetected" forKeyedSubscript:@"_input"];
    v128[0] = _NSConcreteStackBlock;
    v128[1] = 3221225472LL;
    v128[2] = sub_100324554;
    v128[3] = &unk_100890D18;
    uint64_t v129 = objc_alloc_init(&OBJC_CLASS___BTServicesClient);
    BOOL v33 = v129;
    [v33 diagnosticControl:v32 completion:v128];
  }
}

  __int16 v97 = 0;
  uint64_t v56 = sub_1002E6E00();
  sub_10002418C(buf, "LeObserver");
  sub_10002418C(__p, "OverrideContactTracingScanDeltaSeconds");
  uint64_t v57 = (*(uint64_t (**)(uint64_t, uint8_t *, void **, int *))(*(void *)v56 + 88LL))(v56, buf, __p, &v97);
  if (v110 < 0) {
    operator delete(__p[0]);
  }
  if (v113 < 0)
  {
    operator delete(*(void **)buf);
    if (!v57) {
      goto LABEL_116;
    }
  }

  else if (!v57)
  {
    goto LABEL_116;
  }

  *(_DWORD *)(a1 + 260) = v97;
  uint64_t v58 = sub_1002E6E00();
  if ((*(unsigned int (**)(uint64_t))(*(void *)v58 + 176LL))(v58))
  {
    __int16 v59 = (os_log_s *)qword_1008F76C8;
    if (os_log_type_enabled((os_log_t)qword_1008F76C8, OS_LOG_TYPE_DEFAULT))
    {
      int v60 = *(_DWORD *)(a1 + 260);
      *(_DWORD *)int buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v60;
      _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEFAULT,  "Overriding fContactTracingScanDelta with %d seconds",  buf,  8u);
    }
  }

  uint64_t v48 = *((void *)a3 + 1);
  if (v48 != 14)
  {
LABEL_115:
    if (v48 != 16) {
      goto LABEL_128;
    }
    char v44 = *(unsigned __int8 **)a3;
LABEL_117:
    uint64_t v53 = *(void *)v44;
    uint64_t v52 = *((void *)v44 + 1);
    if (v53 != 0x75616E5553434E41LL || v52 != 0x64657A69726F6874LL) {
      goto LABEL_128;
    }
    goto LABEL_122;
  }

  int v46 = *(uint64_t **)a3;
  uint64_t v45 = 1;
LABEL_109:
  uint64_t v49 = *v46;
  uint64_t v50 = *(uint64_t *)((char *)v46 + 6);
  if (v49 != 0x6874754153434E41LL || v50 != 0x64657A69726F6874LL)
  {
    if (!v45) {
      goto LABEL_128;
    }
    uint64_t v48 = *((void *)a3 + 1);
    goto LABEL_115;
  }

uint64_t sub_100139244(void *a1)
{
  if (!a1) {
    sub_1001EE2A0();
  }
  off_1008E27B0 = a1;
  byte_1008E27B8 = 1;
  sub_1001ED90C(off_100884C58);
  return 0LL;
}

void sub_10013928C(uint64_t a1)
{
  if (byte_1008E27B8 == 1) {
    sub_1001EDAF0((void (**)(uint64_t))off_100884C58, a1);
  }
}

uint64_t sub_1001392B0()
{
  byte_1008E27B8 = 0;
  uint64_t v0 = (uint64_t (*)(void))off_1008E27B0;
  off_1008E27B0 = 0LL;
  if (v0) {
    return v0();
  }
  return result;
}

void sub_1001392D0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E27A1)
  {
    byte_1008F6D8C = 1;
    uint64_t v8 = sub_1001214B4(81, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, dword_1008E27A4);
    byte_1008F6D8C = 0;
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if ((_DWORD)v8 != 628 && sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_WriteClassofDevice failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
        uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_10013A410(v9);
    }
  }

  else
  {
    sub_10013A410(0LL);
  }

void sub_10013939C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E27A8)
  {
    byte_1008F6D8C = 1;
    uint64_t v8 = sub_1001214B4(59, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E27A9);
    byte_1008F6D8C = 0;
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if ((_DWORD)v8 != 628 && sub_1000A86F0())
      {
        sub_1001EE134((uint64_t)"OI_HCICMD_WritePINType failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
        uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_10013A410(v9);
    }
  }

  else
  {
    sub_10013A410(0LL);
  }

void sub_100139468( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(67, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_1008E2688);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteConnectionAcceptTimeout failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_100139514( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(69, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_1008E268C);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WritePageTimeout failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_1001395C0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(71, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E2698);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteScanEnable failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_10013966C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(73, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_1008E268E);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WritePageScanActivity failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_100139720( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(75, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_1008E2692);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteInquiryScanActivity failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_1001397D4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(77, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E2699);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteAuthenticationEnable failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_100139880( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(79, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E269A);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteEncryptionMode failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_10013992C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(83, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_1008E268A);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteVoiceSetting failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_1001399D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(87, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E269B);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_HCICMD_WriteNumBroadcastRetransmissions failed %!",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_100139A84( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(89, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E269C);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteHoldModeActivity failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_100139B30( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(92, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E269D);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteSCOFlowControlEnable failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_100139BDC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(102, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E269E);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WritePageScanPeriodMode failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_100139C88( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(104, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E269F);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WritePageScanMode failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_100139D34( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(107, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E26A0);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteInquiryScanType failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_100139DE0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(109, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E26A1);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteInquiryMode failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_100139E8C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(111, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E26A2);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WritePageScanType failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_100139F38( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(113, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E26A3);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteAfhChannelAssessmentMode failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_100139FE4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(51, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_1008E2696);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_HCICMD_WriteDefaultLinkPolicySettings failed %!",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_10013A090( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(105, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, (uint64_t)&qword_1008E26A4);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_HCICMD_SetAfhHostChannelClassification failed %!",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_10013A13C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(118, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E26AE);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteSimplePairingMode failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_10013A1E8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(124, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E26AF);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"OI_HCICMD_WriteDefaultErroneousDataReporting failed %!",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_10013A294( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_1008F6D8C = 1;
  uint64_t v8 = sub_1001214B4(115, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E26B0);
  byte_1008F6D8C = 0;
  if ((_DWORD)v8)
  {
    uint64_t v9 = v8;
    if ((_DWORD)v8 != 628 && sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"OI_HCICMD_WriteExtendedInquiryResponse failed %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_10013A410(v9);
  }

void sub_10013A344( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_1008E27AA)
  {
    byte_1008F6D8C = 1;
    uint64_t v8 = sub_1001214B4(121, (uint64_t)sub_10013A410, a3, a4, a5, a6, a7, a8, byte_1008E27AB);
    byte_1008F6D8C = 0;
    if ((_DWORD)v8)
    {
      uint64_t v9 = v8;
      if ((_DWORD)v8 != 628 && sub_1000A86F0())
      {
        sub_1001EE134( (uint64_t)"OI_HCICMD_WriteInquiryResponseTxPowerLevel failed %!",  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v9);
        uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100657858();
        }
      }

      sub_10013A410(v9);
    }
  }

  else
  {
    sub_10013A410(0LL);
  }

void sub_10013A410(uint64_t a1)
{
  if ((byte_1008E27B8 & 1) != 0)
  {
    if ((_DWORD)a1 == 628)
    {
LABEL_19:
      sub_1001EDA8C((uint64_t)off_100884C58);
      return;
    }

    if ((_DWORD)a1 == 717)
    {
      sub_1001EE134((uint64_t)"Unsupported command %!, ignoring error", v2, v3, v4, v5, v6, v7, v8, 717LL);
      uint64_t v9 = (os_log_s *)sub_100086554(0x2Eu);
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_19;
      }
      goto LABEL_6;
    }

    if ((a1 - 701) <= 0x44)
    {
      sub_1001EE134((uint64_t)"Assuming unsupported command %!, ignoring error", v18, v19, v20, v21, v22, v23, v24, a1);
      uint64_t v25 = (os_log_s *)sub_100086554(0x2Eu);
      if (!os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        goto LABEL_19;
      }
LABEL_6:
      sub_100657858();
      goto LABEL_19;
    }

    if (!(_DWORD)a1) {
      goto LABEL_19;
    }
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"commonRestoreCb %!", v26, v27, v28, v29, v30, v31, v32, a1);
      BOOL v33 = (os_log_s *)sub_100086554(0x2Eu);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    sub_1001EDAF0((void (**)(uint64_t))off_100884C58, a1);
  }

  else if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"Orphaned parm chache callback", v10, v11, v12, v13, v14, v15, v16, v34);
    uint32_t v17 = (os_log_s *)sub_100086554(0x2Eu);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_100657858();
    }
  }

void sub_10013A594(uint64_t a1, void (*a2)(uint64_t))
{
  if ((_DWORD)a1
    && sub_1000A86F0()
    && (sub_1001EE134((uint64_t)"status %d, hlCb 0x%x", v4, v5, v6, v7, v8, v9, v10, a1),
        uint64_t v11 = (os_log_s *)sub_100086554(0x54u),
        os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)))
  {
    sub_100657F74();
    if (!a2) {
      return;
    }
  }

  else if (!a2)
  {
    return;
  }

  a2(a1);
}

void sub_10013A61C(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %d, Byte 0x%x, hlCb 0x%x", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 0LL;
    if (a2) {
      goto LABEL_6;
    }
    return;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_14;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_14:
    uint64_t v16 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_16;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v16 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_16:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 66, v16);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if (a2) {
LABEL_6:
  }
    a2(a1, v13);
}

void sub_10013A728(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      unsigned int v15 = *((unsigned __int16 *)a3 + 5);
      uint64_t v16 = *((unsigned __int16 *)a3 + 6);
      if (v15 > v16)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v17 = *a3;
          *((_WORD *)a3 + 6) = v16 + 1;
          if (v15 <= (int)v16 + 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  84,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          uint64_t v13 = *(unsigned __int8 *)(v17 + v16);
          *((_WORD *)a3 + 6) = v16 + 2;
          uint64_t v14 = *(unsigned __int8 *)(v17 + v16 + 1);
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        uint64_t v18 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_17:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 83, v18);
      }
    }

    uint64_t v18 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_17;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"status %d,  Byte 0x%x, Byte1 0x%x, hlCb 0x%x", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14);
}

void sub_10013A864(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      unsigned int v16 = *((unsigned __int16 *)a3 + 5);
      uint64_t v17 = *((unsigned __int16 *)a3 + 6);
      if (v16 > v17)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v18 = *a3;
          *((_WORD *)a3 + 6) = v17 + 1;
          if (v16 <= (int)v17 + 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  103,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          uint64_t v13 = *(unsigned __int8 *)(v18 + v17);
          *((_WORD *)a3 + 6) = v17 + 2;
          if (v16 <= (int)v17 + 2) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  104,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          uint64_t v14 = *(unsigned __int8 *)(v18 + v17 + 1);
          *((_WORD *)a3 + 6) = v17 + 3;
          uint64_t v15 = *(unsigned __int8 *)(v18 + v17 + 2);
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        uint64_t v19 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_18:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 102, v19);
      }
    }

    uint64_t v19 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_18;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"status %d,  Byte 0x%x, Byte1 0x%x, Byte2 0x%x, hlCb 0x%x", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14, v15);
}

void sub_10013A9D8(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      unsigned int v15 = *((unsigned __int16 *)a3 + 5);
      uint64_t v16 = *((unsigned __int16 *)a3 + 6);
      if ((int)(v15 - v16) > 1)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v17 = *a3;
          uint64_t v18 = (unsigned __int8 *)(*a3 + v16);
          int v19 = *v18;
          int v20 = v18[1];
          *((_WORD *)a3 + 6) = v16 + 2;
          if (v15 <= (unsigned __int16)(v16 + 2)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  123,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          uint64_t v13 = v19 | (v20 << 8);
          *((_WORD *)a3 + 6) = v16 + 3;
          uint64_t v14 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v16 + 2));
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        uint64_t v21 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_17:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 122, v21);
      }
    }

    uint64_t v21 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_17;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"status %d, ConnectionHandle 0x%x, Byte 0x%x, hlCb 0x%x", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14);
}

void sub_10013AB28(uint64_t a1, void (*a2)(uint64_t, void, void, uint64_t, void), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      int v17 = *((unsigned __int16 *)a3 + 5);
      uint64_t v18 = *((unsigned __int16 *)a3 + 6);
      if (v17 - (int)v18 > 1)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v19 = *a3;
          unsigned __int16 v13 = *(_WORD *)(*a3 + v18);
          *((_WORD *)a3 + 6) = v18 + 2;
          if (v17 - (unsigned __int16)(v18 + 2) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  141,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          unsigned __int16 v14 = *(_WORD *)(v19 + (unsigned __int16)(v18 + 2));
          *((_WORD *)a3 + 6) = v18 + 4;
          if (v17 - (unsigned __int16)(v18 + 4) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  142,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          int v20 = (unsigned __int8 *)(v19 + (unsigned __int16)(v18 + 4));
          int v21 = *v20;
          int v22 = v20[1];
          *((_WORD *)a3 + 6) = v18 + 6;
          if (v17 - (unsigned __int16)(v18 + 6) <= 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  143,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          uint64_t v15 = v21 | (v22 << 8);
          unsigned __int16 v16 = *(_WORD *)(v19 + (unsigned __int16)(v18 + 6));
          *((_WORD *)a3 + 6) = v18 + 8;
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        uint64_t v23 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 140, v23);
      }
    }

    uint64_t v23 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_19;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134( (uint64_t)"status %!, transmitting %d, receiving %d, sleep %d, others %d",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  unsigned __int16 v13 = 0;
  unsigned __int16 v14 = 0;
  uint64_t v15 = 0LL;
  unsigned __int16 v16 = 0;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14, v15, v16);
}

uint64_t sub_10013ACFC(uint64_t a1, uint64_t (*a2)(uint64_t, _DWORD *), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"EnhancedProfilingStats VSC failed with status %!", v4, v5, v6, v7, v8, v9, v10, a1);
      uint64_t v11 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    unsigned int v12 = 0;
    int v13 = 0;
    int v14 = 0;
    int v15 = 0;
    int v16 = 0;
    int v17 = 0;
    int v18 = 0;
    int v19 = 0;
    int v20 = 0;
    int v21 = 0;
    int v69 = 0;
    int v70 = 0;
    uint64_t v82 = 0LL;
    uint64_t v83 = 0LL;
    int v22 = 0;
    int v23 = 0;
    int v24 = 0;
    int v25 = 0;
    int v26 = 0;
    int v27 = 0;
    int v28 = 0;
    int v72 = 0;
    int v73 = 0;
    uint64_t v75 = 0LL;
    uint64_t v76 = 0LL;
    unint64_t v77 = 0LL;
    uint64_t v78 = 0LL;
    uint64_t v80 = 0LL;
    uint64_t v81 = 0LL;
    uint64_t v79 = 0LL;
    int v29 = 0;
    uint64_t v85 = 0LL;
    uint64_t v86 = 0LL;
    int v30 = 0;
    uint64_t v74 = 0LL;
    int v71 = 0;
    int v68 = 0;
    int v31 = 0;
    int v32 = 0;
    int v33 = 0;
    int v34 = 0;
    int v35 = 0;
    int v36 = 0;
    int v37 = 0;
    uint64_t result = 0LL;
    uint64_t v39 = 0LL;
    goto LABEL_80;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_85;
  }

  unsigned int v40 = *((unsigned __int16 *)a3 + 5);
  uint64_t v41 = *((unsigned __int16 *)a3 + 6);
  if (v40 <= v41)
  {
LABEL_85:
    uint64_t v65 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_87;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v65 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_87:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 173, v65);
  }

  uint64_t v42 = *a3;
  *((_WORD *)a3 + 6) = v41 + 1;
  if ((int)(v40 - (v41 + 1)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  176,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  unsigned int v12 = *(unsigned __int8 *)(v42 + v41);
  int v67 = *(unsigned __int16 *)(v42 + v41 + 1);
  *((_WORD *)a3 + 6) = v41 + 3;
  if ((int)(v40 - (unsigned __int16)(v41 + 3)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  179,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  int v66 = *(unsigned __int16 *)(v42 + (unsigned __int16)(v41 + 3));
  *((_WORD *)a3 + 6) = v41 + 5;
  if ((int)(v40 - (unsigned __int16)(v41 + 5)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  182,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  int v15 = *(unsigned __int16 *)(v42 + (unsigned __int16)(v41 + 5));
  *((_WORD *)a3 + 6) = v41 + 7;
  if ((int)(v40 - (unsigned __int16)(v41 + 7)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  185,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  int v16 = *(unsigned __int16 *)(v42 + (unsigned __int16)(v41 + 7));
  *((_WORD *)a3 + 6) = v41 + 9;
  if ((int)(v40 - (unsigned __int16)(v41 + 9)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  188,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v43 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 9));
  *((_WORD *)a3 + 6) = v41 + 13;
  if ((int)(v40 - (unsigned __int16)(v41 + 13)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  189,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v18 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 13));
  *((_WORD *)a3 + 6) = v41 + 17;
  if ((int)(v40 - (unsigned __int16)(v41 + 17)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  190,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v19 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 17));
  *((_WORD *)a3 + 6) = v41 + 21;
  if ((int)(v40 - (unsigned __int16)(v41 + 21)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  191,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v20 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 21));
  *((_WORD *)a3 + 6) = v41 + 25;
  if ((int)(v40 - (unsigned __int16)(v41 + 25)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  192,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v44 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 25));
  *((_WORD *)a3 + 6) = v41 + 29;
  if ((int)(v40 - (unsigned __int16)(v41 + 29)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  193,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v45 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 29));
  *((_WORD *)a3 + 6) = v41 + 33;
  if ((int)(v40 - (unsigned __int16)(v41 + 33)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  194,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v46 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 33));
  *((_WORD *)a3 + 6) = v41 + 37;
  if ((int)(v40 - (unsigned __int16)(v41 + 37)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  195,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v47 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 37));
  *((_WORD *)a3 + 6) = v41 + 41;
  if ((int)(v40 - (unsigned __int16)(v41 + 41)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  196,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v22 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 41));
  *((_WORD *)a3 + 6) = v41 + 45;
  if ((int)(v40 - (unsigned __int16)(v41 + 45)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  197,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v23 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 45));
  *((_WORD *)a3 + 6) = v41 + 49;
  if ((int)(v40 - (unsigned __int16)(v41 + 49)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  198,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v24 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 49));
  *((_WORD *)a3 + 6) = v41 + 53;
  if ((int)(v40 - (unsigned __int16)(v41 + 53)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  199,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v25 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 53));
  *((_WORD *)a3 + 6) = v41 + 57;
  if ((int)(v40 - (unsigned __int16)(v41 + 57)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  200,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v26 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 57));
  *((_WORD *)a3 + 6) = v41 + 61;
  if ((int)(v40 - (unsigned __int16)(v41 + 61)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  201,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v27 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 61));
  *((_WORD *)a3 + 6) = v41 + 65;
  if ((int)(v40 - (unsigned __int16)(v41 + 65)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  202,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v28 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 65));
  *((_WORD *)a3 + 6) = v41 + 69;
  if ((int)(v40 - (unsigned __int16)(v41 + 69)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  203,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v48 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 69));
  *((_WORD *)a3 + 6) = v41 + 73;
  if ((int)(v40 - (unsigned __int16)(v41 + 73)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  204,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v49 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 73));
  *((_WORD *)a3 + 6) = v41 + 77;
  if ((int)(v40 - (unsigned __int16)(v41 + 77)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  205,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v50 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 77));
  *((_WORD *)a3 + 6) = v41 + 81;
  if ((int)(v40 - (unsigned __int16)(v41 + 81)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  206,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  HIDWORD(v83) = v47;
  unsigned int v51 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 81));
  *((_WORD *)a3 + 6) = v41 + 85;
  if ((int)(v40 - (unsigned __int16)(v41 + 85)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  207,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v52 = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 85));
  *((_WORD *)a3 + 6) = v41 + 89;
  if ((int)(v40 - (unsigned __int16)(v41 + 89)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  208,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  LODWORD(v83) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 89));
  *((_WORD *)a3 + 6) = v41 + 93;
  if ((int)(v40 - (unsigned __int16)(v41 + 93)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  209,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  HIDWORD(v82) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 93));
  *((_WORD *)a3 + 6) = v41 + 97;
  if ((int)(v40 - (unsigned __int16)(v41 + 97)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  210,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  LODWORD(v82) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 97));
  *((_WORD *)a3 + 6) = v41 + 101;
  if ((int)(v40 - (unsigned __int16)(v41 + 101)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  211,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  HIDWORD(v81) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 101));
  *((_WORD *)a3 + 6) = v41 + 105;
  if ((int)(v40 - (unsigned __int16)(v41 + 105)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  212,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  LODWORD(v81) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 105));
  *((_WORD *)a3 + 6) = v41 + 109;
  if ((int)(v40 - (unsigned __int16)(v41 + 109)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  213,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  HIDWORD(v80) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 109));
  *((_WORD *)a3 + 6) = v41 + 113;
  if ((int)(v40 - (unsigned __int16)(v41 + 113)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  214,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  LODWORD(v80) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 113));
  *((_WORD *)a3 + 6) = v41 + 117;
  if ((int)(v40 - (unsigned __int16)(v41 + 117)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  215,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  HIDWORD(v79) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 117));
  *((_WORD *)a3 + 6) = v41 + 121;
  if ((int)(v40 - (unsigned __int16)(v41 + 121)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  216,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  LODWORD(v79) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 121));
  *((_WORD *)a3 + 6) = v41 + 125;
  if ((int)(v40 - (unsigned __int16)(v41 + 125)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  217,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  HIDWORD(v78) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 125));
  *((_WORD *)a3 + 6) = v41 + 129;
  if ((int)(v40 - (unsigned __int16)(v41 + 129)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  218,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  LODWORD(v78) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 129));
  *((_WORD *)a3 + 6) = v41 + 133;
  if ((int)(v40 - (unsigned __int16)(v41 + 133)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  219,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  HIDWORD(v76) = v52;
  unint64_t v77 = __PAIR64__(v50, v51);
  LODWORD(v76) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 133));
  *((_WORD *)a3 + 6) = v41 + 137;
  if ((int)(v40 - (unsigned __int16)(v41 + 137)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  220,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v29 = 0;
  LODWORD(v75) = *(_DWORD *)(v42 + (unsigned __int16)(v41 + 137));
  HIDWORD(v75) = v49;
  unsigned __int16 v53 = v41 + 141;
  *((_WORD *)a3 + 6) = v41 + 141;
  if (v12 > 0x16)
  {
    uint64_t v86 = 0LL;
    uint64_t v85 = 0LL;
  }

  else
  {
    uint64_t v86 = 0LL;
    uint64_t v85 = 0LL;
    if (((1 << v12) & 0x5A0000) != 0)
    {
      if ((int)(v40 - v53) <= 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  226,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
      }
      int v29 = *(unsigned __int16 *)(v42 + (unsigned __int16)(v41 + 141));
      *((_WORD *)a3 + 6) = v41 + 143;
      if ((int)(v40 - (unsigned __int16)(v41 + 143)) <= 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  228,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
      }
      int v54 = *(unsigned __int16 *)(v42 + (unsigned __int16)(v41 + 143));
      *((_WORD *)a3 + 6) = v41 + 145;
      if ((int)(v40 - (unsigned __int16)(v41 + 145)) <= 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  230,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
      }
      LODWORD(v86) = *(unsigned __int16 *)(v42 + (unsigned __int16)(v41 + 145));
      HIDWORD(v86) = v54;
      *((_WORD *)a3 + 6) = v41 + 147;
      if ((int)(v40 - (unsigned __int16)(v41 + 147)) <= 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  232,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
      }
      uint64_t v55 = (unsigned __int8 *)(v42 + (unsigned __int16)(v41 + 147));
      int v56 = *v55;
      int v57 = v55[1];
      *((_WORD *)a3 + 6) = v41 + 149;
      if ((int)(v40 - (unsigned __int16)(v41 + 149)) <= 1) {
        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  234,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
      }
      LODWORD(v85) = *(unsigned __int16 *)(v42 + (unsigned __int16)(v41 + 149));
      HIDWORD(v85) = v56 | (v57 << 8);
      unsigned __int16 v53 = v41 + 151;
      *((_WORD *)a3 + 6) = v41 + 151;
    }
  }

  int v30 = 0;
  if (v12 <= 0x16 && ((1 << v12) & 0x580000) != 0)
  {
    if ((int)(v40 - v53) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  240,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    int v30 = *(unsigned __int16 *)(v42 + v53);
    *((_WORD *)a3 + 6) = v53 + 2;
    if ((int)(v40 - (unsigned __int16)(v53 + 2)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  242,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    HIDWORD(v74) = *(unsigned __int16 *)(v42 + (unsigned __int16)(v53 + 2));
    *((_WORD *)a3 + 6) = v53 + 4;
    if ((int)(v40 - (unsigned __int16)(v53 + 4)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  244,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    LODWORD(v74) = *(unsigned __int16 *)(v42 + (unsigned __int16)(v53 + 4));
    *((_WORD *)a3 + 6) = v53 + 6;
    if ((int)(v40 - (unsigned __int16)(v53 + 6)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  246,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    uint64_t v58 = (unsigned __int8 *)(v42 + (unsigned __int16)(v53 + 6));
    int v59 = *v58;
    int v60 = v58[1];
    *((_WORD *)a3 + 6) = v53 + 8;
    if ((int)(v40 - (unsigned __int16)(v53 + 8)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  248,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    int v61 = v59 | (v60 << 8);
    int v71 = *(unsigned __int16 *)(v42 + (unsigned __int16)(v53 + 8));
    v53 += 10;
    *((_WORD *)a3 + 6) = v53;
  }

  else
  {
    uint64_t v74 = 0LL;
    int v61 = 0;
    int v71 = 0;
  }

  int v72 = v61;
  int v73 = v48;
  if ((v12 | 2) == 0x16)
  {
    if ((int)(v40 - v53) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  261,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    uint64_t v62 = (unsigned __int8 *)(v42 + v53);
    int v63 = *v62;
    int v64 = v62[1];
    *((_WORD *)a3 + 6) = v53 + 2;
    if ((int)(v40 - (unsigned __int16)(v53 + 2)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  262,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    int v68 = v63 | (v64 << 8);
    int v31 = *(unsigned __int16 *)(v42 + (unsigned __int16)(v53 + 2));
    v53 += 4;
    *((_WORD *)a3 + 6) = v53;
  }

  else
  {
    int v68 = 0;
    int v31 = 0;
  }

  int v69 = v46;
  int v70 = v45;
  if (v12 == 22)
  {
    if ((int)(v40 - v53) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  268,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    int v32 = *(_DWORD *)(v42 + v53);
    *((_WORD *)a3 + 6) = v53 + 4;
    if ((int)(v40 - (unsigned __int16)(v53 + 4)) <= 3) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  270,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    int v33 = *(_DWORD *)(v42 + (unsigned __int16)(v53 + 4));
    *((_WORD *)a3 + 6) = v53 + 8;
    if ((int)(v40 - (unsigned __int16)(v53 + 8)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  272,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    int v34 = *(unsigned __int16 *)(v42 + (unsigned __int16)(v53 + 8));
    *((_WORD *)a3 + 6) = v53 + 10;
    if ((int)(v40 - (unsigned __int16)(v53 + 10)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  274,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    int v21 = v44;
    int v35 = *(unsigned __int16 *)(v42 + (unsigned __int16)(v53 + 10));
    *((_WORD *)a3 + 6) = v53 + 12;
    if ((int)(v40 - (unsigned __int16)(v53 + 12)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  276,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    int v36 = *(unsigned __int16 *)(v42 + (unsigned __int16)(v53 + 12));
    *((_WORD *)a3 + 6) = v53 + 14;
    if ((int)(v40 - (unsigned __int16)(v53 + 14)) <= 1) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  278,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    int v17 = v43;
    int v37 = *(unsigned __int16 *)(v42 + (unsigned __int16)(v53 + 14));
    *((_WORD *)a3 + 6) = v53 + 16;
    if ((int)(v40 - (unsigned __int16)(v53 + 16)) <= 7) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  280,  "ByteStream_NumReadBytesAvail(*pBs) >= 8");
    }
    uint64_t result = *(void *)(v42 + (unsigned __int16)(v53 + 16));
    *((_WORD *)a3 + 6) = v53 + 24;
    if ((int)(v40 - (unsigned __int16)(v53 + 24)) <= 7) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  282,  "ByteStream_NumReadBytesAvail(*pBs) >= 8");
    }
    uint64_t v39 = *(void *)(v42 + (unsigned __int16)(v53 + 24));
    *((_WORD *)a3 + 6) = v53 + 32;
    unsigned int v12 = 22;
  }

  else
  {
    int v21 = v44;
    int v17 = v43;
    int v32 = 0;
    int v33 = 0;
    int v34 = 0;
    int v35 = 0;
    int v36 = 0;
    int v37 = 0;
    uint64_t result = 0LL;
    uint64_t v39 = 0LL;
  }

  int v14 = v66;
  int v13 = v67;
LABEL_80:
  if (a2)
  {
    v88[0] = v12;
    v88[1] = v13;
    v88[2] = v14;
    v88[3] = v15;
    v88[4] = v16;
    v88[5] = v17;
    v88[6] = v18;
    v88[7] = v19;
    v88[8] = v20;
    v88[9] = v21;
    v88[10] = v70;
    v88[11] = v69;
    v88[12] = HIDWORD(v83);
    v88[13] = v22;
    v88[14] = v23;
    v88[15] = v24;
    v88[16] = v25;
    v88[17] = v26;
    v88[18] = v27;
    v88[19] = v28;
    v88[20] = v73;
    v88[21] = HIDWORD(v75);
    v88[22] = HIDWORD(v77);
    v88[23] = v77;
    v88[24] = HIDWORD(v76);
    v88[25] = v83;
    v88[26] = HIDWORD(v82);
    v88[27] = v82;
    v88[28] = HIDWORD(v81);
    v88[29] = v81;
    v88[30] = HIDWORD(v80);
    v88[31] = v80;
    v88[32] = HIDWORD(v79);
    v88[33] = v79;
    v88[34] = HIDWORD(v78);
    v88[35] = v78;
    v88[36] = v76;
    v88[37] = v75;
    v88[38] = v29;
    v88[39] = HIDWORD(v86);
    v88[40] = v86;
    v88[41] = HIDWORD(v85);
    v88[42] = v85;
    v88[43] = v30;
    v88[44] = HIDWORD(v74);
    v88[45] = v74;
    v88[46] = v72;
    v88[47] = v71;
    v88[48] = v68;
    v88[49] = v31;
    v88[50] = v32;
    v88[51] = v33;
    v88[52] = v34;
    v88[53] = v35;
    v88[54] = v36;
    v88[55] = v37;
    uint64_t v89 = result;
    uint64_t v90 = v39;
    return a2(a1, v88);
  }

  return result;
}

void sub_10013BCC8( uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134( (uint64_t)"status %!, iPACounter %d, ePACounter %d, iPAThreadCounter %d, ePAThreadCounter %d",  v5,  v6,  v7,  v8,  v9,  v10,  v11,  a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 0LL;
    uint64_t v14 = 0LL;
    goto LABEL_15;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_19;
  }

  uint64_t v15 = *((unsigned __int16 *)a3 + 5);
  uint64_t v16 = *((unsigned __int16 *)a3 + 6);
  if ((int)v15 - (int)v16 <= 3)
  {
LABEL_19:
    int v21 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    goto LABEL_21;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v21 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_21:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 311, v21);
  }

  uint64_t v17 = *a3;
  uint64_t v13 = *(unsigned int *)(*a3 + v16);
  *((_WORD *)a3 + 6) = v16 + 4;
  if ((int)(v15 - (unsigned __int16)(v16 + 4)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  312,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  uint64_t v14 = *(unsigned int *)(v17 + (unsigned __int16)(v16 + 4));
  *((_WORD *)a3 + 6) = v16 + 8;
  if (v15 - (unsigned __int16)(v16 + 8) != 8)
  {
LABEL_15:
    uint64_t v19 = 0LL;
    uint64_t v20 = 0LL;
    if (!a2) {
      return;
    }
    goto LABEL_16;
  }

  uint64_t v18 = (unsigned __int16)(v16 + 8);
  if ((int)v15 - (int)v18 <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  316,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  uint64_t v19 = *(unsigned int *)(v17 + v18);
  *((_WORD *)a3 + 6) = v16 + 12;
  if ((int)(v15 - (unsigned __int16)(v16 + 12)) <= 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  317,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  uint64_t v20 = *(unsigned int *)(v17 + (unsigned __int16)(v16 + 12));
  *((_WORD *)a3 + 6) = v16 + 16;
  if (a2) {
LABEL_16:
  }
    a2(a1, v13, v14, v19, v20);
}

void sub_10013BE9C(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 0LL;
    if (a2) {
      goto LABEL_6;
    }
    return;
  }

  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_14;
  }

  uint64_t v14 = *(unsigned __int16 *)(a3 + 12);
  if (*(unsigned __int16 *)(a3 + 10) - (int)v14 <= 3)
  {
LABEL_14:
    uint64_t v15 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    goto LABEL_16;
  }

  if (*(_BYTE *)(a3 + 14) != 1)
  {
    uint64_t v15 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_16:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 336, v15);
  }

  uint64_t v13 = *(unsigned int *)(*(void *)a3 + v14);
  *(_WORD *)(a3 + 12) = v14 + 4;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13);
}

void sub_10013BFA8(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      int v15 = *((unsigned __int16 *)a3 + 5);
      uint64_t v16 = *((unsigned __int16 *)a3 + 6);
      if (v15 - (int)v16 > 1)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v17 = *a3;
          uint64_t v18 = (unsigned __int8 *)(*a3 + v16);
          int v19 = *v18;
          int v20 = v18[1];
          *((_WORD *)a3 + 6) = v16 + 2;
          if (v15 - (unsigned __int16)(v16 + 2) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  355,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v13 = v19 | (v20 << 8);
          uint64_t v14 = *(unsigned int *)(v17 + (unsigned __int16)(v16 + 2));
          *((_WORD *)a3 + 6) = v16 + 6;
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        int v21 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_17:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 354, v21);
      }
    }

    int v21 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_17;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
    unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14);
}

void sub_10013C0FC(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      unsigned int v16 = *((unsigned __int16 *)a3 + 5);
      uint64_t v17 = *((unsigned __int16 *)a3 + 6);
      if (v16 > v17)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v18 = *a3;
          *((_WORD *)a3 + 6) = v17 + 1;
          if (v16 <= (int)v17 + 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  373,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          uint64_t v13 = *(unsigned __int8 *)(v18 + v17);
          *((_WORD *)a3 + 6) = v17 + 2;
          if (v16 <= (int)v17 + 2) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  374,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          uint64_t v14 = *(unsigned __int8 *)(v18 + v17 + 1);
          *((_WORD *)a3 + 6) = v17 + 3;
          uint64_t v15 = *(unsigned __int8 *)(v18 + v17 + 2);
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        int v19 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_18:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 372, v19);
      }
    }

    int v19 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_18;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
    unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14, v15);
}

void sub_10013C268(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_10;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_18;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_18:
    int v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_20;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_20:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 391, v24);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 1) {
    goto LABEL_12;
  }
LABEL_10:
  if (!sub_1000A86F0()
    || (sub_1001EE134((uint64_t)"SubOpcode Incorrect %!", v16, v17, v18, v19, v20, v21, v22, a1),
        int v23 = (os_log_s *)sub_100086554(0x54u),
        !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
LABEL_12:
    if (!a2) {
      return;
    }
    goto LABEL_13;
  }

  sub_100657F74();
  if (a2) {
LABEL_13:
  }
    a2(a1, v13);
}

void sub_10013C3C4( uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    uint64_t v14 = 255LL;
    uint64_t v15 = 255LL;
    uint64_t v16 = 255LL;
    goto LABEL_13;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_21;
  }

  unsigned int v17 = *((unsigned __int16 *)a3 + 5);
  uint64_t v18 = *((unsigned __int16 *)a3 + 6);
  if (v17 <= v18)
  {
LABEL_21:
    int v28 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_23;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v28 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_23:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 414, v28);
  }

  uint64_t v19 = *a3;
  *((_WORD *)a3 + 6) = v18 + 1;
  if (v17 <= (int)v18 + 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  415,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v16 = *(unsigned __int8 *)(v19 + v18);
  *((_WORD *)a3 + 6) = v18 + 2;
  if (v17 <= (int)v18 + 2) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  416,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v15 = *(unsigned __int8 *)(v19 + v18 + 1);
  *((_WORD *)a3 + 6) = v18 + 3;
  if (v17 <= (int)v18 + 3) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  417,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v14 = *(unsigned __int8 *)(v19 + v18 + 2);
  *((_WORD *)a3 + 6) = v18 + 4;
  uint64_t v13 = *(unsigned __int8 *)(v19 + v18 + 3);
  if ((_DWORD)v16 == 13)
  {
LABEL_15:
    if (!a2) {
      return;
    }
    goto LABEL_16;
  }

void sub_10013C5CC( uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    unsigned __int16 v13 = 0;
    uint64_t v14 = 0LL;
    uint64_t v15 = 0LL;
    uint64_t v16 = 255LL;
    goto LABEL_13;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_21;
  }

  unsigned int v17 = *((unsigned __int16 *)a3 + 5);
  uint64_t v18 = *((unsigned __int16 *)a3 + 6);
  if (v17 <= v18)
  {
LABEL_21:
    int v28 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_23;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v28 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_23:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 440, v28);
  }

  uint64_t v19 = *a3;
  *((_WORD *)a3 + 6) = v18 + 1;
  if (v17 <= (unsigned __int16)(v18 + 1)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  441,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v16 = *(unsigned __int8 *)(v19 + v18);
  *((_WORD *)a3 + 6) = v18 + 2;
  if (v17 <= (unsigned __int16)(v18 + 2)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  442,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v15 = *(unsigned __int8 *)(v19 + v18 + 1);
  *((_WORD *)a3 + 6) = v18 + 3;
  if ((int)(v17 - (v18 + 3)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  443,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v14 = *(unsigned __int8 *)(v19 + v18 + 2);
  unsigned __int16 v13 = *(_WORD *)(v19 + v18 + 3);
  *((_WORD *)a3 + 6) = v18 + 5;
  if ((_DWORD)v16 == 2)
  {
LABEL_15:
    if (!a2) {
      return;
    }
    goto LABEL_16;
  }

void sub_10013C7D8(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_10;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_18;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_18:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_20;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_20:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 463, v24);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 3) {
    goto LABEL_12;
  }
LABEL_10:
  if (!sub_1000A86F0()
    || (sub_1001EE134((uint64_t)"SubOpcode Incorrect %!", v16, v17, v18, v19, v20, v21, v22, a1),
        uint64_t v23 = (os_log_s *)sub_100086554(0x54u),
        !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
LABEL_12:
    if (!a2) {
      return;
    }
    goto LABEL_13;
  }

  sub_100657F74();
  if (a2) {
LABEL_13:
  }
    a2(a1, v13);
}

uint64_t sub_10013C934(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_12;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_19;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_19:
    uint64_t v25 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_21;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v25 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_21:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 483, v25);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 12)
  {
    uint64_t result = 0LL;
    if (!a2) {
      return result;
    }
    return a2(result);
  }

void sub_10013CA88(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_10;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_18;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_18:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_20;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_20:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 505, v24);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 7) {
    goto LABEL_12;
  }
LABEL_10:
  if (!sub_1000A86F0()
    || (sub_1001EE134((uint64_t)"SubOpcode Incorrect %!", v16, v17, v18, v19, v20, v21, v22, a1),
        uint64_t v23 = (os_log_s *)sub_100086554(0x54u),
        !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
LABEL_12:
    if (!a2) {
      return;
    }
    goto LABEL_13;
  }

  sub_100657F74();
  if (a2) {
LABEL_13:
  }
    a2(a1, v13);
}

void sub_10013CBE4(uint64_t a1, void (*a2)(uint64_t))
{
  if ((_DWORD)a1
    && sub_1000A86F0()
    && (sub_1001EE134((uint64_t)"status %!", v4, v5, v6, v7, v8, v9, v10, a1),
        uint64_t v11 = (os_log_s *)sub_100086554(0x54u),
        os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)))
  {
    sub_100657F74();
    if (!a2) {
      return;
    }
  }

  else if (!a2)
  {
    return;
  }

  a2(a1);
}

void sub_10013CC6C(uint64_t a1, void (*a2)(uint64_t))
{
  if ((_DWORD)a1
    && sub_1000A86F0()
    && (sub_1001EE134((uint64_t)"status %!", v4, v5, v6, v7, v8, v9, v10, a1),
        uint64_t v11 = (os_log_s *)sub_100086554(0x54u),
        os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)))
  {
    sub_100657F74();
    if (!a2) {
      return;
    }
  }

  else if (!a2)
  {
    return;
  }

  a2(a1);
}

void sub_10013CCF4(uint64_t a1, void (*a2)(uint64_t))
{
  if ((_DWORD)a1
    && sub_1000A86F0()
    && (sub_1001EE134((uint64_t)"status %!", v4, v5, v6, v7, v8, v9, v10, a1),
        uint64_t v11 = (os_log_s *)sub_100086554(0x54u),
        os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)))
  {
    sub_100657F74();
    if (!a2) {
      return;
    }
  }

  else if (!a2)
  {
    return;
  }

  a2(a1);
}

void sub_10013CD7C(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_10;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_18;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_18:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_20;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_20:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 564, v24);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 4) {
    goto LABEL_12;
  }
LABEL_10:
  if (!sub_1000A86F0()
    || (sub_1001EE134((uint64_t)"SubOpcode Incorrect %!", v16, v17, v18, v19, v20, v21, v22, a1),
        uint64_t v23 = (os_log_s *)sub_100086554(0x54u),
        !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
LABEL_12:
    if (!a2) {
      return;
    }
    goto LABEL_13;
  }

  sub_100657F74();
  if (a2) {
LABEL_13:
  }
    a2(a1, v13);
}

void sub_10013CED8(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    goto LABEL_10;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_18;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_18:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_20;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_20:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 584, v24);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if ((_DWORD)v13 == 5) {
    goto LABEL_12;
  }
LABEL_10:
  if (!sub_1000A86F0()
    || (sub_1001EE134((uint64_t)"SubOpcode Incorrect %!", v16, v17, v18, v19, v20, v21, v22, a1),
        uint64_t v23 = (os_log_s *)sub_100086554(0x54u),
        !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
LABEL_12:
    if (!a2) {
      return;
    }
    goto LABEL_13;
  }

  sub_100657F74();
  if (a2) {
LABEL_13:
  }
    a2(a1, v13);
}

void sub_10013D034(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 0LL;
    uint64_t v14 = 255LL;
    goto LABEL_11;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_19;
  }

  unsigned int v15 = *((unsigned __int16 *)a3 + 5);
  uint64_t v16 = *((unsigned __int16 *)a3 + 6);
  if (v15 <= v16)
  {
LABEL_19:
    uint64_t v26 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_21;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v26 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_21:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 605, v26);
  }

  uint64_t v17 = *a3;
  *((_WORD *)a3 + 6) = v16 + 1;
  if (v15 <= (int)v16 + 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  606,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v14 = *(unsigned __int8 *)(v17 + v16);
  *((_WORD *)a3 + 6) = v16 + 2;
  uint64_t v13 = *(unsigned __int8 *)(v17 + v16 + 1);
  if ((_DWORD)v14 == 6)
  {
LABEL_13:
    if (!a2) {
      return;
    }
    goto LABEL_14;
  }

void sub_10013D1CC(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    unsigned __int16 v13 = 0;
    if (a2) {
      goto LABEL_6;
    }
    return;
  }

  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_14;
  }

  uint64_t v14 = *(unsigned __int16 *)(a3 + 12);
  if (*(unsigned __int16 *)(a3 + 10) - (int)v14 <= 1)
  {
LABEL_14:
    unsigned int v15 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_16;
  }

  if (*(_BYTE *)(a3 + 14) != 1)
  {
    unsigned int v15 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_16:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 626, v15);
  }

  unsigned __int16 v13 = *(_WORD *)(*(void *)a3 + v14);
  *(_WORD *)(a3 + 12) = v14 + 2;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13);
}

void sub_10013D2DC(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 0LL;
    uint64_t v14 = 0LL;
    uint64_t v15 = 255LL;
    goto LABEL_12;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_20;
  }

  unsigned int v16 = *((unsigned __int16 *)a3 + 5);
  uint64_t v17 = *((unsigned __int16 *)a3 + 6);
  if (v16 <= v17)
  {
LABEL_20:
    int v30 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v30 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 645, v30);
  }

  uint64_t v18 = *a3;
  *((_WORD *)a3 + 6) = v17 + 1;
  if ((int)(v16 - (v17 + 1)) <= 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  646,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v15 = *(unsigned __int8 *)(v18 + v17);
  uint64_t v19 = (unsigned __int8 *)(v18 + v17 + 1);
  int v20 = *v19;
  int v21 = v19[1];
  *((_WORD *)a3 + 6) = v17 + 3;
  if (v16 <= (unsigned __int16)(v17 + 3)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  647,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v14 = v20 | (v21 << 8);
  *((_WORD *)a3 + 6) = v17 + 4;
  uint64_t v13 = *(unsigned __int8 *)(v18 + (unsigned __int16)(v17 + 3));
  if (!(_DWORD)v15)
  {
LABEL_14:
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }

void sub_10013D4B8( uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int *, int *, int *, int), uint64_t *a3)
{
  char v36 = 0;
  int v35 = 0;
  char v34 = 0;
  int v33 = 0;
  char v32 = 0;
  int v31 = 0;
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned int v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 0LL;
    uint64_t v14 = 0LL;
    uint64_t v15 = 0LL;
    uint64_t v16 = 0LL;
    goto LABEL_20;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_26;
  }

  unsigned int v18 = *((unsigned __int16 *)a3 + 5);
  uint64_t v19 = *((unsigned __int16 *)a3 + 6);
  if (v18 <= v19)
  {
LABEL_26:
    int v29 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_28;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v29 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_28:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 674, v29);
  }

  uint64_t v20 = *a3;
  *((_WORD *)a3 + 6) = v19 + 1;
  if (v18 <= (unsigned __int16)(v19 + 1)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  675,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v13 = *(unsigned __int8 *)(v20 + v19);
  *((_WORD *)a3 + 6) = v19 + 2;
  if (v18 <= (unsigned __int16)(v19 + 2)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  676,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v14 = *(unsigned __int8 *)(v20 + v19 + 1);
  *((_WORD *)a3 + 6) = v19 + 3;
  if (v18 <= (unsigned __int16)(v19 + 3)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  677,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v15 = *(unsigned __int8 *)(v20 + v19 + 2);
  uint64_t v21 = v19 + 4;
  *((_WORD *)a3 + 6) = v19 + 4;
  uint64_t v16 = *(unsigned __int8 *)(v20 + v19 + 3);
  if ((v13 - 1) > 1u)
  {
LABEL_20:
    char v28 = 0;
    if (!a2) {
      return;
    }
    goto LABEL_21;
  }

  if ((int)(v18 - v21) <= 4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  679,  "ByteStream_NumReadBytesAvail(*pBs) >= (5)");
  }
  uint64_t v22 = (int *)(v20 + v21);
  int v23 = *v22;
  char v36 = *((_BYTE *)v22 + 4);
  int v35 = v23;
  *((_WORD *)a3 + 6) = v19 + 9;
  if ((int)(v18 - (unsigned __int16)(v19 + 9)) <= 4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  680,  "ByteStream_NumReadBytesAvail(*pBs) >= (5)");
  }
  uint64_t v24 = (int *)(v20 + (unsigned __int16)(v19 + 9));
  int v25 = *v24;
  char v34 = *((_BYTE *)v24 + 4);
  int v33 = v25;
  *((_WORD *)a3 + 6) = v19 + 14;
  if ((int)(v18 - (unsigned __int16)(v19 + 14)) <= 4) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  681,  "ByteStream_NumReadBytesAvail(*pBs) >= (5)");
  }
  uint64_t v26 = (int *)(v20 + (unsigned __int16)(v19 + 14));
  int v27 = *v26;
  char v32 = *((_BYTE *)v26 + 4);
  int v31 = v27;
  *((_WORD *)a3 + 6) = v19 + 19;
  if ((_DWORD)v13 != 2)
  {
    char v28 = 0;
    uint64_t v13 = 1LL;
    if (!a2) {
      return;
    }
LABEL_21:
    LOBYTE(v30) = v28;
    a2(a1, v13, v14, v15, v16, &v35, &v33, &v31, v30);
    return;
  }

  if (v18 <= (unsigned __int16)(v19 + 19)) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  683,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  *((_WORD *)a3 + 6) = v19 + 20;
  char v28 = *(_BYTE *)(v20 + (unsigned __int16)(v19 + 19));
  uint64_t v13 = 2LL;
  if (a2) {
    goto LABEL_21;
  }
}

uint64_t sub_10013D7A0( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, int), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      unsigned int v24 = *((unsigned __int16 *)a3 + 5);
      uint64_t v25 = *((unsigned __int16 *)a3 + 6);
      if ((int)(v24 - v25) > 1)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v26 = *a3;
          unsigned __int16 v14 = *(_WORD *)(*a3 + v25);
          *((_WORD *)a3 + 6) = v25 + 2;
          if (v24 <= (unsigned __int16)(v25 + 2)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  713,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          *((_WORD *)a3 + 6) = v25 + 3;
          if (v24 <= (unsigned __int16)(v25 + 3)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  714,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          char v15 = *(_BYTE *)(v26 + (unsigned __int16)(v25 + 2));
          *((_WORD *)a3 + 6) = v25 + 4;
          if (v24 <= (unsigned __int16)(v25 + 4)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  715,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          char v16 = *(_BYTE *)(v26 + (unsigned __int16)(v25 + 3));
          *((_WORD *)a3 + 6) = v25 + 5;
          if (v24 <= (unsigned __int16)(v25 + 5)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  716,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          char v17 = *(_BYTE *)(v26 + (unsigned __int16)(v25 + 4));
          *((_WORD *)a3 + 6) = v25 + 6;
          if (v24 <= (unsigned __int16)(v25 + 6)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  717,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          char v18 = *(_BYTE *)(v26 + (unsigned __int16)(v25 + 5));
          *((_WORD *)a3 + 6) = v25 + 7;
          if (v24 <= (unsigned __int16)(v25 + 7)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  718,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          char v19 = *(_BYTE *)(v26 + (unsigned __int16)(v25 + 6));
          *((_WORD *)a3 + 6) = v25 + 8;
          if (v24 <= (unsigned __int16)(v25 + 8)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  719,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          char v20 = *(_BYTE *)(v26 + (unsigned __int16)(v25 + 7));
          *((_WORD *)a3 + 6) = v25 + 9;
          if (v24 <= (unsigned __int16)(v25 + 9)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  720,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          uint64_t result = *(unsigned __int8 *)(v26 + (unsigned __int16)(v25 + 8));
          *((_WORD *)a3 + 6) = v25 + 10;
          if (v24 <= (unsigned __int16)(v25 + 10)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  721,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          char v21 = *(_BYTE *)(v26 + (unsigned __int16)(v25 + 9));
          *((_WORD *)a3 + 6) = v25 + 11;
          if (v24 <= (unsigned __int16)(v25 + 11)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  722,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          char v22 = *(_BYTE *)(v26 + (unsigned __int16)(v25 + 10));
          *((_WORD *)a3 + 6) = v25 + 12;
          char v23 = *(_BYTE *)(v26 + (unsigned __int16)(v25 + 11));
          if (a2) {
            goto LABEL_6;
          }
          return result;
        }

        int v27 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_27:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 712, v27);
      }
    }

    int v27 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_27;
  }

  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result
    && (sub_1001EE134((uint64_t)"status %!", v6, v7, v8, v9, v10, v11, v12, a1),
        uint64_t v13 = (os_log_s *)sub_100086554(0x54u),
        uint64_t result = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR),
        (_DWORD)result))
  {
    sub_100657F74();
    unsigned __int16 v14 = 0;
    char v15 = 0;
    char v16 = 0;
    char v17 = 0;
    char v18 = 0;
    char v19 = 0;
    char v20 = 0;
    uint64_t result = 0LL;
  }

  else
  {
    unsigned __int16 v14 = 0;
    char v15 = 0;
    char v16 = 0;
    char v17 = 0;
    char v18 = 0;
    char v19 = 0;
    char v20 = 0;
  }

  char v21 = 0;
  char v22 = 0;
  char v23 = 0;
  if (a2)
  {
LABEL_6:
    HIBYTE(v28) = v23;
    BYTE2(v28) = v22;
    BYTE1(v28) = v21;
    LOBYTE(v28) = result;
    return a2( a1,  v14,  v15,  v16,  v17,  v18,  v19,  v20,  v28);
  }

  return result;
}

void sub_10013DAFC(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v15 = *((unsigned __int16 *)a3 + 6);
      uint64_t v16 = *((unsigned __int16 *)a3 + 5);
      if ((int)v16 - (int)v15 > 9)
      {
        uint64_t v17 = *a3;
        *((_WORD *)a3 + 6) = v15 + 10;
        if (v16 - (unint64_t)(unsigned __int16)(v15 + 10) <= 0x9F) {
          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  744,  "ByteStream_NumReadBytesAvail(*pBs) >= (80 * sizeof(uint16_t))");
        }
        uint64_t v13 = v17 + v15;
        uint64_t v14 = v17 + (unsigned __int16)(v15 + 10);
        *((_WORD *)a3 + 6) = v15 + 170;
        if (a2) {
          goto LABEL_6;
        }
        return;
      }
    }

    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  742,  "ByteStream_NumReadBytesAvail(*pBs) >= (10)");
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14);
}

void sub_10013DC24(uint64_t a1, void (*a2)(uint64_t, uint64_t, void), uint64_t a3)
{
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_4;
  }

  if (*(unsigned __int16 *)(a3 + 10) - *(unsigned __int16 *)(a3 + 12) <= 1)
  {
LABEL_4:
    if (sub_1000A86F0())
    {
      if (*(_BYTE *)(a3 + 15))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        uint64_t v11 = 0LL;
      }

      else
      {
        uint64_t v11 = *(unsigned __int16 *)(a3 + 10) - *(unsigned __int16 *)(a3 + 12);
      }

      sub_1001EE134((uint64_t)"Invalid data size %d", v4, v5, v6, v7, v8, v9, v10, v11);
      char v21 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100657858();
      }
    }

    return;
  }

  if (*(_BYTE *)(a3 + 15)) {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
  }
  sub_1001EE134((uint64_t)"hlCb 0x%x, data %@", v14, v15, v16, v17, v18, v19, v20, (uint64_t)a2);
  char v22 = (os_log_s *)sub_100086554(0x54u);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
  {
    sub_100657F74();
    if (!a2) {
      return;
    }
  }

  else
  {
LABEL_15:
    if (!a2) {
      return;
    }
  }

  uint64_t v23 = *(unsigned __int16 *)(a3 + 12);
  uint64_t v24 = *(void *)a3 + v23;
  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    unsigned __int8 v25 = 0;
  }

  else
  {
    unsigned __int8 v25 = *(_BYTE *)(a3 + 10) - v23;
  }

  a2(a1, v24, v25);
}

uint64_t sub_10013DDE4(uint64_t a1, __int16 a2)
{
  if (!(_DWORD)a1) {
    return (a2 & 0x3FFu) <= 0x32 && ((1LL << a2) & 0x7000000000001LL) != 0 || (a2 & 0x3FF) == 0x247;
  }
  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result)
  {
    sub_1001EE134((uint64_t)"status %!, opcode 0x%x, subOpcode %x, myopcode %x", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = (os_log_s *)sub_100086554(0x54u);
    uint64_t result = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_100657F74();
      return 0LL;
    }
  }

  return result;
}

BOOL sub_10013DEAC(uint64_t *a1, int a2, int a3)
{
  if (a2 != 64803 && a2 != 64745) {
    return 1LL;
  }
  if (*((_BYTE *)a1 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    return 1LL;
  }

  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  if (*((_BYTE *)a1 + 14) != 1) {
    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  803,  "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v4 = *a1;
  *((_WORD *)a1 + 6) = v3 + 1;
  return *(unsigned __int8 *)(v4 + v3) == a3;
}

void sub_10013DF4C(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 255LL;
    if (a2) {
      goto LABEL_6;
    }
    return;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_14;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_14:
    uint64_t v16 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_16;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    uint64_t v16 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_16:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 827, v16);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if (a2) {
LABEL_6:
  }
    a2(a1, v13);
}

void sub_10013E054(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 0LL;
    if (a2) {
      goto LABEL_6;
    }
    return;
  }

  if (*(_BYTE *)(a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_14;
  }

  uint64_t v14 = *(unsigned __int16 *)(a3 + 12);
  if (*(unsigned __int16 *)(a3 + 10) - (int)v14 <= 3)
  {
LABEL_14:
    uint64_t v15 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    goto LABEL_16;
  }

  if (*(_BYTE *)(a3 + 14) != 1)
  {
    uint64_t v15 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_16:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 844, v15);
  }

  uint64_t v13 = *(unsigned int *)(*(void *)a3 + v14);
  *(_WORD *)(a3 + 12) = v14 + 4;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13);
}

void sub_10013E160(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      unsigned int v15 = *((unsigned __int16 *)a3 + 5);
      uint64_t v16 = *((unsigned __int16 *)a3 + 6);
      if (v15 > v16)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v17 = *a3;
          *((_WORD *)a3 + 6) = v16 + 1;
          if (v15 <= (int)v16 + 1) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  863,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          uint64_t v13 = *(unsigned __int8 *)(v17 + v16);
          *((_WORD *)a3 + 6) = v16 + 2;
          uint64_t v14 = *(unsigned __int8 *)(v17 + v16 + 1);
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        uint64_t v18 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_17:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 862, v18);
      }
    }

    uint64_t v18 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_17;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14);
}

void sub_10013E298(uint64_t a1, void (*a2)(uint64_t))
{
  if ((_DWORD)a1
    && sub_1000A86F0()
    && (sub_1001EE134((uint64_t)"status %!", v4, v5, v6, v7, v8, v9, v10, a1),
        uint64_t v11 = (os_log_s *)sub_100086554(0x54u),
        os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)))
  {
    sub_100657F74();
    if (!a2) {
      return;
    }
  }

  else if (!a2)
  {
    return;
  }

  a2(a1);
}

void sub_10013E320(uint64_t a1, void (*a2)(uint64_t, uint64_t, void, uint64_t), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      unsigned int v17 = *((unsigned __int16 *)a3 + 5);
      uint64_t v18 = *((unsigned __int16 *)a3 + 6);
      if (v17 > v18)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v19 = *a3;
          *((_WORD *)a3 + 6) = v18 + 1;
          uint64_t v13 = *(unsigned __int8 *)(v19 + v18);
          if ((int)(v17 - (v18 + 1)) <= 1)
          {
            *((_BYTE *)a3 + 15) = 1;
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            unsigned __int16 v14 = 0;
            int v21 = 0;
          }

          else
          {
            __int16 v20 = v18 + 3;
            unsigned __int16 v14 = *(_WORD *)(v19 + v18 + 1);
            *((_WORD *)a3 + 6) = v20;
            int v21 = (unsigned __int16)(v17 - v20);
          }

          if (v21 != v14) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  900,  "length == remaining");
          }
          uint64_t v15 = *a3 + *((unsigned __int16 *)a3 + 6);
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        char v22 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_20:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 897, v22);
      }
    }

    char v22 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_20;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  unsigned __int16 v14 = 0;
  uint64_t v15 = 0LL;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14, v15);
}

uint64_t sub_10013E4B4( uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t), uint64_t *a3)
{
  uint64_t v3 = a2;
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      int v42 = *((unsigned __int16 *)a3 + 5);
      uint64_t v43 = *((unsigned __int16 *)a3 + 6);
      if (v42 - (int)v43 > 3)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v44 = *a3;
          unsigned int v91 = *(_DWORD *)(*a3 + v43);
          *((_WORD *)a3 + 6) = v43 + 4;
          if (v42 - (unsigned __int16)(v43 + 4) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  979,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v90 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 4));
          *((_WORD *)a3 + 6) = v43 + 8;
          if (v42 - (unsigned __int16)(v43 + 8) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  980,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v89 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 8));
          *((_WORD *)a3 + 6) = v43 + 12;
          if (v42 - (unsigned __int16)(v43 + 12) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  981,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v88 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 12));
          *((_WORD *)a3 + 6) = v43 + 16;
          if (v42 - (unsigned __int16)(v43 + 16) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  982,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v87 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 16));
          *((_WORD *)a3 + 6) = v43 + 20;
          if (v42 - (unsigned __int16)(v43 + 20) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  983,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v86 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 20));
          *((_WORD *)a3 + 6) = v43 + 24;
          if (v42 - (unsigned __int16)(v43 + 24) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  984,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v85 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 24));
          *((_WORD *)a3 + 6) = v43 + 28;
          if (v42 - (unsigned __int16)(v43 + 28) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  985,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v84 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 28));
          *((_WORD *)a3 + 6) = v43 + 32;
          if (v42 - (unsigned __int16)(v43 + 32) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  986,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v83 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 32));
          *((_WORD *)a3 + 6) = v43 + 36;
          if (v42 - (unsigned __int16)(v43 + 36) <= 3) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  987,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v45 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 36));
          *((_WORD *)a3 + 6) = v43 + 40;
          int v46 = v42 - (unsigned __int16)(v43 + 40);
          unsigned int v108 = v45;
          if ((v46 & 0x1FFFE) != 0)
          {
            if (v46 <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  991,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v47 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 40));
            *((_WORD *)a3 + 6) = v43 + 44;
            if (v42 - (unsigned __int16)(v43 + 44) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  992,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v48 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 44));
            *((_WORD *)a3 + 6) = v43 + 48;
            if (v42 - (unsigned __int16)(v43 + 48) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  993,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v49 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 48));
            *((_WORD *)a3 + 6) = v43 + 52;
            if (v42 - (unsigned __int16)(v43 + 52) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  994,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v50 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 52));
            *((_WORD *)a3 + 6) = v43 + 56;
            if (v42 - (unsigned __int16)(v43 + 56) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  995,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v51 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 56));
            *((_WORD *)a3 + 6) = v43 + 60;
            if (v42 - (unsigned __int16)(v43 + 60) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  996,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v52 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 60));
            *((_WORD *)a3 + 6) = v43 + 64;
            if (v42 - (unsigned __int16)(v43 + 64) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  997,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v53 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 64));
            *((_WORD *)a3 + 6) = v43 + 68;
            if (v42 - (unsigned __int16)(v43 + 68) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  998,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v54 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 68));
            *((_WORD *)a3 + 6) = v43 + 72;
            if (v42 - (unsigned __int16)(v43 + 72) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  999,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v55 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 72));
            *((_WORD *)a3 + 6) = v43 + 76;
            if (v42 - (unsigned __int16)(v43 + 76) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1001,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v56 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 76));
            *((_WORD *)a3 + 6) = v43 + 80;
            if (v42 - (unsigned __int16)(v43 + 80) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1002,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v57 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 80));
            *((_WORD *)a3 + 6) = v43 + 84;
            if (v42 - (unsigned __int16)(v43 + 84) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1003,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v58 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 84));
            *((_WORD *)a3 + 6) = v43 + 88;
            if (v42 - (unsigned __int16)(v43 + 88) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1004,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v59 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 88));
            *((_WORD *)a3 + 6) = v43 + 92;
            if (v42 - (unsigned __int16)(v43 + 92) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1005,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v60 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 92));
            *((_WORD *)a3 + 6) = v43 + 96;
            if (v42 - (unsigned __int16)(v43 + 96) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1006,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v61 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 96));
            *((_WORD *)a3 + 6) = v43 + 100;
            if (v42 - (unsigned __int16)(v43 + 100) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1007,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v62 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 100));
            *((_WORD *)a3 + 6) = v43 + 104;
            if (v42 - (unsigned __int16)(v43 + 104) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1008,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v63 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 104));
            *((_WORD *)a3 + 6) = v43 + 108;
            if (v42 - (unsigned __int16)(v43 + 108) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1009,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v64 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 108));
            *((_WORD *)a3 + 6) = v43 + 112;
            if (v42 - (unsigned __int16)(v43 + 112) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1010,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v65 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 112));
            *((_WORD *)a3 + 6) = v43 + 116;
            if (v42 - (unsigned __int16)(v43 + 116) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1011,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v66 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 116));
            *((_WORD *)a3 + 6) = v43 + 120;
            if (v42 - (unsigned __int16)(v43 + 120) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1012,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            int v67 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 120));
            *((_WORD *)a3 + 6) = v43 + 124;
            if (v42 - (unsigned __int16)(v43 + 124) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1013,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            LODWORD(v107) = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 124));
            HIDWORD(v107) = v67;
            *((_WORD *)a3 + 6) = v43 + 128;
            if (v42 - (unsigned __int16)(v43 + 128) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1014,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v68 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 128));
            *((_WORD *)a3 + 6) = v43 + 132;
            if (v42 - (unsigned __int16)(v43 + 132) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1015,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unint64_t v106 = __PAIR64__(v65, v66);
            unsigned int v69 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 132));
            *((_WORD *)a3 + 6) = v43 + 136;
            if (v42 - (unsigned __int16)(v43 + 136) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1016,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            int v70 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 136));
            *((_WORD *)a3 + 6) = v43 + 140;
            if (v42 - (unsigned __int16)(v43 + 140) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1017,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unint64_t v105 = __PAIR64__(v63, v64);
            unsigned int v71 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 140));
            *((_WORD *)a3 + 6) = v43 + 144;
            if (v42 - (unsigned __int16)(v43 + 144) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1018,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v72 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 144));
            *((_WORD *)a3 + 6) = v43 + 148;
            if (v42 - (unsigned __int16)(v43 + 148) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1019,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unint64_t v104 = __PAIR64__(v61, v62);
            unsigned int v73 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 148));
            *((_WORD *)a3 + 6) = v43 + 152;
            if (v42 - (unsigned __int16)(v43 + 152) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1020,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v74 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 152));
            *((_WORD *)a3 + 6) = v43 + 156;
            if (v42 - (unsigned __int16)(v43 + 156) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1021,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v75 = v48;
            unsigned int v76 = v47;
            unint64_t v103 = __PAIR64__(v59, v60);
            unsigned int v77 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 156));
            *((_WORD *)a3 + 6) = v43 + 160;
            if (v42 - (unsigned __int16)(v43 + 160) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1022,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            int v78 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 160));
            *((_WORD *)a3 + 6) = v43 + 164;
            if (v42 - (unsigned __int16)(v43 + 164) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1023,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unint64_t v102 = __PAIR64__(v57, v58);
            unsigned int v79 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 164));
            *((_WORD *)a3 + 6) = v43 + 168;
            if (v42 - (unsigned __int16)(v43 + 168) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1024,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v80 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 168));
            *((_WORD *)a3 + 6) = v43 + 172;
            if (v42 - (unsigned __int16)(v43 + 172) <= 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1025,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
            }
            unint64_t v101 = __PAIR64__(v55, v56);
            unsigned int v81 = *(unsigned __int16 *)(v44 + (unsigned __int16)(v43 + 172));
            *((_WORD *)a3 + 6) = v43 + 174;
            if (v42 - (unsigned __int16)(v43 + 174) <= 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1026,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
            }
            uint64_t result = *(unsigned __int16 *)(v44 + (unsigned __int16)(v43 + 174));
            *((_WORD *)a3 + 6) = v43 + 176;
            if (v42 - (unsigned __int16)(v43 + 176) <= 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1027,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
            }
            unint64_t v100 = __PAIR64__(v53, v54);
            unsigned int v29 = *(unsigned __int16 *)(v44 + (unsigned __int16)(v43 + 176));
            *((_WORD *)a3 + 6) = v43 + 178;
            if (v42 - (unsigned __int16)(v43 + 178) <= 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1028,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
            }
            unsigned int v30 = *(unsigned __int16 *)(v44 + (unsigned __int16)(v43 + 178));
            *((_WORD *)a3 + 6) = v43 + 180;
            if (v42 - (unsigned __int16)(v43 + 180) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1029,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unint64_t v99 = __PAIR64__(v51, v52);
            unsigned int v31 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 180));
            *((_WORD *)a3 + 6) = v43 + 184;
            if (v42 - (unsigned __int16)(v43 + 184) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1030,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v98 = v68;
            unsigned int v32 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 184));
            *((_WORD *)a3 + 6) = v43 + 188;
            if (v42 - (unsigned __int16)(v43 + 188) <= 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1031,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
            }
            HIDWORD(v95) = v78;
            unint64_t v96 = __PAIR64__(v69, v77);
            unint64_t v97 = __PAIR64__(v49, v50);
            unsigned int v33 = *(unsigned __int16 *)(v44 + (unsigned __int16)(v43 + 188));
            *((_WORD *)a3 + 6) = v43 + 190;
            if (v42 - (unsigned __int16)(v43 + 190) <= 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1032,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
            }
            LODWORD(v95) = v70;
            unsigned int v34 = *(unsigned __int16 *)(v44 + (unsigned __int16)(v43 + 190));
            *((_WORD *)a3 + 6) = v43 + 192;
            if (v42 - (unsigned __int16)(v43 + 192) <= 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1033,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
            }
            unsigned int v93 = v71;
            unint64_t v94 = __PAIR64__(v76, v75);
            unsigned int v35 = *(unsigned __int16 *)(v44 + (unsigned __int16)(v43 + 192));
            *((_WORD *)a3 + 6) = v43 + 194;
            if (v42 - (unsigned __int16)(v43 + 194) <= 1) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1034,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
            }
            unsigned int v36 = *(unsigned __int16 *)(v44 + (unsigned __int16)(v43 + 194));
            *((_WORD *)a3 + 6) = v43 + 196;
            if (v42 - (unsigned __int16)(v43 + 196) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1035,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v37 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 196));
            *((_WORD *)a3 + 6) = v43 + 200;
            if (v42 - (unsigned __int16)(v43 + 200) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1036,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v26 = v79;
            unsigned int v23 = v72;
            unsigned int v38 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 200));
            *((_WORD *)a3 + 6) = v43 + 204;
            if (v42 - (unsigned __int16)(v43 + 204) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1037,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v27 = v80;
            unsigned int v28 = v81;
            unsigned int v25 = v74;
            unsigned int v24 = v73;
            unsigned int v39 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 204));
            *((_WORD *)a3 + 6) = v43 + 208;
            if (v42 - (unsigned __int16)(v43 + 208) <= 3) {
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1038,  "ByteStream_NumReadBytesAvail(*pBs) >= 4");
            }
            unsigned int v40 = *(_DWORD *)(v44 + (unsigned __int16)(v43 + 208));
            *((_WORD *)a3 + 6) = v43 + 212;
          }

          else
          {
            unint64_t v94 = 0LL;
            uint64_t v95 = 0LL;
            unint64_t v96 = 0LL;
            unint64_t v97 = 0LL;
            unint64_t v99 = 0LL;
            unint64_t v100 = 0LL;
            unint64_t v101 = 0LL;
            unint64_t v102 = 0LL;
            unint64_t v103 = 0LL;
            unint64_t v104 = 0LL;
            unint64_t v105 = 0LL;
            unint64_t v106 = 0LL;
            uint64_t v107 = 0LL;
            unsigned int v98 = 0;
            unsigned int v93 = 0;
            unsigned int v23 = 0;
            unsigned int v24 = 0;
            unsigned int v25 = 0;
            unsigned int v26 = 0;
            unsigned int v27 = 0;
            unsigned int v28 = 0;
            uint64_t result = 0LL;
            unsigned int v29 = 0;
            unsigned int v30 = 0;
            unsigned int v31 = 0;
            unsigned int v32 = 0;
            unsigned int v33 = 0;
            unsigned int v34 = 0;
            unsigned int v35 = 0;
            unsigned int v36 = 0;
            unsigned int v37 = 0;
            unsigned int v38 = 0;
            unsigned int v39 = 0;
            unsigned int v40 = 0;
          }

          uint64_t v3 = a2;
          uint64_t v14 = v91;
          uint64_t v16 = v89;
          uint64_t v15 = v90;
          uint64_t v18 = v87;
          uint64_t v17 = v88;
          uint64_t v20 = v85;
          uint64_t v19 = v86;
          unsigned int v22 = v83;
          unsigned int v21 = v84;
          if (a2) {
            return v3( a1,  v14,  v15,  v16,  v17,  v18,  v19,  v20,  __PAIR64__(v22, v21),  __PAIR64__(HIDWORD(v94), v108),  __PAIR64__(HIDWORD(v97), v94),  __PAIR64__(HIDWORD(v99), v97),  __PAIR64__(HIDWORD(v100), v99),  __PAIR64__(HIDWORD(v101), v100),  __PAIR64__(HIDWORD(v102), v101),  __PAIR64__(HIDWORD(v103), v102),  __PAIR64__(HIDWORD(v104), v103),  __PAIR64__(HIDWORD(v105), v104),  __PAIR64__(HIDWORD(v106), v105),  __PAIR64__(HIDWORD(v107), v106),  __PAIR64__(v98, v107),  __PAIR64__(v95, HIDWORD(v96)),  __PAIR64__(v23, v93),  __PAIR64__(v25, v24),  __PAIR64__(HIDWORD(v95), v96),  __PAIR64__(v27, v26),  __PAIR64__(result, v28),  __PAIR64__(v30, v29),  __PAIR64__(v32, v31),  __PAIR64__(v34, v33),  __PAIR64__(v36, v35),  __PAIR64__(v38, v37),  __PAIR64__(v40, v39));
          }
          return result;
        }

        uint64_t v82 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_76:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 978, v82);
      }
    }

    uint64_t v82 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    goto LABEL_76;
  }

  uint64_t result = sub_1000A86F0();
  if ((_DWORD)result
    && (sub_1001EE134((uint64_t)"EnhancedProfilingStats VSC failed with status %!", v6, v7, v8, v9, v10, v11, v12, a1),
        uint64_t v13 = (os_log_s *)sub_100086554(0x54u),
        uint64_t result = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR),
        (_DWORD)result))
  {
    sub_100657F74();
    uint64_t v14 = 0LL;
    uint64_t v15 = 0LL;
    uint64_t v16 = 0LL;
    uint64_t v17 = 0LL;
    uint64_t v18 = 0LL;
    uint64_t v19 = 0LL;
    uint64_t v20 = 0LL;
    unsigned int v21 = 0;
    unsigned int v22 = 0;
    unsigned int v108 = 0;
    unint64_t v94 = 0LL;
    uint64_t v95 = 0LL;
    unint64_t v96 = 0LL;
    unint64_t v97 = 0LL;
    unint64_t v99 = 0LL;
    unint64_t v100 = 0LL;
    unint64_t v101 = 0LL;
    unint64_t v102 = 0LL;
    unint64_t v103 = 0LL;
    unint64_t v104 = 0LL;
    unint64_t v105 = 0LL;
    unint64_t v106 = 0LL;
    uint64_t v107 = 0LL;
    unsigned int v98 = 0;
    unsigned int v93 = 0;
    unsigned int v23 = 0;
    unsigned int v24 = 0;
    unsigned int v25 = 0;
    unsigned int v26 = 0;
    unsigned int v27 = 0;
    unsigned int v28 = 0;
    uint64_t result = 0LL;
  }

  else
  {
    uint64_t v14 = 0LL;
    uint64_t v15 = 0LL;
    uint64_t v16 = 0LL;
    uint64_t v17 = 0LL;
    uint64_t v18 = 0LL;
    uint64_t v19 = 0LL;
    uint64_t v20 = 0LL;
    unsigned int v21 = 0;
    unsigned int v22 = 0;
    unsigned int v108 = 0;
    unint64_t v94 = 0LL;
    uint64_t v95 = 0LL;
    unint64_t v96 = 0LL;
    unint64_t v97 = 0LL;
    unint64_t v99 = 0LL;
    unint64_t v100 = 0LL;
    unint64_t v101 = 0LL;
    unint64_t v102 = 0LL;
    unint64_t v103 = 0LL;
    unint64_t v104 = 0LL;
    unint64_t v105 = 0LL;
    unint64_t v106 = 0LL;
    uint64_t v107 = 0LL;
    unsigned int v98 = 0;
    unsigned int v93 = 0;
    unsigned int v23 = 0;
    unsigned int v24 = 0;
    unsigned int v25 = 0;
    unsigned int v26 = 0;
    unsigned int v27 = 0;
    unsigned int v28 = 0;
  }

  unsigned int v29 = 0;
  unsigned int v30 = 0;
  unsigned int v31 = 0;
  unsigned int v32 = 0;
  unsigned int v33 = 0;
  unsigned int v34 = 0;
  unsigned int v35 = 0;
  unsigned int v36 = 0;
  unsigned int v37 = 0;
  unsigned int v38 = 0;
  unsigned int v39 = 0;
  unsigned int v40 = 0;
  if (v3) {
    return v3( a1,  v14,  v15,  v16,  v17,  v18,  v19,  v20,  __PAIR64__(v22, v21),  __PAIR64__(HIDWORD(v94), v108),  __PAIR64__(HIDWORD(v97), v94),  __PAIR64__(HIDWORD(v99), v97),  __PAIR64__(HIDWORD(v100), v99),  __PAIR64__(HIDWORD(v101), v100),  __PAIR64__(HIDWORD(v102), v101),  __PAIR64__(HIDWORD(v103), v102),  __PAIR64__(HIDWORD(v104), v103),  __PAIR64__(HIDWORD(v105), v104),  __PAIR64__(HIDWORD(v106), v105),  __PAIR64__(HIDWORD(v107), v106),  __PAIR64__(v98, v107),  __PAIR64__(v95, HIDWORD(v96)),  __PAIR64__(v23, v93),  __PAIR64__(v25, v24),  __PAIR64__(HIDWORD(v95), v96),  __PAIR64__(v27, v26),  __PAIR64__(result, v28),  __PAIR64__(v30, v29),  __PAIR64__(v32, v31),  __PAIR64__(v34, v33),  __PAIR64__(v36, v35),  __PAIR64__(v38, v37),  __PAIR64__(v40, v39));
  }
  return result;
}

void sub_10013F498(uint64_t a1, void (*a2)(uint64_t, uint64_t, void, void), uint64_t *a3)
{
  if (!(_DWORD)a1)
  {
    if (*((_BYTE *)a3 + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      unsigned int v15 = *((unsigned __int16 *)a3 + 5);
      uint64_t v16 = *((unsigned __int16 *)a3 + 6);
      if ((int)(v15 - v16) > 3)
      {
        if (*((_BYTE *)a3 + 14) == 1)
        {
          uint64_t v17 = *a3;
          uint64_t v13 = *(unsigned int *)(*a3 + v16);
          *((_WORD *)a3 + 6) = v16 + 4;
          if (v15 <= (unsigned __int16)(v16 + 4)) {
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1058,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          *((_WORD *)a3 + 6) = v16 + 5;
          char v14 = *(_BYTE *)(v17 + (unsigned __int16)(v16 + 4));
          if (a2) {
            goto LABEL_6;
          }
          return;
        }

        uint64_t v18 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_17:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1057, v18);
      }
    }

    uint64_t v18 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    goto LABEL_17;
  }

  if (sub_1000A86F0())
  {
    sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100657F74();
    }
  }

  uint64_t v13 = 0LL;
  char v14 = 0;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14, 0LL);
}

void sub_10013F5E0(uint64_t a1, void (*a2)(uint64_t, _OWORD *), uint64_t *a3)
{
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v23 = 0u;
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    goto LABEL_17;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_27:
    unsigned int v21 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_28:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1078, v21);
  }

  uint64_t v13 = 0LL;
  unsigned int v14 = *((unsigned __int16 *)a3 + 5);
  unsigned __int16 v15 = *((_WORD *)a3 + 6);
  int v16 = v14 - 1;
  do
  {
    if (v14 <= v15) {
      goto LABEL_27;
    }
    if (*((_BYTE *)a3 + 14) != 1)
    {
      unsigned int v21 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      goto LABEL_28;
    }

    uint64_t v17 = *a3;
    *((_WORD *)a3 + 6) = v15 + 1;
    *((_BYTE *)&v23 + v13) = *(_BYTE *)(v17 + v15);
    if (v14 <= (unsigned __int16)(v15 + 1)) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1079,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
    }
    uint64_t v18 = v15 + 2LL;
    *((_WORD *)a3 + 6) = v18;
    *((_BYTE *)&v23 + v13 + 1) = *(_BYTE *)(v17 + v15 + 1LL);
    if (v16 <= (unsigned __int16)v18) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1080,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    *(_WORD *)((char *)&v23 + v13 + 2) = *(_WORD *)(v17 + v18);
    v15 += 4;
    *((_WORD *)a3 + 6) = v15;
    v13 += 4LL;
  }

  while (v13 != 40);
  for (uint64_t i = 0LL; i != 40; i += 4LL)
  {
    if (v14 <= v15) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1084,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
    }
    *((_WORD *)a3 + 6) = v15 + 1;
    *((_BYTE *)&v25 + i + 8) = *(_BYTE *)(v17 + v15);
    if (v14 <= (unsigned __int16)(v15 + 1)) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1085,  "ByteStream_NumReadBytesAvail(*pBs) >= 1");
    }
    uint64_t v20 = v15 + 2LL;
    *((_WORD *)a3 + 6) = v20;
    *((_BYTE *)&v25 + i + 9) = *(_BYTE *)(v17 + v15 + 1LL);
    if (v16 <= (unsigned __int16)v20) {
      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  1086,  "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    *(_WORD *)((char *)&v25 + i + sub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = *(_WORD *)(v17 + v20);
    v15 += 4;
    *((_WORD *)a3 + 6) = v15;
  }

void sub_10013F84C(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if ((_DWORD)a1)
  {
    if (sub_1000A86F0())
    {
      sub_1001EE134((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = (os_log_s *)sub_100086554(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100657F74();
      }
    }

    uint64_t v13 = 0LL;
    if (a2) {
      goto LABEL_6;
    }
    return;
  }

  if (*((_BYTE *)a3 + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_14;
  }

  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_14:
    int v16 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_16;
  }

  if (*((_BYTE *)a3 + 14) != 1)
  {
    int v16 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_16:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 1103, v16);
  }

  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if (a2) {
LABEL_6:
  }
    a2(a1, v13);
}

void sub_10013F954(uint64_t a1, uint64_t (*a2)(void, void))
{
  if ((_DWORD)a1)
  {
    uint64_t v4 = (void (*)(uint64_t, void))off_1008E27C0;
    if (sub_1000A86F0()
      && (sub_1001EE134((uint64_t)"status %!, hlCb 0x%x, pCallbackFunc %x", v5, v6, v7, v8, v9, v10, v11, a1),
          uint64_t v12 = (os_log_s *)sub_100086554(0x54u),
          os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)))
    {
      sub_100657F74();
      if (!v4) {
        return;
      }
    }

    else if (!v4)
    {
      return;
    }

    v4(a1, 0LL);
    a2 = 0LL;
  }

  off_1008E27C0 = a2;
}

uint64_t sub_10013F9F8(int a1, int a2, uint64_t a3)
{
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t result = sub_10018BCDC(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v16) - WORD2(v16) > 3)
    {
      if (BYTE6(v16) == 2)
      {
        *(_BYTE *)(v15 + WORD2(v16)) = 1;
        *(_WORD *)(v15 + WORD2(v16) + 1) = 0;
        *(_BYTE *)(v15 + WORD2(v16) + 3) = 0;
        unsigned __int16 v10 = WORD2(v16) + 4;
        WORD2(v16) += 4;
        if (HIBYTE(v16))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v16) - v10 > 3)
        {
          if (BYTE6(v16) == 2)
          {
            *(_BYTE *)(v15 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = a1;
            *(_BYTE *)(v15 + WORD2(v16) + 1) = BYTE1(a1);
            *(_BYTE *)(v15 + WORD2(v16) + 2) = BYTE2(a1);
            *(_BYTE *)(v15 + WORD2(v16) + 3) = HIBYTE(a1);
            unsigned __int16 v11 = WORD2(v16) + 4;
            WORD2(v16) += 4;
            if (HIBYTE(v16))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }

            else if (WORD1(v16) - v11 > 3)
            {
              if (BYTE6(v16) == 2)
              {
                *(_BYTE *)(v15 + v11) = a2;
                *(_BYTE *)(v15 + WORD2(v16) + 1) = BYTE1(a2);
                *(_BYTE *)(v15 + WORD2(v16) + 2) = BYTE2(a2);
                *(_BYTE *)(v15 + WORD2(v16) + 3) = HIBYTE(a2);
                WORD2(v16) += 4;
                return sub_10018BD78(226, v15, BYTE4(v16), a3, (uint64_t)sub_10013A594, v7, v8, v9);
              }

              uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2753,  v14);
            }

            uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_24;
          }

          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2752, v13);
        }

        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_20;
      }

      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2751, v12);
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_10013FC84(char a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  uint64_t result = sub_10018BCDC(&v20);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v21))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v21) - WORD2(v21) > 3)
    {
      if (BYTE6(v21) == 2)
      {
        *(_BYTE *)(v20 + WORD2(v21)) = 7;
        *(_WORD *)(v20 + WORD2(v21) + 1) = 0;
        *(_BYTE *)(v20 + WORD2(v21) + 3) = 0;
        __int16 v10 = WORD2(v21);
        unsigned __int16 v11 = WORD2(v21) + 4;
        WORD2(v21) += 4;
        if (HIBYTE(v21))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v21) > v11)
        {
          if (BYTE6(v21) == 2)
          {
            WORD2(v21) = v10 + 5;
            *(_BYTE *)(v20 + v11) = a1;
            if (HIBYTE(v21))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }

            else if (WORD1(v21) - WORD2(v21) > 2)
            {
              if (BYTE6(v21) == 2)
              {
                uint64_t v12 = v20 + WORD2(v21);
                *(_BYTE *)(v12 + 2) = 0;
                *(_WORD *)uint64_t v12 = 0;
                unsigned __int16 v13 = WORD2(v21) + 3;
                WORD2(v21) += 3;
                if (HIBYTE(v21))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else if (WORD1(v21) - v13 > 1)
                {
                  if (BYTE6(v21) == 2)
                  {
                    *(_BYTE *)(v20 + v13) = *a2;
                    *(_BYTE *)(v20 + WORD2(v21) + 1) = a2[1];
                    unsigned __int16 v14 = WORD2(v21) + 2;
                    WORD2(v21) += 2;
                    if (HIBYTE(v21))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }

                    else if (WORD1(v21) - v14 > 1)
                    {
                      if (BYTE6(v21) == 2)
                      {
                        *(_WORD *)(v20 + v14) = 0;
                        WORD2(v21) += 2;
                        return sub_10018BD78(226, v20, BYTE4(v21), a3, (uint64_t)sub_10013A594, v7, v8, v9);
                      }

                      uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2771,  v19);
                    }

                    uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= (2)";
                    goto LABEL_38;
                  }

                  uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2770,  v18);
                }

                uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_34;
              }

              uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2769,  v17);
            }

            uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= (3)";
            goto LABEL_30;
          }

          uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2768, v16);
        }

        uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_26;
      }

      uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2767, v15);
    }

    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_22;
  }

  return result;
}

uint64_t sub_10013FFB0(char a1, uint64_t a2)
{
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  uint64_t result = sub_10018BCDC(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v13) - WORD2(v13) > 3)
    {
      if (BYTE6(v13) == 2)
      {
        *(_BYTE *)(v12 + WORD2(v13)) = 13;
        *(_WORD *)(v12 + WORD2(v13) + 1) = 0;
        *(_BYTE *)(v12 + WORD2(v13) + 3) = 0;
        __int16 v8 = WORD2(v13);
        unsigned __int16 v9 = WORD2(v13) + 4;
        WORD2(v13) += 4;
        if (HIBYTE(v13))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v13) > v9)
        {
          if (BYTE6(v13) == 2)
          {
            WORD2(v13) = v8 + 5;
            *(_BYTE *)(v12 + v9) = a1;
            return sub_10018BD78(226, v12, BYTE4(v13), a2, (uint64_t)sub_10013AB28, v5, v6, v7);
          }

          unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2787, v11);
        }

        unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }

      __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2786, v10);
    }

    __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_100140130(char a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (((a2 - 2) & 0xFC) != 0) {
    char v10 = 1;
  }
  else {
    char v10 = 0x16141311u >> (8 * (a2 - 2));
  }
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v11 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(_BYTE *)(v14 + v11) = v10;
          if (HIBYTE(v15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v15) - WORD2(v15) > 3)
          {
            if (BYTE6(v15) == 2)
            {
              *(_BYTE *)(v14 + WORD2(v15)) = a1;
              *(_WORD *)(v14 + WORD2(v15) + 1) = 0;
              *(_BYTE *)(v14 + WORD2(v15) + 3) = 0;
              WORD2(v15) += 4;
              return sub_10018BD78(496, v14, BYTE4(v15), a3, (uint64_t)sub_10013ACFC, v7, v8, v9);
            }

            uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2817,  v13);
          }

          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_20;
        }

        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2816, v12);
      }
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1001402D8(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(528, v10, BYTE4(v11), a2, (uint64_t)sub_10013BCC8, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2832, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1001403A4(char a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  uint64_t result = sub_10018BCDC(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v17) - WORD2(v17) > 3)
    {
      if (BYTE6(v17) == 2)
      {
        *(_BYTE *)(v16 + WORD2(v17)) = 18;
        *(_WORD *)(v16 + WORD2(v17) + 1) = 0;
        *(_BYTE *)(v16 + WORD2(v17) + 3) = 0;
        unsigned __int16 v10 = WORD2(v17) + 4;
        WORD2(v17) += 4;
        if (HIBYTE(v17))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v17) - v10 > 1)
        {
          if (BYTE6(v17) == 2)
          {
            *(_BYTE *)(v16 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = *a2;
            *(_BYTE *)(v16 + WORD2(v17) + 1) = a2[1];
            __int16 v11 = WORD2(v17);
            unsigned __int16 v12 = WORD2(v17) + 2;
            WORD2(v17) += 2;
            if (HIBYTE(v17))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }

            else if (WORD1(v17) > v12)
            {
              if (BYTE6(v17) == 2)
              {
                WORD2(v17) = v11 + 3;
                *(_BYTE *)(v16 + v12) = a1;
                return sub_10018BD78(226, v16, BYTE4(v17), a3, (uint64_t)sub_10013A594, v7, v8, v9);
              }

              uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2849,  v15);
            }

            uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_24;
          }

          uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2848, v14);
        }

        uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_20;
      }

      uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2847, v13);
    }

    uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1001405C8(_BYTE *a1, uint64_t a2)
{
  uint64_t v24 = 0LL;
  uint64_t v25 = 0LL;
  uint64_t result = sub_10018BCDC(&v24);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v25))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v25) - WORD2(v25) > 3)
    {
      if (BYTE6(v25) == 2)
      {
        *(_BYTE *)(v24 + WORD2(v25)) = 21;
        *(_WORD *)(v24 + WORD2(v25) + 1) = 0;
        *(_BYTE *)(v24 + WORD2(v25) + 3) = 0;
        unsigned __int16 v8 = WORD2(v25) + 4;
        WORD2(v25) += 4;
        if (HIBYTE(v25))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v25) - v8 > 1)
        {
          if (BYTE6(v25) == 2)
          {
            *(_BYTE *)(v24 + v8) = *a1;
            *(_BYTE *)(v24 + WORD2(v25) + 1) = a1[1];
            __int16 v9 = WORD2(v25);
            unsigned __int16 v10 = WORD2(v25) + 2;
            WORD2(v25) += 2;
            if (HIBYTE(v25))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }

            else if (WORD1(v25) > v10)
            {
              if (BYTE6(v25) == 2)
              {
                char v11 = a1[2];
                WORD2(v25) = v9 + 3;
                *(_BYTE *)(v24 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = v11;
                if (HIBYTE(v25))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else
                {
                  uint64_t v12 = WORD2(v25);
                  if (WORD1(v25) > WORD2(v25))
                  {
                    if (BYTE6(v25) == 2)
                    {
                      char v13 = a1[3];
                      ++WORD2(v25);
                      *(_BYTE *)(v24 + v12) = v13;
                      if (HIBYTE(v25))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }

                      else
                      {
                        uint64_t v14 = WORD2(v25);
                        if (WORD1(v25) > WORD2(v25))
                        {
                          if (BYTE6(v25) == 2)
                          {
                            char v15 = a1[4];
                            ++WORD2(v25);
                            *(_BYTE *)(v24 + v14) = v15;
                            if (HIBYTE(v25))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }

                            else
                            {
                              uint64_t v16 = WORD2(v25);
                              if (WORD1(v25) > WORD2(v25))
                              {
                                if (BYTE6(v25) == 2)
                                {
                                  char v17 = a1[5];
                                  ++WORD2(v25);
                                  *(_BYTE *)(v24 + v16) = v17;
                                  return sub_10018BD78(226, v24, BYTE4(v25), a2, (uint64_t)sub_10013DC24, v5, v6, v7);
                                }

                                __int128 v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2871,  v23);
                              }
                            }

                            __int128 v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_45;
                          }

                          unsigned int v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2870,  v22);
                        }
                      }

                      unsigned int v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_41;
                    }

                    uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2869,  v21);
                  }
                }

                uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_37;
              }

              uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  2868,  v20);
            }

            uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_33;
          }

          uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2867, v19);
        }

        uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_29;
      }

      uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 2866, v18);
    }

    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_25;
  }

  return result;
}

uint64_t sub_100140958(char a1, char a2, char a3, uint64_t a4)
{
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t result = sub_10018BCDC(&v21);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v22))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v12 = WORD2(v22);
      if (WORD1(v22) > WORD2(v22))
      {
        if (BYTE6(v22) == 2)
        {
          ++WORD2(v22);
          *(_BYTE *)(v21 + v12) = a1;
          if (HIBYTE(v22))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v22) - WORD2(v22) > 2)
          {
            if (BYTE6(v22) == 2)
            {
              uint64_t v13 = v21 + WORD2(v22);
              *(_BYTE *)(v13 + 2) = 0;
              *(_WORD *)uint64_t v13 = 0;
              __int16 v14 = WORD2(v22);
              unsigned __int16 v15 = WORD2(v22) + 3;
              WORD2(v22) += 3;
              if (HIBYTE(v22))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }

              else if (WORD1(v22) > v15)
              {
                if (BYTE6(v22) == 2)
                {
                  WORD2(v22) = v14 + 4;
                  *(_BYTE *)(v21 + v15) = a2;
                  if (HIBYTE(v22))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }

                  else
                  {
                    uint64_t v16 = WORD2(v22);
                    if (WORD1(v22) > WORD2(v22))
                    {
                      if (BYTE6(v22) == 2)
                      {
                        ++WORD2(v22);
                        *(_BYTE *)(v21 + v16) = a3;
                        return sub_10018BD78(383, v21, BYTE4(v22), a4, (uint64_t)sub_10013A594, v9, v10, v11);
                      }

                      uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  3093,  v20);
                    }
                  }

                  uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_31;
                }

                uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  3092,  v19);
              }

              uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_27;
            }

            uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  3091,  v18);
          }

          uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= (3)";
          goto LABEL_23;
        }

        char v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3090, v17);
      }
    }

    char v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_100140BAC(_WORD *a1, const void *a2, int a3, uint64_t a4)
{
  uint64_t v24 = 0LL;
  uint64_t v25 = 0LL;
  uint64_t result = sub_10018BCDC(&v24);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v25))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v9 = WORD2(v25);
      if (WORD1(v25) > WORD2(v25))
      {
        if (BYTE6(v25) == 2)
        {
          ++WORD2(v25);
          *(_BYTE *)(v24 + v9) = 11;
          if (HIBYTE(v25))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else
          {
            uint64_t v10 = WORD2(v25);
            if (WORD1(v25) > WORD2(v25))
            {
              if (BYTE6(v25) == 2)
              {
                ++WORD2(v25);
                *(_BYTE *)(v24 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = 1;
                if (HIBYTE(v25))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else if (WORD1(v25) - WORD2(v25) > 1)
                {
                  if (BYTE6(v25) == 2)
                  {
                    *(_WORD *)(v24 + WORD2(v25)) = *a1;
                    __int16 v11 = WORD2(v25);
                    unsigned __int16 v12 = WORD2(v25) + 2;
                    WORD2(v25) += 2;
                    if (HIBYTE(v25))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }

                    else if (WORD1(v25) > v12)
                    {
                      if (BYTE6(v25) == 2)
                      {
                        WORD2(v25) = v11 + 3;
                        *(_BYTE *)(v24 + v12) = 5;
                        uint64_t v13 = v24;
                        uint64_t v14 = WORD2(v25);
                        if (HIBYTE(v25))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          int v15 = 0;
                        }

                        else
                        {
                          int v15 = WORD1(v25) - WORD2(v25);
                        }

                        if (v15 < a3)
                        {
                          __int128 v23 = "ByteStream_NumReadBytesAvail(bs) >= (rssiLen)";
                        }

                        else
                        {
                          if (BYTE6(v25) == 2)
                          {
                            memmove((void *)(v13 + v14), a2, a3);
                            WORD2(v25) += a3;
                            return sub_10018BD78(233, v24, BYTE4(v25), a4, (uint64_t)sub_10013A594, v16, v17, v18);
                          }

                          __int128 v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                        }

                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  3460,  v23);
                      }

                      uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  3459,  v22);
                    }

                    uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_36;
                  }

                  uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  3458,  v21);
                }

                uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_32;
              }

              uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  3457,  v20);
            }
          }

          uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_28;
        }

        uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3456, v19);
      }
    }

    uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_24;
  }

  return result;
}

uint64_t sub_100140EB8(_WORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v14) - WORD2(v14) > 1)
    {
      if (BYTE6(v14) == 2)
      {
        *(_WORD *)(v13 + WORD2(v14)) = *a1;
        unsigned __int16 v7 = WORD2(v14) + 2;
        WORD2(v14) += 2;
        if (HIBYTE(v14))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v14) - v7 > 5)
        {
          if (BYTE6(v14) == 2)
          {
            sub_1001F0050(v13 + v7, a2, 6uLL);
            WORD2(v14) += 6;
            return sub_10018BD78(386, v13, BYTE4(v14), a3, (uint64_t)sub_10013A594, v8, v9, v10);
          }

          unsigned __int16 v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3703, v12);
        }

        unsigned __int16 v12 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
        goto LABEL_17;
      }

      __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3702, v11);
    }

    __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_100141038(uint64_t a1)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if ((_DWORD)result) {
    return result;
  }
  if (HIBYTE(v11))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_13;
  }

  uint64_t v6 = WORD2(v11);
  if (WORD1(v11) <= WORD2(v11))
  {
LABEL_13:
    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_15;
  }

  if (BYTE6(v11) != 2)
  {
    uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_15:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4116, v8);
  }

  ++WORD2(v11);
  *(_BYTE *)(v10 + v6) = -16;
  if (HIBYTE(v11))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_17;
  }

  uint64_t v7 = WORD2(v11);
  if (WORD1(v11) <= WORD2(v11))
  {
LABEL_17:
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  if (BYTE6(v11) != 2)
  {
    uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4117, v9);
  }

  ++WORD2(v11);
  *(_BYTE *)(v10 + v7) = 3;
  if (off_1008E27C0) {
    sub_1001EE2A0();
  }
  return sub_10018BD78(0, v10, BYTE4(v11), a1, (uint64_t)sub_10013F954, v3, v4, v5);
}

uint64_t sub_100141190(char a1, uint64_t a2)
{
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  uint64_t result = sub_10018BCDC(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v13) - WORD2(v13) > 3)
    {
      if (BYTE6(v13) == 2)
      {
        *(_DWORD *)(v12 + WORD2(v13)) = 0;
        __int16 v8 = WORD2(v13);
        unsigned __int16 v9 = WORD2(v13) + 4;
        WORD2(v13) += 4;
        if (HIBYTE(v13))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v13) > v9)
        {
          if (BYTE6(v13) == 2)
          {
            WORD2(v13) = v8 + 5;
            *(_BYTE *)(v12 + v9) = a1;
            return sub_10018BD78(383, v12, BYTE4(v13), a2, (uint64_t)sub_10013A594, v5, v6, v7);
          }

          uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4134, v11);
        }

        uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }

      uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4133, v10);
    }

    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= (4)";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1001412DC(char a1, _WORD *a2, uint64_t a3)
{
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  uint64_t result = sub_10018BCDC(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v7 = WORD2(v17);
      if (WORD1(v17) > WORD2(v17))
      {
        if (BYTE6(v17) == 2)
        {
          ++WORD2(v17);
          *(_BYTE *)(v16 + v7) = a1;
          if (HIBYTE(v17))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v17) - WORD2(v17) > 1)
          {
            if (BYTE6(v17) == 2)
            {
              *(_WORD *)(v16 + WORD2(v17)) = 2;
              WORD2(v17) += 2;
              if (sub_10018BE60() <= 8)
              {
                __int16 v12 = 126;
                unsigned __int8 v11 = BYTE4(v17);
                return sub_10018BD78(v12, v16, v11, a3, (uint64_t)sub_10013A594, v8, v9, v10);
              }

              if (HIBYTE(v17))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }

              else if (WORD1(v17) - WORD2(v17) > 1)
              {
                if (BYTE6(v17) == 2)
                {
                  *(_WORD *)(v16 + WORD2(v17)) = *a2;
                  unsigned __int8 v11 = BYTE4(v17) + 2;
                  WORD2(v17) += 2;
                  __int16 v12 = 258;
                  return sub_10018BD78(v12, v16, v11, a3, (uint64_t)sub_10013A594, v8, v9, v10);
                }

                int v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4152,  v15);
              }

              int v15 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_27;
            }

            uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4149,  v14);
          }

          uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_23;
        }

        uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4148, v13);
      }
    }

    uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_1001414F8(unsigned int a1, uint64_t a2)
{
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t result = sub_10018BCDC(&v21);
  unsigned int v8 = 0x101u >> (8 * a1);
  if (a1 <= 2) {
    char v9 = 0x100u >> (8 * a1);
  }
  else {
    char v9 = 0;
  }
  if (a1 <= 2) {
    char v10 = 0x20000u >> (8 * a1);
  }
  else {
    char v10 = 0;
  }
  if (a1 > 2) {
    LOBYTE(v8) = 0;
  }
  if (!(_DWORD)result)
  {
    if (HIBYTE(v22))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v11 = WORD2(v22);
      if (WORD1(v22) > WORD2(v22))
      {
        if (BYTE6(v22) == 2)
        {
          ++WORD2(v22);
          *(_BYTE *)(v21 + v11) = v9;
          if (HIBYTE(v22))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else
          {
            uint64_t v12 = WORD2(v22);
            if (WORD1(v22) > WORD2(v22))
            {
              if (BYTE6(v22) == 2)
              {
                ++WORD2(v22);
                *(_BYTE *)(v21 + v12) = v10;
                if (HIBYTE(v22))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else
                {
                  uint64_t v13 = WORD2(v22);
                  if (WORD1(v22) > WORD2(v22))
                  {
                    if (BYTE6(v22) == 2)
                    {
                      ++WORD2(v22);
                      *(_BYTE *)(v21 + v13) = v8;
                      if (HIBYTE(v22))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }

                      else
                      {
                        uint64_t v14 = WORD2(v22);
                        if (WORD1(v22) > WORD2(v22))
                        {
                          if (BYTE6(v22) == 2)
                          {
                            ++WORD2(v22);
                            *(_BYTE *)(v21 + v14) = 0;
                            if (HIBYTE(v22))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }

                            else
                            {
                              uint64_t v15 = WORD2(v22);
                              if (WORD1(v22) > WORD2(v22))
                              {
                                if (BYTE6(v22) == 2)
                                {
                                  ++WORD2(v22);
                                  *(_BYTE *)(v21 + v15) = 0;
                                  return sub_10018BD78(28, v21, BYTE4(v22), a2, (uint64_t)sub_10013A594, v5, v6, v7);
                                }

                                uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_46:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4210,  v20);
                              }
                            }

                            uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_46;
                          }

                          uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4209,  v19);
                        }
                      }

                      uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_42;
                    }

                    uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4208,  v18);
                  }
                }

                uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_38;
              }

              uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4207,  v17);
            }
          }

          uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_34;
        }

        uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4206, v16);
      }
    }

    uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_30;
  }

  return result;
}

uint64_t sub_1001417D0(const void *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    uint64_t v7 = v14;
    uint64_t v8 = WORD2(v15);
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      unsigned int v9 = 0;
    }

    else
    {
      unsigned int v9 = WORD1(v15) - WORD2(v15);
    }

    if (v9 < a2)
    {
      uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= (length)";
    }

    else
    {
      if (BYTE6(v15) == 2)
      {
        memmove((void *)(v7 + v8), a1, a2);
        WORD2(v15) += a2;
        return sub_10018BD78(97, v14, BYTE4(v15), a3, (uint64_t)sub_10013A594, v10, v11, v12);
      }

      uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
    }

    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4224, v13);
  }

  return result;
}

uint64_t sub_1001418CC(_WORD *a1, uint64_t a2)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t result = sub_10018BCDC(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = *a1;
        WORD2(v10) += 2;
        return sub_10018BD78(72, v9, BYTE4(v10), a2, (uint64_t)sub_10013A9D8, v5, v6, v7);
      }

      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4238, v8);
    }

    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1001419B8(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(393, v10, BYTE4(v11), a2, (uint64_t)sub_10013A594, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4252, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_100141A84(int a1, unsigned int a2, uint64_t a3)
{
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t result = sub_10018BCDC(&v17);
  char v7 = 1;
  int __src = 1;
  if (a1 == 1)
  {
    char v8 = 2;
  }

  else
  {
    if (a1) {
      goto LABEL_6;
    }
    char v7 = 0;
    char v8 = 1;
  }

  BYTE2(__src) = v7;
  HIBYTE(__src) = v8;
LABEL_6:
  if ((_DWORD)result) {
    return result;
  }
  uint64_t v9 = v17;
  uint64_t v10 = WORD2(v18);
  if (HIBYTE(v18))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    unsigned int v11 = 0;
  }

  else
  {
    unsigned int v11 = WORD1(v18) - WORD2(v18);
  }

  if (v11 < a2)
  {
    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= (length)";
    goto LABEL_16;
  }

  if (BYTE6(v18) != 2)
  {
    uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4288, v15);
  }

  memmove((void *)(v9 + v10), &__src, a2);
  WORD2(v18) += a2;
  return sub_10018BD78(109, v17, BYTE4(v18), a3, (uint64_t)sub_10013A594, v12, v13, v14);
}

uint64_t sub_100141BA4(_BYTE *a1, uint64_t a2)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_BYTE *)(v14 + WORD2(v15)) = 0;
        *(_BYTE *)(v14 + WORD2(v15) + 1) = 1;
        unsigned __int16 v8 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v15) - v8 > 1)
        {
          if (BYTE6(v15) == 2)
          {
            *(_BYTE *)(v14 + v8) = *a1;
            *(_BYTE *)(v14 + WORD2(v15) + 1) = a1[1];
            unsigned __int16 v9 = WORD2(v15) + 2;
            WORD2(v15) += 2;
            if (HIBYTE(v15))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }

            else if (WORD1(v15) - v9 > 2)
            {
              if (BYTE6(v15) == 2)
              {
                uint64_t v10 = v14 + v9;
                *(_BYTE *)(v10 + 2) = 0;
                *(_WORD *)uint64_t v10 = 0;
                WORD2(v15) += 3;
                return sub_10018BD78(131, v14, BYTE4(v15), a2, (uint64_t)sub_10013A594, v5, v6, v7);
              }

              uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4306,  v13);
            }

            uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= (3)";
            goto LABEL_24;
          }

          uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4305, v12);
        }

        uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_20;
      }

      unsigned int v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4304, v11);
    }

    unsigned int v11 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_100141DA8(const void *a1, int a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    uint64_t v7 = v14;
    uint64_t v8 = WORD2(v15);
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      int v9 = 0;
    }

    else
    {
      int v9 = WORD1(v15) - WORD2(v15);
    }

    if (v9 < a2)
    {
      uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= (length)";
    }

    else
    {
      if (BYTE6(v15) == 2)
      {
        memmove((void *)(v7 + v8), a1, a2);
        WORD2(v15) += a2;
        return sub_10018BD78(270, v14, BYTE4(v15), a3, (uint64_t)sub_10013A594, v10, v11, v12);
      }

      uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
    }

    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4321, v13);
  }

  return result;
}

uint64_t sub_100141EA4(const void *a1, int a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    uint64_t v7 = v14;
    uint64_t v8 = WORD2(v15);
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      int v9 = 0;
    }

    else
    {
      int v9 = WORD1(v15) - WORD2(v15);
    }

    if (v9 < a2)
    {
      uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= (length)";
    }

    else
    {
      if (BYTE6(v15) == 2)
      {
        memmove((void *)(v7 + v8), a1, a2);
        WORD2(v15) += a2;
        return sub_10018BD78(277, v14, BYTE4(v15), a3, (uint64_t)sub_10013A594, v10, v11, v12);
      }

      uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
    }

    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4335, v13);
  }

  return result;
}

uint64_t sub_100141FA0(const void *a1, int a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    uint64_t v7 = v14;
    uint64_t v8 = WORD2(v15);
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      int v9 = 0;
    }

    else
    {
      int v9 = WORD1(v15) - WORD2(v15);
    }

    if (v9 < a2)
    {
      uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= (length)";
    }

    else
    {
      if (BYTE6(v15) == 2)
      {
        memmove((void *)(v7 + v8), a1, a2);
        WORD2(v15) += a2;
        return sub_10018BD78(269, v14, BYTE4(v15), a3, (uint64_t)sub_10013A594, v10, v11, v12);
      }

      uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
    }

    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4349, v13);
  }

  return result;
}

uint64_t sub_10014209C(_BYTE *a1, _WORD *a2, int a3, uint64_t a4)
{
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  uint64_t result = sub_10018BCDC(&v20);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v21))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v21) - WORD2(v21) > 1)
    {
      if (BYTE6(v21) == 2)
      {
        *(_WORD *)(v20 + WORD2(v21)) = *a2;
        unsigned __int16 v9 = WORD2(v21) + 2;
        WORD2(v21) += 2;
        if (HIBYTE(v21))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v21) - v9 > 1)
        {
          if (BYTE6(v21) == 2)
          {
            *(_BYTE *)(v20 + v9) = *a1;
            *(_BYTE *)(v20 + WORD2(v21) + 1) = a1[1];
            unsigned __int16 v10 = WORD2(v21) + 2;
            WORD2(v21) += 2;
            uint64_t v11 = v20;
            if (HIBYTE(v21))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              int v12 = 0;
            }

            else
            {
              int v12 = WORD1(v21) - v10;
            }

            int v13 = a3 - 4;
            if (v12 < v13)
            {
              uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= ((length - 4))";
            }

            else
            {
              if (BYTE6(v21) == 2)
              {
                memmove((void *)(v11 + v10), a2 + 2, v13);
                WORD2(v21) += v13;
                return sub_10018BD78(268, v20, BYTE4(v21), a4, (uint64_t)sub_10013A594, v14, v15, v16);
              }

              uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            }

            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4365,  v19);
          }

          uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4364, v18);
        }

        uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_22;
      }

      uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_18:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4363, v17);
    }

    uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= (2)";
    goto LABEL_18;
  }

  return result;
}

uint64_t sub_1001422B8(_BYTE *a1, char a2, __int16 a3, __int16 a4, __int16 a5, __int16 a6, uint64_t a7)
{
  uint64_t v33 = 0LL;
  uint64_t v34 = 0LL;
  uint64_t result = sub_10018BCDC(&v33);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v34))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v34) - WORD2(v34) > 3)
    {
      if (BYTE6(v34) == 2)
      {
        *(_BYTE *)(v33 + WORD2(v34)) = 8;
        *(_WORD *)(v33 + WORD2(v34) + 1) = 0;
        *(_BYTE *)(v33 + WORD2(v34) + 3) = 0;
        unsigned __int16 v18 = WORD2(v34) + 4;
        WORD2(v34) += 4;
        if (HIBYTE(v34))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v34) - v18 > 1)
        {
          if (BYTE6(v34) == 2)
          {
            *(_BYTE *)(v33 + v18) = *a1;
            *(_BYTE *)(v33 + WORD2(v34) + 1) = a1[1];
            __int16 v19 = WORD2(v34);
            unsigned __int16 v20 = WORD2(v34) + 2;
            WORD2(v34) += 2;
            if (HIBYTE(v34))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }

            else if (WORD1(v34) > v20)
            {
              if (BYTE6(v34) == 2)
              {
                WORD2(v34) = v19 + 3;
                *(_BYTE *)(v33 + v20) = a2;
                if (HIBYTE(v34))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else
                {
                  uint64_t v21 = WORD2(v34);
                  if (WORD1(v34) > WORD2(v34))
                  {
                    if (BYTE6(v34) == 2)
                    {
                      ++WORD2(v34);
                      *(_BYTE *)(v33 + v21) = 0;
                      if (HIBYTE(v34))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }

                      else if (WORD1(v34) - WORD2(v34) > 1)
                      {
                        if (BYTE6(v34) == 2)
                        {
                          *(_WORD *)(v33 + WORD2(v34)) = a3;
                          unsigned __int16 v22 = WORD2(v34) + 2;
                          WORD2(v34) += 2;
                          if (HIBYTE(v34))
                          {
                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }

                          else if (WORD1(v34) - v22 > 1)
                          {
                            if (BYTE6(v34) == 2)
                            {
                              *(_BYTE *)(v33 + v22) = a4;
                              *(_BYTE *)(v33 + WORD2(v34) + 1) = HIBYTE(a4);
                              unsigned __int16 v23 = WORD2(v34) + 2;
                              WORD2(v34) += 2;
                              if (HIBYTE(v34))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }

                              else if (WORD1(v34) - v23 > 1)
                              {
                                if (BYTE6(v34) == 2)
                                {
                                  *(_BYTE *)(v33 + v23) = a5;
                                  *(_BYTE *)(v33 + WORD2(v34) + 1) = HIBYTE(a5);
                                  unsigned __int16 v24 = WORD2(v34) + 2;
                                  WORD2(v34) += 2;
                                  if (HIBYTE(v34))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }

                                  else if (WORD1(v34) - v24 > 1)
                                  {
                                    if (BYTE6(v34) == 2)
                                    {
                                      *(_BYTE *)(v33 + v24) = a6;
                                      *(_BYTE *)(v33 + WORD2(v34) + 1) = HIBYTE(a6);
                                      WORD2(v34) += 2;
                                      return sub_10018BD78( 226,  v33,  BYTE4(v34),  a7,  (uint64_t)sub_10013A594,  v15,  v16,  v17);
                                    }

                                    unsigned int v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4387,  v32);
                                  }

                                  unsigned int v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                  goto LABEL_59;
                                }

                                unsigned int v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4386,  v31);
                              }

                              unsigned int v31 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                              goto LABEL_55;
                            }

                            unsigned int v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4385,  v30);
                          }

                          unsigned int v30 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_51;
                        }

                        unsigned int v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_47:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4384,  v29);
                      }

                      unsigned int v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_47;
                    }

                    unsigned int v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4383,  v28);
                  }
                }

                unsigned int v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_43;
              }

              __int128 v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_39:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4382,  v27);
            }

            __int128 v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_39;
          }

          __int128 v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4381, v26);
        }

        __int128 v26 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_35;
      }

      uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4380, v25);
    }

    uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_31;
  }

  return result;
}

uint64_t sub_1001427C4( _WORD *a1, char a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, uint64_t a10)
{
  uint64_t v34 = 0LL;
  uint64_t v35 = 0LL;
  uint64_t result = sub_10018BCDC(&v34);
  if (a3) {
    char v22 = 2;
  }
  else {
    char v22 = 0;
  }
  if (a4) {
    char v23 = 4;
  }
  else {
    char v23 = 0;
  }
  if (a5) {
    char v24 = 8;
  }
  else {
    char v24 = 0;
  }
  if (a6) {
    char v25 = 16;
  }
  else {
    char v25 = 0;
  }
  if (a7) {
    char v26 = 64;
  }
  else {
    char v26 = 0;
  }
  if (a8) {
    char v27 = 0x80;
  }
  else {
    char v27 = 0;
  }
  if (!(_DWORD)result)
  {
    if (HIBYTE(v35))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v35) - WORD2(v35) > 1)
    {
      if (BYTE6(v35) == 2)
      {
        *(_WORD *)(v34 + WORD2(v35)) = *a1;
        __int16 v28 = WORD2(v35);
        unsigned __int16 v29 = WORD2(v35) + 2;
        WORD2(v35) += 2;
        if (HIBYTE(v35))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v35) > v29)
        {
          if (BYTE6(v35) == 2)
          {
            WORD2(v35) = v28 + 3;
            *(_BYTE *)(v34 + v29) = v22 | a2 | v23 | v24 | v25 | v26 | v27;
            if (HIBYTE(v35))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }

            else
            {
              uint64_t v30 = WORD2(v35);
              if (WORD1(v35) > WORD2(v35))
              {
                if (BYTE6(v35) == 2)
                {
                  ++WORD2(v35);
                  *(_BYTE *)(v34 + v30) = a9;
                  return sub_10018BD78(477, v34, BYTE4(v35), a10, (uint64_t)sub_10013A594, v19, v20, v21);
                }

                uint64_t v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4408,  v33);
              }
            }

            uint64_t v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_42;
          }

          unsigned int v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4407, v32);
        }

        unsigned int v32 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_38;
      }

      unsigned int v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4406, v31);
    }

    unsigned int v31 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_34;
  }

  return result;
}

uint64_t sub_100142A34(int a1, uint64_t a2)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  int v16 = 0;
  uint64_t v15 = 0LL;
  if (!(_DWORD)result)
  {
    if (a1)
    {
      if (HIBYTE(v14))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }

      else if (WORD1(v14) - WORD2(v14) > 11)
      {
        if (BYTE6(v14) == 2)
        {
          uint64_t v8 = &qword_1006BD0F2;
LABEL_11:
          uint64_t v9 = v13 + WORD2(v14);
          uint64_t v10 = *v8;
          *(_DWORD *)(v9 + 8) = *((_DWORD *)v8 + 2);
          *(void *)uint64_t v9 = v10;
          WORD2(v14) += 12;
          return sub_10018BD78(39, v13, BYTE4(v14), a2, (uint64_t)sub_10013A594, v5, v6, v7);
        }

        uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4425, v11);
      }

      uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= (12)";
      goto LABEL_16;
    }

    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v14) - WORD2(v14) > 11)
    {
      if (BYTE6(v14) == 2)
      {
        uint64_t v8 = &v15;
        goto LABEL_11;
      }

      int v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4427, v12);
    }

    int v12 = "ByteStream_NumReadBytesAvail(bs) >= (12)";
    goto LABEL_20;
  }

  return result;
}

uint64_t sub_100142BC4(int a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1 != 0;
          return sub_10018BD78(385, v10, BYTE4(v11), a2, (uint64_t)sub_10013A594, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4442, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_100142C98(char *a1, uint64_t a2)
{
  uint64_t v40 = 0LL;
  uint64_t v41 = 0LL;
  uint64_t result = sub_10018BCDC(&v40);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v41))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v41);
      if (WORD1(v41) > WORD2(v41))
      {
        if (BYTE6(v41) == 2)
        {
          char v9 = *a1;
          ++WORD2(v41);
          *(_BYTE *)(v40 + v8) = v9;
          if (HIBYTE(v41))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v41) - WORD2(v41) > 1)
          {
            if (BYTE6(v41) == 2)
            {
              *(_WORD *)(v40 + WORD2(v41)) = *((_WORD *)a1 + 1);
              __int16 v10 = WORD2(v41);
              LOWORD(v11) = WORD2(v41) + 2;
              WORD2(v41) += 2;
              if (!*a1) {
                return sub_10018BD78(289, v40, v11, a2, (uint64_t)sub_10013DC24, v5, v6, v7);
              }
              if (HIBYTE(v41))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }

              else if (WORD1(v41) > (unsigned __int16)v11)
              {
                if (BYTE6(v41) == 2)
                {
                  char v12 = a1[4];
                  WORD2(v41) = v10 + 3;
                  *(_BYTE *)(v40 + (unsigned __int16)v11) = v12;
                  if (HIBYTE(v41))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }

                  else
                  {
                    uint64_t v13 = WORD2(v41);
                    if (WORD1(v41) > WORD2(v41))
                    {
                      if (BYTE6(v41) == 2)
                      {
                        char v14 = a1[5];
                        ++WORD2(v41);
                        *(_BYTE *)(v40 + v13) = v14;
                        if (HIBYTE(v41))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }

                        else
                        {
                          uint64_t v15 = WORD2(v41);
                          if (WORD1(v41) > WORD2(v41))
                          {
                            if (BYTE6(v41) == 2)
                            {
                              char v16 = a1[6];
                              ++WORD2(v41);
                              *(_BYTE *)(v40 + v15) = v16;
                              if (HIBYTE(v41))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }

                              else if (WORD1(v41) - WORD2(v41) > 1)
                              {
                                if (BYTE6(v41) == 2)
                                {
                                  *(_WORD *)(v40 + WORD2(v41)) = *((_WORD *)a1 + 4);
                                  unsigned __int16 v17 = WORD2(v41) + 2;
                                  WORD2(v41) += 2;
                                  if (HIBYTE(v41))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }

                                  else if (WORD1(v41) - v17 > 1)
                                  {
                                    if (BYTE6(v41) == 2)
                                    {
                                      *(_BYTE *)(v40 + v17) = a1[10];
                                      *(_BYTE *)(v40 + WORD2(v41) + 1) = a1[11];
                                      __int16 v18 = WORD2(v41);
                                      unsigned __int16 v19 = WORD2(v41) + 2;
                                      WORD2(v41) += 2;
                                      if (HIBYTE(v41))
                                      {
                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }

                                      else if (WORD1(v41) > v19)
                                      {
                                        if (BYTE6(v41) == 2)
                                        {
                                          char v20 = a1[12];
                                          WORD2(v41) = v18 + 3;
                                          *(_BYTE *)(v40 + v19) = v20;
                                          if (HIBYTE(v41))
                                          {
                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }

                                          else
                                          {
                                            uint64_t v21 = WORD2(v41);
                                            if (WORD1(v41) > WORD2(v41))
                                            {
                                              if (BYTE6(v41) == 2)
                                              {
                                                char v22 = a1[13];
                                                ++WORD2(v41);
                                                *(_BYTE *)(v40 + v21) = v22;
                                                if (HIBYTE(v41))
                                                {
                                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                }

                                                else
                                                {
                                                  uint64_t v23 = WORD2(v41);
                                                  if (WORD1(v41) > WORD2(v41))
                                                  {
                                                    if (BYTE6(v41) == 2)
                                                    {
                                                      char v24 = a1[14];
                                                      ++WORD2(v41);
                                                      *(_BYTE *)(v40 + v23) = v24;
                                                      if (HIBYTE(v41))
                                                      {
                                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                      }

                                                      else
                                                      {
                                                        uint64_t v25 = WORD2(v41);
                                                        if (WORD1(v41) > WORD2(v41))
                                                        {
                                                          if (BYTE6(v41) == 2)
                                                          {
                                                            char v26 = a1[15];
                                                            ++WORD2(v41);
                                                            *(_BYTE *)(v40 + v25) = v26;
                                                            if (HIBYTE(v41))
                                                            {
                                                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sourc"
                                                                                     "es/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                            }

                                                            else
                                                            {
                                                              uint64_t v11 = WORD2(v41);
                                                              if (WORD1(v41) > WORD2(v41))
                                                              {
                                                                if (BYTE6(v41) == 2)
                                                                {
                                                                  char v27 = a1[16];
                                                                  ++WORD2(v41);
                                                                  *(_BYTE *)(v40 + v11) = v27;
                                                                  LOBYTE(v11) = BYTE4(v41);
                                                                  return sub_10018BD78( 289,  v40,  v11,  a2,  (uint64_t)sub_10013DC24,  v5,  v6,  v7);
                                                                }

                                                                unsigned int v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_89:
                                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_ base/Stack/vsc/bcm/bcm_vsc.c",  4470,  v39);
                                                              }
                                                            }

                                                            unsigned int v39 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                            goto LABEL_89;
                                                          }

                                                          unsigned int v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_85:
                                                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/S tack/vsc/bcm/bcm_vsc.c",  4469,  v38);
                                                        }
                                                      }

                                                      unsigned int v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                      goto LABEL_85;
                                                    }

                                                    unsigned int v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_81:
                                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/v sc/bcm/bcm_vsc.c",  4468,  v37);
                                                  }
                                                }

                                                unsigned int v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_81;
                                              }

                                              unsigned int v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_77:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4467,  v36);
                                            }
                                          }

                                          unsigned int v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_77;
                                        }

                                        uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_73:
                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4466,  v35);
                                      }

                                      uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                      goto LABEL_73;
                                    }

                                    uint64_t v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_69:
                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4465,  v34);
                                  }

                                  uint64_t v34 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                  goto LABEL_69;
                                }

                                uint64_t v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_65:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4464,  v33);
                              }

                              uint64_t v33 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                              goto LABEL_65;
                            }

                            unsigned int v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4463,  v32);
                          }
                        }

                        unsigned int v32 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_61;
                      }

                      unsigned int v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_57:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4462,  v31);
                    }
                  }

                  unsigned int v31 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_57;
                }

                uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_53:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4461,  v30);
              }

              uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_53;
            }

            unsigned __int16 v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_49:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4458,  v29);
          }

          unsigned __int16 v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_49;
        }

        __int16 v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4457, v28);
      }
    }

    __int16 v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_45;
  }

  return result;
}

uint64_t *sub_10014331C(uint64_t *result, char *a2)
{
  if (*((_BYTE *)result + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_18;
  }

  uint64_t v2 = *((unsigned __int16 *)result + 6);
  if (*((unsigned __int16 *)result + 5) <= v2)
  {
LABEL_18:
    uint64_t v13 = "ByteStream_NumReadBytesAvail(*bs) >= 1";
    goto LABEL_20;
  }

  if (*((_BYTE *)result + 14) != 2)
  {
    uint64_t v13 = "(*bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4482, v13);
  }

  char v3 = *a2;
  uint64_t v4 = *result;
  *((_WORD *)result + 6) = v2 + 1;
  *(_BYTE *)(v4 + v2) = v3;
  if (*((_BYTE *)result + 15))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_22;
  }

  uint64_t v5 = *((unsigned __int16 *)result + 6);
  if (*((unsigned __int16 *)result + 5) <= v5)
  {
LABEL_22:
    char v14 = "ByteStream_NumReadBytesAvail(*bs) >= 1";
    goto LABEL_24;
  }

  if (*((_BYTE *)result + 14) != 2)
  {
    char v14 = "(*bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4483, v14);
  }

  char v6 = a2[1];
  uint64_t v7 = *result;
  *((_WORD *)result + 6) = v5 + 1;
  *(_BYTE *)(v7 + v5) = v6;
  for (uint64_t i = 2LL; i != 12; ++i)
  {
    if (*((_BYTE *)result + 15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_14:
      char v12 = "ByteStream_NumReadBytesAvail(*bs) >= 1";
LABEL_16:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4485, v12);
    }

    uint64_t v9 = *((unsigned __int16 *)result + 6);
    if (*((_BYTE *)result + 14) != 2)
    {
      char v12 = "(*bs).__RWFlag == BYTESTREAM_WRITE";
      goto LABEL_16;
    }

    char v10 = a2[i];
    uint64_t v11 = *result;
    *((_WORD *)result + 6) = v9 + 1;
    *(_BYTE *)(v11 + v9) = v10;
  }

  return result;
}

uint64_t sub_1001434B0(char *a1, uint64_t a2)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v5 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          char v6 = *a1;
          ++WORD2(v12);
          *(_BYTE *)(v11 + v5) = v6;
          sub_10014331C(&v11, a1 + 1);
          sub_10014331C(&v11, a1 + 13);
          sub_10014331C(&v11, a1 + 25);
          sub_10014331C(&v11, a1 + 37);
          return sub_10018BD78(465, v11, BYTE4(v12), a2, (uint64_t)sub_10013A594, v7, v8, v9);
        }

        char v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4495, v10);
      }
    }

    char v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1001435BC(char *a1, uint64_t a2)
{
  uint64_t v30 = 0LL;
  uint64_t v31 = 0LL;
  uint64_t result = sub_10018BCDC(&v30);
  if ((_DWORD)result) {
    return result;
  }
  if (HIBYTE(v31))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_32;
  }

  uint64_t v8 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31))
  {
LABEL_32:
    char v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_34;
  }

  if (BYTE6(v31) != 2)
  {
    char v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4514, v24);
  }

  char v9 = *a1;
  ++WORD2(v31);
  *(_BYTE *)(v30 + v8) = v9;
  if (HIBYTE(v31))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_36;
  }

  uint64_t v10 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31))
  {
LABEL_36:
    uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_38;
  }

  if (BYTE6(v31) != 2)
  {
    uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4515, v25);
  }

  char v11 = a1[1];
  ++WORD2(v31);
  *(_BYTE *)(v30 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = v11;
  if (HIBYTE(v31))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_40;
  }

  uint64_t v12 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31))
  {
LABEL_40:
    char v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_42;
  }

  if (BYTE6(v31) != 2)
  {
    char v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4516, v26);
  }

  char v13 = a1[2];
  ++WORD2(v31);
  *(_BYTE *)(v30 + v12) = v13;
  if (HIBYTE(v31))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_44;
  }

  uint64_t v14 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31))
  {
LABEL_44:
    char v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_46;
  }

  if (BYTE6(v31) != 2)
  {
    char v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_46:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4517, v27);
  }

  char v15 = a1[3];
  ++WORD2(v31);
  *(_BYTE *)(v30 + v14) = v15;
  if (HIBYTE(v31))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_48;
  }

  uint64_t v16 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31))
  {
LABEL_48:
    __int16 v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_50;
  }

  if (BYTE6(v31) != 2)
  {
    __int16 v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_50:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4518, v28);
  }

  char v17 = a1[4];
  ++WORD2(v31);
  *(_BYTE *)(v30 + v16) = v17;
  if (HIBYTE(v31))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_52;
  }

  uint64_t v18 = WORD2(v31);
  if (WORD1(v31) <= WORD2(v31))
  {
LABEL_52:
    unsigned __int16 v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_54;
  }

  if (BYTE6(v31) != 2)
  {
    unsigned __int16 v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_54:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4519, v29);
  }

  char v19 = a1[5];
  ++WORD2(v31);
  *(_BYTE *)(v30 + v18) = v19;
  for (uint64_t i = 6LL; i != 16; ++i)
  {
    if (HIBYTE(v31))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_28:
      uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_30:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4521, v23);
    }

    uint64_t v21 = WORD2(v31);
    if (BYTE6(v31) != 2)
    {
      uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
      goto LABEL_30;
    }

    char v22 = a1[i];
    ++WORD2(v31);
    *(_BYTE *)(v30 + v21) = v22;
  }

  return sub_10018BD78(478, v30, BYTE4(v31), a2, (uint64_t)sub_10013A594, v5, v6, v7);
}

uint64_t sub_100143984(_WORD *a1, __int16 a2, uint64_t a3)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v14) - WORD2(v14) > 1)
    {
      if (BYTE6(v14) == 2)
      {
        *(_WORD *)(v13 + WORD2(v14)) = *a1;
        unsigned __int16 v10 = WORD2(v14) + 2;
        WORD2(v14) += 2;
        if (HIBYTE(v14))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v14) - v10 > 1)
        {
          if (BYTE6(v14) == 2)
          {
            *(_BYTE *)(v13 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = a2;
            *(_BYTE *)(v13 + WORD2(v14) + 1) = HIBYTE(a2);
            WORD2(v14) += 2;
            return sub_10018BD78(371, v13, BYTE4(v14), a3, (uint64_t)sub_10013A594, v7, v8, v9);
          }

          uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4538, v12);
        }

        uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_17;
      }

      char v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4537, v11);
    }

    char v11 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_100143B10(__int16 a1, uint64_t a2)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t result = sub_10018BCDC(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        WORD2(v10) += 2;
        return sub_10018BD78(411, v9, BYTE4(v10), a2, (uint64_t)sub_10013A594, v5, v6, v7);
      }

      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4553, v8);
    }

    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_100143BF8(_WORD *a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = *a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(_BYTE *)(v14 + v11) = a2;
            return sub_10018BD78(394, v14, BYTE4(v15), a3, (uint64_t)sub_10013A594, v7, v8, v9);
          }

          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4569, v13);
        }

        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }

      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4568, v12);
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_100143D68(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(283, v10, BYTE4(v11), a2, (uint64_t)sub_10013DC24, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4584, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_100143E34(char a1, uint64_t a2)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v12) - WORD2(v12) > 3)
    {
      if (BYTE6(v12) == 2)
      {
        *(_BYTE *)(v11 + WORD2(v12)) = 27;
        *(_WORD *)(v11 + WORD2(v12) + 1) = 0;
        *(_BYTE *)(v11 + WORD2(v12) + 3) = 0;
        unsigned __int16 v8 = WORD2(v12) + 4;
        WORD2(v12) += 4;
        if (HIBYTE(v12))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v12) - v8 > 3)
        {
          if (BYTE6(v12) == 2)
          {
            *(_BYTE *)(v11 + v8) = a1;
            *(_WORD *)(v11 + WORD2(v12) + 1) = 0;
            *(_BYTE *)(v11 + WORD2(v12) + 3) = 0;
            WORD2(v12) += 4;
            return sub_10018BD78(226, v11, BYTE4(v12), a2, (uint64_t)sub_10013A594, v5, v6, v7);
          }

          uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4600, v10);
        }

        uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_17;
      }

      uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4599, v9);
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_100143FEC(int a1, char a2, char a3, uint64_t a4)
{
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  uint64_t result = sub_10018BCDC(&v20);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v21))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v21) - WORD2(v21) > 3)
    {
      if (BYTE6(v21) == 2)
      {
        *(_BYTE *)(v20 + WORD2(v21)) = 19;
        *(_WORD *)(v20 + WORD2(v21) + 1) = 0;
        *(_BYTE *)(v20 + WORD2(v21) + 3) = 0;
        __int16 v12 = WORD2(v21);
        unsigned __int16 v13 = WORD2(v21) + 4;
        WORD2(v21) += 4;
        if (HIBYTE(v21))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v21) > v13)
        {
          if (BYTE6(v21) == 2)
          {
            WORD2(v21) = v12 + 5;
            *(_BYTE *)(v20 + v13) = a1;
            if (!a1) {
              return sub_10018BD78(226, v20, BYTE4(v21), a4, (uint64_t)sub_10013DC24, v9, v10, v11);
            }
            if (HIBYTE(v21))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }

            else
            {
              uint64_t v14 = WORD2(v21);
              if (WORD1(v21) > WORD2(v21))
              {
                if (BYTE6(v21) == 2)
                {
                  ++WORD2(v21);
                  *(_BYTE *)(v20 + v14) = a2;
                  if (HIBYTE(v21))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }

                  else
                  {
                    uint64_t v15 = WORD2(v21);
                    if (WORD1(v21) > WORD2(v21))
                    {
                      if (BYTE6(v21) == 2)
                      {
                        ++WORD2(v21);
                        *(_BYTE *)(v20 + v15) = a3;
                        return sub_10018BD78(226, v20, BYTE4(v21), a4, (uint64_t)sub_10013DC24, v9, v10, v11);
                      }

                      char v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4620,  v19);
                    }
                  }

                  char v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_33;
                }

                uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4619,  v18);
              }
            }

            uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_29;
          }

          char v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4616, v17);
        }

        char v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_25;
      }

      uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_21:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4615, v16);
    }

    uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_21;
  }

  return result;
}

uint64_t sub_100144270(int a1, char a2, char a3, char a4, char a5, char a6, uint64_t a7)
{
  uint64_t v38 = 0LL;
  uint64_t v39 = 0LL;
  uint64_t result = sub_10018BCDC(&v38);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v39))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v39) - WORD2(v39) > 3)
    {
      if (BYTE6(v39) == 2)
      {
        *(_BYTE *)(v38 + WORD2(v39)) = 61;
        *(_WORD *)(v38 + WORD2(v39) + 1) = 0;
        *(_BYTE *)(v38 + WORD2(v39) + 3) = 0;
        __int16 v18 = WORD2(v39);
        unsigned __int16 v19 = WORD2(v39) + 4;
        WORD2(v39) += 4;
        if (HIBYTE(v39))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v39) > v19)
        {
          if (BYTE6(v39) == 2)
          {
            WORD2(v39) = v18 + 5;
            *(_BYTE *)(v38 + v19) = a1;
            if (!a1)
            {
              unsigned __int8 v27 = BYTE4(v39);
              return sub_10018BD78(226, v38, v27, a7, (uint64_t)sub_10013DC24, v15, v16, v17);
            }

            if (HIBYTE(v39))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }

            else
            {
              uint64_t v20 = WORD2(v39);
              if (WORD1(v39) > WORD2(v39))
              {
                if (BYTE6(v39) == 2)
                {
                  ++WORD2(v39);
                  *(_BYTE *)(v38 + v20) = a2;
                  if (HIBYTE(v39))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }

                  else
                  {
                    uint64_t v21 = WORD2(v39);
                    if (WORD1(v39) > WORD2(v39))
                    {
                      if (BYTE6(v39) == 2)
                      {
                        ++WORD2(v39);
                        *(_BYTE *)(v38 + v21) = a3;
                        if (HIBYTE(v39))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }

                        else
                        {
                          uint64_t v22 = WORD2(v39);
                          if (WORD1(v39) > WORD2(v39))
                          {
                            if (BYTE6(v39) == 2)
                            {
                              ++WORD2(v39);
                              *(_BYTE *)(v38 + v22) = a4;
                              if (HIBYTE(v39))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }

                              else if (WORD1(v39) > WORD2(v39))
                              {
                                if (BYTE6(v39) == 2)
                                {
                                  *(_BYTE *)(v38 + WORD2(v39)) = 0;
                                  __int16 v23 = WORD2(v39);
                                  unsigned __int16 v24 = ++WORD2(v39);
                                  if (HIBYTE(v39))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }

                                  else if (WORD1(v39) > v24)
                                  {
                                    if (BYTE6(v39) == 2)
                                    {
                                      WORD2(v39) = v23 + 2;
                                      *(_BYTE *)(v38 + v24) = a5;
                                      if (HIBYTE(v39))
                                      {
                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }

                                      else if (WORD1(v39) > WORD2(v39))
                                      {
                                        if (BYTE6(v39) == 2)
                                        {
                                          *(_BYTE *)(v38 + WORD2(v39)) = 0;
                                          __int16 v25 = WORD2(v39);
                                          unsigned __int16 v26 = ++WORD2(v39);
                                          if (HIBYTE(v39))
                                          {
                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }

                                          else if (WORD1(v39) > v26)
                                          {
                                            if (BYTE6(v39) == 2)
                                            {
                                              WORD2(v39) = v25 + 2;
                                              *(_BYTE *)(v38 + v26) = a6;
                                              if (HIBYTE(v39))
                                              {
                                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluet"
                                                                       "ooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                              }

                                              else if (WORD1(v39) - WORD2(v39) > 1)
                                              {
                                                if (BYTE6(v39) == 2)
                                                {
                                                  *(_WORD *)(v38 + WORD2(v39)) = 0;
                                                  unsigned __int8 v27 = BYTE4(v39) + 2;
                                                  WORD2(v39) += 2;
                                                  return sub_10018BD78( 226,  v38,  v27,  a7,  (uint64_t)sub_10013DC24,  v15,  v16,  v17);
                                                }

                                                unsigned int v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_76:
                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4647,  v37);
                                              }

                                              unsigned int v37 = "ByteStream_NumReadBytesAvail(bs) >= (2)";
                                              goto LABEL_76;
                                            }

                                            unsigned int v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_72:
                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4646,  v36);
                                          }

                                          unsigned int v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_72;
                                        }

                                        uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_68:
                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4645,  v35);
                                      }

                                      uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                                      goto LABEL_68;
                                    }

                                    uint64_t v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_64:
                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4644,  v34);
                                  }

                                  uint64_t v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_64;
                                }

                                uint64_t v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_60:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4643,  v33);
                              }

                              uint64_t v33 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                              goto LABEL_60;
                            }

                            unsigned int v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_56:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4642,  v32);
                          }
                        }

                        unsigned int v32 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_56;
                      }

                      uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4641,  v31);
                    }
                  }

                  uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_52;
                }

                uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4640,  v30);
              }
            }

            uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_48;
          }

          unsigned __int16 v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4637, v29);
        }

        unsigned __int16 v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_44;
      }

      __int16 v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4636, v28);
    }

    __int16 v28 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_40;
  }

  return result;
}

uint64_t sub_1001447F8(uint64_t a1)
{
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  uint64_t result = sub_10018BCDC(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v6 = WORD2(v9);
      if (WORD1(v9) > WORD2(v9))
      {
        if (BYTE6(v9) == 2)
        {
          ++WORD2(v9);
          *(_BYTE *)(v8 + v6) = -15;
          return sub_10018BD78(284, v8, BYTE4(v9), a1, (uint64_t)sub_10013A594, v3, v4, v5);
        }

        uint64_t v7 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4663, v7);
      }
    }

    uint64_t v7 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1001448C4(uint64_t a1)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v6 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(_BYTE *)(v11 + v6) = 80;
          if (HIBYTE(v12))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v12) - WORD2(v12) > 3)
          {
            if (BYTE6(v12) == 2)
            {
              *(_BYTE *)(v11 + WORD2(v12)) = 0;
              *(_WORD *)(v11 + WORD2(v12) + 1) = 0;
              *(_BYTE *)(v11 + WORD2(v12) + 3) = 0;
              unsigned __int16 v7 = WORD2(v12) + 4;
              WORD2(v12) += 4;
              if (HIBYTE(v12))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }

              else if (WORD1(v12) - v7 > 1)
              {
                if (BYTE6(v12) == 2)
                {
                  *(_BYTE *)(v11 + v7) = 2;
                  *(_BYTE *)(v11 + WORD2(v12) + 1) = 0;
                  WORD2(v12) += 2;
                  return sub_10018BD78(284, v11, BYTE4(v12), a1, (uint64_t)sub_10013A594, v3, v4, v5);
                }

                uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4680,  v10);
              }

              uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_24;
            }

            uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4679,  v9);
          }

          uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_20;
        }

        uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4678, v8);
      }
    }

    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_100144AD4(int a1, int a2, uint64_t a3)
{
  uint64_t v25 = 0LL;
  uint64_t v26 = 0LL;
  uint64_t result = sub_10018BCDC(&v25);
  if (!(_DWORD)result)
  {
    if (a1)
    {
      if (HIBYTE(v26))
      {
        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }

      else
      {
        uint64_t v10 = WORD2(v26);
        if (WORD1(v26) > WORD2(v26))
        {
          if (BYTE6(v26) == 2)
          {
            ++WORD2(v26);
            *(_BYTE *)(v25 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = 81;
            if (HIBYTE(v26))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }

            else
            {
              uint64_t v11 = WORD2(v26);
              if (WORD1(v26) > WORD2(v26))
              {
                if (BYTE6(v26) == 2)
                {
                  ++WORD2(v26);
                  *(_BYTE *)(v25 + v11) = 1;
                  if (HIBYTE(v26))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }

                  else if (WORD1(v26) - WORD2(v26) > 1)
                  {
                    if (BYTE6(v26) == 2)
                    {
                      *(_WORD *)(v25 + WORD2(v26)) = __PAIR16__((2 * a2) >> 24, 2 * a2);
                      unsigned __int16 v12 = WORD2(v26) + 2;
                      WORD2(v26) += 2;
                      if (HIBYTE(v26))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }

                      else if (WORD1(v26) - v12 > 3)
                      {
                        if (BYTE6(v26) == 2)
                        {
                          *(_BYTE *)(v25 + v12) = 112;
                          *(_WORD *)(v25 + WORD2(v26) + 1) = 23;
                          *(_BYTE *)(v25 + WORD2(v26) + 3) = 0;
                          WORD2(v26) += 4;
                          if (sub_10018BE60()
                            && sub_10018BE60() <= 0x7CF
                            && sub_10018BE60() >= 0x13)
                          {
                            if (HIBYTE(v26))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }

                            else if (WORD1(v26) - WORD2(v26) > 3)
                            {
                              if (BYTE6(v26) == 2)
                              {
                                *(_BYTE *)(v25 + WORD2(v26)) = -112;
                                char v13 = 11;
LABEL_33:
                                *(_BYTE *)(v25 + WORD2(v26) + 1) = v13;
                                *(_BYTE *)(v25 + WORD2(v26) + 2) = 72;
                                *(_BYTE *)(v25 + WORD2(v26) + 3) = 4;
                                unsigned __int8 v16 = BYTE4(v26) + 4;
                                WORD2(v26) += 4;
                                return sub_10018BD78(284, v25, v16, a3, (uint64_t)sub_10013A594, v7, v8, v9);
                              }

                              unsigned __int16 v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_67:
                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4701,  v24);
                            }

                            unsigned __int16 v24 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                            goto LABEL_67;
                          }

                          if (HIBYTE(v26))
                          {
                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }

                          else if (WORD1(v26) - WORD2(v26) > 3)
                          {
                            if (BYTE6(v26) == 2)
                            {
                              char v13 = 0;
                              *(_BYTE *)(v25 + WORD2(v26)) = 0;
                              goto LABEL_33;
                            }

                            __int16 v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_63:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4703,  v23);
                          }

                          __int16 v23 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                          goto LABEL_63;
                        }

                        uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4698,  v20);
                      }

                      uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                      goto LABEL_51;
                    }

                    unsigned __int16 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_47:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4697,  v19);
                  }

                  unsigned __int16 v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                  goto LABEL_47;
                }

                __int16 v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4696,  v18);
              }
            }

            __int16 v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_43;
          }

          uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_39:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4695, v17);
        }
      }

      uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
      goto LABEL_39;
    }

    if (HIBYTE(v26))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v14 = WORD2(v26);
      if (WORD1(v26) > WORD2(v26))
      {
        if (BYTE6(v26) == 2)
        {
          ++WORD2(v26);
          *(_BYTE *)(v25 + v14) = 81;
          if (HIBYTE(v26))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else
          {
            uint64_t v15 = WORD2(v26);
            if (WORD1(v26) > WORD2(v26))
            {
              if (BYTE6(v26) == 2)
              {
                ++WORD2(v26);
                *(_BYTE *)(v25 + v15) = 0;
                unsigned __int8 v16 = BYTE4(v26);
                return sub_10018BD78(284, v25, v16, a3, (uint64_t)sub_10013A594, v7, v8, v9);
              }

              uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4710,  v22);
            }
          }

          uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_59;
        }

        uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4709, v21);
      }
    }

    uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_55;
  }

  return result;
}

uint64_t sub_100144FD4(int a1, uint64_t a2)
{
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t result = sub_10018BCDC(&v13);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v14))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(_BYTE *)(v13 + v8) = -7;
          if (HIBYTE(v14))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v14) - WORD2(v14) > 3)
          {
            if (BYTE6(v14) == 2)
            {
              *(_WORD *)(v13 + WORD2(v14)) = a1;
              *(_BYTE *)(v13 + WORD2(v14) + 2) = BYTE2(a1);
              *(_BYTE *)(v13 + WORD2(v14) + 3) = HIBYTE(a1);
              unsigned __int16 v9 = WORD2(v14) + 4;
              WORD2(v14) += 4;
              if (HIBYTE(v14))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }

              else if (WORD1(v14) - v9 > 3)
              {
                if (BYTE6(v14) == 2)
                {
                  *(_BYTE *)(v13 + v9) = 0;
                  *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
                  *(_BYTE *)(v13 + WORD2(v14) + 3) = 0;
                  WORD2(v14) += 4;
                  return sub_10018BD78(284, v13, BYTE4(v14), a2, (uint64_t)sub_10013A594, v5, v6, v7);
                }

                unsigned __int16 v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4726,  v12);
              }

              unsigned __int16 v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_24;
            }

            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4725,  v11);
          }

          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_20;
        }

        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4724, v10);
      }
    }

    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_100145210( char a1, __int16 a2, __int16 a3, char a4, char a5, int a6, char a7, char a8, char a9, uint64_t a10)
{
  uint64_t v38 = 0LL;
  uint64_t v39 = 0LL;
  uint64_t result = sub_10018BCDC(&v38);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v39))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v22 = WORD2(v39);
      if (WORD1(v39) > WORD2(v39))
      {
        if (BYTE6(v39) == 2)
        {
          ++WORD2(v39);
          *(_BYTE *)(v38 + v22) = a1;
          if (HIBYTE(v39))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v39) - WORD2(v39) > 1)
          {
            if (BYTE6(v39) == 2)
            {
              *(_WORD *)(v38 + WORD2(v39)) = a2;
              unsigned __int16 v23 = WORD2(v39) + 2;
              WORD2(v39) += 2;
              if (HIBYTE(v39))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }

              else if (WORD1(v39) - v23 > 1)
              {
                if (BYTE6(v39) == 2)
                {
                  *(_BYTE *)(v38 + v23) = a3;
                  *(_BYTE *)(v38 + WORD2(v39) + 1) = HIBYTE(a3);
                  __int16 v24 = WORD2(v39);
                  unsigned __int16 v25 = WORD2(v39) + 2;
                  WORD2(v39) += 2;
                  if (HIBYTE(v39))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }

                  else if (WORD1(v39) > v25)
                  {
                    if (BYTE6(v39) == 2)
                    {
                      WORD2(v39) = v24 + 3;
                      *(_BYTE *)(v38 + v25) = a4;
                      if (HIBYTE(v39))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }

                      else
                      {
                        uint64_t v26 = WORD2(v39);
                        if (WORD1(v39) > WORD2(v39))
                        {
                          if (BYTE6(v39) == 2)
                          {
                            ++WORD2(v39);
                            *(_BYTE *)(v38 + v26) = a5;
                            if (!a6) {
                              return sub_10018BD78(585, v38, BYTE4(v39), a10, (uint64_t)sub_10013A594, v19, v20, v21);
                            }
                            if (HIBYTE(v39))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }

                            else
                            {
                              uint64_t v27 = WORD2(v39);
                              if (WORD1(v39) > WORD2(v39))
                              {
                                if (BYTE6(v39) == 2)
                                {
                                  ++WORD2(v39);
                                  *(_BYTE *)(v38 + v27) = a7;
                                  if (HIBYTE(v39))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }

                                  else
                                  {
                                    uint64_t v28 = WORD2(v39);
                                    if (WORD1(v39) > WORD2(v39))
                                    {
                                      if (BYTE6(v39) == 2)
                                      {
                                        ++WORD2(v39);
                                        *(_BYTE *)(v38 + v28) = a8;
                                        if (HIBYTE(v39))
                                        {
                                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                        }

                                        else
                                        {
                                          uint64_t v29 = WORD2(v39);
                                          if (WORD1(v39) > WORD2(v39))
                                          {
                                            if (BYTE6(v39) == 2)
                                            {
                                              ++WORD2(v39);
                                              *(_BYTE *)(v38 + v29) = a9;
                                              return sub_10018BD78( 585,  v38,  BYTE4(v39),  a10,  (uint64_t)sub_10013A594,  v19,  v20,  v21);
                                            }

                                            unsigned int v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4747,  v37);
                                          }
                                        }

                                        unsigned int v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                        goto LABEL_61;
                                      }

                                      unsigned int v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_57:
                                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4746,  v36);
                                    }
                                  }

                                  unsigned int v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_57;
                                }

                                uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_53:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4745,  v35);
                              }
                            }

                            uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_53;
                          }

                          uint64_t v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_49:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4743,  v34);
                        }
                      }

                      uint64_t v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_49;
                    }

                    uint64_t v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4742,  v33);
                  }

                  uint64_t v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_45;
                }

                unsigned int v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4741,  v32);
              }

              unsigned int v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_41;
            }

            uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4740,  v31);
          }

          uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_37;
        }

        uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4739, v30);
      }
    }

    uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_33;
  }

  return result;
}

uint64_t sub_100145694( char a1, char a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, char a10, __int16 a11, char a12, uint64_t a13)
{
  uint64_t v47 = 0LL;
  uint64_t v48 = 0LL;
  uint64_t result = sub_10018BCDC(&v47);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v48))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v25 = WORD2(v48);
      if (WORD1(v48) > WORD2(v48))
      {
        if (BYTE6(v48) == 2)
        {
          ++WORD2(v48);
          *(_BYTE *)(v47 + v25) = 0;
          if (HIBYTE(v48))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else
          {
            uint64_t v26 = WORD2(v48);
            if (WORD1(v48) > WORD2(v48))
            {
              if (BYTE6(v48) == 2)
              {
                ++WORD2(v48);
                *(_BYTE *)(v47 + v26) = a1;
                if (HIBYTE(v48))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else
                {
                  uint64_t v27 = WORD2(v48);
                  if (WORD1(v48) > WORD2(v48))
                  {
                    if (BYTE6(v48) == 2)
                    {
                      ++WORD2(v48);
                      *(_BYTE *)(v47 + v27) = a2;
                      if (HIBYTE(v48))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }

                      else if (WORD1(v48) - WORD2(v48) > 3)
                      {
                        if (BYTE6(v48) == 2)
                        {
                          *(_WORD *)(v47 + WORD2(v48)) = a3;
                          *(_BYTE *)(v47 + WORD2(v48) + 2) = BYTE2(a3);
                          *(_BYTE *)(v47 + WORD2(v48) + 3) = HIBYTE(a3);
                          unsigned __int16 v28 = WORD2(v48) + 4;
                          WORD2(v48) += 4;
                          if (HIBYTE(v48))
                          {
                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }

                          else if (WORD1(v48) - v28 > 3)
                          {
                            if (BYTE6(v48) == 2)
                            {
                              *(_BYTE *)(v47 + v28) = a4;
                              *(_BYTE *)(v47 + WORD2(v48) + 1) = BYTE1(a4);
                              *(_BYTE *)(v47 + WORD2(v48) + 2) = BYTE2(a4);
                              *(_BYTE *)(v47 + WORD2(v48) + 3) = HIBYTE(a4);
                              unsigned __int16 v29 = WORD2(v48) + 4;
                              WORD2(v48) += 4;
                              if (HIBYTE(v48))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }

                              else if (WORD1(v48) - v29 > 3)
                              {
                                if (BYTE6(v48) == 2)
                                {
                                  *(_BYTE *)(v47 + v29) = a5;
                                  *(_BYTE *)(v47 + WORD2(v48) + 1) = BYTE1(a5);
                                  *(_BYTE *)(v47 + WORD2(v48) + 2) = BYTE2(a5);
                                  *(_BYTE *)(v47 + WORD2(v48) + 3) = HIBYTE(a5);
                                  unsigned __int16 v30 = WORD2(v48) + 4;
                                  WORD2(v48) += 4;
                                  if (HIBYTE(v48))
                                  {
                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }

                                  else if (WORD1(v48) - v30 > 3)
                                  {
                                    if (BYTE6(v48) == 2)
                                    {
                                      *(_BYTE *)(v47 + v30) = a6;
                                      *(_BYTE *)(v47 + WORD2(v48) + 1) = BYTE1(a6);
                                      *(_BYTE *)(v47 + WORD2(v48) + 2) = BYTE2(a6);
                                      *(_BYTE *)(v47 + WORD2(v48) + 3) = HIBYTE(a6);
                                      unsigned __int16 v31 = WORD2(v48) + 4;
                                      WORD2(v48) += 4;
                                      if (HIBYTE(v48))
                                      {
                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }

                                      else if (WORD1(v48) - v31 > 3)
                                      {
                                        if (BYTE6(v48) == 2)
                                        {
                                          *(_BYTE *)(v47 + v31) = a7;
                                          *(_BYTE *)(v47 + WORD2(v48) + 1) = BYTE1(a7);
                                          *(_BYTE *)(v47 + WORD2(v48) + 2) = BYTE2(a7);
                                          *(_BYTE *)(v47 + WORD2(v48) + 3) = HIBYTE(a7);
                                          unsigned __int16 v32 = WORD2(v48) + 4;
                                          WORD2(v48) += 4;
                                          if (HIBYTE(v48))
                                          {
                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }

                                          else if (WORD1(v48) - v32 > 3)
                                          {
                                            if (BYTE6(v48) == 2)
                                            {
                                              *(_BYTE *)(v47 + v32) = a8;
                                              *(_BYTE *)(v47 + WORD2(v48) + 1) = BYTE1(a8);
                                              *(_BYTE *)(v47 + WORD2(v48) + 2) = BYTE2(a8);
                                              *(_BYTE *)(v47 + WORD2(v48) + 3) = HIBYTE(a8);
                                              unsigned __int16 v33 = WORD2(v48) + 4;
                                              WORD2(v48) += 4;
                                              if (HIBYTE(v48))
                                              {
                                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluet"
                                                                       "ooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                              }

                                              else if (WORD1(v48) - v33 > 3)
                                              {
                                                if (BYTE6(v48) == 2)
                                                {
                                                  *(_BYTE *)(v47 + v33) = a9;
                                                  *(_BYTE *)(v47 + WORD2(v48) + 1) = a10;
                                                  *(_WORD *)(v47 + WORD2(v48) + 2) = a11;
                                                  __int16 v34 = WORD2(v48);
                                                  unsigned __int16 v35 = WORD2(v48) + 4;
                                                  WORD2(v48) += 4;
                                                  if (HIBYTE(v48))
                                                  {
                                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileB"
                                                                           "luetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                  }

                                                  else if (WORD1(v48) > v35)
                                                  {
                                                    if (BYTE6(v48) == 2)
                                                    {
                                                      WORD2(v48) = v34 + 5;
                                                      *(_BYTE *)(v47 + v35) = a12;
                                                      return sub_10018BD78( 657,  v47,  BYTE4(v48),  a13,  (uint64_t)sub_10013A594,  v22,  v23,  v24);
                                                    }

                                                    int v46 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_80:
                                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/v sc/bcm/bcm_vsc.c",  4864,  v46);
                                                  }

                                                  int v46 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                  goto LABEL_80;
                                                }

                                                unsigned int v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_76:
                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4863,  v45);
                                              }

                                              unsigned int v45 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                              goto LABEL_76;
                                            }

                                            uint64_t v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_72:
                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4862,  v44);
                                          }

                                          uint64_t v44 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                          goto LABEL_72;
                                        }

                                        uint64_t v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_68:
                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4861,  v43);
                                      }

                                      uint64_t v43 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                      goto LABEL_68;
                                    }

                                    int v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_64:
                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4860,  v42);
                                  }

                                  int v42 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                  goto LABEL_64;
                                }

                                uint64_t v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_60:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4859,  v41);
                              }

                              uint64_t v41 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                              goto LABEL_60;
                            }

                            uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_56:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4858,  v40);
                          }

                          uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                          goto LABEL_56;
                        }

                        uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4857,  v39);
                      }

                      uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                      goto LABEL_52;
                    }

                    uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4856,  v38);
                  }
                }

                uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_48;
              }

              unsigned int v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4855,  v37);
            }
          }

          unsigned int v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_44;
        }

        unsigned int v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4854, v36);
      }
    }

    unsigned int v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_40;
  }

  return result;
}

uint64_t sub_100145E24(char a1, char a2, uint64_t a3)
{
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  uint64_t result = sub_10018BCDC(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v10 = WORD2(v17);
      if (WORD1(v17) > WORD2(v17))
      {
        if (BYTE6(v17) == 2)
        {
          ++WORD2(v17);
          *(_BYTE *)(v16 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = 1;
          if (HIBYTE(v17))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else
          {
            uint64_t v11 = WORD2(v17);
            if (WORD1(v17) > WORD2(v17))
            {
              if (BYTE6(v17) == 2)
              {
                ++WORD2(v17);
                *(_BYTE *)(v16 + v11) = a1;
                if (HIBYTE(v17))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else
                {
                  uint64_t v12 = WORD2(v17);
                  if (WORD1(v17) > WORD2(v17))
                  {
                    if (BYTE6(v17) == 2)
                    {
                      ++WORD2(v17);
                      *(_BYTE *)(v16 + v12) = a2;
                      return sub_10018BD78(657, v16, BYTE4(v17), a3, (uint64_t)sub_10013A594, v7, v8, v9);
                    }

                    uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4880,  v15);
                  }
                }

                uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_24;
              }

              uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4879,  v14);
            }
          }

          uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_20;
        }

        uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4878, v13);
      }
    }

    uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_100145FF0(int a1, uint64_t a2)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(_BYTE *)(v11 + v8) = 16;
          if (HIBYTE(v12))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v12) - WORD2(v12) > 3)
          {
            if (BYTE6(v12) == 2)
            {
              *(_WORD *)(v11 + WORD2(v12)) = a1;
              *(_BYTE *)(v11 + WORD2(v12) + 2) = BYTE2(a1);
              *(_BYTE *)(v11 + WORD2(v12) + 3) = HIBYTE(a1);
              WORD2(v12) += 4;
              return sub_10018BD78(291, v11, BYTE4(v12), a2, (uint64_t)sub_10013A594, v5, v6, v7);
            }

            uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4895,  v10);
          }

          uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_17;
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4894, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_10014617C(char *a1, uint64_t a2)
{
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  uint64_t result = sub_10018BCDC(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v5 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13))
      {
        if (BYTE6(v13) == 2)
        {
          char v6 = *a1;
          ++WORD2(v13);
          *(_BYTE *)(v12 + v5) = v6;
          if (HIBYTE(v13))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v13) - WORD2(v13) > 5)
          {
            if (BYTE6(v13) == 2)
            {
              sub_1001F0050(v12 + WORD2(v13), (uint64_t)(a1 + 1), 6uLL);
              WORD2(v13) += 6;
              return sub_10018BD78(328, v12, BYTE4(v13), a2, (uint64_t)sub_10013DF4C, v7, v8, v9);
            }

            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4909,  v11);
          }

          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_17;
        }

        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4908, v10);
      }
    }

    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1001462D8(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(329, v10, BYTE4(v11), a2, (uint64_t)sub_10013A594, v5, v6, v7);
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4924, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_1001463A4(char a1, __int16 a2, __int16 a3, char a4, char a5, char a6, uint64_t a7)
{
  uint64_t v30 = 0LL;
  uint64_t v31 = 0LL;
  uint64_t result = sub_10018BCDC(&v30);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v31))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v18 = WORD2(v31);
      if (WORD1(v31) > WORD2(v31))
      {
        if (BYTE6(v31) == 2)
        {
          ++WORD2(v31);
          *(_BYTE *)(v30 + v18) = a1;
          if (HIBYTE(v31))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v31) - WORD2(v31) > 1)
          {
            if (BYTE6(v31) == 2)
            {
              *(_WORD *)(v30 + WORD2(v31)) = a2;
              unsigned __int16 v19 = WORD2(v31) + 2;
              WORD2(v31) += 2;
              if (HIBYTE(v31))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }

              else if (WORD1(v31) - v19 > 1)
              {
                if (BYTE6(v31) == 2)
                {
                  *(_BYTE *)(v30 + v19) = a3;
                  *(_BYTE *)(v30 + WORD2(v31) + 1) = HIBYTE(a3);
                  __int16 v20 = WORD2(v31);
                  unsigned __int16 v21 = WORD2(v31) + 2;
                  WORD2(v31) += 2;
                  if (HIBYTE(v31))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }

                  else if (WORD1(v31) > v21)
                  {
                    if (BYTE6(v31) == 2)
                    {
                      WORD2(v31) = v20 + 3;
                      *(_BYTE *)(v30 + v21) = a4;
                      if (HIBYTE(v31))
                      {
                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }

                      else
                      {
                        uint64_t v22 = WORD2(v31);
                        if (WORD1(v31) > WORD2(v31))
                        {
                          if (BYTE6(v31) == 2)
                          {
                            ++WORD2(v31);
                            *(_BYTE *)(v30 + v22) = a5;
                            if (HIBYTE(v31))
                            {
                              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }

                            else
                            {
                              uint64_t v23 = WORD2(v31);
                              if (WORD1(v31) > WORD2(v31))
                              {
                                if (BYTE6(v31) == 2)
                                {
                                  ++WORD2(v31);
                                  *(_BYTE *)(v30 + v23) = a6;
                                  return sub_10018BD78(330, v30, BYTE4(v31), a7, (uint64_t)sub_10013A594, v15, v16, v17);
                                }

                                unsigned __int16 v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4944,  v29);
                              }
                            }

                            unsigned __int16 v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_45;
                          }

                          unsigned __int16 v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                          sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4943,  v28);
                        }
                      }

                      unsigned __int16 v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_41;
                    }

                    uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4942,  v27);
                  }

                  uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_37;
                }

                uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4941,  v26);
              }

              uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_33;
            }

            uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4940,  v25);
          }

          uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_29;
        }

        uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4939, v24);
      }
    }

    uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_25;
  }

  return result;
}

uint64_t sub_10014672C(char a1, unsigned int a2, const void *a3, uint64_t a4)
{
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t result = sub_10018BCDC(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v9 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19))
      {
        if (BYTE6(v19) == 2)
        {
          ++WORD2(v19);
          *(_BYTE *)(v18 + v9) = a1;
          if (HIBYTE(v19))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else
          {
            uint64_t v10 = WORD2(v19);
            if (WORD1(v19) > WORD2(v19))
            {
              if (BYTE6(v19) == 2)
              {
                if (a2 >= 0x1F) {
                  char v11 = 31;
                }
                else {
                  char v11 = a2;
                }
                ++WORD2(v19);
                *(_BYTE *)(v18 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = v11;
                if (HIBYTE(v19))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else if (WORD1(v19) - WORD2(v19) > 30)
                {
                  if (BYTE6(v19) == 2)
                  {
                    memmove((void *)(v18 + WORD2(v19)), a3, 0x1FuLL);
                    WORD2(v19) += 31;
                    return sub_10018BD78(331, v18, BYTE4(v19), a4, (uint64_t)sub_10013A594, v12, v13, v14);
                  }

                  uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4961,  v17);
                }

                uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= (31)";
                goto LABEL_27;
              }

              uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4960,  v16);
            }
          }

          uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }

        uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4959, v15);
      }
    }

    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_100146918(char a1, unsigned int a2, const void *a3, uint64_t a4)
{
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t result = sub_10018BCDC(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v9 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19))
      {
        if (BYTE6(v19) == 2)
        {
          ++WORD2(v19);
          *(_BYTE *)(v18 + v9) = a1;
          if (HIBYTE(v19))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else
          {
            uint64_t v10 = WORD2(v19);
            if (WORD1(v19) > WORD2(v19))
            {
              if (BYTE6(v19) == 2)
              {
                if (a2 >= 0x1F) {
                  char v11 = 31;
                }
                else {
                  char v11 = a2;
                }
                ++WORD2(v19);
                *(_BYTE *)(v18 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = v11;
                if (HIBYTE(v19))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else if (WORD1(v19) - WORD2(v19) > 30)
                {
                  if (BYTE6(v19) == 2)
                  {
                    memmove((void *)(v18 + WORD2(v19)), a3, 0x1FuLL);
                    WORD2(v19) += 31;
                    return sub_10018BD78(332, v18, BYTE4(v19), a4, (uint64_t)sub_10013A594, v12, v13, v14);
                  }

                  uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4978,  v17);
                }

                uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= (31)";
                goto LABEL_27;
              }

              uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4977,  v16);
            }
          }

          uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }

        uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4976, v15);
      }
    }

    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_100146B04(char a1, char a2, int a3, char a4, uint64_t a5)
{
  uint64_t v22 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t result = sub_10018BCDC(&v22);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v23))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v14 = WORD2(v23);
      if (WORD1(v23) > WORD2(v23))
      {
        if (BYTE6(v23) == 2)
        {
          ++WORD2(v23);
          *(_BYTE *)(v22 + v14) = a1;
          if (HIBYTE(v23))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else
          {
            uint64_t v15 = WORD2(v23);
            if (WORD1(v23) > WORD2(v23))
            {
              if (BYTE6(v23) == 2)
              {
                ++WORD2(v23);
                *(_BYTE *)(v22 + v15) = a2;
                if (HIBYTE(v23))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else if (WORD1(v23) - WORD2(v23) > 3)
                {
                  if (BYTE6(v23) == 2)
                  {
                    *(_WORD *)(v22 + WORD2(v23)) = a3;
                    *(_BYTE *)(v22 + WORD2(v23) + 2) = BYTE2(a3);
                    *(_BYTE *)(v22 + WORD2(v23) + 3) = HIBYTE(a3);
                    __int16 v16 = WORD2(v23);
                    unsigned __int16 v17 = WORD2(v23) + 4;
                    WORD2(v23) += 4;
                    if (HIBYTE(v23))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }

                    else if (WORD1(v23) > v17)
                    {
                      if (BYTE6(v23) == 2)
                      {
                        WORD2(v23) = v16 + 5;
                        *(_BYTE *)(v22 + v17) = a4;
                        return sub_10018BD78(333, v22, BYTE4(v23), a5, (uint64_t)sub_10013A594, v11, v12, v13);
                      }

                      unsigned __int16 v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4996,  v21);
                    }

                    unsigned __int16 v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_31;
                  }

                  __int16 v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4995,  v20);
                }

                __int16 v20 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                goto LABEL_27;
              }

              uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  4994,  v19);
            }
          }

          uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }

        uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4993, v18);
      }
    }

    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }

  return result;
}

uint64_t sub_100146D98(char a1, char *a2, uint64_t a3)
{
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  uint64_t result = sub_10018BCDC(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v7 = WORD2(v17);
      if (WORD1(v17) > WORD2(v17))
      {
        if (BYTE6(v17) == 2)
        {
          ++WORD2(v17);
          *(_BYTE *)(v16 + v7) = a1;
          if (HIBYTE(v17))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else
          {
            uint64_t v8 = WORD2(v17);
            if (WORD1(v17) > WORD2(v17))
            {
              if (BYTE6(v17) == 2)
              {
                char v9 = *a2;
                ++WORD2(v17);
                *(_BYTE *)(v16 + v8) = v9;
                if (HIBYTE(v17))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else if (WORD1(v17) - WORD2(v17) > 5)
                {
                  if (BYTE6(v17) == 2)
                  {
                    sub_1001F0050(v16 + WORD2(v17), (uint64_t)(a2 + 1), 6uLL);
                    WORD2(v17) += 6;
                    return sub_10018BD78(334, v16, BYTE4(v17), a3, (uint64_t)sub_10013A594, v10, v11, v12);
                  }

                  uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5014,  v15);
                }

                uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
                goto LABEL_24;
              }

              uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5013,  v14);
            }
          }

          uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_20;
        }

        uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5012, v13);
      }
    }

    uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_100146F78(void *a1, uint64_t a2)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t result = sub_10018BCDC(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v10) - WORD2(v10) > 7)
    {
      if (BYTE6(v10) == 2)
      {
        *(void *)(v9 + WORD2(v10)) = *a1;
        WORD2(v10) += 8;
        return sub_10018BD78(316, v9, BYTE4(v10), a2, (uint64_t)sub_10013A594, v5, v6, v7);
      }

      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5030, v8);
    }

    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= (8)";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_100147050(char a1, __int16 a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_BYTE *)(v14 + WORD2(v15) + 1) = a2;
        *(_BYTE *)(v14 + WORD2(v15)) = HIBYTE(a2);
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(_BYTE *)(v14 + v11) = a1;
            return sub_10018BD78(327, v14, BYTE4(v15), a3, (uint64_t)sub_10013A594, v7, v8, v9);
          }

          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5046, v13);
        }

        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }

      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5045, v12);
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1001471BC(__int16 a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t result = sub_10018BCDC(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v16) - WORD2(v16) > 1)
    {
      if (BYTE6(v16) == 2)
      {
        *(_WORD *)(v15 + WORD2(v16)) = a1;
        __int16 v11 = WORD2(v16);
        unsigned __int16 v12 = WORD2(v16) + 2;
        WORD2(v16) += 2;
        if (HIBYTE(v16))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v16) > v12)
        {
          if (BYTE6(v16) == 2)
          {
            WORD2(v16) = v11 + 3;
            *(_BYTE *)(v15 + v12) = a2;
            return sub_10018BD78(87, v15, BYTE4(v16), a4, (uint64_t)sub_10013A594, v8, v9, v10);
          }

          uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5062, v14);
        }

        uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }

      uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5061, v13);
    }

    uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_100147328(char a1, uint64_t a2)
{
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  uint64_t result = sub_10018BCDC(&v12);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v13))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v13) - WORD2(v13) > 3)
    {
      if (BYTE6(v13) == 2)
      {
        *(_BYTE *)(v12 + WORD2(v13)) = 28;
        *(_WORD *)(v12 + WORD2(v13) + 1) = 0;
        *(_BYTE *)(v12 + WORD2(v13) + 3) = 0;
        __int16 v8 = WORD2(v13);
        unsigned __int16 v9 = WORD2(v13) + 4;
        WORD2(v13) += 4;
        if (HIBYTE(v13))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v13) > v9)
        {
          if (BYTE6(v13) == 2)
          {
            WORD2(v13) = v8 + 5;
            *(_BYTE *)(v12 + v9) = a1;
            return sub_10018BD78(226, v12, BYTE4(v13), a2, (uint64_t)sub_10013A594, v5, v6, v7);
          }

          __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5181, v11);
        }

        __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }

      uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5180, v10);
    }

    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_1001474A8(char a1, uint64_t a2)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t result = sub_10018BCDC(&v10);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v11))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(_BYTE *)(v10 + v8) = a1;
          return sub_10018BD78(431, v10, BYTE4(v11), a2, (uint64_t)sub_10013A594, v5, v6, v7);
        }

        unsigned __int16 v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5195, v9);
      }
    }

    unsigned __int16 v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_100147574(__int16 a1, char a2, char a3, char *a4, unsigned int a5, uint64_t a6)
{
  uint64_t v26 = 0LL;
  uint64_t v27 = 0LL;
  uint64_t result = sub_10018BCDC(&v26);
  if ((_DWORD)result) {
    return result;
  }
  if (HIBYTE(v27))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_24;
  }

  if (WORD1(v27) - WORD2(v27) <= 1)
  {
LABEL_24:
    uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_26;
  }

  if (BYTE6(v27) != 2)
  {
    uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5209, v23);
  }

  *(_WORD *)(v26 + WORD2(v27)) = a1;
  __int16 v16 = WORD2(v27);
  unsigned __int16 v17 = WORD2(v27) + 2;
  WORD2(v27) += 2;
  if (HIBYTE(v27))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_28;
  }

  if (WORD1(v27) <= v17)
  {
LABEL_28:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_30;
  }

  if (BYTE6(v27) != 2)
  {
    uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5210, v24);
  }

  WORD2(v27) = v16 + 3;
  *(_BYTE *)(v26 + v17) = a2;
  if (HIBYTE(v27))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_32;
  }

  uint64_t v18 = WORD2(v27);
  if (WORD1(v27) <= WORD2(v27))
  {
LABEL_32:
    uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_34;
  }

  if (BYTE6(v27) != 2)
  {
    uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5211, v25);
  }

  ++WORD2(v27);
  *(_BYTE *)(v26 + v18) = a3;
  if (a5)
  {
    uint64_t v19 = a5;
    while (!HIBYTE(v27))
    {
      uint64_t v20 = WORD2(v27);
      if (BYTE6(v27) != 2)
      {
        uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_22;
      }

      char v21 = *a4++;
      ++WORD2(v27);
      *(_BYTE *)(v26 + v20) = v21;
      if (!--v19) {
        return sub_10018BD78(586, v26, BYTE4(v27), a6, (uint64_t)sub_10013A594, v13, v14, v15);
      }
    }

    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_20:
    uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_22:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5213, v22);
  }

  return sub_10018BD78(586, v26, BYTE4(v27), a6, (uint64_t)sub_10013A594, v13, v14, v15);
}

uint64_t sub_1001477F8( char a1, __int16 a2, char a3, char a4, char a5, char a6, char a7, char a8, char a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, int a16, int a17, char a18, char a19, __int16 a20, char a21, int a22, uint64_t a23)
{
  uint64_t v70 = 0LL;
  uint64_t v71 = 0LL;
  uint64_t result = sub_10018BCDC(&v70);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v71))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v35 = WORD2(v71);
      if (WORD1(v71) > WORD2(v71))
      {
        if (BYTE6(v71) == 2)
        {
          ++WORD2(v71);
          *(_BYTE *)(v70 + v35) = a1;
          if (HIBYTE(v71))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v71) - WORD2(v71) > 1)
          {
            if (BYTE6(v71) == 2)
            {
              *(_WORD *)(v70 + WORD2(v71)) = a2;
              __int16 v36 = WORD2(v71);
              unsigned __int16 v37 = WORD2(v71) + 2;
              WORD2(v71) += 2;
              if (HIBYTE(v71))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }

              else if (WORD1(v71) > v37)
              {
                if (BYTE6(v71) == 2)
                {
                  WORD2(v71) = v36 + 3;
                  *(_BYTE *)(v70 + v37) = a3;
                  if (HIBYTE(v71))
                  {
                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }

                  else
                  {
                    uint64_t v38 = WORD2(v71);
                    if (WORD1(v71) > WORD2(v71))
                    {
                      if (BYTE6(v71) == 2)
                      {
                        ++WORD2(v71);
                        *(_BYTE *)(v70 + v38) = a4;
                        if (HIBYTE(v71))
                        {
                          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }

                        else
                        {
                          uint64_t v39 = WORD2(v71);
                          if (WORD1(v71) > WORD2(v71))
                          {
                            if (BYTE6(v71) == 2)
                            {
                              ++WORD2(v71);
                              *(_BYTE *)(v70 + v39) = a5;
                              if (HIBYTE(v71))
                              {
                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }

                              else
                              {
                                uint64_t v40 = WORD2(v71);
                                if (WORD1(v71) > WORD2(v71))
                                {
                                  if (BYTE6(v71) == 2)
                                  {
                                    ++WORD2(v71);
                                    *(_BYTE *)(v70 + v40) = a6;
                                    if (HIBYTE(v71))
                                    {
                                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }

                                    else
                                    {
                                      uint64_t v41 = WORD2(v71);
                                      if (WORD1(v71) > WORD2(v71))
                                      {
                                        if (BYTE6(v71) == 2)
                                        {
                                          ++WORD2(v71);
                                          *(_BYTE *)(v70 + v41) = a7;
                                          if (HIBYTE(v71))
                                          {
                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }

                                          else
                                          {
                                            uint64_t v42 = WORD2(v71);
                                            if (WORD1(v71) > WORD2(v71))
                                            {
                                              if (BYTE6(v71) == 2)
                                              {
                                                ++WORD2(v71);
                                                *(_BYTE *)(v70 + v42) = a8;
                                                if (HIBYTE(v71))
                                                {
                                                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                }

                                                else
                                                {
                                                  uint64_t v43 = WORD2(v71);
                                                  if (WORD1(v71) > WORD2(v71))
                                                  {
                                                    if (BYTE6(v71) == 2)
                                                    {
                                                      ++WORD2(v71);
                                                      *(_BYTE *)(v70 + v43) = a9;
                                                      if (HIBYTE(v71))
                                                      {
                                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                      }

                                                      else if (WORD1(v71) - WORD2(v71) > 1)
                                                      {
                                                        if (BYTE6(v71) == 2)
                                                        {
                                                          *(_WORD *)(v70 + WORD2(v71)) = a10;
                                                          unsigned __int16 v44 = WORD2(v71) + 2;
                                                          WORD2(v71) += 2;
                                                          if (HIBYTE(v71))
                                                          {
                                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources"
                                                                                   "/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                          }

                                                          else if (WORD1(v71) - v44 > 1)
                                                          {
                                                            if (BYTE6(v71) == 2)
                                                            {
                                                              *(_BYTE *)(v70 + v44) = a11;
                                                              *(_BYTE *)(v70 + WORD2(v71) + 1) = a12;
                                                              unsigned __int16 v45 = WORD2(v71) + 2;
                                                              WORD2(v71) += 2;
                                                              if (HIBYTE(v71))
                                                              {
                                                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sou"
                                                                                       "rces/MobileBluetooth_base/Stack/v"
                                                                                       "sc/bcm/bcm_vsc.c");
                                                              }

                                                              else if (WORD1(v71) - v45 > 1)
                                                              {
                                                                if (BYTE6(v71) == 2)
                                                                {
                                                                  *(_BYTE *)(v70 + v45) = a13;
                                                                  *(_BYTE *)(v70 + WORD2(v71) + 1) = a14;
                                                                  __int16 v46 = WORD2(v71);
                                                                  unsigned __int16 v47 = WORD2(v71) + 2;
                                                                  WORD2(v71) += 2;
                                                                  if (HIBYTE(v71))
                                                                  {
                                                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/vsc/bcm/bcm_vsc.c");
                                                                  }

                                                                  else if (WORD1(v71) > v47)
                                                                  {
                                                                    if (BYTE6(v71) == 2)
                                                                    {
                                                                      WORD2(v71) = v46 + 3;
                                                                      *(_BYTE *)(v70 + v47) = a15;
                                                                      if (HIBYTE(v71))
                                                                      {
                                                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple"
                                                                                               ".xbs/Sources/MobileBlueto"
                                                                                               "oth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                      }

                                                                      else if (WORD1(v71) - WORD2(v71) > 3)
                                                                      {
                                                                        if (BYTE6(v71) == 2)
                                                                        {
                                                                          *(_DWORD *)(v70 + WORD2(v71)) = a16;
                                                                          unsigned __int16 v48 = WORD2(v71) + 4;
                                                                          WORD2(v71) += 4;
                                                                          if (HIBYTE(v71))
                                                                          {
                                                                            sub_1001ED1C4((uint64_t)"/Library/Caches/com.a"
                                                                                                   "pple.xbs/Sources/Mobi"
                                                                                                   "leBluetooth_base/Stac"
                                                                                                   "k/vsc/bcm/bcm_vsc.c");
                                                                          }

                                                                          else if (WORD1(v71) - v48 > 3)
                                                                          {
                                                                            if (BYTE6(v71) == 2)
                                                                            {
                                                                              *(_BYTE *)(v70 + v48) = a17;
                                                                              *(_WORD *)(v70 + WORD2(v71) + 1) = *(_WORD *)((char *)&a17 + 1);
                                                                              *(_BYTE *)(v70 + WORD2(v71) + 3) = HIBYTE(a17);
                                                                              unsigned __int16 v49 = WORD2(v71) + 4;
                                                                              WORD2(v71) += 4;
                                                                              if (HIBYTE(v71))
                                                                              {
                                                                                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                              }

                                                                              else if (WORD1(v71) - v49 > 3)
                                                                              {
                                                                                if (BYTE6(v71) == 2)
                                                                                {
                                                                                  *(_BYTE *)(v70 + v49) = a18;
                                                                                  *(_BYTE *)(v70 + WORD2(v71) + 1) = a19;
                                                                                  *(_WORD *)(v70 + WORD2(v71) + 2) = a20;
                                                                                  __int16 v50 = WORD2(v71);
                                                                                  unsigned __int16 v51 = WORD2(v71) + 4;
                                                                                  WORD2(v71) += 4;
                                                                                  if (HIBYTE(v71))
                                                                                  {
                                                                                    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                  }

                                                                                  else if (WORD1(v71) > v51)
                                                                                  {
                                                                                    if (BYTE6(v71) == 2)
                                                                                    {
                                                                                      WORD2(v71) = v50 + 5;
                                                                                      *(_BYTE *)(v70 + v51) = a21;
                                                                                      if (HIBYTE(v71))
                                                                                      {
                                                                                        sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                      }

                                                                                      else if (WORD1(v71) - WORD2(v71) > 3)
                                                                                      {
                                                                                        if (BYTE6(v71) == 2)
                                                                                        {
                                                                                          *(_DWORD *)(v70 + WORD2(v71)) = a22;
                                                                                          WORD2(v71) += 4;
                                                                                          return sub_10018BD78( 616,  v70,  BYTE4(v71),  a23,  (uint64_t)sub_10013A594,  v32,  v33,  v34);
                                                                                        }

                                                                                        unsigned int v69 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_129:
                                                                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/ Sources/MobileBluetooth_base/S tack/vsc/bcm/bcm_vsc.c",  5244,  v69);
                                                                                      }

                                                                                      unsigned int v69 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                                                                      goto LABEL_129;
                                                                                    }

                                                                                    unsigned int v68 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_125:
                                                                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sour ces/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5243,  v68);
                                                                                  }

                                                                                  unsigned int v68 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                  goto LABEL_125;
                                                                                }

                                                                                int v67 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_121:
                                                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/ MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5242,  v67);
                                                                              }

                                                                              int v67 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                                                              goto LABEL_121;
                                                                            }

                                                                            unsigned int v66 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_117:
                                                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/Mobi leBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5241,  v66);
                                                                          }

                                                                          unsigned int v66 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                                                          goto LABEL_117;
                                                                        }

                                                                        unsigned int v65 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_113:
                                                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBl uetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5240,  v65);
                                                                      }

                                                                      unsigned int v65 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                                                      goto LABEL_113;
                                                                    }

                                                                    unsigned int v64 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_109:
                                                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBlueto oth_base/Stack/vsc/bcm/bcm_vsc.c",  5239,  v64);
                                                                  }

                                                                  unsigned int v64 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                  goto LABEL_109;
                                                                }

                                                                unsigned int v63 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_105:
                                                                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_ base/Stack/vsc/bcm/bcm_vsc.c",  5238,  v63);
                                                              }

                                                              unsigned int v63 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                              goto LABEL_105;
                                                            }

                                                            unsigned int v62 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_101:
                                                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base /Stack/vsc/bcm/bcm_vsc.c",  5237,  v62);
                                                          }

                                                          unsigned int v62 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                          goto LABEL_101;
                                                        }

                                                        unsigned int v61 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_97:
                                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Sta ck/vsc/bcm/bcm_vsc.c",  5236,  v61);
                                                      }

                                                      unsigned int v61 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                      goto LABEL_97;
                                                    }

                                                    unsigned int v60 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_93:
                                                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/v sc/bcm/bcm_vsc.c",  5235,  v60);
                                                  }
                                                }

                                                unsigned int v60 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_93;
                                              }

                                              unsigned int v59 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_89:
                                              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5234,  v59);
                                            }
                                          }

                                          unsigned int v59 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_89;
                                        }

                                        unsigned int v58 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_85:
                                        sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5233,  v58);
                                      }
                                    }

                                    unsigned int v58 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_85;
                                  }

                                  unsigned int v57 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_81:
                                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5232,  v57);
                                }
                              }

                              unsigned int v57 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_81;
                            }

                            unsigned int v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_77:
                            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5231,  v56);
                          }
                        }

                        unsigned int v56 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_77;
                      }

                      unsigned int v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_73:
                      sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5230,  v55);
                    }
                  }

                  unsigned int v55 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_73;
                }

                unsigned int v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_69:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5229,  v54);
              }

              unsigned int v54 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_69;
            }

            unsigned int v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_65:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  5228,  v53);
          }

          unsigned int v53 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_65;
        }

        unsigned int v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5227, v52);
      }
    }

    unsigned int v52 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_61;
  }

  return result;
}

uint64_t sub_100148294(__int16 a1, __int16 a2, uint64_t a3)
{
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t result = sub_10018BCDC(&v15);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v16))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v16) - WORD2(v16) > 3)
    {
      if (BYTE6(v16) == 2)
      {
        *(_BYTE *)(v15 + WORD2(v16)) = 59;
        *(_WORD *)(v15 + WORD2(v16) + 1) = 0;
        *(_BYTE *)(v15 + WORD2(v16) + 3) = 0;
        unsigned __int16 v10 = WORD2(v16) + 4;
        WORD2(v16) += 4;
        if (HIBYTE(v16))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }

        else if (WORD1(v16) - v10 > 1)
        {
          if (BYTE6(v16) == 2)
          {
            *(_BYTE *)(v15 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = a1;
            *(_BYTE *)(v15 + WORD2(v16) + 1) = HIBYTE(a1);
            unsigned __int16 v11 = WORD2(v16) + 2;
            WORD2(v16) += 2;
            if (HIBYTE(v16))
            {
              sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }

            else if (WORD1(v16) - v11 > 1)
            {
              if (BYTE6(v16) == 2)
              {
                *(_BYTE *)(v15 + v11) = a2;
                *(_BYTE *)(v15 + WORD2(v16) + 1) = HIBYTE(a2);
                WORD2(v16) += 2;
                return sub_10018BD78(226, v15, BYTE4(v16), a3, (uint64_t)sub_10013A594, v7, v8, v9);
              }

              uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  6074,  v14);
            }

            uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 2";
            goto LABEL_24;
          }

          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6073, v13);
        }

        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_20;
      }

      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6072, v12);
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1001484D0(__int16 a1, uint64_t a2)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v12))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(_BYTE *)(v11 + v8) = 9;
          if (HIBYTE(v12))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v12) - WORD2(v12) > 1)
          {
            if (BYTE6(v12) == 2)
            {
              *(_WORD *)(v11 + WORD2(v12)) = a1;
              WORD2(v12) += 2;
              return sub_10018BD78(496, v11, BYTE4(v12), a2, (uint64_t)sub_10013A594, v5, v6, v7);
            }

            unsigned __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  6329,  v10);
          }

          unsigned __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_17;
        }

        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6328, v9);
      }
    }

    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_100148634(char a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v10 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(_BYTE *)(v14 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = a1;
          if (HIBYTE(v15))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else
          {
            uint64_t v11 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(_BYTE *)(v14 + v11) = a2;
                return sub_10018BD78(392, v14, BYTE4(v15), a3, (uint64_t)sub_10013A594, v7, v8, v9);
              }

              uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  6375,  v13);
            }
          }

          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_17;
        }

        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6374, v12);
      }
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  return result;
}

uint64_t sub_100148784(char a1, __int16 a2, const void *a3, unsigned int a4, uint64_t a5)
{
  uint64_t v26 = 0LL;
  uint64_t v27 = 0LL;
  uint64_t result = sub_10018BCDC(&v26);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v27))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v11 = WORD2(v27);
      if (WORD1(v27) > WORD2(v27))
      {
        if (BYTE6(v27) == 2)
        {
          ++WORD2(v27);
          *(_BYTE *)(v26 + v11) = a1;
          if (HIBYTE(v27))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v27) - WORD2(v27) > 1)
          {
            if (BYTE6(v27) == 2)
            {
              *(_WORD *)(v26 + WORD2(v27)) = a2;
              unsigned __int16 v12 = WORD2(v27) + 2;
              WORD2(v27) += 2;
              uint64_t v13 = v26;
              if (HIBYTE(v27))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                int v14 = 0;
              }

              else
              {
                int v14 = WORD1(v27) - v12;
              }

              if (v14 < (int)a4)
              {
                uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
              }

              else
              {
                if (BYTE6(v27) == 2)
                {
                  memmove((void *)(v13 + v12), a3, a4);
                  unsigned __int16 v18 = WORD2(v27) + a4;
                  WORD2(v27) += a4;
                  if (a4 <= 0xE5)
                  {
                    uint64_t v19 = v26;
                    if (HIBYTE(v27))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      int v20 = 0;
                    }

                    else
                    {
                      int v20 = WORD1(v27) - v18;
                    }

                    size_t v21 = 230 - a4;
                    if (v20 < (int)v21)
                    {
                      uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= (230 - dataLen)";
                    }

                    else
                    {
                      if (BYTE6(v27) == 2)
                      {
                        bzero((void *)(v19 + v18), v21);
                        LOBYTE(v18) = BYTE4(v27) + v21;
                        WORD2(v27) += v21;
                        return sub_10018BD78(407, v26, v18, a5, (uint64_t)sub_10013F84C, v15, v16, v17);
                      }

                      uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                    }

                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  6990,  v25);
                  }

                  return sub_10018BD78(407, v26, v18, a5, (uint64_t)sub_10013F84C, v15, v16, v17);
                }

                uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
              }

              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  6988,  v24);
            }

            uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  6987,  v23);
          }

          uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_29;
        }

        uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6986, v22);
      }
    }

    uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_25;
  }

  return result;
}

uint64_t sub_100148A2C(const void *a1, int a2, uint64_t a3)
{
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = sub_10018BCDC(&v14);
  if (!(_DWORD)result)
  {
    uint64_t v7 = v14;
    uint64_t v8 = WORD2(v15);
    if (HIBYTE(v15))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      int v9 = 0;
    }

    else
    {
      int v9 = WORD1(v15) - WORD2(v15);
    }

    if (v9 < a2)
    {
      uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    }

    else
    {
      if (BYTE6(v15) == 2)
      {
        memmove((void *)(v7 + v8), a1, a2);
        WORD2(v15) += a2;
        return sub_10018BD78(408, v14, BYTE4(v15), a3, (uint64_t)sub_10013A594, v10, v11, v12);
      }

      uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
    }

    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7004, v13);
  }

  return result;
}

uint64_t sub_100148B28(__int16 a1, const void *a2, int a3, uint64_t a4)
{
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t result = sub_10018BCDC(&v17);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v18))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v18) - WORD2(v18) > 1)
    {
      if (BYTE6(v18) == 2)
      {
        *(_WORD *)(v17 + WORD2(v18)) = a1;
        unsigned __int16 v9 = WORD2(v18) + 2;
        WORD2(v18) += 2;
        uint64_t v10 = v17;
        if (HIBYTE(v18))
        {
          sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          int v11 = 0;
        }

        else
        {
          int v11 = WORD1(v18) - v9;
        }

        if (v11 < a3)
        {
          uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
        }

        else
        {
          if (BYTE6(v18) == 2)
          {
            memmove((void *)(v10 + v9), a2, a3);
            WORD2(v18) += a3;
            return sub_10018BD78(525, v17, BYTE4(v18), a4, (uint64_t)sub_10013A594, v12, v13, v14);
          }

          uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        }

        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7019, v16);
      }

      uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_15:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7018, v15);
    }

    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_15;
  }

  return result;
}

uint64_t sub_100148CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t result = sub_10018BCDC(&v9);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v10))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else if (WORD1(v10) - WORD2(v10) > 5)
    {
      if (BYTE6(v10) == 2)
      {
        sub_1001F0050(v9 + WORD2(v10), a1, 6uLL);
        WORD2(v10) += 6;
        return sub_10018BD78(1, v9, BYTE4(v10), a2, (uint64_t)sub_10013A594, v5, v6, v7);
      }

      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7033, v8);
    }

    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_100148D98(__int16 a1, unsigned int a2, char *a3, uint64_t a4)
{
  uint64_t v22 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t result = sub_10018BCDC(&v22);
  if ((_DWORD)result) {
    return result;
  }
  if (HIBYTE(v23))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_24;
  }

  uint64_t v12 = WORD2(v23);
  if (WORD1(v23) <= WORD2(v23))
  {
LABEL_24:
    uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_26;
  }

  if (BYTE6(v23) != 2)
  {
    uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7046, v19);
  }

  ++WORD2(v23);
  *(_BYTE *)(v22 + v12) = 14;
  if (HIBYTE(v23))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_28;
  }

  if (WORD1(v23) - WORD2(v23) <= 1)
  {
LABEL_28:
    int v20 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_30;
  }

  if (BYTE6(v23) != 2)
  {
    int v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7047, v20);
  }

  *(_WORD *)(v22 + WORD2(v23)) = a1;
  __int16 v13 = WORD2(v23);
  unsigned __int16 v14 = WORD2(v23) + 2;
  WORD2(v23) += 2;
  if (HIBYTE(v23))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_32;
  }

  if (WORD1(v23) <= v14)
  {
LABEL_32:
    size_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_34;
  }

  if (BYTE6(v23) != 2)
  {
    size_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7048, v21);
  }

  WORD2(v23) = v13 + 3;
  *(_BYTE *)(v22 + v14) = a2;
  if (a2)
  {
    uint64_t v15 = a2;
    while (!HIBYTE(v23))
    {
      uint64_t v16 = WORD2(v23);
      if (BYTE6(v23) != 2)
      {
        uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_22;
      }

      char v17 = *a3++;
      ++WORD2(v23);
      *(_BYTE *)(v22 + v16) = v17;
      if (!--v15) {
        return sub_10018BD78(291, v22, BYTE4(v23), a4, (uint64_t)sub_10013A594, v9, v10, v11);
      }
    }

    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_20:
    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_22:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7050, v18);
  }

  return sub_10018BD78(291, v22, BYTE4(v23), a4, (uint64_t)sub_10013A594, v9, v10, v11);
}

uint64_t sub_100149010(__int16 a1, char a2, uint64_t a3)
{
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  uint64_t result = sub_10018BCDC(&v16);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v17))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v10 = WORD2(v17);
      if (WORD1(v17) > WORD2(v17))
      {
        if (BYTE6(v17) == 2)
        {
          ++WORD2(v17);
          *(_BYTE *)(v16 + vsub_1000904F4("com.apple.BT.TS", 0xFu, 2LL, 10) = 15;
          if (HIBYTE(v17))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v17) - WORD2(v17) > 1)
          {
            if (BYTE6(v17) == 2)
            {
              *(_WORD *)(v16 + WORD2(v17)) = a1;
              __int16 v11 = WORD2(v17);
              unsigned __int16 v12 = WORD2(v17) + 2;
              WORD2(v17) += 2;
              if (HIBYTE(v17))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }

              else if (WORD1(v17) > v12)
              {
                if (BYTE6(v17) == 2)
                {
                  WORD2(v17) = v11 + 3;
                  *(_BYTE *)(v16 + v12) = a2;
                  return sub_10018BD78(291, v16, BYTE4(v17), a3, (uint64_t)sub_10013A594, v7, v8, v9);
                }

                uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  7066,  v15);
              }

              uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_24;
            }

            unsigned __int16 v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  7065,  v14);
          }

          unsigned __int16 v14 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_20;
        }

        __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7064, v13);
      }
    }

    __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1001491F8(int a1, uint64_t a2)
{
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t result = sub_10018BCDC(&v11);
  if ((_DWORD)result) {
    return result;
  }
  if (HIBYTE(v12))
  {
    sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_11;
  }

  uint64_t v8 = WORD2(v12);
  if (WORD1(v12) <= WORD2(v12))
  {
LABEL_11:
    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }

  if (BYTE6(v12) != 2)
  {
    uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
    sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7079, v10);
  }

  if (a1) {
    char v9 = 1;
  }
  else {
    char v9 = 2;
  }
  ++WORD2(v12);
  *(_BYTE *)(v11 + v8) = v9;
  return sub_10018BD78(569, v11, BYTE4(v12), a2, (uint64_t)sub_10013A594, v5, v6, v7);
}

uint64_t sub_1001492D0(unint64_t a1, uint64_t a2)
{
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t result = sub_10018BCDC(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v5 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19))
      {
        if (BYTE6(v19) == 2)
        {
          ++WORD2(v19);
          *(_BYTE *)(v18 + v5) = 4;
          uint64_t v6 = sub_1001BCDB0(a1);
          int v15 = v6;
          char v17 = BYTE6(v6);
          __int16 v16 = WORD2(v6);
          if (HIBYTE(v19))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v19) - WORD2(v19) > 5)
          {
            if (BYTE6(v19) == 2)
            {
              sub_1001F0050(v18 + WORD2(v19), (uint64_t)&v15 + 1, 6uLL);
              __int16 v10 = WORD2(v19);
              unsigned __int16 v11 = WORD2(v19) + 6;
              WORD2(v19) += 6;
              if (HIBYTE(v19))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }

              else if (WORD1(v19) > v11)
              {
                if (BYTE6(v19) == 2)
                {
                  WORD2(v19) = v10 + 7;
                  *(_BYTE *)(v18 + v11) = v15;
                  return sub_10018BD78(569, v18, BYTE4(v19), a2, (uint64_t)sub_10013A594, v7, v8, v9);
                }

                unsigned __int16 v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  7095,  v14);
              }

              unsigned __int16 v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_24;
            }

            __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  7094,  v13);
          }

          __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_20;
        }

        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7092, v12);
      }
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1001494C8(unint64_t a1, uint64_t a2)
{
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t result = sub_10018BCDC(&v18);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v19))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v5 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19))
      {
        if (BYTE6(v19) == 2)
        {
          ++WORD2(v19);
          *(_BYTE *)(v18 + v5) = 5;
          uint64_t v6 = sub_1001BCDB0(a1);
          int v15 = v6;
          char v17 = BYTE6(v6);
          __int16 v16 = WORD2(v6);
          if (HIBYTE(v19))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else if (WORD1(v19) - WORD2(v19) > 5)
          {
            if (BYTE6(v19) == 2)
            {
              sub_1001F0050(v18 + WORD2(v19), (uint64_t)&v15 + 1, 6uLL);
              __int16 v10 = WORD2(v19);
              unsigned __int16 v11 = WORD2(v19) + 6;
              WORD2(v19) += 6;
              if (HIBYTE(v19))
              {
                sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }

              else if (WORD1(v19) > v11)
              {
                if (BYTE6(v19) == 2)
                {
                  WORD2(v19) = v10 + 7;
                  *(_BYTE *)(v18 + v11) = v15;
                  return sub_10018BD78(569, v18, BYTE4(v19), a2, (uint64_t)sub_10013A594, v7, v8, v9);
                }

                unsigned __int16 v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  7111,  v14);
              }

              unsigned __int16 v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_24;
            }

            __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  7110,  v13);
          }

          __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_20;
        }

        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7108, v12);
      }
    }

    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }

  return result;
}

uint64_t sub_1001496C0(uint64_t a1)
{
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  uint64_t result = sub_10018BCDC(&v8);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v9))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v6 = WORD2(v9);
      if (WORD1(v9) > WORD2(v9))
      {
        if (BYTE6(v9) == 2)
        {
          ++WORD2(v9);
          *(_BYTE *)(v8 + v6) = 3;
          return sub_10018BD78(569, v8, BYTE4(v9), a1, (uint64_t)sub_10013A594, v3, v4, v5);
        }

        uint64_t v7 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7124, v7);
      }
    }

    uint64_t v7 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_10014978C(unint64_t a1, int a2, unsigned int a3, const void *a4, uint64_t a5)
{
  if (a3 < 0x10) {
    return 101LL;
  }
  uint64_t v29 = 0LL;
  uint64_t v30 = 0LL;
  uint64_t result = sub_10018BCDC(&v29);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v30))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v11 = WORD2(v30);
      if (WORD1(v30) > WORD2(v30))
      {
        if (BYTE6(v30) == 2)
        {
          ++WORD2(v30);
          *(_BYTE *)(v29 + v11) = 8;
          uint64_t v12 = sub_1001BCDB0(a1);
          int v26 = v12;
          char v28 = BYTE6(v12);
          __int16 v27 = WORD2(v12);
          if (a2) {
            char v13 = 2;
          }
          else {
            char v13 = 0;
          }
          if (a2) {
            char v14 = 3;
          }
          else {
            char v14 = 1;
          }
          if ((a1 & 0xFF000000000000LL) != 0) {
            char v13 = v14;
          }
          if (HIBYTE(v30))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else
          {
            uint64_t v15 = WORD2(v30);
            if (WORD1(v30) > WORD2(v30))
            {
              if (BYTE6(v30) == 2)
              {
                ++WORD2(v30);
                *(_BYTE *)(v29 + v15) = v13;
                if (HIBYTE(v30))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else if (WORD1(v30) - WORD2(v30) > 5)
                {
                  if (BYTE6(v30) == 2)
                  {
                    sub_1001F0050(v29 + WORD2(v30), (uint64_t)&v26 + 1, 6uLL);
                    unsigned __int16 v16 = WORD2(v30) + 6;
                    WORD2(v30) += 6;
                    uint64_t v17 = v29;
                    if (HIBYTE(v30))
                    {
                      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      int v18 = 0;
                    }

                    else
                    {
                      int v18 = WORD1(v30) - v16;
                    }

                    if (v18 < (int)a3)
                    {
                      uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= (ltkLen)";
                    }

                    else
                    {
                      if (BYTE6(v30) == 2)
                      {
                        memmove((void *)(v17 + v16), a4, a3);
                        WORD2(v30) += a3;
                        return sub_10018BD78(291, v29, BYTE4(v30), a5, (uint64_t)sub_10013A594, v19, v20, v21);
                      }

                      uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                    }

                    sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  7445,  v25);
                  }

                  uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_39:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  7444,  v24);
                }

                uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
                goto LABEL_39;
              }

              uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  7443,  v23);
            }
          }

          uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_35;
        }

        uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7435, v22);
      }
    }

    uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_31;
  }

  return result;
}

uint64_t sub_100149A5C(unint64_t a1, int a2, uint64_t a3)
{
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t result = sub_10018BCDC(&v21);
  if (!(_DWORD)result)
  {
    if (HIBYTE(v22))
    {
      sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }

    else
    {
      uint64_t v7 = WORD2(v22);
      if (WORD1(v22) > WORD2(v22))
      {
        if (BYTE6(v22) == 2)
        {
          ++WORD2(v22);
          *(_BYTE *)(v21 + v7) = 9;
          uint64_t v8 = sub_1001BCDB0(a1);
          int v18 = v8;
          char v20 = BYTE6(v8);
          __int16 v19 = WORD2(v8);
          if (a2) {
            char v9 = 2;
          }
          else {
            char v9 = 0;
          }
          if (a2) {
            char v10 = 3;
          }
          else {
            char v10 = 1;
          }
          if ((a1 & 0xFF000000000000LL) != 0) {
            char v9 = v10;
          }
          if (HIBYTE(v22))
          {
            sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }

          else
          {
            uint64_t v11 = WORD2(v22);
            if (WORD1(v22) > WORD2(v22))
            {
              if (BYTE6(v22) == 2)
              {
                ++WORD2(v22);
                *(_BYTE *)(v21 + v11) = v9;
                if (HIBYTE(v22))
                {
                  sub_1001ED1C4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }

                else if (WORD1(v22) - WORD2(v22) > 5)
                {
                  if (BYTE6(v22) == 2)
                  {
                    sub_1001F0050(v21 + WORD2(v22), (uint64_t)&v18 + 1, 6uLL);
                    WORD2(v22) += 6;
                    return sub_10018BD78(291, v21, BYTE4(v22), a3, (uint64_t)sub_10013A594, v12, v13, v14);
                  }

                  uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
                  sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  7469,  v17);
                }

                uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
                goto LABEL_32;
              }

              unsigned __int16 v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
              sub_1000E6B88( "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c",  7468,  v16);
            }
          }

          unsigned __int16 v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_28;
        }

        uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
        sub_1000E6B88("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 7460, v15);
      }
    }

    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_24;
  }

  return result;
}