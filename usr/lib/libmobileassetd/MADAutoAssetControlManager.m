@interface MADAutoAssetControlManager
+ (BOOL)assetBeingGarbageCollected:(id)a3 atEmergencyUrgency:(BOOL)a4;
+ (BOOL)assetSetToBeIncluded:(id)a3 consideredClientDomain:(id)a4 basedOnControl:(id)a5;
+ (BOOL)autoSetJobAvailableAtomicInstanceForSetDescriptor:(id)a3;
+ (BOOL)descriptorToBeIncluded:(id)a3 basedOnControl:(id)a4;
+ (BOOL)isDeviceConsideredBeforeFirstUnlock;
+ (BOOL)isMessageNameForSetMessage:(id)a3;
+ (BOOL)jobDescriptorOnFilesystemConfirmed:(id)a3;
+ (BOOL)persistSetJobDescriptor:(id)a3 withCurrentSetStatus:(id)a4 withFirstClientName:(id)a5;
+ (BOOL)preferenceAlwaysPromoteStagedAssets;
+ (BOOL)preferenceAsIfBackgroundOrUse:(BOOL)a3;
+ (BOOL)preferenceAsIfRampOrUse:(BOOL)a3;
+ (BOOL)preferenceAutoAssetLogSetCompare;
+ (BOOL)preferenceAutoAssetNoPersistedOverflowLimit;
+ (BOOL)preferenceAutoAssetObserverIgnoreNetworkStatus;
+ (BOOL)preferencePersistedTableLoggingEnabled;
+ (BOOL)preferenceScheduledAlwaysNonDiscretionary;
+ (BOOL)preferenceScheduledAsIfNotInternal;
+ (BOOL)preferenceScheduledBackupTriggersDisabled;
+ (BOOL)preferenceSecureSimulateFailureAll;
+ (BOOL)preferenceSecureSimulateRequireAll;
+ (BOOL)preferenceStagerDownloadFirstNotInCatalog;
+ (BOOL)preferenceStagingLookupFlipRequiredOptional;
+ (BOOL)preferenceStartupSimulateFirstBoot;
+ (BOOL)selectorToBeIncluded:(id)a3 basedOnControl:(id)a4;
+ (id)_getAutoControlManagerStateTable;
+ (id)allocIntervalString:(int64_t)a3;
+ (id)assetTypeForClientDomainName:(id)a3 forSetIdentifier:(id)a4 alreadyOnStateQueue:(BOOL)a5;
+ (id)autoAssetJob:(id)a3 bondWithStagerDownloading:(id)a4;
+ (id)autoControlManager;
+ (id)buildDirectivesSummary;
+ (id)createSeverMessageWithName:(id)a3 sender:(id)a4 clientID:(id)a5 response:(id)a6 error:(id)a7;
+ (id)fileManagerFailureErrorString;
+ (id)loadDescriptorsForJobSelector:(id)a3 promotingIfCurrentlyStaged:(id)a4 immediatelyPromotedDescriptor:(id *)a5;
+ (id)localAssetURLForAtomicEntry:(id)a3;
+ (id)localAssetURLForDescriptor:(id)a3 fromLocation:(id)a4;
+ (id)migrateMismatchedPersistedDescriptorVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5;
+ (id)migrateMismatchedPersistedSetAtomicInstanceVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5;
+ (id)migrateMismatchedPersistedSetConfigurationVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5;
+ (id)migrateMismatchedPersistedSetDescriptorVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5;
+ (id)migrateMismatchedPersistedSetTargetVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5;
+ (id)migrateMismatchedPersistedStagedSetConfiguration:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5;
+ (id)migrateMismatchedPersistedStateVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5;
+ (id)newAtomicInstancesDownloadedForSetIdentifier:(id)a3;
+ (id)newSummaryForRequestMessage:(id)a3 includingSelector:(BOOL)a4;
+ (id)newSummaryForSetRequestMessage:(id)a3 includingSetAtomicInstance:(BOOL)a4;
+ (id)newestDownloadedForSetDescriptor:(id)a3;
+ (id)preferenceActivityAggressiveAssetType;
+ (id)preferenceActivityHeightenedAssetType;
+ (id)preferenceAsIfBootedOSIsBuildVersion;
+ (id)preferenceAsIfBootedOSIsOSVersion;
+ (id)preferenceConnectorBackoffRetryTimes;
+ (id)preferenceSessionIDBase;
+ (id)replyMessageNameForRequest:(id)a3;
+ (id)restoreVersionFromOSVersion:(id)a3;
+ (id)selectDispatchQueue:(id)a3;
+ (id)stagerSetPolicy;
+ (int64_t)preferenceActivityAggressiveIntervalSecs;
+ (int64_t)preferenceActivityHeightenedIntervalSecs;
+ (int64_t)preferenceActivityIntervalSecs;
+ (int64_t)preferenceActivityTickerSecs;
+ (int64_t)preferenceBeforeFirstDefaultTimeoutSecs;
+ (int64_t)preferenceBeforeFirstPollSecs;
+ (int64_t)preferenceConnectorInitialWaitSecs;
+ (int64_t)preferenceConnectorWaitBeforeRetrySecs;
+ (int64_t)preferenceLookupCacheAssetSelectorValidSecs;
+ (int64_t)preferenceLookupCacheSetConfigurationValidSecs;
+ (int64_t)preferenceMaxStagerDeterminingSecs;
+ (int64_t)preferencePushActivityIntervalSecs;
+ (int64_t)preferenceSimulatedDownloadFailureResult;
+ (int64_t)preferenceSimulatedStagingLookupFailureResult;
+ (int64_t)preferenceStagerDeterminePallasResponseFewer;
+ (void)analyticsReportSecureOperationResults:(id)a3 clientName:(id)a4 secureReason:(id)a5 operation:(int64_t)a6 fromLocation:(id)a7 mountError:(id)a8 graftError:(id)a9 personalizeError:(id)a10 mapToExclaveError:(id)a11;
+ (void)assetConfigJobFinished:(id)a3 error:(id)a4;
+ (void)assetDownloadJob:(id)a3 progressReport:(id)a4;
+ (void)assetDownloadJobFinished:(id)a3 error:(id)a4;
+ (void)autoAssetJobFinished:(id)a3 withAutoAssetUUID:(id)a4 schedulerInvolved:(BOOL)a5 potentialNetworkFailure:(BOOL)a6;
+ (void)autoAssetJobIssueProgress:(id)a3 forAutoAssetSelector:(id)a4 withAutoAssetUUID:(id)a5 withJobInformation:(id)a6 withResponseError:(id)a7;
+ (void)autoAssetJobIssueReply:(id)a3 forAutoAssetSelector:(id)a4 withAutoAssetUUID:(id)a5 fromAutoAssetJob:(id)a6 withOriginalSelector:(id)a7 withJobInformation:(id)a8 withResponseError:(id)a9;
+ (void)autoAssetJobObtainLookupGrant:(id)a3 forAutoAssetUUID:(id)a4 fromAutoAssetJob:(id)a5;
+ (void)autoAssetJobReadyToDownload:(id)a3 withAutoAssetUUID:(id)a4 fromAutoAssetJob:(id)a5 withOriginalSelector:(id)a6 downloadingDescriptor:(id)a7 baseForPatchDescriptor:(id)a8;
+ (void)autoAssetJobReleaseLookupGrant:(id)a3 forAutoAssetUUID:(id)a4 fromAutoAssetJob:(id)a5;
+ (void)autoAssetJobSetLookupResponseReceived:(id)a3 forAssignedSetDescriptor:(id)a4;
+ (void)autoAssetStagerJobDownloadDone:(id)a3 withDownloadedDescriptor:(id)a4 withDownloadError:(id)a5;
+ (void)autoAssetStagerJobDownloadProgress:(id)a3 withProgressError:(id)a4;
+ (void)autoAssetStagerSetJobDetermineDone:(id)a3 withBaseForStagingDescriptors:(id)a4 withDetermineError:(id)a5;
+ (void)autoSetJobFinished:(id)a3 forAssetSetIdentifier:(id)a4 withAutoAssetUUID:(id)a5 fromAutoAssetJob:(id)a6 withSetJobInformation:(id)a7 schedulerInvolved:(BOOL)a8 potentialNetworkFailure:(BOOL)a9;
+ (void)autoSetJobIssueProgress:(id)a3 forAssetSetIdentifier:(id)a4 withAutoAssetUUID:(id)a5 withSetJobInformation:(id)a6 withResponseError:(id)a7;
+ (void)autoSetJobIssueReply:(id)a3 forDomainName:(id)a4 forAssetSetIdentifier:(id)a5 withAutoAssetUUID:(id)a6 fromAutoAssetJob:(id)a7 withSetJobInformation:(id)a8 withResponseError:(id)a9;
+ (void)catalogDownloadJobFinished:(id)a3 withCatalog:(id)a4 error:(id)a5;
+ (void)copyCurrentDownloadedDescriptors:(BOOL)a3 unlockedUnreferencedDescriptors:(id *)a4 unlockedReferencedDescriptors:(id *)a5 lockedOverridableDescriptors:(id *)a6 lockedNeverRemoveDescriptors:(id *)a7 stagedDescriptors:(id *)a8;
+ (void)downloadManagerStateSyncDetermined:(id)a3;
+ (void)downloadManagerStateSyncSkipped;
+ (void)garbageCollectionOperationComplete:(BOOL)a3 originalUnlockedUnreferencedDescriptors:(id)a4 originalUnlockedReferencedDescriptors:(id)a5 originalLockedOverridableDescriptors:(id)a6 originalLockedNeverRemoveDescriptors:(id)a7 originalStagedDescriptors:(id)a8 totalReclaimedSpace:(int64_t)a9 results:(id)a10;
+ (void)handleReceivedPushNotifications:(id)a3;
+ (void)installAutoAssetWithDescriptor:(id)a3;
+ (void)lockerResumed;
+ (void)persistForJobSelector:(id)a3 persistingJobDescriptor:(id)a4 justDownloaded:(BOOL)a5 justPatched:(BOOL)a6 withJobInformation:(id)a7 withFirstClientName:(id)a8;
+ (void)persistForJobSelector:(id)a3 persistingJobDescriptor:(id)a4 justPatched:(BOOL)a5 withJobInformation:(id)a6 withFirstClientName:(id)a7;
+ (void)persistForJobSelector:(id)a3 persistingJobDescriptor:(id)a4 withJobInformation:(id)a5 withFirstClientName:(id)a6;
+ (void)postNotificationName:(id)a3 forAssetType:(id)a4 forAssetSpecifier:(id)a5 fromModule:(id)a6 fromLocation:(id)a7;
+ (void)postSetNotificationName:(id)a3 forAssetSetIdentifier:(id)a4 fromModule:(id)a5 fromLocation:(id)a6;
+ (void)schedulerEliminatedSelector:(id)a3;
+ (void)schedulerEliminatedSetDomainName:(id)a3 forAssetSetIdentifier:(id)a4;
+ (void)schedulerResumed:(id)a3;
+ (void)schedulerTriggeredNoActivity;
+ (void)schedulerTriggeredSelectors:(id)a3;
+ (void)schedulerTriggeredSets:(id)a3;
+ (void)secureOperationsFinished:(id)a3 forSetDescriptor:(id)a4 forAutoAssetDescriptors:(id)a5;
+ (void)shutdown;
+ (void)stagerCancelCurrentJob;
+ (void)stagerEliminatedSelector:(id)a3;
+ (void)stagerEliminatedSetConfiguration:(id)a3;
+ (void)stagerPurgeStagedContent:(id)a3;
+ (void)stagerRequestAlreadyDownloadedDescriptors;
+ (void)stagerResumed:(id)a3 withSetLookupResults:(id)a4;
+ (void)stagerStartJobDownloadForStaging:(id)a3 withStagerSetConfiguration:(id)a4 usingCachedAutoAssetCatalog:(id)a5 usingBaseForPatching:(id)a6 withAssetTargetOSVersion:(id)a7 withAssetTargetBuildVersion:(id)a8;
+ (void)stagerStartSetJobDetermineIfAvailable:(id)a3 withAssetTargetOSVersion:(id)a4 withAssetTargetBuildVersion:(id)a5 withAssetTargetTrainName:(id)a6 withAssetTargetRestoreVersion:(id)a7;
- (BOOL)_decideRemoveDescriptorWithNewerDownloaded:(id)a3 maintainingRemoveDescriptors:(id)a4 fromLocation:(id)a5;
- (BOOL)_doesClientRequestInvolveSetConfiguration:(id)a3;
- (BOOL)_doesEliminateSelector:(id)a3 matchAssetType:(id)a4 withAssetSpecifier:(id)a5 withAssetVersion:(id)a6 fromLocation:(id)a7;
- (BOOL)_doesSetDescriptorRequirePersonalization:(id)a3 forSetDescriptor:(id)a4;
- (BOOL)_haveReceivedLookupResponseForClientDomainName:(id)a3 forAssetSetIdentifier:(id)a4;
- (BOOL)_haveReceivedLookupResponseForSetDescriptor:(id)a3;
- (BOOL)_haveSetAssetEntriesForSchedulerTriggered:(id)a3;
- (BOOL)_inDownloadsInFlight:(id)a3;
- (BOOL)_inMatchedTaskDescriptors:(id)a3 addingMatchingJobUUID:(id)a4;
- (BOOL)_isClientRequestForSetJob:(id)a3;
- (BOOL)_isClientRequestSubjectToElimination:(id)a3;
- (BOOL)_isDownloadedDescriptorPartOfLatestToVend:(id)a3 fromLocation:(id)a4;
- (BOOL)_isDownloadedSetDescriptorLatestToVend:(id)a3 fromLocation:(id)a4;
- (BOOL)_isSetDescriptorAvailableToClient:(id)a3 forSetDescriptor:(id)a4;
- (BOOL)_messageAssetPolicyDownloadUserInitiated:(id)a3 forClientRequest:(id)a4;
- (BOOL)_messageBlockedUntilDownloadManagerSync:(id)a3;
- (BOOL)_messageBlockedUntilFirstUnlock:(id)a3 forAssetSelector:(id)a4;
- (BOOL)_messageBlockedUntilFirstUnlock:(id)a3 forSetInstance:(id)a4;
- (BOOL)_messageShouldBeScheduled:(id)a3 forAssetSelector:(id)a4;
- (BOOL)_selectorBeingEliminated:(id)a3 fromLocation:(id)a4;
- (BOOL)_setInstanceBeingEliminated:(id)a3 fromLocation:(id)a4;
- (BOOL)_setMessageCanCreateSetConfiguration:(id)a3;
- (BOOL)_setMessageInvolvesSchedulerPolicy:(id)a3;
- (BOOL)_setMessageShouldBeScheduled:(id)a3 forSetConfiguration:(id)a4 forLatestEventInfo:(id)a5;
- (BOOL)_taskDescriptorEncountered:(id)a3 inMatchedDescriptors:(id)a4;
- (BOOL)_updateTrackedDescriptor:(id)a3 fromLatestDescriptor:(id)a4;
- (BOOL)_vendingAtomicInstanceForConfiguredEntriesForClientDomainName:(id)a3 forAssetSetIdentifier:(id)a4;
- (BOOL)_vendingAtomicInstanceForConfiguredEntriesForSetDescriptor:(id)a3;
- (BOOL)addToTryPersonalize:(id)a3 forDescriptor:(id)a4;
- (BOOL)atomicInstanceHasDownloadedSetDescriptor:(id)a3 verboseLogging:(BOOL)a4;
- (BOOL)clientRequestIndicatesNoWait:(id)a3;
- (BOOL)doSetAtomicEntries:(id)a3 matchOtherAtomicEntries:(id)a4;
- (BOOL)doesSelectorArray:(id)a3 coverAssetDescriptor:(id)a4;
- (BOOL)doesSetConfiguration:(id)a3 coverAssetDescriptor:(id)a4;
- (BOOL)doesSetDescriptor:(id)a3 alignWithSetConfiguration:(id)a4;
- (BOOL)doesSetDescriptor:(id)a3 coverAllForAtomicInstanceEntries:(id)a4;
- (BOOL)doesSetDescriptor:(id)a3 coverAllForAutoAssetEntries:(id)a4;
- (BOOL)doesSetDescriptor:(id)a3 coverRequestedAutoAssetEntries:(id)a4;
- (BOOL)doesSetDescriptor:(id)a3 matchSetConfiguration:(id)a4;
- (BOOL)doesSetDescriptor:(id)a3 referenceAssetDescriptor:(id)a4;
- (BOOL)doesSetDescriptor:(id)a3 satisfyAllAutoAssetEntries:(id)a4;
- (BOOL)firstDaemonStartupSinceDeviceBoot;
- (BOOL)handleClientCheckForNewer:(id)a3 forAutoJob:(id)a4 instance:(id)a5 desire:(id)a6 fromLocation:(id)a7;
- (BOOL)handleClientLockContent:(id)a3 forAutoJob:(id)a4 instance:(id)a5 desire:(id)a6 fromLocation:(id)a7;
- (BOOL)handleClientPotentialJob:(id)a3 alreadyScheduledSelector:(BOOL)a4 forAutoJob:(id)a5 fromLocation:(id)a6;
- (BOOL)handleClientPotentialSetJob:(id)a3 forAutoJob:(id)a4 fromLocation:(id)a5;
- (BOOL)handleSetClientCheckAtomic:(id)a3 forAutoJob:(id)a4 instance:(id)a5 desire:(id)a6 fromLocation:(id)a7;
- (BOOL)handleSetClientLockAtomic:(id)a3 forAutoJob:(id)a4 instance:(id)a5 desire:(id)a6 fromLocation:(id)a7;
- (BOOL)isAnyAssetEntryOnFilesystemForSetDescriptor:(id)a3 forSetDescriptor:(id)a4;
- (BOOL)isAutoAssetBeingEliminated:(id)a3;
- (BOOL)isConnection:(id)a3 authorizedForMessage:(id)a4;
- (BOOL)isConnectionAuthorized:(id)a3;
- (BOOL)isDescriptorCurrentlyLocked:(id)a3 forDescriptor:(id)a4;
- (BOOL)isDescriptorManagedAsSet:(id)a3;
- (BOOL)isSetDescriptor:(id)a3 coveredBySetDescriptorStatus:(id)a4;
- (BOOL)isSetDescriptorCurrentlyLocked:(id)a3 forSetDescriptor:(id)a4;
- (BOOL)isSetIdentifierBeingEliminated:(id)a3 forClientDomainName:(id)a4 ofSetIdentifier:(id)a5;
- (BOOL)isSetIdentifierCurrentlyLocked:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5;
- (BOOL)isShortTermLockableSetDescriptor:(id)a3;
- (BOOL)jobDescriptorInFlightNowOnFilesystem:(id)a3;
- (BOOL)jobDescriptorOnFilesystemValidated:(id)a3;
- (BOOL)jobToBeIncluded:(id)a3 basedOnControl:(id)a4;
- (BOOL)maintainingActiveJobStatus;
- (BOOL)migratedFromPreinstalled;
- (BOOL)operatingBeforeFirstUnlock;
- (BOOL)operatingBeforeResumed;
- (BOOL)persistedActiveSetJobsLoaded;
- (BOOL)preferenceAlwaysPromoteStagedAssets;
- (BOOL)preferenceAsIfBackground;
- (BOOL)preferenceAsIfBackgroundSpecified;
- (BOOL)preferenceAsIfRamp;
- (BOOL)preferenceAsIfRampSpecified;
- (BOOL)preferenceAutoAssetLogSetCompare;
- (BOOL)preferenceAutoAssetNoPersistedOverflowLimit;
- (BOOL)preferenceAutoAssetObserverIgnoreNetworkStatus;
- (BOOL)preferencePersistedTableLoggingEnabled;
- (BOOL)preferenceScheduledAlwaysNonDiscretionary;
- (BOOL)preferenceScheduledAsIfNotInternal;
- (BOOL)preferenceScheduledBackupTriggersDisabled;
- (BOOL)preferenceSecureSimulateFailureAll;
- (BOOL)preferenceSecureSimulateRequireAll;
- (BOOL)preferenceStagerDownloadFirstNotInCatalog;
- (BOOL)preferenceStagingLookupFlipRequiredOptional;
- (BOOL)preferenceStartupSimulateFirstBoot;
- (BOOL)receivedDownloadManagerSync;
- (BOOL)removeShortTermLockingOfSetDescriptor:(id)a3 forSetDescriptor:(id)a4 endingAll:(BOOL)a5 error:(id *)a6;
- (BOOL)schedulerReferencesDescriptor:(id)a3;
- (BOOL)secureHealingPersonalizationAttempted;
- (BOOL)setConfiguration:(id)a3 matchesAssetEntriesFromInfoInstance:(id)a4;
- (BOOL)setConfigurationAdoptLatestToVend:(id)a3 fromSetDescriptor:(id)a4 toSetConfiguration:(id)a5;
- (BOOL)setConfigurationPotentialLatestToVend:(id)a3 forSetDescriptor:(id)a4 forSetConfiguration:(id)a5;
- (BOOL)setConfigurationReferencesDescriptor:(id)a3;
- (BOOL)setDescriptorAllEntriesDownloaded:(id)a3 forSetDescriptor:(id)a4 loggingEntryExists:(BOOL)a5;
- (BOOL)setDescriptorLocked:(id)a3;
- (BOOL)setDescriptorVerifyNoDuplicates:(id)a3;
- (BOOL)setJobFoundAllContent:(id)a3 forJobAtomicInstance:(id)a4 withCurrentSetStatus:(id)a5;
- (BOOL)setPolicyValidate:(id)a3 fromLocation:(id)a4;
- (BOOL)setTargetEntries:(id)a3 matchSetConfiguration:(id)a4;
- (BOOL)shouldAdoptJobFoundAllContent:(id)a3 forJobAtomicInstance:(id)a4 withCurrentSetStatus:(id)a5;
- (BOOL)simulateOperationRequested;
- (BOOL)stagerResumed;
- (BOOL)timerStartForRequest:(id)a3 fromLocation:(id)a4;
- (BOOL)trackSetDescriptor:(id)a3 fromLocation:(id)a4 forLatestDownloaded:(BOOL)a5 forSpecificAtomicInstance:(id)a6 withCurrentSetStatus:(id)a7 changedWhileTerminated:(BOOL)a8 changedNeverBeenLocked:(BOOL)a9 notifyingIfJustDownloaded:(BOOL)a10 latestToVend:(BOOL)a11 historyOperation:(int64_t)a12 firstClientName:(id)a13;
- (BOOL)verifySetDescriptorIsLockable:(id)a3 fromLocation:(id)a4 notLocakableError:(id *)a5;
- (MAAutoAssetSelector)stagerDownloadingSelector;
- (MAAutoAssetUpdatePolicy)defaultUpdatePolicy;
- (MADAnalyticsManager)analyticsManager;
- (MADAutoAssetControlManager)init;
- (MADAutoAssetJob)stagerBondedToAutoJob;
- (MADAutoAssetJob)stagerCurrentJob;
- (MADAutoAssetPersisted)persistedActiveJobSetDescriptors;
- (MADAutoAssetPersisted)persistedActiveJobs;
- (MADAutoAssetPersisted)persistedDownloadedSetDescriptors;
- (MADAutoAssetPersisted)persistedKnownDescriptors;
- (MADAutoAssetPersisted)persistedKnownSetAtomicInstances;
- (MADAutoAssetPersisted)persistedKnownSetConfigurations;
- (MADAutoAssetPersisted)persistedSetLookupResults;
- (MADAutoAssetPersisted)persistedSetTargets;
- (MADAutoSetConfiguration)stagerFormedSetConfiguration;
- (MANAutoAssetControlStatistics)statistics;
- (NSArray)preferenceConnectorBackoffRetryTimes;
- (NSDictionary)locksPriorToSecureHealing;
- (NSDictionary)stateTable;
- (NSMutableArray)clientRequestsAwaitingFirstUnlock;
- (NSMutableArray)clientRequestsAwaitingSync;
- (NSMutableArray)descriptorsDroppedOnStartup;
- (NSMutableArray)descriptorsRequiringGrafting;
- (NSMutableArray)descriptorsRequiringPersonalization;
- (NSMutableArray)downloadManagerEventsAwaitingResumed;
- (NSMutableArray)downloadManagerInFlightTasks;
- (NSMutableArray)prePersonalizedSelectors;
- (NSMutableDictionary)activeSetDescriptorsByIdentifier;
- (NSMutableDictionary)activeSetDescriptorsByInstance;
- (NSMutableDictionary)activelyEliminatingSelectors;
- (NSMutableDictionary)alreadyScheduledSelectors;
- (NSMutableDictionary)clientRequestsBeingTracked;
- (NSMutableDictionary)currentJobsBySelector;
- (NSMutableDictionary)currentJobsByUUID;
- (NSMutableDictionary)currentSetJobsByIdentifier;
- (NSMutableDictionary)currentSetStatusByInstance;
- (NSMutableDictionary)currentStatusBySelector;
- (NSMutableDictionary)downloadedSetDescriptorsByInstance;
- (NSMutableDictionary)knownSetAtomicInstancesByInstance;
- (NSMutableDictionary)knownSetConfigurationsByIdentifier;
- (NSMutableDictionary)lookupGrantsByAssetType;
- (NSMutableDictionary)setLockUsageMap;
- (NSMutableDictionary)shortTermLockedByAtomicInstance;
- (NSMutableDictionary)shortTermLockedLatestByIdentifier;
- (NSMutableDictionary)simulateOperationsBySelector;
- (NSMutableDictionary)timedOperations;
- (NSString)bootedOBuildVersion;
- (NSString)bootedOSVersion;
- (NSString)latestSafeSummary;
- (NSString)preferenceActivityAggressiveAssetType;
- (NSString)preferenceActivityHeightenedAssetType;
- (NSString)preferenceAsIfBootedOSIsBuildVersion;
- (NSString)preferenceAsIfBootedOSIsOSVersion;
- (NSString)preferenceSessionIDBase;
- (NSString)stagerCurrentJobUUID;
- (NSTimer)awaitDownloadManagerSyncTimer;
- (NSTimer)beyondFirstUnlockPollTimer;
- (OS_dispatch_queue)sharedDispatchQueue;
- (SUCoreConnectServer)connectionServer;
- (SUCoreConnectServerPolicy)serverConnectionPolicy;
- (SUCoreFSM)autoControlManagerFSM;
- (SUCoreLog)logger;
- (double)statisticsNextMaintenanceReport;
- (id)_autoAssetJobProgressNewValidatedCurrentStatus:(id)a3 requiringProgress:(BOOL)a4;
- (id)_autoAssetSetJobProgressNewValidatedCurrentStatus:(id)a3;
- (id)_combinedStatisticsWithStagerClientRepliesSuccess:(id)a3 withStagerClientRepliesFailure:(id)a4 withStagerTotalStaged:(id)a5 withStagerTotalUnstaged:(id)a6;
- (id)_currentSetStatusClearDownloadProgress:(id)a3 clearingSetStatus:(id)a4 forClearingReason:(id)a5;
- (id)_latestDownloadedDescriptor:(id)a3 forAssetType:(id)a4 withAssetSpecifier:(id)a5;
- (id)_latestDownloadedDescriptor:(id)a3 forAssetType:(id)a4 withAssetSpecifier:(id)a5 matchingAssetVersion:(id)a6;
- (id)_limitSetAtomicEntries:(id)a3 fromSetDescriptor:(id)a4 requestedAutoAssetEntries:(id)a5;
- (id)_limitToCheckAtomicEntries:(id)a3;
- (id)_longSummary;
- (id)_newAtomicEntryIDsOtherThanDescriptor:(id)a3;
- (id)_newAtomicInstancesDownloadedForSetIdentifier:(id)a3;
- (id)_newTrimmedToAutoAssetsInFlight:(id)a3;
- (id)_newestVersionDownloaded:(id)a3;
- (id)_preInstalledAtomicInstanceDescriptors;
- (id)_preInstalledDescriptor:(id)a3 forAssetType:(id)a4 withAssetSpecifier:(id)a5;
- (id)_preInstalledRelocateAutoAssets;
- (id)_preInstalledSetAtomicEntriesFromInstanceEntries:(id)a3;
- (id)_shortNameForSelector:(id)a3;
- (id)_shortTermCreateSymbolicLink:(id)a3 symbolicLinkFilename:(id)a4 linkedToFilename:(id)a5 forSetDescriptor:(id)a6 usingFileManager:(id)a7;
- (id)_shortTermPersistSetStatus:(id)a3 forSetDescriptor:(id)a4 persistingSetStatus:(id)a5 toFilename:(id)a6;
- (id)_shortTermSharedLockOpenExclusive:(id)a3 forSetDescriptor:(id)a4 atomicInstanceFilename:(id)a5 error:(id *)a6;
- (id)_shortTermSharedLockRemove:(id)a3 removingSharedLockFilename:(id)a4 usingFileManager:(id)a5 removingDescription:(id)a6;
- (id)_specifierVersionNamesForAtomicInstance:(id)a3;
- (id)_specifierVersionNamesForSetConfiguration:(id)a3;
- (id)_specifierVersionNamesForSetDescriptor:(id)a3;
- (id)_specifierVersionNamesForSetEntries:(id)a3;
- (id)_statsCombinedCopy:(BOOL)a3;
- (id)_summary;
- (id)_updateLatestSummary;
- (id)_updatePolicyForSelector:(id)a3;
- (id)_updateSandboxExtensionForResponse:(id)a3 responseError:(id)a4 clientRequest:(id)a5 alreadyOnStateQueue:(BOOL)a6;
- (id)alreadyHaveSetDescriptorMatching:(id)a3;
- (id)atomicInstanceForSetDescriptor:(id)a3;
- (id)atomicInstanceMatchingInfoInstance:(id)a3 withSetInfoInstance:(id)a4;
- (id)atomicInstanceNewEntryIDForSetAtomicInstance:(id)a3;
- (id)atomicInstanceNewIdentifierForSetAtomicInstance:(id)a3;
- (id)atomicInstanceNewSetAtomicInstance:(id)a3 recordingHistoryOperation:(int64_t)a4 forClientDomainName:(id)a5 forSetClientName:(id)a6 forAssetSetIdentifier:(id)a7 representingInstanceEntries:(id)a8 recoveringAtomicInstanceUUID:(id)a9 asSubAtomicFrom:(id)a10;
- (id)atomicInstanceNewSetAtomicInstance:(id)a3 recordingHistoryOperation:(int64_t)a4 forSetInfoInstance:(id)a5 asSubAtomicFrom:(id)a6;
- (id)atomicInstanceNewSetAtomicInstance:(id)a3 recordingHistoryOperation:(int64_t)a4 recoveringForSetDescriptor:(id)a5 usingAsSetClient:(id)a6;
- (id)atomicInstanceNewSubAtomicFromAtomic:(id)a3 forSubsetInfoInstance:(id)a4 error:(id *)a5;
- (id)atomicInstanceOverflowRemove:(id)a3;
- (id)atomicInstanceUUIDArrayForSetDescriptor:(id)a3;
- (id)atomicInstanceUUIDForNewSetJob:(id)a3;
- (id)atomicInstanceUUIDFromCurrentStatus:(id)a3;
- (id)autoAssetDescriptorsForSet:(id)a3;
- (id)buildFoundResponseMessage:(id)a3 forClientRequest:(id)a4 withFoundDescriptor:(id)a5 withInstance:(id)a6 withDesire:(id)a7 fromLocation:(id)a8 error:(id *)a9;
- (id)buildReportedSetStatus:(id)a3 forClientDomainName:(id)a4 forSetIdentifier:(id)a5 forAtomicInstance:(id)a6 withFoundSetDescriptor:(id)a7 withSubAtomicInstance:(id)a8 reportingLocalContentURLs:(BOOL)a9;
- (id)buildSetFoundResponseMessage:(id)a3 forClientRequest:(id)a4 withFoundSetDescriptor:(id)a5 withSubAtomicInstance:(id)a6 forLatestDownloaded:(BOOL)a7 withInstance:(id)a8 withDesire:(id)a9 fromLocation:(id)a10;
- (id)buildShortTermLockError:(id)a3 code:(int64_t)a4 description:(id)a5 forSetDescriptor:(id)a6 underlyingError:(id)a7;
- (id)chooseNewerSetDescriptor:(id)a3 considering:(id)a4;
- (id)chooseNewerSetStatus:(id)a3 comparingTo:(id)a4;
- (id)clientRequestMessageDesire:(id)a3;
- (id)clientRequestMessageInstance:(id)a3;
- (id)clientRequestMessageName:(id)a3;
- (id)clientRequestMessageSetDesire:(id)a3;
- (id)clientRequestMessageSetEnd:(id)a3;
- (id)clientRequestMessageSetInstance:(id)a3 withEventInfo:(id)a4;
- (id)clientRequestMessageSetPolicy:(id)a3;
- (id)currentJobBySelector:(id)a3;
- (id)currentJobByUUID:(id)a3 fromLocation:(id)a4 notFoundCode:(int64_t)a5 notFoundReason:(id)a6;
- (id)currentJobByUUID:(id)a3 potentiallyResumingJob:(id)a4 withOriginalSelector:(id)a5 fromLocation:(id)a6 notFoundCode:(int64_t)a7 notFoundReason:(id)a8 downloadingDescriptor:(id)a9 baseForPatchDescriptor:(id)a10;
- (id)currentSetStatusFromJobInformation:(id)a3;
- (id)eliminateTrackerForSelector:(id)a3;
- (id)findAtomicEntryForAssetType:(id)a3 forAssetSpecifier:(id)a4 representedByDescriptor:(id)a5;
- (id)findAtomicEntryForAssetType:(id)a3 forAssetSpecifier:(id)a4 representedByLookupResult:(id)a5;
- (id)findAtomicEntryForAssetType:(id)a3 forAssetSpecifier:(id)a4 representedByStatus:(id)a5;
- (id)findSetEntryForAssetType:(id)a3 forAssetSpecifier:(id)a4 representedByConfiguration:(id)a5;
- (id)firstAssetTypeForSetEntries:(id)a3;
- (id)jobControlInformationForSelector:(id)a3;
- (id)jobControlInformationForSetConfiguration:(id)a3;
- (id)jobSelectorKey:(id)a3;
- (id)jobToBeGivenGrant:(id)a3;
- (id)latestShortTermLockableAtomicInstanceForClientDomain:(id)a3 forAssetSetIdentifier:(id)a4;
- (id)locateActiveAutoJobForSetDescriptor:(id)a3;
- (id)locateActiveJobDescriptorBySelector:(id)a3;
- (id)locateDownloadedByFullSelector:(id)a3;
- (id)locateDownloadedNewAllBySelector;
- (id)locateDownloadedNewBySelectorForAssetType:(id)a3;
- (id)locateDownloadedNewBySelectorLimitedToStaging:(BOOL)a3;
- (id)locateNewAllSetConfigurations;
- (id)locateNewAllSetTargets;
- (id)locateSetAtomicInstanceByInstanceUUID:(id)a3;
- (id)locateSetConfigurationByClientDomain:(id)a3 forAssetSetIdentifier:(id)a4;
- (id)locateSetDescriptorActiveJobByAtomicInstanceUUID:(id)a3;
- (id)locateSetDescriptorActiveJobByClientDomain:(id)a3 forAssetSetIdentifier:(id)a4;
- (id)locateSetDescriptorActiveJobPreferringByAtomicInstance:(id)a3 elseByClientDomain:(id)a4 forAssetSetIdentifier:(id)a5;
- (id)locateSetDescriptorDownloadedByAtomicInstanceUUID:(id)a3;
- (id)locateSetDescriptorDownloadedByClientDomain:(id)a3 forAssetSetIdentifier:(id)a4 consideringPreviouslyStaged:(BOOL)a5;
- (id)locateSetDescriptorDownloadedByClientDomain:(id)a3 forAssetSetIdentifier:(id)a4 forSetConfiguration:(id)a5 requestedAutoAssetEntries:(id)a6 performingNoWait:(BOOL)a7 consideringPreviouslyStaged:(BOOL)a8;
- (id)locateSetDescriptorDownloadedLatest:(id)a3 forAssetSetIdentifier:(id)a4;
- (id)locateSetDescriptorDownloadedPreferringByAtomicInstance:(id)a3 elseByClientDomain:(id)a4 forAssetSetIdentifier:(id)a5 forSetConfiguration:(id)a6 requestedAutoAssetEntries:(id)a7 performingNoWait:(BOOL)a8 creatingIfPreviouslyStagedFound:(BOOL)a9 fromLocation:(id)a10;
- (id)locateSetDescriptorDownloadedPreferringByAtomicInstance:(id)a3 elseByClientDomain:(id)a4 forAssetSetIdentifier:(id)a5 fromLocation:(id)a6;
- (id)locateSetDescriptorForSelector:(id)a3;
- (id)locateSetDescriptorsDownloaded;
- (id)locateSetJobForClientDomain:(id)a3 byIdentifier:(id)a4;
- (id)locateSetLookupResultSatisfying:(id)a3;
- (id)locateSetStatusByInstance:(id)a3;
- (id)locateSetStatusForDomainName:(id)a3 byIdentifier:(id)a4;
- (id)locateSetStatusPreferringByInstance:(id)a3 elseByClientDomain:(id)a4 forAssetSetIdentifier:(id)a5 fromLocation:(id)a6;
- (id)newAssetSetStatus:(id)a3 forReason:(id)a4 forClientDomain:(id)a5 forAssetSetIdentifier:(id)a6 withAtomicInstancesDownloaded:(id)a7 withCatalogCachedAssetSetID:(id)a8 withCatalogDownloadedFromLive:(id)a9 withCatalogLastTimeChecked:(id)a10 withCatalogPostedDate:(id)a11 withNewerAtomicInstanceDiscovered:(id)a12 withNewerDiscoveredAtomicEntries:(id)a13 withLatestDownloadedAtomicInstance:(id)a14 withLatestDowloadedAtomicInstanceEntries:(id)a15 withDownloadedCatalogCachedAssetSetID:(id)a16 withDownloadedCatalogDownloadedFromLive:(id)a17 withDownloadedCatalogLastTimeChecked:(id)a18 withDownloadedCatalogPostedDate:(id)a19 withCurrentNotifications:(id)a20 withCurrentNeedPolicy:(id)a21 withSchedulerPolicy:(id)a22 withStagerPolicy:(id)a23 havingReceivedLookupResponse:(BOOL)a24 vendingAtomicInstanceForConfiguredEntries:(BOOL)a25 withDownloadUserInitiated:(BOOL)a26 withDownloadProgress:(id)a27 withDownloadedNetworkBytes:(int64_t)a28 withDownloadedFilesystemBytes:(int64_t)a29 extendingWithCurrentLockUsage:(BOOL)a30 withSelectorsForStaging:(id)a31 withAvailableForUseError:(id)a32 withNewerVersionError:(id)a33;
- (id)newAssetStatusForSelector:(id)a3 withNotifications:(id)a4 withAvailableForUseAttributes:(id)a5 withNewerVersionAttributes:(id)a6 withNeverBeenLocked:(BOOL)a7 withDownloadUserInitiated:(BOOL)a8 withDownloadProgress:(id)a9 withDownloadedNetworkBytes:(int64_t)a10 withDownloadedFilesystemBytes:(int64_t)a11 withDownloadedAsPatch:(BOOL)a12 withPatchedFromBaseSelector:(id)a13 withPatchedFromBaseFilesystemBytes:(int64_t)a14 withPatchingAttempted:(BOOL)a15 withStagedPriorToAvailable:(BOOL)a16 withStagedFromOSVersion:(id)a17 withStagedFromBuildVersion:(id)a18 extendingWithCurrentLockUsage:(BOOL)a19 withAvailableForUseError:(id)a20 withPatchingAttemptError:(id)a21 withNewerVersionError:(id)a22;
- (id)newAtomicInstancesDownloadedForDescriptor:(id)a3;
- (id)newSetDescriptorFromAlreadyDownloaded:(id)a3 forSetInfoInstance:(id)a4 fromDownloadedSetDescriptor:(id)a5 forAtomicInstance:(id)a6;
- (id)newSetDescriptorIfOtherSatisfying:(id)a3 forSetInfoInstance:(id)a4;
- (id)newSetDescriptorLimitedToCheckInformation:(id)a3;
- (id)newSetDescriptorLimitedToLockInformation:(id)a3 forSetConfiguration:(id)a4;
- (id)newSetEntryIDForClientDomain:(id)a3 forAssetSetIdentifier:(id)a4;
- (id)newSetEntryIDForClientDomain:(id)a3 forAssetSetIdentifier:(id)a4 ofAtomicInstance:(id)a5;
- (id)newSetEntryIDForClientDomainName:(id)a3 forAssetSetIdentifier:(id)a4 forMinTargetOS:(id)a5 forMaxTargetOS:(id)a6;
- (id)newSetInfoLimitedToCheckInformation:(id)a3 forAssetSetIdentifier:(id)a4 fromSetInfoFound:(id)a5;
- (id)newSetLockUsageMapKeyForClientDomain:(id)a3 forSetIdentifier:(id)a4;
- (id)newSetTargetFromClientProvidedSetTarget:(id)a3 forClientDomainName:(id)a4 forSetIdentifier:(id)a5;
- (id)notifyLockerAsIndicatedByJob:(id)a3;
- (id)notifyLockerAsIndicatedBySetJob:(id)a3 withSetInstance:(id)a4 withSetDesire:(id)a5 forSetDescriptor:(id)a6 withClientReplyCompletion:(id)a7;
- (id)notifyLockerJustLockedDescriptor:(id)a3 forClientInstance:(id)a4 withClientDesire:(id)a5 respondingToClientRequest:(id)a6 withClientCompletion:(id)a7;
- (id)preInstalledSetDescriptor:(id)a3 forClientDomainName:(id)a4 forSetClientName:(id)a5 forAssetSetIdentifier:(id)a6 representingInstanceEntries:(id)a7;
- (id)preInstalledSetDescriptorForSetInstance:(id)a3 dueToMessageName:(id)a4 fromLocation:(id)a5;
- (id)setAtomicEntriesRemoveDuplicates:(id)a3 dedupingAtomicEntries:(id)a4;
- (id)setConfigurationAssetEntries:(id)a3;
- (id)setConfigurationAssetEntries:(id)a3 forAssetSetIdentifier:(id)a4;
- (id)setConfigurationCopy:(id)a3;
- (id)setConfigurationForClientDomain:(id)a3 forAssetSetIdentifier:(id)a4;
- (id)setConfigurationFromMessageName:(id)a3 withInfoInstance:(id)a4 errorCode:(int64_t *)a5 errorDescription:(id *)a6;
- (id)setConfigurationNewEntryIDForClientDomain:(id)a3 forAssetSetIdentifier:(id)a4;
- (id)setConfigurationNewEntryIDForInfoInstance:(id)a3;
- (id)setConfigurationNewEntryIDForSetConfiguration:(id)a3;
- (id)setConfigurationVendingDescriptor:(id)a3 managedAsSet:(BOOL *)a4;
- (id)setDescriptorDedupDownloadedEntries:(id)a3 forSetDescriptor:(id)a4;
- (id)setDescriptorNewEntryIDForDownloaded:(id)a3;
- (id)setJobInstanceKeyForSetInstance:(id)a3;
- (id)setJobInstanceKeyFromSetDescriptor:(id)a3 forLatestDownloaded:(BOOL)a4;
- (id)setJobInstanceKeyFromSetStatus:(id)a3 forLatestDownloaded:(BOOL)a4;
- (id)setLockUsageMapForClientDomain:(id)a3 forSetIdentifier:(id)a4;
- (id)setLockUsageMapForSetDescriptor:(id)a3;
- (id)setTargetNewEntryIDForClientDomainName:(id)a3 forAssetSetIdentifier:(id)a4 forClientProvidedSetTarget:(id)a5;
- (id)shortTermLockSetDescriptor:(id)a3 forSetDescriptor:(id)a4;
- (id)updateAutoAssetSetStatus:(id)a3 forClientDomain:(id)a4 forAssetSetIdentifier:(id)a5 forJobResponse:(id)a6 withResponseError:(id)a7 clearingDownloadProgressReason:(id)a8 withAssetSetStatus:(id)a9;
- (id)updateAutoAssetStatus:(id)a3 forActiveJobUUID:(id)a4 forJobResponse:(id)a5 withResponseError:(id)a6;
- (id)verifySetLookupResultPreferringDownloaded:(id)a3;
- (int)setLockUsageMapForAtomicInstance:(id)a3 clientLockUsageMap:(id)a4 lockReason:(id)a5;
- (int64_t)_bytesDownloadedForDescriptor:(id)a3;
- (int64_t)_scheduleAndCreateSetConfiguration:(id)a3 fromLocation:(id)a4 errorString:(id *)a5;
- (int64_t)actionUnknownAction:(id)a3 error:(id *)a4;
- (int64_t)action_AdditionalSynced:(id)a3 error:(id *)a4;
- (int64_t)action_AttemptNextGraft:(id)a3 error:(id *)a4;
- (int64_t)action_AttemptNextPersonalize:(id)a3 error:(id *)a4;
- (int64_t)action_Before1stAssetFinished:(id)a3 error:(id *)a4;
- (int64_t)action_Before1stCatalogFinished:(id)a3 error:(id *)a4;
- (int64_t)action_Before1stConfigFinished:(id)a3 error:(id *)a4;
- (int64_t)action_CancelActivityAck:(id)a3 error:(id *)a4;
- (int64_t)action_ClearInProgressSecure:(id)a3 error:(id *)a4;
- (int64_t)action_DecideNeedGraft:(id)a3 error:(id *)a4;
- (int64_t)action_DecideNeedPersonalize:(id)a3 error:(id *)a4;
- (int64_t)action_EliminateSchedulerDone:(id)a3 error:(id *)a4;
- (int64_t)action_EliminateStagerDone:(id)a3 error:(id *)a4;
- (int64_t)action_EliminateStagerSetDone:(id)a3 error:(id *)a4;
- (int64_t)action_FailClientTimedOut:(id)a3 error:(id *)a4;
- (int64_t)action_GraftFailureDecideMore:(id)a3 error:(id *)a4;
- (int64_t)action_GraftSuccessDecideMore:(id)a3 error:(id *)a4;
- (int64_t)action_HandlePushNotifications:(id)a3 error:(id *)a4;
- (int64_t)action_IgnorePushNotifications:(id)a3 error:(id *)a4;
- (int64_t)action_InstallAssets:(id)a3 error:(id *)a4;
- (int64_t)action_IssueClientReplyJobResponse:(id)a3 error:(id *)a4;
- (int64_t)action_IssueClientReplySetJob:(id)a3 error:(id *)a4;
- (int64_t)action_LoadPersistedResumeLocker:(id)a3 error:(id *)a4;
- (int64_t)action_LogStatistics:(id)a3 error:(id *)a4;
- (int64_t)action_ObtainLookupGrant:(id)a3 error:(id *)a4;
- (int64_t)action_PersonalizeFailureDecideMore:(id)a3 error:(id *)a4;
- (int64_t)action_PersonalizeSuccessDecideMore:(id)a3 error:(id *)a4;
- (int64_t)action_PollDecideBefore1stUnlock:(id)a3 error:(id *)a4;
- (int64_t)action_PromoteStagedMigrate:(id)a3 error:(id *)a4;
- (int64_t)action_ProvidePersistedForJob:(id)a3 error:(id *)a4;
- (int64_t)action_QueueClientRequest:(id)a3 error:(id *)a4;
- (int64_t)action_QueueClientRequestBefore1st:(id)a3 error:(id *)a4;
- (int64_t)action_QueueDownloadManager:(id)a3 error:(id *)a4;
- (int64_t)action_ReleaseLookupGrant:(id)a3 error:(id *)a4;
- (int64_t)action_RemoveFinishedJob:(id)a3 error:(id *)a4;
- (int64_t)action_RemoveQueuedClient:(id)a3 error:(id *)a4;
- (int64_t)action_ResumeJobs:(id)a3 error:(id *)a4;
- (int64_t)action_ResumeJobsBefore1st:(id)a3 error:(id *)a4;
- (int64_t)action_ResumeScheduler:(id)a3 error:(id *)a4;
- (int64_t)action_ResumeStager:(id)a3 error:(id *)a4;
- (int64_t)action_RouteAssetFinished:(id)a3 error:(id *)a4;
- (int64_t)action_RouteCatalogFinished:(id)a3 error:(id *)a4;
- (int64_t)action_RouteClientClosed:(id)a3 error:(id *)a4;
- (int64_t)action_RouteClientRequest:(id)a3 error:(id *)a4;
- (int64_t)action_RouteConfigFinished:(id)a3 error:(id *)a4;
- (int64_t)action_ScheduleJobs:(id)a3 error:(id *)a4;
- (int64_t)action_ScheduleJobsBefore1st:(id)a3 error:(id *)a4;
- (int64_t)action_ScheduleSetJobs:(id)a3 error:(id *)a4;
- (int64_t)action_SetJobLookupResponseRcvd:(id)a3 error:(id *)a4;
- (int64_t)action_StagerAlreadyDownloaded:(id)a3 error:(id *)a4;
- (int64_t)action_StagerJobCancel:(id)a3 error:(id *)a4;
- (int64_t)action_StagerJobDoneDetermine:(id)a3 error:(id *)a4;
- (int64_t)action_StagerJobDoneDownload:(id)a3 error:(id *)a4;
- (int64_t)action_StagerJobStartDetermine:(id)a3 error:(id *)a4;
- (int64_t)action_StagerJobStartDownload:(id)a3 error:(id *)a4;
- (int64_t)action_StagerRemoveAllNotPromoted:(id)a3 error:(id *)a4;
- (int64_t)action_StartUnlockPollingTimer:(id)a3 error:(id *)a4;
- (int64_t)action_SyncDecideBefore1st:(id)a3 error:(id *)a4;
- (int64_t)action_SyncInFlightDownloads:(id)a3 error:(id *)a4;
- (int64_t)action_SyncSkippedDecideBefore1st:(id)a3 error:(id *)a4;
- (int64_t)action_Synced:(id)a3 error:(id *)a4;
- (int64_t)action_SyncedResumeStager:(id)a3 error:(id *)a4;
- (int64_t)action_SyncedReviewBefore1st:(id)a3 error:(id *)a4;
- (int64_t)action_SyncedReviewUnlocked:(id)a3 error:(id *)a4;
- (int64_t)atomicInstanceNextCreationIndex:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5;
- (int64_t)clientRequestTimeoutSecs:(id)a3 timeoutWasSpecified:(BOOL *)a4;
- (int64_t)locateDownloadedCurrentDownloadedCount;
- (int64_t)performAction:(id)a3 onEvent:(id)a4 inState:(id)a5 withInfo:(id)a6 nextState:(id)a7 error:(id *)a8;
- (int64_t)preferenceActivityAggressiveIntervalSecs;
- (int64_t)preferenceActivityHeightenedIntervalSecs;
- (int64_t)preferenceActivityIntervalSecs;
- (int64_t)preferenceActivityTickerSecs;
- (int64_t)preferenceBeforeFirstDefaultTimeoutSecs;
- (int64_t)preferenceBeforeFirstPollSecs;
- (int64_t)preferenceConnectorInitialWaitSecs;
- (int64_t)preferenceConnectorWaitBeforeRetrySecs;
- (int64_t)preferenceLookupCacheAssetSelectorValidSecs;
- (int64_t)preferenceLookupCacheSetConfigurationValidSecs;
- (int64_t)preferenceMaxStagerDeterminingSecs;
- (int64_t)preferencePushActivityIntervalSecs;
- (int64_t)preferenceSimulatedDownloadFailureResult;
- (int64_t)preferenceSimulatedStagingLookupFailureResult;
- (int64_t)preferenceStagerDeterminePallasResponseFewer;
- (int64_t)setConfigurationNewSetConfiguration:(id)a3 forSetInfoInstance:(id)a4 dueToMessageName:(id)a5 selectedConfig:(id *)a6;
- (int64_t)setConfigurationSelectUsingInfoInstance:(id)a3 dueToMessageName:(id)a4 selectedConfig:(id *)a5;
- (void)_awaitingResumeReduceToLatest;
- (void)_awaitingResumeRemoveType:(int64_t)a3;
- (void)_clearAtomicInstanceFromLatestToVend:(id)a3 fromLocation:(id)a4;
- (void)_clearSetConfigurationLatestToVend:(id)a3 forSetDesriptor:(id)a4 forSetAtomicInstance:(id)a5 fromLocation:(id)a6;
- (void)_eliminateAtomicTriggeredByClient:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5 awaitingUnlocked:(BOOL)a6;
- (void)_eliminateAtomicTriggeredWhileLoading:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5;
- (void)_eliminateBegin:(id)a3 forAssetSelector:(id)a4 limitingToActivity:(BOOL)a5 fromLocation:(id)a6;
- (void)_eliminateCompleteIfAllDone:(id)a3;
- (void)_eliminatePromotedNeverLocked:(id)a3 forAssetSelector:(id)a4;
- (void)_eliminateSecureOperationFinished:(id)a3 forEliminateDescriptor:(id)a4;
- (void)_eliminateSecureOperationFinished:(id)a3 forEliminateSetDescriptor:(id)a4;
- (void)_forgetAtomicLostToVend:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5;
- (void)_initializeAutoControl;
- (void)_initializeCachedPreferences;
- (void)_initializeConnectionServer;
- (void)_initializeSUCore;
- (void)_initializeServerConnectionPolicy;
- (void)_logAtomicInstanceEntries:(id)a3 forAtomicInstance:(id)a4;
- (void)_logLookupGrantAwaiting:(id)a3 ofLookupGrant:(id)a4 message:(id)a5;
- (void)_logLookupGrantObtained:(id)a3 ofLookupGrant:(id)a4 message:(id)a5;
- (void)_logLookupGrantReleased:(id)a3 ofLookupGrant:(id)a4 message:(id)a5;
- (void)_logPersistedEntry:(id)a3 forComponentType:(id)a4 operation:(id)a5 forPersistedEntryID:(id)a6 forClientRequest:(id)a7 withJobUUID:(id)a8 withAssetDescriptor:(id)a9 baseForPatchDescriptor:(id)a10 message:(id)a11;
- (void)_logPersistedRemovedEntry:(id)a3 forComponentType:(id)a4 removedPersistedEntryID:(id)a5 removedDescriptor:(id)a6 message:(id)a7;
- (void)_logPersistedSetAtomicInstance:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withSetAtomicInstance:(id)a6 message:(id)a7;
- (void)_logPersistedSetAtomicInstanceRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedSetAtomicInstance:(id)a5 message:(id)a6;
- (void)_logPersistedSetAtomicInstanceTableOfContents:(id)a3;
- (void)_logPersistedSetConfiguration:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withSetConfiguration:(id)a6 historyOperation:(int64_t)a7 message:(id)a8;
- (void)_logPersistedSetConfiguration:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withSetConfiguration:(id)a6 historyOperation:(int64_t)a7 recordingSpecifiers:(BOOL)a8 message:(id)a9;
- (void)_logPersistedSetConfigurationRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedSetConfiguration:(id)a5 message:(id)a6;
- (void)_logPersistedSetConfigurationTableOfContents:(id)a3;
- (void)_logPersistedSetDescriptor:(id)a3 forComponentType:(id)a4 operation:(id)a5 forPersistedEntryID:(id)a6 forClientRequest:(id)a7 withJobUUID:(id)a8 withSetDescriptor:(id)a9 message:(id)a10;
- (void)_logPersistedSetDescriptorRemoved:(id)a3 forComponentType:(id)a4 removedPersistedEntryID:(id)a5 removedSetDescriptor:(id)a6 message:(id)a7;
- (void)_logPersistedSetDescriptorTableOfContents:(id)a3 forComponentType:(id)a4;
- (void)_logPersistedSetLookupResult:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withSetLookupResult:(id)a6 message:(id)a7;
- (void)_logPersistedSetLookupResultRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedSetLookupResult:(id)a5 message:(id)a6;
- (void)_logPersistedSetLookupResultTableOfContents:(id)a3;
- (void)_logPersistedSetTarget:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withSetTarget:(id)a6 message:(id)a7;
- (void)_logPersistedSetTargetRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedSetTarget:(id)a5 message:(id)a6;
- (void)_logPersistedSetTargetTableOfContents:(id)a3;
- (void)_logPersistedTableOfContents:(id)a3 forComponentType:(id)a4;
- (void)_logSetConfigurationEntries:(id)a3 forSetConfiguration:(id)a4;
- (void)_logSetDescriptorEntries:(id)a3 forSetDescriptor:(id)a4;
- (void)_logTrackedDescriptors:(id)a3 forAssetType:(id)a4 withAssetSpecifier:(id)a5 matchingAssetVersion:(id)a6;
- (void)_logTrackedSetDescriptors:(id)a3 forSetJobDescriptor:(id)a4;
- (void)_moveFromAwaitingResumedInto:(id)a3 forSelector:(id)a4;
- (void)_preInstalledMakeDescriptorAvailable:(id)a3 fromLocation:(id)a4;
- (void)_preInstalledMigrateAssets;
- (void)_preInstalledRelocateAutoAssets;
- (void)_promotePreviouslyStagedNowDownloaded:(id)a3 forHistoryOperation:(int64_t)a4;
- (void)_reclaimDownloadedDescriptorsWhenJustDownloaded:(id)a3 fromLocation:(id)a4;
- (void)_removeAllContentForEliminateTracker:(id)a3 unlessCurrentlyLocked:(id)a4;
- (void)_removeAllQueuedForEliminateSelector:(id)a3;
- (void)_removeAllUnlockedForOtherAtomicInstances:(id)a3 fromLocation:(id)a4;
- (void)_removeDescriptorFromFilesystem:(id)a3 droppingDescriptor:(id)a4 forHistoryOperation:(int64_t)a5 firstClientName:(id)a6;
- (void)_removeDownloadedDescriptorsWithNewerDownloaded:(id)a3;
- (void)_removeDownloadedSetDescriptorWithNewerDownloaded:(id)a3 fromLocation:(id)a4;
- (void)_removeFromPersistedActiveJobs:(id)a3;
- (void)_removeJobFromDownloadsInFlight:(id)a3;
- (void)_removeSetDeterminedToBeIncomplete:(id)a3;
- (void)_removeUnlockedForOlderSelectorsWithoutVersion:(id)a3;
- (void)_requestDownloadManagerSync;
- (void)_routeAssetFinished:(id)a3 withEventInfo:(id)a4;
- (void)_routeAssetProgress:(id)a3 toCurrentJobByUUID:(id)a4 withDownloadProgress:(id)a5;
- (void)_routeCatalogFinished:(id)a3 withEventInfo:(id)a4;
- (void)_routeClientRequest:(id)a3 alreadyScheduledSelector:(BOOL)a4 fromLocation:(id)a5;
- (void)_routeConfigFinished:(id)a3 withEventInfo:(id)a4;
- (void)_schedulePushNotifications:(id)a3;
- (void)_scheduleSelector:(id)a3;
- (void)_scheduleSetConfiguration:(id)a3 withClientSetPolicy:(id)a4;
- (void)_scheduledAndRouteClientRequest:(id)a3 fromLocation:(id)a4;
- (void)_shortTermChangeAtomicInstance:(id)a3 forAtomicInstance:(id)a4 toShortTermSupported:(BOOL)a5;
- (void)_shortTermSharedLockClose:(id)a3 forSetDescriptor:(id)a4 atomicInstanceFileDescriptor:(id)a5;
- (void)_statsClearingAfterReporting;
- (void)_statsIncrement:(id)a3 forClientRequest:(id)a4;
- (void)_statsIncrementAutoAssetJobsStarted;
- (void)_statsIncrementAutoJobsFinished;
- (void)_statsIncrementDownloadedForDescriptor:(id)a3;
- (void)_statsIncrementFailuresToStartJobs;
- (void)_statsIncrementPreviouslyDownloadedForDescriptor:(id)a3;
- (void)_statsIncrementPromotedForDescriptor:(id)a3;
- (void)_statsIncrementRemovedForDescriptor:(id)a3;
- (void)_statsIncrementResumedInFlightJobs;
- (void)_statsIncrementSchedulerTriggeredJobs;
- (void)_statsIncrementStagerDetermineJobsFinished;
- (void)_statsIncrementStagerDetermineJobsStarted;
- (void)_statsIncrementStagerDownloadJobsFinished;
- (void)_statsIncrementStagerDownloadJobsStarted;
- (void)_statsMaintainReporting;
- (void)_statsRestartNextMaintentanceReport;
- (void)_trackActiveDescriptor:(id)a3 operation:(id)a4 usingSelector:(id)a5 withJobUUID:(id)a6 triggeredByClientMessage:(id)a7 downloadingDescriptor:(id)a8 baseForPatchDescriptor:(id)a9 message:(id)a10;
- (void)_updateCurrentSetStatus:(id)a3 forSetIdentifier:(id)a4 withSetStatus:(id)a5;
- (void)addActiveJobs:(id)a3 basedOnControl:(id)a4;
- (void)addSuccessfullyDownloadedJobs:(id)a3 basedOnControl:(id)a4;
- (void)addToCurrentJobs:(id)a3 usingSelector:(id)a4 withJobUUID:(id)a5 triggeredByClientMessage:(id)a6 downloadingDescriptor:(id)a7 baseForPatchDescriptor:(id)a8 usingSetDescriptor:(id)a9;
- (void)atomicInstanceEliminate:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5;
- (void)atomicInstanceLoadedFromPersisted:(id)a3 persistedEntryID:(id)a4;
- (void)atomicInstanceRemove:(id)a3 setAtomicInstanceUUID:(id)a4 removingForReason:(id)a5 historyOperation:(int64_t)a6;
- (void)atomicInstanceRemovedSetJob:(id)a3 removingForReason:(id)a4 historyOperation:(int64_t)a5;
- (void)atomicInstanceTrackSetDescriptor:(id)a3 fromLocation:(id)a4 forSpecificAtomicInstance:(id)a5;
- (void)atomicInstanceTrimOverflowAfterPersisting:(id)a3;
- (void)clearDownloadedFromSetStatus:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5;
- (void)clientRequestsAwaitingDispatchAll:(id)a3;
- (void)clientRequestsAwaitingSyncToAwaitingFirstUnlock:(id)a3;
- (void)connectionClosedForClientID:(id)a3;
- (void)considerSetDescriptorsForLatestToVend;
- (void)decideSetDescriptorAsLatestToVend:(id)a3 currentlyVendingSetDescriptor:(id)a4 withOtherCandidateSetDescriptors:(id)a5;
- (void)eliminateUngraftDescriptor:(id)a3 forAutoAssetDescriptor:(id)a4 failingClientRequestForEventInfo:(id)a5;
- (void)eliminateUngraftSetDescriptor:(id)a3 failingClientRequestForEventInfo:(id)a4;
- (void)finishSetEliminateIfAwaitingUnlocked:(id)a3 forClientDomain:(id)a4 forAssetSetIdentifier:(id)a5;
- (void)handleClientAlterLockOperation:(id)a3 forAutoJob:(id)a4;
- (void)handleClientCancelActivityForSelectorRequest:(id)a3;
- (void)handleClientCurrentStatusRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleClientEliminateAllForAssetTypeRequest:(id)a3;
- (void)handleClientEliminateAllForSelectorRequest:(id)a3;
- (void)handleClientEliminatePromotedNeverLockedForSelectorRequest:(id)a3;
- (void)handleClientMapLockedToExclaveRequest:(id)a3 fromLocation:(id)a4;
- (void)handleControlClientActiveJobSummaryRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleControlClientAvailableForStagingSummaryRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleControlClientControlStatisticsRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleControlClientForceGlobalAbandonRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleControlClientForceGlobalForgetRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleControlClientForceGlobalPurgeRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleControlClientForceGlobalUnlockRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleControlClientKnownAssetSummaryRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleControlClientLockedAssetSummaryRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleControlClientScheduledJobSummaryRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleControlClientSimulateSetJobOperation:(id)a3;
- (void)handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest:(id)a3;
- (void)handleControlClientSimulatedCacheDeleteReclaimSpaceRequest:(id)a3;
- (void)handleControlClientStagedAssetSummaryRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleMessage:(id)a3 proxyObject:(id)a4 reply:(id)a5;
- (void)handleSetClientAlterEntriesRepresentingAtomicRequest:(id)a3 forAutoJob:(id)a4 alteringFromSetConfiguration:(id)a5;
- (void)handleSetClientAssetSetForStagingRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetClientContinueAtomicLockRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetClientCurrentStatusRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetClientEliminateAtomicRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetClientEndAtomicLockRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetClientEndAtomicLocksForClientRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetClientFormSubAtomicRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetClientMapLockedAtomicEntryRequest:(id)a3 forAutoJob:(id)a4 fromLocation:(id)a5;
- (void)handleSetClientNeedForAtomicRequest:(id)a3 fromLocation:(id)a4;
- (void)handleSetControlClientActiveSetSummaryRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetControlClientAssetSetsOverviewRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetControlClientInstanceInfoRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetControlClientKnownAssetSetSummaryRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetControlClientLockedAssetSetSummaryRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetControlClientScheduledSetJobSummaryRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleSetControlClientStagedAssetSetSummaryRequest:(id)a3 forAutoJob:(id)a4;
- (void)handleStagingClientCancelOperation:(id)a3;
- (void)handleStagingClientDetermineAllAvailableForUpdateRequest:(id)a3;
- (void)handleStagingClientDetermineAllAvailableRequest:(id)a3;
- (void)handleStagingClientDetermineGroupsAvailableForUpdateRequest:(id)a3;
- (void)handleStagingClientDownloadAllRequest:(id)a3;
- (void)handleStagingClientDownloadGroupsRequest:(id)a3;
- (void)handleStagingClientEraseAllRequest:(id)a3;
- (void)handleStagingClientPurgeAllRequest:(id)a3;
- (void)initialStatusForJob:(id)a3 usingSelector:(id)a4 withJobUUID:(id)a5 downloadingDescriptor:(id)a6 baseForPatchDescriptor:(id)a7 withClientAssetPolicy:(id)a8;
- (void)initialStatusForSetJob:(id)a3 withJobUUID:(id)a4 usingSetDescriptor:(id)a5 usingSetPolicy:(id)a6;
- (void)issueBuiltResponseForEventInfo:(id)a3 issuingResponseMessage:(id)a4 withResponseError:(id)a5 fromLocation:(id)a6;
- (void)issueResponseForEventInfo:(id)a3 withAutoAssetError:(id)a4 fromAction:(id)a5 withDescription:(id)a6;
- (void)issueResponseForEventInfo:(id)a3 withErrorCode:(int64_t)a4 fromAction:(id)a5 withDescription:(id)a6;
- (void)issueResponseToClientRequest:(id)a3 issuingResponseMessage:(id)a4 withResponseError:(id)a5;
- (void)issueResponseToFailedAutoAssetLockRequest:(id)a3 forEventInfo:(id)a4 withResponseError:(id)a5 forAttemptedDescriptor:(id)a6;
- (void)issueResponseToFailedSetLockRequest:(id)a3 forEventInfo:(id)a4 forAtomicInstance:(id)a5 withResponseError:(id)a6;
- (void)loadPersistedActiveJobs;
- (void)loadPersistedAtomicInstancesSupportingShortTermLocking;
- (void)loadPersistedCrossCheckTrim;
- (void)loadPersistedCrossCheckTrimAtomicInstances;
- (void)loadPersistedCrossCheckTrimSetDescriptors;
- (void)loadPersistedDescriptors;
- (void)loadPersistedSetActiveJobDescriptors;
- (void)loadPersistedSetAtomicInstances;
- (void)loadPersistedSetConfigurations;
- (void)loadPersistedSetDownloadedDescriptors;
- (void)loadPersistedSetLookupResults;
- (void)loadPersistedSetTargets;
- (void)lockAutoAssetReplyJobResponse:(id)a3 forEventInfo:(id)a4 lockingChosenDescriptor:(id)a5;
- (void)persistSetDescriptorActiveJob:(id)a3 fromLocation:(id)a4;
- (void)persistSetDescriptorDownloadedJob:(id)a3 fromLocation:(id)a4;
- (void)promoteAnyPreviouslyStagedNowDownloaded:(id)a3;
- (void)removeActiveJobForFullSelector:(id)a3 removingFullSelector:(id)a4 alsoRemovingNoVersionSelector:(id)a5;
- (void)removeClientRequest:(id)a3 fromLocation:(id)a4;
- (void)removeCurrentJob:(id)a3 schedulerInvolved:(BOOL)a4 potentialNetworkFailure:(BOOL)a5 fromLocation:(id)a6;
- (void)removeCurrentSetJob:(id)a3 schedulerInvolved:(BOOL)a4 potentialNetworkFailure:(BOOL)a5 fromLocation:(id)a6 historyOperation:(int64_t)a7;
- (void)removePreviouslyStagedSetDescriptors;
- (void)removeSetDescriptorActiveJobByAtomicInstanceUUID:(id)a3;
- (void)removeSetDescriptorActiveJobByClientDomain:(id)a3 forAssetSetIdentifier:(id)a4 fromLocation:(id)a5;
- (void)removeSetDescriptorDownloaded:(id)a3 fromLocation:(id)a4 checkingByInstance:(BOOL)a5 regardlessOfLatest:(BOOL)a6 historyOperationAI:(int64_t)a7 historyOperationSD:(int64_t)a8;
- (void)removeSetTargetsForClientDomain:(id)a3 forSetIdentifier:(id)a4 fromLocation:(id)a5;
- (void)resumeJobsWhenBeforeFirstUnlock:(BOOL)a3;
- (void)resumeSetJobsWhenBeforeFirstUnlock:(BOOL)a3;
- (void)scheduledJobsResumed:(id)a3;
- (void)secureCheckProcessLifeLocks:(id)a3;
- (void)secureCheckUngraft:(id)a3 forDescriptorNoLongerLocked:(id)a4;
- (void)secureCheckUngraftAll:(id)a3 forSetDescriptorNoLongerLocked:(id)a4;
- (void)secureClearInsecureLatestAtomicInstances;
- (void)secureForceUngraft:(id)a3 forDescriptorBeingRemoved:(id)a4;
- (void)secureForceUngraftAll:(id)a3 forSetDescriptorBeingRemoved:(id)a4;
- (void)securePersonalizeGraftLockSet:(id)a3 lockingSetDescriptor:(id)a4 forEventInfo:(id)a5 fallingBackToSetDescriptor:(id)a6;
- (void)securePersonalizeGraftLockSet:(id)a3 lockingSetDescriptor:(id)a4 forEventInfo:(id)a5 replyingOnError:(BOOL)a6 completion:(id)a7;
- (void)secureStartupEstablishOperationSequence:(id)a3 forRequiringPersonalization:(id)a4 forRequiringGrafting:(id)a5;
- (void)setActiveSetDescriptorsByIdentifier:(id)a3;
- (void)setActiveSetDescriptorsByInstance:(id)a3;
- (void)setActivelyEliminatingSelectors:(id)a3;
- (void)setAlreadyScheduledSelectors:(id)a3;
- (void)setAutoControlManagerFSM:(id)a3;
- (void)setAwaitDownloadManagerSyncTimer:(id)a3;
- (void)setBeyondFirstUnlockPollTimer:(id)a3;
- (void)setBootedOBuildVersion:(id)a3;
- (void)setBootedOSVersion:(id)a3;
- (void)setClientRequestsAwaitingFirstUnlock:(id)a3;
- (void)setClientRequestsAwaitingSync:(id)a3;
- (void)setClientRequestsBeingTracked:(id)a3;
- (void)setConfigurationEliminate:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5;
- (void)setConfigurationForceUnlocked:(id)a3 forSetConfiguration:(id)a4;
- (void)setConfigurationLoadedFromPersisted:(id)a3 persistedEntryID:(id)a4;
- (void)setConfigurationPersist:(id)a3 fromLocation:(id)a4 dueToAlter:(BOOL)a5 forHistoryOperation:(int64_t)a6;
- (void)setConfigurationsPrePersonalizedJustCommitted:(id)a3;
- (void)setConfigurationsRefreshStaleIndications;
- (void)setConnectionServer:(id)a3;
- (void)setCurrentJobsBySelector:(id)a3;
- (void)setCurrentJobsByUUID:(id)a3;
- (void)setCurrentSetJobsByIdentifier:(id)a3;
- (void)setCurrentSetStatusByInstance:(id)a3;
- (void)setCurrentStatusBySelector:(id)a3;
- (void)setDescriptorAddedPreInstalled:(id)a3;
- (void)setDescriptorDownloadedLoadedFromPersisted:(id)a3 persistedEntryID:(id)a4;
- (void)setDescriptorEliminate:(id)a3 triggeredByClient:(id)a4 forClientDomainName:(id)a5 forAssetSetIdentifier:(id)a6 awaitingUnlocked:(BOOL)a7;
- (void)setDescriptorEliminateMatching:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5 eliminatingSetIdentifer:(BOOL)a6;
- (void)setDescriptorsDroppedOnStartup:(id)a3;
- (void)setDescriptorsRequiringGrafting:(id)a3;
- (void)setDescriptorsRequiringPersonalization:(id)a3;
- (void)setDownloadManagerEventsAwaitingResumed:(id)a3;
- (void)setDownloadManagerInFlightTasks:(id)a3;
- (void)setDownloadedSetDescriptorsByInstance:(id)a3;
- (void)setFirstDaemonStartupSinceDeviceBoot:(BOOL)a3;
- (void)setIdentifierEliminate:(id)a3 usingEliminateTracker:(id)a4 whenCurrentlyLocked:(BOOL)a5 beginningToEliminate:(BOOL)a6 removingContent:(BOOL)a7;
- (void)setKnownSetAtomicInstancesByInstance:(id)a3;
- (void)setKnownSetConfigurationsByIdentifier:(id)a3;
- (void)setLatestSafeSummary:(id)a3;
- (void)setLockUsageMapEliminateForClientDomain:(id)a3 forSetIdentifier:(id)a4;
- (void)setLockUsageMapEndedLockForSetDescriptor:(id)a3 forLockReason:(id)a4 endedLockCount:(int64_t)a5;
- (void)setLockUsageMapLockedSetDescriptor:(id)a3 forLockReason:(id)a4;
- (void)setLocksPriorToSecureHealing:(id)a3;
- (void)setLookupGrantsByAssetType:(id)a3;
- (void)setMaintainingActiveJobStatus:(BOOL)a3;
- (void)setMigratedFromPreinstalled:(BOOL)a3;
- (void)setOperatingBeforeFirstUnlock:(BOOL)a3;
- (void)setOperatingBeforeResumed:(BOOL)a3;
- (void)setPersistedActiveJobSetDescriptors:(id)a3;
- (void)setPersistedActiveJobs:(id)a3;
- (void)setPersistedActiveSetJobsLoaded:(BOOL)a3;
- (void)setPersistedDownloadedSetDescriptors:(id)a3;
- (void)setPersistedKnownDescriptors:(id)a3;
- (void)setPersistedKnownSetAtomicInstances:(id)a3;
- (void)setPersistedKnownSetConfigurations:(id)a3;
- (void)setPersistedSetLookupResults:(id)a3;
- (void)setPersistedSetTargets:(id)a3;
- (void)setPrePersonalizedSelectors:(id)a3;
- (void)setPreferenceActivityAggressiveAssetType:(id)a3;
- (void)setPreferenceActivityAggressiveIntervalSecs:(int64_t)a3;
- (void)setPreferenceActivityHeightenedAssetType:(id)a3;
- (void)setPreferenceActivityHeightenedIntervalSecs:(int64_t)a3;
- (void)setPreferenceActivityIntervalSecs:(int64_t)a3;
- (void)setPreferenceActivityTickerSecs:(int64_t)a3;
- (void)setPreferenceAlwaysPromoteStagedAssets:(BOOL)a3;
- (void)setPreferenceAsIfBackground:(BOOL)a3;
- (void)setPreferenceAsIfBackgroundSpecified:(BOOL)a3;
- (void)setPreferenceAsIfBootedOSIsBuildVersion:(id)a3;
- (void)setPreferenceAsIfBootedOSIsOSVersion:(id)a3;
- (void)setPreferenceAsIfRamp:(BOOL)a3;
- (void)setPreferenceAsIfRampSpecified:(BOOL)a3;
- (void)setPreferenceAutoAssetLogSetCompare:(BOOL)a3;
- (void)setPreferenceAutoAssetNoPersistedOverflowLimit:(BOOL)a3;
- (void)setPreferenceAutoAssetObserverIgnoreNetworkStatus:(BOOL)a3;
- (void)setPreferenceBeforeFirstDefaultTimeoutSecs:(int64_t)a3;
- (void)setPreferenceBeforeFirstPollSecs:(int64_t)a3;
- (void)setPreferenceConnectorBackoffRetryTimes:(id)a3;
- (void)setPreferenceConnectorInitialWaitSecs:(int64_t)a3;
- (void)setPreferenceConnectorWaitBeforeRetrySecs:(int64_t)a3;
- (void)setPreferenceLookupCacheAssetSelectorValidSecs:(int64_t)a3;
- (void)setPreferenceLookupCacheSetConfigurationValidSecs:(int64_t)a3;
- (void)setPreferenceMaxStagerDeterminingSecs:(int64_t)a3;
- (void)setPreferencePersistedTableLoggingEnabled:(BOOL)a3;
- (void)setPreferencePushActivityIntervalSecs:(int64_t)a3;
- (void)setPreferenceScheduledAlwaysNonDiscretionary:(BOOL)a3;
- (void)setPreferenceScheduledAsIfNotInternal:(BOOL)a3;
- (void)setPreferenceScheduledBackupTriggersDisabled:(BOOL)a3;
- (void)setPreferenceSecureSimulateFailureAll:(BOOL)a3;
- (void)setPreferenceSecureSimulateRequireAll:(BOOL)a3;
- (void)setPreferenceSessionIDBase:(id)a3;
- (void)setPreferenceSimulatedDownloadFailureResult:(int64_t)a3;
- (void)setPreferenceSimulatedStagingLookupFailureResult:(int64_t)a3;
- (void)setPreferenceStagerDeterminePallasResponseFewer:(int64_t)a3;
- (void)setPreferenceStagerDownloadFirstNotInCatalog:(BOOL)a3;
- (void)setPreferenceStagingLookupFlipRequiredOptional:(BOOL)a3;
- (void)setPreferenceStartupSimulateFirstBoot:(BOOL)a3;
- (void)setReceivedDownloadManagerSync:(BOOL)a3;
- (void)setSecureHealingPersonalizationAttempted:(BOOL)a3;
- (void)setServerConnectionPolicy:(id)a3;
- (void)setSetLockUsageMap:(id)a3;
- (void)setShortTermLockedByAtomicInstance:(id)a3;
- (void)setShortTermLockedLatestByIdentifier:(id)a3;
- (void)setSimulateOperationRequested:(BOOL)a3;
- (void)setSimulateOperationsBySelector:(id)a3;
- (void)setStagerBondedToAutoJob:(id)a3;
- (void)setStagerCurrentJob:(id)a3;
- (void)setStagerCurrentJobUUID:(id)a3;
- (void)setStagerDownloadingSelector:(id)a3;
- (void)setStagerFormedSetConfiguration:(id)a3;
- (void)setStagerResumed:(BOOL)a3;
- (void)setStatistics:(id)a3;
- (void)setStatisticsNextMaintenanceReport:(double)a3;
- (void)setTimedOperations:(id)a3;
- (void)timerStopForClientRequest:(id)a3 fromLocation:(id)a4;
- (void)trackClientRequest:(id)a3;
- (void)trackDescriptor:(id)a3 persisting:(BOOL)a4 fromLocation:(id)a5 changedWhileTerminated:(BOOL)a6 changedNeverBeenLocked:(BOOL)a7 historyOperation:(int64_t)a8 firstClientName:(id)a9;
- (void)trackDescriptorForgetAssetSelector:(id)a3 forHistoryOperation:(int64_t)a4 firstClientName:(id)a5;
- (void)trackDescriptorForgetAssetType:(id)a3 firstClientName:(id)a4;
- (void)trackDescriptorForgetAssetType:(id)a3 forAssetSpecifier:(id)a4 firstClientName:(id)a5;
- (void)trackShortTermLockedSetDescriptor:(id)a3;
- (void)updateAssociatedNoVersionStatus:(id)a3 currentStatus:(id)a4 forAssetSelector:(id)a5;
- (void)updateAutoAssetSetStatus:(id)a3 forSetDescriptor:(id)a4;
- (void)updateAutoAssetStatus:(id)a3 forActiveJobUUID:(id)a4 withLatestJobStatus:(id)a5 matchingAssetVersion:(id)a6 fromLocation:(id)a7;
- (void)updateAutoAssetStatusForChosenDownloadedDescriptor:(id)a3 matchingAssetVersion:(id)a4 fromLocation:(id)a5;
- (void)updateCurrentAssetStatus:(id)a3 currentStatus:(id)a4 forAssetSelector:(id)a5 forActiveJobUUID:(id)a6 matchingAssetVersion:(id)a7 downloadingDescriptor:(id)a8 baseForPatchDescriptor:(id)a9;
@end

@implementation MADAutoAssetControlManager

- (void)handleMessage:(id)a3 proxyObject:(id)a4 reply:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  v11 = v10;
  if (v8 && v10)
  {
    v12 = -[MADAutoAssetControlManagerParam initWithClientRequest:reportingProgressThroughProxy:withReplyCompletion:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initWithClientRequest:reportingProgressThroughProxy:withReplyCompletion:",  v8,  v9,  v10);
    v13 = objc_alloc(&OBJC_CLASS___MADAutoAssetClientRequest);
    v14 = (void *)objc_claimAutoreleasedReturnValue([v8 clientID]);
    id v15 = -[MADAutoAssetClientRequest initForClientID:withClientRequestMessage:withClientProgressProxy:withClientReplyCompletion:]( v13,  "initForClientID:withClientRequestMessage:withClientProgressProxy:withClientReplyCompletion:",  v14,  v8,  v9,  v11);

    -[MADAutoAssetControlManagerParam setClientRequest:](v12, "setClientRequest:", v15);
    -[MADAutoAssetControlManagerParam updateSafeSummary](v12, "updateSafeSummary");
    v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    [v16 postEvent:@"ClientRequest" withInfo:v12];
  }

  else
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager handleMessage:proxyObject:reply:].cold.1(v8 == 0LL, v11 == 0LL, v18);
    }
  }
}

+ (id)newSummaryForRequestMessage:(id)a3 includingSelector:(BOOL)a4
{
  BOOL v4 = a4;
  id v5 = a3;
  v6 = objc_alloc(&OBJC_CLASS___NSMutableString);
  v7 = (void *)objc_claimAutoreleasedReturnValue([v5 messageName]);
  id v8 = -[NSMutableString initWithFormat:](v6, "initWithFormat:", @"%@", v7);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
  if (v9)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 messageName]);
    unsigned int v11 = +[MADAutoAssetControlManager isMessageNameForSetMessage:]( &OBJC_CLASS___MADAutoAssetControlManager,  "isMessageNameForSetMessage:",  v10);

    if (v11)
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
      id v13 = +[MASAutoAssetSetInfoInstance newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoInstance,  "newShimmedFromFrameworkMessage:forKey:",  v12,  @"setInstance");

      v14 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
      id v15 = +[MASAutoAssetSetInfoDesire newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoDesire,  "newShimmedFromFrameworkMessage:forKey:",  v14,  @"setDesire");

      v16 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
      id v17 = +[MASAutoAssetSetInfoEnd newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoEnd,  "newShimmedFromFrameworkMessage:forKey:",  v16,  @"setEnd");

      v18 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
      id v19 = +[MASAutoAssetSetInfoControl newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoControl,  "newShimmedFromFrameworkMessage:forKey:",  v18,  @"setControl");

      if (v13)
      {
        if (v4)
        {
          v20 = (NSString *)objc_claimAutoreleasedReturnValue([v13 summary]);
        }

        else
        {
          v52 = objc_alloc(&OBJC_CLASS___NSString);
          v56 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetSetClientName]);
          v55 = (void *)objc_claimAutoreleasedReturnValue([v13 clientProcessName]);
          id v50 = [v13 clientProcessID];
          v32 = (void *)objc_claimAutoreleasedReturnValue([v13 atomicInstance]);
          if (v32) {
            v54 = (__CFString *)objc_claimAutoreleasedReturnValue([v13 atomicInstance]);
          }
          else {
            v54 = @"N";
          }
          v51 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetEntries]);
          if (v51)
          {
            v40 = objc_alloc(&OBJC_CLASS___NSString);
            v48 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetEntries]);
            v53 = -[NSString initWithFormat:](v40, "initWithFormat:", @"%ld", [v48 count]);
          }

          else
          {
            v53 = @"N";
          }

          v41 = (void *)objc_claimAutoreleasedReturnValue([v13 entriesWhenTargeting]);
          if (v41)
          {
            v42 = objc_alloc(&OBJC_CLASS___NSString);
            v49 = v32;
            v43 = (void *)objc_claimAutoreleasedReturnValue([v13 entriesWhenTargeting]);
            v44 = -[NSString initWithFormat:](v42, "initWithFormat:", @"%ld", [v43 count]);
            v20 = -[NSString initWithFormat:]( v52,  "initWithFormat:",  @"clientName:%@|processName:%@|pid:%ld|atomicInstance:%@|entries:%@(WhenTargeting:%@)",  v56,  v55,  v50,  v54,  v53,  v44);

            v32 = v49;
          }

          else
          {
            v20 = -[NSString initWithFormat:]( v52,  "initWithFormat:",  @"clientName:%@|processName:%@|pid:%ld|atomicInstance:%@|entries:%@(WhenTargeting:%@)",  v56,  v55,  v50,  v54,  v53,  @"N");
          }

          if (v51)
          {
          }

          if (v32) {
        }
          }

        -[NSMutableString appendFormat:](v8, "appendFormat:", @"[instance:%@]", v20);
      }

      if (v15)
      {
        v45 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
        -[NSMutableString appendFormat:](v8, "appendFormat:", @"[desire:%@]", v45);
      }

      if (v17)
      {
        v46 = (void *)objc_claimAutoreleasedReturnValue([v17 summary]);
        -[NSMutableString appendFormat:](v8, "appendFormat:", @"[end:%@]", v46);
      }

      if (!v19) {
        goto LABEL_41;
      }
      id v30 = (id)objc_claimAutoreleasedReturnValue([v19 summary]);
      -[NSMutableString appendFormat:](v8, "appendFormat:", @"[control:%@]", v30);
    }

    else
    {
      v21 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
      id v22 = [v21 safeObjectForKey:@"instance" ofClass:objc_opt_class(MAAutoAssetInfoInstance)];
      id v13 = (id)objc_claimAutoreleasedReturnValue(v22);

      v23 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
      id v24 = [v23 safeObjectForKey:@"desire" ofClass:objc_opt_class(MAAutoAssetInfoDesire)];
      id v15 = (id)objc_claimAutoreleasedReturnValue(v24);

      v25 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
      id v26 = [v25 safeObjectForKey:@"listen" ofClass:objc_opt_class(MAAutoAssetInfoListen)];
      id v17 = (id)objc_claimAutoreleasedReturnValue(v26);

      v27 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
      id v28 = [v27 safeObjectForKey:@"end" ofClass:objc_opt_class(MAAutoAssetInfoEnd)];
      id v19 = (id)objc_claimAutoreleasedReturnValue(v28);

      v29 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
      id v30 = +[MASAutoAssetInfoControl newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetInfoControl,  "newShimmedFromFrameworkMessage:forKey:",  v29,  @"control");

      if (v13)
      {
        if (v4)
        {
          v31 = (NSString *)objc_claimAutoreleasedReturnValue([v13 summary]);
        }

        else
        {
          v33 = objc_alloc(&OBJC_CLASS___NSString);
          v34 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetClientName]);
          v35 = (void *)objc_claimAutoreleasedReturnValue([v13 clientProcessName]);
          v31 = -[NSString initWithFormat:]( v33,  "initWithFormat:",  @"%@(%@:%ld)",  v34,  v35,  [v13 clientProcessID]);
        }

        -[NSMutableString appendFormat:](v8, "appendFormat:", @"[instance:%@]", v31);
      }

      if (v15)
      {
        v36 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
        -[NSMutableString appendFormat:](v8, "appendFormat:", @"[desire:%@]", v36);
      }

      if (v17)
      {
        v37 = (void *)objc_claimAutoreleasedReturnValue([v17 summary]);
        -[NSMutableString appendFormat:](v8, "appendFormat:", @"[listen:%@]", v37);
      }

      if (v19)
      {
        v38 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
        -[NSMutableString appendFormat:](v8, "appendFormat:", @"[end:%@]", v38);
      }

      if (v30)
      {
        v39 = (void *)objc_claimAutoreleasedReturnValue([v30 summary]);
        -[NSMutableString appendFormat:](v8, "appendFormat:", @"[control:%@]", v39);
      }
    }

LABEL_41:
  }

  return v8;
}

+ (BOOL)isMessageNameForSetMessage:(id)a3
{
  id v3 = a3;
  BOOL v4 = (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:NEED_FOR_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:LOCK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:MAP_LOCKED_ATOMIC_ENTRY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:FORM_SUB_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:CONTINUE_ATOMIC_LOCK") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:END_ATOMIC_LOCK") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:END_ATOMIC_LOCKS_FOR_CLIENT") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:ASSET_SET_FOR_STAGING") & 1) != 0
    || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:CURRENT_SET_STATUS") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:ELIMINATE_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:KNOWN_ASSET_SET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:ACTIVE_SET_JOB_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:SCHEDULED_SET_JOB_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:LOCKED_ASSET_SET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:STAGED_ASSET_SET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:ASSET_SETS_OVERVIEW") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:SET_INSTANCE_INFO") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET(REPLY):ALTER_ENTRIES_REPRESENTING_ATOMIC") & 1) != 0
    || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET(REPLY):NEED_FOR_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET(REPLY):CHECK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET(REPLY):LOCK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET(REPLY):MAP_LOCKED_ATOMIC_ENTRY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET(REPLY):FORM_SUB_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET(REPLY):CONTINUE_ATOMIC_LOCK") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET(REPLY):END_ATOMIC_LOCK") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET(REPLY):END_ATOMIC_LOCKS_FOR_CLIENT") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET(REPLY):ASSET_SET_FOR_STAGING") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET(REPLY):CURRENT_SET_STATUS") & 1) != 0
    || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET(REPLY):ELIMINATE_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL(REPLY):KNOWN_ASSET_SET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL(REPLY):ACTIVE_SET_JOB_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL(REPLY):SCHEDULED_SET_JOB_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL(REPLY):LOCKED_ASSET_SET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL(REPLY):STAGED_ASSET_SET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL(REPLY):ASSET_SETS_OVERVIEW") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL(REPLY):SET_INSTANCE_INFO");

  return v4;
}

- (SUCoreFSM)autoControlManagerFSM
{
  return self->_autoControlManagerFSM;
}

- (int64_t)performAction:(id)a3 onEvent:(id)a4 inState:(id)a5 withInfo:(id)a6 nextState:(id)a7 error:(id *)a8
{
  id v11 = a3;
  id v12 = a6;
  if ([v11 isEqualToString:kSUCoreFSMActionNoOp])
  {
    int64_t v13 = 0LL;
  }

  else
  {
    if ([v11 isEqualToString:@"StartUnlockPollingTimer"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_StartUnlockPollingTimer:error:]( self,  "action_StartUnlockPollingTimer:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"PollDecideBefore1stUnlock"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_PollDecideBefore1stUnlock:error:]( self,  "action_PollDecideBefore1stUnlock:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"SyncSkippedDecideBefore1st"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_SyncSkippedDecideBefore1st:error:]( self,  "action_SyncSkippedDecideBefore1st:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"SyncDecideBefore1st"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_SyncDecideBefore1st:error:]( self,  "action_SyncDecideBefore1st:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"LoadPersistedResumeLocker"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_LoadPersistedResumeLocker:error:]( self,  "action_LoadPersistedResumeLocker:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ResumeStager"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_ResumeStager:error:](self, "action_ResumeStager:error:", v12, a8);
    }

    else if ([v11 isEqualToString:@"SyncedResumeStager"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_SyncedResumeStager:error:]( self,  "action_SyncedResumeStager:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"PromoteStagedMigrate"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_PromoteStagedMigrate:error:]( self,  "action_PromoteStagedMigrate:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ResumeScheduler"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_ResumeScheduler:error:](self, "action_ResumeScheduler:error:", v12, a8);
    }

    else if ([v11 isEqualToString:@"SyncInFlightDownloads"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_SyncInFlightDownloads:error:]( self,  "action_SyncInFlightDownloads:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"Synced"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_Synced:error:](self, "action_Synced:error:", v12, a8);
    }

    else if ([v11 isEqualToString:@"AdditionalSynced"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_AdditionalSynced:error:]( self,  "action_AdditionalSynced:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ResumeJobsBefore1st"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_ResumeJobsBefore1st:error:]( self,  "action_ResumeJobsBefore1st:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ResumeJobs"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_ResumeJobs:error:](self, "action_ResumeJobs:error:", v12, a8);
    }

    else if ([v11 isEqualToString:@"FailClientTimedOut"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_FailClientTimedOut:error:]( self,  "action_FailClientTimedOut:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"QueueClientRequest"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_QueueClientRequest:error:]( self,  "action_QueueClientRequest:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"QueueClientRequestBefore1st"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_QueueClientRequestBefore1st:error:]( self,  "action_QueueClientRequestBefore1st:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"RemoveQueuedClient"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_RemoveQueuedClient:error:]( self,  "action_RemoveQueuedClient:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"RouteClientRequest"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_RouteClientRequest:error:]( self,  "action_RouteClientRequest:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"RouteClientClosed"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_RouteClientClosed:error:]( self,  "action_RouteClientClosed:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"QueueDownloadManager"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_QueueDownloadManager:error:]( self,  "action_QueueDownloadManager:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"RouteCatalogFinished"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_RouteCatalogFinished:error:]( self,  "action_RouteCatalogFinished:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"RouteConfigFinished"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_RouteConfigFinished:error:]( self,  "action_RouteConfigFinished:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"RouteAssetFinished"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_RouteAssetFinished:error:]( self,  "action_RouteAssetFinished:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"Before1stCatalogFinished"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_Before1stCatalogFinished:error:]( self,  "action_Before1stCatalogFinished:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"Before1stConfigFinished"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_Before1stConfigFinished:error:]( self,  "action_Before1stConfigFinished:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"Before1stAssetFinished"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_Before1stAssetFinished:error:]( self,  "action_Before1stAssetFinished:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"SyncedReviewUnlocked"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_SyncedReviewUnlocked:error:]( self,  "action_SyncedReviewUnlocked:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"SyncedReviewBefore1st"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_SyncedReviewBefore1st:error:]( self,  "action_SyncedReviewBefore1st:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ObtainLookupGrant"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_ObtainLookupGrant:error:]( self,  "action_ObtainLookupGrant:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ReleaseLookupGrant"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_ReleaseLookupGrant:error:]( self,  "action_ReleaseLookupGrant:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ProvidePersistedForJob"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_ProvidePersistedForJob:error:]( self,  "action_ProvidePersistedForJob:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"SetJobLookupResponseRcvd"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_SetJobLookupResponseRcvd:error:]( self,  "action_SetJobLookupResponseRcvd:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"IssueClientReplyJobResponse"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_IssueClientReplyJobResponse:error:]( self,  "action_IssueClientReplyJobResponse:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"RemoveFinishedJob"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_RemoveFinishedJob:error:]( self,  "action_RemoveFinishedJob:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"IssueClientReplySetJob"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_IssueClientReplySetJob:error:]( self,  "action_IssueClientReplySetJob:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ScheduleJobsBefore1st"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_ScheduleJobsBefore1st:error:]( self,  "action_ScheduleJobsBefore1st:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ScheduleJobs"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_ScheduleJobs:error:](self, "action_ScheduleJobs:error:", v12, a8);
    }

    else if ([v11 isEqualToString:@"ScheduleSetJobs"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_ScheduleSetJobs:error:](self, "action_ScheduleSetJobs:error:", v12, a8);
    }

    else if ([v11 isEqualToString:@"LogStatistics"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_LogStatistics:error:](self, "action_LogStatistics:error:", v12, a8);
    }

    else if ([v11 isEqualToString:@"IgnorePushNotifications"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_IgnorePushNotifications:error:]( self,  "action_IgnorePushNotifications:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"HandlePushNotifications"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_HandlePushNotifications:error:]( self,  "action_HandlePushNotifications:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClearInProgressSecure"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_ClearInProgressSecure:error:]( self,  "action_ClearInProgressSecure:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"DecideNeedPersonalize"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_DecideNeedPersonalize:error:]( self,  "action_DecideNeedPersonalize:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"DecideNeedGraft"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_DecideNeedGraft:error:](self, "action_DecideNeedGraft:error:", v12, a8);
    }

    else if ([v11 isEqualToString:@"AttemptNextPersonalize"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_AttemptNextPersonalize:error:]( self,  "action_AttemptNextPersonalize:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"AttemptNextGraft"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_AttemptNextGraft:error:]( self,  "action_AttemptNextGraft:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"PersonalizeSuccessDecideMore"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_PersonalizeSuccessDecideMore:error:]( self,  "action_PersonalizeSuccessDecideMore:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"PersonalizeFailureDecideMore"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_PersonalizeFailureDecideMore:error:]( self,  "action_PersonalizeFailureDecideMore:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"GraftSuccessDecideMore"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_GraftSuccessDecideMore:error:]( self,  "action_GraftSuccessDecideMore:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"GraftFailureDecideMore"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_GraftFailureDecideMore:error:]( self,  "action_GraftFailureDecideMore:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"StagerAlreadyDownloaded"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_StagerAlreadyDownloaded:error:]( self,  "action_StagerAlreadyDownloaded:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"StagerJobStartDetermine"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_StagerJobStartDetermine:error:]( self,  "action_StagerJobStartDetermine:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"StagerJobStartDownload"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_StagerJobStartDownload:error:]( self,  "action_StagerJobStartDownload:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"StagerJobDoneDetermine"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_StagerJobDoneDetermine:error:]( self,  "action_StagerJobDoneDetermine:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"StagerJobDoneDownload"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_StagerJobDoneDownload:error:]( self,  "action_StagerJobDoneDownload:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"StagerJobCancel"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_StagerJobCancel:error:](self, "action_StagerJobCancel:error:", v12, a8);
    }

    else if ([v11 isEqualToString:@"StagerRemoveAllNotPromoted"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_StagerRemoveAllNotPromoted:error:]( self,  "action_StagerRemoveAllNotPromoted:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"EliminateSchedulerDone"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_EliminateSchedulerDone:error:]( self,  "action_EliminateSchedulerDone:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"EliminateStagerDone"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_EliminateStagerDone:error:]( self,  "action_EliminateStagerDone:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"EliminateStagerSetDone"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_EliminateStagerSetDone:error:]( self,  "action_EliminateStagerSetDone:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"CancelActivityAck"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_CancelActivityAck:error:]( self,  "action_CancelActivityAck:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"InstallAssets"])
    {
      int64_t v14 = -[MADAutoAssetControlManager action_InstallAssets:error:](self, "action_InstallAssets:error:", v12, a8);
    }

    else
    {
      int64_t v14 = -[MADAutoAssetControlManager actionUnknownAction:error:](self, "actionUnknownAction:error:", v11, a8);
    }

    int64_t v13 = v14;
  }

  return v13;
}

- (int64_t)action_RouteClientRequest:(id)a3 error:(id *)a4
{
  id v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  -[MADAutoAssetControlManager trackClientRequest:](self, "trackClientRequest:", v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  LODWORD(v7) = -[MADAutoAssetControlManager _isClientRequestForSetJob:](self, "_isClientRequestForSetJob:", v9);

  if (!(_DWORD)v7)
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageInstance:]( self,  "clientRequestMessageInstance:",  v5));
    id v10 = v17;
    if (v17)
    {
      v18 = (void *)objc_claimAutoreleasedReturnValue([v17 clientAssetSelector]);
      if (v18
        && -[MADAutoAssetControlManager _isClientRequestSubjectToElimination:]( self,  "_isClientRequestSubjectToElimination:",  v5))
      {
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v10 clientAssetSelector]);
        unsigned int v20 = -[MADAutoAssetControlManager _selectorBeingEliminated:fromLocation:]( self,  "_selectorBeingEliminated:fromLocation:",  v19,  @"RouteClientRequest");

        if (v20)
        {
          v21 = objc_alloc(&OBJC_CLASS___NSString);
          id v22 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
          v23 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
          id v24 = -[NSString initWithFormat:]( v21,  "initWithFormat:",  @"in-progress elimination blocking new request | clientRequest:%@",  v23);
          -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6114LL,  @"RouteClientRequest",  v24);

          v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
            -[MADAutoAssetControlManager action_RouteClientRequest:error:].cold.2(v5);
          }
          goto LABEL_13;
        }
      }

      else
      {
      }

- (void)trackClientRequest:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsBeingTracked](self, "clientRequestsBeingTracked"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequestUUID]);
  [v7 setSafeObject:v4 forKey:v8];

  id v10 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v10 totalClientRequests]);
  -[MADAutoAssetControlManager _statsIncrement:forClientRequest:](self, "_statsIncrement:forClientRequest:", v9, v4);
}

- (NSMutableDictionary)clientRequestsBeingTracked
{
  return self->_clientRequestsBeingTracked;
}

- (MANAutoAssetControlStatistics)statistics
{
  return self->_statistics;
}

- (void)_statsIncrement:(id)a3 forClientRequest:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
  id v11 = (id)objc_claimAutoreleasedReturnValue([v10 messageName]);

  [v7 incrementForClientRequestMessage:v11];
  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsMaintainReporting
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  -[MADAutoAssetControlManager statisticsNextMaintenanceReport](self, "statisticsNextMaintenanceReport");
  if (v5 == 0.0)
  {
    -[MADAutoAssetControlManager _statsRestartNextMaintentanceReport](self, "_statsRestartNextMaintentanceReport");
  }

  else
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v6 timeIntervalSince1970];
    double v8 = v7;

    -[MADAutoAssetControlManager statisticsNextMaintenanceReport](self, "statisticsNextMaintenanceReport");
    if (v8 >= v9)
    {
      id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        int64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
        int64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
        int v15 = 138543618;
        v16 = v12;
        __int16 v17 = 2114;
        v18 = v14;
        _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] AUTO-STATISTICS | maintenance report | statistics:%{public}@",  (uint8_t *)&v15,  0x16u);
      }

      -[MADAutoAssetControlManager _statsRestartNextMaintentanceReport](self, "_statsRestartNextMaintentanceReport");
    }
  }

- (double)statisticsNextMaintenanceReport
{
  return self->_statisticsNextMaintenanceReport;
}

- (BOOL)_isClientRequestForSetJob:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", a3));
  BOOL v4 = (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:NEED_FOR_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:LOCK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:MAP_LOCKED_ATOMIC_ENTRY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:FORM_SUB_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:CONTINUE_ATOMIC_LOCK") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:END_ATOMIC_LOCK") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:END_ATOMIC_LOCKS_FOR_CLIENT") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:ASSET_SET_FOR_STAGING") & 1) != 0
    || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:CURRENT_SET_STATUS") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:ELIMINATE_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:KNOWN_ASSET_SET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:ACTIVE_SET_JOB_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:SCHEDULED_SET_JOB_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:LOCKED_ASSET_SET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:STAGED_ASSET_SET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:ASSET_SETS_OVERVIEW") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET-CONTROL:SET_INSTANCE_INFO");

  return v4;
}

- (id)clientRequestMessageName:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a3 clientRequestMessage]);
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);

  return v4;
}

- (id)clientRequestMessageInstance:(id)a3
{
  id v4 = a3;
  double v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  double v7 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequestMessage]);
  double v8 = (void *)objc_claimAutoreleasedReturnValue([v7 message]);

  double v9 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"instance"]);
  if (!v9) {
    goto LABEL_31;
  }
  id v10 = [v8 safeObjectForKey:@"instance" ofClass:objc_opt_class(MAAutoAssetInfoInstance)];
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  if (!v11)
  {
    id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager clientRequestMessageInstance:].cold.1(self);
    }
    goto LABEL_30;
  }

  id v12 = v11;
  uint64_t v13 = objc_claimAutoreleasedReturnValue([v11 autoAssetClientName]);
  if (!v13)
  {
LABEL_14:
    v43 = v9;
    v44 = self;
    v46 = v8;
    v40 = objc_alloc(&OBJC_CLASS___NSMutableString);
    v42 = (void *)objc_claimAutoreleasedReturnValue([v12 autoAssetClientName]);
    id v26 = @"autoAssetClientName";
    if (v42) {
      id v26 = &stru_355768;
    }
    v39 = v26;
    v41 = (void *)objc_claimAutoreleasedReturnValue([v12 clientProcessName]);
    if (v41) {
      v27 = &stru_355768;
    }
    else {
      v27 = @"clientProcessName";
    }
    id v28 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
    if (v28) {
      v29 = &stru_355768;
    }
    else {
      v29 = @"clientAssetSelector";
    }
    id v30 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
    v31 = (void *)objc_claimAutoreleasedReturnValue([v30 assetType]);
    if (v31) {
      v32 = &stru_355768;
    }
    else {
      v32 = @"assetType";
    }
    v33 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
    v34 = (void *)objc_claimAutoreleasedReturnValue([v33 assetSpecifier]);
    v35 = @"assetSpecifier";
    if (v34) {
      v35 = &stru_355768;
    }
    v25 = -[NSMutableString initWithFormat:]( v40,  "initWithFormat:",  @"(%@,%@,%@,%@,%@,%@)",  &stru_355768,  v39,  v27,  v29,  v32,  v35);

    v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v44, "logger"));
    v37 = (os_log_s *)objc_claimAutoreleasedReturnValue([v36 oslog]);

    if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager clientRequestMessageInstance:].cold.2();
    }

    double v8 = v46;
    double v9 = v43;
LABEL_30:

LABEL_31:
    id v12 = 0LL;
    goto LABEL_32;
  }

  int64_t v14 = (void *)v13;
  uint64_t v15 = objc_claimAutoreleasedReturnValue([v12 clientProcessName]);
  if (!v15)
  {
LABEL_13:

    goto LABEL_14;
  }

  v16 = (void *)v15;
  uint64_t v17 = objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
  if (!v17)
  {
LABEL_12:

    goto LABEL_13;
  }

  v18 = (void *)v17;
  id v19 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
  uint64_t v20 = objc_claimAutoreleasedReturnValue([v19 assetType]);
  if (!v20)
  {

    goto LABEL_12;
  }

  v21 = (void *)v20;
  id v22 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
  v45 = v19;
  v23 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSpecifier]);

  if (!v23) {
    goto LABEL_14;
  }
LABEL_32:

  return v12;
}

- (BOOL)_isClientRequestSubjectToElimination:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a3 clientRequestMessage]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);

  BOOL v5 = (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:CURRENT_STATUS") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:INTEREST_IN_CONTENT") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:CHECK_FOR_NEWER") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:DETERMINE_IF_AVAILABLE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:LOCK_CONTENT") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:MAP_LOCKED_CONTENT_TO_EXCLAVE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:NEED_FOR_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:LOCK_ATOMIC") & 1) != 0
    || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:MAP_LOCKED_ATOMIC_ENTRY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:CONTINUE_ATOMIC_LOCK") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:FORM_SUB_ATOMIC") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:ASSET_SET_FOR_STAGING");

  return v5;
}

- (void)_scheduledAndRouteClientRequest:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  double v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  double v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_scheduledAndRouteClientRequest",  v7);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
  id v12 = (__CFString *)objc_claimAutoreleasedReturnValue([v11 messageName]);

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
  int64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 message]);

  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequest]);
  unsigned int v16 = -[MADAutoAssetControlManager _isClientRequestForSetJob:](self, "_isClientRequestForSetJob:", v15);

  if (!v16)
  {
    uint64_t v24 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v6));
    uint64_t v17 = (void *)v24;
    if (v12 && v14 && v24)
    {
      v38 = v14;
      v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager alreadyScheduledSelectors](self, "alreadyScheduledSelectors"));
      id v26 = (void *)objc_claimAutoreleasedReturnValue([v17 clientAssetSelector]);
      v27 = (void *)objc_claimAutoreleasedReturnValue([v26 persistedEntryID]);
      id v28 = [v25 safeObjectForKey:v27 ofClass:objc_opt_class(MAAutoAssetSelector)];
      uint64_t v20 = (NSString *)objc_claimAutoreleasedReturnValue(v28);

      v29 = (void *)objc_claimAutoreleasedReturnValue([v17 clientAssetSelector]);
      LODWORD(v25) = -[MADAutoAssetControlManager _messageShouldBeScheduled:forAssetSelector:]( self,  "_messageShouldBeScheduled:forAssetSelector:",  v12,  v29);

      if ((_DWORD)v25)
      {
        id v30 = (void *)objc_claimAutoreleasedReturnValue([v17 clientAssetSelector]);
        -[MADAutoAssetControlManager _scheduleSelector:](self, "_scheduleSelector:", v30);
      }

      -[MADAutoAssetControlManager _routeClientRequest:alreadyScheduledSelector:fromLocation:]( self,  "_routeClientRequest:alreadyScheduledSelector:fromLocation:",  v6,  v20 != 0LL,  v7);
      int64_t v14 = v38;
      goto LABEL_31;
    }

    v31 = objc_alloc(&OBJC_CLASS___NSString);
    v32 = @"MISSING";
    if (v12) {
      v33 = v12;
    }
    else {
      v33 = @"MISSING";
    }
    if (v14) {
      v34 = @"provided";
    }
    else {
      v34 = @"MISSING";
    }
    if (v17) {
      v32 = @"provided";
    }
    uint64_t v20 = -[NSString initWithFormat:]( v31,  "initWithFormat:",  @"{%@} | invalid eventInfo |messageName:%@|message:%@|instance:%@",  v10,  v33,  v34,  v32);
    v21 = self;
    id v22 = v6;
    uint64_t v23 = 6102LL;
LABEL_30:
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( v21,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v22,  v23,  v10,  v20);
LABEL_31:

    goto LABEL_33;
  }

  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  v10,  v6));
  if (!v17)
  {
    v35 = objc_alloc(&OBJC_CLASS___NSString);
    v36 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    v37 = -[NSString initWithFormat:]( v35,  "initWithFormat:",  @"{%@} | invalid set-eventInfo (instance:MISSING) | set-eventInfo:%@",  v10,  v36);
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6102LL,  v10,  v37);

    goto LABEL_33;
  }

  if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO-SET:FORM_SUB_ATOMIC") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO-SET:CONTINUE_ATOMIC_LOCK") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO-SET:END_ATOMIC_LOCK") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO-SET:END_ATOMIC_LOCKS_FOR_CLIENT") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO-SET:ASSET_SET_FOR_STAGING") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO-SET:CURRENT_SET_STATUS") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO-SET:ELIMINATE_ATOMIC") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO-SET:MAP_LOCKED_ATOMIC_ENTRY") & 1) == 0)
  {
    id v39 = 0LL;
    int64_t v18 = -[MADAutoAssetControlManager _scheduleAndCreateSetConfiguration:fromLocation:errorString:]( self,  "_scheduleAndCreateSetConfiguration:fromLocation:errorString:",  v6,  v10,  &v39);
    id v19 = (NSString *)v39;
    if (v19)
    {
      uint64_t v20 = v19;
      v21 = self;
      id v22 = v6;
      uint64_t v23 = v18;
      goto LABEL_30;
    }
  }

  -[MADAutoAssetControlManager _routeClientRequest:alreadyScheduledSelector:fromLocation:]( self,  "_routeClientRequest:alreadyScheduledSelector:fromLocation:",  v6,  0LL,  v7);
LABEL_33:
}

- (BOOL)_messageShouldBeScheduled:(id)a3 forAssetSelector:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = v6;
  if (!v6) {
    goto LABEL_58;
  }
  double v8 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
  if (v8)
  {
    uint64_t v9 = objc_claimAutoreleasedReturnValue([v7 assetSpecifier]);
    if (v9)
    {
      id v10 = (void *)v9;
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v7 assetVersion]);

      if (!v11
        && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO:CURRENT_STATUS") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO:CONTINUE_LOCK_USAGE") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO:END_LOCK_USAGE") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO:END_PREVIOUS_LOCKS") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO:END_ALL_PREVIOUS_LOCKS") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO:CANCEL_ACTIVITY_FOR_SELECTOR") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO:ELIMINATE_ALL_FOR_SELECTOR") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO:ELIMINATE_ALL_FOR_ASSET_TYPE") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO:ELIMINATE_PROMOTED_NEVER_LOCKED_FOR_SELECTOR") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-STAGE:DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE") & 1) == 0
        && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-STAGE:DETERMINE_ALL_AVAILABLE_FOR_UPDATE") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-STAGE:DETERMINE_ALL_AVAILABLE") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-STAGE:DOWNLOAD_GROUPS") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-STAGE:DOWNLOAD_ALL") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-STAGE:CANCEL_OPERATION") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-STAGE:PURGE_ALL") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-STAGE:ERASE_ALL") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:CONTROL_STATISTICS") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:KNOWN_ASSET_SUMMARY") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:AVAILABLE_FOR_STAGING_ASSET_SUMMARY") & 1) == 0
        && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:ACTIVE_JOB_SUMMARY") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:SCHEDULED_JOB_SUMMARY") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:LOCKED_ASSET_SUMMARY") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:STAGED_ASSET_SUMMARY") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_UNLOCK") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_FORGET") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_PURGE") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_ABANDON") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO:DETERMINE_IF_AVAILABLE") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC") & 1) == 0
        && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET:NEED_FOR_ATOMIC") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET:LOCK_ATOMIC") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET:MAP_LOCKED_ATOMIC_ENTRY") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET:FORM_SUB_ATOMIC") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET:CONTINUE_ATOMIC_LOCK") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET:END_ATOMIC_LOCK") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET:END_ATOMIC_LOCKS_FOR_CLIENT") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET:ASSET_SET_FOR_STAGING") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET:CURRENT_SET_STATUS") & 1) == 0
        && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET:ELIMINATE_ATOMIC") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET-CONTROL:KNOWN_ASSET_SET_SUMMARY") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET-CONTROL:ACTIVE_SET_JOB_SUMMARY") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET-CONTROL:SCHEDULED_SET_JOB_SUMMARY") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET-CONTROL:LOCKED_ASSET_SET_SUMMARY") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET-CONTROL:STAGED_ASSET_SET_SUMMARY") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET-CONTROL:ASSET_SETS_OVERVIEW") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-SET-CONTROL:SET_INSTANCE_INFO") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:SIM_CACHE_DELETE_DETERMINE_RECLAIMABLE") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:SIM_CACHE_DELETE_RECLAIM_SPACE") & 1) == 0
        && !+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  @"MA-AUTO-CONTROL:SIM_SET_JOB_OPERATION"))
      {
        LOBYTE(v8) = 1;
        goto LABEL_59;
      }
    }

    else
    {
    }

- (id)currentJobBySelector:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](self, "currentJobsBySelector"));
  double v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v4));

  id v9 = [v7 safeObjectForKey:v8 ofClass:objc_opt_class(MADAutoAssetJob)];
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  return v10;
}

- (NSMutableDictionary)currentJobsBySelector
{
  return self->_currentJobsBySelector;
}

- (id)jobSelectorKey:(id)a3
{
  return [a3 persistedEntryID];
}

- (void)handleStagingClientPurgeAllRequest:(id)a3
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([a3 clientRequest]);
  +[MADAutoAssetStager clientPurgeAll:](&OBJC_CLASS___MADAutoAssetStager, "clientPurgeAll:", v3);
}

+ (id)replyMessageNameForRequest:(id)a3
{
  id v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
  unsigned __int8 v5 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:INTEREST_IN_CONTENT");

  if ((v5 & 1) != 0)
  {
    id v6 = @"MA-AUTO(REPLY):INTEREST_IN_CONTENT";
  }

  else
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
    unsigned __int8 v8 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  @"MA-AUTO:CHECK_FOR_NEWER");

    if ((v8 & 1) != 0)
    {
      id v6 = @"MA-AUTO(REPLY):CHECK_FOR_NEWER";
    }

    else
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
      unsigned __int8 v10 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v9,  @"MA-AUTO:DETERMINE_IF_AVAILABLE");

      if ((v10 & 1) != 0)
      {
        id v6 = @"MA-AUTO(REPLY):DETERMINE_IF_AVAILABLE";
      }

      else
      {
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
        unsigned __int8 v12 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v11,  @"MA-AUTO:CURRENT_STATUS");

        if ((v12 & 1) != 0)
        {
          id v6 = @"MA-AUTO(REPLY):CURRENT_STATUS";
        }

        else
        {
          uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
          unsigned __int8 v14 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v13,  @"MA-AUTO:LOCK_CONTENT");

          if ((v14 & 1) != 0)
          {
            id v6 = @"MA-AUTO(REPLY):LOCK_CONTENT";
          }

          else
          {
            uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
            unsigned __int8 v16 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v15,  @"MA-AUTO:MAP_LOCKED_CONTENT_TO_EXCLAVE");

            if ((v16 & 1) != 0)
            {
              id v6 = @"MA-AUTO(REPLY):MAP_LOCKED_CONTENT_TO_EXCLAVE";
            }

            else
            {
              uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
              unsigned __int8 v18 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v17,  @"MA-AUTO:CONTINUE_LOCK_USAGE");

              if ((v18 & 1) != 0)
              {
                id v6 = @"MA-AUTO(REPLY):CONTINUE_LOCK_USAGE";
              }

              else
              {
                id v19 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                unsigned __int8 v20 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v19,  @"MA-AUTO:END_LOCK_USAGE");

                if ((v20 & 1) != 0)
                {
                  id v6 = @"MA-AUTO(REPLY):END_LOCK_USAGE";
                }

                else
                {
                  v21 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                  unsigned __int8 v22 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v21,  @"MA-AUTO:END_PREVIOUS_LOCKS");

                  if ((v22 & 1) != 0)
                  {
                    id v6 = @"MA-AUTO(REPLY):END_PREVIOUS_LOCKS";
                  }

                  else
                  {
                    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                    unsigned __int8 v24 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v23,  @"MA-AUTO:END_ALL_PREVIOUS_LOCKS");

                    if ((v24 & 1) != 0)
                    {
                      id v6 = @"MA-AUTO(REPLY):END_ALL_PREVIOUS_LOCKS";
                    }

                    else
                    {
                      v25 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                      unsigned __int8 v26 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v25,  @"MA-AUTO:CANCEL_ACTIVITY_FOR_SELECTOR");

                      if ((v26 & 1) != 0)
                      {
                        id v6 = @"MA-AUTO(REPLY):CANCEL_ACTIVITY_FOR_SELECTOR";
                      }

                      else
                      {
                        v27 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                        unsigned __int8 v28 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v27,  @"MA-AUTO:ELIMINATE_ALL_FOR_SELECTOR");

                        if ((v28 & 1) != 0)
                        {
                          id v6 = @"MA-AUTO(REPLY):ELIMINATE_ALL_FOR_SELECTOR";
                        }

                        else
                        {
                          v29 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                          unsigned __int8 v30 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v29,  @"MA-AUTO:ELIMINATE_ALL_FOR_ASSET_TYPE");

                          if ((v30 & 1) != 0)
                          {
                            id v6 = @"MA-AUTO(REPLY):ELIMINATE_ALL_FOR_ASSET_TYPE";
                          }

                          else
                          {
                            v31 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                            unsigned __int8 v32 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v31,  @"MA-AUTO:ELIMINATE_PROMOTED_NEVER_LOCKED_FOR_SELECTOR");

                            if ((v32 & 1) != 0)
                            {
                              id v6 = @"MA-AUTO(REPLY):ELIMINATE_PROMOTED_NEVER_LOCKED_FOR_SELECTOR";
                            }

                            else
                            {
                              v33 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                              unsigned __int8 v34 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v33,  @"MA-AUTO-STAGE:DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE");

                              if ((v34 & 1) != 0)
                              {
                                id v6 = @"MA-AUTO-STAGE(REPLY):DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE";
                              }

                              else
                              {
                                v35 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                unsigned __int8 v36 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v35,  @"MA-AUTO-STAGE:DETERMINE_ALL_AVAILABLE_FOR_UPDATE");

                                if ((v36 & 1) != 0)
                                {
                                  id v6 = @"MA-AUTO-STAGE(REPLY):DETERMINE_ALL_AVAILABLE_FOR_UPDATE";
                                }

                                else
                                {
                                  v37 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                  unsigned __int8 v38 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v37,  @"MA-AUTO-STAGE:DETERMINE_ALL_AVAILABLE");

                                  if ((v38 & 1) != 0)
                                  {
                                    id v6 = @"MA-AUTO-STAGE(REPLY):DETERMINE_ALL_AVAILABLE";
                                  }

                                  else
                                  {
                                    id v39 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                    unsigned __int8 v40 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v39,  @"MA-AUTO-STAGE:DOWNLOAD_GROUPS");

                                    if ((v40 & 1) != 0)
                                    {
                                      id v6 = @"MA-AUTO-STAGE(REPLY):DOWNLOAD_GROUPS";
                                    }

                                    else
                                    {
                                      v41 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                      unsigned __int8 v42 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v41,  @"MA-AUTO-STAGE:DOWNLOAD_ALL");

                                      if ((v42 & 1) != 0)
                                      {
                                        id v6 = @"MA-AUTO-STAGE(REPLY):DOWNLOAD_ALL";
                                      }

                                      else
                                      {
                                        v43 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                        unsigned __int8 v44 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v43,  @"MA-AUTO-STAGE:CANCEL_OPERATION");

                                        if ((v44 & 1) != 0)
                                        {
                                          id v6 = @"MA-AUTO-STAGE(REPLY):CANCEL_OPERATION";
                                        }

                                        else
                                        {
                                          v45 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                          unsigned __int8 v46 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v45,  @"MA-AUTO-STAGE:PURGE_ALL");

                                          if ((v46 & 1) != 0)
                                          {
                                            id v6 = @"MA-AUTO-STAGE(REPLY):PURGE_ALL";
                                          }

                                          else
                                          {
                                            v47 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                            unsigned __int8 v48 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v47,  @"MA-AUTO-STAGE:ERASE_ALL");

                                            if ((v48 & 1) != 0)
                                            {
                                              id v6 = @"MA-AUTO-STAGE(REPLY):ERASE_ALL";
                                            }

                                            else
                                            {
                                              v49 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                              unsigned __int8 v50 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v49,  @"MA-AUTO-CONTROL:CONTROL_STATISTICS");

                                              if ((v50 & 1) != 0)
                                              {
                                                id v6 = @"MA-AUTO-CONTROL(REPLY):CONTROL_STATISTICS";
                                              }

                                              else
                                              {
                                                v51 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                unsigned __int8 v52 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v51,  @"MA-AUTO-CONTROL:KNOWN_ASSET_SUMMARY");

                                                if ((v52 & 1) != 0)
                                                {
                                                  id v6 = @"MA-AUTO-CONTROL(REPLY):KNOWN_ASSET_SUMMARY";
                                                }

                                                else
                                                {
                                                  v53 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                  unsigned __int8 v54 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v53,  @"MA-AUTO-CONTROL:AVAILABLE_FOR_STAGING_ASSET_SUMMARY");

                                                  if ((v54 & 1) != 0)
                                                  {
                                                    id v6 = @"MA-AUTO-CONTROL(REPLY):AVAILABLE_FOR_STAGING_ASSET_SUMMARY";
                                                  }

                                                  else
                                                  {
                                                    v55 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                    unsigned __int8 v56 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v55,  @"MA-AUTO-CONTROL:ACTIVE_JOB_SUMMARY");

                                                    if ((v56 & 1) != 0)
                                                    {
                                                      id v6 = @"MA-AUTO-CONTROL(REPLY):ACTIVE_JOB_SUMMARY";
                                                    }

                                                    else
                                                    {
                                                      v57 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                      unsigned __int8 v58 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v57,  @"MA-AUTO-CONTROL:SCHEDULED_JOB_SUMMARY");

                                                      if ((v58 & 1) != 0)
                                                      {
                                                        id v6 = @"MA-AUTO-CONTROL(REPLY):SCHEDULED_JOB_SUMMARY";
                                                      }

                                                      else
                                                      {
                                                        v59 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                        unsigned __int8 v60 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v59,  @"MA-AUTO-CONTROL:LOCKED_ASSET_SUMMARY");

                                                        if ((v60 & 1) != 0)
                                                        {
                                                          id v6 = @"MA-AUTO-CONTROL(REPLY):LOCKED_ASSET_SUMMARY";
                                                        }

                                                        else
                                                        {
                                                          v61 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                          unsigned __int8 v62 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v61,  @"MA-AUTO-CONTROL:STAGED_ASSET_SUMMARY");

                                                          if ((v62 & 1) != 0)
                                                          {
                                                            id v6 = @"MA-AUTO-CONTROL(REPLY):STAGED_ASSET_SUMMARY";
                                                          }

                                                          else
                                                          {
                                                            v63 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                            unsigned __int8 v64 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v63,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_UNLOCK");

                                                            if ((v64 & 1) != 0)
                                                            {
                                                              id v6 = @"MA-AUTO-CONTROL(REPLY):FORCE_GLOBAL_UNLOCK";
                                                            }

                                                            else
                                                            {
                                                              v65 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                              unsigned __int8 v66 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v65,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_FORGET");

                                                              if ((v66 & 1) != 0)
                                                              {
                                                                id v6 = @"MA-AUTO-CONTROL(REPLY):FORCE_GLOBAL_FORGET";
                                                              }

                                                              else
                                                              {
                                                                v67 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                unsigned __int8 v68 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v67,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_PURGE");

                                                                if ((v68 & 1) != 0)
                                                                {
                                                                  id v6 = @"MA-AUTO-CONTROL(REPLY):FORCE_GLOBAL_PURGE";
                                                                }

                                                                else
                                                                {
                                                                  v69 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                  unsigned __int8 v70 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v69,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_ABANDON");

                                                                  if ((v70 & 1) != 0)
                                                                  {
                                                                    id v6 = @"MA-AUTO-CONTROL(REPLY):FORCE_GLOBAL_ABANDON";
                                                                  }

                                                                  else
                                                                  {
                                                                    v71 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                    unsigned __int8 v72 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v71,  @"MA-AUTO-CONTROL:SIM_CACHE_DELETE_DETERMINE_RECLAIMABLE");

                                                                    if ((v72 & 1) != 0)
                                                                    {
                                                                      id v6 = @"MA-AUTO-CONTROL(REPLY):SIM_CACHE_DELETE_DETERMINE_RECLAIMABLE";
                                                                    }

                                                                    else
                                                                    {
                                                                      v73 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                      unsigned __int8 v74 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v73,  @"MA-AUTO-CONTROL:SIM_CACHE_DELETE_RECLAIM_SPACE");

                                                                      if ((v74 & 1) != 0)
                                                                      {
                                                                        id v6 = @"MA-AUTO-CONTROL(REPLY):SIM_CACHE_DELETE_RECLAIM_SPACE";
                                                                      }

                                                                      else
                                                                      {
                                                                        v75 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                        unsigned __int8 v76 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v75,  @"MA-AUTO-CONTROL:SIM_SET_JOB_OPERATION");

                                                                        if ((v76 & 1) != 0)
                                                                        {
                                                                          id v6 = @"MA-AUTO-CONTROL(REPLY):SIM_SET_JOB_OPERATION";
                                                                        }

                                                                        else
                                                                        {
                                                                          v77 = (void *)objc_claimAutoreleasedReturnValue( [v3 messageName]);
                                                                          unsigned __int8 v78 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v77,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC");

                                                                          if ((v78 & 1) != 0)
                                                                          {
                                                                            id v6 = @"MA-AUTO-SET(REPLY):ALTER_ENTRIES_REPRESENTING_ATOMIC";
                                                                          }

                                                                          else
                                                                          {
                                                                            v79 = (void *)objc_claimAutoreleasedReturnValue( [v3 messageName]);
                                                                            unsigned __int8 v80 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v79,  @"MA-AUTO-SET:NEED_FOR_ATOMIC");

                                                                            if ((v80 & 1) != 0)
                                                                            {
                                                                              id v6 = @"MA-AUTO-SET(REPLY):NEED_FOR_ATOMIC";
                                                                            }

                                                                            else
                                                                            {
                                                                              v81 = (void *)objc_claimAutoreleasedReturnValue( [v3 messageName]);
                                                                              unsigned __int8 v82 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v81, @"MA-AUTO-SET:CHECK_ATOMIC");

                                                                              if ((v82 & 1) != 0)
                                                                              {
                                                                                id v6 = @"MA-AUTO-SET(REPLY):CHECK_ATOMIC";
                                                                              }

                                                                              else
                                                                              {
                                                                                v83 = (void *)objc_claimAutoreleasedReturnValue( [v3 messageName]);
                                                                                unsigned __int8 v84 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v83, @"MA-AUTO-SET:LOCK_ATOMIC");

                                                                                if ((v84 & 1) != 0)
                                                                                {
                                                                                  id v6 = @"MA-AUTO-SET(REPLY):LOCK_ATOMIC";
                                                                                }

                                                                                else
                                                                                {
                                                                                  v85 = (void *)objc_claimAutoreleasedReturnValue( [v3 messageName]);
                                                                                  unsigned __int8 v86 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v85, @"MA-AUTO-SET:MAP_LOCKED_ATOMIC_ENTRY");

                                                                                  if ((v86 & 1) != 0)
                                                                                  {
                                                                                    id v6 = @"MA-AUTO-SET(REPLY):MAP_LOCKED_ATOMIC_ENTRY";
                                                                                  }

                                                                                  else
                                                                                  {
                                                                                    v87 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                    unsigned __int8 v88 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v87, @"MA-AUTO-SET:FORM_SUB_ATOMIC");

                                                                                    if ((v88 & 1) != 0)
                                                                                    {
                                                                                      id v6 = @"MA-AUTO-SET(REPLY):FORM_SUB_ATOMIC";
                                                                                    }

                                                                                    else
                                                                                    {
                                                                                      v89 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                      unsigned __int8 v90 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v89, @"MA-AUTO-SET:CONTINUE_ATOMIC_LOCK");

                                                                                      if ((v90 & 1) != 0)
                                                                                      {
                                                                                        id v6 = @"MA-AUTO-SET(REPLY):CONTINUE_ATOMIC_LOCK";
                                                                                      }

                                                                                      else
                                                                                      {
                                                                                        v91 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                        unsigned __int8 v92 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v91, @"MA-AUTO-SET:END_ATOMIC_LOCK");

                                                                                        if ((v92 & 1) != 0)
                                                                                        {
                                                                                          id v6 = @"MA-AUTO-SET(REPLY):END_ATOMIC_LOCK";
                                                                                        }

                                                                                        else
                                                                                        {
                                                                                          v93 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                          unsigned __int8 v94 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v93, @"MA-AUTO-SET:END_ATOMIC_LOCKS_FOR_CLIENT");

                                                                                          if ((v94 & 1) != 0)
                                                                                          {
                                                                                            id v6 = @"MA-AUTO-SET(REPLY):END_ATOMIC_LOCKS_FOR_CLIENT";
                                                                                          }

                                                                                          else
                                                                                          {
                                                                                            v95 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                            unsigned __int8 v96 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v95, @"MA-AUTO-SET:ASSET_SET_FOR_STAGING");

                                                                                            if ((v96 & 1) != 0)
                                                                                            {
                                                                                              id v6 = @"MA-AUTO-SET(REPLY):ASSET_SET_FOR_STAGING";
                                                                                            }

                                                                                            else
                                                                                            {
                                                                                              v97 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                              unsigned __int8 v98 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v97, @"MA-AUTO-SET:CURRENT_SET_STATUS");

                                                                                              if ((v98 & 1) != 0)
                                                                                              {
                                                                                                id v6 = @"MA-AUTO-SET(REPLY):CURRENT_SET_STATUS";
                                                                                              }

                                                                                              else
                                                                                              {
                                                                                                v99 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                                unsigned __int8 v100 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v99, @"MA-AUTO-SET:ELIMINATE_ATOMIC");

                                                                                                if ((v100 & 1) != 0)
                                                                                                {
                                                                                                  id v6 = @"MA-AUTO-SET(REPLY):ELIMINATE_ATOMIC";
                                                                                                }

                                                                                                else
                                                                                                {
                                                                                                  v101 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                                  unsigned __int8 v102 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v101, @"MA-AUTO-SET-CONTROL:KNOWN_ASSET_SET_SUMMARY");

                                                                                                  if ((v102 & 1) != 0)
                                                                                                  {
                                                                                                    id v6 = @"MA-AUTO-SET-CONTROL(REPLY):KNOWN_ASSET_SET_SUMMARY";
                                                                                                  }

                                                                                                  else
                                                                                                  {
                                                                                                    v103 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                                    unsigned __int8 v104 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v103, @"MA-AUTO-SET-CONTROL:ACTIVE_SET_JOB_SUMMARY");

                                                                                                    if ((v104 & 1) != 0)
                                                                                                    {
                                                                                                      id v6 = @"MA-AUTO-SET-CONTROL(REPLY):ACTIVE_SET_JOB_SUMMARY";
                                                                                                    }

                                                                                                    else
                                                                                                    {
                                                                                                      v105 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                                      unsigned __int8 v106 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v105, @"MA-AUTO-SET-CONTROL:SCHEDULED_SET_JOB_SUMMARY");

                                                                                                      if ((v106 & 1) != 0)
                                                                                                      {
                                                                                                        id v6 = @"MA-AUTO-SET-CONTROL(REPLY):SCHEDULED_SET_JOB_SUMMARY";
                                                                                                      }

                                                                                                      else
                                                                                                      {
                                                                                                        v107 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                                        unsigned __int8 v108 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v107, @"MA-AUTO-SET-CONTROL:LOCKED_ASSET_SET_SUMMARY");

                                                                                                        if ((v108 & 1) != 0)
                                                                                                        {
                                                                                                          id v6 = @"MA-AUTO-SET-CONTROL(REPLY):LOCKED_ASSET_SET_SUMMARY";
                                                                                                        }

                                                                                                        else
                                                                                                        {
                                                                                                          v109 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                                          unsigned __int8 v110 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v109, @"MA-AUTO-SET-CONTROL:STAGED_ASSET_SET_SUMMARY");

                                                                                                          if ((v110 & 1) != 0)
                                                                                                          {
                                                                                                            id v6 = @"MA-AUTO-SET-CONTROL(REPLY):STAGED_ASSET_SET_SUMMARY";
                                                                                                          }

                                                                                                          else
                                                                                                          {
                                                                                                            v111 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                                            unsigned __int8 v112 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v111, @"MA-AUTO-SET-CONTROL:ASSET_SETS_OVERVIEW");

                                                                                                            if ((v112 & 1) != 0)
                                                                                                            {
                                                                                                              id v6 = @"MA-AUTO-SET-CONTROL(REPLY):ASSET_SETS_OVERVIEW";
                                                                                                            }

                                                                                                            else
                                                                                                            {
                                                                                                              v113 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);
                                                                                                              unsigned int v114 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v113, @"MA-AUTO-SET-CONTROL:SET_INSTANCE_INFO");

                                                                                                              if (v114) {
                                                                                                                id v6 = @"MA-AUTO-SET-CONTROL(REPLY):SET_INSTANCE_INFO";
                                                                                                              }
                                                                                                              else {
                                                                                                                id v6 = @"UNKNOWN_REQUEST_NAME";
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  return (id)v6;
}

- (void)connectionClosedForClientID:(id)a3
{
  id v4 = a3;
  id v6 = -[MADAutoAssetControlManagerParam initWithClientID:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initWithClientID:",  v4);

  unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  [v5 postEvent:@"ClientClosed" withInfo:v6];
}

- (int64_t)action_RouteClientClosed:(id)a3 error:(id *)a4
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  unsigned __int8 v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  return 0LL;
}

- (SUCoreLog)logger
{
  return self->_logger;
}

- (id)_updateLatestSummary
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _summary](self, "_summary"));
  -[MADAutoAssetControlManager setLatestSafeSummary:](self, "setLatestSafeSummary:", v5);

  return -[MADAutoAssetControlManager latestSafeSummary](self, "latestSafeSummary");
}

- (id)_summary
{
  uint64_t v3 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
  if (!v3) {
    goto LABEL_24;
  }
  unsigned __int8 v5 = (void *)v3;
  uint64_t v6 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager serverConnectionPolicy](self, "serverConnectionPolicy"));
  if (!v6)
  {
LABEL_23:

    goto LABEL_24;
  }

  id v7 = (void *)v6;
  uint64_t v8 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager connectionServer](self, "connectionServer"));
  if (!v8)
  {
LABEL_22:

    goto LABEL_23;
  }

  id v9 = (void *)v8;
  uint64_t v10 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stateTable](self, "stateTable"));
  if (!v10)
  {
LABEL_21:

    goto LABEL_22;
  }

  id v11 = (void *)v10;
  uint64_t v12 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  if (!v12)
  {
LABEL_20:

    goto LABEL_21;
  }

  uint64_t v13 = (void *)v12;
  uint64_t v14 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
  if (!v14)
  {
LABEL_19:

    goto LABEL_20;
  }

  uint64_t v15 = (void *)v14;
  uint64_t v16 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  if (!v16)
  {
LABEL_18:

    goto LABEL_19;
  }

  uint64_t v17 = (void *)v16;
  uint64_t v18 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetConfigurations](self, "persistedKnownSetConfigurations"));
  if (!v18)
  {
LABEL_17:

    goto LABEL_18;
  }

  id v19 = (void *)v18;
  uint64_t v20 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetAtomicInstances](self, "persistedKnownSetAtomicInstances"));
  if (!v20)
  {
LABEL_16:

    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    goto LABEL_17;
  }

  v21 = (void *)v20;
  uint64_t v22 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobSetDescriptors](self, "persistedActiveJobSetDescriptors"));
  if (!v22)
  {

    goto LABEL_16;
  }

  unsigned __int8 v98 = (void *)v22;
  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
  if (v23)
  {
    unsigned __int8 v92 = v23;
    unsigned __int8 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
    if (v24)
    {
      v89 = v24;
      v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
      if (v25)
      {
        unsigned __int8 v86 = v25;
        unsigned __int8 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager setLockUsageMap](self, "setLockUsageMap"));
        BOOL v95 = v26 == 0LL;

        v25 = v86;
      }

      else
      {
        BOOL v95 = 1;
      }

      unsigned __int8 v24 = v89;
    }

    else
    {
      BOOL v95 = 1;
    }

    uint64_t v23 = v92;
  }

  else
  {
    BOOL v95 = 1;
  }

  p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
  if (!v95)
  {
    unsigned __int8 v100 = @"ACTIVE";
    goto LABEL_66;
  }

- (SUCoreConnectServerPolicy)serverConnectionPolicy
{
  return self->_serverConnectionPolicy;
}

- (SUCoreConnectServer)connectionServer
{
  return self->_connectionServer;
}

- (NSDictionary)stateTable
{
  return self->_stateTable;
}

- (MADAutoAssetPersisted)persistedActiveJobs
{
  return self->_persistedActiveJobs;
}

- (MADAutoAssetPersisted)persistedKnownDescriptors
{
  return self->_persistedKnownDescriptors;
}

- (MADAutoAssetPersisted)persistedKnownSetConfigurations
{
  return self->_persistedKnownSetConfigurations;
}

- (MADAutoAssetPersisted)persistedKnownSetAtomicInstances
{
  return self->_persistedKnownSetAtomicInstances;
}

- (MADAutoAssetPersisted)persistedActiveJobSetDescriptors
{
  return self->_persistedActiveJobSetDescriptors;
}

- (MADAutoAssetPersisted)persistedDownloadedSetDescriptors
{
  return self->_persistedDownloadedSetDescriptors;
}

- (NSMutableDictionary)setLockUsageMap
{
  return self->_setLockUsageMap;
}

- (NSMutableDictionary)currentStatusBySelector
{
  return self->_currentStatusBySelector;
}

- (NSMutableDictionary)currentSetStatusByInstance
{
  return self->_currentSetStatusByInstance;
}

- (NSMutableDictionary)currentSetJobsByIdentifier
{
  return self->_currentSetJobsByIdentifier;
}

- (NSMutableDictionary)currentJobsByUUID
{
  return self->_currentJobsByUUID;
}

- (NSMutableDictionary)lookupGrantsByAssetType
{
  return self->_lookupGrantsByAssetType;
}

- (NSMutableDictionary)knownSetConfigurationsByIdentifier
{
  return self->_knownSetConfigurationsByIdentifier;
}

- (NSMutableDictionary)knownSetAtomicInstancesByInstance
{
  return self->_knownSetAtomicInstancesByInstance;
}

- (int64_t)locateDownloadedCurrentDownloadedCount
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 persistedEntryIDs:@"locateDownloadedCurrentDownloadedCount"]);

  id v7 = [v6 count];
  return (int64_t)v7;
}

- (NSMutableDictionary)downloadedSetDescriptorsByInstance
{
  return self->_downloadedSetDescriptorsByInstance;
}

- (NSMutableDictionary)timedOperations
{
  return self->_timedOperations;
}

- (NSMutableArray)clientRequestsAwaitingSync
{
  return self->_clientRequestsAwaitingSync;
}

- (NSMutableArray)clientRequestsAwaitingFirstUnlock
{
  return self->_clientRequestsAwaitingFirstUnlock;
}

- (NSMutableArray)downloadManagerEventsAwaitingResumed
{
  return self->_downloadManagerEventsAwaitingResumed;
}

- (void)setLatestSafeSummary:(id)a3
{
}

- (NSString)latestSafeSummary
{
  return self->_latestSafeSummary;
}

- (id)clientRequestMessageSetInstance:(id)a3 withEventInfo:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v7 clientRequestMessage]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 message]);

  id v12 = +[MASAutoAssetSetInfoInstance newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoInstance,  "newShimmedFromFrameworkMessage:forKey:",  v11,  @"setInstance");
  uint64_t v13 = v12;
  if (v12)
  {
    uint64_t v14 = objc_claimAutoreleasedReturnValue([v12 autoAssetSetClientName]);
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      uint64_t v16 = objc_claimAutoreleasedReturnValue([v13 clientProcessName]);
      if (!v16)
      {
        v33 = self;
        unsigned __int8 v34 = v11;
        id v19 = v6;

        goto LABEL_8;
      }

      uint64_t v17 = (void *)v16;
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSetIdentifier]);

      if (v18) {
        goto LABEL_20;
      }
    }

    v33 = self;
    unsigned __int8 v34 = v11;
    id v19 = v6;
LABEL_8:
    uint64_t v20 = &stru_355768;
    goto LABEL_9;
  }

  v33 = self;
  unsigned __int8 v34 = v11;
  id v19 = v6;
  uint64_t v20 = @"instance";
LABEL_9:
  v21 = objc_alloc(&OBJC_CLASS___NSMutableString);
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetSetClientName]);
  if (v22) {
    uint64_t v23 = &stru_355768;
  }
  else {
    uint64_t v23 = @"autoAssetSetClientName";
  }
  unsigned __int8 v24 = (void *)objc_claimAutoreleasedReturnValue([v13 clientProcessName]);
  if (v24) {
    v25 = &stru_355768;
  }
  else {
    v25 = @"clientProcessName";
  }
  unsigned __int8 v26 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSetIdentifier]);
  v27 = @"assetSetIdentifier";
  if (v26) {
    v27 = &stru_355768;
  }
  unsigned __int8 v28 = -[NSMutableString initWithFormat:](v21, "initWithFormat:", @"(%@,%@,%@,%@)", v20, v23, v25, v27);

  v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v33, "logger"));
  unsigned __int8 v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

  id v6 = v19;
  if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
  {
    unsigned __int8 v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v33, "_updateLatestSummary"));
    *(_DWORD *)buf = 138543874;
    id v36 = v19;
    __int16 v37 = 2114;
    unsigned __int8 v38 = v32;
    __int16 v39 = 2114;
    unsigned __int8 v40 = v28;
    _os_log_error_impl( &dword_0,  v30,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@:clientRequestMessageSetInstance} invalid MANAutoAssetSetInfoInstance | missing:%{public}@",  buf,  0x20u);
  }

  uint64_t v13 = 0LL;
  id v11 = v34;
LABEL_20:

  return v13;
}

- (id)locateSetConfigurationByClientDomain:(id)a3 forAssetSetIdentifier:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v7,  v6);
  id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
  id v12 = [v11 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoSetConfiguration)];
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

  return v13;
}

- (id)newSetEntryIDForClientDomain:(id)a3 forAssetSetIdentifier:(id)a4
{
  id v5 = a4;
  id v6 = a3;
  id v7 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"%@_%@", v6, v5);

  return v7;
}

- (BOOL)_setMessageInvolvesSchedulerPolicy:(id)a3
{
  id v3 = a3;
  BOOL v4 = (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:NEED_FOR_ATOMIC");

  return v4;
}

- (BOOL)_setMessageShouldBeScheduled:(id)a3 forSetConfiguration:(id)a4 forLatestEventInfo:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v8,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v8,  @"MA-AUTO-SET:NEED_FOR_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v8,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v8,  @"MA-AUTO-SET:LOCK_ATOMIC"))
  {
    if (-[MADAutoAssetControlManager _setMessageInvolvesSchedulerPolicy:]( self,  "_setMessageInvolvesSchedulerPolicy:",  v8))
    {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  @"_setMessageShouldBeScheduled",  v10));
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetDesire:]( self,  "clientRequestMessageSetDesire:",  v14));

      if ([v9 inhibitImpliedScheduling]
        && (uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 clientAssetSetPolicy]),
            unsigned __int8 v17 = [v16 blockCheckDownload],
            v16,
            (v17 & 1) != 0))
      {
        BOOL v18 = 1;
      }

      else if ([v9 inhibitImpliedScheduling])
      {
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetEntries]);
        if (v19)
        {
          uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetEntries]);
          BOOL v18 = [v20 count] == 0;
        }

        else
        {
          BOOL v18 = 0;
        }
      }

      else
      {
        BOOL v18 = 0;
      }
    }

    else
    {
      BOOL v18 = 0;
    }

    BOOL v21 = !v18;
  }

  else
  {
    BOOL v21 = 0;
  }

  return v21;
}

- (void)_scheduleSetConfiguration:(id)a3 withClientSetPolicy:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  if (!+[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock"))
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 autoAssetEntries]);
    id v11 = [v10 count];

    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 oslog]);

    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
    if (v11)
    {
      if (v14)
      {
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        id v16 = (id)objc_claimAutoreleasedReturnValue([v6 summary]);
        if (v7) {
          unsigned __int8 v17 = (__CFString *)objc_claimAutoreleasedReturnValue([v7 summary]);
        }
        else {
          unsigned __int8 v17 = @"N";
        }
        int v22 = 138543874;
        uint64_t v23 = v15;
        __int16 v24 = 2114;
        id v25 = v16;
        __int16 v26 = 2114;
        v27 = v17;
        _os_log_impl( &dword_0,  v13,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_scheduleSetConfiguration} scheduling set-configuration | setConfiguration:%{public}@ | setUpdat ePolicy:%{public}@",  (uint8_t *)&v22,  0x20u);
        if (v7) {
      }
        }

      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v6 clientDomainName]);
      BOOL v21 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
      +[MADAutoAssetScheduler scheduleSetDomainName:forAssetSetIdentifier:usingSetUpdatePolicy:forSetConfiguration:]( &OBJC_CLASS___MADAutoAssetScheduler,  "scheduleSetDomainName:forAssetSetIdentifier:usingSetUpdatePolicy:forSetConfiguration:",  v20,  v21,  v7,  v6);
    }

    else
    {
      if (v14)
      {
        BOOL v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
        int v22 = 138543618;
        uint64_t v23 = v18;
        __int16 v24 = 2114;
        id v25 = v19;
        _os_log_impl( &dword_0,  v13,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_scheduleSetConfiguration} removing any scheduling of set-identifier (no auto-asset-entries) | s etConfiguration:%{public}@",  (uint8_t *)&v22,  0x16u);
      }

      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v6 clientDomainName]);
      BOOL v21 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
      +[MADAutoAssetScheduler controlEliminateSetDomainName:forAssetSetIdentifier:indicatingWhenEliminated:]( &OBJC_CLASS___MADAutoAssetScheduler,  "controlEliminateSetDomainName:forAssetSetIdentifier:indicatingWhenEliminated:",  v20,  v21,  0LL);
    }
  }
}

+ (BOOL)isDeviceConsideredBeforeFirstUnlock
{
  return 0;
}

+ (int64_t)preferenceActivityIntervalSecs
{
  v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceActivityIntervalSecs];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (id)autoControlManager
{
  if (autoControlManager_dispatchOnceAutoControlManager != -1) {
    dispatch_once(&autoControlManager_dispatchOnceAutoControlManager, &__block_literal_global_18);
  }
  return (id)autoControlManager___autoControlManager;
}

- (int64_t)preferenceActivityIntervalSecs
{
  return self->_preferenceActivityIntervalSecs;
}

- (BOOL)_doesClientRequestInvolveSetConfiguration:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a3 clientRequestMessage]);
  int64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 messageName]);

  BOOL v5 = (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:NEED_FOR_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:LOCK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:FORM_SUB_ATOMIC") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:MAP_LOCKED_ATOMIC_ENTRY");
  return v5;
}

- (id)setConfigurationFromMessageName:(id)a3 withInfoInstance:(id)a4 errorCode:(int64_t *)a5 errorDescription:(id *)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v13);

  BOOL v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationNewEntryIDForInfoInstance:]( self,  "setConfigurationNewEntryIDForInfoInstance:",  v11));
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
  id v16 = [v15 safeObjectForKey:v14 ofClass:objc_opt_class(MADAutoSetConfiguration)];
  id v17 = (id)objc_claimAutoreleasedReturnValue(v16);

  unsigned int v18 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v10,  @"MA-AUTO-SET:MAP_LOCKED_ATOMIC_ENTRY");
  if (v17)
  {
    if ((v18 & 1) != 0) {
      goto LABEL_20;
    }
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v11 autoAssetEntries]);

    if (!v19) {
      goto LABEL_20;
    }
    if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v10,  @"MA-AUTO-SET:FORM_SUB_ATOMIC"))
    {
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      BOOL v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        int v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);
        __int16 v24 = (void *)objc_claimAutoreleasedReturnValue([v17 summary]);
        *(_DWORD *)buf = 138544130;
        v59 = v22;
        __int16 v60 = 2114;
        id v61 = v10;
        __int16 v62 = 2114;
        v63 = v23;
        __int16 v64 = 2114;
        id v65 = v24;
        id v25 = "[%{public}@] {setConfigurationFromMessageName} pre-existing set-configuration potentially valid for formin"
              "g sub-atomic-instance | messageName:%{public}@, setInfoInstance:%{public}@, setConfiguration:%{public}@";
LABEL_18:
        _os_log_impl(&dword_0, v21, OS_LOG_TYPE_DEFAULT, v25, buf, 0x2Au);

        goto LABEL_19;
      }

      goto LABEL_19;
    }

    if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v10,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC"))
    {
      v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      BOOL v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        int v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);
        __int16 v24 = (void *)objc_claimAutoreleasedReturnValue([v17 summary]);
        *(_DWORD *)buf = 138544130;
        v59 = v22;
        __int16 v60 = 2114;
        id v61 = v10;
        __int16 v62 = 2114;
        v63 = v23;
        __int16 v64 = 2114;
        id v65 = v24;
        id v25 = "[%{public}@] {setConfigurationFromMessageName} pre-existing set-configuration potentially being altered | "
              "messageName:%{public}@, setInfoInstance:%{public}@, setConfiguration:%{public}@";
        goto LABEL_18;
      }

- (id)setConfigurationNewEntryIDForInfoInstance:(id)a3
{
  id v4 = a3;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);

  id v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationNewEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "setConfigurationNewEntryIDForClientDomain:forAssetSetIdentifier:",  v5,  v6));
  return v7;
}

- (BOOL)setPolicyValidate:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 messageName]);

  id v12 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequest]);
  unsigned int v13 = -[MADAutoAssetControlManager _isClientRequestForSetJob:](self, "_isClientRequestForSetJob:", v12);

  if (v13)
  {
    BOOL v14 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetPolicy:]( self,  "clientRequestMessageSetPolicy:",  v14));

    if (!v15)
    {
      BOOL v21 = 0;
LABEL_24:

      goto LABEL_25;
    }

    id v16 = -[NSMutableString initWithString:](objc_alloc(&OBJC_CLASS___NSMutableString), "initWithString:", &stru_355768);
    if ([v15 userInitiated]
      && ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v11,  @"MA-AUTO-SET:NEED_FOR_ATOMIC") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v11,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC")))
    {
      -[NSMutableString appendString:](v16, "appendString:", @"userInitiated|");
      char v17 = 0;
      uint64_t v18 = 6571LL;
      uint64_t v19 = 6571LL;
      uint64_t v20 = 6571LL;
    }

    else
    {
      uint64_t v20 = 0LL;
      char v17 = 1;
      uint64_t v19 = 6572LL;
      uint64_t v18 = 6573LL;
    }

    if ([v15 lockInhibitsEmergencyRemoval]
      && ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v11,  @"MA-AUTO-SET:NEED_FOR_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v11,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v11,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v11,  @"MA-AUTO-SET:CONTINUE_ATOMIC_LOCK") & 1) != 0))
    {
      int v22 = @"lockInhibitsEmergencyRemoval|";
    }

    else
    {
      if (![v15 blockCheckDownload]
        || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v11,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v11,  @"MA-AUTO-SET:LOCK_ATOMIC") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v11,  @"MA-AUTO-SET:CONTINUE_ATOMIC_LOCK") & 1) == 0)
      {
        if ((v17 & 1) != 0)
        {
          BOOL v21 = 0;
          goto LABEL_23;
        }

+ (id)allocIntervalString:(int64_t)a3
{
  if (a3 < 1) {
    return @"DISABLED";
  }
  unint64_t v4 = a3 / 0x15180uLL;
  uint64_t v5 = (uint64_t)(a3 % 0x15180uLL) / 3600;
  uint64_t v6 = (uint64_t)(a3 % 0x15180uLL) % 3600;
  uint64_t v7 = v6 / 60;
  uint64_t v8 = v6 % 60;
  id v9 = objc_alloc(&OBJC_CLASS___NSString);
  else {
    id v11 = &stru_355768;
  }
  return -[NSString initWithFormat:](v9, "initWithFormat:", @"%ld day%@ %02ld:%02ld:%02ld", v4, v11, v5, v7, v8);
}

- (id)clientRequestMessageSetPolicy:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 messageName]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 message]);
  id v9 = +[MASAutoAssetSetInfoDesire newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoDesire,  "newShimmedFromFrameworkMessage:forKey:",  v8,  @"setDesire");
  id v10 = v9;
  if (v9)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 clientAssetSetPolicy]);
  }

  else
  {
    if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  @"MA-AUTO-SET:NEED_FOR_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  @"MA-AUTO-SET:LOCK_ATOMIC") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  @"MA-AUTO-SET:CONTINUE_ATOMIC_LOCK"))
    {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 oslog]);

      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager clientRequestMessageSetPolicy:].cold.1();
      }
    }

    id v11 = 0LL;
  }

  return v11;
}

- (id)locateSetJobForClientDomain:(id)a3 byIdentifier:(id)a4
{
  uint64_t v6 = (__CFString *)a3;
  uint64_t v7 = (__CFString *)a4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  if (v6 && v7)
  {
    id v10 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v6,  v7);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetJobsByIdentifier](self, "currentSetJobsByIdentifier"));
    id v12 = [v11 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoAssetJob)];
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  }

  else
  {
    id v10 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 diag]);
    BOOL v14 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v15 = @"N";
    if (v6) {
      id v16 = v6;
    }
    else {
      id v16 = @"N";
    }
    if (v7) {
      uint64_t v15 = v7;
    }
    char v17 = -[NSString initWithFormat:]( v14,  "initWithFormat:",  @"{locateSetJobForClientDomain} missing required | clientDomainName:%@ | assetSetIdentifier:%@",  v16,  v15);
    [v11 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v17 withResult:6102 withError:0];

    uint64_t v13 = 0LL;
  }

  return v13;
}

- (BOOL)handleClientPotentialSetJob:(id)a3 forAutoJob:(id)a4 fromLocation:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
  BOOL v14 = (void *)objc_claimAutoreleasedReturnValue([v13 clientRequestMessage]);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 messageName]);

  id v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  v10,  v8));
  if (v16)
  {
    char v17 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetDesire:]( self,  "clientRequestMessageSetDesire:",  v17));

    if (v18)
    {
      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v15,  @"MA-AUTO-SET:CHECK_ATOMIC"))
      {
        unsigned __int8 v19 = -[MADAutoAssetControlManager handleSetClientCheckAtomic:forAutoJob:instance:desire:fromLocation:]( self,  "handleSetClientCheckAtomic:forAutoJob:instance:desire:fromLocation:",  v8,  v9,  v16,  v18,  v10);
LABEL_9:
        BOOL v20 = v19;
LABEL_12:

        goto LABEL_13;
      }

      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v15,  @"MA-AUTO-SET:LOCK_ATOMIC"))
      {
        unsigned __int8 v19 = -[MADAutoAssetControlManager handleSetClientLockAtomic:forAutoJob:instance:desire:fromLocation:]( self,  "handleSetClientLockAtomic:forAutoJob:instance:desire:fromLocation:",  v8,  v9,  v16,  v18,  v10);
        goto LABEL_9;
      }

      BOOL v21 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"unexpected messageName:%@",  v15);
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v8,  6108LL,  @"handleClientPotentialSetJob",  v21);
    }

    else
    {
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v8,  6102LL,  @"handleClientPotentialSetJob",  @"no auto-asset-set-desire provided in client request");
    }

    BOOL v20 = 0;
    goto LABEL_12;
  }

  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v8,  6102LL,  v10,  @"no auto-asset-set-instance provided in client request");
  BOOL v20 = 0;
LABEL_13:

  return v20;
}

- (id)clientRequestMessageSetDesire:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequestMessage]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 message]);

  id v9 = +[MASAutoAssetSetInfoDesire newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoDesire,  "newShimmedFromFrameworkMessage:forKey:",  v8,  @"setDesire");
  if (!v9)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager clientRequestMessageSetDesire:].cold.1();
    }
  }

  return v9;
}

- (BOOL)handleSetClientLockAtomic:(id)a3 forAutoJob:(id)a4 instance:(id)a5 desire:(id)a6 fromLocation:(id)a7
{
  id v11 = a3;
  id v12 = a5;
  id v13 = a6;
  id v14 = a7;
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v15 extendedStateQueue]);
  dispatch_assert_queue_V2(v16);

  v159 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:handleSetClientLockAtomic",  v14);
  char v17 = (void *)objc_claimAutoreleasedReturnValue([v11 clientRequest]);
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", v17));

  unsigned __int8 v19 = (void *)objc_claimAutoreleasedReturnValue([v11 clientRequest]);
  BOOL v20 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
  BOOL v21 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
  int v22 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v20,  v21));

  unsigned int v23 = +[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock");
  v158 = v13;
  if ([v13 lockWaitTimeoutSecs])
  {
    __int16 v24 = v18;
    id v25 = v22;
    __int16 v26 = v19;
    id v27 = [v158 lockWaitTimeoutSecs];
    unsigned __int8 v28 = (void *)objc_claimAutoreleasedReturnValue([v158 clientAssetSetPolicy]);
    unsigned int v29 = [v28 supportingShortTermLocks];

    if (v27 == (id)-3LL)
    {
      if (v29) {
        unsigned __int8 v30 = @"lockAtomic[NO_WAIT][SUPPORTING-SHORT-TERM]";
      }
      else {
        unsigned __int8 v30 = @"lockAtomic[NO_WAIT_NOT_PERSISTED][SUPPORTING-SHORT-TERM]";
      }
      int v31 = 1;
      int v32 = 1;
    }

    else
    {
      int v31 = 0;
      int v32 = 0;
      if (v29) {
        unsigned __int8 v30 = @"lockAtomic[SUPPORTING-SHORT-TERM]";
      }
      else {
        unsigned __int8 v30 = @"lockAtomic";
      }
    }

    unsigned __int8 v19 = v26;
    int v22 = v25;
    uint64_t v18 = v24;
    if (v23) {
      goto LABEL_21;
    }
LABEL_11:
    if (!v22)
    {
      id v47 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@ requested when unable to load set-configuration",  v30);
      int64_t v48 = self;
      id v49 = v11;
      uint64_t v50 = 6111LL;
      goto LABEL_23;
    }

    int v155 = v31;
    unsigned int v156 = v32;
    v35 = (void *)objc_claimAutoreleasedReturnValue([v12 atomicInstance]);

    v157 = v19;
    if (v35)
    {
      id v36 = (void *)objc_claimAutoreleasedReturnValue([v12 atomicInstance]);
      id v37 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v36));

      if (v37)
      {
        v153 = v30;
        unsigned __int8 v38 = (void *)objc_claimAutoreleasedReturnValue([v37 clientDomainName]);
        __int16 v39 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
        if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v38, v39) & 1) != 0)
        {
          unsigned __int8 v40 = (void *)objc_claimAutoreleasedReturnValue([v37 assetSetIdentifier]);
          uint64_t v41 = objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
          id v145 = v12;
          id v42 = v11;
          id v43 = v37;
          unsigned __int8 v44 = v22;
          v45 = (void *)v41;
          unsigned __int8 v46 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v40, v41);

          int v22 = v44;
          id v37 = v43;
          id v11 = v42;
          id v12 = v145;

          if ((v46 & 1) != 0)
          {
            v148 = 0LL;
            unsigned __int8 v30 = v153;
LABEL_79:
            id v162 = 0LL;
            unsigned __int8 v105 = -[MADAutoAssetControlManager verifySetDescriptorIsLockable:fromLocation:notLocakableError:]( self,  "verifySetDescriptorIsLockable:fromLocation:notLocakableError:",  v37,  v159,  &v162);
            id v106 = v162;
            if ((v105 & 1) != 0)
            {
              id v161 = 0LL;
              int64_t v107 = -[MADAutoAssetControlManager _scheduleAndCreateSetConfiguration:fromLocation:errorString:]( self,  "_scheduleAndCreateSetConfiguration:fromLocation:errorString:",  v11,  v159,  &v161);
              id v108 = v161;
              v109 = v108;
              if (v107)
              {
                -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v11,  v107,  v159,  v108);
                BOOL v51 = 0;
LABEL_115:

                goto LABEL_84;
              }

              id v143 = v108;
              v147 = v22;
              v152 = v18;
              unsigned __int8 v112 = (void *)objc_claimAutoreleasedReturnValue([v12 atomicInstance]);
              v113 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
              unsigned int v114 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
              v144 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetStatusPreferringByInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:]( self,  "locateSetStatusPreferringByInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:",  v112,  v113,  v114,  v159));

              if ((v155 & 1) != 0)
              {
                id v142 = 0LL;
                int v22 = v147;
LABEL_97:
                v129 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildSetFoundResponseMessage:forClientRequest:withFoundSetDescriptor:withSubAtomicInstance:forLatestDownloaded:withInstance:withDesire:fromLocation:]( self,  "buildSetFoundResponseMessage:forClientRequest:withFoundSetDescriptor:withSubAtomicIns tance:forLatestDownloaded:withInstance:withDesire:fromLocation:",  v30,  v157,  v37,  0LL,  1LL,  v12,  v158,  v159));
                v130 = (void *)objc_claimAutoreleasedReturnValue([v12 atomicInstance]);

                if (!v130) {
                  -[MADAutoAssetControlManager setConfigurationAdoptLatestToVend:fromSetDescriptor:toSetConfiguration:]( self,  "setConfigurationAdoptLatestToVend:fromSetDescriptor:toSetConfiguration:",  v159,  v37,  v22);
                }
                -[MADAutoAssetControlManager issueResponseToClientRequest:issuingResponseMessage:withResponseError:]( self,  "issueResponseToClientRequest:issuingResponseMessage:withResponseError:",  v157,  v129,  0LL);
                if (v155)
                {
                  v131 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                  v132 = (os_log_s *)objc_claimAutoreleasedReturnValue([v131 oslog]);

                  if (os_log_type_enabled(v132, OS_LOG_TYPE_DEFAULT))
                  {
                    v133 = (NSString *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _updateLatestSummary]( self,  "_updateLatestSummary"));
                    v134 = v132;
                    v135 = (void *)objc_claimAutoreleasedReturnValue([v37 summary]);
                    *(_DWORD *)buf = 138543874;
                    v164 = v133;
                    __int16 v165 = 2114;
                    v166 = v159;
                    __int16 v167 = 2114;
                    v168 = v135;
                    _os_log_impl( &dword_0,  v134,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@} NO_WAIT_NOT_PERSISTED | successful lock | chosenDownloadedSetDescriptor:%{public}@",  buf,  0x20u);

                    v132 = v134;
                  }
                }

                BOOL v51 = 0;
                goto LABEL_104;
              }

              v115 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager autoAssetDescriptorsForSet:]( self,  "autoAssetDescriptorsForSet:",  v37));
              unsigned int v116 = +[MADAutoAssetSecure doesSetDescriptorInvolveSecureOperations:forSetDescriptor:withAutoAssetDescriptors:]( &OBJC_CLASS___MADAutoAssetSecure,  "doesSetDescriptorInvolveSecureOperations:forSetDescriptor:withAutoAssetDescriptors:",  @"handleSetClientLockAtomic",  v37,  v115);

              if (v116
                && ((unsigned __int8 v117 = +[MADAutoAssetSecure isPersonalizationOrGraftingRequired:forSetDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationOrGraftingRequired:forSetDescriptor:",  @"handleSetClientLockAtomic",  v37),  !-[MADAutoAssetControlManager isSetDescriptorCurrentlyLocked:forSetDescriptor:]( self,  "isSetDescriptorCurrentlyLocked:forSetDescriptor:",  v159,  v37))
                 || (v117 & 1) != 0))
              {
                -[MADAutoAssetControlManager securePersonalizeGraftLockSet:lockingSetDescriptor:forEventInfo:fallingBackToSetDescriptor:]( self,  "securePersonalizeGraftLockSet:lockingSetDescriptor:forEventInfo:fallingBackToSetDescriptor:",  v159,  v37,  v11,  0LL);
                v136 = 0LL;
                BOOL v51 = 0;
                int v22 = v147;
              }

              else
              {
                v154 = v30;
                v118 = (void *)objc_claimAutoreleasedReturnValue([v12 autoAssetSetClientName]);
                v119 = (void *)objc_claimAutoreleasedReturnValue([v12 clientProcessName]);
                id v120 = [v12 clientProcessID];
                v121 = (void *)objc_claimAutoreleasedReturnValue([v158 desireReason]);
                v122 = (void *)objc_claimAutoreleasedReturnValue([v144 currentNeedPolicy]);
                id v160 = 0LL;
                LODWORD(v120) = +[MADAutoAssetLocker lockedSetByClient:forClientProcessName:withClientProcessID:lockingSetDescriptor:forLockReason:withSetUsagePolicy:lockError:]( &OBJC_CLASS___MADAutoAssetLocker,  "lockedSetByClient:forClientProcessName:withClientProcessID:lockingSetDescriptor:forLoc kReason:withSetUsagePolicy:lockError:",  v118,  v119,  v120,  v37,  v121,  v122,  &v160);
                id v142 = v160;

                if ((_DWORD)v120)
                {
                  v123 = (void *)objc_claimAutoreleasedReturnValue([v158 desireReason]);
                  -[MADAutoAssetControlManager setLockUsageMapLockedSetDescriptor:forLockReason:]( self,  "setLockUsageMapLockedSetDescriptor:forLockReason:",  v37,  v123);

                  unsigned __int8 v30 = v154;
                  if ([v37 neverBeenLocked])
                  {
                    [v37 setNeverBeenLocked:0];
                    v124 = (void *)objc_claimAutoreleasedReturnValue([v12 atomicInstance]);
                    v125 = (void *)objc_claimAutoreleasedReturnValue([v12 autoAssetSetClientName]);
                    BYTE2(v141) = 0;
                    LOWORD(v141) = 1;
                    -[MADAutoAssetControlManager trackSetDescriptor:fromLocation:forLatestDownloaded:forSpecificAtomicInstance:withCurrentSetStatus:changedWhileTerminated:changedNeverBeenLocked:notifyingIfJustDownloaded:latestToVend:historyOperation:firstClientName:]( self,  "trackSetDescriptor:fromLocation:forLatestDownloaded:forSpecificAtomicInstance:withCurrentSetStatus :changedWhileTerminated:changedNeverBeenLocked:notifyingIfJustDownloaded:latestToVend:historyOpera tion:firstClientName:",  v37,  v159,  1LL,  v124,  0LL,  0LL,  v141,  0LL,  v125);
                  }

                  v126 = (void *)objc_claimAutoreleasedReturnValue([v11 clientRequestMessage]);
                  v127 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetPolicy:]( self,  "clientRequestMessageSetPolicy:",  v126));

                  uint64_t v18 = v152;
                  int v22 = v147;
                  if ([v127 supportingShortTermLocks]) {
                    id v128 =  -[MADAutoAssetControlManager shortTermLockSetDescriptor:forSetDescriptor:]( self,  "shortTermLockSetDescriptor:forSetDescriptor:",  @"handleSetClientLockAtomic",  v37);
                  }

                  goto LABEL_97;
                }

                if (!v156)
                {
                  BOOL v51 = 1;
                  int v22 = v147;
                  uint64_t v18 = v152;
LABEL_104:
                  v136 = v142;
                  v109 = v143;
LABEL_114:

                  goto LABEL_115;
                }

                v137 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"unable to lock auto-asset-set (failed to persist [additional] set-lock) for %@",  v154);
                v136 = v142;
                -[MADAutoAssetControlManager issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  v11,  v142,  v159,  v137);

                BOOL v51 = 0;
                int v22 = v147;
                uint64_t v18 = v152;
              }

              v109 = v143;
              goto LABEL_114;
            }

            unsigned __int8 v110 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@ requested when chosen downloaded descriptor not lockable",  v30);
            -[MADAutoAssetControlManager issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  v11,  v106,  v159,  v110);

            goto LABEL_83;
          }
        }

        else
        {
        }

        __int16 v60 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@ requested when specific atomic-instance not already downloaded",  v153);
        id v61 = self;
        id v62 = v11;
        uint64_t v63 = 6103LL;
        goto LABEL_54;
      }

      v59 = 0LL;
LABEL_50:
      char v77 = v156 ^ 1;
      if (v59) {
        char v77 = 1;
      }
      if ((v77 & 1) != 0)
      {
        if (!v59)
        {
          BOOL v51 = 1;
LABEL_84:
          unsigned __int8 v19 = v157;
          goto LABEL_85;
        }

        v148 = 0LL;
        id v37 = v59;
        goto LABEL_79;
      }

      __int16 v60 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@ requested when unable to locate already downloaded content",  v30);
      id v61 = self;
      id v62 = v11;
      uint64_t v63 = 6503LL;
LABEL_54:
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( v61,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v62,  v63,  v159,  v60);

      goto LABEL_83;
    }

    id v52 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    v53 = (os_log_s *)objc_claimAutoreleasedReturnValue([v52 oslog]);

    if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
    {
      id v54 = (NSString *)objc_claimAutoreleasedReturnValue([v22 summary]);
      *(_DWORD *)buf = 138543618;
      v164 = v159;
      __int16 v165 = 2114;
      v166 = v54;
      _os_log_impl( &dword_0,  v53,  OS_LOG_TYPE_DEFAULT,  "{%{public}@}Determining atomic-instance to use for (NO_WAIT). setConfig:%{public}@",  buf,  0x16u);
    }

    if ((v155 & 1) == 0)
    {
      v55 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
      uint64_t v56 = objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
      id v57 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedLatest:forAssetSetIdentifier:]( self,  "locateSetDescriptorDownloadedLatest:forAssetSetIdentifier:",  v55,  v56));

      unsigned __int8 v58 = (void *)objc_claimAutoreleasedReturnValue([v22 autoAssetEntries]);
      LOBYTE(v56) = -[MADAutoAssetControlManager doesSetDescriptor:coverAllForAutoAssetEntries:]( self,  "doesSetDescriptor:coverAllForAutoAssetEntries:",  v57,  v58);

      if ((v56 & 1) != 0)
      {
        v59 = v57;
LABEL_34:
        __int16 v64 = (void *)objc_claimAutoreleasedReturnValue([v22 latestAtomicInstanceToVend]);

        v151 = v18;
        if (!v64
          || (id v65 = (void *)objc_claimAutoreleasedReturnValue([v22 latestAtomicInstanceToVend]),
              id v37 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v65)),  v65,  !v37))
        {
          v149 = v59;
          unsigned __int8 v66 = v30;
          id v67 = (void *)objc_claimAutoreleasedReturnValue([v12 autoAssetEntries]);
          if (!v67) {
            id v67 = (void *)objc_claimAutoreleasedReturnValue([v22 autoAssetEntries]);
          }
          unsigned __int8 v68 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
          id v69 = v22;
          unsigned __int8 v70 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
          id v71 = (void *)objc_claimAutoreleasedReturnValue([v12 autoAssetEntries]);
          LOBYTE(v140) = 1;
          id v37 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:forSetConfiguration:requestedAutoAssetEntries:performingNoWait:creatingIfPreviouslyStagedFound:fromLocation:]( self,  "locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier :forSetConfiguration:requestedAutoAssetEntries:performingNoWait:creatingIfPreviouslyStagedFound:fromLocation:",  0LL,  v68,  v70,  v69,  v71,  v156,  v140,  v159));

          int v22 = v69;
          v59 = v149;
          unsigned __int8 v30 = v66;
          uint64_t v18 = v151;
          if (!v37)
          {
            id v37 = -[MADAutoAssetControlManager newSetDescriptorIfOtherSatisfying:forSetInfoInstance:]( self,  "newSetDescriptorIfOtherSatisfying:forSetInfoInstance:",  v159,  v12);
            char v72 = v156 ^ 1;
            if (v37) {
              char v72 = 1;
            }
            if ((v72 & 1) == 0) {
              id v37 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager preInstalledSetDescriptorForSetInstance:dueToMessageName:fromLocation:]( self,  "preInstalledSetDescriptorForSetInstance:dueToMessageName:fromLocation:",  v12,  v151,  v159));
            }
          }
        }

        if (v59 && v37)
        {
          v146 = v22;
          v73 = v59;
          unsigned __int8 v74 = (void *)objc_claimAutoreleasedReturnValue([v59 latestDownloadedAtomicInstance]);
          id v75 = (void *)objc_claimAutoreleasedReturnValue([v37 latestDownloadedAtomicInstance]);
          unsigned __int8 v76 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v74, v75);

          if ((v76 & 1) != 0)
          {
            uint64_t v18 = v151;
            int v22 = v146;
            v59 = v73;
            goto LABEL_74;
          }

          unsigned __int8 v78 = (void *)objc_claimAutoreleasedReturnValue([v73 clientDomainName]);
          unsigned int v79 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v78,  @"FROM_STAGED_FOR_ALL");

          int v22 = v146;
          if (v79)
          {
            unsigned __int8 v80 = (void *)objc_claimAutoreleasedReturnValue([v73 requestedAutoAssetEntries]);

            v81 = (void *)objc_claimAutoreleasedReturnValue([v146 autoAssetEntries]);
            uint64_t v18 = v151;
            if (v80) {
              unsigned __int8 v82 = -[MADAutoAssetControlManager doesSetDescriptor:coverRequestedAutoAssetEntries:]( self,  "doesSetDescriptor:coverRequestedAutoAssetEntries:",  v73,  v81);
            }
            else {
              unsigned __int8 v82 = -[MADAutoAssetControlManager doesSetDescriptor:coverAllForAutoAssetEntries:]( self,  "doesSetDescriptor:coverAllForAutoAssetEntries:",  v73,  v81);
            }
            unsigned __int8 v98 = v82;

            if ((v98 & 1) == 0)
            {
LABEL_71:
              v59 = v73;
              id v99 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              unsigned __int8 v96 = (os_log_s *)objc_claimAutoreleasedReturnValue([v99 oslog]);

              if (os_log_type_enabled(v96, OS_LOG_TYPE_DEFAULT))
              {
                unsigned __int8 v100 = (NSString *)objc_claimAutoreleasedReturnValue([v59 summary]);
                *(_DWORD *)buf = 138543618;
                v164 = v159;
                __int16 v165 = 2114;
                v166 = v100;
                _os_log_impl( &dword_0,  v96,  OS_LOG_TYPE_DEFAULT,  "{%{public}@} lock-atomic found newer and latest - newer does not satisfy current set-configuration | n ewerDownloadedSetDescriptor:%{public}@",  buf,  0x16u);
              }

- (id)locateSetStatusByInstance:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](self, "currentSetStatusByInstance"));
  id v8 = [v7 safeObjectForKey:v4 ofClass:objc_opt_class(MANAutoAssetSetStatus)];
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  return v9;
}

- (id)locateSetStatusForDomainName:(id)a3 byIdentifier:(id)a4
{
  id v31 = a3;
  id v30 = a4;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  unsigned int v34 = self;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](self, "currentSetStatusByInstance"));
  id v8 = [obj countByEnumeratingWithState:&v35 objects:v39 count:16];
  if (v8)
  {
    id v9 = v8;
    id v29 = 0LL;
    id v33 = 0LL;
    uint64_t v10 = *(void *)v36;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    id v12 = v31;
    while (1)
    {
      for (i = 0LL; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v36 != v10) {
          objc_enumerationMutation(obj);
        }
        id v14 = *(void **)(*((void *)&v35 + 1) + 8LL * (void)i);
        uint64_t v15 = objc_autoreleasePoolPush();
        id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](v34, "currentSetStatusByInstance"));
        id v17 = [v16 safeObjectForKey:v14 ofClass:objc_opt_class(MANAutoAssetSetStatus)];
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

        unsigned __int8 v19 = p_ivars[155];
        BOOL v20 = (void *)objc_claimAutoreleasedReturnValue([v18 clientDomainName]);
        if (-[__objc2_ivar_list stringIsEqual:to:](v19, "stringIsEqual:to:", v20, v12))
        {
          BOOL v21 = p_ivars;
          int v22 = p_ivars[155];
          unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSetIdentifier]);
          LODWORD(v22) = -[__objc2_ivar_list stringIsEqual:to:](v22, "stringIsEqual:to:", v23, v30);

          if (!(_DWORD)v22)
          {
            id v12 = v31;
LABEL_13:
            p_ivars = v21;
            goto LABEL_21;
          }

          if (v33)
          {
            __int16 v24 = (void *)objc_claimAutoreleasedReturnValue([v33 latestDownloadedAtomicInstance]);

            id v25 = (void *)objc_claimAutoreleasedReturnValue([v18 latestDownloadedAtomicInstance]);
            if (v24)
            {
              id v12 = v31;
              if (!v25) {
                goto LABEL_13;
              }
              id v26 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager chooseNewerSetStatus:comparingTo:]( v34,  "chooseNewerSetStatus:comparingTo:",  v33,  v18));
            }

            else
            {
              id v12 = v31;
              if (!v25)
              {
                id v27 = [v14 length];
                if (v27 <= [v29 length]) {
                  goto LABEL_13;
                }
              }

              id v26 = v18;
            }

            id v33 = v26;
          }

          else
          {
            id v33 = v18;
            id v12 = v31;
          }

          p_ivars = v21;
          BOOL v20 = v29;
          id v29 = v14;
        }

LABEL_21:
        objc_autoreleasePoolPop(v15);
      }

      id v9 = [obj countByEnumeratingWithState:&v35 objects:v39 count:16];
      if (!v9) {
        goto LABEL_25;
      }
    }
  }

  id v29 = 0LL;
  id v33 = 0LL;
  id v12 = v31;
LABEL_25:

  return v33;
}

- (id)chooseNewerSetStatus:(id)a3 comparingTo:(id)a4
{
  id v6 = a3;
  id v116 = a4;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 clientDomainName]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
  v124 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v9,  v10));

  unsigned int v119 = +[MADAutoAssetControlManager preferenceAutoAssetLogSetCompare]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceAutoAssetLogSetCompare");
  __int128 v129 = 0u;
  __int128 v130 = 0u;
  __int128 v131 = 0u;
  __int128 v132 = 0u;
  id v115 = v6;
  id obj = (id)objc_claimAutoreleasedReturnValue([v115 latestDowloadedAtomicInstanceEntries]);
  id v120 = self;
  id v121 = [obj countByEnumeratingWithState:&v129 objects:v148 count:16];
  if (!v121)
  {
    uint64_t v106 = 0LL;
    uint64_t v107 = 0LL;
    uint64_t v108 = 0LL;
    uint64_t v123 = 0LL;
    uint64_t v111 = 0LL;
    goto LABEL_35;
  }

  uint64_t v106 = 0LL;
  uint64_t v107 = 0LL;
  uint64_t v108 = 0LL;
  uint64_t v123 = 0LL;
  uint64_t v111 = 0LL;
  uint64_t v117 = *(void *)v130;
  do
  {
    for (i = 0LL; i != v121; i = (char *)i + 1)
    {
      if (*(void *)v130 != v117) {
        objc_enumerationMutation(obj);
      }
      id v12 = *(void **)(*((void *)&v129 + 1) + 8LL * (void)i);
      id v13 = objc_autoreleasePoolPush();
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSpecifier]);
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager findAtomicEntryForAssetType:forAssetSpecifier:representedByStatus:]( self,  "findAtomicEntryForAssetType:forAssetSpecifier:representedByStatus:",  v15,  v17,  v116));

      unsigned __int8 v19 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
      BOOL v20 = (void *)objc_claimAutoreleasedReturnValue([v19 assetType]);
      BOOL v21 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
      int v22 = (void *)objc_claimAutoreleasedReturnValue([v21 assetSpecifier]);
      unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager findSetEntryForAssetType:forAssetSpecifier:representedByConfiguration:]( self,  "findSetEntryForAssetType:forAssetSpecifier:representedByConfiguration:",  v20,  v22,  v124));

      if (v18)
      {
        id v24 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
        id v25 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
        id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 assetVersion]);
        id v27 = [v24 initWithRestoreVersion:v26];

        id v28 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
        id v29 = (void *)objc_claimAutoreleasedReturnValue([v18 fullAssetSelector]);
        id v30 = (void *)objc_claimAutoreleasedReturnValue([v29 assetVersion]);
        id v31 = [v28 initWithRestoreVersion:v30];

        if ([v27 isComparable:v31])
        {
          int v32 = (char *)[v27 compare:v31];
          self = v120;
          if (v32 == (char *)-1LL)
          {
            ++v108;
            if (!v119) {
              goto LABEL_27;
            }
            v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v120, "logger"));
            unsigned int v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v45 oslog]);

            if (!os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT)) {
              goto LABEL_26;
            }
            id v109 = (id)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
            __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v109 summary]);
            __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v18 fullAssetSelector]);
            __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v36 summary]);
            *(_DWORD *)buf = 138543618;
            uint64_t v134 = (uint64_t)v35;
            __int16 v135 = 2114;
            uint64_t v136 = (uint64_t)v37;
            __int128 v38 = v34;
            __int16 v39 = "\n{chooseNewerSetStatus} | rightIsNewer | left:%{public}@ | right:%{public}@";
          }

          else
          {
            if (v32 == (_BYTE *)&dword_0 + 1)
            {
              ++v107;
              if (!v119)
              {
LABEL_27:

                goto LABEL_28;
              }

              id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v120, "logger"));
              unsigned int v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

              if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
              {
                id v109 = (id)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
                __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v109 summary]);
                __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v18 fullAssetSelector]);
                __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v36 summary]);
                *(_DWORD *)buf = 138543618;
                uint64_t v134 = (uint64_t)v35;
                __int16 v135 = 2114;
                uint64_t v136 = (uint64_t)v37;
                __int128 v38 = v34;
                __int16 v39 = "\n{chooseNewerSetStatus} | leftIsNewer | left:%{public}@ | right:%{public}@";
                goto LABEL_24;
              }

- (id)findAtomicEntryForAssetType:(id)a3 forAssetSpecifier:(id)a4 representedByStatus:(id)a5
{
  id v7 = a3;
  id v24 = a4;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([a5 latestDowloadedAtomicInstanceEntries]);
  id v8 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = *(void *)v27;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      id v11 = 0LL;
      id v23 = v8;
      do
      {
        if (*(void *)v27 != v9) {
          objc_enumerationMutation(obj);
        }
        id v12 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)v11);
        id v13 = p_ivars[155];
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v13, "stringIsEqual:to:", v15, v7) & 1) != 0)
        {
          id v16 = p_ivars[155];
          uint64_t v17 = v9;
          uint64_t v18 = p_ivars;
          id v19 = v7;
          BOOL v20 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
          BOOL v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSpecifier]);
          LODWORD(v16) = -[__objc2_ivar_list stringIsEqual:to:](v16, "stringIsEqual:to:", v21, v24);

          id v7 = v19;
          p_ivars = v18;
          uint64_t v9 = v17;
          id v8 = v23;

          if ((_DWORD)v16)
          {
            id v8 = v12;
            goto LABEL_12;
          }
        }

        else
        {
        }

        id v11 = (char *)v11 + 1;
      }

      while (v8 != v11);
      id v8 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
    }

    while (v8);
  }

- (id)findSetEntryForAssetType:(id)a3 forAssetSpecifier:(id)a4 representedByConfiguration:(id)a5
{
  id v7 = a3;
  id v24 = a4;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([a5 autoAssetEntries]);
  id v8 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = *(void *)v27;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      id v11 = 0LL;
      id v23 = v8;
      do
      {
        if (*(void *)v27 != v9) {
          objc_enumerationMutation(obj);
        }
        id v12 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)v11);
        id v13 = p_ivars[155];
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSelector]);
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v13, "stringIsEqual:to:", v15, v7) & 1) != 0)
        {
          id v16 = p_ivars[155];
          uint64_t v17 = v9;
          uint64_t v18 = p_ivars;
          id v19 = v7;
          BOOL v20 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSelector]);
          BOOL v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSpecifier]);
          LODWORD(v16) = -[__objc2_ivar_list stringIsEqual:to:](v16, "stringIsEqual:to:", v21, v24);

          id v7 = v19;
          p_ivars = v18;
          uint64_t v9 = v17;
          id v8 = v23;

          if ((_DWORD)v16)
          {
            id v8 = v12;
            goto LABEL_12;
          }
        }

        else
        {
        }

        id v11 = (char *)v11 + 1;
      }

      while (v8 != v11);
      id v8 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
    }

    while (v8);
  }

- (id)buildSetFoundResponseMessage:(id)a3 forClientRequest:(id)a4 withFoundSetDescriptor:(id)a5 withSubAtomicInstance:(id)a6 forLatestDownloaded:(BOOL)a7 withInstance:(id)a8 withDesire:(id)a9 fromLocation:(id)a10
{
  id v54 = a3;
  id v15 = a4;
  id v16 = a8;
  id v55 = a9;
  id v56 = a10;
  id v17 = a6;
  id v18 = a5;
  id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  BOOL v20 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v19 extendedStateQueue]);
  dispatch_assert_queue_V2(v20);

  BOOL v21 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  int v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", v15));
  v53 = v15;
  if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v22,  @"MA-AUTO-SET:LOCK_ATOMIC") & 1) != 0)
  {
    unsigned __int8 v23 = 1;
  }

  else
  {
    id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", v15));
    unsigned __int8 v23 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v24,  @"MA-AUTO-SET:CONTINUE_ATOMIC_LOCK");
  }

  id v25 = (void *)objc_claimAutoreleasedReturnValue([v16 clientDomainName]);
  __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSetIdentifier]);
  __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v16 atomicInstance]);
  LOBYTE(v51) = v23;
  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildReportedSetStatus:forClientDomainName:forSetIdentifier:forAtomicInstance:withFoundSetDescriptor:withSubAtomicInstance:reportingLocalContentURLs:]( self,  "buildReportedSetStatus:forClientDomainName:forSetIdentifier:forAtomicInstance:withFoundSetDescriptor :withSubAtomicInstance:reportingLocalContentURLs:",  v56,  v25,  v26,  v27,  v18,  v17,  v51));

  if (v28)
  {
    __int128 v29 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetInfoFound);
    id v30 = (void *)objc_claimAutoreleasedReturnValue([v28 assetSetIdentifier]);
    id v31 = -[MANAutoAssetSetInfoFound initForAssetSetIdentifier:reportingStatus:]( v29,  "initForAssetSetIdentifier:reportingStatus:",  v30,  v28);
    id v52 = v28;
    id v32 = v16;
    id v33 = v31;

    id v34 = +[MASAutoAssetSetInfoInstance newShimmedToFramework:]( &OBJC_CLASS___MASAutoAssetSetInfoInstance,  "newShimmedToFramework:",  v32);
    -[NSMutableDictionary setSafeObject:forKey:](v21, "setSafeObject:forKey:", v34, @"setInstance");

    id v35 = +[MASAutoAssetSetInfoFound newShimmedToFramework:]( &OBJC_CLASS___MASAutoAssetSetInfoFound,  "newShimmedToFramework:",  v33);
    -[NSMutableDictionary setSafeObject:forKey:](v21, "setSafeObject:forKey:", v35, @"setFound");

    id v36 = +[MASAutoAssetSetInfoDesire newShimmedToFramework:]( &OBJC_CLASS___MASAutoAssetSetInfoDesire,  "newShimmedToFramework:",  v55);
    -[NSMutableDictionary setSafeObject:forKey:](v21, "setSafeObject:forKey:", v36, @"setDesire");

    __int128 v37 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
    __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([v53 clientRequestMessage]);
    __int16 v39 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v38));
    unsigned __int8 v40 = (void *)objc_claimAutoreleasedReturnValue([v53 clientID]);
    uint64_t v41 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v37,  "initWithType:messageName:clientID:version:message:",  2LL,  v39,  v40,  0LL,  v21);

    id v42 = v53;
    id v43 = v33;
    id v16 = v32;
    __int128 v28 = v52;
    unsigned __int8 v44 = v54;
    if (v41) {
      goto LABEL_10;
    }
  }

  else
  {
    id v43 = 0LL;
    id v42 = v53;
    unsigned __int8 v44 = v54;
  }

  v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  unsigned __int8 v46 = (os_log_s *)objc_claimAutoreleasedReturnValue([v45 oslog]);

  if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
  {
    __int128 v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    id v49 = (id)objc_claimAutoreleasedReturnValue([v42 summary]);
    if (v43) {
      uint64_t v50 = (__CFString *)objc_claimAutoreleasedReturnValue([v43 summary]);
    }
    else {
      uint64_t v50 = @"N";
    }
    *(_DWORD *)buf = 138544386;
    unsigned __int8 v58 = v48;
    __int16 v59 = 2114;
    id v60 = v56;
    __int16 v61 = 2114;
    id v62 = v44;
    __int16 v63 = 2114;
    id v64 = v49;
    __int16 v65 = 2114;
    id v66 = v50;
    _os_log_error_impl( &dword_0,  v46,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@:buildSetFoundResponseMessage} unable to build response for %{public}@ request | clientReq uest:%{public}@ | found:%{public}@",  buf,  0x34u);
    if (v43) {
  }
    }

  uint64_t v41 = 0LL;
LABEL_10:

  return v41;
}

- (id)locateSetDescriptorDownloadedByAtomicInstanceUUID:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v8 = [v7 safeObjectForKey:v4 ofClass:objc_opt_class(MADAutoSetDescriptor)];
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  return v9;
}

- (id)newAtomicInstancesDownloadedForDescriptor:(id)a3
{
  id v3 = a3;
  id v4 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([v3 latestDownloadedAtomicInstance]);

  if (v4)
  {
    id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 latestDownloadedAtomicInstance]);
    -[NSMutableArray addObject:](v4, "addObject:", v5);
  }

  return v4;
}

+ (id)stagerSetPolicy
{
  if (stagerSetPolicy_dispatchOnceStagerSetPolicy != -1) {
    dispatch_once(&stagerSetPolicy_dispatchOnceStagerSetPolicy, &__block_literal_global_2809);
  }
  return (id)stagerSetPolicy___stagerSetPolicy;
}

- (id)setLockUsageMapForSetDescriptor:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);

  id v9 = -[MADAutoAssetControlManager newSetLockUsageMapKeyForClientDomain:forSetIdentifier:]( self,  "newSetLockUsageMapKeyForClientDomain:forSetIdentifier:",  v7,  v8);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager setLockUsageMap](self, "setLockUsageMap"));
  id v11 = [v10 safeObjectForKey:v9 ofClass:objc_opt_class(NSMutableDictionary)];
  id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  return v12;
}

- (id)newSetLockUsageMapKeyForClientDomain:(id)a3 forSetIdentifier:(id)a4
{
  id v5 = a4;
  id v6 = a3;
  id v7 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"%@_%@", v6, v5);

  return v7;
}

- (void)_updateCurrentSetStatus:(id)a3 forSetIdentifier:(id)a4 withSetStatus:(id)a5
{
  id v20 = a5;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](self, "currentSetStatusByInstance"));
  [v10 setSafeObject:v20 forKey:v7];

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v20 newerAtomicInstanceDiscovered]);
  if (v11)
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](self, "currentSetStatusByInstance"));
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v20 newerAtomicInstanceDiscovered]);
    [v12 setSafeObject:v20 forKey:v13];
  }

  id v14 = (void *)objc_claimAutoreleasedReturnValue([v20 latestDownloadedAtomicInstance]);

  if (v14)
  {
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v20 latestDownloadedAtomicInstance]);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v20 newerAtomicInstanceDiscovered]);
    unsigned __int8 v17 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v15, v16);

    if ((v17 & 1) == 0)
    {
      id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](self, "currentSetStatusByInstance"));
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v20 latestDownloadedAtomicInstance]);
      [v18 setSafeObject:v20 forKey:v19];
    }
  }
}

- (id)setJobInstanceKeyFromSetStatus:(id)a3 forLatestDownloaded:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
  if (!v9)
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager setJobInstanceKeyFromSetStatus:forLatestDownloaded:].cold.1();
    }
    goto LABEL_14;
  }

  if (!v4)
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v6 newerAtomicInstanceDiscovered]);

    if (v16)
    {
      id v11 = objc_alloc(&OBJC_CLASS___NSString);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
      uint64_t v13 = objc_claimAutoreleasedReturnValue([v6 newerAtomicInstanceDiscovered]);
      goto LABEL_9;
    }

    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager setJobInstanceKeyFromSetStatus:forLatestDownloaded:].cold.3();
    }
LABEL_14:

    id v18 = 0LL;
    goto LABEL_15;
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);

  if (!v10)
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager setJobInstanceKeyFromSetStatus:forLatestDownloaded:].cold.2();
    }
    goto LABEL_14;
  }

  id v11 = objc_alloc(&OBJC_CLASS___NSString);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
  uint64_t v13 = objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);
LABEL_9:
  unsigned __int8 v17 = (void *)v13;
  id v18 = -[NSString initWithFormat:](v11, "initWithFormat:", @"%@_%@", v12, v13);

LABEL_15:
  return v18;
}

- (id)setConfigurationAssetEntries:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);

  id v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationAssetEntries:forAssetSetIdentifier:]( self,  "setConfigurationAssetEntries:forAssetSetIdentifier:",  v5,  v6));
  return v7;
}

- (id)setConfigurationAssetEntries:(id)a3 forAssetSetIdentifier:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v7,  v6);
  id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
  id v12 = [v11 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoSetConfiguration)];
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetEntries]);
  return v14;
}

- (void)issueResponseToClientRequest:(id)a3 issuingResponseMessage:(id)a4 withResponseError:(id)a5
{
  id v8 = a3;
  uint64_t v9 = (uint64_t)a4;
  uint64_t v10 = (uint64_t)a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v8 clientReplyCompletion]);
  if (v13)
  {
    if (!v9 && v10)
    {
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequestMessage]);
      id v15 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v14));
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v8 clientID]);
      uint64_t v9 = objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v15,  @"com.apple.MAAutoControl",  v16,  0LL,  v10));

LABEL_15:
      id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
      id v31 = (void *)objc_claimAutoreleasedReturnValue([v30 totalClientRepliesFailure]);
LABEL_17:
      -[MADAutoAssetControlManager _statsIncrement:forClientRequest:]( self,  "_statsIncrement:forClientRequest:",  v31,  v8);

      id v32 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue([v8 clientReplyCompletion]);
      v32[2](v32, v9, v10);

      [v8 setClientReplyCompletion:0];
      -[MADAutoAssetControlManager removeClientRequest:fromLocation:]( self,  "removeClientRequest:fromLocation:",  v8,  @"issueResponseToClientRequest");
      goto LABEL_18;
    }

    if (!(v9 | v10))
    {
      uint64_t v10 = objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6111LL,  @"issueResponseToClientRequest",  0LL,  @"no response message or response error at point where reply is to be issued to client"));
      BOOL v21 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequestMessage]);
      int v22 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v21));
      unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue([v8 clientID]);
      uint64_t v9 = objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v22,  @"com.apple.MAAutoControl",  v23,  0LL,  v10));

      id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      id v25 = (void *)objc_claimAutoreleasedReturnValue([v24 diag]);
      __int128 v26 = objc_alloc(&OBJC_CLASS___NSString);
      __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
      __int128 v28 = -[NSString initWithFormat:]( v26,  "initWithFormat:",  @"%@ | clientRequest:%@",  @"no response message or response error at point where reply is to be issued to client",  v27);
      [v25 trackAnomaly:@"AUTO-CONTROL" forReason:v28 withResult:6111 withError:v10];
    }

    if (v8 && v9 && !v10)
    {
      uint64_t v29 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _updateSandboxExtensionForResponse:responseError:clientRequest:alreadyOnStateQueue:]( self,  "_updateSandboxExtensionForResponse:responseError:clientRequest:alreadyOnStateQueue:",  v9,  0LL,  v8,  1LL));

      uint64_t v9 = v29;
    }

    else if (v10)
    {
      goto LABEL_15;
    }

    id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
    id v31 = (void *)objc_claimAutoreleasedReturnValue([v30 totalClientRepliesSuccess]);
    uint64_t v10 = 0LL;
    goto LABEL_17;
  }

  unsigned __int8 v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
    *(_DWORD *)buf = 138543618;
    id v34 = v19;
    __int16 v35 = 2114;
    id v36 = v20;
    _os_log_impl( &dword_0,  v18,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {issueResponseToClientRequest} no response issued (already replied to client) | clientRequest:%{public}@",  buf,  0x16u);
  }

LABEL_18:
}

- (void)removeClientRequest:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  if (v6)
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v6 clientReplyCompletion]);

    unsigned int v84 = self;
    if (v10)
    {
      id v11 = objc_alloc(&OBJC_CLASS___NSString);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
      uint64_t v13 = -[NSString initWithFormat:]( v11,  "initWithFormat:",  @"{%@:removeClientRequest} | removing client request that has not been replied to - replying with error | clientRequest:%@",  v7,  v12);

      id v14 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6103LL,  v7,  0LL,  v13));
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
      id v16 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v15));
      unsigned __int8 v17 = (void *)objc_claimAutoreleasedReturnValue([v6 clientID]);
      id v18 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v16,  @"com.apple.MAAutoControl",  v17,  0LL,  v14));

      self = v84;
      id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v84, "autoControlManagerFSM"));
      id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 diag]);
      [v20 trackAnomaly:@"AUTO-CONTROL" forReason:v13 withResult:6103 withError:v14];

      BOOL v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](v84, "statistics"));
      int v22 = (void *)objc_claimAutoreleasedReturnValue([v21 totalClientRepliesFailure]);
      -[MADAutoAssetControlManager _statsIncrement:forClientRequest:](v84, "_statsIncrement:forClientRequest:", v22, v6);

      unsigned __int8 v23 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue([v6 clientReplyCompletion]);
      ((void (**)(void, void *, void *))v23)[2](v23, v18, v14);

      [v6 setClientReplyCompletion:0];
    }

    id v81 = v7;
    -[MADAutoAssetControlManager timerStopForClientRequest:fromLocation:]( self,  "timerStopForClientRequest:fromLocation:",  v6,  v7);
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    char v77 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v89 = 0u;
    __int128 v90 = 0u;
    __int128 v91 = 0u;
    __int128 v92 = 0u;
    id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsAwaitingSync](self, "clientRequestsAwaitingSync"));
    id v26 = [v25 countByEnumeratingWithState:&v89 objects:v100 count:16];
    if (v26)
    {
      id v27 = v26;
      id obj = v6;
      char v79 = 0;
      uint64_t v28 = *(void *)v90;
      do
      {
        for (i = 0LL; i != v27; i = (char *)i + 1)
        {
          if (*(void *)v90 != v28) {
            objc_enumerationMutation(v25);
          }
          id v30 = *(void **)(*((void *)&v89 + 1) + 8LL * (void)i);
          id v31 = objc_autoreleasePoolPush();
          id v32 = (void *)objc_claimAutoreleasedReturnValue([v30 clientRequest]);
          id v33 = (void *)objc_claimAutoreleasedReturnValue([v32 clientRequestUUID]);
          id v34 = (void *)objc_claimAutoreleasedReturnValue([obj clientRequestUUID]);
          unsigned int v35 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v33, v34);

          if (v35)
          {
            id v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v84, "logger"));
            __int128 v37 = (os_log_s *)objc_claimAutoreleasedReturnValue([v36 oslog]);

            if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
            {
              __int128 v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v84, "_updateLatestSummary"));
              __int16 v39 = (void *)objc_claimAutoreleasedReturnValue([v30 summary]);
              *(_DWORD *)buf = 138543874;
              BOOL v95 = v38;
              __int16 v96 = 2114;
              id v97 = v81;
              __int16 v98 = 2114;
              id v99 = v39;
              _os_log_impl( &dword_0,  v37,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:removeClientRequest} [CLIENT_REQUESTS_AWAITING_SYNC] | trimmed client-request | jobParam:%{public}@",  buf,  0x20u);
            }

            unsigned __int8 v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](v84, "statistics"));
            uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue([v40 totalDequeuedClientRequests]);
            id v42 = (void *)objc_claimAutoreleasedReturnValue([v30 clientRequest]);
            -[MADAutoAssetControlManager _statsIncrement:forClientRequest:]( v84,  "_statsIncrement:forClientRequest:",  v41,  v42);

            char v79 = 1;
          }

          else if (v30)
          {
            -[NSMutableArray addObject:](v77, "addObject:", v30);
          }

          else
          {
            id v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v84, "autoControlManagerFSM"));
            unsigned __int8 v44 = (void *)objc_claimAutoreleasedReturnValue([v43 diag]);
            v45 = objc_alloc(&OBJC_CLASS___NSString);
            unsigned __int8 v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v84, "_updateLatestSummary"));
            uint64_t v47 = -[NSString initWithFormat:]( v45,  "initWithFormat:",  @"{%@:removeClientRequest} | nil jobParam on clientRequestsAwaitingSync | %@",  v81,  v46);
            [v44 trackAnomaly:@"AUTO-CONTROL" forReason:v47 withResult:6102 withError:0];
          }

          objc_autoreleasePoolPop(v31);
        }

        id v27 = [v25 countByEnumeratingWithState:&v89 objects:v100 count:16];
      }

      while (v27);

      id v6 = obj;
      self = v84;
      p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
      if ((v79 & 1) != 0) {
        -[MADAutoAssetControlManager setClientRequestsAwaitingSync:](v84, "setClientRequestsAwaitingSync:", v77);
      }
    }

    else
    {
    }

    id v78 = objc_alloc_init((Class)p_ivars[139]);

    __int128 v87 = 0u;
    __int128 v88 = 0u;
    __int128 v85 = 0u;
    __int128 v86 = 0u;
    uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestsAwaitingFirstUnlock]( self,  "clientRequestsAwaitingFirstUnlock"));
    id v52 = [v51 countByEnumeratingWithState:&v85 objects:v93 count:16];
    if (v52)
    {
      id v53 = v52;
      id v54 = v6;
      char v80 = 0;
      uint64_t v55 = *(void *)v86;
      id obja = v51;
      do
      {
        for (j = 0LL; j != v53; j = (char *)j + 1)
        {
          if (*(void *)v86 != v55) {
            objc_enumerationMutation(obja);
          }
          id v57 = *(void **)(*((void *)&v85 + 1) + 8LL * (void)j);
          unsigned __int8 v58 = objc_autoreleasePoolPush();
          __int16 v59 = (void *)objc_claimAutoreleasedReturnValue([v57 clientRequest]);
          id v60 = (void *)objc_claimAutoreleasedReturnValue([v59 clientRequestUUID]);
          __int16 v61 = (void *)objc_claimAutoreleasedReturnValue([v54 clientRequestUUID]);
          unsigned int v62 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v60, v61);

          if (v62)
          {
            __int16 v63 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](v84, "statistics"));
            id v64 = (void *)objc_claimAutoreleasedReturnValue([v63 totalDequeuedClientRequests]);
            __int16 v65 = (void *)objc_claimAutoreleasedReturnValue([v57 clientRequest]);
            -[MADAutoAssetControlManager _statsIncrement:forClientRequest:]( v84,  "_statsIncrement:forClientRequest:",  v64,  v65);

            char v80 = 1;
          }

          else if (v57)
          {
            [v78 addObject:v57];
          }

          else
          {
            id v66 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v84, "autoControlManagerFSM"));
            id v67 = (void *)objc_claimAutoreleasedReturnValue([v66 diag]);
            unsigned __int8 v68 = objc_alloc(&OBJC_CLASS___NSString);
            id v69 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v84, "_updateLatestSummary"));
            unsigned __int8 v70 = -[NSString initWithFormat:]( v68,  "initWithFormat:",  @"{%@:removeClientRequest} | nil jobParam on clientRequestsAwaitingFirstUnlock | %@",  v81,  v69);
            [v67 trackAnomaly:@"AUTO-CONTROL" forReason:v70 withResult:6102 withError:0];
          }

          objc_autoreleasePoolPop(v58);
        }

        id v53 = [obja countByEnumeratingWithState:&v85 objects:v93 count:16];
      }

      while (v53);

      id v6 = v54;
      self = v84;
      if ((v80 & 1) != 0) {
        -[MADAutoAssetControlManager setClientRequestsAwaitingFirstUnlock:]( v84,  "setClientRequestsAwaitingFirstUnlock:",  v78);
      }
    }

    else
    {
    }

    id v71 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestUUID]);

    if (v71)
    {
      char v72 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsBeingTracked](self, "clientRequestsBeingTracked"));
      v73 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestUUID]);
      [v72 removeObjectForKey:v73];
    }

    else
    {
      char v72 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      v73 = (void *)objc_claimAutoreleasedReturnValue([v72 diag]);
      unsigned __int8 v74 = objc_alloc(&OBJC_CLASS___NSString);
      id v75 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
      unsigned __int8 v76 = -[NSString initWithFormat:]( v74,  "initWithFormat:",  @"{removeClientRequest} client-request without clientRequestUUID | clientRequest:%@",  v75);
      [v73 trackAnomaly:@"AUTO-CONTROL" forReason:v76 withResult:6109 withError:0];
    }

    id v7 = v81;
  }

  else
  {
    __int128 v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v49 = (void *)objc_claimAutoreleasedReturnValue([v48 diag]);
    uint64_t v50 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:removeClientRequest} | nil clientRequest provided",  v7);
    [v49 trackAnomaly:@"AUTO-CONTROL" forReason:v50 withResult:6102 withError:0];
  }
}

- (void)timerStopForClientRequest:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v6 timedTracker]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager timedOperations](self, "timedOperations"));
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v10 timerUUID]);
  id v13 = [v11 safeObjectForKey:v12 ofClass:objc_opt_class(MADAutoAssetTimed)];
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

  if (v14)
  {
    uint64_t v15 = objc_claimAutoreleasedReturnValue([v14 timerInstance]);
    if (v15)
    {
      id v16 = (void *)v15;
      unsigned __int8 v17 = [v14 timerInvalidated];

      if ((v17 & 1) == 0)
      {
        [v14 setTimerInvalidated:1];
        id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          BOOL v21 = (void *)objc_claimAutoreleasedReturnValue([v6 summaryWithResponseMessage:0]);
          int v23 = 138544642;
          id v24 = v20;
          __int16 v25 = 2114;
          id v26 = @">----->";
          __int16 v27 = 2114;
          id v28 = v7;
          __int16 v29 = 2114;
          id v30 = @"STOPD";
          __int16 v31 = 2114;
          id v32 = v21;
          __int16 v33 = 2114;
          id v34 = @"<-----<";
          _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n #_CLTMR:%{public}@ {%{public}@}\n #_CLTMR:(%{public}@) clientRequest:%{public}@\n #_CLTMR:%{public}@",  (uint8_t *)&v23,  0x3Eu);
        }

        int v22 = (void *)objc_claimAutoreleasedReturnValue([v14 timerInstance]);
        [v22 fire];
      }
    }
  }
}

- (void)handleSetClientCurrentStatusRequest:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v160 = v5;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  @"handleSetClientCurrentStatusRequest",  v5));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 atomicInstance]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSetIdentifier]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetStatusPreferringByInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:]( self,  "locateSetStatusPreferringByInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:",  v9,  v10,  v11,  @"lockSetAlreadyCompletedToClient"));

  v173 = v8;
  v159 = self;
  if (v12)
  {
    __int16 v167 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
    id v161 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
    v153 = (void *)objc_claimAutoreleasedReturnValue([v12 atomicInstancesDownloaded]);
    v147 = (void *)objc_claimAutoreleasedReturnValue([v12 catalogCachedAssetSetID]);
    v151 = (void *)objc_claimAutoreleasedReturnValue([v12 catalogDownloadedFromLive]);
    __int16 v143 = (void *)objc_claimAutoreleasedReturnValue([v12 catalogLastTimeChecked]);
    __int16 v141 = (void *)objc_claimAutoreleasedReturnValue([v12 catalogPostedDate]);
    __int16 v139 = (void *)objc_claimAutoreleasedReturnValue([v12 newerAtomicInstanceDiscovered]);
    __int16 v135 = (void *)objc_claimAutoreleasedReturnValue([v12 newerDiscoveredAtomicEntries]);
    __int128 v131 = (void *)objc_claimAutoreleasedReturnValue([v12 latestDownloadedAtomicInstance]);
    __int16 v137 = (void *)objc_claimAutoreleasedReturnValue([v12 latestDowloadedAtomicInstanceEntries]);
    v133 = (void *)objc_claimAutoreleasedReturnValue([v12 downloadedCatalogCachedAssetSetID]);
    __int128 v129 = (void *)objc_claimAutoreleasedReturnValue([v12 downloadedCatalogDownloadedFromLive]);
    __int128 v127 = (void *)objc_claimAutoreleasedReturnValue([v12 downloadedCatalogLastTimeChecked]);
    __int128 v125 = (void *)objc_claimAutoreleasedReturnValue([v12 downloadedCatalogPostedDate]);
    uint64_t v117 = (void *)objc_claimAutoreleasedReturnValue([v12 currentNotifications]);
    id v116 = (void *)objc_claimAutoreleasedReturnValue([v12 currentNeedPolicy]);
    uint64_t v123 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
    id v121 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
    id v113 = +[MADAutoAssetScheduler newSetPolicyForDomainName:forAssetSetIdentifier:]( &OBJC_CLASS___MADAutoAssetScheduler,  "newSetPolicyForDomainName:forAssetSetIdentifier:",  v123,  v121);
    uint64_t v112 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager stagerSetPolicy]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerSetPolicy"));
    unsigned int v119 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
    id v118 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
    unsigned __int8 v111 = -[MADAutoAssetControlManager _haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:]( self,  "_haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:",  v119,  v118);
    id v115 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
    unsigned int v114 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
    unsigned __int8 v13 = -[MADAutoAssetControlManager _vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:]( self,  "_vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:",  v115,  v114);
    unsigned __int8 v14 = [v12 downloadUserInitiated];
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v12 downloadProgress]);
    id v16 = [v12 downloadedNetworkBytes];
    id v17 = [v12 downloadedFilesystemBytes];
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v12 selectorsForStaging]);
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v12 availableForUseError]);
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v12 newerVersionError]);
    LOBYTE(v110) = 1;
    BYTE2(v109) = v14;
    BYTE1(v109) = v13;
    LOBYTE(v109) = v111;
    id v21 = -[MADAutoAssetControlManager newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:extendingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( self,  "newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogC achedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtom icInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloaded AtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDown loadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy: withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries: withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:exte ndingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  @"handleSetClientCurrentStatusRequest",  @"extended set-job to include lock-usage",  v167,  v161,  v153,  v147,  v151,  v143,  v141,  v139,  v135,  v131,  v137,  v133,  v129,  v127,  v125,  v117,  v116,  v113,  v112,  v109,  v15,  v16,  v17,  v110,  v18,  v19,  v20);

    id v8 = v173;
    goto LABEL_50;
  }

  int v22 = (void *)objc_claimAutoreleasedReturnValue([v8 atomicInstance]);

  if (!v22)
  {
    __int128 v179 = 0u;
    __int128 v180 = 0u;
    __int128 v181 = 0u;
    __int128 v182 = 0u;
    id v32 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetScheduler jobsAwaitingTrigger]( &OBJC_CLASS___MADAutoAssetScheduler,  "jobsAwaitingTrigger"));
    id v33 = [v32 countByEnumeratingWithState:&v179 objects:v192 count:16];
    if (!v33) {
      goto LABEL_18;
    }
    id v34 = v33;
    uint64_t v35 = *(void *)v180;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    int v155 = v32;
    while (1)
    {
      __int128 v37 = 0LL;
      id v169 = v34;
      do
      {
        if (*(void *)v180 != v35) {
          objc_enumerationMutation(v32);
        }
        __int128 v38 = *(void **)(*((void *)&v179 + 1) + 8LL * (void)v37);
        if ([v38 setJob])
        {
          __int16 v39 = p_ivars[155];
          unsigned __int8 v40 = (void *)objc_claimAutoreleasedReturnValue([v38 assetSelector]);
          uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue([v40 assetType]);
          id v42 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
          if ((-[__objc2_ivar_list stringIsEqual:to:](v39, "stringIsEqual:to:", v41, v42) & 1) != 0)
          {
            v163 = p_ivars[155];
            id v43 = (void *)objc_claimAutoreleasedReturnValue([v38 assetSelector]);
            unsigned __int8 v44 = (void *)objc_claimAutoreleasedReturnValue([v43 assetSpecifier]);
            v45 = p_ivars;
            uint64_t v46 = v35;
            uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue([v173 assetSetIdentifier]);
            LOBYTE(v163) = -[__objc2_ivar_list stringIsEqual:to:](v163, "stringIsEqual:to:", v44, v47);

            uint64_t v35 = v46;
            p_ivars = v45;

            id v8 = v173;
            id v32 = v155;

            id v34 = v169;
            if ((v163 & 1) != 0)
            {
              id v64 = v38;

              if (v64)
              {

                v157 = 0LL;
                char v65 = 0;
              }

              else
              {
LABEL_34:
                id v66 = (void *)objc_claimAutoreleasedReturnValue([v160 clientRequest]);
                id v67 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageName:]( v159,  "clientRequestMessageName:",  v66));
                uint64_t v68 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationFromMessageName:withInfoInstance:errorCode:errorDescription:]( v159,  "setConfigurationFromMessageName:withInfoInstance:errorCode:errorDescription:",  v67,  v8,  0LL,  0LL));

                if (!v68)
                {
                  id v21 = 0LL;
                  goto LABEL_50;
                }

                v157 = (void *)v68;
                char v65 = 1;
              }

              uint64_t v69 = objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
              v171 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSetIdentifier]);
              unsigned __int8 v70 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetSetNotifications);
              __int16 v165 = (void *)v69;
              if ((v65 & 1) != 0)
              {
                id v71 = 0LL;
              }

              else
              {
                uint64_t v72 = objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
                uint64_t v146 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSetIdentifier]);
                v150 = (void *)v72;
                id v71 = +[MADAutoAssetScheduler newSetPolicyForDomainName:forAssetSetIdentifier:]( &OBJC_CLASS___MADAutoAssetScheduler,  "newSetPolicyForDomainName:forAssetSetIdentifier:",  v72);
              }

              v73 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager stagerSetPolicy]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerSetPolicy"));
              unsigned __int8 v74 = v8;
              id v75 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
              unsigned __int8 v76 = (void *)objc_claimAutoreleasedReturnValue([v74 assetSetIdentifier]);
              unsigned __int8 v77 = -[MADAutoAssetControlManager _haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:]( v159,  "_haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:",  v75,  v76);
              id v78 = (void *)objc_claimAutoreleasedReturnValue([v74 clientDomainName]);
              char v79 = (void *)objc_claimAutoreleasedReturnValue([v74 assetSetIdentifier]);
              LOBYTE(v110) = 1;
              BYTE2(v109) = 0;
              BYTE1(v109) = -[MADAutoAssetControlManager _vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:]( v159,  "_vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:",  v78,  v79);
              LOBYTE(v109) = v77;
              id v80 = -[MADAutoAssetControlManager newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:extendingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( v159,  "newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:wi thCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPost edDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtom icInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDown loadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDa te:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingRecei vedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownload Progress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:extendingWithCurrentLockUsage:wi thSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  @"handleSetClientCurrentStatusRequest",  @"scheduled set-job",  v165,  v171,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  v70,  0LL,  v71,  v73,  v109,  0LL,  -1LL,  -1LL,  v110,  0LL,  0LL,  0LL);

              if ((v65 & 1) == 0)
              {
              }

              id v8 = v173;
              id v21 = v80;
              goto LABEL_50;
            }
          }

          else
          {

            id v34 = v169;
          }
        }

        __int128 v37 = (char *)v37 + 1;
      }

      while (v34 != v37);
      id v34 = [v32 countByEnumeratingWithState:&v179 objects:v192 count:16];
      if (!v34)
      {
LABEL_18:

        goto LABEL_34;
      }
    }
  }

  int v23 = (void *)objc_claimAutoreleasedReturnValue([v8 atomicInstance]);
  id v24 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
  __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSetIdentifier]);
  id v26 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:]( self,  "locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:",  v23,  v24,  v25,  @"handleSetClientCurrentStatusRequest"));

  if (v26)
  {
    v168 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetSetNotifications);
    -[MANAutoAssetSetNotifications setAtomicInstanceDiscovered:](v168, "setAtomicInstanceDiscovered:", 1LL);
    -[MANAutoAssetSetNotifications setAtomicInstanceAvailableForUse:](v168, "setAtomicInstanceAvailableForUse:", 1LL);
    id v162 = (void *)objc_claimAutoreleasedReturnValue([v26 clientDomainName]);
    v154 = (void *)objc_claimAutoreleasedReturnValue([v26 assetSetIdentifier]);
    id v148 = -[MADAutoAssetControlManager _newAtomicInstancesDownloadedForSetIdentifier:]( self,  "_newAtomicInstancesDownloadedForSetIdentifier:",  v26);
    uint64_t v144 = (void *)objc_claimAutoreleasedReturnValue([v26 catalogCachedAssetSetID]);
    v152 = (void *)objc_claimAutoreleasedReturnValue([v26 catalogDownloadedFromLive]);
    uint64_t v140 = (void *)objc_claimAutoreleasedReturnValue([v26 catalogLastTimeChecked]);
    uint64_t v142 = (void *)objc_claimAutoreleasedReturnValue([v26 catalogPostedDate]);
    uint64_t v136 = (void *)objc_claimAutoreleasedReturnValue([v26 discoveredAtomicInstance]);
    uint64_t v134 = (void *)objc_claimAutoreleasedReturnValue([v26 discoveredAtomicEntries]);
    __int128 v132 = (void *)objc_claimAutoreleasedReturnValue([v26 latestDownloadedAtomicInstance]);
    uint64_t v138 = (void *)objc_claimAutoreleasedReturnValue([v26 latestDowloadedAtomicInstanceEntries]);
    __int128 v128 = (void *)objc_claimAutoreleasedReturnValue([v26 downloadedCatalogCachedAssetSetID]);
    v122 = (void *)objc_claimAutoreleasedReturnValue([v26 downloadedCatalogDownloadedFromLive]);
    v124 = (void *)objc_claimAutoreleasedReturnValue([v26 downloadedCatalogLastTimeChecked]);
    id v120 = (void *)objc_claimAutoreleasedReturnValue([v26 downloadedCatalogPostedDate]);
    __int128 v130 = (void *)objc_claimAutoreleasedReturnValue([v26 clientDomainName]);
    __int128 v126 = (void *)objc_claimAutoreleasedReturnValue([v26 assetSetIdentifier]);
    id v27 = +[MADAutoAssetScheduler newSetPolicyForDomainName:forAssetSetIdentifier:]( &OBJC_CLASS___MADAutoAssetScheduler,  "newSetPolicyForDomainName:forAssetSetIdentifier:",  v130,  v126);
    id v28 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager stagerSetPolicy]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerSetPolicy"));
    unsigned __int8 v29 = -[MADAutoAssetControlManager _haveReceivedLookupResponseForSetDescriptor:]( v159,  "_haveReceivedLookupResponseForSetDescriptor:",  v26);
    unsigned __int8 v30 = -[MADAutoAssetControlManager _vendingAtomicInstanceForConfiguredEntriesForSetDescriptor:]( v159,  "_vendingAtomicInstanceForConfiguredEntriesForSetDescriptor:",  v26);
    LOBYTE(v110) = 1;
    BYTE2(v109) = [v26 downloadUserInitiated];
    BYTE1(v109) = v30;
    LOBYTE(v109) = v29;
    id v31 = -[MADAutoAssetControlManager newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:extendingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( v159,  "newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogC achedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtom icInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloaded AtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDown loadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy: withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries: withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:exte ndingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  @"handleSetClientCurrentStatusRequest",  @"downloaded auto-asset-set",  v162,  v154,  v148,  v144,  v152,  v140,  v142,  v136,  v134,  v132,  v138,  v128,  v122,  v124,  v120,  v168,  0,  v27,  v28,  v109,  0,  [v26 downloadedNetworkBytes],  objc_msgSend(v26, "downloadedFilesystemBytes"),  v110,  0,  0,  0);

    id v21 = v31;
    goto LABEL_49;
  }

  __int128 v175 = 0u;
  __int128 v176 = 0u;
  __int128 v177 = 0u;
  __int128 v178 = 0u;
  id v48 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetScheduler jobsAwaitingTrigger]( &OBJC_CLASS___MADAutoAssetScheduler,  "jobsAwaitingTrigger"));
  id v49 = [v48 countByEnumeratingWithState:&v175 objects:v191 count:16];
  if (!v49)
  {
    id v21 = 0LL;
    id v81 = v48;
LABEL_47:

    goto LABEL_49;
  }

  id v50 = v49;
  uint64_t v51 = *(void *)v176;
  id v52 = &MobileAssetKeyManager__metaData.ivars;
  uint64_t v156 = *(void *)v176;
  v164 = v48;
LABEL_21:
  uint64_t v53 = 0LL;
  id v170 = v50;
  while (1)
  {
    if (*(void *)v176 != v51) {
      objc_enumerationMutation(v48);
    }
    id v54 = *(void **)(*((void *)&v175 + 1) + 8 * v53);
    uint64_t v55 = v52[155];
    id v56 = (void *)objc_claimAutoreleasedReturnValue([v54 assetSelector]);
    id v57 = (void *)objc_claimAutoreleasedReturnValue([v56 assetType]);
    unsigned __int8 v58 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
    if ((-[__objc2_ivar_list stringIsEqual:to:](v55, "stringIsEqual:to:", v57, v58) & 1) == 0)
    {

      id v50 = v170;
      goto LABEL_29;
    }

    __int16 v59 = v52[155];
    id v60 = (void *)objc_claimAutoreleasedReturnValue([v54 assetSelector]);
    __int16 v61 = (void *)objc_claimAutoreleasedReturnValue([v60 assetSpecifier]);
    unsigned int v62 = v52;
    __int16 v63 = (void *)objc_claimAutoreleasedReturnValue([v173 assetSetIdentifier]);
    LOBYTE(v59) = -[__objc2_ivar_list stringIsEqual:to:](v59, "stringIsEqual:to:", v61, v63);

    id v52 = v62;
    id v8 = v173;

    id v48 = v164;
    uint64_t v51 = v156;

    id v50 = v170;
LABEL_29:
    if (v50 == (id)++v53)
    {
      id v50 = [v48 countByEnumeratingWithState:&v175 objects:v191 count:16];
      if (v50) {
        goto LABEL_21;
      }
      id v21 = 0LL;
      id v81 = v48;
      goto LABEL_44;
    }
  }

  id v81 = v54;

  if (v81)
  {
    uint64_t v166 = objc_claimAutoreleasedReturnValue([v173 clientDomainName]);
    v149 = (void *)objc_claimAutoreleasedReturnValue([v173 assetSetIdentifier]);
    __int16 v145 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetSetNotifications);
    v172 = (void *)objc_claimAutoreleasedReturnValue([v173 clientDomainName]);
    v158 = (void *)objc_claimAutoreleasedReturnValue([v173 assetSetIdentifier]);
    id v82 = +[MADAutoAssetScheduler newSetPolicyForDomainName:forAssetSetIdentifier:]( &OBJC_CLASS___MADAutoAssetScheduler,  "newSetPolicyForDomainName:forAssetSetIdentifier:",  v172,  v158);
    id v83 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager stagerSetPolicy]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerSetPolicy"));
    unsigned int v84 = (void *)objc_claimAutoreleasedReturnValue([v173 clientDomainName]);
    __int128 v85 = (void *)objc_claimAutoreleasedReturnValue([v173 assetSetIdentifier]);
    unsigned __int8 v86 = -[MADAutoAssetControlManager _haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:]( v159,  "_haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:",  v84,  v85);
    __int128 v87 = (void *)objc_claimAutoreleasedReturnValue([v173 clientDomainName]);
    __int128 v88 = (void *)objc_claimAutoreleasedReturnValue([v173 assetSetIdentifier]);
    LOBYTE(v110) = 1;
    BYTE2(v109) = 0;
    BYTE1(v109) = -[MADAutoAssetControlManager _vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:]( v159,  "_vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:",  v87,  v88);
    LOBYTE(v109) = v86;
    id v48 = (id)v166;
    id v21 = -[MADAutoAssetControlManager newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:extendingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( v159,  "newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogC achedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtom icInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloaded AtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDown loadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy: withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries: withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:exte ndingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  @"handleSetClientCurrentStatusRequest",  @"scheduled set-job",  v166,  v149,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  v145,  0LL,  v82,  v83,  v109,  0LL,  -1LL,  -1LL,  v110,  0LL,  0LL,  0LL);

    id v8 = v173;
LABEL_44:
    id v26 = 0LL;
    goto LABEL_47;
  }

  id v21 = 0LL;
  id v26 = 0LL;
LABEL_49:

LABEL_50:
  if (v21)
  {
    __int128 v89 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    __int128 v90 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetInfoFound);
    __int128 v91 = (void *)objc_claimAutoreleasedReturnValue([v21 assetSetIdentifier]);
    v174 = v21;
    __int128 v92 = -[MANAutoAssetSetInfoFound initForAssetSetIdentifier:reportingStatus:]( v90,  "initForAssetSetIdentifier:reportingStatus:",  v91,  v21);

    id v93 = +[MASAutoAssetSetInfoInstance newShimmedToFramework:]( &OBJC_CLASS___MASAutoAssetSetInfoInstance,  "newShimmedToFramework:",  v8);
    -[NSMutableDictionary setSafeObject:forKey:](v89, "setSafeObject:forKey:", v93, @"setInstance");

    id v94 = +[MASAutoAssetSetInfoFound newShimmedToFramework:]( &OBJC_CLASS___MASAutoAssetSetInfoFound,  "newShimmedToFramework:",  v92);
    -[NSMutableDictionary setSafeObject:forKey:](v89, "setSafeObject:forKey:", v94, @"setFound");

    BOOL v95 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
    __int16 v96 = (void *)objc_claimAutoreleasedReturnValue([v160 clientRequestMessage]);
    id v97 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v96));
    __int16 v98 = (void *)objc_claimAutoreleasedReturnValue([v160 clientRequestMessage]);
    id v99 = (void *)objc_claimAutoreleasedReturnValue([v98 clientID]);
    unsigned __int8 v100 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v95,  "initWithType:messageName:clientID:version:message:",  2LL,  v97,  v99,  0LL,  v89);

    -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( v159,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v160,  v100,  0LL,  @"handleSetClientCurrentStatusRequest");
    id v101 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v159, "logger"));
    BOOL v102 = (os_log_s *)objc_claimAutoreleasedReturnValue([v101 oslog]);

    if (os_log_type_enabled(v102, OS_LOG_TYPE_DEFAULT))
    {
      v103 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v159, "_updateLatestSummary"));
      __int128 v104 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
      unsigned __int8 v105 = (void *)objc_claimAutoreleasedReturnValue([v174 summary]);
      uint64_t v106 = (void *)objc_claimAutoreleasedReturnValue([v160 summary]);
      *(_DWORD *)buf = 138544130;
      v184 = v103;
      __int16 v185 = 2114;
      v186 = v104;
      __int16 v187 = 2114;
      v188 = v105;
      __int16 v189 = 2114;
      v190 = v106;
      _os_log_impl( &dword_0,  v102,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {handleSetClientCurrentStatusRequest} current set-status request | setInstance:%{public}@, lastSetJ obStatus:%{public}@, event:%{public}@",  buf,  0x2Au);
    }

    uint64_t v107 = v160;
    id v21 = v174;
  }

  else
  {
    uint64_t v108 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v89 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue([v8 summary]);
    __int128 v92 = -[NSString initWithFormat:]( v108,  "initWithFormat:",  @"current status requested for unknown auto-asset-set (no status available for setInstance:%@)",  v89);
    uint64_t v107 = v160;
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( v159,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v160,  6301LL,  @"handleSetClientCurrentStatusRequest",  v92);
  }
}

- (id)setLockUsageMapForClientDomain:(id)a3 forSetIdentifier:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = -[MADAutoAssetControlManager newSetLockUsageMapKeyForClientDomain:forSetIdentifier:]( self,  "newSetLockUsageMapKeyForClientDomain:forSetIdentifier:",  v7,  v6);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager setLockUsageMap](self, "setLockUsageMap"));
  id v12 = [v11 safeObjectForKey:v10 ofClass:objc_opt_class(NSMutableDictionary)];
  unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

  return v13;
}

- (void)setLockUsageMapLockedSetDescriptor:(id)a3 forLockReason:(id)a4
{
  id v29 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  uint64_t v9 = -[NSNumber initWithLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLong:", 1LL);
  if (v9)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v29 clientDomainName]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v29 assetSetIdentifier]);
    id v12 = -[MADAutoAssetControlManager newSetLockUsageMapKeyForClientDomain:forSetIdentifier:]( self,  "newSetLockUsageMapKeyForClientDomain:forSetIdentifier:",  v10,  v11);

    unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager setLockUsageMap](self, "setLockUsageMap"));
    id v14 = [v13 safeObjectForKey:v12 ofClass:objc_opt_class(NSMutableDictionary)];
    uint64_t v15 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue(v14);

    if (!v15)
    {
      int v23 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      if (!v23)
      {
LABEL_16:

        goto LABEL_17;
      }

      uint64_t v15 = v23;
      id v18 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      if (v18)
      {
        id v24 = (void *)objc_claimAutoreleasedReturnValue([v29 latestDownloadedAtomicInstance]);
        -[NSMutableDictionary setSafeObject:forKey:](v18, "setSafeObject:forKey:", v9, v24);

        -[NSMutableDictionary setSafeObject:forKey:](v15, "setSafeObject:forKey:", v18, v6);
        __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager setLockUsageMap](self, "setLockUsageMap"));
        [v25 setSafeObject:v15 forKey:v12];
      }

      goto LABEL_14;
    }

    id v16 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v15,  "safeObjectForKey:ofClass:",  v6,  objc_opt_class(&OBJC_CLASS___NSMutableDictionary));
    uint64_t v17 = objc_claimAutoreleasedReturnValue(v16);
    if (v17)
    {
      id v18 = (NSMutableDictionary *)v17;
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v29 latestDownloadedAtomicInstance]);
      id v20 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v18,  "safeObjectForKey:ofClass:",  v19,  objc_opt_class(&OBJC_CLASS___NSNumber));
      id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);

      if (v21)
      {
        int v22 = -[NSNumber initWithLong:]( [NSNumber alloc],  "initWithLong:",  (char *)[v21 longValue] + -[NSNumber longValue](v9, "longValue"));

        if (!v22) {
          goto LABEL_14;
        }
      }

      else
      {
        int v22 = v9;
      }

      id v28 = (void *)objc_claimAutoreleasedReturnValue([v29 latestDownloadedAtomicInstance]);
      -[NSMutableDictionary setSafeObject:forKey:](v18, "setSafeObject:forKey:", v22, v28);
    }

    else
    {
      id v26 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      if (!v26)
      {
LABEL_15:

        goto LABEL_16;
      }

      id v18 = v26;
      id v27 = (void *)objc_claimAutoreleasedReturnValue([v29 latestDownloadedAtomicInstance]);
      -[NSMutableDictionary setSafeObject:forKey:](v18, "setSafeObject:forKey:", v9, v27);

      -[NSMutableDictionary setSafeObject:forKey:](v15, "setSafeObject:forKey:", v18, v6);
    }

- (void)handleSetClientEndAtomicLockRequest:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  @"handleSetClientEndAtomicLockRequest",  v5));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetDesire:]( self,  "clientRequestMessageSetDesire:",  v9));

  if (v8)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 atomicInstance]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
    unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSetIdentifier]);
    id v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:]( self,  "locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:",  v11,  v12,  v13,  @"handleSetClientEndAtomicLockRequest"));

    if (!v14)
    {
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6551LL,  @"handleSetClientEndAtomicLockRequest",  @"atomic-instance lock to be ended for unknown atomic-instance [presumed retired]");
LABEL_16:

      goto LABEL_17;
    }

    if (-[MADAutoAssetControlManager isShortTermLockableSetDescriptor:](self, "isShortTermLockableSetDescriptor:", v14))
    {
      id v29 = 0LL;
      unsigned __int8 v15 = -[MADAutoAssetControlManager removeShortTermLockingOfSetDescriptor:forSetDescriptor:endingAll:error:]( self,  "removeShortTermLockingOfSetDescriptor:forSetDescriptor:endingAll:error:",  @"handleSetClientEndAtomicLockRequest",  v14,  0LL,  &v29);
      id v16 = v29;
      if ((v15 & 1) == 0)
      {
        uint64_t v17 = @"failed to end SHORT-TERM locking of set-descriptor";
        goto LABEL_14;
      }
    }

    else
    {
      id v16 = 0LL;
    }

    id v21 = v16;
    int v22 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetSetClientName]);
    int v23 = (void *)objc_claimAutoreleasedReturnValue([v10 desireReason]);
    id v28 = v16;
    unsigned int v24 = +[MADAutoAssetLocker endedPreviousSetLocksByClient:forSetDescriptor:forLockReason:removingLockCount:endError:]( &OBJC_CLASS___MADAutoAssetLocker,  "endedPreviousSetLocksByClient:forSetDescriptor:forLockReason:removingLockCount:endError:",  v22,  v14,  v23,  1LL,  &v28);
    id v16 = v28;

    if (v24)
    {
      __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v10 desireReason]);
      -[MADAutoAssetControlManager setLockUsageMapEndedLockForSetDescriptor:forLockReason:endedLockCount:]( self,  "setLockUsageMapEndedLockForSetDescriptor:forLockReason:endedLockCount:",  v14,  v25,  1LL);

      if (!-[MADAutoAssetControlManager isSetDescriptorCurrentlyLocked:forSetDescriptor:]( self,  "isSetDescriptorCurrentlyLocked:forSetDescriptor:",  @"handleSetClientEndAtomicLockRequest",  v14)) {
        -[MADAutoAssetControlManager secureCheckUngraftAll:forSetDescriptorNoLongerLocked:]( self,  "secureCheckUngraftAll:forSetDescriptorNoLongerLocked:",  @"handleSetClientEndAtomicLockRequest",  v14);
      }
      -[MADAutoAssetControlManager _removeDownloadedSetDescriptorWithNewerDownloaded:fromLocation:]( self,  "_removeDownloadedSetDescriptorWithNewerDownloaded:fromLocation:",  v14,  @"handleSetClientEndAtomicLockRequest");
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  0LL,  @"handleSetClientEndAtomicLockRequest",  @"successful end of atomic-lock of auto-asset-set (for client-specified criteria)");
      id v26 = (void *)objc_claimAutoreleasedReturnValue([v14 clientDomainName]);
      id v27 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSetIdentifier]);
      -[MADAutoAssetControlManager finishSetEliminateIfAwaitingUnlocked:forClientDomain:forAssetSetIdentifier:]( self,  "finishSetEliminateIfAwaitingUnlocked:forClientDomain:forAssetSetIdentifier:",  @"handleSetClientEndAtomicLockRequest",  v26,  v27);

      goto LABEL_15;
    }

    uint64_t v17 = @"failed to end previous atomic-lock of auto-asset-set (for client-specified criteria)";
LABEL_14:
    -[MADAutoAssetControlManager issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  v5,  v16,  @"handleSetClientEndAtomicLockRequest",  v17);
LABEL_15:

    goto LABEL_16;
  }

  id v18 = objc_alloc(&OBJC_CLASS___NSString);
  id v19 = (void *)objc_claimAutoreleasedReturnValue([v5 summary]);
  id v20 = -[NSString initWithFormat:]( v18,  "initWithFormat:",  @"invalid set-eventInfo (instance:MISSING) | set-eventInfo:%@",  v19);
  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6102LL,  @"handleSetClientEndAtomicLockRequest",  v20);

LABEL_17:
}

- (void)setLockUsageMapEndedLockForSetDescriptor:(id)a3 forLockReason:(id)a4 endedLockCount:(int64_t)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  id v12 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
  unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSetIdentifier]);
  id v14 = -[MADAutoAssetControlManager newSetLockUsageMapKeyForClientDomain:forSetIdentifier:]( self,  "newSetLockUsageMapKeyForClientDomain:forSetIdentifier:",  v12,  v13);

  unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager setLockUsageMap](self, "setLockUsageMap"));
  id v50 = v14;
  id v16 = [v15 safeObjectForKey:v14 ofClass:objc_opt_class(NSMutableDictionary)];
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

  id v57 = v17;
  if (v17)
  {
    if (v9)
    {
      id v65 = v9;
      id v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v65, 1LL));
    }

    else
    {
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 allKeys]);
    }

    __int128 v60 = 0u;
    __int128 v61 = 0u;
    __int128 v58 = 0u;
    __int128 v59 = 0u;
    id obj = v18;
    id v56 = [obj countByEnumeratingWithState:&v58 objects:v64 count:16];
    if (v56)
    {
      uint64_t v55 = *(void *)v59;
      id v54 = self;
      id v52 = v9;
      do
      {
        __int16 v25 = 0LL;
        do
        {
          if (*(void *)v59 != v55) {
            objc_enumerationMutation(obj);
          }
          id v26 = [v17 safeObjectForKey:*(void *)(*((void *)&v58 + 1) + 8 * (void)v25) ofClass:objc_opt_class(NSMutableDictionary)];
          id v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
          if (!v27)
          {
            __int128 v37 = (NSNumber *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
            __int128 v38 = (void *)objc_claimAutoreleasedReturnValue(-[NSNumber diag](v37, "diag"));
            __int16 v39 = objc_alloc(&OBJC_CLASS___NSString);
            unsigned __int8 v40 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
            uint64_t v41 = -[NSString initWithFormat:]( v39,  "initWithFormat:",  @"{setLockUsageMapEndedLockForSetDescriptor} just ended locks when no lockReasonByAtomicInstanceUUID in lock-usage-map | justEndedReason:%@ | justEndedLockCount:%ld | setDescriptor:%@ | setIdentifierByLockReason:%@",  v9,  a5,  v40,  v17);
            [v38 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v41 withResult:6108 withError:0];

            self = v54;
            goto LABEL_17;
          }

          id v28 = (void *)objc_claimAutoreleasedReturnValue([v8 latestDownloadedAtomicInstance]);
          id v29 = [v27 safeObjectForKey:v28 ofClass:objc_opt_class(NSNumber)];
          unsigned __int8 v30 = (void *)objc_claimAutoreleasedReturnValue(v29);

          if (!v30)
          {
            unsigned __int8 v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
            id v33 = (void *)objc_claimAutoreleasedReturnValue([v30 diag]);
            id v42 = objc_alloc(&OBJC_CLASS___NSString);
            id v34 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
            uint64_t v35 = -[NSString initWithFormat:]( v42,  "initWithFormat:",  @"{setLockUsageMapEndedLockForSetDescriptor} just ended locks when no autoAssetLockCount in lock-usage-map | justEndedReason:%@ | justEndedLockCount:%ld | setDescriptor:%@ | lockReasonByAtomicInstanceUUID:%@",  v9,  a5,  v34,  v27);
            [v33 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v35 withResult:6108 withError:0];
LABEL_20:

            self = v54;
LABEL_21:

            goto LABEL_22;
          }

          signed int v31 = [v30 intValue];
          if (a5 == -1) {
            goto LABEL_21;
          }
          uint64_t v32 = v31;
          if (v31 < a5)
          {
            id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
            id v34 = (void *)objc_claimAutoreleasedReturnValue([v33 diag]);
            uint64_t v51 = objc_alloc(&OBJC_CLASS___NSString);
            uint64_t v35 = (NSString *)objc_claimAutoreleasedReturnValue([v8 summary]);
            uint64_t v49 = v32;
            id v9 = v52;
            id v36 = -[NSString initWithFormat:]( v51,  "initWithFormat:",  @"{setLockUsageMapEndedLockForSetDescriptor} just ended locks when previousLockCount(%ld) too small | justEndedReason:%@ | justEndedLockCount:%ld | setDescriptor:%@ | lockReasonByAtomicInstanceUUID:%@",  v49,  v52,  a5,  v35,  v27);
            [v34 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v36 withResult:6108 withError:0];

            goto LABEL_20;
          }

          if (v31 == a5)
          {
            id v9 = v52;
            goto LABEL_21;
          }

          __int128 v37 = -[NSNumber initWithLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLong:", v31 - a5);

          id v9 = v52;
          if (v37)
          {
            __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([v8 latestDownloadedAtomicInstance]);
            [v27 setSafeObject:v37 forKey:v38];
            goto LABEL_17;
          }

- (void)issueResponseForEventInfo:(id)a3 withErrorCode:(int64_t)a4 fromAction:(id)a5 withDescription:(id)a6
{
  id v15 = a3;
  id v10 = a5;
  id v11 = a6;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned __int8 v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v13);

  if (a4)
  {
    id v14 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"AUTO-CONTROL(%@)",  v10);
    a4 = objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  a4,  v14,  0LL,  v11));
  }

  -[MADAutoAssetControlManager issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  v15,  a4,  v10,  v11);
}

- (void)issueResponseForEventInfo:(id)a3 withAutoAssetError:(id)a4 fromAction:(id)a5 withDescription:(id)a6
{
  id v9 = a5;
  id v10 = a4;
  id v11 = a3;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned __int8 v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v13);

  id v14 = (void *)objc_claimAutoreleasedReturnValue([v11 clientRequestMessage]);
  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v14));
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v11 clientRequestMessage]);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 clientID]);
  id v18 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v15,  @"com.apple.MAAutoControl",  v17,  0LL,  v10));

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v11,  v18,  v10,  v9);
}

+ (id)createSeverMessageWithName:(id)a3 sender:(id)a4 clientID:(id)a5 response:(id)a6 error:(id)a7
{
  id v8 = a5;
  id v9 = a3;
  id v10 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v11 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( objc_alloc(&OBJC_CLASS___SUCoreConnectMessage),  "initWithType:messageName:clientID:version:message:",  2LL,  v9,  v8,  0LL,  v10);

  return v11;
}

- (BOOL)handleSetClientCheckAtomic:(id)a3 forAutoJob:(id)a4 instance:(id)a5 desire:(id)a6 fromLocation:(id)a7
{
  id v11 = a3;
  id v12 = a5;
  id v13 = a6;
  id v14 = a7;
  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v15 extendedStateQueue]);
  dispatch_assert_queue_V2(v16);

  uint64_t v17 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:handleSetClientCheckAtomic",  v14);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v11 clientRequest]);
  id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", v18));

  id v20 = (void *)objc_claimAutoreleasedReturnValue([v11 clientRequest]);
  unsigned __int8 v21 = +[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock");
  id v22 = [v13 checkWaitTimeoutSecs];
  if (!v22)
  {
    if ((v21 & 1) != 0)
    {
      int v23 = @"checkAtomic (NO_WAIT) requested when device before first-unlock";
LABEL_31:
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v11,  6251LL,  v17,  v23);
LABEL_32:
      id v22 = 0LL;
      goto LABEL_33;
    }

    id v115 = v19;
    id v24 = v13;
    __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
    id v26 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
    id v27 = v12;
    uint64_t v28 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v25,  v26));

    id v116 = (void *)v28;
    if (!v28)
    {
      int v23 = @"checkAtomic (NO_WAIT) unable to load set-configuration";
      id v12 = v27;
      id v13 = v24;
      goto LABEL_27;
    }

    id v29 = (void *)objc_claimAutoreleasedReturnValue([v27 atomicInstance]);

    id v12 = v27;
    if (v29)
    {
      unsigned __int8 v30 = (void *)objc_claimAutoreleasedReturnValue([v27 atomicInstance]);
      signed int v31 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v30));

      id v13 = v24;
      if (v31)
      {
        uint64_t v112 = v20;
        BOOL v102 = v24;
        uint64_t v32 = v31;
        id v33 = (void *)objc_claimAutoreleasedReturnValue([v31 clientDomainName]);
        id v34 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
        uint64_t v109 = v32;
        if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v33, v34) & 1) != 0)
        {
          id v108 = v14;
          uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v32 assetSetIdentifier]);
          id v36 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
          unsigned __int8 v37 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v35, v36);

          id v14 = v108;
          if ((v37 & 1) != 0)
          {
            id v100 = 0LL;
            id v13 = v102;
            id v20 = v112;
            id v19 = v115;
LABEL_10:
            __int128 v38 = v116;
            id v39 = v109;
LABEL_58:

            v45 = v39;
            goto LABEL_59;
          }
        }

        else
        {
        }

        int v23 = @"checkAtomic (NO_WAIT) requested specific atomic-instance not valid for given set-identifier";
        id v13 = v102;
        id v20 = v112;
        id v19 = v115;
LABEL_30:

        goto LABEL_31;
      }

      int v23 = @"checkAtomic (NO_WAIT) requested when no already downloaded asset-version available";
LABEL_27:
      id v19 = v115;
      goto LABEL_30;
    }

    id v108 = v14;
    unsigned __int8 v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    uint64_t v41 = (os_log_s *)objc_claimAutoreleasedReturnValue([v40 oslog]);

    id v13 = v24;
    if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
    {
      id v42 = (void *)objc_claimAutoreleasedReturnValue([v116 summary]);
      *(_DWORD *)buf = 138543618;
      __int128 v131 = v17;
      __int16 v132 = 2114;
      v133 = v42;
      _os_log_impl( &dword_0,  v41,  OS_LOG_TYPE_DEFAULT,  "{%{public}@}Determining atomic-instance to use for (NO_WAIT). setConfig:%{public}@",  buf,  0x16u);
    }

    id v43 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
    uint64_t v44 = objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
    v45 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedLatest:forAssetSetIdentifier:]( self,  "locateSetDescriptorDownloadedLatest:forAssetSetIdentifier:",  v43,  v44));

    id v46 = (void *)objc_claimAutoreleasedReturnValue([v116 autoAssetEntries]);
    LOBYTE(v44) = -[MADAutoAssetControlManager doesSetDescriptor:coverAllForAutoAssetEntries:]( self,  "doesSetDescriptor:coverAllForAutoAssetEntries:",  v45,  v46);

    id v19 = v115;
    id v113 = v20;
    if ((v44 & 1) == 0)
    {

      v45 = 0LL;
    }

    uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue([v116 latestAtomicInstanceToVend]);

    if (!v47
      || (id v48 = (void *)objc_claimAutoreleasedReturnValue([v116 latestAtomicInstanceToVend]),
          id v39 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v48)),  v48,  !v39))
    {
      uint64_t v49 = objc_claimAutoreleasedReturnValue([v12 autoAssetEntries]);
      if (!v49) {
        uint64_t v49 = objc_claimAutoreleasedReturnValue([v116 autoAssetEntries]);
      }
      v103 = (void *)v49;
      id v101 = (void *)objc_claimAutoreleasedReturnValue([v12 atomicInstance]);
      id v50 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
      uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
      LOBYTE(v99) = 1;
      uint64_t v110 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:forSetConfiguration:requestedAutoAssetEntries:performingNoWait:creatingIfPreviouslyStagedFound:fromLocation:]( self,  "locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:forSet Configuration:requestedAutoAssetEntries:performingNoWait:creatingIfPreviouslyStagedFound:fromLocation:",  v101,  v50,  v51,  v116,  v103,  1LL,  v99,  v17));

      id v39 = (id)v110;
      if (!v110)
      {
        id v39 = -[MADAutoAssetControlManager newSetDescriptorIfOtherSatisfying:forSetInfoInstance:]( self,  "newSetDescriptorIfOtherSatisfying:forSetInfoInstance:",  v17,  v12);
        if (!v39)
        {
          id v39 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager preInstalledSetDescriptorForSetInstance:dueToMessageName:fromLocation:]( self,  "preInstalledSetDescriptorForSetInstance:dueToMessageName:fromLocation:",  v12,  v115,  v17));
          if (!v39)
          {

            if (!v45)
            {
              int v23 = @"checkAtomic (NO_WAIT) requested when no latest atomic-instance to vend (and failed to locate set-descriptor satisfying [or build from pre-SU-staged]) (and not pre-installed)";
              id v14 = v108;
              id v20 = v113;
              goto LABEL_31;
            }

            id v100 = 0LL;
            id v20 = v113;
LABEL_59:
            id v128 = 0LL;
            int64_t v86 = -[MADAutoAssetControlManager _scheduleAndCreateSetConfiguration:fromLocation:errorString:]( self,  "_scheduleAndCreateSetConfiguration:fromLocation:errorString:",  v11,  v17,  &v128);
            id v87 = v128;
            if (v87)
            {
              -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v11,  v86,  v17,  v87);
            }

            else
            {
              if (-[MADAutoAssetControlManager _doesSetDescriptorRequirePersonalization:forSetDescriptor:]( self,  "_doesSetDescriptorRequirePersonalization:forSetDescriptor:",  v17,  v45))
              {
                unsigned __int8 v111 = v11;
                unsigned int v114 = v20;
                uint64_t v107 = v13;
                __int128 v127 = 0u;
                __int128 v125 = 0u;
                __int128 v126 = 0u;
                __int128 v124 = 0u;
                __int128 v88 = (void *)objc_claimAutoreleasedReturnValue([v45 latestDowloadedAtomicInstanceEntries]);
                id v89 = [v88 countByEnumeratingWithState:&v124 objects:v129 count:16];
                if (v89)
                {
                  id v90 = v89;
                  uint64_t v91 = *(void *)v125;
                  do
                  {
                    for (i = 0LL; i != v90; i = (char *)i + 1)
                    {
                      if (*(void *)v125 != v91) {
                        objc_enumerationMutation(v88);
                      }
                      id v93 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(*((void *)&v124 + 1) + 8 * (void)i) fullAssetSelector]);
                      id v94 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v93));

                      if (+[MADAutoAssetSecure isPersonalizationRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationRequired:forDescriptor:",  v17,  v94))
                      {
                        [v94 setSecureOperationInProgress:1];
                        [v45 setSecureOperationInProgress:1];
                      }
                    }

                    id v90 = [v88 countByEnumeratingWithState:&v124 objects:v129 count:16];
                  }

                  while (v90);
                }

                BOOL v95 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager autoAssetDescriptorsForSet:]( self,  "autoAssetDescriptorsForSet:",  v45));
                v117[0] = _NSConcreteStackBlock;
                v117[1] = 3221225472LL;
                v117[2] = __97__MADAutoAssetControlManager_handleSetClientCheckAtomic_forAutoJob_instance_desire_fromLocation___block_invoke;
                v117[3] = &unk_34F3A8;
                v117[4] = self;
                id v118 = v45;
                unsigned int v119 = v17;
                id v120 = v12;
                id v121 = v114;
                id v13 = v107;
                id v122 = v107;
                id v11 = v111;
                id v123 = v111;
                +[MADAutoAssetSecure personalizeSetDownloaded:forSetDescriptor:allowingNetwork:withAutoAssetDescriptors:completion:]( &OBJC_CLASS___MADAutoAssetSecure,  "personalizeSetDownloaded:forSetDescriptor:allowingNetwork:withAutoAssetDescriptors:completion:",  v119,  v118,  1LL,  v95,  v117);

                id v20 = v114;
                id v19 = v115;
              }

              else
              {
                id v96 = -[MADAutoAssetControlManager newSetDescriptorLimitedToCheckInformation:]( self,  "newSetDescriptorLimitedToCheckInformation:",  v45);
                id v97 = v19;
                __int16 v98 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildSetFoundResponseMessage:forClientRequest:withFoundSetDescriptor:withSubAtomicInstance:forLatestDownloaded:withInstance:withDesire:fromLocation:]( self,  "buildSetFoundResponseMessage:forClientRequest:withFoundSetDescriptor:withSubAtomicInst ance:forLatestDownloaded:withInstance:withDesire:fromLocation:",  @"checkAtomic",  v20,  v96,  0LL,  1LL,  v12,  v13,  v17));
                -[MADAutoAssetControlManager issueResponseToClientRequest:issuingResponseMessage:withResponseError:]( self,  "issueResponseToClientRequest:issuingResponseMessage:withResponseError:",  v20,  v98,  0LL);

                id v19 = v97;
              }

              id v87 = 0LL;
            }

            id v14 = v108;
            goto LABEL_32;
          }
        }
      }
    }

    if (!v45)
    {
      id v100 = 0LL;
      id v20 = v113;
      __int128 v38 = v116;
      goto LABEL_58;
    }

    uint64_t v52 = objc_claimAutoreleasedReturnValue([v45 latestDownloadedAtomicInstance]);
    uint64_t v53 = v39;
    id v54 = (void *)v52;
    uint64_t v109 = v53;
    uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v53 latestDownloadedAtomicInstance]);
    unsigned __int8 v56 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v54, v55);

    if ((v56 & 1) != 0)
    {
      id v20 = v113;
      id v19 = v115;
      id v57 = v109;
LABEL_57:

      id v85 = v45;
      __int128 v38 = v57;
      id v100 = v85;
      id v39 = v85;
      goto LABEL_58;
    }

    __int128 v60 = (void *)objc_claimAutoreleasedReturnValue([v45 clientDomainName]);
    unsigned int v61 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v60,  @"FROM_STAGED_FOR_ALL");

    id v20 = v113;
    if (v61)
    {
      unsigned int v62 = (void *)objc_claimAutoreleasedReturnValue([v45 requestedAutoAssetEntries]);

      __int16 v63 = (void *)objc_claimAutoreleasedReturnValue([v116 autoAssetEntries]);
      if (v62) {
        unsigned __int8 v64 = -[MADAutoAssetControlManager doesSetDescriptor:coverRequestedAutoAssetEntries:]( self,  "doesSetDescriptor:coverRequestedAutoAssetEntries:",  v45,  v63);
      }
      else {
        unsigned __int8 v64 = -[MADAutoAssetControlManager doesSetDescriptor:coverAllForAutoAssetEntries:]( self,  "doesSetDescriptor:coverAllForAutoAssetEntries:",  v45,  v63);
      }
      unsigned __int8 v79 = v64;

      if ((v79 & 1) == 0) {
        goto LABEL_47;
      }
    }

    else
    {
      id v65 = (void *)objc_claimAutoreleasedReturnValue([v116 autoAssetEntries]);
      unsigned int v66 = -[MADAutoAssetControlManager doesSetDescriptor:coverRequestedAutoAssetEntries:]( self,  "doesSetDescriptor:coverRequestedAutoAssetEntries:",  v45,  v65);

      if (!v66)
      {
LABEL_47:
        id v80 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        id v81 = (os_log_s *)objc_claimAutoreleasedReturnValue([v80 oslog]);

        id v19 = v115;
        if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
        {
          id v82 = (void *)objc_claimAutoreleasedReturnValue([v45 summary]);
          *(_DWORD *)buf = 138543618;
          __int128 v131 = v17;
          __int16 v132 = 2114;
          v133 = v82;
          _os_log_impl( &dword_0,  v81,  OS_LOG_TYPE_DEFAULT,  "{%{public}@} check-atomic found newer and latest - newer does not satisfy current set-configuration | newerD ownloadedSetDescriptor:%{public}@",  buf,  0x16u);
        }

        unsigned __int8 v77 = v81;
        id v57 = v109;
LABEL_56:

        goto LABEL_57;
      }
    }

    id v67 = (void *)objc_claimAutoreleasedReturnValue([v45 clientDomainName]);
    unsigned int v68 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v67,  @"FROM_STAGED_FOR_ALL");

    if (v68)
    {
      __int128 v104 = (void *)objc_claimAutoreleasedReturnValue([v116 clientDomainName]);
      uint64_t v69 = (void *)objc_claimAutoreleasedReturnValue([v116 assetSetIdentifier]);
      unsigned __int8 v70 = (void *)objc_claimAutoreleasedReturnValue([v116 autoAssetEntries]);
      LOBYTE(v99) = 1;
      uint64_t v71 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:forSetConfiguration:requestedAutoAssetEntries:performingNoWait:creatingIfPreviouslyStagedFound:fromLocation:]( self,  "locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:forSetC onfiguration:requestedAutoAssetEntries:performingNoWait:creatingIfPreviouslyStagedFound:fromLocation:",  0LL,  v104,  v69,  v116,  v70,  1LL,  v99,  v17));

      id v19 = v115;
      unsigned __int8 v105 = (void *)v71;
      if (!v71)
      {
        id v83 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        unsigned int v84 = (os_log_s *)objc_claimAutoreleasedReturnValue([v83 oslog]);

        id v20 = v113;
        if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR)) {
          -[MADAutoAssetControlManager handleSetClientCheckAtomic:forAutoJob:instance:desire:fromLocation:].cold.1();
        }

        id v100 = 0LL;
        goto LABEL_10;
      }

      uint64_t v72 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      v73 = (os_log_s *)objc_claimAutoreleasedReturnValue([v72 oslog]);

      id v20 = v113;
      id v57 = v109;
      if (os_log_type_enabled(v73, OS_LOG_TYPE_DEFAULT))
      {
        unsigned __int8 v74 = (void *)objc_claimAutoreleasedReturnValue([v109 summary]);
        *(_DWORD *)buf = 138543618;
        __int128 v131 = v17;
        __int16 v132 = 2114;
        v133 = v74;
        _os_log_impl( &dword_0,  v73,  OS_LOG_TYPE_DEFAULT,  "{%{public}@} check-atomic found newer(PSUS) and latest - vending new from PSUS | chosenDownloadedSetDescriptor:%{public}@",  buf,  0x16u);
      }

      unsigned __int8 v77 = v73;
      v45 = v105;
    }

    else
    {
      id v75 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      unsigned __int8 v76 = (os_log_s *)objc_claimAutoreleasedReturnValue([v75 oslog]);

      unsigned __int8 v77 = v76;
      BOOL v78 = os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT);
      id v19 = v115;
      id v57 = v109;
      if (v78)
      {
        uint64_t v106 = (void *)objc_claimAutoreleasedReturnValue([v45 summary]);
        *(_DWORD *)buf = 138543618;
        __int128 v131 = v17;
        __int16 v132 = 2114;
        v133 = v106;
        _os_log_impl( &dword_0,  v77,  OS_LOG_TYPE_DEFAULT,  "{%{public}@} check-atomic found newer and latest - newer not from PSUS (vending latest) | newerDownloadedSetDe scriptor:%{public}@",  buf,  0x16u);
      }
    }

    goto LABEL_56;
  }

- (id)newSetDescriptorLimitedToCheckInformation:(id)a3
{
  if (!a3) {
    return 0LL;
  }
  id v4 = a3;
  id v5 = [v4 copy];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 discoveredAtomicEntries]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _limitToCheckAtomicEntries:](self, "_limitToCheckAtomicEntries:", v6));
  [v5 setDiscoveredAtomicEntries:v7];

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDowloadedAtomicInstanceEntries]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _limitToCheckAtomicEntries:](self, "_limitToCheckAtomicEntries:", v8));
  [v5 setLatestDowloadedAtomicInstanceEntries:v9];

  return v5;
}

- (id)_limitToCheckAtomicEntries:(id)a3
{
  id v3 = a3;
  id v16 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  id v4 = v3;
  id v5 = [v4 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v18;
    do
    {
      id v8 = 0LL;
      do
      {
        if (*(void *)v18 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v17 + 1) + 8LL * (void)v8);
        id v10 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetAtomicEntry);
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 fullAssetSelector]);
        id v12 = (void *)objc_claimAutoreleasedReturnValue([v9 assetID]);
        id v13 = (void *)objc_claimAutoreleasedReturnValue([v9 assetAttributes]);
        id v14 = -[MANAutoAssetSetAtomicEntry initWithFullAssetSelector:withAssetID:withLocalContentURL:withAssetAttributes:inhibitedFromEmergencyRemoval:]( v10,  "initWithFullAssetSelector:withAssetID:withLocalContentURL:withAssetAttributes:inhibitedFromEmergencyRemoval:",  v11,  v12,  0,  v13,  [v9 inhibitedFromEmergencyRemoval]);

        if (v14) {
          -[NSMutableArray addObject:](v16, "addObject:", v14);
        }

        id v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }

    while (v6);
  }

  return v16;
}

+ (id)_getAutoControlManagerStateTable
{
  v737[0] = @"Startup";
  v735[0] = @"StartupBefore1st";
  uint64_t v2 = kSUCoreActionKey;
  v733[0] = kSUCoreNextStateKey;
  uint64_t v3 = kSUCoreNextStateKey;
  v733[1] = kSUCoreActionKey;
  v734[0] = @"Before1stBeforeResumeSync";
  v734[1] = @"StartUnlockPollingTimer";
  v250 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v734,  v733,  2LL));
  v736[0] = v250;
  v735[1] = @"StartupUnlocked";
  v731[0] = v3;
  v731[1] = v2;
  v732[0] = @"ResumingLockerSync";
  v732[1] = @"LoadPersistedResumeLocker";
  v249 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v732,  v731,  2LL));
  v736[1] = v249;
  v248 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v736,  v735,  2LL));
  v738[0] = v248;
  v737[1] = @"Before1stBeforeResumeSync";
  v729[0] = @"PollForDeviceUnlocked";
  uint64_t v727 = v2;
  v728 = @"PollDecideBefore1stUnlock";
  v247 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v728,  &v727,  1LL));
  v730[0] = v247;
  v729[1] = @"DownloadManagerSyncSkipped";
  uint64_t v725 = v2;
  v726 = @"SyncSkippedDecideBefore1st";
  v246 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v726,  &v725,  1LL));
  v730[1] = v246;
  v729[2] = @"DownloadManagerSynced";
  uint64_t v723 = v2;
  v724 = @"SyncDecideBefore1st";
  v245 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v724,  &v723,  1LL));
  v730[2] = v245;
  v729[3] = @"DownloadCatalogFinished";
  uint64_t v721 = v2;
  v722 = @"Before1stCatalogFinished";
  v244 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v722,  &v721,  1LL));
  v730[3] = v244;
  v729[4] = @"DownloadConfigFinished";
  uint64_t v719 = v2;
  v720 = @"Before1stConfigFinished";
  v243 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v720,  &v719,  1LL));
  v730[4] = v243;
  v729[5] = @"DownloadAssetFinished";
  uint64_t v717 = v2;
  v718 = @"Before1stAssetFinished";
  v242 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v718,  &v717,  1LL));
  v730[5] = v242;
  v729[6] = @"TimeoutAwaitingSynced";
  uint64_t v715 = v2;
  uint64_t v4 = kSUCoreFSMActionNoOp;
  uint64_t v716 = kSUCoreFSMActionNoOp;
  v241 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v716,  &v715,  1LL));
  v730[6] = v241;
  v729[7] = @"TimeoutClientQueued";
  uint64_t v713 = v2;
  v714 = @"FailClientTimedOut";
  v240 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v714,  &v713,  1LL));
  v730[7] = v240;
  v729[8] = @"ClientRequest";
  uint64_t v711 = v2;
  v712 = @"QueueClientRequestBefore1st";
  v239 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v712,  &v711,  1LL));
  v730[8] = v239;
  v729[9] = @"ClientClosed";
  uint64_t v709 = v2;
  v710 = @"RemoveQueuedClient";
  v238 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v710,  &v709,  1LL));
  v730[9] = v238;
  v729[10] = @"PushNotificationReceived";
  uint64_t v707 = v2;
  v708 = @"IgnorePushNotifications";
  v237 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v708,  &v707,  1LL));
  v730[10] = v237;
  v729[11] = @"SecureOperationsFinished";
  uint64_t v705 = v2;
  v706 = @"ClearInProgressSecure";
  v236 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v706,  &v705,  1LL));
  v730[11] = v236;
  v729[12] = @"SyncedStillBefore1st";
  uint64_t v703 = v3;
  v704 = @"Before1stBeforeResume";
  v235 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v704,  &v703,  1LL));
  v730[12] = v235;
  v729[13] = @"SyncedNowUnlocked";
  v701[0] = v3;
  v701[1] = v2;
  v702[0] = @"ResumingLocker";
  v702[1] = @"LoadPersistedResumeLocker";
  v234 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v702,  v701,  2LL));
  v730[13] = v234;
  v729[14] = @"PolledNowUnlocked";
  v699[0] = v3;
  v699[1] = v2;
  v700[0] = @"ResumingLockerSync";
  v700[1] = @"LoadPersistedResumeLocker";
  v233 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v700,  v699,  2LL));
  v730[14] = v233;
  v232 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v730,  v729,  15LL));
  v738[1] = v232;
  v737[2] = @"Before1stBeforeResume";
  v697[0] = @"PollForDeviceUnlocked";
  uint64_t v695 = v2;
  v696 = @"PollDecideBefore1stUnlock";
  v231 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v696,  &v695,  1LL));
  v698[0] = v231;
  v697[1] = @"DownloadManagerSyncSkipped";
  uint64_t v693 = v2;
  uint64_t v694 = v4;
  v230 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v694,  &v693,  1LL));
  v698[1] = v230;
  v697[2] = @"DownloadManagerSynced";
  uint64_t v691 = v2;
  v692 = @"SyncDecideBefore1st";
  v229 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v692,  &v691,  1LL));
  v698[2] = v229;
  v697[3] = @"DownloadCatalogFinished";
  uint64_t v689 = v2;
  v690 = @"Before1stCatalogFinished";
  v228 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v690,  &v689,  1LL));
  v698[3] = v228;
  v697[4] = @"DownloadConfigFinished";
  uint64_t v687 = v2;
  v688 = @"Before1stConfigFinished";
  v227 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v688,  &v687,  1LL));
  v698[4] = v227;
  v697[5] = @"DownloadAssetFinished";
  uint64_t v685 = v2;
  v686 = @"Before1stAssetFinished";
  v226 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v686,  &v685,  1LL));
  v698[5] = v226;
  v697[6] = @"TimeoutAwaitingSynced";
  uint64_t v683 = v2;
  uint64_t v684 = v4;
  v225 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v684,  &v683,  1LL));
  v698[6] = v225;
  v697[7] = @"TimeoutClientQueued";
  uint64_t v681 = v2;
  v682 = @"FailClientTimedOut";
  v224 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v682,  &v681,  1LL));
  v698[7] = v224;
  v697[8] = @"ClientRequest";
  uint64_t v679 = v2;
  v680 = @"QueueClientRequestBefore1st";
  v223 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v680,  &v679,  1LL));
  v698[8] = v223;
  v697[9] = @"ClientClosed";
  uint64_t v677 = v2;
  v678 = @"RemoveQueuedClient";
  v222 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v678,  &v677,  1LL));
  v698[9] = v222;
  v697[10] = @"PushNotificationReceived";
  uint64_t v675 = v2;
  v676 = @"IgnorePushNotifications";
  v221 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v676,  &v675,  1LL));
  v698[10] = v221;
  v697[11] = @"SecureOperationsFinished";
  uint64_t v673 = v2;
  v674 = @"ClearInProgressSecure";
  v220 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v674,  &v673,  1LL));
  v698[11] = v220;
  v697[12] = @"SyncedStillBefore1st";
  uint64_t v671 = v2;
  uint64_t v672 = v4;
  v219 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v672,  &v671,  1LL));
  v698[12] = v219;
  v697[13] = @"SyncedNowUnlocked";
  v669[0] = v3;
  v669[1] = v2;
  v670[0] = @"ResumingLocker";
  v670[1] = @"LoadPersistedResumeLocker";
  v218 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v670,  v669,  2LL));
  v698[13] = v218;
  v697[14] = @"PolledNowUnlocked";
  v667[0] = v3;
  v667[1] = v2;
  v668[0] = @"ResumingLocker";
  v668[1] = @"LoadPersistedResumeLocker";
  v217 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v668,  v667,  2LL));
  v698[14] = v217;
  v216 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v698,  v697,  15LL));
  v738[2] = v216;
  v737[3] = @"ResumingLockerSync";
  v665[0] = @"PollForDeviceUnlocked";
  uint64_t v663 = v2;
  uint64_t v664 = v4;
  v215 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v664,  &v663,  1LL));
  v666[0] = v215;
  v665[1] = @"LockerResumed";
  uint64_t v661 = v3;
  v662 = @"AwaitingSync";
  v214 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v662,  &v661,  1LL));
  v666[1] = v214;
  v665[2] = @"DownloadManagerSyncSkipped";
  uint64_t v659 = v3;
  v660 = @"ResumingLocker";
  v213 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v660,  &v659,  1LL));
  v666[2] = v213;
  v665[3] = @"DownloadManagerSynced";
  v657[0] = v3;
  v657[1] = v2;
  v658[0] = @"ResumingLocker";
  v658[1] = @"Synced";
  v212 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v658,  v657,  2LL));
  v666[3] = v212;
  v665[4] = @"DownloadCatalogFinished";
  uint64_t v655 = v2;
  v656 = @"QueueDownloadManager";
  v211 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v656,  &v655,  1LL));
  v666[4] = v211;
  v665[5] = @"DownloadConfigFinished";
  uint64_t v653 = v2;
  v654 = @"QueueDownloadManager";
  v210 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v654,  &v653,  1LL));
  v666[5] = v210;
  v665[6] = @"DownloadAssetFinished";
  uint64_t v651 = v2;
  v652 = @"QueueDownloadManager";
  v209 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v652,  &v651,  1LL));
  v666[6] = v209;
  v665[7] = @"TimeoutAwaitingSynced";
  v649[0] = v3;
  v649[1] = v2;
  v650[0] = @"ResumingLocker";
  v650[1] = @"SyncInFlightDownloads";
  v208 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v650,  v649,  2LL));
  v666[7] = v208;
  v665[8] = @"TimeoutClientQueued";
  uint64_t v647 = v2;
  v648 = @"FailClientTimedOut";
  v207 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v648,  &v647,  1LL));
  v666[8] = v207;
  v665[9] = @"ClientRequest";
  uint64_t v645 = v2;
  v646 = @"QueueClientRequest";
  v206 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v646,  &v645,  1LL));
  v666[9] = v206;
  v665[10] = @"ClientClosed";
  uint64_t v643 = v2;
  v644 = @"RemoveQueuedClient";
  v205 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v644,  &v643,  1LL));
  v666[10] = v205;
  v665[11] = @"PushNotificationReceived";
  uint64_t v641 = v2;
  v642 = @"IgnorePushNotifications";
  v204 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v642,  &v641,  1LL));
  v666[11] = v204;
  v665[12] = @"SecureOperationsFinished";
  uint64_t v639 = v2;
  v640 = @"ClearInProgressSecure";
  v203 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v640,  &v639,  1LL));
  v666[12] = v203;
  v202 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v666,  v665,  13LL));
  v738[3] = v202;
  v737[4] = @"ResumingLocker";
  v637[0] = @"PollForDeviceUnlocked";
  uint64_t v635 = v2;
  uint64_t v636 = v4;
  v201 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v636,  &v635,  1LL));
  v638[0] = v201;
  v637[1] = @"LockerResumed";
  v633[0] = v3;
  v633[1] = v2;
  v634[0] = @"ResumingStager";
  v634[1] = @"ResumeStager";
  v200 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v634,  v633,  2LL));
  v638[1] = v200;
  v637[2] = @"DownloadManagerSyncSkipped";
  uint64_t v631 = v2;
  uint64_t v632 = v4;
  v199 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v632,  &v631,  1LL));
  v638[2] = v199;
  v637[3] = @"DownloadManagerSynced";
  uint64_t v629 = v2;
  v630 = @"AdditionalSynced";
  v198 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v630,  &v629,  1LL));
  v638[3] = v198;
  v637[4] = @"DownloadCatalogFinished";
  uint64_t v627 = v2;
  v628 = @"QueueDownloadManager";
  v197 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v628,  &v627,  1LL));
  v638[4] = v197;
  v637[5] = @"DownloadConfigFinished";
  uint64_t v625 = v2;
  v626 = @"QueueDownloadManager";
  v196 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v626,  &v625,  1LL));
  v638[5] = v196;
  v637[6] = @"DownloadAssetFinished";
  uint64_t v623 = v2;
  v624 = @"QueueDownloadManager";
  v195 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v624,  &v623,  1LL));
  v638[6] = v195;
  v637[7] = @"TimeoutAwaitingSynced";
  uint64_t v621 = v2;
  uint64_t v622 = v4;
  v194 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v622,  &v621,  1LL));
  v638[7] = v194;
  v637[8] = @"TimeoutClientQueued";
  uint64_t v619 = v2;
  v620 = @"FailClientTimedOut";
  v193 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v620,  &v619,  1LL));
  v638[8] = v193;
  v637[9] = @"ClientRequest";
  uint64_t v617 = v2;
  v618 = @"QueueClientRequest";
  v192 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v618,  &v617,  1LL));
  v638[9] = v192;
  v637[10] = @"ClientClosed";
  uint64_t v615 = v2;
  v616 = @"RemoveQueuedClient";
  v191 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v616,  &v615,  1LL));
  v638[10] = v191;
  v637[11] = @"PushNotificationReceived";
  uint64_t v613 = v2;
  v614 = @"IgnorePushNotifications";
  v190 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v614,  &v613,  1LL));
  v638[11] = v190;
  v637[12] = @"SecureOperationsFinished";
  uint64_t v611 = v2;
  v612 = @"ClearInProgressSecure";
  __int16 v189 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v612,  &v611,  1LL));
  v638[12] = v189;
  v188 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v638,  v637,  13LL));
  v738[4] = v188;
  v737[5] = @"AwaitingSync";
  v609[0] = @"PollForDeviceUnlocked";
  uint64_t v607 = v2;
  uint64_t v608 = v4;
  __int16 v187 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v608,  &v607,  1LL));
  v610[0] = v187;
  v609[1] = @"DownloadManagerSyncSkipped";
  v605[0] = v3;
  v605[1] = v2;
  v606[0] = @"ResumingStager";
  v606[1] = @"ResumeStager";
  v186 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v606,  v605,  2LL));
  v610[1] = v186;
  v609[2] = @"DownloadManagerSynced";
  v603[0] = v3;
  v603[1] = v2;
  v604[0] = @"ResumingStager";
  v604[1] = @"SyncedResumeStager";
  __int16 v185 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v604,  v603,  2LL));
  v610[2] = v185;
  v609[3] = @"DownloadCatalogFinished";
  uint64_t v601 = v2;
  v602 = @"QueueDownloadManager";
  v184 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v602,  &v601,  1LL));
  v610[3] = v184;
  v609[4] = @"DownloadConfigFinished";
  uint64_t v599 = v2;
  v600 = @"QueueDownloadManager";
  v183 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v600,  &v599,  1LL));
  v610[4] = v183;
  v609[5] = @"DownloadAssetFinished";
  uint64_t v597 = v2;
  v598 = @"QueueDownloadManager";
  __int128 v182 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v598,  &v597,  1LL));
  v610[5] = v182;
  v609[6] = @"TimeoutAwaitingSynced";
  v595[0] = v3;
  v595[1] = v2;
  v596[0] = @"ResumingStager";
  v596[1] = @"ResumeStager";
  __int128 v181 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v596,  v595,  2LL));
  v610[6] = v181;
  v609[7] = @"TimeoutClientQueued";
  uint64_t v593 = v2;
  v594 = @"FailClientTimedOut";
  __int128 v180 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v594,  &v593,  1LL));
  v610[7] = v180;
  v609[8] = @"ClientRequest";
  uint64_t v591 = v2;
  v592 = @"QueueClientRequest";
  __int128 v179 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v592,  &v591,  1LL));
  v610[8] = v179;
  v609[9] = @"ClientClosed";
  uint64_t v589 = v2;
  v590 = @"RemoveQueuedClient";
  __int128 v178 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v590,  &v589,  1LL));
  v610[9] = v178;
  v609[10] = @"PushNotificationReceived";
  uint64_t v587 = v2;
  v588 = @"IgnorePushNotifications";
  __int128 v177 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v588,  &v587,  1LL));
  v610[10] = v177;
  v609[11] = @"SecureOperationsFinished";
  uint64_t v585 = v2;
  v586 = @"ClearInProgressSecure";
  __int128 v176 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v586,  &v585,  1LL));
  v610[11] = v176;
  __int128 v175 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v610,  v609,  12LL));
  v738[5] = v175;
  v737[6] = @"ResumingStager";
  v583[0] = @"PollForDeviceUnlocked";
  uint64_t v581 = v2;
  uint64_t v582 = v4;
  v174 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v582,  &v581,  1LL));
  v584[0] = v174;
  v583[1] = @"StagerResumed";
  v579[0] = v3;
  v579[1] = v2;
  v580[0] = @"MigratingAssets";
  v580[1] = @"PromoteStagedMigrate";
  v173 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v580,  v579,  2LL));
  v584[1] = v173;
  v583[2] = @"DownloadManagerSyncSkipped";
  uint64_t v577 = v2;
  uint64_t v578 = v4;
  v172 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v578,  &v577,  1LL));
  v584[2] = v172;
  v583[3] = @"DownloadManagerSynced";
  uint64_t v575 = v2;
  v576 = @"AdditionalSynced";
  v171 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v576,  &v575,  1LL));
  v584[3] = v171;
  v583[4] = @"DownloadCatalogFinished";
  uint64_t v573 = v2;
  v574 = @"QueueDownloadManager";
  id v170 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v574,  &v573,  1LL));
  v584[4] = v170;
  v583[5] = @"DownloadConfigFinished";
  uint64_t v571 = v2;
  v572 = @"QueueDownloadManager";
  id v169 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v572,  &v571,  1LL));
  v584[5] = v169;
  v583[6] = @"DownloadAssetFinished";
  uint64_t v569 = v2;
  v570 = @"QueueDownloadManager";
  v168 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v570,  &v569,  1LL));
  v584[6] = v168;
  v583[7] = @"TimeoutAwaitingSynced";
  uint64_t v567 = v2;
  uint64_t v568 = v4;
  __int16 v167 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v568,  &v567,  1LL));
  v584[7] = v167;
  v583[8] = @"TimeoutClientQueued";
  uint64_t v565 = v2;
  v566 = @"FailClientTimedOut";
  uint64_t v166 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v566,  &v565,  1LL));
  v584[8] = v166;
  v583[9] = @"ClientRequest";
  uint64_t v563 = v2;
  v564 = @"QueueClientRequest";
  __int16 v165 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v564,  &v563,  1LL));
  v584[9] = v165;
  v583[10] = @"ClientClosed";
  uint64_t v561 = v2;
  v562 = @"RemoveQueuedClient";
  v164 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v562,  &v561,  1LL));
  v584[10] = v164;
  v583[11] = @"PushNotificationReceived";
  uint64_t v559 = v2;
  v560 = @"IgnorePushNotifications";
  v163 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v560,  &v559,  1LL));
  v584[11] = v163;
  v583[12] = @"SecureOperationsFinished";
  uint64_t v557 = v2;
  v558 = @"ClearInProgressSecure";
  id v162 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v558,  &v557,  1LL));
  v584[12] = v162;
  id v161 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v584,  v583,  13LL));
  v738[6] = v161;
  v737[7] = @"MigratingAssets";
  v555[0] = @"PollForDeviceUnlocked";
  uint64_t v553 = v2;
  uint64_t v554 = v4;
  id v160 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v554,  &v553,  1LL));
  v556[0] = v160;
  v555[1] = @"MigratedAssets";
  uint64_t v551 = v2;
  v552 = @"DecideNeedPersonalize";
  v159 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v552,  &v551,  1LL));
  v556[1] = v159;
  v555[2] = @"DownloadManagerSyncSkipped";
  uint64_t v549 = v2;
  uint64_t v550 = v4;
  v158 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v550,  &v549,  1LL));
  v556[2] = v158;
  v555[3] = @"DownloadManagerSynced";
  uint64_t v547 = v2;
  v548 = @"AdditionalSynced";
  v157 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v548,  &v547,  1LL));
  v556[3] = v157;
  v555[4] = @"DownloadCatalogFinished";
  uint64_t v545 = v2;
  v546 = @"QueueDownloadManager";
  uint64_t v156 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v546,  &v545,  1LL));
  v556[4] = v156;
  v555[5] = @"DownloadConfigFinished";
  uint64_t v543 = v2;
  v544 = @"QueueDownloadManager";
  int v155 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v544,  &v543,  1LL));
  v556[5] = v155;
  v555[6] = @"DownloadAssetFinished";
  uint64_t v541 = v2;
  v542 = @"QueueDownloadManager";
  v154 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v542,  &v541,  1LL));
  v556[6] = v154;
  v555[7] = @"TimeoutAwaitingSynced";
  uint64_t v539 = v2;
  uint64_t v540 = v4;
  v153 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v540,  &v539,  1LL));
  v556[7] = v153;
  v555[8] = @"TimeoutClientQueued";
  uint64_t v537 = v2;
  v538 = @"FailClientTimedOut";
  v152 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v538,  &v537,  1LL));
  v556[8] = v152;
  v555[9] = @"ClientRequest";
  uint64_t v535 = v2;
  v536 = @"QueueClientRequest";
  v151 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v536,  &v535,  1LL));
  v556[9] = v151;
  v555[10] = @"ClientClosed";
  uint64_t v533 = v2;
  v534 = @"RemoveQueuedClient";
  v150 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v534,  &v533,  1LL));
  v556[10] = v150;
  v555[11] = @"JobObtainLookupGrant";
  uint64_t v531 = v2;
  v532 = @"ObtainLookupGrant";
  v149 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v532,  &v531,  1LL));
  v556[11] = v149;
  v555[12] = @"JobReleaseLookupGrant";
  uint64_t v529 = v2;
  v530 = @"ReleaseLookupGrant";
  id v148 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v530,  &v529,  1LL));
  v556[12] = v148;
  v555[13] = @"JobAssignPersistedState";
  uint64_t v527 = v2;
  v528 = @"ProvidePersistedForJob";
  v147 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v528,  &v527,  1LL));
  v556[13] = v147;
  v555[14] = @"JobSetLookupResponseReceived";
  uint64_t v525 = v2;
  v526 = @"SetJobLookupResponseRcvd";
  uint64_t v146 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v526,  &v525,  1LL));
  v556[14] = v146;
  v555[15] = @"JobIssueClientReply";
  uint64_t v523 = v2;
  v524 = @"IssueClientReplyJobResponse";
  __int16 v145 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v524,  &v523,  1LL));
  v556[15] = v145;
  v555[16] = @"JobFinished";
  uint64_t v521 = v2;
  v522 = @"RemoveFinishedJob";
  uint64_t v144 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v522,  &v521,  1LL));
  v556[16] = v144;
  v555[17] = @"SetJobIssueClientReply";
  uint64_t v519 = v2;
  v520 = @"IssueClientReplySetJob";
  __int16 v143 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v520,  &v519,  1LL));
  v556[17] = v143;
  v555[18] = @"PushNotificationReceived";
  uint64_t v517 = v2;
  v518 = @"IgnorePushNotifications";
  uint64_t v142 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v518,  &v517,  1LL));
  v556[18] = v142;
  v555[19] = @"SecureOperationsFinished";
  uint64_t v515 = v2;
  v516 = @"ClearInProgressSecure";
  __int16 v141 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v516,  &v515,  1LL));
  v556[19] = v141;
  v555[20] = @"StagerAlreadyDownloaded";
  uint64_t v513 = v2;
  v514 = @"StagerAlreadyDownloaded";
  uint64_t v140 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v514,  &v513,  1LL));
  v556[20] = v140;
  v555[21] = @"StagerStartDetermine";
  uint64_t v511 = v2;
  v512 = @"StagerJobStartDetermine";
  __int16 v139 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v512,  &v511,  1LL));
  v556[21] = v139;
  v555[22] = @"StagerStartDownload";
  uint64_t v509 = v2;
  v510 = @"StagerJobStartDownload";
  uint64_t v138 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v510,  &v509,  1LL));
  v556[22] = v138;
  v555[23] = @"StagerDetermineDone";
  uint64_t v507 = v2;
  v508 = @"StagerJobDoneDetermine";
  __int16 v137 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v508,  &v507,  1LL));
  v556[23] = v137;
  v555[24] = @"StagerDownloadDone";
  uint64_t v505 = v2;
  v506 = @"StagerJobDoneDownload";
  uint64_t v136 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v506,  &v505,  1LL));
  v556[24] = v136;
  v555[25] = @"StagerPurgeStagedContent";
  uint64_t v503 = v2;
  v504 = @"StagerRemoveAllNotPromoted";
  __int16 v135 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v504,  &v503,  1LL));
  v556[25] = v135;
  v555[26] = @"HaveNeedingPersonalize";
  v501[0] = v3;
  v501[1] = v2;
  v502[0] = @"ResumingPersonalizing";
  v502[1] = @"AttemptNextPersonalize";
  uint64_t v134 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v502,  v501,  2LL));
  v556[26] = v134;
  v555[27] = @"HaveNeedingGraft";
  v499[0] = v3;
  v499[1] = v2;
  v500[0] = @"ResumingGrafting";
  v500[1] = @"AttemptNextGraft";
  v133 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v500,  v499,  2LL));
  v556[27] = v133;
  v555[28] = @"NoneNeedingPersonalize";
  v497[0] = v3;
  v497[1] = v2;
  v498[0] = @"ResumingScheduler";
  v498[1] = @"ResumeScheduler";
  __int16 v132 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v498,  v497,  2LL));
  v556[28] = v132;
  __int128 v131 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v556,  v555,  29LL));
  v738[7] = v131;
  v737[8] = @"ResumingPersonalizing";
  v495[0] = @"PollForDeviceUnlocked";
  uint64_t v493 = v2;
  uint64_t v494 = v4;
  __int128 v130 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v494,  &v493,  1LL));
  v496[0] = v130;
  v495[1] = @"DownloadManagerSyncSkipped";
  uint64_t v491 = v2;
  uint64_t v492 = v4;
  __int128 v129 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v492,  &v491,  1LL));
  v496[1] = v129;
  v495[2] = @"DownloadManagerSynced";
  uint64_t v489 = v2;
  v490 = @"AdditionalSynced";
  id v128 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v490,  &v489,  1LL));
  v496[2] = v128;
  v495[3] = @"DownloadCatalogFinished";
  uint64_t v487 = v2;
  v488 = @"QueueDownloadManager";
  __int128 v127 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v488,  &v487,  1LL));
  v496[3] = v127;
  v495[4] = @"DownloadConfigFinished";
  uint64_t v485 = v2;
  v486 = @"QueueDownloadManager";
  __int128 v126 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v486,  &v485,  1LL));
  v496[4] = v126;
  v495[5] = @"DownloadAssetFinished";
  uint64_t v483 = v2;
  v484 = @"QueueDownloadManager";
  __int128 v125 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v484,  &v483,  1LL));
  v496[5] = v125;
  v495[6] = @"TimeoutAwaitingSynced";
  uint64_t v481 = v2;
  uint64_t v482 = v4;
  __int128 v124 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v482,  &v481,  1LL));
  v496[6] = v124;
  v495[7] = @"TimeoutClientQueued";
  uint64_t v479 = v2;
  v480 = @"FailClientTimedOut";
  id v123 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v480,  &v479,  1LL));
  v496[7] = v123;
  v495[8] = @"ClientRequest";
  uint64_t v477 = v2;
  v478 = @"QueueClientRequest";
  id v122 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v478,  &v477,  1LL));
  v496[8] = v122;
  v495[9] = @"ClientClosed";
  uint64_t v475 = v2;
  v476 = @"RemoveQueuedClient";
  id v121 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v476,  &v475,  1LL));
  v496[9] = v121;
  v495[10] = @"JobObtainLookupGrant";
  uint64_t v473 = v2;
  v474 = @"ObtainLookupGrant";
  id v120 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v474,  &v473,  1LL));
  v496[10] = v120;
  v495[11] = @"JobReleaseLookupGrant";
  uint64_t v471 = v2;
  v472 = @"ReleaseLookupGrant";
  unsigned int v119 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v472,  &v471,  1LL));
  v496[11] = v119;
  v495[12] = @"JobAssignPersistedState";
  uint64_t v469 = v2;
  v470 = @"ProvidePersistedForJob";
  id v118 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v470,  &v469,  1LL));
  v496[12] = v118;
  v495[13] = @"JobSetLookupResponseReceived";
  uint64_t v467 = v2;
  v468 = @"SetJobLookupResponseRcvd";
  uint64_t v117 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v468,  &v467,  1LL));
  v496[13] = v117;
  v495[14] = @"JobIssueClientReply";
  uint64_t v465 = v2;
  v466 = @"IssueClientReplyJobResponse";
  id v116 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v466,  &v465,  1LL));
  v496[14] = v116;
  v495[15] = @"JobFinished";
  uint64_t v463 = v2;
  v464 = @"RemoveFinishedJob";
  id v115 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v464,  &v463,  1LL));
  v496[15] = v115;
  v495[16] = @"SetJobIssueClientReply";
  uint64_t v461 = v2;
  v462 = @"IssueClientReplySetJob";
  unsigned int v114 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v462,  &v461,  1LL));
  v496[16] = v114;
  v495[17] = @"PushNotificationReceived";
  uint64_t v459 = v2;
  v460 = @"IgnorePushNotifications";
  id v113 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v460,  &v459,  1LL));
  v496[17] = v113;
  v495[18] = @"SecureOperationsFinished";
  uint64_t v457 = v2;
  v458 = @"ClearInProgressSecure";
  uint64_t v112 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v458,  &v457,  1LL));
  v496[18] = v112;
  v495[19] = @"StartupPersonalizeSuccess";
  uint64_t v455 = v2;
  v456 = @"PersonalizeSuccessDecideMore";
  unsigned __int8 v111 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v456,  &v455,  1LL));
  v496[19] = v111;
  v495[20] = @"StartupPersonalizeFailed";
  uint64_t v453 = v2;
  v454 = @"PersonalizeFailureDecideMore";
  uint64_t v110 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v454,  &v453,  1LL));
  v496[20] = v110;
  v495[21] = @"StagerAlreadyDownloaded";
  uint64_t v451 = v2;
  v452 = @"StagerAlreadyDownloaded";
  uint64_t v109 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v452,  &v451,  1LL));
  v496[21] = v109;
  v495[22] = @"StagerStartDetermine";
  uint64_t v449 = v2;
  v450 = @"StagerJobStartDetermine";
  id v108 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v450,  &v449,  1LL));
  v496[22] = v108;
  v495[23] = @"StagerStartDownload";
  uint64_t v447 = v2;
  v448 = @"StagerJobStartDownload";
  uint64_t v107 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v448,  &v447,  1LL));
  v496[23] = v107;
  v495[24] = @"StagerDetermineDone";
  uint64_t v445 = v2;
  v446 = @"StagerJobDoneDetermine";
  uint64_t v106 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v446,  &v445,  1LL));
  v496[24] = v106;
  v495[25] = @"StagerDownloadDone";
  uint64_t v443 = v2;
  v444 = @"StagerJobDoneDownload";
  unsigned __int8 v105 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v444,  &v443,  1LL));
  v496[25] = v105;
  v495[26] = @"StagerPurgeStagedContent";
  uint64_t v441 = v2;
  v442 = @"StagerRemoveAllNotPromoted";
  __int128 v104 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v442,  &v441,  1LL));
  v496[26] = v104;
  v495[27] = @"HaveNeedingPersonalize";
  uint64_t v439 = v2;
  v440 = @"AttemptNextPersonalize";
  v103 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v440,  &v439,  1LL));
  v496[27] = v103;
  v495[28] = @"NoneNeedingPersonalize";
  uint64_t v437 = v2;
  v438 = @"DecideNeedGraft";
  BOOL v102 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v438,  &v437,  1LL));
  v496[28] = v102;
  v495[29] = @"HaveNeedingGraft";
  v435[0] = v3;
  v435[1] = v2;
  v436[0] = @"ResumingGrafting";
  v436[1] = @"AttemptNextGraft";
  id v101 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v436,  v435,  2LL));
  v496[29] = v101;
  v495[30] = @"NoneNeedingGraft";
  v433[0] = v3;
  v433[1] = v2;
  v434[0] = @"ResumingScheduler";
  v434[1] = @"ResumeScheduler";
  id v100 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v434,  v433,  2LL));
  v496[30] = v100;
  uint64_t v99 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v496,  v495,  31LL));
  v738[8] = v99;
  v737[9] = @"ResumingGrafting";
  v431[0] = @"PollForDeviceUnlocked";
  uint64_t v429 = v2;
  uint64_t v430 = v4;
  __int16 v98 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v430,  &v429,  1LL));
  v432[0] = v98;
  v431[1] = @"DownloadManagerSyncSkipped";
  uint64_t v427 = v2;
  uint64_t v428 = v4;
  id v97 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v428,  &v427,  1LL));
  v432[1] = v97;
  v431[2] = @"DownloadManagerSynced";
  uint64_t v425 = v2;
  v426 = @"AdditionalSynced";
  id v96 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v426,  &v425,  1LL));
  v432[2] = v96;
  v431[3] = @"DownloadCatalogFinished";
  uint64_t v423 = v2;
  v424 = @"QueueDownloadManager";
  BOOL v95 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v424,  &v423,  1LL));
  v432[3] = v95;
  v431[4] = @"DownloadConfigFinished";
  uint64_t v421 = v2;
  v422 = @"QueueDownloadManager";
  id v94 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v422,  &v421,  1LL));
  v432[4] = v94;
  v431[5] = @"DownloadAssetFinished";
  uint64_t v419 = v2;
  v420 = @"QueueDownloadManager";
  id v93 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v420,  &v419,  1LL));
  v432[5] = v93;
  v431[6] = @"TimeoutAwaitingSynced";
  uint64_t v417 = v2;
  uint64_t v418 = v4;
  __int128 v92 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v418,  &v417,  1LL));
  v432[6] = v92;
  v431[7] = @"TimeoutClientQueued";
  uint64_t v415 = v2;
  v416 = @"FailClientTimedOut";
  uint64_t v91 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v416,  &v415,  1LL));
  v432[7] = v91;
  v431[8] = @"ClientRequest";
  uint64_t v413 = v2;
  v414 = @"QueueClientRequest";
  id v90 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v414,  &v413,  1LL));
  v432[8] = v90;
  v431[9] = @"ClientClosed";
  uint64_t v411 = v2;
  v412 = @"RemoveQueuedClient";
  id v89 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v412,  &v411,  1LL));
  v432[9] = v89;
  v431[10] = @"JobObtainLookupGrant";
  uint64_t v409 = v2;
  v410 = @"ObtainLookupGrant";
  __int128 v88 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v410,  &v409,  1LL));
  v432[10] = v88;
  v431[11] = @"JobReleaseLookupGrant";
  uint64_t v407 = v2;
  v408 = @"ReleaseLookupGrant";
  id v87 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v408,  &v407,  1LL));
  v432[11] = v87;
  v431[12] = @"JobAssignPersistedState";
  uint64_t v405 = v2;
  v406 = @"ProvidePersistedForJob";
  int64_t v86 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v406,  &v405,  1LL));
  v432[12] = v86;
  v431[13] = @"JobSetLookupResponseReceived";
  uint64_t v403 = v2;
  v404 = @"SetJobLookupResponseRcvd";
  id v85 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v404,  &v403,  1LL));
  v432[13] = v85;
  v431[14] = @"JobIssueClientReply";
  uint64_t v401 = v2;
  v402 = @"IssueClientReplyJobResponse";
  unsigned int v84 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v402,  &v401,  1LL));
  v432[14] = v84;
  v431[15] = @"JobFinished";
  uint64_t v399 = v2;
  v400 = @"RemoveFinishedJob";
  id v83 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v400,  &v399,  1LL));
  v432[15] = v83;
  v431[16] = @"SetJobIssueClientReply";
  uint64_t v397 = v2;
  v398 = @"IssueClientReplySetJob";
  id v82 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v398,  &v397,  1LL));
  v432[16] = v82;
  v431[17] = @"PushNotificationReceived";
  uint64_t v395 = v2;
  v396 = @"IgnorePushNotifications";
  id v81 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v396,  &v395,  1LL));
  v432[17] = v81;
  v431[18] = @"SecureOperationsFinished";
  uint64_t v393 = v2;
  v394 = @"ClearInProgressSecure";
  id v80 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v394,  &v393,  1LL));
  v432[18] = v80;
  v431[19] = @"StartupGraftSuccess";
  uint64_t v391 = v2;
  v392 = @"GraftSuccessDecideMore";
  unsigned __int8 v79 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v392,  &v391,  1LL));
  v432[19] = v79;
  v431[20] = @"StartupGraftFailed";
  uint64_t v389 = v2;
  v390 = @"GraftFailureDecideMore";
  BOOL v78 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v390,  &v389,  1LL));
  v432[20] = v78;
  v431[21] = @"StagerAlreadyDownloaded";
  uint64_t v387 = v2;
  v388 = @"StagerAlreadyDownloaded";
  unsigned __int8 v77 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v388,  &v387,  1LL));
  v432[21] = v77;
  v431[22] = @"StagerStartDetermine";
  uint64_t v385 = v2;
  v386 = @"StagerJobStartDetermine";
  unsigned __int8 v76 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v386,  &v385,  1LL));
  v432[22] = v76;
  v431[23] = @"StagerStartDownload";
  uint64_t v383 = v2;
  v384 = @"StagerJobStartDownload";
  id v75 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v384,  &v383,  1LL));
  v432[23] = v75;
  v431[24] = @"StagerDetermineDone";
  uint64_t v381 = v2;
  v382 = @"StagerJobDoneDetermine";
  unsigned __int8 v74 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v382,  &v381,  1LL));
  v432[24] = v74;
  v431[25] = @"StagerDownloadDone";
  uint64_t v379 = v2;
  v380 = @"StagerJobDoneDownload";
  v73 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v380,  &v379,  1LL));
  v432[25] = v73;
  v431[26] = @"StagerPurgeStagedContent";
  uint64_t v377 = v2;
  v378 = @"StagerRemoveAllNotPromoted";
  uint64_t v72 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v378,  &v377,  1LL));
  v432[26] = v72;
  v431[27] = @"HaveNeedingGraft";
  uint64_t v375 = v2;
  v376 = @"AttemptNextGraft";
  uint64_t v71 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v376,  &v375,  1LL));
  v432[27] = v71;
  v431[28] = @"NoneNeedingGraft";
  v373[0] = v3;
  v373[1] = v2;
  v374[0] = @"ResumingScheduler";
  v374[1] = @"ResumeScheduler";
  unsigned __int8 v70 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v374,  v373,  2LL));
  v432[28] = v70;
  uint64_t v69 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v432,  v431,  29LL));
  v738[9] = v69;
  v737[10] = @"ResumingScheduler";
  v371[0] = @"PollForDeviceUnlocked";
  uint64_t v369 = v2;
  uint64_t v370 = v4;
  unsigned int v68 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v370,  &v369,  1LL));
  v372[0] = v68;
  v371[1] = @"SchedulerResumed";
  v367[0] = v3;
  v367[1] = v2;
  v368[0] = @"Active";
  v368[1] = @"ResumeJobs";
  id v67 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v368,  v367,  2LL));
  v372[1] = v67;
  v371[2] = @"DownloadManagerSyncSkipped";
  uint64_t v365 = v2;
  uint64_t v366 = v4;
  unsigned int v66 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v366,  &v365,  1LL));
  v372[2] = v66;
  v371[3] = @"DownloadManagerSynced";
  uint64_t v363 = v2;
  uint64_t v364 = v4;
  id v65 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v364,  &v363,  1LL));
  v372[3] = v65;
  v371[4] = @"DownloadCatalogFinished";
  uint64_t v361 = v2;
  v362 = @"QueueDownloadManager";
  unsigned __int8 v64 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v362,  &v361,  1LL));
  v372[4] = v64;
  v371[5] = @"DownloadConfigFinished";
  uint64_t v359 = v2;
  v360 = @"QueueDownloadManager";
  __int16 v63 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v360,  &v359,  1LL));
  v372[5] = v63;
  v371[6] = @"DownloadAssetFinished";
  uint64_t v357 = v2;
  v358 = @"QueueDownloadManager";
  unsigned int v62 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v358,  &v357,  1LL));
  v372[6] = v62;
  v371[7] = @"TimeoutAwaitingSynced";
  uint64_t v355 = v2;
  uint64_t v356 = v4;
  unsigned int v61 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v356,  &v355,  1LL));
  v372[7] = v61;
  v371[8] = @"TimeoutClientQueued";
  uint64_t v353 = v2;
  v354 = @"FailClientTimedOut";
  __int128 v60 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v354,  &v353,  1LL));
  v372[8] = v60;
  v371[9] = @"ClientRequest";
  uint64_t v351 = v2;
  v352 = @"QueueClientRequest";
  __int128 v59 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v352,  &v351,  1LL));
  v372[9] = v59;
  v371[10] = @"ClientClosed";
  uint64_t v349 = v2;
  v350 = @"RemoveQueuedClient";
  BOOL v58 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v350,  &v349,  1LL));
  v372[10] = v58;
  v371[11] = @"JobObtainLookupGrant";
  uint64_t v347 = v2;
  v348 = @"ObtainLookupGrant";
  unsigned __int8 v56 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v348,  &v347,  1LL));
  v372[11] = v56;
  v371[12] = @"JobReleaseLookupGrant";
  uint64_t v345 = v2;
  v346 = @"ReleaseLookupGrant";
  uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v346,  &v345,  1LL));
  v372[12] = v55;
  v371[13] = @"JobAssignPersistedState";
  uint64_t v343 = v2;
  v344 = @"ProvidePersistedForJob";
  id v54 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v344,  &v343,  1LL));
  v372[13] = v54;
  v371[14] = @"JobSetLookupResponseReceived";
  uint64_t v341 = v2;
  v342 = @"SetJobLookupResponseRcvd";
  uint64_t v53 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v342,  &v341,  1LL));
  v372[14] = v53;
  v371[15] = @"JobIssueClientReply";
  uint64_t v339 = v2;
  v340 = @"IssueClientReplyJobResponse";
  uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v340,  &v339,  1LL));
  v372[15] = v52;
  v371[16] = @"JobFinished";
  uint64_t v337 = v2;
  v338 = @"RemoveFinishedJob";
  uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v338,  &v337,  1LL));
  v372[16] = v51;
  v371[17] = @"SetJobIssueClientReply";
  uint64_t v335 = v2;
  v336 = @"IssueClientReplySetJob";
  id v50 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v336,  &v335,  1LL));
  v372[17] = v50;
  v371[18] = @"PushNotificationReceived";
  uint64_t v333 = v2;
  v334 = @"IgnorePushNotifications";
  uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v334,  &v333,  1LL));
  v372[18] = v49;
  v371[19] = @"SecureOperationsFinished";
  uint64_t v331 = v2;
  v332 = @"ClearInProgressSecure";
  id v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v332,  &v331,  1LL));
  v372[19] = v48;
  v371[20] = @"StagerAlreadyDownloaded";
  uint64_t v329 = v2;
  v330 = @"StagerAlreadyDownloaded";
  uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v330,  &v329,  1LL));
  v372[20] = v47;
  v371[21] = @"StagerStartDetermine";
  uint64_t v327 = v2;
  v328 = @"StagerJobStartDetermine";
  id v46 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v328,  &v327,  1LL));
  v372[21] = v46;
  v371[22] = @"StagerStartDownload";
  uint64_t v325 = v2;
  v326 = @"StagerJobStartDownload";
  v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v326,  &v325,  1LL));
  v372[22] = v45;
  v371[23] = @"StagerDetermineDone";
  uint64_t v323 = v2;
  v324 = @"StagerJobDoneDetermine";
  uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v324,  &v323,  1LL));
  v372[23] = v44;
  v371[24] = @"StagerDownloadDone";
  uint64_t v321 = v2;
  v322 = @"StagerJobDoneDownload";
  id v43 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v322,  &v321,  1LL));
  v372[24] = v43;
  v371[25] = @"StagerPurgeStagedContent";
  uint64_t v319 = v2;
  v320 = @"StagerRemoveAllNotPromoted";
  id v42 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v320,  &v319,  1LL));
  v372[25] = v42;
  uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v372,  v371,  26LL));
  v738[10] = v41;
  v737[11] = @"Active";
  v317[0] = @"PollForDeviceUnlocked";
  uint64_t v315 = v2;
  uint64_t v316 = v4;
  unsigned __int8 v40 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v316,  &v315,  1LL));
  v318[0] = v40;
  v317[1] = @"DownloadManagerSyncSkipped";
  uint64_t v313 = v2;
  uint64_t v314 = v4;
  id v39 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v314,  &v313,  1LL));
  v318[1] = v39;
  v317[2] = @"DownloadManagerSynced";
  uint64_t v311 = v2;
  v312 = @"AdditionalSynced";
  __int128 v38 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v312,  &v311,  1LL));
  v318[2] = v38;
  v317[3] = @"DownloadCatalogFinished";
  uint64_t v309 = v2;
  v310 = @"RouteCatalogFinished";
  unsigned __int8 v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v310,  &v309,  1LL));
  v318[3] = v37;
  v317[4] = @"DownloadConfigFinished";
  uint64_t v307 = v2;
  v308 = @"RouteConfigFinished";
  id v36 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v308,  &v307,  1LL));
  v318[4] = v36;
  v317[5] = @"DownloadAssetFinished";
  uint64_t v305 = v2;
  v306 = @"RouteAssetFinished";
  uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v306,  &v305,  1LL));
  v318[5] = v35;
  v317[6] = @"TimeoutAwaitingSynced";
  uint64_t v303 = v2;
  uint64_t v304 = v4;
  id v34 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v304,  &v303,  1LL));
  v318[6] = v34;
  v317[7] = @"ClientRequest";
  uint64_t v301 = v2;
  v302 = @"RouteClientRequest";
  id v33 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v302,  &v301,  1LL));
  v318[7] = v33;
  v317[8] = @"ClientClosed";
  uint64_t v299 = v2;
  v300 = @"RouteClientClosed";
  uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v300,  &v299,  1LL));
  v318[8] = v32;
  v317[9] = @"JobObtainLookupGrant";
  uint64_t v297 = v2;
  v298 = @"ObtainLookupGrant";
  signed int v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v298,  &v297,  1LL));
  v318[9] = v31;
  v317[10] = @"JobReleaseLookupGrant";
  uint64_t v295 = v2;
  v296 = @"ReleaseLookupGrant";
  unsigned __int8 v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v296,  &v295,  1LL));
  v318[10] = v30;
  v317[11] = @"JobAssignPersistedState";
  uint64_t v293 = v2;
  v294 = @"ProvidePersistedForJob";
  id v29 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v294,  &v293,  1LL));
  v318[11] = v29;
  v317[12] = @"JobSetLookupResponseReceived";
  uint64_t v291 = v2;
  v292 = @"SetJobLookupResponseRcvd";
  uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v292,  &v291,  1LL));
  v318[12] = v28;
  v317[13] = @"JobIssueClientReply";
  uint64_t v289 = v2;
  v290 = @"IssueClientReplyJobResponse";
  id v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v290,  &v289,  1LL));
  v318[13] = v27;
  v317[14] = @"JobFinished";
  uint64_t v287 = v2;
  v288 = @"RemoveFinishedJob";
  id v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v288,  &v287,  1LL));
  v318[14] = v26;
  v317[15] = @"SetJobIssueClientReply";
  uint64_t v285 = v2;
  v286 = @"IssueClientReplySetJob";
  __int16 v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v286,  &v285,  1LL));
  v318[15] = v25;
  v317[16] = @"SchedulerTriggered";
  uint64_t v283 = v2;
  v284 = @"ScheduleJobs";
  id v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v284,  &v283,  1LL));
  v318[16] = v24;
  v317[17] = @"SchedulerSetsTriggered";
  uint64_t v281 = v2;
  v282 = @"ScheduleSetJobs";
  int v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v282,  &v281,  1LL));
  v318[17] = v23;
  v317[18] = @"SchedulerNoActivity";
  uint64_t v279 = v2;
  v280 = @"LogStatistics";
  id v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v280,  &v279,  1LL));
  v318[18] = v22;
  v317[19] = @"SchedulerEliminatedSelector";
  uint64_t v277 = v2;
  v278 = @"EliminateSchedulerDone";
  unsigned __int8 v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v278,  &v277,  1LL));
  v318[19] = v21;
  v317[20] = @"PushNotificationReceived";
  uint64_t v275 = v2;
  v276 = @"HandlePushNotifications";
  __int128 v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v276,  &v275,  1LL));
  v318[20] = v20;
  v317[21] = @"SecureOperationsFinished";
  uint64_t v273 = v2;
  v274 = @"ClearInProgressSecure";
  __int128 v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v274,  &v273,  1LL));
  v318[21] = v19;
  v317[22] = @"StagerAlreadyDownloaded";
  uint64_t v271 = v2;
  v272 = @"StagerAlreadyDownloaded";
  __int128 v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v272,  &v271,  1LL));
  v318[22] = v18;
  v317[23] = @"StagerStartDetermine";
  uint64_t v269 = v2;
  v270 = @"StagerJobStartDetermine";
  __int128 v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v270,  &v269,  1LL));
  v318[23] = v17;
  v317[24] = @"StagerStartDownload";
  uint64_t v267 = v2;
  v268 = @"StagerJobStartDownload";
  id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v268,  &v267,  1LL));
  v318[24] = v16;
  v317[25] = @"StagerDetermineDone";
  uint64_t v265 = v2;
  v266 = @"StagerJobDoneDetermine";
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v266,  &v265,  1LL));
  v318[25] = v5;
  v317[26] = @"StagerDownloadDone";
  uint64_t v263 = v2;
  v264 = @"StagerJobDoneDownload";
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v264,  &v263,  1LL));
  v318[26] = v6;
  v317[27] = @"StagerCancelCurrentJob";
  uint64_t v261 = v2;
  v262 = @"StagerJobCancel";
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v262,  &v261,  1LL));
  v318[27] = v7;
  v317[28] = @"StagerEliminatedSelector";
  uint64_t v259 = v2;
  v260 = @"EliminateStagerDone";
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v260,  &v259,  1LL));
  v318[28] = v8;
  v317[29] = @"StagerEliminatedConfiguration";
  uint64_t v257 = v2;
  v258 = @"EliminateStagerSetDone";
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v258,  &v257,  1LL));
  v318[29] = v9;
  v317[30] = @"StagerPurgeStagedContent";
  uint64_t v255 = v2;
  v256 = @"StagerRemoveAllNotPromoted";
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v256,  &v255,  1LL));
  v318[30] = v10;
  v317[31] = @"CancelActivityAck";
  uint64_t v253 = v2;
  v254 = @"CancelActivityAck";
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v254,  &v253,  1LL));
  v318[31] = v11;
  v317[32] = @"InstallAssetsEvent";
  uint64_t v251 = v2;
  v252 = @"InstallAssets";
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v252,  &v251,  1LL));
  v318[32] = v12;
  id v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v318,  v317,  33LL));
  v738[11] = v13;
  id v57 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v738,  v737,  12LL));

  id v14 = -[NSDictionary initWithDictionary:copyItems:]( objc_alloc(&OBJC_CLASS___NSDictionary),  "initWithDictionary:copyItems:",  v57,  1LL);
  return v14;
}

void __48__MADAutoAssetControlManager_autoControlManager__block_invoke(id a1)
{
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
  uint64_t v2 = (os_log_s *)objc_claimAutoreleasedReturnValue([v1 oslog]);

  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138543362;
    id v8 = @"2.2.22";
    _os_log_impl( &dword_0,  v2,  OS_LOG_TYPE_DEFAULT,  "AUTO-CONTROL:{autoControlManager} initializing the shared auto-control-manager [AutoAssetVersion:%{public}@] | init...",  (uint8_t *)&v7,  0xCu);
  }

  uint64_t v3 = objc_alloc_init(&OBJC_CLASS___MADAutoAssetControlManager);
  uint64_t v4 = (void *)autoControlManager___autoControlManager;
  autoControlManager___autoControlManager = (uint64_t)v3;

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v5 oslog]);

  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138543362;
    id v8 = @"2.2.22";
    _os_log_impl( &dword_0,  v6,  OS_LOG_TYPE_DEFAULT,  "AUTO-CONTROL:{autoControlManager} initializing the shared auto-control-manager [AutoAssetVersion:%{public}@] | ...init",  (uint8_t *)&v7,  0xCu);
  }
}

+ (void)shutdown
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 logger]);
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 oslog]);

  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( &dword_0,  v4,  OS_LOG_TYPE_DEFAULT,  "AUTO-CONTROL:{shutdown} Beginning shutdown sequence for AutoAssetControlManager",  buf,  2u);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v2 autoControlManagerFSM]);
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __38__MADAutoAssetControlManager_shutdown__block_invoke;
  block[3] = &unk_34DBC0;
  id v7 = v2;
  id v11 = v7;
  dispatch_sync(v6, block);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 logger]);
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 oslog]);

  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( &dword_0,  v9,  OS_LOG_TYPE_DEFAULT,  "AUTO-CONTROL:{shutdown}: Shutdown sequence for AutoAssetControlManager complete",  buf,  2u);
  }
}

void __38__MADAutoAssetControlManager_shutdown__block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logger]);
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 oslog]);

  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( &dword_0,  v3,  OS_LOG_TYPE_DEFAULT,  "AUTO-CONTROL:{shutdown} Shutting down MADAutoAssetScheduler",  buf,  2u);
  }

  +[MADAutoAssetScheduler shutdown](&OBJC_CLASS___MADAutoAssetScheduler, "shutdown");
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logger]);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 oslog]);

  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v11 = 0;
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "AUTO-CONTROL:{shutdown} Shutting down MADAutoAssetStager", v11, 2u);
  }

  +[MADAutoAssetStager shutdown](&OBJC_CLASS___MADAutoAssetStager, "shutdown");
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logger]);
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 oslog]);

  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v10 = 0;
    _os_log_impl(&dword_0, v7, OS_LOG_TYPE_DEFAULT, "AUTO-CONTROL:{shutdown} Shutting down myself. Goodbye!!", v10, 2u);
  }

  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) autoControlManagerFSM]);
  id v9 = (dispatch_object_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_suspend(v9);
}

- (MADAutoAssetControlManager)init
{
  v100.receiver = self;
  v100.super_class = (Class)&OBJC_CLASS___MADAutoAssetControlManager;
  uint64_t v2 = -[MADAutoAssetControlManager init](&v100, "init");
  uint64_t v3 = v2;
  if (v2)
  {
    -[MADAutoAssetControlManager _initializeSUCore](v2, "_initializeSUCore");
    uint64_t v4 = -[SUCoreLog initWithCategory:](objc_alloc(&OBJC_CLASS___SUCoreLog), "initWithCategory:", @"AUTO-CONTROL");
    logger = v3->_logger;
    v3->_logger = v4;

    latestSafeSummary = v3->_latestSafeSummary;
    v3->_latestSafeSummary = (NSString *)@"INIT";

    persistedActiveJobs = v3->_persistedActiveJobs;
    v3->_persistedActiveJobs = 0LL;

    persistedKnownDescriptors = v3->_persistedKnownDescriptors;
    v3->_persistedKnownDescriptors = 0LL;

    id v9 = (const char *)[@"com.apple.MobileAsset.daemon.autoassetdispatch" UTF8String];
    dispatch_queue_attr_t v10 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    id v11 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v10);
    dispatch_queue_t v12 = dispatch_queue_create(v9, v11);
    sharedDispatchQueue = v3->_sharedDispatchQueue;
    v3->_sharedDispatchQueue = (OS_dispatch_queue *)v12;

    connectionServer = v3->_connectionServer;
    v3->_connectionServer = 0LL;

    serverConnectionPolicy = v3->_serverConnectionPolicy;
    v3->_serverConnectionPolicy = 0LL;

    id v16 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    currentStatusBySelector = v3->_currentStatusBySelector;
    v3->_currentStatusBySelector = v16;

    __int128 v18 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    currentJobsBySelector = v3->_currentJobsBySelector;
    v3->_currentJobsBySelector = v18;

    __int128 v20 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    currentJobsByUUID = v3->_currentJobsByUUID;
    v3->_currentJobsByUUID = v20;

    v3->_stagerResumed = 0;
    stagerCurrentJob = v3->_stagerCurrentJob;
    v3->_stagerCurrentJob = 0LL;

    stagerBondedToAutoJob = v3->_stagerBondedToAutoJob;
    v3->_stagerBondedToAutoJob = 0LL;

    stagerCurrentJobUUID = v3->_stagerCurrentJobUUID;
    v3->_stagerCurrentJobUUID = 0LL;

    stagerFormedSetConfiguration = v3->_stagerFormedSetConfiguration;
    v3->_stagerFormedSetConfiguration = 0LL;

    stagerDownloadingSelector = v3->_stagerDownloadingSelector;
    v3->_stagerDownloadingSelector = 0LL;

    id v27 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    lookupGrantsByAssetType = v3->_lookupGrantsByAssetType;
    v3->_lookupGrantsByAssetType = v27;

    id v29 = (MAAutoAssetUpdatePolicy *)-[MAAutoAssetUpdatePolicy initUpdatePolicy:forAssetType:]( objc_alloc(&OBJC_CLASS___MAAutoAssetUpdatePolicy),  "initUpdatePolicy:forAssetType:",  @"defaultUpdatePolicy",  0LL);
    defaultUpdatePolicy = v3->_defaultUpdatePolicy;
    v3->_defaultUpdatePolicy = v29;

    signed int v31 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    alreadyScheduledSelectors = v3->_alreadyScheduledSelectors;
    v3->_alreadyScheduledSelectors = v31;

    id v33 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    timedOperations = v3->_timedOperations;
    v3->_timedOperations = v33;

    uint64_t v35 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    clientRequestsBeingTracked = v3->_clientRequestsBeingTracked;
    v3->_clientRequestsBeingTracked = v35;

    unsigned __int8 v37 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    clientRequestsAwaitingSync = v3->_clientRequestsAwaitingSync;
    v3->_clientRequestsAwaitingSync = v37;

    id v39 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    clientRequestsAwaitingFirstUnlock = v3->_clientRequestsAwaitingFirstUnlock;
    v3->_clientRequestsAwaitingFirstUnlock = v39;

    uint64_t v41 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    downloadManagerEventsAwaitingResumed = v3->_downloadManagerEventsAwaitingResumed;
    v3->_downloadManagerEventsAwaitingResumed = v41;

    downloadManagerInFlightTasks = v3->_downloadManagerInFlightTasks;
    v3->_downloadManagerInFlightTasks = 0LL;

    beyondFirstUnlockPollTimer = v3->_beyondFirstUnlockPollTimer;
    v3->_beyondFirstUnlockPollTimer = 0LL;

    awaitDownloadManagerSyncTimer = v3->_awaitDownloadManagerSyncTimer;
    v3->_awaitDownloadManagerSyncTimer = 0LL;

    *(_WORD *)&v3->_receivedDownloadManagerSync = 0;
    id v46 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    activelyEliminatingSelectors = v3->_activelyEliminatingSelectors;
    v3->_activelyEliminatingSelectors = v46;

    id v48 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetControlStatistics);
    statistics = v3->_statistics;
    v3->_statistics = v48;

    locksPriorToSecureHealing = v3->_locksPriorToSecureHealing;
    v3->_statisticsNextMaintenanceReport = 0.0;
    v3->_locksPriorToSecureHealing = 0LL;

    uint64_t v51 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    descriptorsRequiringPersonalization = v3->_descriptorsRequiringPersonalization;
    v3->_descriptorsRequiringPersonalization = v51;

    uint64_t v53 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    descriptorsRequiringGrafting = v3->_descriptorsRequiringGrafting;
    v3->_descriptorsRequiringGrafting = v53;

    uint64_t v55 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    prePersonalizedSelectors = v3->_prePersonalizedSelectors;
    v3->_prePersonalizedSelectors = v55;

    *(_WORD *)&v3->_secureHealingPersonalizationAttempted = 0;
    id v57 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    currentSetJobsByIdentifier = v3->_currentSetJobsByIdentifier;
    v3->_currentSetJobsByIdentifier = v57;

    __int128 v59 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    currentSetStatusByInstance = v3->_currentSetStatusByInstance;
    v3->_currentSetStatusByInstance = v59;

    unsigned int v61 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    knownSetConfigurationsByIdentifier = v3->_knownSetConfigurationsByIdentifier;
    v3->_knownSetConfigurationsByIdentifier = v61;

    __int16 v63 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    knownSetAtomicInstancesByInstance = v3->_knownSetAtomicInstancesByInstance;
    v3->_knownSetAtomicInstancesByInstance = v63;

    id v65 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    downloadedSetDescriptorsByInstance = v3->_downloadedSetDescriptorsByInstance;
    v3->_downloadedSetDescriptorsByInstance = v65;

    id v67 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    activeSetDescriptorsByIdentifier = v3->_activeSetDescriptorsByIdentifier;
    v3->_activeSetDescriptorsByIdentifier = v67;

    uint64_t v69 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    activeSetDescriptorsByInstance = v3->_activeSetDescriptorsByInstance;
    v3->_activeSetDescriptorsByInstance = v69;

    uint64_t v71 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    shortTermLockedLatestByIdentifier = v3->_shortTermLockedLatestByIdentifier;
    v3->_shortTermLockedLatestByIdentifier = v71;

    v73 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    shortTermLockedByAtomicInstance = v3->_shortTermLockedByAtomicInstance;
    v3->_shortTermLockedByAtomicInstance = v73;

    id v75 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    descriptorsDroppedOnStartup = v3->_descriptorsDroppedOnStartup;
    v3->_descriptorsDroppedOnStartup = v75;

    v3->_persistedActiveSetJobsLoaded = 0;
    persistedKnownSetConfigurations = v3->_persistedKnownSetConfigurations;
    v3->_persistedKnownSetConfigurations = 0LL;

    persistedKnownSetAtomicInstances = v3->_persistedKnownSetAtomicInstances;
    v3->_persistedKnownSetAtomicInstances = 0LL;

    persistedActiveJobSetDescriptors = v3->_persistedActiveJobSetDescriptors;
    v3->_persistedActiveJobSetDescriptors = 0LL;

    persistedDownloadedSetDescriptors = v3->_persistedDownloadedSetDescriptors;
    v3->_persistedDownloadedSetDescriptors = 0LL;

    persistedSetTargets = v3->_persistedSetTargets;
    v3->_persistedSetTargets = 0LL;

    persistedSetLookupResults = v3->_persistedSetLookupResults;
    v3->_persistedSetLookupResults = 0LL;

    setLockUsageMap = v3->_setLockUsageMap;
    v3->_setLockUsageMap = 0LL;

    v3->_simulateOperationRequested = 0;
    unsigned int v84 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    simulateOperationsBySelector = v3->_simulateOperationsBySelector;
    v3->_simulateOperationsBySelector = v84;

    uint64_t v86 = objc_claimAutoreleasedReturnValue(+[MADAnalyticsManager getAnalyticsManager](&OBJC_CLASS___MADAnalyticsManager, "getAnalyticsManager"));
    analyticsManager = v3->_analyticsManager;
    v3->_analyticsManager = (MADAnalyticsManager *)v86;

    -[MADAutoAssetControlManager _initializeCachedPreferences](v3, "_initializeCachedPreferences");
    p_bootedOSVersion = (void **)&v3->_bootedOSVersion;
    objc_storeStrong((id *)&v3->_bootedOSVersion, v3->_preferenceAsIfBootedOSIsOSVersion);
    p_bootedOBuildVersion = (void **)&v3->_bootedOBuildVersion;
    objc_storeStrong((id *)&v3->_bootedOBuildVersion, v3->_preferenceAsIfBootedOSIsBuildVersion);
    if (!v3->_bootedOSVersion)
    {
      id v90 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreDevice sharedDevice](&OBJC_CLASS___SUCoreDevice, "sharedDevice"));
      uint64_t v91 = objc_claimAutoreleasedReturnValue([v90 productVersion]);
      __int128 v92 = *p_bootedOSVersion;
      *p_bootedOSVersion = (void *)v91;
    }

    if (!*p_bootedOBuildVersion)
    {
      id v93 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreDevice sharedDevice](&OBJC_CLASS___SUCoreDevice, "sharedDevice"));
      uint64_t v94 = objc_claimAutoreleasedReturnValue([v93 buildVersion]);
      BOOL v95 = *p_bootedOBuildVersion;
      *p_bootedOBuildVersion = (void *)v94;
    }

    -[MADAutoAssetControlManager _initializeAutoControl](v3, "_initializeAutoControl");
    -[MADAutoAssetControlManager _initializeServerConnectionPolicy](v3, "_initializeServerConnectionPolicy");
    -[MADAutoAssetControlManager _initializeConnectionServer](v3, "_initializeConnectionServer");
    id v96 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[SUCoreLog oslog](v3->_logger, "oslog"));
    if (os_log_type_enabled(v96, OS_LOG_TYPE_DEFAULT))
    {
      id v97 = *p_bootedOSVersion;
      __int16 v98 = *p_bootedOBuildVersion;
      *(_DWORD *)buf = 138543874;
      BOOL v102 = @"2.2.22";
      __int16 v103 = 2114;
      __int128 v104 = v97;
      __int16 v105 = 2114;
      uint64_t v106 = v98;
      _os_log_impl( &dword_0,  v96,  OS_LOG_TYPE_DEFAULT,  "AUTO-CONTROL-MANAGER [AutoAssetVersion:%{public}@] | Initialized | bootedOSVersion:%{public}@ | bootedOBuildVersion:%{public}@",  buf,  0x20u);
    }
  }

  return v3;
}

- (void)_initializeSUCore
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[SUCore sharedCore](&OBJC_CLASS___SUCore, "sharedCore"));
  [v2 useDomain:@"com.apple.MAAuto"];
}

- (void)_initializeServerConnectionPolicy
{
}

- (void)_initializeConnectionServer
{
}

- (void)_initializeCachedPreferences
{
  char v61 = 0;
  *(_WORD *)&self->_preferenceScheduledAlwaysNonDiscretionary = 0;
  preferenceSessionIDBase = self->_preferenceSessionIDBase;
  self->_preferenceSessionIDBase = 0LL;

  preferenceConnectorBackoffRetryTimes = self->_preferenceConnectorBackoffRetryTimes;
  self->_preferenceConnectorInitialWaitSecs = -1LL;
  self->_preferenceConnectorBackoffRetryTimes = 0LL;

  self->_preferenceConnectorWaitBeforeRetrySecs = -1LL;
  self->_preferenceMaxStagerDeterminingSecs = -1LL;
  *(_DWORD *)&self->_preferenceAutoAssetObserverIgnoreNetworkStatus = 0;
  preferenceAsIfBootedOSIsOSVersion = self->_preferenceAsIfBootedOSIsOSVersion;
  self->_preferenceStagerDeterminePallasResponseFewer = -1LL;
  self->_preferenceAsIfBootedOSIsOSVersion = 0LL;

  preferenceAsIfBootedOSIsBuildVersion = self->_preferenceAsIfBootedOSIsBuildVersion;
  self->_preferenceAsIfBootedOSIsBuildVersion = 0LL;

  *(_WORD *)&self->_preferenceAlwaysPromoteStagedAssets = 0;
  *(_DWORD *)&self->_preferenceAsIfBackgroundSpecified = 0;
  *(void *)&__int128 v7 = -1LL;
  *((void *)&v7 + 1) = -1LL;
  *(_OWORD *)&self->_preferenceActivityTickerSecs = v7;
  *(_OWORD *)&self->_preferencePushActivityIntervalSecs = v7;
  self->_preferenceActivityAggressiveIntervalSecs = -1LL;
  preferenceActivityHeightenedAssetType = self->_preferenceActivityHeightenedAssetType;
  self->_preferenceActivityHeightenedAssetType = 0LL;

  preferenceActivityAggressiveAssetType = self->_preferenceActivityAggressiveAssetType;
  self->_preferenceActivityAggressiveAssetType = 0LL;

  *(void *)&__int128 v10 = -1LL;
  *((void *)&v10 + 1) = -1LL;
  *(_OWORD *)&self->_preferenceLookupCacheAssetSelectorValidSecs = v10;
  *(_OWORD *)&self->_preferenceBeforeFirstPollSecs = v10;
  *(_WORD *)&self->_preferenceSecureSimulateRequireAll = 0;
  self->_preferenceSimulatedDownloadFailureResult = -1LL;
  self->_preferenceSimulatedStagingLookupFailureResult = -1LL;
  *(_DWORD *)&self->_preferencePersistedTableLoggingEnabled = 0;
  unsigned int AppBooleanValue = _MAPreferencesGetAppBooleanValue( @"AutoAssetScheduledAlwaysNonDiscretionary",  &v61);
  if (v61) {
    self->_preferenceScheduledAlwaysNonDiscretionary = AppBooleanValue != 0;
  }
  id AppIntegerValue = _MAPreferencesGetAppIntegerValue(@"AutoAssetConnectorInitialWaitSecs", &v61);
  if (v61) {
    self->_preferenceConnectorInitialWaitSecs = (int64_t)AppIntegerValue;
  }
  id v13 = _MAPreferencesGetAppIntegerValue(@"AutoAssetActivityTickerSecs", &v61);
  if (v61) {
    self->_preferenceActivityTickerSecs = (int64_t)v13;
  }
  id v14 = _MAPreferencesGetAppIntegerValue(@"AutoAssetActivityIntervalSecs", &v61);
  if (v61) {
    self->_preferenceActivityIntervalSecs = (int64_t)v14;
  }
  if (_MAPreferencesIsInternalAllowed())
  {
    unsigned int v15 = _MAPreferencesGetAppBooleanValue(@"AutoAssetScheduledBackupTriggersDisabled", &v61);
    if (v61) {
      self->_preferenceScheduledBackupTriggersDisabled = v15 != 0;
    }
    id v16 = _MAPreferencesCopyNSStringValue(@"AutoAssetSessionIDBase");
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    __int128 v18 = v17;
    id v19 = _MAPreferencesCopyNSArrayOfNumbersValue(@"AutoAssetConnectorBackoffRetryTimes");
    __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
    if (v20)
    {
      unsigned __int8 v21 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetConnector backoffRetryLevelDefaultTimes]( &OBJC_CLASS___MADAutoAssetConnector,  "backoffRetryLevelDefaultTimes"));
      id v22 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      if (v22 && (unint64_t)[v21 count] >= 8)
      {
        -[NSMutableArray addObject:](v22, "addObject:", &off_38EFC8);
        for (unint64_t i = 0LL; i != 8; ++i)
        {
          else {
            id v24 = v20;
          }
          __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v24 objectAtIndex:i]);
          -[NSMutableArray addObject:](v22, "addObject:", v25);
        }

        objc_storeStrong((id *)&self->_preferenceConnectorBackoffRetryTimes, v22);
      }
    }

    id v26 = _MAPreferencesGetAppIntegerValue(@"AutoAssetConnectorWaitBeforeRetrySecs", &v61);
    if (v61) {
      self->_preferenceConnectorWaitBeforeRetrySecs = (int64_t)v26;
    }
    unsigned int v27 = _MAPreferencesGetAppBooleanValue(@"AutoAssetObserverIgnoreNetworkStatus", &v61);
    if (v61) {
      self->_preferenceAutoAssetObserverIgnoreNetworkStatus = v27 != 0;
    }
    unsigned int v28 = _MAPreferencesGetAppBooleanValue(@"AutoAssetLogSetCompare", &v61);
    if (v61) {
      self->_preferenceAutoAssetLogSetCompare = v28 != 0;
    }
    unsigned int v29 = _MAPreferencesGetAppBooleanValue(@"AutoAssetNoPersistedOverflowLimit", &v61);
    if (v61) {
      self->_preferenceAutoAssetNoPersistedOverflowLimit = v29 != 0;
    }
    id v30 = _MAPreferencesGetAppIntegerValue(@"AutoAssetMaxStagerDeterminingSecs", &v61);
    if (v61) {
      self->_preferenceMaxStagerDeterminingSecs = (int64_t)v30;
    }
    id v31 = _MAPreferencesGetAppIntegerValue(@"AutoAssetStagerDeterminePallasResponseFewer", &v61);
    if (v61) {
      self->_preferenceStagerDeterminePallasResponseFewer = (int64_t)v31;
    }
    unsigned int v32 = _MAPreferencesGetAppBooleanValue(@"AutoAssetStagerDownloadFirstNotInCatalog", &v61);
    if (v61) {
      self->_preferenceStagerDownloadFirstNotInCatalog = v32 != 0;
    }
    id v33 = _MAPreferencesCopyNSStringValue(@"AutoAssetAsIfBootedOSIsOSVersion");
    id v34 = (NSString *)objc_claimAutoreleasedReturnValue(v33);
    uint64_t v35 = self->_preferenceAsIfBootedOSIsOSVersion;
    self->_preferenceAsIfBootedOSIsOSVersion = v34;

    id v36 = _MAPreferencesCopyNSStringValue(@"AutoAssetAsIfBootedOSIsBuildVersion");
    unsigned __int8 v37 = (NSString *)objc_claimAutoreleasedReturnValue(v36);
    __int128 v38 = self->_preferenceAsIfBootedOSIsBuildVersion;
    self->_preferenceAsIfBootedOSIsBuildVersion = v37;

    unsigned int v39 = _MAPreferencesGetAppBooleanValue(@"AutoAssetAsIfBackground", &v61);
    if (v61)
    {
      self->_preferenceAsIfBackground = v39 != 0;
      self->_preferenceAsIfBackgroundSpecified = 1;
    }

    unsigned int v40 = _MAPreferencesGetAppBooleanValue(@"AutoAssetAsIfRamp", &v61);
    if (v61)
    {
      self->_preferenceAsIfRamp = v40 != 0;
      self->_preferenceAsIfRampSpecified = 1;
    }

    unsigned int v41 = _MAPreferencesGetAppBooleanValue(@"AutoAssetAlwaysPromoteStagedAssets", &v61);
    if (v61) {
      self->_preferenceAlwaysPromoteStagedAssets = v41 != 0;
    }
    unsigned int v42 = _MAPreferencesGetAppBooleanValue(@"AutoAssetScheduledAsIfNotInternal", &v61);
    if (v61) {
      self->_preferenceScheduledAsIfNotInternal = v42 != 0;
    }
    unsigned int v43 = _MAPreferencesGetAppBooleanValue(@"AutoAssetPersistedTableLoggingEnabled", &v61);
    if (v61) {
      self->_preferencePersistedTableLoggingEnabled = v43 != 0;
    }
    id v44 = _MAPreferencesGetAppIntegerValue(@"AutoAssetPushActivityIntervalSecs", &v61);
    if (v61) {
      self->_preferencePushActivityIntervalSecs = (int64_t)v44;
    }
    id v45 = _MAPreferencesGetAppIntegerValue(@"AutoAssetActivityHeightenedIntervalSecs", &v61);
    if (v61) {
      self->_preferenceActivityHeightenedIntervalSecs = (int64_t)v45;
    }
    id v46 = _MAPreferencesGetAppIntegerValue(@"AutoAssetActivityAggressiveIntervalSecs", &v61);
    if (v61) {
      self->_preferenceActivityAggressiveIntervalSecs = (int64_t)v46;
    }
    uint64_t v47 = _MAPreferencesCopyNSStringValue(@"AutoAssetActivityHeightenedAssetType");
    id v48 = (void *)objc_claimAutoreleasedReturnValue(v47);

    if (v48) {
      objc_storeStrong((id *)&self->_preferenceActivityHeightenedAssetType, v48);
    }
    uint64_t v49 = _MAPreferencesCopyNSStringValue(@"AutoAssetActivityAggressiveAssetType");
    id v50 = (void *)objc_claimAutoreleasedReturnValue(v49);

    if (v50) {
      objc_storeStrong((id *)&self->_preferenceActivityAggressiveAssetType, v50);
    }
    id v51 = _MAPreferencesGetAppIntegerValue(@"AutoAssetLookupCacheAssetSelectorValidSecs", &v61);
    if (v61) {
      self->_preferenceLookupCacheAssetSelectorValidSecs = (int64_t)v51;
    }
    id v52 = _MAPreferencesGetAppIntegerValue(@"AutoAssetLookupCacheSetConfigurationValidSecs", &v61);
    if (v61) {
      self->_preferenceLookupCacheSetConfigurationValidSecs = (int64_t)v52;
    }
    id v53 = _MAPreferencesGetAppIntegerValue(@"AutoAssetBeforeFirstPollSecs", &v61);
    if (v61) {
      self->_preferenceBeforeFirstPollSecs = (int64_t)v53;
    }
    id v54 = _MAPreferencesGetAppIntegerValue(@"AutoAssetBeforeFirstDefaultTimeoutSecs", &v61);
    if (v61) {
      self->_preferenceBeforeFirstDefaultTimeoutSecs = (int64_t)v54;
    }
    unsigned int v55 = _MAPreferencesGetAppBooleanValue(@"AutoAssetSecureSimulateRequireAll", &v61);
    if (v61) {
      self->_preferenceSecureSimulateRequireAll = v55 != 0;
    }
    unsigned int v56 = _MAPreferencesGetAppBooleanValue(@"AutoAssetSecureSimulateFailureAll", &v61);
    if (v61) {
      self->_preferenceSecureSimulateFailureAll = v56 != 0;
    }
    id v57 = _MAPreferencesGetAppIntegerValue(@"AutoAssetSimulatedDownloadFailureResult", &v61);
    if (v61) {
      self->_preferenceSimulatedDownloadFailureResult = (int64_t)v57;
    }
    id v58 = _MAPreferencesGetAppIntegerValue(@"AutoAssetSimulatedStagingLookupFailureResult", &v61);
    if (v61) {
      self->_preferenceSimulatedStagingLookupFailureResult = (int64_t)v58;
    }
    unsigned int v59 = _MAPreferencesGetAppBooleanValue(@"AutoAssetStagingLookupFlipRequiredOptional", &v61);
    if (v61) {
      self->_preferenceStagingLookupFlipRequiredOptional = v59 != 0;
    }
    unsigned int v60 = _MAPreferencesGetAppBooleanValue(@"AutoAssetStartupSimulateFirstBoot", &v61);
    if (v61) {
      self->_preferenceStartupSimulateFirstBoot = v60 != 0;
    }
  }

  else
  {
    id v50 = 0LL;
    __int128 v20 = 0LL;
  }

  *(_WORD *)&self->_operatingBeforeFirstUnlock = 0;
}

- (void)_initializeAutoControl
{
}

+ (void)lockerResumed
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v2 = -[MADAutoAssetControlManagerParam initWithSafeSummary:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initWithSafeSummary:",  @"lockerResumed");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v4 autoControlManagerFSM]);
  [v3 postEvent:@"LockerResumed" withInfo:v2];
}

+ (void)stagerResumed:(id)a3 withSetLookupResults:(id)a4
{
  id v5 = a4;
  id v6 = a3;
  id v9 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  __int128 v7 = -[MADAutoAssetControlManagerParam initWithPromoted:withSetLookupResults:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initWithPromoted:withSetLookupResults:",  v6,  v5);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v9 autoControlManagerFSM]);
  [v8 postEvent:@"StagerResumed" withInfo:v7];
}

+ (void)schedulerResumed:(id)a3
{
  id v3 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v4 = -[MADAutoAssetControlManagerParam initWithScheduledJobs:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initWithScheduledJobs:",  v3);

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v6 autoControlManagerFSM]);
  [v5 postEvent:@"SchedulerResumed" withInfo:v4];
}

- (BOOL)isConnectionAuthorized:(id)a3
{
  return +[MADAutoAssetAuthorizationPolicy isConnectionAuthorized:]( &OBJC_CLASS___MADAutoAssetAuthorizationPolicy,  "isConnectionAuthorized:",  a3);
}

- (BOOL)isConnection:(id)a3 authorizedForMessage:(id)a4
{
  return +[MADAutoAssetAuthorizationPolicy isConnection:authorizedForMessage:]( &OBJC_CLASS___MADAutoAssetAuthorizationPolicy,  "isConnection:authorizedForMessage:",  a3,  a4);
}

+ (void)downloadManagerStateSyncSkipped
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v2 = -[MADAutoAssetControlManagerParam initWithSafeSummary:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initWithSafeSummary:",  @"downloadManagerStateSyncSkipped");
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v4 autoControlManagerFSM]);
  [v3 postEvent:@"DownloadManagerSyncSkipped" withInfo:v2];
}

+ (void)downloadManagerStateSyncDetermined:(id)a3
{
  id v3 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v4 = -[MADAutoAssetControlManagerParam initWithDownloadsInFlight:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initWithDownloadsInFlight:",  v3);

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v6 autoControlManagerFSM]);
  [v5 postEvent:@"DownloadManagerSynced" withInfo:v4];
}

+ (void)catalogDownloadJobFinished:(id)a3 withCatalog:(id)a4 error:(id)a5
{
  id v7 = a5;
  id v8 = a4;
  id v9 = a3;
  id v12 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v10 = -[MADAutoAssetControlManagerParam initForFinishedJobID:withCatalog:withError:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForFinishedJobID:withCatalog:withError:",  v9,  v8,  v7);

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v12 autoControlManagerFSM]);
  [v11 postEvent:@"DownloadCatalogFinished" withInfo:v10];
}

+ (void)assetConfigJobFinished:(id)a3 error:(id)a4
{
  id v5 = a4;
  id v6 = a3;
  id v9 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v7 = -[MADAutoAssetControlManagerParam initForConfigFinishedJobID:withError:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForConfigFinishedJobID:withError:",  v6,  v5);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v9 autoControlManagerFSM]);
  [v8 postEvent:@"DownloadConfigFinished" withInfo:v7];
}

+ (void)assetDownloadJob:(id)a3 progressReport:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 autoControlManagerFSM]);
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __62__MADAutoAssetControlManager_assetDownloadJob_progressReport___block_invoke;
  block[3] = &unk_34DB70;
  id v14 = v7;
  id v15 = v5;
  id v16 = v6;
  id v10 = v6;
  id v11 = v5;
  id v12 = v7;
  dispatch_async(v9, block);
}

void __62__MADAutoAssetControlManager_assetDownloadJob_progressReport___block_invoke(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) operatingBeforeFirstUnlock];
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    id v9 = (id)objc_claimAutoreleasedReturnValue([v3 autoControlManagerFSM]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v9 diag]);
    id v5 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v6 = *(void *)(a1 + 40);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) summary]);
    id v8 = -[NSString initWithFormat:]( v5,  "initWithFormat:",  @"{assetDownloadJob} DownloadManager indication of download progress when device is before first-unlock | jobID:%@ | progressReport:%@",  v6,  v7);
    [v4 trackAnomaly:@"AUTO-CONTROL-PROGRESS(from DownloadManager):BEFORE-FIRST" forReason:v8 withResult:6101 withError:0];
  }

  else if (([v3 operatingBeforeResumed] & 1) == 0)
  {
    [*(id *)(a1 + 32) _routeAssetProgress:@"assetDownloadJob" toCurrentJobByUUID:*(void *)(a1 + 40) withDownloadProgress:*(void *)(a1 + 48)];
  }

+ (void)assetDownloadJobFinished:(id)a3 error:(id)a4
{
  id v5 = a4;
  id v6 = a3;
  id v9 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v7 = -[MADAutoAssetControlManagerParam initForFinishedJobID:withError:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForFinishedJobID:withError:",  v6,  v5);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v9 autoControlManagerFSM]);
  [v8 postEvent:@"DownloadAssetFinished" withInfo:v7];
}

+ (void)autoAssetJobObtainLookupGrant:(id)a3 forAutoAssetUUID:(id)a4 fromAutoAssetJob:(id)a5
{
  id v7 = a5;
  id v8 = a4;
  id v9 = a3;
  id v12 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v10 = -[MADAutoAssetControlManagerParam initForJobFoundSelector:withAutoAssetUUID:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForJobFoundSelector:withAutoAssetUUID:",  v9,  v8);

  [v10 setFromAutoAssetJob:v7];
  [v10 setOriginalSelector:v9];

  [v10 updateSafeSummary];
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v12 autoControlManagerFSM]);
  [v11 postEvent:@"JobObtainLookupGrant" withInfo:v10];
}

+ (void)autoAssetJobReleaseLookupGrant:(id)a3 forAutoAssetUUID:(id)a4 fromAutoAssetJob:(id)a5
{
  id v7 = a5;
  id v8 = a4;
  id v9 = a3;
  id v12 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v10 = -[MADAutoAssetControlManagerParam initForJobFoundSelector:withAutoAssetUUID:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForJobFoundSelector:withAutoAssetUUID:",  v9,  v8);

  [v10 setFromAutoAssetJob:v7];
  [v10 setOriginalSelector:v9];

  [v10 updateSafeSummary];
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v12 autoControlManagerFSM]);
  [v11 postEvent:@"JobReleaseLookupGrant" withInfo:v10];
}

+ (void)autoAssetJobReadyToDownload:(id)a3 withAutoAssetUUID:(id)a4 fromAutoAssetJob:(id)a5 withOriginalSelector:(id)a6 downloadingDescriptor:(id)a7 baseForPatchDescriptor:(id)a8
{
  id v13 = a8;
  id v14 = a7;
  id v15 = a6;
  id v16 = a5;
  id v17 = a4;
  id v18 = a3;
  id v21 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v19 = -[MADAutoAssetControlManagerParam initForJobFoundSelector:withAutoAssetUUID:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForJobFoundSelector:withAutoAssetUUID:",  v18,  v17);

  [v19 setFromAutoAssetJob:v16];
  [v19 setOriginalSelector:v15];

  [v19 setDownloadingDescriptor:v14];
  [v19 setBaseForPatchDescriptor:v13];

  [v19 updateSafeSummary];
  __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v21 autoControlManagerFSM]);
  [v20 postEvent:@"JobAssignPersistedState" withInfo:v19];
}

+ (void)autoAssetJobSetLookupResponseReceived:(id)a3 forAssignedSetDescriptor:(id)a4
{
  id v5 = a4;
  id v6 = a3;
  id v9 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v7 = -[MADAutoAssetControlManagerParam initForSetConfiguration:withSetDescriptor:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForSetConfiguration:withSetDescriptor:",  v6,  v5);

  [v7 updateSafeSummary];
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v9 autoControlManagerFSM]);
  [v8 postEvent:@"JobSetLookupResponseReceived" withInfo:v7];
}

+ (void)autoAssetJobIssueProgress:(id)a3 forAutoAssetSelector:(id)a4 withAutoAssetUUID:(id)a5 withJobInformation:(id)a6 withResponseError:(id)a7
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 autoControlManagerFSM]);
  id v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v15 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __132__MADAutoAssetControlManager_autoAssetJobIssueProgress_forAutoAssetSelector_withAutoAssetUUID_withJobInformation_withResponseError___block_invoke;
  block[3] = &unk_34EF88;
  id v23 = v14;
  id v24 = v12;
  id v25 = v13;
  id v26 = v10;
  id v27 = v11;
  id v17 = v11;
  id v18 = v10;
  id v19 = v13;
  id v20 = v12;
  id v21 = v14;
  dispatch_async(v16, block);
}

void __132__MADAutoAssetControlManager_autoAssetJobIssueProgress_forAutoAssetSelector_withAutoAssetUUID_withJobInformation_withResponseError___block_invoke( uint64_t a1)
{
  uint64_t v2 = a1;
  unsigned int v3 = [*(id *)(a1 + 32) operatingBeforeFirstUnlock];
  id v4 = *(void **)(v2 + 32);
  if (v3)
  {
    id v42 = (id)objc_claimAutoreleasedReturnValue([v4 autoControlManagerFSM]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v42 diag]);
    id v6 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v7 = *(void *)(v2 + 40);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v2 + 48) currentStatus]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 downloadProgress]);
    if (v9)
    {
      uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(v2 + 48) currentStatus]);
      uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([(id)v2 downloadProgress]);
      id v10 = (__CFString *)objc_claimAutoreleasedReturnValue([v1 summary]);
    }

    else
    {
      id v10 = @"N";
    }

    id v24 = -[NSString initWithFormat:]( v6,  "initWithFormat:",  @"{autoAssetJobIssueProgress} auto-asset-job indication of download progress when device is before first-unlock | jobID:%@ | progressReport:%@",  v7,  v10);
    [v5 trackAnomaly:@"AUTO-CONTROL-PROGRESS(from auto-asset-job):BEFORE-FIRST" forReason:v24 withResult:6101 withError:0];

    if (v9)
    {
    }

    goto LABEL_17;
  }

  if (([v4 operatingBeforeResumed] & 1) == 0 && *(void *)(v2 + 56))
  {
    if (*(void *)(v2 + 64))
    {
      id v11 = *(void **)(v2 + 32);
      if (*(void *)(v2 + 40))
      {
        id v12 = (void *)objc_claimAutoreleasedReturnValue( [v11 _autoAssetJobProgressNewValidatedCurrentStatus:*(void *)(v2 + 48) requiringProgress:1]);
        id v13 = v12;
        if (v12)
        {
          id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 downloadProgress]);
          id v15 = [*(id *)(v2 + 56) count];
          id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v2 + 48) initialAssetSelector]);

          if (v16)
          {
            id v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v2 + 48) initialAssetSelector]);
            id v16 = (void *)objc_claimAutoreleasedReturnValue([v17 assetVersion]);
          }

          id v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v2 + 48) fullAssetSelector]);

          id v19 = *(void **)(v2 + 32);
          id v20 = *(void **)(v2 + 48);
          if (v18)
          {
            id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 fullAssetSelector]);
            uint64_t v22 = *(void *)(v2 + 40);
            id v23 = @"autoAssetJobIssueProgress(full-selector)";
          }

          else
          {
            id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 initialAssetSelector]);
            uint64_t v22 = *(void *)(v2 + 40);
            id v23 = @"autoAssetJobIssueProgress(initial-selector)";
          }

          [v19 updateAutoAssetStatus:v21 forActiveJobUUID:v22 withLatestJobStatus:v13 matchingAssetVersion:v16 fromLocation:v23];

          if ((uint64_t)v15 >= 1 && (uint64_t)[v14 totalExpectedBytes] >= 1)
          {
            unsigned int v41 = v16;
            id v43 = v14;
            __int128 v46 = 0u;
            __int128 v47 = 0u;
            __int128 v44 = 0u;
            __int128 v45 = 0u;
            id v28 = *(id *)(v2 + 56);
            id v29 = [v28 countByEnumeratingWithState:&v44 objects:v48 count:16];
            if (v29)
            {
              id v30 = v29;
              uint64_t v31 = *(void *)v45;
              do
              {
                for (unint64_t i = 0LL; i != v30; unint64_t i = (char *)i + 1)
                {
                  if (*(void *)v45 != v31) {
                    objc_enumerationMutation(v28);
                  }
                  id v33 = *(void **)(*((void *)&v44 + 1) + 8LL * (void)i);
                  id v34 = objc_autoreleasePoolPush();
                  uint64_t v35 = objc_claimAutoreleasedReturnValue([v33 clientReplyCompletion]);
                  if (v35)
                  {
                    id v36 = (void *)v35;
                    unsigned __int8 v37 = (void *)objc_claimAutoreleasedReturnValue([v33 clientProgressProxy]);

                    if (v37)
                    {
                      __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([v33 clientProgressProxy]);
                      char v39 = objc_opt_respondsToSelector(v38, "executeGenericBlock:");

                      if ((v39 & 1) != 0)
                      {
                        unsigned int v40 = (void *)objc_claimAutoreleasedReturnValue([v33 clientProgressProxy]);
                        [v40 executeGenericBlock:v13];
                      }
                    }
                  }

                  objc_autoreleasePoolPop(v34);
                }

                id v30 = [v28 countByEnumeratingWithState:&v44 objects:v48 count:16];
              }

              while (v30);
            }

            id v16 = v41;
            id v14 = v43;
          }
        }

        return;
      }

      id v42 = (id)objc_claimAutoreleasedReturnValue([v11 autoControlManagerFSM]);
      id v25 = (void *)objc_claimAutoreleasedReturnValue([v42 diag]);
      id v5 = v25;
      id v26 = @"AUTO-CONTROL-PROGRESS(from auto-asset-job):NO-AUTO-ASSET-UUID";
      id v27 = @"{autoAssetJobIssueProgress} auto-asset-job indication of download progress without autoAssetUUID";
    }

    else
    {
      id v42 = (id)objc_claimAutoreleasedReturnValue([*(id *)(v2 + 32) autoControlManagerFSM]);
      id v25 = (void *)objc_claimAutoreleasedReturnValue([v42 diag]);
      id v5 = v25;
      id v26 = @"AUTO-CONTROL-PROGRESS(from auto-asset-job):NO-AUTO-ASSET-SELECTOR";
      id v27 = @"{autoAssetJobIssueProgress} auto-asset-job indication of download progress without autoAssetSelector";
    }

    [v25 trackAnomaly:v26 forReason:v27 withResult:6102 withError:0];
LABEL_17:
  }

- (id)_autoAssetJobProgressNewValidatedCurrentStatus:(id)a3 requiringProgress:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  if (!v6)
  {
    id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v34 diag]);
    [v35 trackAnomaly:@"AUTO-CONTROL-PROGRESS(from auto-asset-job):NO-JOB-INFORMATION" forReason:@"{_autoAssetJobProgressNewValidatedCurrentStatus} required jobInformation not provided" withResult:6102 withError:0];
LABEL_20:

    goto LABEL_21;
  }

  uint64_t v7 = objc_opt_class(&OBJC_CLASS___MADAutoAssetJobInformation);
  if ((objc_opt_isKindOfClass(v6, v7) & 1) == 0)
  {
    id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v34 diag]);
    id v36 = objc_alloc(&OBJC_CLASS___NSString);
    unsigned __int8 v37 = (objc_class *)objc_opt_class(v6);
    __int128 v38 = NSStringFromClass(v37);
    char v39 = (void *)objc_claimAutoreleasedReturnValue(v38);
    unsigned int v40 = -[NSString initWithFormat:]( v36,  "initWithFormat:",  @"{_autoAssetJobProgressNewValidatedCurrentStatus} jobInformation of class:%@",  v39);
    unsigned int v41 = @"AUTO-CONTROL-PROGRESS(from auto-asset-job):JOB-INFORMATION-WRONG-CLASS";
    id v42 = v35;
    id v43 = v40;
    uint64_t v44 = 6103LL;
    goto LABEL_14;
  }

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 initialAssetSelector]);

  if (v8)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 initialAssetSelector]);
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___MAAutoAssetSelector);
    char isKindOfClass = objc_opt_isKindOfClass(v9, v10);

    if ((isKindOfClass & 1) != 0)
    {
      uint64_t v12 = objc_claimAutoreleasedReturnValue([v6 fullAssetSelector]);
      if (!v12
        || (id v13 = (void *)v12,
            id v14 = (void *)objc_claimAutoreleasedReturnValue([v6 fullAssetSelector]),
            uint64_t v15 = objc_opt_class(&OBJC_CLASS___MAAutoAssetSelector),
            char v16 = objc_opt_isKindOfClass(v14, v15),
            v14,
            v13,
            (v16 & 1) != 0))
      {
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v6 currentStatus]);

        if (v17)
        {
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v6 currentStatus]);
          uint64_t v19 = objc_opt_class(&OBJC_CLASS___MAAutoAssetStatus);
          char v20 = objc_opt_isKindOfClass(v18, v19);

          if ((v20 & 1) != 0)
          {
            id v21 = (void *)objc_claimAutoreleasedReturnValue([v6 currentStatus]);
            uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v21 downloadProgress]);

            if (v22)
            {
              id v23 = (void *)objc_claimAutoreleasedReturnValue([v21 downloadProgress]);
              uint64_t v24 = objc_opt_class(&OBJC_CLASS___MAAutoAssetProgress);
              char v25 = objc_opt_isKindOfClass(v23, v24);

              if ((v25 & 1) == 0)
              {
                id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
                id v27 = (void *)objc_claimAutoreleasedReturnValue([v26 diag]);
                id v28 = objc_alloc(&OBJC_CLASS___NSString);
                id v29 = (void *)objc_claimAutoreleasedReturnValue([v21 downloadProgress]);
                id v30 = (objc_class *)objc_opt_class(v29);
                uint64_t v31 = NSStringFromClass(v30);
                unsigned int v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
                id v33 = -[NSString initWithFormat:]( v28,  "initWithFormat:",  @"{_autoAssetJobProgressNewValidatedCurrentStatus} jobInformation.currentStatus.downloadProgress of class:%@",  v32);
                [v27 trackAnomaly:@"AUTO-CONTROL-PROGRESS(from auto-asset-job):JOB-INFORMATION-CURRENT-STATUS-DOWNLOAD-PROGRESS-WRONG-CLASS" forReason:v33 withResult:6103 withError:0];

LABEL_28:
                unsigned int v55 = 0LL;
LABEL_33:

                goto LABEL_22;
              }
            }

            else if (v4)
            {
              unsigned int v62 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v26 = (void *)objc_claimAutoreleasedReturnValue([v62 oslog]);

              if (os_log_type_enabled((os_log_t)v26, OS_LOG_TYPE_ERROR)) {
                -[MADAutoAssetControlManager _autoAssetJobProgressNewValidatedCurrentStatus:requiringProgress:].cold.1();
              }
              goto LABEL_28;
            }

            if ((objc_opt_respondsToSelector(v21, "copy") & 1) != 0) {
              id v63 = [v21 copy];
            }
            else {
              id v63 = v21;
            }
            unsigned int v55 = v63;
            goto LABEL_33;
          }

          id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
          uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v34 diag]);
          id v58 = objc_alloc(&OBJC_CLASS___NSString);
          char v39 = (void *)objc_claimAutoreleasedReturnValue([v6 currentStatus]);
          unsigned int v59 = (objc_class *)objc_opt_class(v39);
          unsigned int v60 = NSStringFromClass(v59);
          id v48 = (void *)objc_claimAutoreleasedReturnValue(v60);
          char v61 = -[NSString initWithFormat:]( v58,  "initWithFormat:",  @"{_autoAssetJobProgressNewValidatedCurrentStatus} jobInformation.currentStatus of class:%@",  v48);
          [v35 trackAnomaly:@"AUTO-CONTROL-PROGRESS(from auto-asset-job):JOB-INFORMATION-CURRENT-STATUS-WRONG-CLASS" forReason:v61 withResult:6103 withError:0];

          goto LABEL_18;
        }

        id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v34 diag]);
        id v57 = objc_alloc(&OBJC_CLASS___NSString);
        char v39 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
        unsigned int v40 = -[NSString initWithFormat:]( v57,  "initWithFormat:",  @"{_autoAssetJobProgressNewValidatedCurrentStatus} required jobInformation.currentStatus not provided | jobInformation:%@",  v39);
        unsigned int v41 = @"AUTO-CONTROL-PROGRESS(from auto-asset-job):JOB-INFORMATION-NIL-CURRENT-STATUS";
        id v42 = v35;
        id v43 = v40;
        uint64_t v44 = 6102LL;
LABEL_14:
        [v42 trackAnomaly:v41 forReason:v43 withResult:v44 withError:0];

LABEL_19:
        goto LABEL_20;
      }

      id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v34 diag]);
      id v52 = objc_alloc(&OBJC_CLASS___NSString);
      char v39 = (void *)objc_claimAutoreleasedReturnValue([v6 fullAssetSelector]);
      id v53 = (objc_class *)objc_opt_class(v39);
      id v54 = NSStringFromClass(v53);
      id v48 = (void *)objc_claimAutoreleasedReturnValue(v54);
      uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
      id v50 = -[NSString initWithFormat:]( v52,  "initWithFormat:",  @"{_autoAssetJobProgressNewValidatedCurrentStatus} optional jobInformation.fullAssetSelector of class:%@ | jobInformation:%@",  v48,  v49);
      id v51 = @"AUTO-CONTROL-PROGRESS(from auto-asset-job):JOB-INFORMATION-FULL-ASSET-SELECTOR-WRONG-CLASS";
    }

    else
    {
      id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v34 diag]);
      __int128 v45 = objc_alloc(&OBJC_CLASS___NSString);
      char v39 = (void *)objc_claimAutoreleasedReturnValue([v6 initialAssetSelector]);
      __int128 v46 = (objc_class *)objc_opt_class(v39);
      __int128 v47 = NSStringFromClass(v46);
      id v48 = (void *)objc_claimAutoreleasedReturnValue(v47);
      uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
      id v50 = -[NSString initWithFormat:]( v45,  "initWithFormat:",  @"{_autoAssetJobProgressNewValidatedCurrentStatus} jobInformation.initialAssetSelector of class:%@ | jobInformation:%@",  v48,  v49);
      id v51 = @"AUTO-CONTROL-PROGRESS(from auto-asset-job):JOB-INFORMATION-INITIAL-ASSET-SELECTOR-WRONG-CLASS";
    }

    [v35 trackAnomaly:v51 forReason:v50 withResult:6103 withError:0];

LABEL_18:
    goto LABEL_19;
  }

+ (void)autoSetJobIssueProgress:(id)a3 forAssetSetIdentifier:(id)a4 withAutoAssetUUID:(id)a5 withSetJobInformation:(id)a6 withResponseError:(id)a7
{
  id v9 = a3;
  id v10 = a5;
  id v11 = a6;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 autoControlManagerFSM]);
  id v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 extendedStateQueue]);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = __134__MADAutoAssetControlManager_autoSetJobIssueProgress_forAssetSetIdentifier_withAutoAssetUUID_withSetJobInformation_withResponseError___block_invoke;
  v19[3] = &unk_34E358;
  id v20 = v12;
  id v21 = v10;
  id v22 = v11;
  id v23 = v9;
  id v15 = v9;
  id v16 = v11;
  id v17 = v10;
  id v18 = v12;
  dispatch_async(v14, v19);
}

void __134__MADAutoAssetControlManager_autoSetJobIssueProgress_forAssetSetIdentifier_withAutoAssetUUID_withSetJobInformation_withResponseError___block_invoke( uint64_t a1)
{
  uint64_t v2 = a1;
  unsigned int v3 = [*(id *)(a1 + 32) operatingBeforeFirstUnlock];
  BOOL v4 = *(void **)(v2 + 32);
  if (v3)
  {
    id v35 = (id)objc_claimAutoreleasedReturnValue([v4 autoControlManagerFSM]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v35 diag]);
    id v6 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v7 = *(void *)(v2 + 40);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v2 + 48) currentSetStatus]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 downloadProgress]);
    if (v9)
    {
      uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(v2 + 48) currentSetStatus]);
      uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([(id)v2 downloadProgress]);
      id v10 = (__CFString *)objc_claimAutoreleasedReturnValue([v1 summary]);
    }

    else
    {
      id v10 = @"N";
    }

    id v34 = -[NSString initWithFormat:]( v6,  "initWithFormat:",  @"{autoSetJobIssueProgress} set-job indication of download progress when device is before first-unlock | jobID:%@ | progressReport:%@",  v7,  v10);
    [v5 trackAnomaly:@"AUTO-CONTROL-PROGRESS(from set-job):BEFORE-FIRST" forReason:v34 withResult:6101 withError:0];

    if (v9)
    {
    }
  }

  else if (([v4 operatingBeforeResumed] & 1) == 0)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(v2 + 32) _autoAssetSetJobProgressNewValidatedCurrentStatus:*(void *)(v2 + 48)]);
    id v12 = [*(id *)(v2 + 56) count];
    if (v11)
    {
      uint64_t v13 = (uint64_t)v12;
      id v14 = *(void **)(v2 + 32);
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
      id v17 =  [v14 updateAutoAssetSetStatus:@"autoSetJobIssueProgress" forClientDomain:v15 forAssetSetIdentifier:v16 forJobResponse:0 withResponseError:0 clearing DownloadProgressReason:0 withAssetSetStatus:0];

      if (v13 >= 1)
      {
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v11 downloadProgress]);
        id v19 = [v18 totalExpectedBytes];

        if ((uint64_t)v19 >= 1)
        {
          __int128 v38 = 0u;
          __int128 v39 = 0u;
          __int128 v36 = 0u;
          __int128 v37 = 0u;
          id v20 = *(id *)(v2 + 56);
          id v21 = [v20 countByEnumeratingWithState:&v36 objects:v40 count:16];
          if (v21)
          {
            id v22 = v21;
            uint64_t v23 = *(void *)v37;
            do
            {
              for (unint64_t i = 0LL; i != v22; unint64_t i = (char *)i + 1)
              {
                if (*(void *)v37 != v23) {
                  objc_enumerationMutation(v20);
                }
                char v25 = *(void **)(*((void *)&v36 + 1) + 8LL * (void)i);
                id v26 = objc_autoreleasePoolPush();
                uint64_t v27 = objc_claimAutoreleasedReturnValue([v25 clientReplyCompletion]);
                if (v27)
                {
                  id v28 = (void *)v27;
                  id v29 = (void *)objc_claimAutoreleasedReturnValue([v25 clientProgressProxy]);

                  if (v29)
                  {
                    id v30 = (void *)objc_claimAutoreleasedReturnValue([v25 clientProgressProxy]);
                    char v31 = objc_opt_respondsToSelector(v30, "executeGenericBlock:");

                    if ((v31 & 1) != 0)
                    {
                      unsigned int v32 = (void *)objc_claimAutoreleasedReturnValue([v25 clientProgressProxy]);
                      id v33 = +[MASAutoAssetSetStatus newShimmedToFramework:]( &OBJC_CLASS___MASAutoAssetSetStatus,  "newShimmedToFramework:",  v11);
                      [v32 executeGenericBlock:v33];
                    }
                  }
                }

                objc_autoreleasePoolPop(v26);
              }

              id v22 = [v20 countByEnumeratingWithState:&v36 objects:v40 count:16];
            }

            while (v22);
          }
        }
      }
    }
  }

- (id)_autoAssetSetJobProgressNewValidatedCurrentStatus:(id)a3
{
  id v4 = a3;
  if (!v4)
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
    [v27 trackAnomaly:@"AUTO-CONTROL-PROGRESS(from set-job):NO-SET-JOB-INFORMATION" forReason:@"{_autoAssetSetJobProgressNewValidatedCurrentStatus} required setJobInformation not provided" withResult:6102 withError:0];
LABEL_17:
    id v34 = 0LL;
    goto LABEL_18;
  }

  uint64_t v5 = objc_opt_class(&OBJC_CLASS___MADAutoSetJobInformation);
  if ((objc_opt_isKindOfClass(v4, v5) & 1) == 0)
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
    __int128 v37 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v38 = (objc_class *)objc_opt_class(v4);
    __int128 v39 = NSStringFromClass(v38);
    unsigned int v40 = (void *)objc_claimAutoreleasedReturnValue(v39);
    unsigned int v41 = -[NSString initWithFormat:]( v37,  "initWithFormat:",  @"{_autoAssetSetJobProgressNewValidatedCurrentStatus} setJobInformation of class:%@",  v40);
    id v42 = @"AUTO-CONTROL-PROGRESS(from set-job):SET-JOB-INFORMATION-WRONG-CLASS";
    id v43 = v27;
    uint64_t v44 = v41;
    uint64_t v45 = 6103LL;
LABEL_15:
    [v43 trackAnomaly:v42 forReason:v44 withResult:v45 withError:0];

LABEL_16:
    goto LABEL_17;
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 currentSetStatus]);

  if (!v6)
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
    __int128 v46 = objc_alloc(&OBJC_CLASS___NSString);
    unsigned int v40 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
    unsigned int v41 = -[NSString initWithFormat:]( v46,  "initWithFormat:",  @"{_autoAssetSetJobProgressNewValidatedCurrentStatus} required setJobInformation.currentSetStatus not provided | setJobInformation:%@",  v40);
    id v42 = @"AUTO-CONTROL-PROGRESS(from set-job):SET-JOB-INFORMATION-NIL-CURRENT-STATUS";
    id v43 = v27;
    uint64_t v44 = v41;
    uint64_t v45 = 6102LL;
    goto LABEL_15;
  }

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 currentSetStatus]);
  uint64_t v8 = objc_opt_class(&OBJC_CLASS___MANAutoAssetSetStatus);
  char isKindOfClass = objc_opt_isKindOfClass(v7, v8);

  if ((isKindOfClass & 1) == 0)
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
    id v48 = objc_alloc(&OBJC_CLASS___NSString);
    unsigned int v40 = (void *)objc_claimAutoreleasedReturnValue([v4 currentSetStatus]);
    uint64_t v49 = (objc_class *)objc_opt_class(v40);
    id v50 = NSStringFromClass(v49);
    id v51 = (void *)objc_claimAutoreleasedReturnValue(v50);
    id v52 = -[NSString initWithFormat:]( v48,  "initWithFormat:",  @"{_autoAssetSetJobProgressNewValidatedCurrentStatus} setJobInformation.currentSetStatus of class:%@",  v51);
    [v27 trackAnomaly:@"AUTO-CONTROL-PROGRESS(from set-job):SET-JOB-INFORMATION-CURRENT-STATUS-WRONG-CLASS" forReason:v52 withResult:6103 withError:0];

    goto LABEL_16;
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v4 currentSetStatus]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 clientDomainName]);

  if (!v11) {
    goto LABEL_22;
  }
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v4 currentSetStatus]);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
  uint64_t v14 = objc_opt_class(&OBJC_CLASS___NSString);
  char v15 = objc_opt_isKindOfClass(v13, v14);

  if ((v15 & 1) == 0)
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
    id v53 = objc_alloc(&OBJC_CLASS___NSString);
    id v54 = (void *)objc_claimAutoreleasedReturnValue([v4 currentSetStatus]);
    unsigned int v55 = (void *)objc_claimAutoreleasedReturnValue([v54 clientDomainName]);
    unsigned int v56 = (objc_class *)objc_opt_class(v55);
    id v57 = NSStringFromClass(v56);
    id v58 = (void *)objc_claimAutoreleasedReturnValue(v57);
    unsigned int v59 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
    unsigned int v60 = -[NSString initWithFormat:]( v53,  "initWithFormat:",  @"{_autoAssetSetJobProgressNewValidatedCurrentStatus} setJobInformation.clientDomainName of class:%@ | setJobInformation:%@",  v58,  v59);
    char v61 = @"AUTO-CONTROL-PROGRESS(from set-job):SET-JOB-INFORMATION-CLIENT-DOMAIN-NAME-WRONG-CLASS";
LABEL_25:
    [v27 trackAnomaly:v61 forReason:v60 withResult:6103 withError:0];

    goto LABEL_17;
  }

  id v16 = (void *)objc_claimAutoreleasedReturnValue([v4 currentSetStatus]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSetIdentifier]);

  if (!v17)
  {
LABEL_22:
    id v34 = 0LL;
    goto LABEL_20;
  }

  id v18 = (void *)objc_claimAutoreleasedReturnValue([v4 currentSetStatus]);
  id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSetIdentifier]);
  uint64_t v20 = objc_opt_class(&OBJC_CLASS___NSString);
  char v21 = objc_opt_isKindOfClass(v19, v20);

  if ((v21 & 1) == 0)
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
    unsigned int v62 = objc_alloc(&OBJC_CLASS___NSString);
    id v54 = (void *)objc_claimAutoreleasedReturnValue([v4 currentSetStatus]);
    unsigned int v55 = (void *)objc_claimAutoreleasedReturnValue([v54 assetSetIdentifier]);
    id v63 = (objc_class *)objc_opt_class(v55);
    unsigned __int8 v64 = NSStringFromClass(v63);
    id v58 = (void *)objc_claimAutoreleasedReturnValue(v64);
    unsigned int v59 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
    unsigned int v60 = -[NSString initWithFormat:]( v62,  "initWithFormat:",  @"{_autoAssetSetJobProgressNewValidatedCurrentStatus} setJobInformation.assetSetIdentifier of class:%@ | setJobInformation:%@",  v58,  v59);
    char v61 = @"AUTO-CONTROL-PROGRESS(from set-job):SET-JOB-INFORMATION-ASSET-SET-IDENTIFIER-WRONG-CLASS";
    goto LABEL_25;
  }

  id v22 = (void *)objc_claimAutoreleasedReturnValue([v4 currentSetStatus]);
  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 downloadProgress]);

  if (!v23)
  {
    id v34 = 0LL;
    goto LABEL_19;
  }

  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v22 downloadProgress]);
  uint64_t v25 = objc_opt_class(&OBJC_CLASS___MANAutoAssetSetProgress);
  char v26 = objc_opt_isKindOfClass(v24, v25);

  if ((v26 & 1) != 0)
  {
    id v83 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetStatus);
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v22 clientDomainName]);
    uint64_t v82 = objc_claimAutoreleasedReturnValue([v22 assetSetIdentifier]);
    id v85 = (void *)objc_claimAutoreleasedReturnValue([v22 configuredAssetEntries]);
    id v103 = [v85 copy];
    id v81 = (void *)objc_claimAutoreleasedReturnValue([v22 atomicInstancesDownloaded]);
    id v102 = [v81 copy];
    id v101 = (void *)objc_claimAutoreleasedReturnValue([v22 catalogCachedAssetSetID]);
    objc_super v100 = (void *)objc_claimAutoreleasedReturnValue([v22 catalogDownloadedFromLive]);
    uint64_t v99 = (void *)objc_claimAutoreleasedReturnValue([v22 catalogLastTimeChecked]);
    __int16 v98 = (void *)objc_claimAutoreleasedReturnValue([v22 catalogPostedDate]);
    id v97 = (void *)objc_claimAutoreleasedReturnValue([v22 newerAtomicInstanceDiscovered]);
    id v87 = (void *)objc_claimAutoreleasedReturnValue([v22 newerDiscoveredAtomicEntries]);
    id v96 = [v87 copy];
    uint64_t v86 = (void *)objc_claimAutoreleasedReturnValue([v22 latestDownloadedAtomicInstance]);
    id v95 = [v86 copy];
    unsigned int v84 = (void *)objc_claimAutoreleasedReturnValue([v22 latestDowloadedAtomicInstanceEntries]);
    id v94 = [v84 copy];
    id v93 = (void *)objc_claimAutoreleasedReturnValue([v22 downloadedCatalogCachedAssetSetID]);
    __int128 v92 = (void *)objc_claimAutoreleasedReturnValue([v22 downloadedCatalogDownloadedFromLive]);
    uint64_t v91 = (void *)objc_claimAutoreleasedReturnValue([v22 downloadedCatalogLastTimeChecked]);
    id v90 = (void *)objc_claimAutoreleasedReturnValue([v22 downloadedCatalogPostedDate]);
    id v80 = (void *)objc_claimAutoreleasedReturnValue([v22 currentNotifications]);
    id v89 = [v80 copy];
    unsigned __int8 v79 = (void *)objc_claimAutoreleasedReturnValue([v22 currentNeedPolicy]);
    id v76 = [v79 copy];
    BOOL v78 = (void *)objc_claimAutoreleasedReturnValue([v22 clientDomainName]);
    unsigned __int8 v77 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSetIdentifier]);
    id v88 = +[MADAutoAssetScheduler newSetPolicyForDomainName:forAssetSetIdentifier:]( &OBJC_CLASS___MADAutoAssetScheduler,  "newSetPolicyForDomainName:forAssetSetIdentifier:",  v78,  v77);
    unsigned __int8 v74 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager stagerSetPolicy]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerSetPolicy"));
    unsigned __int8 v73 = [v22 haveReceivedLookupResponse];
    unsigned __int8 v72 = [v22 vendingAtomicInstanceForConfiguredEntries];
    unsigned __int8 v71 = [v22 downloadUserInitiated];
    id v75 = (void *)objc_claimAutoreleasedReturnValue([v22 downloadProgress]);
    id v70 = [v75 copy];
    id v28 = [v22 downloadedNetworkBytes];
    id v29 = [v22 downloadedFilesystemBytes];
    uint64_t v69 = (void *)objc_claimAutoreleasedReturnValue([v22 currentLockUsage]);
    id v30 = (void *)objc_claimAutoreleasedReturnValue([v22 selectorsForStaging]);
    char v31 = (void *)objc_claimAutoreleasedReturnValue([v22 availableForUseError]);
    unsigned int v32 = (void *)objc_claimAutoreleasedReturnValue([v22 newerVersionError]);
    BYTE2(v68) = v71;
    BYTE1(v68) = v72;
    LOBYTE(v68) = v73;
    id v33 = (void *)v82;
    id v34 = -[MANAutoAssetSetStatus initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( v83,  "initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:wit hCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:with NewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatest DowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive :withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNe edPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfigure dEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemB ytes:withCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  v27,  v82,  v103,  v102,  v101,  v100,  v99,  v98,  v97,  v96,  v95,  v94,  v93,  v92,  v91,  v90,  v89,  v76,  v88,  v74,  v68,  v70,  v28,  v29,  v69,  v30,  v31,  v32);

    id v35 = (NSString *)v81;
    __int128 v36 = v85;
  }

  else
  {
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v33 = (void *)objc_claimAutoreleasedReturnValue([v27 diag]);
    id v65 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v22 downloadProgress]);
    unsigned int v66 = (objc_class *)objc_opt_class(v36);
    id v67 = NSStringFromClass(v66);
    id v103 = (id)objc_claimAutoreleasedReturnValue(v67);
    id v35 = -[NSString initWithFormat:]( v65,  "initWithFormat:",  @"{_autoAssetSetJobProgressNewValidatedCurrentStatus} setJobInformation.currentSetStatus.downloadProgress of class:%@",  v103);
    [v33 trackAnomaly:@"AUTO-CONTROL-PROGRESS(from set-job):SET-JOB-INFORMATION-CURRENT-STATUS-DOWNLOAD-PROGRESS-WRONG-CLASS" forReason:v35 withResult:6103 withError:0];
    id v34 = 0LL;
  }

LABEL_18:
LABEL_19:

LABEL_20:
  return v34;
}

+ (BOOL)autoSetJobAvailableAtomicInstanceForSetDescriptor:(id)a3
{
  id v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v14 = 0LL;
  char v15 = &v14;
  uint64_t v16 = 0x2020000000LL;
  char v17 = 0;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 autoControlManagerFSM]);
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __80__MADAutoAssetControlManager_autoSetJobAvailableAtomicInstanceForSetDescriptor___block_invoke;
  block[3] = &unk_34E790;
  id v11 = v4;
  id v12 = v3;
  uint64_t v13 = &v14;
  id v7 = v3;
  id v8 = v4;
  dispatch_sync(v6, block);

  LOBYTE(v5) = *((_BYTE *)v15 + 24);
  _Block_object_dispose(&v14, 8);
  return (char)v5;
}

void __80__MADAutoAssetControlManager_autoSetJobAvailableAtomicInstanceForSetDescriptor___block_invoke( uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientDomainName]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) assetSetIdentifier]);
  id v7 = (id)objc_claimAutoreleasedReturnValue([v2 locateSetConfigurationByClientDomain:v3 forAssetSetIdentifier:v4]);

  uint64_t v5 = v7;
  if (v7)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v7 latestAtomicInstanceToVend]);
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v6 != 0LL;

    uint64_t v5 = v7;
  }
}

+ (void)autoAssetJobIssueReply:(id)a3 forAutoAssetSelector:(id)a4 withAutoAssetUUID:(id)a5 fromAutoAssetJob:(id)a6 withOriginalSelector:(id)a7 withJobInformation:(id)a8 withResponseError:(id)a9
{
  id v14 = a3;
  id v15 = a8;
  id v16 = a9;
  id v36 = a7;
  id v35 = a6;
  id v17 = a5;
  id v18 = a4;
  __int128 v38 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v19 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v37 = v16;
  if (!v16)
  {
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v15 clientInstance]);
    -[NSMutableDictionary setSafeObject:forKey:](v19, "setSafeObject:forKey:", v20, @"instance");

    char v21 = (void *)objc_claimAutoreleasedReturnValue([v15 foundContent]);
    -[NSMutableDictionary setSafeObject:forKey:](v19, "setSafeObject:forKey:", v21, @"found");

    id v22 = (void *)objc_claimAutoreleasedReturnValue([v15 clientDesire]);
    -[NSMutableDictionary setSafeObject:forKey:](v19, "setSafeObject:forKey:", v22, @"desire");
  }

  uint64_t v23 = v15;
  uint64_t v24 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v14 clientRequestMessage]);
  char v26 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v25));
  uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v14 clientID]);
  id v28 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v24,  "initWithType:messageName:clientID:version:message:",  2LL,  v26,  v27,  0LL,  v19);

  if (v28)
  {
    [v14 setResponseMessage:v28];
  }

  else
  {
    id v29 = (void *)objc_claimAutoreleasedReturnValue([v38 logger]);
    id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetControlManager autoAssetJobIssueReply:forAutoAssetSelector:withAutoAssetUUID:fromAutoAssetJob:withOriginalSelector:withJobInformation:withResponseError:].cold.1((uint64_t)v37);
    }
  }

  char v31 = objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam);
  unsigned int v32 = (void *)objc_claimAutoreleasedReturnValue([v14 clientReplyCompletion]);
  id v33 = -[MADAutoAssetControlManagerParam initForJobIssueReply:forAutoAssetSelector:withAutoAssetUUID:withResponseMessage:withResponseError:]( v31,  "initForJobIssueReply:forAutoAssetSelector:withAutoAssetUUID:withResponseMessage:withResponseError:",  v32,  v18,  v17,  v28,  v37);

  [v33 setClientRequest:v14];
  [v33 setFromAutoAssetJob:v35];

  [v33 setOriginalSelector:v36];
  [v33 setJobInformation:v23];
  [v33 updateSafeSummary];
  id v34 = (void *)objc_claimAutoreleasedReturnValue([v38 autoControlManagerFSM]);
  [v34 postEvent:@"JobIssueClientReply" withInfo:v33];
}

+ (void)autoSetJobIssueReply:(id)a3 forDomainName:(id)a4 forAssetSetIdentifier:(id)a5 withAutoAssetUUID:(id)a6 fromAutoAssetJob:(id)a7 withSetJobInformation:(id)a8 withResponseError:(id)a9
{
  id v15 = a9;
  id v16 = a8;
  id v17 = a7;
  id v18 = a6;
  id v19 = a5;
  id v20 = a4;
  id v21 = a3;
  id v26 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v22 = objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam);
  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v21 clientReplyCompletion]);
  id v24 = -[MADAutoAssetControlManagerParam initForSetJobIssueReply:forDomainName:forAssetSetIdentifier:withAutoAssetUUID:withSetJobInformation:withResponseError:]( v22,  "initForSetJobIssueReply:forDomainName:forAssetSetIdentifier:withAutoAssetUUID:withSetJobInformation:withResponseError:",  v23,  v20,  v19,  v18,  v16,  v15);

  [v24 setClientRequest:v21];
  [v24 setFromAutoAssetJob:v17];

  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v26 autoControlManagerFSM]);
  [v25 postEvent:@"SetJobIssueClientReply" withInfo:v24];
}

+ (id)autoAssetJob:(id)a3 bondWithStagerDownloading:(id)a4
{
  return 0LL;
}

+ (void)autoAssetStagerSetJobDetermineDone:(id)a3 withBaseForStagingDescriptors:(id)a4 withDetermineError:(id)a5
{
  id v7 = a5;
  id v8 = a4;
  id v9 = a3;
  id v12 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v10 = -[MADAutoAssetControlManagerParam initForStagerJobLookupResults:withBaseForStagingDescriptors:withDetermineError:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForStagerJobLookupResults:withBaseForStagingDescriptors:withDetermineError:",  v9,  v8,  v7);

  [v10 updateSafeSummary];
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v12 autoControlManagerFSM]);
  [v11 postEvent:@"StagerDetermineDone" withInfo:v10];
}

+ (void)autoAssetStagerJobDownloadProgress:(id)a3 withProgressError:(id)a4
{
}

+ (void)autoAssetStagerJobDownloadDone:(id)a3 withDownloadedDescriptor:(id)a4 withDownloadError:(id)a5
{
  id v7 = a5;
  id v8 = a4;
  id v9 = a3;
  id v12 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v10 = -[MADAutoAssetControlManagerParam initForStagerJobInformation:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForStagerJobInformation:",  v7);

  [v10 setJobInformation:v9];
  [v10 setDownloadingDescriptor:v8];

  [v10 updateSafeSummary];
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v12 autoControlManagerFSM]);
  [v11 postEvent:@"StagerDownloadDone" withInfo:v10];
}

+ (void)autoAssetJobFinished:(id)a3 withAutoAssetUUID:(id)a4 schedulerInvolved:(BOOL)a5 potentialNetworkFailure:(BOOL)a6
{
  BOOL v6 = a6;
  BOOL v7 = a5;
  id v9 = a4;
  id v10 = a3;
  id v13 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v11 = -[MADAutoAssetControlManagerParam initForFinishedJobSelector:withAutoAssetUUID:withSchedulerInvolved:withPotentialNetworkFailure:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForFinishedJobSelector:withAutoAssetUUID:withSchedulerInvolved:withPotentialNetworkFailure:",  v10,  v9,  v7,  v6);

  id v12 = (void *)objc_claimAutoreleasedReturnValue([v13 autoControlManagerFSM]);
  [v12 postEvent:@"JobFinished" withInfo:v11];
}

+ (void)autoSetJobFinished:(id)a3 forAssetSetIdentifier:(id)a4 withAutoAssetUUID:(id)a5 fromAutoAssetJob:(id)a6 withSetJobInformation:(id)a7 schedulerInvolved:(BOOL)a8 potentialNetworkFailure:(BOOL)a9
{
  BOOL v9 = a8;
  id v26 = a7;
  id v14 = a6;
  id v15 = a5;
  id v16 = a4;
  id v17 = a3;
  id v18 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v19 = (void *)objc_claimAutoreleasedReturnValue([v26 foundContent]);

  if (v19)
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v26 foundContent]);
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 currentSetStatus]);
  }

  else
  {
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v26 currentSetStatus]);
  }

  id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 newerAtomicInstanceDiscovered]);
  if (!v22) {
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 latestDownloadedAtomicInstance]);
  }
  LOBYTE(v25) = a9;
  id v23 = -[MADAutoAssetControlManagerParam initForFinishedSetJob:forAssetSetIdentifier:withSetAtomicInstance:withAutoAssetUUID:withSetJobInformation:withSchedulerInvolved:withPotentialNetworkFailure:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForFinishedSetJob:forAssetSetIdentifier:withSetAtomicInstance:withAutoAssetUUID:withSetJobInformation:with SchedulerInvolved:withPotentialNetworkFailure:",  v17,  v16,  v22,  v15,  v26,  v9,  v25);

  [v23 setFromAutoAssetJob:v14];
  id v24 = (void *)objc_claimAutoreleasedReturnValue([v18 autoControlManagerFSM]);
  [v24 postEvent:@"JobFinished" withInfo:v23];
}

+ (void)stagerRequestAlreadyDownloadedDescriptors
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v4 autoControlManagerFSM]);
  id v3 = -[MADAutoAssetControlManagerParam initWithSafeSummary:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initWithSafeSummary:",  @"stagerRequestAlreadyDownloadedDescriptors");
  [v2 postEvent:@"StagerAlreadyDownloaded" withInfo:v3];
}

+ (void)stagerStartSetJobDetermineIfAvailable:(id)a3 withAssetTargetOSVersion:(id)a4 withAssetTargetBuildVersion:(id)a5 withAssetTargetTrainName:(id)a6 withAssetTargetRestoreVersion:(id)a7
{
  id v11 = a7;
  id v12 = a6;
  id v13 = a5;
  id v14 = a4;
  id v15 = a3;
  id v18 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v16 = -[MADAutoAssetControlManagerParam initForStagerSetJobStart:withAssetTargetOSVersion:withAssetTargetBuildVersion:withAssetTargetTrainName:withAssetTargetRestoreVersion:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForStagerSetJobStart:withAssetTargetOSVersion:withAssetTargetBuildVersion:withAssetTargetTrainName:withAss etTargetRestoreVersion:",  v15,  v14,  v13,  v12,  v11);

  id v17 = (void *)objc_claimAutoreleasedReturnValue([v18 autoControlManagerFSM]);
  [v17 postEvent:@"StagerStartDetermine" withInfo:v16];
}

+ (void)stagerStartJobDownloadForStaging:(id)a3 withStagerSetConfiguration:(id)a4 usingCachedAutoAssetCatalog:(id)a5 usingBaseForPatching:(id)a6 withAssetTargetOSVersion:(id)a7 withAssetTargetBuildVersion:(id)a8
{
  id v13 = a8;
  id v14 = a7;
  id v15 = a6;
  id v16 = a5;
  id v17 = a4;
  id v18 = a3;
  id v21 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v19 = -[MADAutoAssetControlManagerParam initForStagerJobStart:withStagerSetConfiguration:usingCachedAutoAssetCatalog:usingBaseForPatching:withAssetTargetOSVersion:withAssetTargetBuildVersion:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForStagerJobStart:withStagerSetConfiguration:usingCachedAutoAssetCatalog:usingBaseForPatching:withAssetTar getOSVersion:withAssetTargetBuildVersion:",  v18,  v17,  v16,  v15,  v14,  v13);

  id v20 = (void *)objc_claimAutoreleasedReturnValue([v21 autoControlManagerFSM]);
  [v20 postEvent:@"StagerStartDownload" withInfo:v19];
}

+ (void)stagerCancelCurrentJob
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v4 autoControlManagerFSM]);
  id v3 = -[MADAutoAssetControlManagerParam initWithSafeSummary:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initWithSafeSummary:",  @"stagerCancelCurrentJob");
  [v2 postEvent:@"StagerCancelCurrentJob" withInfo:v3];
}

+ (void)stagerEliminatedSelector:(id)a3
{
  id v3 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v4 = -[MADAutoAssetControlManagerParam initForAssetSelector:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForAssetSelector:",  v3);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v6 autoControlManagerFSM]);
  [v5 postEvent:@"StagerEliminatedSelector" withInfo:v4];
}

+ (void)stagerEliminatedSetConfiguration:(id)a3
{
  id v3 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v4 = -[MADAutoAssetControlManagerParam initForSetConfiguration:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForSetConfiguration:",  v3);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v6 autoControlManagerFSM]);
  [v5 postEvent:@"StagerEliminatedConfiguration" withInfo:v4];
}

+ (void)stagerPurgeStagedContent:(id)a3
{
  id v3 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v4 = -[MADAutoAssetControlManagerParam initForAutoAssetDescriptors:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForAutoAssetDescriptors:",  v3);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v6 autoControlManagerFSM]);
  [v5 postEvent:@"StagerPurgeStagedContent" withInfo:v4];
}

+ (void)schedulerTriggeredSelectors:(id)a3
{
  id v3 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v4 = -[MADAutoAssetControlManagerParam initForTriggeredSelectors:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForTriggeredSelectors:",  v3);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v6 autoControlManagerFSM]);
  [v5 postEvent:@"SchedulerTriggered" withInfo:v4];
}

+ (void)schedulerTriggeredSets:(id)a3
{
  id v3 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v4 = -[MADAutoAssetControlManagerParam initForTriggeredSets:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForTriggeredSets:",  v3);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v6 autoControlManagerFSM]);
  [v5 postEvent:@"SchedulerSetsTriggered" withInfo:v4];
}

+ (void)schedulerTriggeredNoActivity
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v2 = -[MADAutoAssetControlManagerParam initForTriggeredNoActivity]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForTriggeredNoActivity");
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v4 autoControlManagerFSM]);
  [v3 postEvent:@"SchedulerNoActivity" withInfo:v2];
}

+ (void)schedulerEliminatedSelector:(id)a3
{
  id v3 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v4 = -[MADAutoAssetControlManagerParam initForAssetSelector:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForAssetSelector:",  v3);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v6 autoControlManagerFSM]);
  [v5 postEvent:@"SchedulerEliminatedSelector" withInfo:v4];
}

+ (void)schedulerEliminatedSetDomainName:(id)a3 forAssetSetIdentifier:(id)a4
{
  id v5 = a4;
  id v6 = a3;
  id v10 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( objc_alloc(&OBJC_CLASS___MAAutoAssetSelector),  "initForAssetType:withAssetSpecifier:",  v6,  v5);

  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v8 = -[MADAutoAssetControlManagerParam initForAssetSelector:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForAssetSelector:",  v10);
  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([v7 autoControlManagerFSM]);
  [v9 postEvent:@"SchedulerEliminatedSelector" withInfo:v8];
}

- (BOOL)schedulerReferencesDescriptor:(id)a3
{
  id v3 = a3;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetScheduler jobsAwaitingTrigger]( &OBJC_CLASS___MADAutoAssetScheduler,  "jobsAwaitingTrigger"));
  id v4 = [obj countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v23;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v20 = *(void *)v23;
    do
    {
      for (unint64_t i = 0LL; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v5) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(void **)(*((void *)&v22 + 1) + 8LL * (void)i);
        BOOL v9 = p_ivars[155];
        id v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "assetSelector", v20));
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 assetType]);
        id v12 = (void *)objc_claimAutoreleasedReturnValue([v3 assetType]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v9, "stringIsEqual:to:", v11, v12) & 1) != 0)
        {
          id v13 = p_ivars[155];
          id v14 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSelector]);
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSpecifier]);
          id v16 = v4;
          id v17 = v3;
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v3 assetSpecifier]);
          LOBYTE(v13) = -[__objc2_ivar_list stringIsEqual:to:](v13, "stringIsEqual:to:", v15, v18);

          id v3 = v17;
          id v4 = v16;

          uint64_t v5 = v20;
          p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);

          if ((v13 & 1) != 0)
          {
            LOBYTE(v4) = 1;
            goto LABEL_12;
          }
        }

        else
        {
        }
      }

      id v4 = [obj countByEnumeratingWithState:&v22 objects:v26 count:16];
    }

    while (v4);
  }

+ (void)secureOperationsFinished:(id)a3 forSetDescriptor:(id)a4 forAutoAssetDescriptors:(id)a5
{
  id v7 = a5;
  id v8 = a4;
  id v9 = a3;
  id v12 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v10 = -[MADAutoAssetControlManagerParam initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:",  v9,  v8,  v7);

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v12 autoControlManagerFSM]);
  [v11 postEvent:@"SecureOperationsFinished" withInfo:v10];
}

+ (void)handleReceivedPushNotifications:(id)a3
{
  id v3 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v4 = -[MADAutoAssetControlManagerParam initForReceivedPushNotifications:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForReceivedPushNotifications:",  v3);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v6 autoControlManagerFSM]);
  [v5 postEvent:@"PushNotificationReceived" withInfo:v4];
}

+ (void)postNotificationName:(id)a3 forAssetType:(id)a4 forAssetSpecifier:(id)a5 fromModule:(id)a6 fromLocation:(id)a7
{
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  id v15 = a7;
  if (v13) {
    id v16 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @" | assetSpecifier:%@",  v13);
  }
  else {
    id v16 = &stru_355768;
  }
  if ((objc_opt_respondsToSelector(&OBJC_CLASS___MAAutoAssetNotifications, "notifyRegistrationName:forAssetType:") & 1) != 0
    && (objc_opt_respondsToSelector( &OBJC_CLASS___MAAutoAssetNotifications,  "notifyRegistrationName:forAssetType:forAssetSpecifier:") & 1) != 0)
  {
    id v17 = objc_claimAutoreleasedReturnValue( +[MAAutoAssetNotifications notifyRegistrationName:forAssetType:]( &OBJC_CLASS___MAAutoAssetNotifications, "notifyRegistrationName:forAssetType:", v11, v12));
    uint32_t v18 = notify_post((const char *)[v17 UTF8String]);
    uint32_t v19 = v18;
    if (v13)
    {
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetNotifications notifyRegistrationName:forAssetType:forAssetSpecifier:]( &OBJC_CLASS___MAAutoAssetNotifications,  "notifyRegistrationName:forAssetType:forAssetSpecifier:",  v11,  v12,  v13));

      id v17 = v20;
      uint32_t v21 = notify_post((const char *)[v17 UTF8String]);
      if (v19 | v21)
      {
        uint32_t v22 = v21;
        uint32_t v32 = v19;
        __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
        __int128 v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

        __int128 v25 = v24;
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138545666;
          id v34 = @">----->";
          __int16 v35 = 2114;
          id v36 = v15;
          __int16 v37 = 2114;
          __int128 v38 = @"P_ERR";
          __int16 v39 = 2114;
          id v40 = v11;
          __int16 v41 = 2114;
          id v42 = @"P_ERR";
          __int16 v43 = 2114;
          id v44 = v12;
          __int16 v45 = 2114;
          __int128 v46 = v16;
          __int16 v47 = 2048;
          unint64_t v48 = v32;
          __int16 v49 = 2048;
          uint64_t v50 = v22;
          __int16 v51 = 2114;
          id v52 = @"<-----<";
          id v26 = "AUTO-CONTROL\n"
                "#_NOTIF:%{public}@ {%{public}@:postNotificationName}\n"
                "#_NOTIF:(%{public}@) posting notification:%{public}@\n"
                "#_NOTIF:(%{public}@) assetType:%{public}@%{public}@ | result:%lu specifierResult:%lu\n"
                "#_NOTIF:%{public}@";
          uint64_t v27 = v24;
          uint32_t v28 = 102;
LABEL_15:
          _os_log_error_impl(&dword_0, v27, OS_LOG_TYPE_ERROR, v26, buf, v28);
          goto LABEL_18;
        }

        goto LABEL_18;
      }
    }

    else if (v18)
    {
      id v30 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
      __int128 v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 oslog]);

      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138545154;
        id v34 = @">----->";
        __int16 v35 = 2114;
        id v36 = v15;
        __int16 v37 = 2114;
        __int128 v38 = @"P_ERR";
        __int16 v39 = 2114;
        id v40 = v11;
        __int16 v41 = 2114;
        id v42 = @"P_ERR";
        __int16 v43 = 2114;
        id v44 = v12;
        __int16 v45 = 2048;
        __int128 v46 = (__CFString *)v19;
        __int16 v47 = 2114;
        unint64_t v48 = (unint64_t)@"<-----<";
        id v26 = "AUTO-CONTROL\n"
              "#_NOTIF:%{public}@ {%{public}@:postNotificationName}\n"
              "#_NOTIF:(%{public}@) posting notification:%{public}@\n"
              "#_NOTIF:(%{public}@) assetType:%{public}@ | result:%lu\n"
              "#_NOTIF:%{public}@";
        uint64_t v27 = v25;
        uint32_t v28 = 82;
        goto LABEL_15;
      }

+ (void)postSetNotificationName:(id)a3 forAssetSetIdentifier:(id)a4 fromModule:(id)a5 fromLocation:(id)a6
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a6;
  id v11 = objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetNotifications notifyRegistrationName:]( &OBJC_CLASS___MANAutoAssetSetNotifications, "notifyRegistrationName:", v8));
  uint32_t v12 = notify_post((const char *)[v11 UTF8String]);
  uint32_t v13 = v12;
  if (v9)
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetNotifications notifyRegistrationName:forAssetSetIdentifier:]( &OBJC_CLASS___MANAutoAssetSetNotifications,  "notifyRegistrationName:forAssetSetIdentifier:",  v8,  v9));

    id v15 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @" assetSetIdentifier:%@",  v9);
    id v11 = v14;
    uint32_t v16 = notify_post((const char *)[v11 UTF8String]);
    if (v13 | v16)
    {
      uint32_t v17 = v16;
      uint32_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
      uint32_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138545410;
        __int128 v23 = @">----->";
        __int16 v24 = 2114;
        id v25 = v10;
        __int16 v26 = 2114;
        uint64_t v27 = @"P_ERR";
        __int16 v28 = 2114;
        id v29 = v8;
        __int16 v30 = 2114;
        char v31 = v15;
        __int16 v32 = 2114;
        id v33 = @"P_ERR";
        __int16 v34 = 2048;
        unint64_t v35 = v13;
        __int16 v36 = 2048;
        uint64_t v37 = v17;
        __int16 v38 = 2114;
        __int16 v39 = @"<-----<";
        _os_log_error_impl( &dword_0,  v19,  OS_LOG_TYPE_ERROR,  "AUTO-SET-CONTROL\n #_NOTIF:%{public}@ {%{public}@:postNotificationName}\n #_NOTIF:(%{public}@) posting notification:%{public}@\n #_NOTIF:(%{public}@)%{public}@ | result:%lu specifierResult:%lu\n #_NOTIF:%{public}@",  buf,  0x5Cu);
      }

      goto LABEL_12;
    }

    goto LABEL_10;
  }

  if (!v12)
  {
    id v15 = &stru_355768;
LABEL_10:
    uint32_t v21 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    uint32_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138544898;
      __int128 v23 = @">----->";
      __int16 v24 = 2114;
      id v25 = v10;
      __int16 v26 = 2114;
      uint64_t v27 = @"EVENT";
      __int16 v28 = 2114;
      id v29 = v8;
      __int16 v30 = 2114;
      char v31 = @"EVENT";
      __int16 v32 = 2114;
      id v33 = v15;
      __int16 v34 = 2114;
      unint64_t v35 = (unint64_t)@"<-----<";
      _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "AUTO-SET-CONTROL\n #_NOTIF:%{public}@ {%{public}@:postNotificationName}\n #_NOTIF:(%{public}@) posting notification:%{public}@\n #_NOTIF:(%{public}@)%{public}@\n #_NOTIF:%{public}@",  buf,  0x48u);
    }

    goto LABEL_12;
  }

  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
  uint32_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

  if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138544898;
    __int128 v23 = @">----->";
    __int16 v24 = 2114;
    id v25 = v10;
    __int16 v26 = 2114;
    uint64_t v27 = @"P_ERR";
    __int16 v28 = 2114;
    id v29 = v8;
    __int16 v30 = 2114;
    char v31 = @"P_ERR";
    __int16 v32 = 2048;
    id v33 = (const __CFString *)v13;
    __int16 v34 = 2114;
    unint64_t v35 = (unint64_t)@"<-----<";
    _os_log_error_impl( &dword_0,  v19,  OS_LOG_TYPE_ERROR,  "AUTO-SET-CONTROL\n #_NOTIF:%{public}@ {%{public}@:postNotificationName}\n #_NOTIF:(%{public}@) posting notification:%{public}@\n #_NOTIF:(%{public}@) | result:%lu\n #_NOTIF:%{public}@",  buf,  0x48u);
  }

  id v15 = &stru_355768;
LABEL_12:
}

+ (void)copyCurrentDownloadedDescriptors:(BOOL)a3 unlockedUnreferencedDescriptors:(id *)a4 unlockedReferencedDescriptors:(id *)a5 lockedOverridableDescriptors:(id *)a6 lockedNeverRemoveDescriptors:(id *)a7 stagedDescriptors:(id *)a8
{
  uint32_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager",  a3));
  uint64_t v48 = 0LL;
  __int16 v49 = &v48;
  uint64_t v50 = 0x3032000000LL;
  __int16 v51 = __Block_byref_object_copy__12;
  id v52 = __Block_byref_object_dispose__12;
  id v53 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v42 = 0LL;
  __int16 v43 = &v42;
  uint64_t v44 = 0x3032000000LL;
  __int16 v45 = __Block_byref_object_copy__12;
  __int128 v46 = __Block_byref_object_dispose__12;
  __int16 v47 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v36 = 0LL;
  uint64_t v37 = &v36;
  uint64_t v38 = 0x3032000000LL;
  __int16 v39 = __Block_byref_object_copy__12;
  id v40 = __Block_byref_object_dispose__12;
  __int16 v41 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v30 = 0LL;
  char v31 = &v30;
  uint64_t v32 = 0x3032000000LL;
  id v33 = __Block_byref_object_copy__12;
  __int16 v34 = __Block_byref_object_dispose__12;
  unint64_t v35 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v24 = 0LL;
  id v25 = &v24;
  uint64_t v26 = 0x3032000000LL;
  uint64_t v27 = __Block_byref_object_copy__12;
  __int16 v28 = __Block_byref_object_dispose__12;
  id v29 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 autoControlManagerFSM]);
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  v17[2] = __201__MADAutoAssetControlManager_copyCurrentDownloadedDescriptors_unlockedUnreferencedDescriptors_unlockedReferencedDescriptors_lockedOverridableDescriptors_lockedNeverRemoveDescriptors_stagedDescriptors___block_invoke;
  v17[3] = &unk_34F100;
  id v16 = v13;
  id v18 = v16;
  uint32_t v19 = &v42;
  uint64_t v20 = &v48;
  uint32_t v21 = &v30;
  uint32_t v22 = &v36;
  __int128 v23 = &v24;
  dispatch_sync(v15, v17);

  if (a4) {
    *a4 = (id) v49[5];
  }
  if (a5) {
    *a5 = (id) v43[5];
  }
  if (a6) {
    *a6 = (id) v37[5];
  }
  if (a7) {
    *a7 = (id) v31[5];
  }
  if (a8) {
    *a8 = (id) v25[5];
  }

  _Block_object_dispose(&v24, 8);
  _Block_object_dispose(&v30, 8);

  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&v42, 8);

  _Block_object_dispose(&v48, 8);
}

void __201__MADAutoAssetControlManager_copyCurrentDownloadedDescriptors_unlockedUnreferencedDescriptors_unlockedReferencedDescriptors_lockedOverridableDescriptors_lockedNeverRemoveDescriptors_stagedDescriptors___block_invoke( uint64_t a1)
{
  id v25 = +[MADAutoAssetLocker copyOfLocksBySelector](&OBJC_CLASS___MADAutoAssetLocker, "copyOfLocksBySelector");
  uint64_t v24 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  +[MADAutoAssetStager extendSummaryWithStagedAssets:basedOnControl:]( &OBJC_CLASS___MADAutoAssetStager,  "extendSummaryWithStagedAssets:basedOnControl:");
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) locateDownloadedNewAllBySelector]);
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v27 objects:v31 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v26 = *(void *)v28;
    do
    {
      for (unint64_t i = 0LL; i != v5; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v28 != v26) {
          objc_enumerationMutation(v3);
        }
        uint64_t v7 = *(void *)(*((void *)&v27 + 1) + 8LL * (void)i);
        id v8 = objc_autoreleasePoolPush();
        id v9 = [v3 safeObjectForKey:v7 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
        if (v10)
        {
          id v11 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
          uint32_t v12 = (void *)objc_claimAutoreleasedReturnValue([v10 assetType]);
          uint32_t v13 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSpecifier]);
          id v14 = (void *)objc_claimAutoreleasedReturnValue([v10 assetVersion]);
          id v15 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v11,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v12,  v13,  v14);

          id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 persistedEntryID]);
          id v17 = [v25 safeObjectForKey:v16 ofClass:objc_opt_class(MAAutoAssetLock)];
          id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
          uint32_t v19 = v18;
          if (v18)
          {
            else {
              uint64_t v20 = *(void *)(a1 + 64);
            }
          }

          else if (([*(id *)(a1 + 32) setConfigurationReferencesDescriptor:v10] & 1) != 0 {
                 || ([*(id *)(a1 + 32) schedulerReferencesDescriptor:v10] & 1) != 0
          }
                 || ([v10 foundByLookupWithoutAssetVersion] & 1) == 0)
          {
            uint64_t v20 = *(void *)(a1 + 40);
          }

          else
          {
            uint64_t v20 = *(void *)(a1 + 48);
          }

          [*(id *)(*(void *)(v20 + 8) + 40) setSafeObject:v10 forKey:v16];
        }

        objc_autoreleasePoolPop(v8);
      }

      id v5 = [v3 countByEnumeratingWithState:&v27 objects:v31 count:16];
    }

    while (v5);
  }

  uint64_t v21 = objc_claimAutoreleasedReturnValue( +[MADAutoAssetStager controlCopyCurrentStagedDescriptors]( &OBJC_CLASS___MADAutoAssetStager,  "controlCopyCurrentStagedDescriptors"));
  uint64_t v22 = *(void *)(*(void *)(a1 + 72) + 8LL);
  __int128 v23 = *(void **)(v22 + 40);
  *(void *)(v22 + 40) = v21;
}

+ (BOOL)assetBeingGarbageCollected:(id)a3 atEmergencyUrgency:(BOOL)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v35 = 0LL;
  uint64_t v36 = &v35;
  uint64_t v37 = 0x3032000000LL;
  uint64_t v38 = __Block_byref_object_copy__12;
  __int16 v39 = __Block_byref_object_dispose__12;
  id v40 = 0LL;
  uint64_t v31 = 0LL;
  uint64_t v32 = &v31;
  uint64_t v33 = 0x2020000000LL;
  char v34 = 0;
  uint64_t v7 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 assetType]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 assetSpecifier]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 assetVersion]);
  id v11 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v7,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v8,  v9,  v10);

  uint32_t v12 = (void *)objc_claimAutoreleasedReturnValue([v6 autoControlManagerFSM]);
  uint32_t v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  uint64_t v21 = _NSConcreteStackBlock;
  uint64_t v22 = 3221225472LL;
  __int128 v23 = __76__MADAutoAssetControlManager_assetBeingGarbageCollected_atEmergencyUrgency___block_invoke;
  uint64_t v24 = &unk_34F128;
  id v14 = v6;
  id v25 = v14;
  id v15 = v5;
  id v26 = v15;
  id v16 = v11;
  BOOL v30 = a4;
  id v27 = v16;
  __int128 v28 = &v35;
  __int128 v29 = &v31;
  dispatch_sync(v13, &v21);

  if (!v36[5])
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "assetType", v21, v22, v23, v24, v25, v26));
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSpecifier]);
    +[MADAutoAssetControlManager postNotificationName:forAssetType:forAssetSpecifier:fromModule:fromLocation:]( &OBJC_CLASS___MADAutoAssetControlManager,  "postNotificationName:forAssetType:forAssetSpecifier:fromModule:fromLocation:",  @"ASSET_VERSION_RECLAIMED",  v17,  v18,  @"CACHE-DELETE",  @"assetBeingGarbageCollected");
    goto LABEL_5;
  }

  if (*((_BYTE *)v32 + 24))
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "assetType", v21, v22, v23, v24, v25, v26));
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSpecifier]);
    +[MADAutoAssetControlManager postNotificationName:forAssetType:forAssetSpecifier:fromModule:fromLocation:]( &OBJC_CLASS___MADAutoAssetControlManager,  "postNotificationName:forAssetType:forAssetSpecifier:fromModule:fromLocation:",  @"ASSET_VERSION_RECLAIM_DESIRED",  v17,  v18,  @"CACHE-DELETE",  @"assetBeingGarbageCollected");
LABEL_5:
  }

  BOOL v19 = v36[5] == 0;

  _Block_object_dispose(&v31, 8);
  _Block_object_dispose(&v35, 8);

  return v19;
}

void __76__MADAutoAssetControlManager_assetBeingGarbageCollected_atEmergencyUrgency___block_invoke( uint64_t a1)
{
  id v2 = +[MADAutoAssetLocker copyOfLocksBySelector](&OBJC_CLASS___MADAutoAssetLocker, "copyOfLocksBySelector");
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) locateDownloadedNewAllBySelector]);
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  id v4 = v3;
  id v5 = [v4 countByEnumeratingWithState:&v50 objects:v60 count:16];
  if (!v5)
  {
LABEL_9:

    BOOL v13 = 0;
LABEL_20:
    if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL)) {
      goto LABEL_28;
    }
    uint64_t v22 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stagerCurrentJob]);
    if (!v22) {
      goto LABEL_24;
    }
    __int128 v23 = (void *)v22;
    uint64_t v24 = *(void **)(a1 + 48);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stagerCurrentJob]);
    id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 autoAssetSelector]);
    LODWORD(v24) = [v24 isEqual:v26];

    if ((_DWORD)v24)
    {
      uint64_t v27 = *(void *)(*(void *)(a1 + 56) + 8LL);
      __int128 v28 = *(void **)(v27 + 40);
      __int128 v29 = @"stager-job(currently being staged)";
    }

    else
    {
LABEL_24:
      uint64_t v30 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stagerBondedToAutoJob", (void)v50));
      if (!v30) {
        goto LABEL_28;
      }
      uint64_t v31 = (void *)v30;
      uint64_t v32 = *(void **)(a1 + 48);
      uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stagerBondedToAutoJob]);
      char v34 = (void *)objc_claimAutoreleasedReturnValue([v33 autoAssetSelector]);
      LODWORD(v32) = [v32 isEqual:v34];

      if (!(_DWORD)v32) {
        goto LABEL_28;
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 56) + 8LL);
      __int128 v28 = *(void **)(v27 + 40);
      __int128 v29 = @"stager-job(bonded to auto-job)";
    }

    *(void *)(v27 + 40) = v29;

LABEL_28:
    uint64_t v35 = *(void *)(a1 + 56);
    if (!*(void *)(*(void *)(v35 + 8) + 40LL))
    {
      unsigned int v36 = [*(id *)(a1 + 32) isAutoAssetBeingEliminated:*(void *)(a1 + 48)];
      uint64_t v35 = *(void *)(a1 + 56);
      if (v36)
      {
        uint64_t v37 = *(void *)(v35 + 8);
        uint64_t v38 = *(void **)(v37 + 40);
        *(void *)(v37 + 40) = @"eliminating(client-requested eliminate in progress)";

        uint64_t v35 = *(void *)(a1 + 56);
      }
    }

    if (!*(void *)(*(void *)(v35 + 8) + 40LL))
    {
      __int16 v39 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentJobBySelector:*(void *)(a1 + 48)]);
      if (v39)
      {
        uint64_t v40 = *(void *)(*(void *)(a1 + 56) + 8LL);
        __int16 v41 = *(void **)(v40 + 40);
        *(void *)(v40 + 40) = @"active(auto-asset-job in progress)";
      }
    }

    id v18 = 0LL;
    char v21 = 1;
    goto LABEL_36;
  }

  id v6 = v5;
  uint64_t v7 = *(void *)v51;
LABEL_3:
  uint64_t v8 = 0LL;
  while (1)
  {
    if (*(void *)v51 != v7) {
      objc_enumerationMutation(v4);
    }
    uint64_t v9 = *(void *)(*((void *)&v50 + 1) + 8 * v8);
    id v10 = objc_autoreleasePoolPush();
    uint64_t v11 = objc_opt_class(&OBJC_CLASS___MADAutoAssetDescriptor);
    uint32_t v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "safeObjectForKey:ofClass:", v9, v11, (void)v50));

    objc_autoreleasePoolPop(v10);
    if (v6 == (id)++v8)
    {
      id v6 = [v4 countByEnumeratingWithState:&v50 objects:v60 count:16];
      if (v6) {
        goto LABEL_3;
      }
      goto LABEL_9;
    }
  }

  id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) persistedEntryID]);
  id v15 = [v2 safeObjectForKey:v14 ofClass:objc_opt_class(MAAutoAssetLock)];
  id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

  BOOL v13 = v16 != 0LL;
  if (v16)
  {
    if (!*(_BYTE *)(a1 + 72)) {
      goto LABEL_16;
    }
    if ([v16 inhibitedFromEmergencyRemoval])
    {
      if (*(_BYTE *)(a1 + 72))
      {
        id v17 = @"locked(inhibited from emergency removal)";
LABEL_17:
        uint64_t v19 = *(void *)(*(void *)(a1 + 56) + 8LL);
        uint64_t v20 = *(void **)(v19 + 40);
        *(void *)(v19 + 40) = v17;

        BOOL v13 = 0;
        id v18 = 0LL;
        *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL) = 1;
        goto LABEL_18;
      }

+ (void)garbageCollectionOperationComplete:(BOOL)a3 originalUnlockedUnreferencedDescriptors:(id)a4 originalUnlockedReferencedDescriptors:(id)a5 originalLockedOverridableDescriptors:(id)a6 originalLockedNeverRemoveDescriptors:(id)a7 originalStagedDescriptors:(id)a8 totalReclaimedSpace:(int64_t)a9 results:(id)a10
{
  id v11 = a10;
  uint32_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  BOOL v13 = (void *)objc_claimAutoreleasedReturnValue([v12 autoControlManagerFSM]);
  id v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __271__MADAutoAssetControlManager_garbageCollectionOperationComplete_originalUnlockedUnreferencedDescriptors_originalUnlockedReferencedDescriptors_originalLockedOverridableDescriptors_originalLockedNeverRemoveDescriptors_originalStagedDescriptors_totalReclaimedSpace_results___block_invoke;
  block[3] = &unk_34F150;
  id v18 = v11;
  id v19 = v12;
  BOOL v21 = a3;
  int64_t v20 = a9;
  id v15 = v12;
  id v16 = v11;
  dispatch_sync(v14, block);
}

id __271__MADAutoAssetControlManager_garbageCollectionOperationComplete_originalUnlockedUnreferencedDescriptors_originalUnlockedReferencedDescriptors_originalLockedOverridableDescriptors_originalLockedNeverRemoveDescriptors_originalStagedDescriptors_totalReclaimedSpace_results___block_invoke( uint64_t a1)
{
  id v2 = (char *)[*(id *)(a1 + 32) reclaimUnlockedUnreferencedAutoAssetCount];
  id v3 = &v2[(void)[*(id *)(a1 + 32) reclaimUnlockedReferencedAutoAssetCount]];
  id v4 = (char *)[*(id *)(a1 + 32) reclaimUnlockedUnreferencedAutoAssetSpace];
  id v5 = &v4[(void)[*(id *)(a1 + 32) reclaimUnlockedReferencedAutoAssetSpace]];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v6 setGarbageCollectionPerformed:1];

  uint64_t v7 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v8 setGarbageCollectionReclaimSpace:v7];

  uint64_t v9 = *(void *)(a1 + 48);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v10 setGarbageCollectionTotalReclaimedSpace:v9];

  id v11 = [*(id *)(a1 + 32) reclaimV2AssetCount];
  uint32_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v12 setGarbageCollectionReclaimedV2AssetCount:v11];

  id v13 = [*(id *)(a1 + 32) reclaimV2AssetSpace];
  id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v14 setGarbageCollectionReclaimedV2AssetSpace:v13];

  id v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v15 setGarbageCollectionReclaimedUnlockedCount:v3];

  id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v16 setGarbageCollectionReclaimedUnlockedSpace:v5];

  id v17 = [*(id *)(a1 + 32) reclaimLockedOverridableAutoAssetCount];
  id v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v18 setGarbageCollectionReclaimedLockedOverridableCount:v17];

  id v19 = [*(id *)(a1 + 32) reclaimLockedOverridableAutoAssetSpace];
  int64_t v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v20 setGarbageCollectionReclaimedLockedOverridableSpace:v19];

  id v21 = [*(id *)(a1 + 32) reclaimLockedNeverRemoveAutoAssetCount];
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v22 setGarbageCollectionReclaimedLockedNeverRemoveCount:v21];

  id v23 = [*(id *)(a1 + 32) reclaimLockedNeverRemoveAutoAssetSpace];
  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v24 setGarbageCollectionReclaimedLockedNeverRemoveSpace:v23];

  id v25 = [*(id *)(a1 + 32) reclaimStagedAutoAssetCount];
  id v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v26 setGarbageCollectionReclaimedStagedCount:v25];

  id v27 = [*(id *)(a1 + 32) reclaimStagedAutoAssetSpace];
  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v28 setGarbageCollectionReclaimedStagedSpace:v27];

  id v29 = [*(id *)(a1 + 32) reclaimMetadataBlockedSpace];
  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v30 setGarbageCollectionReclaimedMetadataBlockedCount:v29];

  id v31 = [*(id *)(a1 + 32) reclaimMetadataBlockedSpace];
  uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
  [v32 setGarbageCollectionReclaimedMetadataBlockedSpace:v31];

  uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) logger]);
  char v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

  if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _updateLatestSummary]);
    unsigned int v36 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) statistics]);
    uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue([v36 summary]);
    int v39 = 138543618;
    uint64_t v40 = v35;
    __int16 v41 = 2114;
    uint64_t v42 = v37;
    _os_log_impl( &dword_0,  v34,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] AUTO-STATISTICS | garbage collection | statistics:%{public}@",  (uint8_t *)&v39,  0x16u);
  }

  return [*(id *)(a1 + 40) _statsMaintainReporting];
}

- (BOOL)isAutoAssetBeingEliminated:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager eliminateTrackerForSelector:](self, "eliminateTrackerForSelector:", v4));
  return v7 != 0LL;
}

- (id)eliminateTrackerForSelector:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 persistedEntryID]);
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  id v10 = [v7 safeObjectForKey:v8 ofClass:objc_opt_class(MADAutoAssetEliminate)];
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  if (!v11)
  {
    uint32_t v12 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v4 assetType]);
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSpecifier]);
    id v15 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( v12,  "initForAssetType:withAssetSpecifier:",  v13,  v14);

    id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v15 persistedEntryID]);
    id v18 = [v16 safeObjectForKey:v17 ofClass:objc_opt_class(MADAutoAssetEliminate)];
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v18);

    if (!v11)
    {
      id v19 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
      int64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v4 assetType]);
      id v21 = -[MAAutoAssetSelector initForAssetType:](v19, "initForAssetType:", v20);

      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
      id v23 = (void *)objc_claimAutoreleasedReturnValue([v21 persistedEntryID]);
      id v24 = [v22 safeObjectForKey:v23 ofClass:objc_opt_class(MADAutoAssetEliminate)];
      id v11 = (void *)objc_claimAutoreleasedReturnValue(v24);

      if (!v11)
      {
        __int128 v44 = 0u;
        __int128 v45 = 0u;
        __int128 v42 = 0u;
        __int128 v43 = 0u;
        id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
        id v25 = [obj countByEnumeratingWithState:&v42 objects:v46 count:16];
        if (v25)
        {
          id v26 = v25;
          id v38 = v21;
          id v39 = v15;
          id v40 = v4;
          uint64_t v27 = *(void *)v43;
          while (2)
          {
            for (unint64_t i = 0LL; i != v26; unint64_t i = (char *)i + 1)
            {
              if (*(void *)v43 != v27) {
                objc_enumerationMutation(obj);
              }
              uint64_t v29 = *(void *)(*((void *)&v42 + 1) + 8LL * (void)i);
              uint64_t v30 = objc_autoreleasePoolPush();
              id v31 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager activelyEliminatingSelectors]( self,  "activelyEliminatingSelectors"));
              id v32 = [v31 safeObjectForKey:v29 ofClass:objc_opt_class(p_ivars[325])];
              id v11 = (void *)objc_claimAutoreleasedReturnValue(v32);

              if (v11 && [v11 eliminatingSet])
              {
                uint64_t v33 = p_ivars;
                char v34 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
                uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
                unsigned int v36 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v34,  v35));

                if (v36 && ([v36 managesAssetSelector:v40] & 1) != 0)
                {

                  objc_autoreleasePoolPop(v30);
                  goto LABEL_18;
                }

                p_ivars = v33;
              }

              objc_autoreleasePoolPop(v30);
            }

            id v26 = [obj countByEnumeratingWithState:&v42 objects:v46 count:16];
            if (v26) {
              continue;
            }
            break;
          }

          id v11 = 0LL;
LABEL_18:
          id v15 = v39;
          id v4 = v40;
          id v21 = v38;
        }

        else
        {
          id v11 = 0LL;
        }
      }
    }
  }

  return v11;
}

- (BOOL)isSetIdentifierBeingEliminated:(id)a3 forClientDomainName:(id)a4 ofSetIdentifier:(id)a5
{
  id v7 = a5;
  id v8 = a4;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  id v11 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( objc_alloc(&OBJC_CLASS___MAAutoAssetSelector),  "initForAssetType:withAssetSpecifier:",  v8,  v7);
  uint32_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 persistedEntryID]);
  id v14 = [v12 safeObjectForKey:v13 ofClass:objc_opt_class(MADAutoAssetEliminate)];
  id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

  return v15 != 0LL;
}

- (BOOL)isSetIdentifierCurrentlyLocked:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5
{
  id v8 = a3;
  id v29 = a4;
  id v27 = a5;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v11 = [obj countByEnumeratingWithState:&v30 objects:v34 count:16];
  if (v11)
  {
    id v12 = v11;
    id v26 = v8;
    uint64_t v13 = *(void *)v31;
    do
    {
      for (unint64_t i = 0LL; i != v12; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v31 != v13) {
          objc_enumerationMutation(obj);
        }
        uint64_t v15 = *(void *)(*((void *)&v30 + 1) + 8LL * (void)i);
        id v16 = objc_autoreleasePoolPush();
        id v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
        id v18 = [v17 safeObjectForKey:v15 ofClass:objc_opt_class(MADAutoSetDescriptor)];
        id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);

        int64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 clientDomainName]);
        if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v20, v29) & 1) != 0)
        {
          id v21 = (void *)objc_claimAutoreleasedReturnValue([v19 assetSetIdentifier]);
          unsigned int v22 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v21, v27);

          if (v22)
          {
            id v23 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setLockUsageMapForSetDescriptor:]( self,  "setLockUsageMapForSetDescriptor:",  v19));

            if (v23)
            {

              objc_autoreleasePoolPop(v16);
              BOOL v24 = 1;
              goto LABEL_14;
            }
          }
        }

        else
        {
        }

        objc_autoreleasePoolPop(v16);
      }

      id v12 = [obj countByEnumeratingWithState:&v30 objects:v34 count:16];
    }

    while (v12);
    BOOL v24 = 0;
LABEL_14:
    id v8 = v26;
  }

  else
  {
    BOOL v24 = 0;
  }

  return v24;
}

- (BOOL)isSetDescriptorCurrentlyLocked:(id)a3 forSetDescriptor:(id)a4
{
  id v36 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v58 = 0u;
  __int128 v59 = 0u;
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v41 = [obj countByEnumeratingWithState:&v56 objects:v62 count:16];
  if (!v41)
  {
    char v44 = 0;
    goto LABEL_38;
  }

  char v44 = 0;
  id v39 = self;
  uint64_t v40 = *(void *)v57;
  do
  {
    uint64_t v9 = 0LL;
    do
    {
      if (*(void *)v57 != v40) {
        objc_enumerationMutation(obj);
      }
      uint64_t v10 = *(void *)(*((void *)&v56 + 1) + 8LL * (void)v9);
      id v11 = objc_autoreleasePoolPush();
      id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance",  v36));
      id v13 = [v12 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoSetDescriptor)];
      id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

      uint64_t v15 = objc_claimAutoreleasedReturnValue([v14 clientDomainName]);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v6 clientDomainName]);
      id v17 = (void *)v15;
      __int128 v42 = v11;
      __int128 v43 = v9;
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSetIdentifier]);
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
      if (!+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v18, v19))
      {

        self = v39;
LABEL_30:

LABEL_31:
        goto LABEL_32;
      }

      int64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v14 latestDownloadedAtomicInstance]);
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);
      unsigned int v22 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v20, v21);

      if (v22)
      {
        self = v39;
        id v23 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setLockUsageMapForSetDescriptor:]( v39,  "setLockUsageMapForSetDescriptor:",  v14));
        id v17 = v23;
        id v11 = v42;
        uint64_t v9 = v43;
        if (v23)
        {
          __int128 v54 = 0u;
          __int128 v55 = 0u;
          __int128 v52 = 0u;
          __int128 v53 = 0u;
          id v47 = [v23 countByEnumeratingWithState:&v52 objects:v61 count:16];
          if (v47)
          {
            uint64_t v37 = v14;
            __int128 v45 = v17;
            uint64_t v46 = *(void *)v53;
            do
            {
              for (unint64_t i = 0LL; i != v47; unint64_t i = (char *)i + 1)
              {
                if (*(void *)v53 != v46) {
                  objc_enumerationMutation(v17);
                }
                id v25 = [v17 safeObjectForKey:*(void *)(*((void *)&v52 + 1) + 8 * (void)i) ofClass:objc_opt_class(NSDictionary)];
                id v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
                __int128 v48 = 0u;
                __int128 v49 = 0u;
                __int128 v50 = 0u;
                __int128 v51 = 0u;
                id v27 = v26;
                id v28 = [v27 countByEnumeratingWithState:&v48 objects:v60 count:16];
                if (v28)
                {
                  id v29 = v28;
                  uint64_t v30 = *(void *)v49;
                  while (2)
                  {
                    for (j = 0LL; j != v29; j = (char *)j + 1)
                    {
                      if (*(void *)v49 != v30) {
                        objc_enumerationMutation(v27);
                      }
                      uint64_t v32 = *(void *)(*((void *)&v48 + 1) + 8LL * (void)j);
                      __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);
                      LOBYTE(v32) = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v32,  v33);

                      if ((v32 & 1) != 0)
                      {
                        char v44 = 1;
                        goto LABEL_25;
                      }
                    }

                    id v29 = [v27 countByEnumeratingWithState:&v48 objects:v60 count:16];
                    if (v29) {
                      continue;
                    }
                    break;
                  }

+ (void)analyticsReportSecureOperationResults:(id)a3 clientName:(id)a4 secureReason:(id)a5 operation:(int64_t)a6 fromLocation:(id)a7 mountError:(id)a8 graftError:(id)a9 personalizeError:(id)a10 mapToExclaveError:(id)a11
{
  id v51 = a4;
  uint64_t v15 = (__CFString *)a5;
  id v16 = a7;
  id v17 = a8;
  id v18 = a9;
  id v19 = a10;
  id v20 = a11;
  id v21 = a3;
  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([v22 analyticsManager]);

  uint64_t v44 = objc_claimAutoreleasedReturnValue([v21 assetSpecifier]);
  uint64_t v43 = objc_claimAutoreleasedReturnValue([v21 assetType]);
  __int128 v50 = (void *)objc_claimAutoreleasedReturnValue([v21 assetVersion]);

  if (v15) {
    id v23 = v15;
  }
  else {
    id v23 = @"N/A";
  }
  if (v19)
  {
    __int128 v49 = (void *)objc_claimAutoreleasedReturnValue([v19 checkedDescription]);
    if (v17) {
      goto LABEL_6;
    }
LABEL_9:
    __int128 v48 = 0LL;
    if (v18) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }

  __int128 v49 = 0LL;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_6:
  __int128 v48 = (void *)objc_claimAutoreleasedReturnValue([v17 checkedDescription]);
  if (v18)
  {
LABEL_7:
    BOOL v24 = (void *)objc_claimAutoreleasedReturnValue([v18 checkedDescription]);
    goto LABEL_11;
  }

+ (id)migrateMismatchedPersistedStateVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5
{
  return 0LL;
}

+ (id)migrateMismatchedPersistedDescriptorVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5
{
  return 0LL;
}

+ (id)migrateMismatchedPersistedSetConfigurationVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5
{
  return 0LL;
}

+ (id)migrateMismatchedPersistedSetAtomicInstanceVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5
{
  return 0LL;
}

+ (id)migrateMismatchedPersistedSetDescriptorVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5
{
  return 0LL;
}

+ (id)migrateMismatchedPersistedSetTargetVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5
{
  return 0LL;
}

+ (id)migrateMismatchedPersistedStagedSetConfiguration:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5
{
  return 0LL;
}

+ (void)installAutoAssetWithDescriptor:(id)a3
{
  id v6 = a3;
  if (_MAPreferencesIsInternalAllowed())
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
    id v4 = -[MADAutoAssetControlManagerParam initForTimerFired]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForTimerFired");
    [v4 setDownloadingDescriptor:v6];
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 autoControlManagerFSM]);
    [v5 postEvent:@"InstallAssetsEvent" withInfo:v4];
  }
}

- (id)_longSummary
{
  uint64_t v3 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
  if (!v3) {
    goto LABEL_24;
  }
  id v5 = (void *)v3;
  uint64_t v6 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager serverConnectionPolicy](self, "serverConnectionPolicy"));
  if (!v6)
  {
LABEL_23:

    goto LABEL_24;
  }

  id v7 = (void *)v6;
  uint64_t v8 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager connectionServer](self, "connectionServer"));
  if (!v8)
  {
LABEL_22:

    goto LABEL_23;
  }

  uint64_t v9 = (void *)v8;
  uint64_t v10 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stateTable](self, "stateTable"));
  if (!v10)
  {
LABEL_21:

    goto LABEL_22;
  }

  id v11 = (void *)v10;
  uint64_t v12 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  if (!v12)
  {
LABEL_20:

    goto LABEL_21;
  }

  id v13 = (void *)v12;
  uint64_t v14 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
  if (!v14)
  {
LABEL_19:

    goto LABEL_20;
  }

  uint64_t v15 = (void *)v14;
  uint64_t v16 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  if (!v16)
  {
LABEL_18:

    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    goto LABEL_19;
  }

  id v17 = (void *)v16;
  uint64_t v18 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetConfigurations](self, "persistedKnownSetConfigurations"));
  if (!v18)
  {
LABEL_17:

    goto LABEL_18;
  }

  id v19 = (void *)v18;
  uint64_t v20 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetAtomicInstances](self, "persistedKnownSetAtomicInstances"));
  if (!v20)
  {
LABEL_16:

    goto LABEL_17;
  }

  id v21 = (void *)v20;
  uint64_t v22 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobSetDescriptors](self, "persistedActiveJobSetDescriptors"));
  if (!v22)
  {

    goto LABEL_16;
  }

  uint64_t v109 = (void *)v22;
  id v23 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
  if (v23)
  {
    id v103 = v23;
    BOOL v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
    if (v24)
    {
      objc_super v100 = v24;
      BOOL v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
      if (v25)
      {
        id v97 = v25;
        id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager setLockUsageMap](self, "setLockUsageMap"));
        BOOL v106 = v26 == 0LL;

        BOOL v25 = v97;
      }

      else
      {
        BOOL v106 = 1;
      }

      BOOL v24 = v100;
    }

    else
    {
      BOOL v106 = 1;
    }

    id v23 = v103;
  }

  else
  {
    BOOL v106 = 1;
  }

  p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
  if (!v106)
  {
    unsigned __int8 v111 = @"ACTIVE";
    goto LABEL_67;
  }

- (int64_t)action_StartUnlockPollingTimer:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetControlManager setOperatingBeforeFirstUnlock:](self, "setOperatingBeforeFirstUnlock:", 1LL);
  -[MADAutoAssetControlManager setOperatingBeforeResumed:](self, "setOperatingBeforeResumed:", 1LL);
  int64_t v7 = -[MADAutoAssetControlManager preferenceBeforeFirstPollSecs](self, "preferenceBeforeFirstPollSecs");
  uint64_t v8 = 600LL;
  if (v7 != -1) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSTimer timerWithTimeInterval:repeats:block:]( &OBJC_CLASS___NSTimer,  "timerWithTimeInterval:repeats:block:",  1LL,  &__block_literal_global_1359,  (double)v8));
  -[MADAutoAssetControlManager setBeyondFirstUnlockPollTimer:](self, "setBeyondFirstUnlockPollTimer:", v9);

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager beyondFirstUnlockPollTimer](self, "beyondFirstUnlockPollTimer"));
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

  if (v10)
  {
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      int v16 = 138543362;
      id v17 = v13;
      _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {StartUnlockPollingTimer} | entered first-unlock polling period",  (uint8_t *)&v16,  0xCu);
    }

    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSRunLoop mainRunLoop](&OBJC_CLASS___NSRunLoop, "mainRunLoop"));
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager beyondFirstUnlockPollTimer](self, "beyondFirstUnlockPollTimer"));
    -[os_log_s addTimer:forMode:](v12, "addTimer:forMode:", v14, NSDefaultRunLoopMode);
  }

  else if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
  {
    -[MADAutoAssetControlManager action_StartUnlockPollingTimer:error:].cold.1(self);
  }

  return 0LL;
}

void __67__MADAutoAssetControlManager_action_StartUnlockPollingTimer_error___block_invoke(id a1, NSTimer *a2)
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v2 = -[MADAutoAssetControlManagerParam initForTimerFired]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForTimerFired");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v4 autoControlManagerFSM]);
  [v3 postEvent:@"PollForDeviceUnlocked" withInfo:v2];
}

- (int64_t)action_PollDecideBefore1stUnlock:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (!+[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock"))
  {
    int64_t v7 = objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    uint64_t v9 = -[MADAutoAssetControlManagerParam initWithSafeSummary:](v7, "initWithSafeSummary:", v8);

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager beyondFirstUnlockPollTimer](self, "beyondFirstUnlockPollTimer"));
    [v10 invalidate];

    -[MADAutoAssetControlManager setBeyondFirstUnlockPollTimer:](self, "setBeyondFirstUnlockPollTimer:", 0LL);
    -[MADAutoAssetControlManager setOperatingBeforeFirstUnlock:](self, "setOperatingBeforeFirstUnlock:", 0LL);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    [v11 postEvent:@"PolledNowUnlocked" withInfo:v9];
  }

  return 0LL;
}

- (int64_t)action_SyncSkippedDecideBefore1st:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  int64_t v7 = objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
  uint64_t v9 = -[MADAutoAssetControlManagerParam initWithSafeSummary:](v7, "initWithSafeSummary:", v8);

  -[MADAutoAssetControlManager setReceivedDownloadManagerSync:](self, "setReceivedDownloadManagerSync:", 1LL);
  if (+[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock"))
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v11 = v10;
    uint64_t v12 = @"SyncedStillBefore1st";
  }

  else
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager beyondFirstUnlockPollTimer](self, "beyondFirstUnlockPollTimer"));
    [v13 invalidate];

    -[MADAutoAssetControlManager setBeyondFirstUnlockPollTimer:](self, "setBeyondFirstUnlockPollTimer:", 0LL);
    -[MADAutoAssetControlManager setOperatingBeforeFirstUnlock:](self, "setOperatingBeforeFirstUnlock:", 0LL);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v11 = v10;
    uint64_t v12 = @"SyncedNowUnlocked";
  }

  [v10 postEvent:v12 withInfo:v9];

  return 0LL;
}

- (int64_t)action_SyncDecideBefore1st:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v8 = objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
  uint64_t v10 = -[MADAutoAssetControlManagerParam initWithSafeSummary:](v8, "initWithSafeSummary:", v9);

  -[MADAutoAssetControlManager setReceivedDownloadManagerSync:](self, "setReceivedDownloadManagerSync:", 1LL);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 downloadsInFlight]);

  id v12 = -[MADAutoAssetControlManager _newTrimmedToAutoAssetsInFlight:](self, "_newTrimmedToAutoAssetsInFlight:", v11);
  -[MADAutoAssetControlManager setDownloadManagerInFlightTasks:](self, "setDownloadManagerInFlightTasks:", v12);

  if (+[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock"))
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v14 = v13;
    uint64_t v15 = @"SyncedStillBefore1st";
  }

  else
  {
    int v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager beyondFirstUnlockPollTimer](self, "beyondFirstUnlockPollTimer"));
    [v16 invalidate];

    -[MADAutoAssetControlManager setBeyondFirstUnlockPollTimer:](self, "setBeyondFirstUnlockPollTimer:", 0LL);
    -[MADAutoAssetControlManager setOperatingBeforeFirstUnlock:](self, "setOperatingBeforeFirstUnlock:", 0LL);
    id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v14 = v13;
    uint64_t v15 = @"SyncedNowUnlocked";
  }

  [v13 postEvent:v15 withInfo:v10];

  return 0LL;
}

- (int64_t)action_LoadPersistedResumeLocker:(id)a3 error:(id *)a4
{
  id v86 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetControlManager setOperatingBeforeResumed:](self, "setOperatingBeforeResumed:", 1LL);
  int64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));

  if (!v7)
  {
    uint64_t v8 = objc_alloc(&OBJC_CLASS___MADAutoAssetPersisted);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v12 = -[MADAutoAssetPersisted initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:]( v8,  "initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:",  @"AutoControlManager",  @"1.1",  v10,  v11,  @"ACTIVE-JOBS",  &__block_literal_global_1367);
    -[MADAutoAssetControlManager setPersistedActiveJobs:](self, "setPersistedActiveJobs:", v12);

    id v13 = objc_alloc(&OBJC_CLASS___MADAutoAssetPersisted);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
    int v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v17 = -[MADAutoAssetPersisted initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:]( v13,  "initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:",  @"AutoAssetDescriptors",  @"1.0",  v15,  v16,  @"KNOWN-DESCRIPTORS",  &__block_literal_global_1372);
    -[MADAutoAssetControlManager setPersistedKnownDescriptors:](self, "setPersistedKnownDescriptors:", v17);

    uint64_t v18 = objc_alloc(&OBJC_CLASS___MADAutoAssetPersisted);
    id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 extendedStateQueue]);
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v22 = -[MADAutoAssetPersisted initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:]( v18,  "initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:",  @"AutoSetConfigurations",  @"1.0",  v20,  v21,  @"KNOWN-SET-CONFIGURATIONS",  &__block_literal_global_1377);
    -[MADAutoAssetControlManager setPersistedKnownSetConfigurations:](self, "setPersistedKnownSetConfigurations:", v22);

    id v23 = objc_alloc(&OBJC_CLASS___MADAutoAssetPersisted);
    BOOL v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    BOOL v25 = (void *)objc_claimAutoreleasedReturnValue([v24 extendedStateQueue]);
    id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v27 = -[MADAutoAssetPersisted initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:]( v23,  "initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:",  @"AutoSetAtomicInstances",  @"1.0",  v25,  v26,  @"KNOWN-SET-ATOMIC-INSTANCES",  &__block_literal_global_1382);
    -[MADAutoAssetControlManager setPersistedKnownSetAtomicInstances:]( self,  "setPersistedKnownSetAtomicInstances:",  v27);

    id v28 = objc_alloc(&OBJC_CLASS___MADAutoAssetPersisted);
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v29 extendedStateQueue]);
    __int128 v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v32 = -[MADAutoAssetPersisted initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:]( v28,  "initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:",  @"AutoSetActiveJobDescriptors",  @"1.0",  v30,  v31,  @"ACTIVE-JOB-SET-DESCRIPTORS",  &__block_literal_global_1387);
    -[MADAutoAssetControlManager setPersistedActiveJobSetDescriptors:]( self,  "setPersistedActiveJobSetDescriptors:",  v32);

    __int128 v33 = objc_alloc(&OBJC_CLASS___MADAutoAssetPersisted);
    id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v34 extendedStateQueue]);
    id v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v37 = -[MADAutoAssetPersisted initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:]( v33,  "initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:",  @"AutoSetDescriptors",  @"1.0",  v35,  v36,  @"DOWNLOADED-SET-DESCRIPTORS",  &__block_literal_global_1392);
    -[MADAutoAssetControlManager setPersistedDownloadedSetDescriptors:]( self,  "setPersistedDownloadedSetDescriptors:",  v37);

    id v38 = objc_alloc(&OBJC_CLASS___MADAutoAssetPersisted);
    uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v39 extendedStateQueue]);
    uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v42 = -[MADAutoAssetPersisted initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:]( v38,  "initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:",  @"AutoSetTargets",  @"1.0",  v40,  v41,  @"KNOWN-SET-TARGETS",  &__block_literal_global_1397);
    -[MADAutoAssetControlManager setPersistedSetTargets:](self, "setPersistedSetTargets:", v42);

    uint64_t v43 = objc_alloc(&OBJC_CLASS___MADAutoAssetPersisted);
    uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([v44 extendedStateQueue]);
    uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v47 = -[MADAutoAssetPersisted initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:]( v43,  "initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:",  @"AutoSetLookupResults",  @"1.0",  v45,  v46,  @"STAGED-SET-CONFIGURATIONS",  &__block_literal_global_1402);
    -[MADAutoAssetControlManager setPersistedSetLookupResults:](self, "setPersistedSetLookupResults:", v47);
  }

  id v48 = _MAPreferencesCopyValue(@"persistedStateLoadingInProgress");
  id v49 = (void *)objc_claimAutoreleasedReturnValue(v48);

  __int128 v50 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v51 = (os_log_s *)objc_claimAutoreleasedReturnValue([v50 oslog]);

  BOOL v52 = os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT);
  if (v49)
  {
    if (v52)
    {
      id v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager summary](self, "summary"));
      *(_DWORD *)buf = 138543362;
      id v96 = v53;
      _os_log_impl( &dword_0,  v51,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {LoadPersistedResumeLocker} | Not using in memory caching for persisted state objects",  buf,  0xCu);
    }
  }

  else
  {
    if (v52)
    {
      __int128 v54 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager summary](self, "summary"));
      *(_DWORD *)buf = 138543362;
      id v96 = v54;
      _os_log_impl( &dword_0,  v51,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {LoadPersistedResumeLocker} | Enabling in memory caching for persisted state objects",  buf,  0xCu);
    }

    _MAPreferencesSetStringValue( @"persistedStateLoadingInProgress",  @"YES",  @"LoadPersistedResumeLocker",  @"Indicating that loading of persisted state is starting");
  }

  BOOL v55 = v49 == 0LL;
  __int128 v56 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
  [v56 flushPersistedStateCacheAndSetCachingBehaviour:v55];

  id v57 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  [v57 flushPersistedStateCacheAndSetCachingBehaviour:v55];

  __int128 v58 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetConfigurations](self, "persistedKnownSetConfigurations"));
  [v58 flushPersistedStateCacheAndSetCachingBehaviour:v55];

  __int128 v59 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
  [v59 flushPersistedStateCacheAndSetCachingBehaviour:v55];

  id v60 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
  [v60 flushPersistedStateCacheAndSetCachingBehaviour:v55];

  int64_t v61 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
  [v61 flushPersistedStateCacheAndSetCachingBehaviour:v55];

  id v62 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
  [v62 flushPersistedStateCacheAndSetCachingBehaviour:v55];

  id v63 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
  [v63 flushPersistedStateCacheAndSetCachingBehaviour:v55];

  +[MADAutoAssetLocker setPersistedStateCaching:](&OBJC_CLASS___MADAutoAssetLocker, "setPersistedStateCaching:", v55);
  +[MADAutoAssetScheduler setPersistedStateCaching:]( &OBJC_CLASS___MADAutoAssetScheduler,  "setPersistedStateCaching:",  v55);
  +[MADAutoAssetStager setPersistedStateCaching:](&OBJC_CLASS___MADAutoAssetStager, "setPersistedStateCaching:", v55);
  -[MADAutoAssetControlManager loadPersistedDescriptors](self, "loadPersistedDescriptors");
  -[MADAutoAssetControlManager loadPersistedActiveJobs](self, "loadPersistedActiveJobs");
  id v87 = self;
  id v88 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v91 = 0u;
  __int128 v92 = 0u;
  __int128 v93 = 0u;
  __int128 v94 = 0u;
  id v64 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewAllBySelector]( self,  "locateDownloadedNewAllBySelector"));
  id v65 = [v64 countByEnumeratingWithState:&v91 objects:v99 count:16];
  if (v65)
  {
    id v66 = v65;
    uint64_t v67 = *(void *)v92;
    do
    {
      for (unint64_t i = 0LL; i != v66; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v92 != v67) {
          objc_enumerationMutation(v64);
        }
        uint64_t v69 = *(void *)(*((void *)&v91 + 1) + 8LL * (void)i);
        id v70 = objc_autoreleasePoolPush();
        id v71 = [v64 safeObjectForKey:v69 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        unsigned __int8 v72 = (void *)objc_claimAutoreleasedReturnValue(v71);
        unsigned __int8 v73 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
        unsigned __int8 v74 = (void *)objc_claimAutoreleasedReturnValue([v72 assetType]);
        id v75 = (void *)objc_claimAutoreleasedReturnValue([v72 assetSpecifier]);
        id v76 = (void *)objc_claimAutoreleasedReturnValue([v72 assetVersion]);
        id v77 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v73,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v74,  v75,  v76);

        if (v77) {
          -[NSMutableArray addObject:](v88, "addObject:", v77);
        }

        objc_autoreleasePoolPop(v70);
      }

      id v66 = [v64 countByEnumeratingWithState:&v91 objects:v99 count:16];
    }

    while (v66);
  }

  +[MADAutoAssetLocker resumeFromPersistedWithDownloadedSelectors:]( &OBJC_CLASS___MADAutoAssetLocker,  "resumeFromPersistedWithDownloadedSelectors:",  v88);
  -[MADAutoAssetControlManager loadPersistedSetConfigurations](v87, "loadPersistedSetConfigurations");
  -[MADAutoAssetControlManager loadPersistedSetAtomicInstances](v87, "loadPersistedSetAtomicInstances");
  -[MADAutoAssetControlManager loadPersistedSetDownloadedDescriptors](v87, "loadPersistedSetDownloadedDescriptors");
  -[MADAutoAssetControlManager loadPersistedSetActiveJobDescriptors](v87, "loadPersistedSetActiveJobDescriptors");
  -[MADAutoAssetControlManager loadPersistedSetTargets](v87, "loadPersistedSetTargets");
  -[MADAutoAssetControlManager loadPersistedSetLookupResults](v87, "loadPersistedSetLookupResults");
  -[MADAutoAssetControlManager loadPersistedCrossCheckTrim](v87, "loadPersistedCrossCheckTrim");
  -[MADAutoAssetControlManager loadPersistedAtomicInstancesSupportingShortTermLocking]( v87,  "loadPersistedAtomicInstancesSupportingShortTermLocking");
  +[MADAutoAssetSecure removeAllPersisted](&OBJC_CLASS___MADAutoAssetSecure, "removeAllPersisted");
  BOOL v78 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v87, "logger"));
  unsigned __int8 v79 = (os_log_s *)objc_claimAutoreleasedReturnValue([v78 oslog]);

  if (os_log_type_enabled(v79, OS_LOG_TYPE_DEFAULT))
  {
    id v80 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager summary](v87, "summary"));
    *(_DWORD *)buf = 138543618;
    id v96 = v80;
    __int16 v97 = 1024;
    int v98 = 600;
    _os_log_impl( &dword_0,  v79,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {LoadPersistedResumeLocker} | creating timer for %d seconds for sync to complete",  buf,  0x12u);
  }

  v89[0] = _NSConcreteStackBlock;
  v89[1] = 3221225472LL;
  v89[2] = __69__MADAutoAssetControlManager_action_LoadPersistedResumeLocker_error___block_invoke_1408;
  v89[3] = &unk_34DC30;
  v89[4] = v87;
  id v90 = v86;
  id v81 = v86;
  uint64_t v82 = (void *)objc_claimAutoreleasedReturnValue( +[NSTimer timerWithTimeInterval:repeats:block:]( &OBJC_CLASS___NSTimer,  "timerWithTimeInterval:repeats:block:",  0LL,  v89,  600.0));
  -[MADAutoAssetControlManager setAwaitDownloadManagerSyncTimer:](v87, "setAwaitDownloadManagerSyncTimer:", v82);

  id v83 = (void *)objc_claimAutoreleasedReturnValue(+[NSRunLoop mainRunLoop](&OBJC_CLASS___NSRunLoop, "mainRunLoop"));
  id v84 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager awaitDownloadManagerSyncTimer](v87, "awaitDownloadManagerSyncTimer"));
  [v83 addTimer:v84 forMode:NSDefaultRunLoopMode];

  return 0LL;
}

NSDictionary *__cdecl __69__MADAutoAssetControlManager_action_LoadPersistedResumeLocker_error___block_invoke( id a1,  NSString *a2,  NSString *a3,  NSDictionary *a4)
{
  return (NSDictionary *)+[MADAutoAssetControlManager migrateMismatchedPersistedStateVersion:forEntryID:withMismatchedState:]( &OBJC_CLASS___MADAutoAssetControlManager,  "migrateMismatchedPersistedStateVersion:forEntryID:withMismatchedState:",  a2,  a3,  a4);
}

NSDictionary *__cdecl __69__MADAutoAssetControlManager_action_LoadPersistedResumeLocker_error___block_invoke_2( id a1,  NSString *a2,  NSString *a3,  NSDictionary *a4)
{
  return (NSDictionary *)+[MADAutoAssetControlManager migrateMismatchedPersistedDescriptorVersion:forEntryID:withMismatchedState:]( &OBJC_CLASS___MADAutoAssetControlManager,  "migrateMismatchedPersistedDescriptorVersion:forEntryID:withMismatchedState:",  a2,  a3,  a4);
}

NSDictionary *__cdecl __69__MADAutoAssetControlManager_action_LoadPersistedResumeLocker_error___block_invoke_3( id a1,  NSString *a2,  NSString *a3,  NSDictionary *a4)
{
  return (NSDictionary *)+[MADAutoAssetControlManager migrateMismatchedPersistedSetConfigurationVersion:forEntryID:withMismatchedState:]( &OBJC_CLASS___MADAutoAssetControlManager,  "migrateMismatchedPersistedSetConfigurationVersion:forEntryID:withMismatchedState:",  a2,  a3,  a4);
}

NSDictionary *__cdecl __69__MADAutoAssetControlManager_action_LoadPersistedResumeLocker_error___block_invoke_4( id a1,  NSString *a2,  NSString *a3,  NSDictionary *a4)
{
  return (NSDictionary *)+[MADAutoAssetControlManager migrateMismatchedPersistedSetAtomicInstanceVersion:forEntryID:withMismatchedState:]( &OBJC_CLASS___MADAutoAssetControlManager,  "migrateMismatchedPersistedSetAtomicInstanceVersion:forEntryID:withMismatchedState:",  a2,  a3,  a4);
}

NSDictionary *__cdecl __69__MADAutoAssetControlManager_action_LoadPersistedResumeLocker_error___block_invoke_5( id a1,  NSString *a2,  NSString *a3,  NSDictionary *a4)
{
  return (NSDictionary *)+[MADAutoAssetControlManager migrateMismatchedPersistedSetDescriptorVersion:forEntryID:withMismatchedState:]( &OBJC_CLASS___MADAutoAssetControlManager,  "migrateMismatchedPersistedSetDescriptorVersion:forEntryID:withMismatchedState:",  a2,  a3,  a4);
}

NSDictionary *__cdecl __69__MADAutoAssetControlManager_action_LoadPersistedResumeLocker_error___block_invoke_6( id a1,  NSString *a2,  NSString *a3,  NSDictionary *a4)
{
  return (NSDictionary *)+[MADAutoAssetControlManager migrateMismatchedPersistedSetDescriptorVersion:forEntryID:withMismatchedState:]( &OBJC_CLASS___MADAutoAssetControlManager,  "migrateMismatchedPersistedSetDescriptorVersion:forEntryID:withMismatchedState:",  a2,  a3,  a4);
}

NSDictionary *__cdecl __69__MADAutoAssetControlManager_action_LoadPersistedResumeLocker_error___block_invoke_7( id a1,  NSString *a2,  NSString *a3,  NSDictionary *a4)
{
  return (NSDictionary *)+[MADAutoAssetControlManager migrateMismatchedPersistedSetTargetVersion:forEntryID:withMismatchedState:]( &OBJC_CLASS___MADAutoAssetControlManager,  "migrateMismatchedPersistedSetTargetVersion:forEntryID:withMismatchedState:",  a2,  a3,  a4);
}

NSDictionary *__cdecl __69__MADAutoAssetControlManager_action_LoadPersistedResumeLocker_error___block_invoke_8( id a1,  NSString *a2,  NSString *a3,  NSDictionary *a4)
{
  return (NSDictionary *)+[MADAutoAssetControlManager migrateMismatchedPersistedStagedSetConfiguration:forEntryID:withMismatchedState:]( &OBJC_CLASS___MADAutoAssetControlManager,  "migrateMismatchedPersistedStagedSetConfiguration:forEntryID:withMismatchedState:",  a2,  a3,  a4);
}

void __69__MADAutoAssetControlManager_action_LoadPersistedResumeLocker_error___block_invoke_1408(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) autoControlManagerFSM]);
  [v2 postEvent:@"TimeoutAwaitingSynced" withInfo:*(void *)(a1 + 40)];
}

- (int64_t)action_ResumeStager:(id)a3 error:(id *)a4
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  +[MADAutoAssetStager resumeFromPersisted](&OBJC_CLASS___MADAutoAssetStager, "resumeFromPersisted");
  return 0LL;
}

- (int64_t)action_SyncedResumeStager:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetControlManager setReceivedDownloadManagerSync:](self, "setReceivedDownloadManagerSync:", 1LL);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 downloadsInFlight]);

  id v9 = -[MADAutoAssetControlManager _newTrimmedToAutoAssetsInFlight:](self, "_newTrimmedToAutoAssetsInFlight:", v8);
  -[MADAutoAssetControlManager setDownloadManagerInFlightTasks:](self, "setDownloadManagerInFlightTasks:", v9);

  +[MADAutoAssetStager resumeFromPersisted](&OBJC_CLASS___MADAutoAssetStager, "resumeFromPersisted");
  return 0LL;
}

- (int64_t)action_PromoteStagedMigrate:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetControlManager setStagerResumed:](self, "setStagerResumed:", 1LL);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagedToDownloaded]);
  -[MADAutoAssetControlManager promoteAnyPreviouslyStagedNowDownloaded:]( self,  "promoteAnyPreviouslyStagedNowDownloaded:",  v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 stagedSetLookupResults]);
  id v10 = [v9 count];

  if (v10)
  {
    -[MADAutoAssetControlManager removePreviouslyStagedSetDescriptors](self, "removePreviouslyStagedSetDescriptors");
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
    id v12 = [v11 persistedEntryCount:@"PromoteStagedMigrate"];

    id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 persistedConfig]);
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager bootedOSVersion](self, "bootedOSVersion"));
    [v14 persistString:v15 forKey:@"lookupBootedOSVersion"];

    int v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 persistedConfig]);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager bootedOBuildVersion](self, "bootedOBuildVersion"));
    [v17 persistString:v18 forKey:@"lookupBootedBuildVersion"];

    if ((uint64_t)v12 >= 1)
    {
      id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
      [v19 removeAllPersistedEntries:@"stager has provided set-lookup-results for OS just booteed into - clearing now-stale entries"];
    }

    __int128 v60 = 0u;
    __int128 v61 = 0u;
    __int128 v58 = 0u;
    __int128 v59 = 0u;
    id v53 = v5;
    id obj = (id)objc_claimAutoreleasedReturnValue([v5 stagedSetLookupResults]);
    id v56 = [obj countByEnumeratingWithState:&v58 objects:v62 count:16];
    if (v56)
    {
      uint64_t v55 = *(void *)v59;
      do
      {
        uint64_t v20 = 0LL;
        do
        {
          if (*(void *)v59 != v55) {
            objc_enumerationMutation(obj);
          }
          id v21 = *(void **)(*((void *)&v58 + 1) + 8LL * (void)v20);
          context = objc_autoreleasePoolPush();
          id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 assetType]);
          id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
          BOOL v24 = (void *)objc_claimAutoreleasedReturnValue([v23 persistedEntry:v22 fromLocation:@"PromoteStagedMigrate"]);

          BOOL v25 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager verifySetLookupResultPreferringDownloaded:]( self,  "verifySetLookupResultPreferringDownloaded:",  v21));
          [v24 persistSecureCodedObject:v25 forKey:@"setLookupResult"];
          id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
          id v27 = (void *)objc_claimAutoreleasedReturnValue([v25 summary]);
          [v26 storePersistedEntry:v22 withEntrySummary:v27 fromLocation:@"PromoteStagedMigrate"];

          id v28 = objc_alloc(&OBJC_CLASS___NSString);
          uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v25 summary]);
          uint64_t v30 = -[NSString initWithFormat:]( v28,  "initWithFormat:",  @"new set-lookup-result | setLookupResult:%@",  v29);
          -[MADAutoAssetControlManager _logPersistedSetLookupResult:operation:forPersistedEntryID:withSetLookupResult:message:]( self,  "_logPersistedSetLookupResult:operation:forPersistedEntryID:withSetLookupResult:message:",  @"PromoteStagedMigrate",  @"ENTRY_ADD",  v22,  v25,  v30);

          __int128 v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
          id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 UUIDString]);

          __int128 v33 = objc_alloc(&OBJC_CLASS___MADAutoSetDescriptor);
          id v34 = (void *)objc_claimAutoreleasedReturnValue([v25 discoveredAtomicEntries]);
          id v35 = -[MADAutoSetDescriptor initForClientDomainName:forAssetSetIdentifier:withDiscoveredAtomicInstance:withDiscoveredAtomicEntries:]( v33,  "initForClientDomainName:forAssetSetIdentifier:withDiscoveredAtomicInstance:withDiscoveredAtomicEntries:",  @"FROM_STAGED_FOR_ALL",  @"FROM_STAGED_FOR_ALL",  v32,  v34);

          id v36 = (void *)objc_claimAutoreleasedReturnValue([v25 catalogCachedAssetSetID]);
          [v35 setCatalogCachedAssetSetID:v36];

          id v37 = (void *)objc_claimAutoreleasedReturnValue([v25 catalogDownloadedFromLive]);
          [v35 setCatalogDownloadedFromLive:v37];

          id v38 = (void *)objc_claimAutoreleasedReturnValue([v25 catalogLastTimeChecked]);
          [v35 setCatalogLastTimeChecked:v38];

          uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v25 catalogPostedDate]);
          [v35 setCatalogPostedDate:v39];

          uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v25 catalogCachedAssetSetID]);
          [v35 setDownloadedCatalogCachedAssetSetID:v40];

          uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue([v25 catalogDownloadedFromLive]);
          [v35 setDownloadedCatalogDownloadedFromLive:v41];

          id v42 = (void *)objc_claimAutoreleasedReturnValue([v25 catalogLastTimeChecked]);
          [v35 setDownloadedCatalogLastTimeChecked:v42];

          uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v25 catalogPostedDate]);
          [v35 setDownloadedCatalogPostedDate:v43];

          uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v25 requestedAutoAssetEntries]);
          [v35 setRequestedAutoAssetEntries:v44];

          [v35 setLatestDownloadedAtomicInstance:v32];
          __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([v25 discoveredAtomicEntries]);
          [v35 setLatestDowloadedAtomicInstanceEntries:v45];

          [v35 setIsOnFilesystem:1];
          [v35 setIsDiscoveredFullyDownloaded:1];
          [v35 setAtomicInstanceDownloadedNotified:1];
          [v35 setNeverBeenLocked:1];
          id v46 =  -[MADAutoAssetControlManager atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:recoveringForSetDescriptor:usingAsSetClient:]( self,  "atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:recoveringForSetDescriptor:usingAsSetClient:",  @"PromoteStagedMigrate",  220LL,  v35,  @"PROMOTED");
          BYTE2(v52) = 0;
          LOWORD(v52) = 0;
          -[MADAutoAssetControlManager trackSetDescriptor:fromLocation:forLatestDownloaded:forSpecificAtomicInstance:withCurrentSetStatus:changedWhileTerminated:changedNeverBeenLocked:notifyingIfJustDownloaded:latestToVend:historyOperation:firstClientName:]( self,  "trackSetDescriptor:fromLocation:forLatestDownloaded:forSpecificAtomicInstance:withCurrentSetStatus:changedWh ileTerminated:changedNeverBeenLocked:notifyingIfJustDownloaded:latestToVend:historyOperation:firstClientName:",  v35,  @"PromoteStagedMigrate",  1LL,  v32,  0LL,  0LL,  v52,  350LL,  @"FROM_STAGED_FOR_ALL");

          objc_autoreleasePoolPop(context);
          uint64_t v20 = (char *)v20 + 1;
        }

        while (v56 != v20);
        id v56 = [obj countByEnumeratingWithState:&v58 objects:v62 count:16];
      }

      while (v56);
    }

    id v5 = v53;
  }

  -[MADAutoAssetControlManager _preInstalledMigrateAssets](self, "_preInstalledMigrateAssets");
  id v47 = objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam);
  id v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
  id v49 = -[MADAutoAssetControlManagerParam initWithSafeSummary:](v47, "initWithSafeSummary:", v48);

  __int128 v50 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  [v50 postEvent:@"MigratedAssets" withInfo:v49];

  return 0LL;
}

- (int64_t)action_ResumeScheduler:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  int64_t v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationCopy:]( self,  "setConfigurationCopy:",  @"ResumeScheduler"));
  +[MADAutoAssetScheduler resumeFromPersisted:](&OBJC_CLASS___MADAutoAssetScheduler, "resumeFromPersisted:", v7);

  return 0LL;
}

- (int64_t)action_SyncInFlightDownloads:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetControlManager _requestDownloadManagerSync](self, "_requestDownloadManagerSync");
  return 0LL;
}

- (int64_t)action_Synced:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetControlManager setReceivedDownloadManagerSync:](self, "setReceivedDownloadManagerSync:", 1LL);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 downloadsInFlight]);

  id v9 = -[MADAutoAssetControlManager _newTrimmedToAutoAssetsInFlight:](self, "_newTrimmedToAutoAssetsInFlight:", v8);
  -[MADAutoAssetControlManager setDownloadManagerInFlightTasks:](self, "setDownloadManagerInFlightTasks:", v9);

  return 0LL;
}

- (int64_t)action_AdditionalSynced:(id)a3 error:(id *)a4
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  return 0LL;
}

- (int64_t)action_ResumeJobsBefore1st:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetControlManager secureCheckProcessLifeLocks:]( self,  "secureCheckProcessLifeLocks:",  @"ResumeJobsBefore1st");
  -[MADAutoAssetControlManager resumeJobsWhenBeforeFirstUnlock:](self, "resumeJobsWhenBeforeFirstUnlock:", 1LL);
  -[MADAutoAssetControlManager resumeSetJobsWhenBeforeFirstUnlock:](self, "resumeSetJobsWhenBeforeFirstUnlock:", 1LL);
  -[MADAutoAssetControlManager clientRequestsAwaitingSyncToAwaitingFirstUnlock:]( self,  "clientRequestsAwaitingSyncToAwaitingFirstUnlock:",  @"ResumeJobsBefore1st");
  return 0LL;
}

- (int64_t)action_ResumeJobs:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  __int128 v126 = v5;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 scheduledJobs]);
  -[MADAutoAssetControlManager scheduledJobsResumed:](self, "scheduledJobsResumed:", v8);

  -[MADAutoAssetControlManager setConfigurationsRefreshStaleIndications]( self,  "setConfigurationsRefreshStaleIndications");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntryIDs:@"ResumeJobs"]);

  -[MADAutoAssetControlManager setLocksPriorToSecureHealing:](self, "setLocksPriorToSecureHealing:", 0LL);
  -[MADAutoAssetControlManager setOperatingBeforeResumed:](self, "setOperatingBeforeResumed:", 0LL);
  __int16 v132 = self;
  -[MADAutoAssetControlManager setMaintainingActiveJobStatus:](self, "setMaintainingActiveJobStatus:", 1LL);
  __int128 v125 = v10;
  if ([v10 count])
  {
    __int128 v140 = 0u;
    __int128 v141 = 0u;
    __int128 v138 = 0u;
    __int128 v139 = 0u;
    id v11 = v10;
    id v12 = [v11 countByEnumeratingWithState:&v138 objects:v153 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v139;
      do
      {
        for (unint64_t i = 0LL; i != v13; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v139 != v14) {
            objc_enumerationMutation(v11);
          }
          int v16 = *(NSString **)(*((void *)&v138 + 1) + 8LL * (void)i);
          id v17 = objc_autoreleasePoolPush();
          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](v132, "persistedKnownDescriptors"));
          id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedEntry:v16 fromLocation:@"ResumeJobs"]);

          if (v19)
          {
            id v20 = [v19 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
            id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
            if (+[MADAutoAssetSecure doesDescriptorInvolvePersonalization:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "doesDescriptorInvolvePersonalization:forDescriptor:",  @"ResumeJobs",  v21)
              && +[MADAutoAssetSecure isGraftedOrMounted:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isGraftedOrMounted:forDescriptor:",  @"ResumeJobs",  v21))
            {
              -[MADAutoAssetControlManager updateAutoAssetStatusForChosenDownloadedDescriptor:matchingAssetVersion:fromLocation:]( v132,  "updateAutoAssetStatusForChosenDownloadedDescriptor:matchingAssetVersion:fromLocation:",  v21,  0LL,  @"ResumeJobs");
            }
          }

          else
          {
            uint64_t v22 = v14;
            id v23 = v11;
            BOOL v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v132, "logger"));
            id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              BOOL v25 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v132, "_updateLatestSummary"));
              *(_DWORD *)buf = 138543618;
              uint64_t v144 = v25;
              __int16 v145 = 2114;
              uint64_t v146 = v16;
              _os_log_error_impl( &dword_0,  v21,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [DEVICE-BOOT] {ResumeJobs} unable to determine known descriptor status | entryID:%{public}@",  buf,  0x16u);
            }

            id v11 = v23;
            uint64_t v14 = v22;
          }

          objc_autoreleasePoolPop(v17);
        }

        id v13 = [v11 countByEnumeratingWithState:&v138 objects:v153 count:16];
      }

      while (v13);
    }
  }

  else
  {
    id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v11 = (id)objc_claimAutoreleasedReturnValue([v26 oslog]);

    if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_DEFAULT))
    {
      id v27 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      *(_DWORD *)buf = 138543362;
      uint64_t v144 = v27;
      _os_log_impl( &dword_0,  (os_log_t)v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n[DEVICE-BOOT] {ResumeJobs} no persisted known-descriptors",  buf,  0xCu);
    }
  }

  -[MADAutoAssetControlManager secureClearInsecureLatestAtomicInstances]( v132,  "secureClearInsecureLatestAtomicInstances");
  if (-[MADAutoAssetControlManager migratedFromPreinstalled](v132, "migratedFromPreinstalled"))
  {
    id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v132, "logger"));
    uint64_t v29 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 oslog]);

    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager action_ResumeJobs:error:].cold.3(v132);
    }
  }

  -[MADAutoAssetControlManager _removeDownloadedDescriptorsWithNewerDownloaded:]( v132,  "_removeDownloadedDescriptorsWithNewerDownloaded:",  @"ResumeJobs");
  __int128 v127 = objc_alloc(&OBJC_CLASS___NSString);
  __int128 v130 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](v132, "persistedActiveJobs"));
  id v123 = [v130 persistedEntryCount:@"LoadPersistedResumeLocker"];
  __int128 v129 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](v132, "persistedKnownDescriptors"));
  id v119 = [v129 persistedEntryCount:@"LoadPersistedResumeLocker"];
  int64_t v117 = +[MADAutoAssetLocker persistedLocksCount](&OBJC_CLASS___MADAutoAssetLocker, "persistedLocksCount");
  int64_t v115 = +[MADAutoAssetScheduler persistedScheduledCount]( &OBJC_CLASS___MADAutoAssetScheduler,  "persistedScheduledCount");
  int64_t v114 = +[MADAutoAssetStager persistedStagedCount](&OBJC_CLASS___MADAutoAssetStager, "persistedStagedCount");
  id v121 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( v132,  "persistedKnownSetConfigurations"));
  id v113 = [v121 persistedEntryCount:@"LoadPersistedResumeLocker"];
  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( v132,  "persistedKnownSetAtomicInstances"));
  id v112 = [v30 persistedEntryCount:@"LoadPersistedResumeLocker"];
  __int128 v31 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( v132,  "persistedActiveJobSetDescriptors"));
  id v32 = [v31 persistedEntryCount:@"LoadPersistedResumeLocker"];
  __int128 v33 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( v132,  "persistedDownloadedSetDescriptors"));
  id v34 = [v33 persistedEntryCount:@"LoadPersistedResumeLocker"];
  id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](v132, "persistedSetTargets"));
  id v36 = [v35 persistedEntryCount:@"LoadPersistedResumeLocker"];
  id v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](v132, "persistedSetLookupResults"));
  id v38 = -[NSString initWithFormat:]( v127,  "initWithFormat:",  @"ActiveJobs:%ld | KnownDescriptors:%ld | Locks:%ld | Scheduled:%ld | Staged:%ld | SetConfigurations:%ld | AtomicInstances:%ld | ActiveSetDescriptors:%ld | DownloadedSetDescriptors:%ld | SetTargets:%ld | SetLookupResults:%ld",  v123,  v119,  v117,  v115,  v114,  v113,  v112,  v32,  v34,  v36,  [v37 persistedEntryCount:@"LoadPersistedResumeLocker"]);

  uint64_t v39 = objc_alloc(&OBJC_CLASS___NSString);
  uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetJobsByIdentifier](v132, "currentSetJobsByIdentifier"));
  id v41 = [v40 count];
  id v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](v132, "currentSetStatusByInstance"));
  uint64_t v43 = -[NSString initWithFormat:]( v39,  "initWithFormat:",  @"SetJobsByIdentifier:%ld | SetStatusByInstance:%ld",  v41,  [v42 count]);

  uint64_t v44 = objc_alloc(&OBJC_CLASS___NSString);
  __int128 v45 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( v132,  "knownSetConfigurationsByIdentifier"));
  id v46 = [v45 count];
  id v47 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( v132,  "knownSetAtomicInstancesByInstance"));
  id v48 = -[NSString initWithFormat:]( v44,  "initWithFormat:",  @"SetConfigurationsByIdentifier:%ld | SetAtomicInstancesByInstance:%ld",  v46,  [v47 count]);

  id v49 = objc_alloc(&OBJC_CLASS___NSString);
  __int128 v50 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( v132,  "downloadedSetDescriptorsByInstance"));
  id v128 = -[NSString initWithFormat:]( v49,  "initWithFormat:",  @"SetDescriptorsByInstance:%ld",  [v50 count]);

  id v51 = objc_alloc(&OBJC_CLASS___NSString);
  uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager activeSetDescriptorsByIdentifier]( v132,  "activeSetDescriptorsByIdentifier"));
  id v53 = [v52 count];
  __int128 v54 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activeSetDescriptorsByInstance](v132, "activeSetDescriptorsByInstance"));
  uint64_t v55 = -[NSString initWithFormat:]( v51,  "initWithFormat:",  @"SetDescriptorsByIdentifier:%ld | SetDescriptorsByInstance:%ld",  v53,  [v54 count]);

  id v56 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v132, "logger"));
  id v57 = (os_log_s *)objc_claimAutoreleasedReturnValue([v56 oslog]);

  if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138544386;
    uint64_t v144 = v38;
    __int16 v145 = 2114;
    uint64_t v146 = v43;
    __int16 v147 = 2114;
    id v148 = v48;
    __int16 v149 = 2114;
    v150 = v128;
    __int16 v151 = 2114;
    v152 = v55;
    _os_log_impl( &dword_0,  v57,  OS_LOG_TYPE_DEFAULT,  "\n [STARTUP-STATE] [PERSISTED] %{public}@\n [STARTUP-STATE] [CURRENT] %{public}@\n [STARTUP-STATE] [KNOWN] %{public}@\n [STARTUP-STATE] [DOWNLOADED] %{public}@\n [STARTUP-STATE] [ACTIVE] %{public}@",  buf,  0x34u);
  }

  id v118 = v55;

  __int128 v58 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v132, "logger"));
  __int128 v59 = (os_log_s *)objc_claimAutoreleasedReturnValue([v58 oslog]);

  if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v60 = (NSString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager buildDirectivesSummary]( &OBJC_CLASS___MADAutoAssetControlManager,  "buildDirectivesSummary"));
    *(_DWORD *)buf = 138543618;
    uint64_t v144 = @"2.2.22";
    __int16 v145 = 2114;
    uint64_t v146 = v60;
    _os_log_impl( &dword_0,  v59,  OS_LOG_TYPE_DEFAULT,  "\n[STARTUP-STATE] [AUTO-ASSET-VERSION:%{public}@] | build environment:%{public}@",  buf,  0x16u);
  }

  -[MADAutoAssetControlManager secureCheckProcessLifeLocks:](v132, "secureCheckProcessLifeLocks:", @"ResumeJobs");
  __int128 v61 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( v132,  "knownSetAtomicInstancesByInstance"));
  id v62 = [v61 count];

  id v63 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v132, "logger"));
  id v64 = (os_log_s *)objc_claimAutoreleasedReturnValue([v63 oslog]);

  BOOL v65 = os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT);
  if (v62)
  {
    if (v65)
    {
      id v66 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( v132,  "knownSetAtomicInstancesByInstance"));
      uint64_t v67 = (__CFString *)objc_claimAutoreleasedReturnValue([v66 safeSummary]);
      *(_DWORD *)buf = 138543362;
      uint64_t v144 = v67;
      _os_log_impl( &dword_0,  v64,  OS_LOG_TYPE_DEFAULT,  "{ResumeJobs} | Set LockUsageMap | knownSetAtomicInstancesByInstance:%{public}@",  buf,  0xCu);
    }
  }

  else if (v65)
  {
    *(_WORD *)buf = 0;
    _os_log_impl( &dword_0,  v64,  OS_LOG_TYPE_DEFAULT,  "{ResumeJobs} | Set LockUsageMap | no knownSetAtomicInstancesByInstance",  buf,  2u);
  }

  id v68 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( v132,  "knownSetAtomicInstancesByInstance"));
  uint64_t v69 = objc_claimAutoreleasedReturnValue( +[MADAutoAssetLocker currentSetLockUsageEliminatingOtherThanSetAtomicInstances:]( &OBJC_CLASS___MADAutoAssetLocker,  "currentSetLockUsageEliminatingOtherThanSetAtomicInstances:",  v68));

  id v120 = v48;
  id v116 = (void *)v69;
  if (v69)
  {
    -[MADAutoAssetControlManager setSetLockUsageMap:](v132, "setSetLockUsageMap:", v69);
    id v70 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v132, "logger"));
    id v71 = (os_log_s *)objc_claimAutoreleasedReturnValue([v70 oslog]);

    if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
    {
      unsigned __int8 v72 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager setLockUsageMap](v132, "setLockUsageMap"));
      *(_DWORD *)buf = 138543362;
      uint64_t v144 = v72;
      _os_log_impl( &dword_0,  v71,  OS_LOG_TYPE_DEFAULT,  "{ResumeJobs} | Set LockUsageMap | initialUsageMapFromLocker:\n%{public}@",  buf,  0xCu);
    }
  }

  else
  {
    unsigned __int8 v73 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    -[MADAutoAssetControlManager setSetLockUsageMap:](v132, "setSetLockUsageMap:", v73);

    unsigned __int8 v74 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v132, "logger"));
    id v71 = (os_log_s *)objc_claimAutoreleasedReturnValue([v74 oslog]);

    if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( &dword_0,  v71,  OS_LOG_TYPE_DEFAULT,  "{ResumeJobs} | Set LockUsageMap | no current set-locks reported by auto-asset-locker",  buf,  2u);
    }
  }

  id v122 = v43;
  __int128 v124 = v38;

  -[MADAutoAssetControlManager resumeJobsWhenBeforeFirstUnlock:](v132, "resumeJobsWhenBeforeFirstUnlock:", 0LL);
  -[MADAutoAssetControlManager clientRequestsAwaitingDispatchAll:]( v132,  "clientRequestsAwaitingDispatchAll:",  @"ResumeJobs");
  id DownloadManager = getDownloadManager();
  __int128 v131 = (void *)objc_claimAutoreleasedReturnValue(DownloadManager);
  __int128 v134 = 0u;
  __int128 v135 = 0u;
  __int128 v136 = 0u;
  __int128 v137 = 0u;
  id v76 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager downloadManagerInFlightTasks](v132, "downloadManagerInFlightTasks"));
  id v77 = [v76 countByEnumeratingWithState:&v134 objects:v142 count:16];
  if (v77)
  {
    id v78 = v77;
    uint64_t v79 = *(void *)v135;
    do
    {
      for (j = 0LL; j != v78; j = (char *)j + 1)
      {
        if (*(void *)v135 != v79) {
          objc_enumerationMutation(v76);
        }
        id v81 = *(NSString **)(*((void *)&v134 + 1) + 8LL * (void)j);
        uint64_t v82 = objc_autoreleasePoolPush();
        if (v81)
        {
          [v131 cancelAssetDownloadTask:v81];
          id v83 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v132, "logger"));
          id v84 = (os_log_s *)objc_claimAutoreleasedReturnValue([v83 oslog]);

          if (os_log_type_enabled(v84, OS_LOG_TYPE_DEFAULT))
          {
            id v85 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v132, "_updateLatestSummary"));
            *(_DWORD *)buf = 138543618;
            uint64_t v144 = v85;
            __int16 v145 = 2114;
            uint64_t v146 = v81;
            _os_log_impl( &dword_0,  v84,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {ResumeJobs} canceled stale auto-asset taskDescriptor:%{public}@",  buf,  0x16u);
          }
        }

        else
        {
          id v84 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v132, "autoControlManagerFSM"));
          id v86 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s diag](v84, "diag"));
          id v87 = objc_alloc(&OBJC_CLASS___NSString);
          id v88 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v132, "_updateLatestSummary"));
          id v89 = -[NSString initWithFormat:]( v87,  "initWithFormat:",  @"{ResumeJobs} nil taskDescriptor encountered on downloadManagerInFlightTasks | %@",  v88);
          [v86 trackAnomaly:@"AUTO-CONTROL" forReason:v89 withResult:6108 withError:0];
        }

        objc_autoreleasePoolPop(v82);
      }

      id v78 = [v76 countByEnumeratingWithState:&v134 objects:v142 count:16];
    }

    while (v78);
  }

  id v90 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( objc_alloc(&OBJC_CLASS___MAAutoAssetSelector),  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  @"MAAutoAssetControl-all-asset-types",  @"MAAutoAssetControl-all-asset-specifiers",  @"2.2.22");
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  620LL,  0LL,  1LL,  @"UNKNOWN",  v90);
  +[MADAutoAssetControlManager postNotificationName:forAssetType:forAssetSpecifier:fromModule:fromLocation:]( &OBJC_CLASS___MADAutoAssetControlManager,  "postNotificationName:forAssetType:forAssetSpecifier:fromModule:fromLocation:",  @"STARTUP_ACTIVATED",  @"com.apple.MobileAsset.MAAutoAsset",  0LL,  @"AUTO-CONTROL",  @"ResumeJobs");
  __int128 v91 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](v132, "persistedActiveJobs"));
  [v91 flushPersistedStateCacheAndSetCachingBehaviour:0];

  __int128 v92 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](v132, "persistedKnownDescriptors"));
  [v92 flushPersistedStateCacheAndSetCachingBehaviour:0];

  __int128 v93 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](v132, "persistedSetTargets"));
  [v93 flushPersistedStateCacheAndSetCachingBehaviour:0];

  __int128 v94 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](v132, "persistedSetLookupResults"));
  [v94 flushPersistedStateCacheAndSetCachingBehaviour:0];

  id v95 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetConfigurations](v132, "persistedKnownSetConfigurations"));
  [v95 flushPersistedStateCacheAndSetCachingBehaviour:0];

  id v96 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( v132,  "persistedDownloadedSetDescriptors"));
  [v96 flushPersistedStateCacheAndSetCachingBehaviour:0];

  __int16 v97 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( v132,  "persistedActiveJobSetDescriptors"));
  [v97 flushPersistedStateCacheAndSetCachingBehaviour:0];

  int v98 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( v132,  "persistedKnownSetAtomicInstances"));
  [v98 flushPersistedStateCacheAndSetCachingBehaviour:0];

  +[MADAutoAssetLocker setPersistedStateCaching:](&OBJC_CLASS___MADAutoAssetLocker, "setPersistedStateCaching:", 0LL);
  +[MADAutoAssetScheduler setPersistedStateCaching:]( &OBJC_CLASS___MADAutoAssetScheduler,  "setPersistedStateCaching:",  0LL);
  +[MADAutoAssetStager setPersistedStateCaching:](&OBJC_CLASS___MADAutoAssetStager, "setPersistedStateCaching:", 0LL);
  _MAPreferencesSetStringValue( @"persistedStateLoadingInProgress",  0LL,  @"resumeJobs",  @"Indicating that loading of persisted state is done");
  -[MADAutoAssetControlManager considerSetDescriptorsForLatestToVend](v132, "considerSetDescriptorsForLatestToVend");
  uint64_t v99 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  if (![v99 fileExistsAtPath:@"/private/var/run/MobileAssetStartupActivation.doneThisBoot"]
    || +[MADAutoAssetControlManager preferenceStartupSimulateFirstBoot]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceStartupSimulateFirstBoot"))
  {
    objc_super v100 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v100,  "setObject:forKeyedSubscript:",  &__kCFBooleanTrue,  @"ActivationStatus");
    -[MADAutoAssetControlManager setFirstDaemonStartupSinceDeviceBoot:]( v132,  "setFirstDaemonStartupSinceDeviceBoot:",  1LL);
    id v101 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v132, "logger"));
    id v102 = (os_log_s *)objc_claimAutoreleasedReturnValue([v101 oslog]);

    if (os_log_type_enabled(v102, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      uint64_t v144 = @"/private/var/run/MobileAssetStartupActivation.doneThisBoot";
      _os_log_impl( &dword_0,  v102,  OS_LOG_TYPE_DEFAULT,  "{ResumeJobs} | Writing STARTUP_ACTIVATED cookie file [%{public}@]",  buf,  0xCu);
    }

    id v103 = (void *)objc_claimAutoreleasedReturnValue( +[NSURL fileURLWithPath:]( &OBJC_CLASS___NSURL,  "fileURLWithPath:",  @"/private/var/run/MobileAssetStartupActivation.doneThisBoot"));
    id v133 = 0LL;
    -[NSMutableDictionary writeToURL:error:](v100, "writeToURL:error:", v103, &v133);
    id v104 = v133;

    if (v104)
    {
      +[MADAutoAssetHistory recordFailedOperation:fromLayer:failingWithError:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordFailedOperation:fromLayer:failingWithError:",  623LL,  1LL,  v104);
      __int16 v105 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v132, "logger"));
      BOOL v106 = (os_log_s *)objc_claimAutoreleasedReturnValue([v105 oslog]);

      uint64_t v107 = v122;
      if (os_log_type_enabled(v106, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager action_ResumeJobs:error:].cold.2(v104);
      }
    }

    else
    {
      uint64_t v107 = v122;
      if ([v99 fileExistsAtPath:@"/private/var/run/MobileAssetStartupActivation.doneThisBoot"])
      {
        +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  622LL,  0LL,  1LL,  @"UNKNOWN",  v90);
        id v108 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v132, "logger"));
        id v104 = (id)objc_claimAutoreleasedReturnValue([v108 oslog]);

        uint64_t v109 = (__CFString *)v124;
        if (os_log_type_enabled((os_log_t)v104, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( &dword_0,  (os_log_t)v104,  OS_LOG_TYPE_DEFAULT,  "{ResumeJobs} | Successfully wrote STARTUP_ACTIVATED cookie file",  buf,  2u);
        }

        goto LABEL_62;
      }

      id v104 = (id)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6101LL,  @"ResumeJobs",  0LL,  @"failed post-write existence check after writing STARTUP_ACTIVATED cookie file (even though call to writeToURL was successful)"));
      +[MADAutoAssetHistory recordFailedOperation:fromLayer:failingWithError:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordFailedOperation:fromLayer:failingWithError:",  623LL,  1LL,  v104);
      id v110 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v132, "logger"));
      BOOL v106 = (os_log_s *)objc_claimAutoreleasedReturnValue([v110 oslog]);

      if (os_log_type_enabled(v106, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager action_ResumeJobs:error:].cold.1(v104);
      }
    }

    uint64_t v109 = (__CFString *)v124;
LABEL_62:

    goto LABEL_63;
  }

  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  624LL,  0LL,  1LL,  @"UNKNOWN",  v90);
  uint64_t v107 = v122;
  uint64_t v109 = (__CFString *)v124;
LABEL_63:
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  620LL,  0LL,  1LL,  @"UNKNOWN",  v90);
  +[MADAutoAssetControlManager postNotificationName:forAssetType:forAssetSpecifier:fromModule:fromLocation:]( &OBJC_CLASS___MADAutoAssetControlManager,  "postNotificationName:forAssetType:forAssetSpecifier:fromModule:fromLocation:",  @"STARTUP_ACTIVATED",  @"com.apple.MobileAsset.MAAutoAsset",  0LL,  @"AUTO-CONTROL",  @"ResumeJobs");

  return 0LL;
}

- (int64_t)action_FailClientTimedOut:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  int64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 diag]);
  [v8 trackAnomaly:@"AUTO-CONTROL" forReason:@"action not yet implemented" withResult:6801 withError:0];

  return 0LL;
}

- (int64_t)action_QueueClientRequest:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  if (!v5)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v11 diag]);
    id v19 = objc_alloc(&OBJC_CLASS___NSString);
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    id v21 = -[NSString initWithFormat:]( v19,  "initWithFormat:",  @"{QueueClientRequest} nil eventInfo provided | %@",  v20);
    [v18 trackAnomaly:@"AUTO-CONTROL" forReason:v21 withResult:6102 withError:0];

    goto LABEL_9;
  }

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  -[MADAutoAssetControlManager trackClientRequest:](self, "trackClientRequest:", v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  unsigned int v10 = -[MADAutoAssetControlManager _isClientRequestForSetJob:](self, "_isClientRequestForSetJob:", v9);

  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  @"QueueClientRequest",  v5));
    if (v11)
    {
      if (-[MADAutoAssetControlManager _isClientRequestSubjectToElimination:]( self,  "_isClientRequestSubjectToElimination:",  v5)
        && -[MADAutoAssetControlManager _setInstanceBeingEliminated:fromLocation:]( self,  "_setInstanceBeingEliminated:fromLocation:",  v11,  @"QueueClientRequest"))
      {
        id v12 = objc_alloc(&OBJC_CLASS___NSString);
        id v13 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
        uint64_t v15 = -[NSString initWithFormat:]( v12,  "initWithFormat:",  @"in-progress elimination blocking new set-request | clientRequest:%@",  v14);
        -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6114LL,  @"QueueClientRequest",  v15);

        int v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 oslog]);

        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          -[MADAutoAssetControlManager action_QueueClientRequest:error:].cold.1(v5);
        }
LABEL_15:

        goto LABEL_26;
      }

      uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
      uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", v29));
      unsigned __int8 v31 = -[MADAutoAssetControlManager _messageBlockedUntilDownloadManagerSync:]( self,  "_messageBlockedUntilDownloadManagerSync:",  v30);

      if ((v31 & 1) != 0) {
        goto LABEL_33;
      }
LABEL_29:
      -[MADAutoAssetControlManager _scheduledAndRouteClientRequest:fromLocation:]( self,  "_scheduledAndRouteClientRequest:fromLocation:",  v5,  @"QueueClientRequest");
      goto LABEL_27;
    }

    id v37 = objc_alloc(&OBJC_CLASS___NSString);
    id v38 = (void *)objc_claimAutoreleasedReturnValue([v5 summary]);
    uint64_t v39 = -[NSString initWithFormat:]( v37,  "initWithFormat:",  @"invalid set-eventInfo (instance:MISSING) | set-eventInfo:%@",  v38);
LABEL_25:
    id v41 = v39;
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6102LL,  @"QueueClientRequest",  v39);

    goto LABEL_26;
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v5));
  if (!v11)
  {
    uint64_t v40 = objc_alloc(&OBJC_CLASS___NSString);
    id v38 = (void *)objc_claimAutoreleasedReturnValue([v5 summary]);
    uint64_t v39 = -[NSString initWithFormat:]( v40,  "initWithFormat:",  @"invalid eventInfo (instance:MISSING) | eventInfo:%@",  v38);
    goto LABEL_25;
  }

  if (-[MADAutoAssetControlManager _isClientRequestSubjectToElimination:]( self,  "_isClientRequestSubjectToElimination:",  v5))
  {
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v11 clientAssetSelector]);
    unsigned int v23 = -[MADAutoAssetControlManager _selectorBeingEliminated:fromLocation:]( self,  "_selectorBeingEliminated:fromLocation:",  v22,  @"QueueClientRequest");

    if (v23)
    {
      BOOL v24 = objc_alloc(&OBJC_CLASS___NSString);
      BOOL v25 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
      id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 summary]);
      id v27 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"in-progress elimination blocking new request | clientRequest:%@",  v26);
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6114LL,  @"QueueClientRequest",  v27);

      id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 oslog]);

      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager action_QueueClientRequest:error:].cold.2(v5);
      }
      goto LABEL_15;
    }
  }

  id v32 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  __int128 v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", v32));
  unsigned __int8 v34 = -[MADAutoAssetControlManager _messageBlockedUntilDownloadManagerSync:]( self,  "_messageBlockedUntilDownloadManagerSync:",  v33);

  if ((v34 & 1) == 0)
  {

    goto LABEL_29;
  }

  id v35 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", v35));

  if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v18,  @"MA-AUTO:CHECK_FOR_NEWER") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v18,  @"MA-AUTO:LOCK_CONTENT") & 1) == 0)
  {
    if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v18,  @"MA-AUTO:MAP_LOCKED_CONTENT_TO_EXCLAVE") & 1) == 0)
    {

LABEL_33:
      uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
      unsigned int v44 = -[MADAutoAssetControlManager timerStartForRequest:fromLocation:]( self,  "timerStartForRequest:fromLocation:",  v43,  @"QueueClientRequest");

      if (!v44)
      {
        id v47 = objc_alloc(&OBJC_CLASS___NSString);
        id v48 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
        id v49 = (void *)objc_claimAutoreleasedReturnValue([v48 summary]);
        __int128 v50 = -[NSString initWithFormat:]( v47,  "initWithFormat:",  @"immediate timeout (unable to start timer) | clientRequest:%@",  v49);
        -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6105LL,  @"QueueClientRequest",  v50);

        goto LABEL_27;
      }

      __int128 v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsAwaitingSync](self, "clientRequestsAwaitingSync"));
      [v45 addObject:v5];

      id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v11 totalQueuedClientRequests]);
      id v46 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
      -[MADAutoAssetControlManager _statsIncrement:forClientRequest:]( self,  "_statsIncrement:forClientRequest:",  v18,  v46);

      goto LABEL_9;
    }

    -[MADAutoAssetControlManager handleClientMapLockedToExclaveRequest:fromLocation:]( self,  "handleClientMapLockedToExclaveRequest:fromLocation:",  v5,  @"QueueClientRequest");
LABEL_9:

LABEL_26:
    goto LABEL_27;
  }

  unsigned int v36 = -[MADAutoAssetControlManager handleClientPotentialJob:alreadyScheduledSelector:forAutoJob:fromLocation:]( self,  "handleClientPotentialJob:alreadyScheduledSelector:forAutoJob:fromLocation:",  v5,  0LL,  0LL,  @"QueueClientRequest");

  if (v36) {
    goto LABEL_33;
  }
LABEL_27:

  return 0LL;
}

- (int64_t)action_QueueClientRequestBefore1st:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  if (!v5)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v11 diag]);
    id v19 = objc_alloc(&OBJC_CLASS___NSString);
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    id v21 = -[NSString initWithFormat:]( v19,  "initWithFormat:",  @"{QueueClientRequestBefore1st} nil eventInfo provided | %@",  v20);
    [v18 trackAnomaly:@"AUTO-CONTROL" forReason:v21 withResult:6102 withError:0];

LABEL_9:
LABEL_31:

    goto LABEL_32;
  }

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  -[MADAutoAssetControlManager trackClientRequest:](self, "trackClientRequest:", v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  unsigned int v10 = -[MADAutoAssetControlManager _isClientRequestForSetJob:](self, "_isClientRequestForSetJob:", v9);

  if (!v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageInstance:]( self,  "clientRequestMessageInstance:",  v5));
    if (v11)
    {
      if (-[MADAutoAssetControlManager _isClientRequestSubjectToElimination:]( self,  "_isClientRequestSubjectToElimination:",  v5))
      {
        uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v11 clientAssetSelector]);
        unsigned int v23 = -[MADAutoAssetControlManager _selectorBeingEliminated:fromLocation:]( self,  "_selectorBeingEliminated:fromLocation:",  v22,  @"QueueClientRequestBefore1st");

        if (v23)
        {
          BOOL v24 = objc_alloc(&OBJC_CLASS___NSString);
          BOOL v25 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
          id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 summary]);
          id v27 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"in-progress elimination blocking new request | clientRequest:%@",  v26);
          -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6114LL,  @"QueueClientRequestBefore1st",  v27);

          id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 oslog]);

          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            -[MADAutoAssetControlManager action_QueueClientRequestBefore1st:error:].cold.2(v5);
          }
          goto LABEL_15;
        }
      }

      id v38 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
      uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", v38));
      uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v11 clientAssetSelector]);
      unsigned int v41 = -[MADAutoAssetControlManager _messageBlockedUntilFirstUnlock:forAssetSelector:]( self,  "_messageBlockedUntilFirstUnlock:forAssetSelector:",  v39,  v40);

      if (v41)
      {
        id v42 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", v42));

        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v18,  @"MA-AUTO:CHECK_FOR_NEWER") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v18,  @"MA-AUTO:LOCK_CONTENT") & 1) != 0)
        {
          unsigned __int8 v43 = -[MADAutoAssetControlManager handleClientPotentialJob:alreadyScheduledSelector:forAutoJob:fromLocation:]( self,  "handleClientPotentialJob:alreadyScheduledSelector:forAutoJob:fromLocation:",  v5,  0LL,  0LL,  @"QueueClientRequestBefore1st");

          if ((v43 & 1) == 0) {
            goto LABEL_32;
          }
LABEL_40:
          __int128 v50 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
          unsigned int v51 = -[MADAutoAssetControlManager timerStartForRequest:fromLocation:]( self,  "timerStartForRequest:fromLocation:",  v50,  @"QueueClientRequestBefore1st");

          if (!v51)
          {
            __int128 v54 = objc_alloc(&OBJC_CLASS___NSString);
            uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
            id v56 = (void *)objc_claimAutoreleasedReturnValue([v55 summary]);
            id v57 = -[NSString initWithFormat:]( v54,  "initWithFormat:",  @"immediate timeout (unable to start timer) | clientRequest:%@",  v56);
            -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6105LL,  @"QueueClientRequestBefore1st",  v57);

            goto LABEL_32;
          }

          uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsAwaitingSync](self, "clientRequestsAwaitingSync"));
          [v52 addObject:v5];

          id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v11 totalQueuedClientRequests]);
          id v53 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
          -[MADAutoAssetControlManager _statsIncrement:forClientRequest:]( self,  "_statsIncrement:forClientRequest:",  v18,  v53);

          goto LABEL_9;
        }

- (int64_t)action_RemoveQueuedClient:(id)a3 error:(id *)a4
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  return 0LL;
}

- (int64_t)action_QueueDownloadManager:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  if (!v5)
  {
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 diag]);
    id v20 = objc_alloc(&OBJC_CLASS___NSString);
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    uint64_t v22 = -[NSString initWithFormat:]( v20,  "initWithFormat:",  @"{QueueDownloadManager} nil eventInfo provided | %@",  v21);
    [v19 trackAnomaly:@"AUTO-CONTROL" forReason:v22 withResult:6111 withError:0];

LABEL_12:
    goto LABEL_13;
  }

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadManagerEventsAwaitingResumed]( self,  "downloadManagerEventsAwaitingResumed"));
  [v8 addObject:v5];

  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadManagerEventsAwaitingResumed]( self,  "downloadManagerEventsAwaitingResumed"));
  id v10 = [v9 count];

  id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadManagerEventsAwaitingResumed]( self,  "downloadManagerEventsAwaitingResumed"));
  id v12 = [v11 count];

  id v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadManagerEventsAwaitingResumed]( self,  "downloadManagerEventsAwaitingResumed"));
  id v14 = [v13 count];

  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadManagerEventsAwaitingResumed]( self,  "downloadManagerEventsAwaitingResumed"));
  id v16 = [v15 count];

  if ((unint64_t)v16 >= 0x401)
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 oslog]);

    if (os_log_type_enabled((os_log_t)v18, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager action_QueueDownloadManager:error:].cold.1(self);
    }
    goto LABEL_12;
  }

- (int64_t)action_RouteCatalogFinished:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetControlManager _routeCatalogFinished:withEventInfo:]( self,  "_routeCatalogFinished:withEventInfo:",  @"RouteCatalogFinished",  v5);
  return 0LL;
}

- (int64_t)action_RouteConfigFinished:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetControlManager _routeConfigFinished:withEventInfo:]( self,  "_routeConfigFinished:withEventInfo:",  @"RouteConfigFinished",  v5);
  return 0LL;
}

- (int64_t)action_RouteAssetFinished:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetControlManager _routeAssetFinished:withEventInfo:]( self,  "_routeAssetFinished:withEventInfo:",  @"RouteAssetFinished",  v5);
  return 0LL;
}

- (int64_t)action_Before1stCatalogFinished:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 diag]);
  id v10 = objc_alloc(&OBJC_CLASS___NSString);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 summary]);

  id v12 = -[NSString initWithFormat:]( v10,  "initWithFormat:",  @"{Before1stCatalogFinished} DownloadManager indication of catalog lookup finished when device is before first-unlock | eventInfo:%@",  v11);
  [v9 trackAnomaly:@"AUTO-CONTROL:BEFORE-FIRST" forReason:v12 withResult:6101 withError:0];

  return 0LL;
}

- (int64_t)action_Before1stConfigFinished:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 diag]);
  id v10 = objc_alloc(&OBJC_CLASS___NSString);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 summary]);

  id v12 = -[NSString initWithFormat:]( v10,  "initWithFormat:",  @"{Before1stConfigFinished} DownloadManager indication of download configuration change finished when device is before first-unlock | eventInfo:%@",  v11);
  [v9 trackAnomaly:@"AUTO-CONTROL:BEFORE-FIRST" forReason:v12 withResult:6101 withError:0];

  return 0LL;
}

- (int64_t)action_Before1stAssetFinished:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 diag]);
  id v10 = objc_alloc(&OBJC_CLASS___NSString);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 summary]);

  id v12 = -[NSString initWithFormat:]( v10,  "initWithFormat:",  @"{Before1stAssetFinished} DownloadManager indication of asset download finished when device is before first-unlock | eventInfo:%@",  v11);
  [v9 trackAnomaly:@"AUTO-CONTROL:BEFORE-FIRST" forReason:v12 withResult:6101 withError:0];

  return 0LL;
}

- (int64_t)action_SyncedReviewUnlocked:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetControlManager clientRequestsAwaitingDispatchAll:]( self,  "clientRequestsAwaitingDispatchAll:",  @"SyncedReviewUnlocked");
  return 0LL;
}

- (int64_t)action_SyncedReviewBefore1st:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetControlManager clientRequestsAwaitingSyncToAwaitingFirstUnlock:]( self,  "clientRequestsAwaitingSyncToAwaitingFirstUnlock:",  @"SyncedReviewBefore1st");
  return 0LL;
}

- (int64_t)action_ObtainLookupGrant:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
  if (v8)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);

    if (v10)
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v5 fromAutoAssetJob]);
      id v13 = (void *)objc_claimAutoreleasedReturnValue([v5 originalSelector]);
      id v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:potentiallyResumingJob:withOriginalSelector:fromLocation:notFoundCode:notFoundReason:downloadingDescriptor:baseForPatchDescriptor:]( self,  "currentJobByUUID:potentiallyResumingJob:withOriginalSelector:fromLocation:notFoundCode:notFoundR eason:downloadingDescriptor:baseForPatchDescriptor:",  v11,  v12,  v13,  @"ObtainLookupGrant",  6111LL,  @"unknown auto-asset-job obtain-lookup-grant",  0LL,  0LL));

      if (v14)
      {
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager lookupGrantsByAssetType](self, "lookupGrantsByAssetType"));
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 assetType]);
        id v18 = [v15 safeObjectForKey:v17 ofClass:objc_opt_class(MADAutoAssetLookupGrant)];
        id v19 = (id)objc_claimAutoreleasedReturnValue(v18);

        if (v19)
        {
          id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 holderJobUUID]);

          if (!v20)
          {
            unsigned __int8 v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
            id v38 = (void *)objc_claimAutoreleasedReturnValue([v37 diag]);
            uint64_t v39 = objc_alloc(&OBJC_CLASS___NSString);
            uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
            unsigned int v41 = -[NSString initWithFormat:]( v39,  "initWithFormat:",  @"{ObtainLookupGrant} pre-existing lookup-grant with no current holder of the grant | lookupGrant:%@",  v40);
            [v38 trackAnomaly:@"AUTO-CONTROL:LOOKUP-GRANT" forReason:v41 withResult:6111 withError:0];

            do
            {
              id v42 = (void *)objc_claimAutoreleasedReturnValue([v19 awaitingExclusiveGrant]);
              id v43 = [v42 count];

              if (!v43)
              {
                id v56 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
                [v19 setHolderJobUUID:v56];

                id v57 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
                [v19 setAwaitingExclusiveGrant:v57];

                -[MADAutoAssetControlManager _logLookupGrantObtained:ofLookupGrant:message:]( self,  "_logLookupGrantObtained:ofLookupGrant:message:",  @"ObtainLookupGrant",  v19,  @"one-and-only job that has just requested the grant");
                __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([v19 holderJobUUID]);
                [v14 exclusiveLookupForAssetTypeGranted:v45];
                goto LABEL_26;
              }

              uint64_t v44 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobToBeGivenGrant:](self, "jobToBeGivenGrant:", v19));
            }

            while (!v44);
            __int128 v45 = (void *)v44;
            id v46 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);

            if (v46)
            {
              id v47 = (void *)objc_claimAutoreleasedReturnValue([v19 awaitingExclusiveGrant]);
              id v48 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
              [v47 addObject:v48];

              -[MADAutoAssetControlManager _logLookupGrantObtained:ofLookupGrant:message:]( self,  "_logLookupGrantObtained:ofLookupGrant:message:",  @"ObtainLookupGrant",  v19,  @"grant given to the next in line (after detection of pre-existing lookup-grant with no current holder)");
              id v49 = (void *)objc_claimAutoreleasedReturnValue([v19 holderJobUUID]);
              [v45 exclusiveLookupForAssetTypeGranted:v49];
            }

            else
            {
              id v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
              uint64_t v58 = (void *)objc_claimAutoreleasedReturnValue([v49 diag]);
              __int128 v59 = objc_alloc(&OBJC_CLASS___NSString);
              __int128 v60 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
              __int128 v61 = (void *)objc_claimAutoreleasedReturnValue([v5 summary]);
              id v62 = -[NSString initWithFormat:]( v59,  "initWithFormat:",  @"{ObtainLookupGrant} about to give grant yet nil eventInfo.autoAssetUUID | lookupGrant:%@ | eventInfo:%@",  v60,  v61);
              [v58 trackAnomaly:@"AUTO-CONTROL:LOOKUP-GRANT" forReason:v62 withResult:6111 withError:0];
            }

LABEL_26:
            goto LABEL_21;
          }

          id v21 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);

          if (v21)
          {
            uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v19 awaitingExclusiveGrant]);
            unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
            [v22 addObject:v23];

            -[MADAutoAssetControlManager _logLookupGrantAwaiting:ofLookupGrant:message:]( self,  "_logLookupGrantAwaiting:ofLookupGrant:message:",  @"ObtainLookupGrant",  v19,  @"job awaiting obtain-lookup-grant");
LABEL_21:

            goto LABEL_22;
          }

          id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
          __int128 v50 = (void *)objc_claimAutoreleasedReturnValue([v26 diag]);
          unsigned int v51 = objc_alloc(&OBJC_CLASS___NSString);
          uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
          id v53 = (void *)objc_claimAutoreleasedReturnValue([v5 summary]);
          __int128 v54 = -[NSString initWithFormat:]( v51,  "initWithFormat:",  @"{ObtainLookupGrant} about to put at back of the line yet nil eventInfo.autoAssetUUID | lookupGrant:%@ | eventInfo:%@",  v52,  v53);
          [v50 trackAnomaly:@"AUTO-CONTROL:LOOKUP-GRANT" forReason:v54 withResult:6111 withError:0];
        }

        else
        {
          uint64_t v30 = objc_alloc(&OBJC_CLASS___MADAutoAssetLookupGrant);
          unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
          id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 assetType]);
          id v19 = -[MADAutoAssetLookupGrant initForAssetType:](v30, "initForAssetType:", v32);

          int64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
          [v19 setHolderJobUUID:v33];

          int64_t v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager lookupGrantsByAssetType](self, "lookupGrantsByAssetType"));
          id v35 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
          unsigned __int8 v36 = (void *)objc_claimAutoreleasedReturnValue([v35 assetType]);
          [v34 setSafeObject:v19 forKey:v36];

          -[MADAutoAssetControlManager _logLookupGrantObtained:ofLookupGrant:message:]( self,  "_logLookupGrantObtained:ofLookupGrant:message:",  @"ObtainLookupGrant",  v19,  @"first job requesting exclusive lookup grant for asset-type");
          id v26 = (void *)objc_claimAutoreleasedReturnValue([v19 holderJobUUID]);
          [v14 exclusiveLookupForAssetTypeGranted:v26];
        }
      }

      else
      {
        id v19 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        id v26 = (void *)objc_claimAutoreleasedReturnValue([v19 diag]);
        id v27 = objc_alloc(&OBJC_CLASS___NSString);
        id v28 = (void *)objc_claimAutoreleasedReturnValue([v5 summary]);
        uint64_t v29 = -[NSString initWithFormat:]( v27,  "initWithFormat:",  @"{ObtainLookupGrant} job requesting lookup-grant not a current job | eventInfo:%@",  v28);
        [v26 trackAnomaly:@"AUTO-CONTROL:LOOKUP-GRANT" forReason:v29 withResult:6111 withError:0];
      }

      goto LABEL_21;
    }

    BOOL v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v25 oslog]);

    if (os_log_type_enabled((os_log_t)v14, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager action_ObtainLookupGrant:error:].cold.2();
    }
  }

  else
  {
    BOOL v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v24 oslog]);

    if (os_log_type_enabled((os_log_t)v14, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager action_ObtainLookupGrant:error:].cold.1();
    }
  }

- (int64_t)action_ReleaseLookupGrant:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
  if (v8)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);

    if (v10)
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v5 fromAutoAssetJob]);
      id v13 = (void *)objc_claimAutoreleasedReturnValue([v5 originalSelector]);
      id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:potentiallyResumingJob:withOriginalSelector:fromLocation:notFoundCode:notFoundReason:downloadingDescriptor:baseForPatchDescriptor:]( self,  "currentJobByUUID:potentiallyResumingJob:withOriginalSelector:fromLocation:notFoundCode:notFo undReason:downloadingDescriptor:baseForPatchDescriptor:",  v11,  v12,  v13,  @"ReleaseLookupGrant",  6111LL,  @"unknown auto-asset-job release-lookup-grant",  0LL,  0LL));

      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager lookupGrantsByAssetType](self, "lookupGrantsByAssetType"));
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 assetType]);
      id v18 = [v15 safeObjectForKey:v17 ofClass:objc_opt_class(MADAutoAssetLookupGrant)];
      id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);

      if (v19)
      {
        id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 assetType]);

        if (v20)
        {
          if (!v14)
          {
            id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
            uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v21 diag]);
            unsigned int v23 = objc_alloc(&OBJC_CLASS___NSString);
            BOOL v24 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
            BOOL v25 = -[NSString initWithFormat:]( v23,  "initWithFormat:",  @"{ReleaseLookupGrant} failed job lookup for lookupGrant:%@",  v24);
            [v22 trackAnomaly:@"AUTO-CONTROL:LOOKUP-GRANT" forReason:v25 withResult:6111 withError:0];
          }

          id v26 = (void *)objc_claimAutoreleasedReturnValue([v19 holderJobUUID]);

          if (v26)
          {
            id v27 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
            id v28 = (void *)objc_claimAutoreleasedReturnValue([v19 holderJobUUID]);
            unsigned __int8 v29 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v27, v28);

            if ((v29 & 1) != 0) {
              goto LABEL_19;
            }
            uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
            unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue([v30 diag]);
            id v32 = objc_alloc(&OBJC_CLASS___NSString);
            int64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
            int64_t v34 = (NSString *)objc_claimAutoreleasedReturnValue([v19 summary]);
            id v35 = -[NSString initWithFormat:]( v32,  "initWithFormat:",  @"{ReleaseLookupGrant} pre-existing lookup-grant with different grant holder | releasingJobUUID:%@, lookupGrant:%@",  v33,  v34);
            [v31 trackAnomaly:@"AUTO-CONTROL:LOOKUP-GRANT" forReason:v35 withResult:6111 withError:0];
          }

          else
          {
            uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
            unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue([v30 diag]);
            id v46 = objc_alloc(&OBJC_CLASS___NSString);
            int64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
            int64_t v34 = -[NSString initWithFormat:]( v46,  "initWithFormat:",  @"{ReleaseLookupGrant} pre-existing lookup-grant with no current holder of the grant | lookupGrant:%@",  v33);
            [v31 trackAnomaly:@"AUTO-CONTROL:LOOKUP-GRANT" forReason:v34 withResult:6111 withError:0];
          }

LABEL_19:
          while (1)
          {
            id v47 = (void *)objc_claimAutoreleasedReturnValue([v19 awaitingExclusiveGrant]);
            id v48 = [v47 count];

            if (!v48) {
              break;
            }
            uint64_t v49 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobToBeGivenGrant:](self, "jobToBeGivenGrant:", v19));
            if (v49)
            {
              __int128 v50 = (void *)v49;
              -[MADAutoAssetControlManager _logLookupGrantObtained:ofLookupGrant:message:]( self,  "_logLookupGrantObtained:ofLookupGrant:message:",  @"ReleaseLookupGrant",  v19,  @"post-release when other job awaiting obtain-lookup-grant");
              unsigned int v51 = (void *)objc_claimAutoreleasedReturnValue([v19 holderJobUUID]);
              [v50 exclusiveLookupForAssetTypeGranted:v51];

              goto LABEL_23;
            }
          }

          uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager lookupGrantsByAssetType](self, "lookupGrantsByAssetType"));
          id v53 = (void *)objc_claimAutoreleasedReturnValue([v19 assetType]);
          [v52 removeObjectForKey:v53];

          -[MADAutoAssetControlManager _logLookupGrantReleased:ofLookupGrant:message:]( self,  "_logLookupGrantReleased:ofLookupGrant:message:",  @"ReleaseLookupGrant",  v19,  @"no jobs awaiting obtain-lookup-grant");
          goto LABEL_23;
        }

        id v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v38 diag]);
        uint64_t v44 = objc_alloc(&OBJC_CLASS___NSString);
        unsigned int v41 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
        __int128 v45 = -[NSString initWithFormat:]( v44,  "initWithFormat:",  @"{ReleaseLookupGrant} lookup-grant without assetType:%@",  v41);
        [v39 trackAnomaly:@"AUTO-CONTROL:LOOKUP-GRANT" forReason:v45 withResult:6111 withError:0];
      }

      else
      {
        id v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v38 diag]);
        uint64_t v40 = objc_alloc(&OBJC_CLASS___NSString);
        unsigned int v41 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
        id v42 = (void *)objc_claimAutoreleasedReturnValue([v41 assetType]);
        id v43 = -[NSString initWithFormat:]( v40,  "initWithFormat:",  @"{ReleaseLookupGrant} no lookup-grant for assetType:%@",  v42);
        [v39 trackAnomaly:@"AUTO-CONTROL:LOOKUP-GRANT" forReason:v43 withResult:6111 withError:0];
      }

LABEL_23:
      goto LABEL_24;
    }

    unsigned __int8 v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 oslog]);

    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager action_ReleaseLookupGrant:error:].cold.2();
    }
  }

  else
  {
    unsigned __int8 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v36 oslog]);

    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager action_ReleaseLookupGrant:error:].cold.1();
    }
  }

- (int64_t)action_ProvidePersistedForJob:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
  if (!v8)
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager action_ProvidePersistedForJob:error:].cold.1();
    }
    goto LABEL_13;
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 assetVersion]);

  if (!v10)
  {
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager action_ProvidePersistedForJob:error:].cold.2();
    }
    goto LABEL_13;
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 downloadingDescriptor]);

  if (!v11)
  {
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager action_ProvidePersistedForJob:error:].cold.3();
    }
LABEL_13:

    goto LABEL_14;
  }

  id v12 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v5 fromAutoAssetJob]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v5 originalSelector]);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v5 downloadingDescriptor]);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v5 baseForPatchDescriptor]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:potentiallyResumingJob:withOriginalSelector:fromLocation:notFoundCode:notFoundReason:downloadingDescriptor:baseForPatchDescriptor:]( self,  "currentJobByUUID:potentiallyResumingJob:withOriginalSelector:fromLocation:notFoundCode:notFoundReaso n:downloadingDescriptor:baseForPatchDescriptor:",  v12,  v13,  v14,  @"ProvidePersistedForJob",  6111LL,  @"unknown auto-asset-job requesting persisted-state",  v15,  v16));

  if (v17)
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetJobID]);
    [v17 persistedStateForDownloadJob:v18];
  }

LABEL_14:
  return 0LL;
}

- (int64_t)action_SetJobLookupResponseRcvd:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 setConfiguration]);
  if (v8)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 setConfiguration]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 setConfiguration]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
    id v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v10,  v12));

    if (v13 && ([v13 haveReceivedLookupResponse] & 1) == 0)
    {
      int v14 = 1;
      [v13 setHaveReceivedLookupResponse:1];
    }

    else
    {
      int v14 = 0;
    }

    id v16 = (void *)objc_claimAutoreleasedReturnValue([v5 setDescriptor]);

    if (!v16)
    {
      id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 diag]);
      [v19 trackAnomaly:@"AUTO-CONTROL" forReason:@"{SetJobLookupResponseRcvd} set-job did not provide its assigned set-descriptor" withResult:6102 withError:0];

      if (!v14) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }

    if (v14) {
LABEL_10:
    }
      -[MADAutoAssetControlManager setConfigurationPersist:fromLocation:dueToAlter:forHistoryOperation:]( self,  "setConfigurationPersist:fromLocation:dueToAlter:forHistoryOperation:",  v13,  @"SetJobLookupResponseRcvd",  0LL,  448LL);
  }

  else
  {
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v15 oslog]);

    if (os_log_type_enabled((os_log_t)v13, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager action_SetJobLookupResponseRcvd:error:].cold.1();
    }
  }

- (int64_t)action_IssueClientReplyJobResponse:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:fromLocation:notFoundCode:notFoundReason:]( self,  "currentJobByUUID:fromLocation:notFoundCode:notFoundReason:",  v8,  @"IssueClientReplyJobResponse",  0LL,  0LL));

  uint64_t v10 = objc_claimAutoreleasedReturnValue([v5 fromAutoAssetJob]);
  if (v10)
  {
    id v11 = (void *)v10;
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v5 fromAutoAssetJob]);
    if ([v12 autoAssetSetJob])
    {

LABEL_9:
      int v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 diag]);
      [v15 trackAnomaly:@"AUTO-CONTROL" forReason:@"{IssueClientReplyJobRespons} should never be called for set-job" withResult:6103 withError:0];

      goto LABEL_22;
    }

    if (v9)
    {
      unsigned __int8 v13 = [v9 autoAssetSetJob];

      if ((v13 & 1) != 0) {
        goto LABEL_9;
      }
    }

    else
    {
    }
  }

  else if (v9 && [v9 autoAssetSetJob])
  {
    goto LABEL_9;
  }

  id v16 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v5 fromAutoAssetJob]);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v5 originalSelector]);
  id v19 =  -[MADAutoAssetControlManager currentJobByUUID:potentiallyResumingJob:withOriginalSelector:fromLocation:notFoundCode:notFoundReason:downloadingDescriptor:baseForPatchDescriptor:]( self,  "currentJobByUUID:potentiallyResumingJob:withOriginalSelector:fromLocation:notFoundCode:notFoundReason:downlo adingDescriptor:baseForPatchDescriptor:",  v16,  v17,  v18,  @"IssueClientReplyJobResponse",  6111LL,  @"unknown auto-asset-job requesting reply with job response (and unable to resume)",  0LL,  0LL);

  id v20 = (void *)objc_claimAutoreleasedReturnValue([v5 jobInformation]);
  id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 initialAssetSelector]);
  id v64 = (void *)objc_claimAutoreleasedReturnValue([v20 fullAssetSelector]);
  BOOL v65 = (void *)objc_claimAutoreleasedReturnValue([v20 currentStatus]);
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v5 responseError]);
  unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  BOOL v24 = (void *)objc_claimAutoreleasedReturnValue([v23 clientRequestMessage]);
  id v66 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v24));

  id v63 = v21;
  if (v22) {
    goto LABEL_12;
  }
  if (v21) {
    id v28 = (void *)objc_claimAutoreleasedReturnValue([v21 assetVersion]);
  }
  else {
    id v28 = 0LL;
  }
  BOOL v25 = v64;
  id v35 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
  if (v64)
  {
    unsigned __int8 v36 = @"IssueClientReplyJobResponse(full-selector)";
    unsigned __int8 v37 = self;
    id v38 = v64;
  }

  else
  {
    unsigned __int8 v36 = @"IssueClientReplyJobResponse(initial-selector)";
    unsigned __int8 v37 = self;
    id v38 = v21;
  }

  -[MADAutoAssetControlManager updateAutoAssetStatus:forActiveJobUUID:withLatestJobStatus:matchingAssetVersion:fromLocation:]( v37,  "updateAutoAssetStatus:forActiveJobUUID:withLatestJobStatus:matchingAssetVersion:fromLocation:",  v38,  v35,  v65,  v28,  v36);

  id v39 = (id)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v39 clientReplyCompletion]);
  if (!v22)
  {
LABEL_43:

LABEL_44:
    if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v66,  @"MA-AUTO(REPLY):LOCK_CONTENT"))
    {
      -[MADAutoAssetControlManager lockAutoAssetReplyJobResponse:forEventInfo:lockingChosenDescriptor:]( self,  "lockAutoAssetReplyJobResponse:forEventInfo:lockingChosenDescriptor:",  @"not awaiting personalization/grafting [or mounting]",  v5,  v22);
    }

    else
    {
      uint64_t v58 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
      __int128 v59 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetUUID]);
      __int128 v60 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
      __int128 v61 = (void *)objc_claimAutoreleasedReturnValue([v60 responseMessage]);
      id v62 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager updateAutoAssetStatus:forActiveJobUUID:forJobResponse:withResponseError:]( self,  "updateAutoAssetStatus:forActiveJobUUID:forJobResponse:withResponseError:",  v58,  v59,  v61,  0LL));

      BOOL v25 = v64;
      -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v5,  v62,  0LL,  @"IssueClientReplyJobResponse");
    }

    goto LABEL_14;
  }

  unsigned int v40 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v66,  @"MA-AUTO(REPLY):LOCK_CONTENT");

  if (!v40)
  {
    uint64_t v22 = 0LL;
    goto LABEL_44;
  }

  unsigned int v41 = (void *)objc_claimAutoreleasedReturnValue([v64 assetType]);
  id v42 = (void *)objc_claimAutoreleasedReturnValue([v64 assetSpecifier]);
  id v43 = (void *)objc_claimAutoreleasedReturnValue([v64 assetVersion]);
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:]( self,  "_latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:",  @"IssueClientReplyJobResponse",  v41,  v42,  v43));

  if (v22)
  {
    uint64_t v44 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
    __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([v22 assetType]);
    id v46 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSpecifier]);
    id v47 = (void *)objc_claimAutoreleasedReturnValue([v22 assetVersion]);
    id v39 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v44,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v45,  v46,  v47);

    if (+[MADAutoAssetSecure isPersonalizationRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationRequired:forDescriptor:",  @"IssueClientReplyJobResponse",  v22)
      && +[MADAutoAssetSecure isPersonalizationRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationRequired:forDescriptor:",  @"IssueClientReplyJobResponse",  v22))
    {
      [v22 setSecureOperationInProgress:1];
      v71[0] = _NSConcreteStackBlock;
      v71[1] = 3221225472LL;
      v71[2] = __71__MADAutoAssetControlManager_action_IssueClientReplyJobResponse_error___block_invoke;
      v71[3] = &unk_34F2B8;
      v71[4] = self;
      id v48 = &v72;
      id v49 = v22;
      __int128 v50 = &v73;
      id v72 = v49;
      id v73 = v39;
      unsigned int v51 = &v74;
      id v74 = v5;
      id v52 = v39;
      +[MADAutoAssetSecure personalizeGraftDownloaded:forDescriptor:allowingNetwork:completion:]( &OBJC_CLASS___MADAutoAssetSecure,  "personalizeGraftDownloaded:forDescriptor:allowingNetwork:completion:",  @"IssueClientReplyJobResponse",  v49,  1LL,  v71);
LABEL_39:

      goto LABEL_13;
    }

    if (+[MADAutoAssetSecure doesDescriptorInvolveGrafting:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "doesDescriptorInvolveGrafting:forDescriptor:",  @"IssueClientReplyJobResponse",  v22))
    {
      BOOL v25 = v64;
      if (!+[MADAutoAssetSecure isGraftedOrMounted:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isGraftedOrMounted:forDescriptor:",  @"IssueClientReplyJobResponse",  v22))
      {
        id v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        __int128 v54 = (os_log_s *)objc_claimAutoreleasedReturnValue([v53 oslog]);

        if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
          *(_DWORD *)buf = 138543362;
          id v76 = v55;
          _os_log_impl( &dword_0,  v54,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-GRAFT][SINGLETON-CONTROL] {IssueClientReplyJobResponse} | triggering graft|mount | chosenDownl oadedDescriptor:%{public}@",  buf,  0xCu);
        }

        [v22 setSecureOperationInProgress:1];
        v67[0] = _NSConcreteStackBlock;
        v67[1] = 3221225472LL;
        v67[2] = __71__MADAutoAssetControlManager_action_IssueClientReplyJobResponse_error___block_invoke_1539;
        v67[3] = &unk_34F2B8;
        v67[4] = self;
        id v48 = &v68;
        id v56 = v22;
        __int128 v50 = &v69;
        id v68 = v56;
        id v69 = v39;
        unsigned int v51 = &v70;
        id v70 = v5;
        id v57 = v39;
        +[MADAutoAssetSecure graftDownloaded:graftingDescriptor:completion:]( &OBJC_CLASS___MADAutoAssetSecure,  "graftDownloaded:graftingDescriptor:completion:",  @"IssueClientReplyJobResponse",  v56,  v67);
        goto LABEL_39;
      }
    }

    else
    {
      BOOL v25 = v64;
    }

    goto LABEL_43;
  }

  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6504LL,  @"IssueClientReplyJobResponse",  0LL,  @"job successfully downloaded asset yet asset not present on the filesystem"));
  if (!v22)
  {
    BOOL v25 = v64;
    goto LABEL_44;
  }

void __71__MADAutoAssetControlManager_action_IssueClientReplyJobResponse_error___block_invoke( id *a1,  uint64_t a2,  void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] autoControlManagerFSM]);
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __71__MADAutoAssetControlManager_action_IssueClientReplyJobResponse_error___block_invoke_2;
  block[3] = &unk_34EF88;
  id v7 = a1[5];
  id v8 = a1[4];
  id v11 = v7;
  id v12 = v8;
  id v13 = a1[6];
  id v14 = a1[7];
  id v15 = v4;
  id v9 = v4;
  dispatch_async(v6, block);
}

void __71__MADAutoAssetControlManager_action_IssueClientReplyJobResponse_error___block_invoke_2(uint64_t a1)
{
  if ([*(id *)(a1 + 40) isAutoAssetBeingEliminated:*(void *)(a1 + 48)])
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) logger]);
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 oslog]);

    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) summary]);
      *(_DWORD *)buf = 138543362;
      id v7 = v4;
      _os_log_impl( &dword_0,  v3,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-PERSONALIZATION-GRAFT][SINGLETON-CONTROL][ELIMINATE] {IssueClientReplyJobResponse} | eliminate tri ggered while performing personalize+graft|mount | chosenDownloadedDescriptor:%{public}@",  buf,  0xCu);
    }

    [*(id *)(a1 + 40) eliminateUngraftDescriptor:@"IssueClientReplyJobResponse" forAutoAssetDescriptor:*(void *)(a1 + 32) failingClientRequestForEventInfo:*(void *)(a1 + 56)];
  }

  else if (*(void *)(a1 + 64))
  {
    id v5 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@[PERSONALIZING/GRAFTING]",  @"IssueClientReplyJobResponse");
    objc_msgSend( *(id *)(a1 + 40),  "issueResponseToFailedAutoAssetLockRequest:forEventInfo:withResponseError:forAttemptedDescriptor:");
  }

  else
  {
    [*(id *)(a1 + 40) lockAutoAssetReplyJobResponse:@"any personalization/grafting [or mounting] successful" forEventInfo:*(void *)(a1 + 56) lockingChosenDescriptor:*(void *)(a1 + 32)];
  }

void __71__MADAutoAssetControlManager_action_IssueClientReplyJobResponse_error___block_invoke_1539( id *a1,  uint64_t a2,  void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] autoControlManagerFSM]);
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __71__MADAutoAssetControlManager_action_IssueClientReplyJobResponse_error___block_invoke_2_1540;
  block[3] = &unk_34EF88;
  id v7 = a1[5];
  id v8 = a1[4];
  id v11 = v7;
  id v12 = v8;
  id v13 = a1[6];
  id v14 = a1[7];
  id v15 = v4;
  id v9 = v4;
  dispatch_async(v6, block);
}

void __71__MADAutoAssetControlManager_action_IssueClientReplyJobResponse_error___block_invoke_2_1540( uint64_t a1)
{
  uint64_t v2 = a1 + 32;
  [*(id *)(a1 + 32) setSecureOperationInProgress:0];
  if ([*(id *)(v2 + 8) isAutoAssetBeingEliminated:*(void *)(v2 + 16)])
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) logger]);
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 oslog]);

    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)v2 summary]);
      *(_DWORD *)buf = 138543362;
      id v13 = v5;
      _os_log_impl( &dword_0,  v4,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-GRAFT][SINGLETON-CONTROL][ELIMINATE] {IssueClientReplyJobResponse} | eliminate triggered while gra fting|mounting | chosenDownloadedDescriptor:%{public}@",  buf,  0xCu);
    }

    [*(id *)(a1 + 40) eliminateUngraftDescriptor:@"IssueClientReplyJobResponse" forAutoAssetDescriptor:*(void *)(a1 + 32) failingClientRequestForEventInfo:*(void *)(a1 + 56)];
  }

  else if (*(void *)(a1 + 64))
  {
    uint64_t v6 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@[GRAFTING]",  @"IssueClientReplyJobResponse");
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) logger]);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 oslog]);

    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      __71__MADAutoAssetControlManager_action_IssueClientReplyJobResponse_error___block_invoke_2_1540_cold_1();
    }

    [*(id *)(a1 + 40) issueResponseToFailedAutoAssetLockRequest:v6 forEventInfo:*(void *)(a1 + 56) withResponseError:*(void *)(a1 + 64) forAttemptedDescriptor:*(void *)(a1 + 32)];
  }

  else
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) logger]);
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 oslog]);

    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)v2 summary]);
      *(_DWORD *)buf = 138543362;
      id v13 = v11;
      _os_log_impl( &dword_0,  v10,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-GRAFT][SINGLETON-CONTROL] {IssueClientReplyJobResponse} | graft|mount SUCCESS | chosenDownloadedDe scriptor:%{public}@",  buf,  0xCu);
    }

    [*(id *)(a1 + 40) lockAutoAssetReplyJobResponse:@"grafting [or mounting] successful" forEventInfo:*(void *)(a1 + 56) lockingChosenDescriptor:*(void *)(a1 + 32)];
  }

- (void)lockAutoAssetReplyJobResponse:(id)a3 forEventInfo:(id)a4 lockingChosenDescriptor:(id)a5
{
  id v41 = a3;
  id v8 = a4;
  id v9 = a5;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  id v12 = (void *)objc_claimAutoreleasedReturnValue([v8 jobInformation]);
  id v13 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSpecifier]);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v9 assetVersion]);
  id v39 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v13,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v14,  v15,  v16);

  id v17 = (void *)objc_claimAutoreleasedReturnValue([v12 clientInstance]);
  unsigned int v40 = v12;
  uint64_t v18 = objc_claimAutoreleasedReturnValue([v12 clientDesire]);
  uint64_t v19 = v18;
  if (v17)
  {
    if (v18) {
      goto LABEL_3;
    }
  }

  else
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageInstance:]( self,  "clientRequestMessageInstance:",  v8));
    if (v19) {
      goto LABEL_3;
    }
  }

  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequestMessage]);
  uint64_t v19 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageDesire:](self, "clientRequestMessageDesire:", v30));

LABEL_3:
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
  id v21 = (void *)objc_claimAutoreleasedReturnValue([v8 clientReplyCompletion]);
  id v22 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager notifyLockerJustLockedDescriptor:forClientInstance:withClientDesire:respondingToClientRequest:withClientCompletion:]( self,  "notifyLockerJustLockedDescriptor:forClientInstance:withClientDesire:respondingToClientRequest:withClientCompletion:",  v9,  v17,  v19,  v20,  v21));

  id v38 = (void *)v19;
  if (v22)
  {
    unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetSelector]);
    BOOL v24 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetUUID]);
    BOOL v25 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
    id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 responseMessage]);
    id v27 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager updateAutoAssetStatus:forActiveJobUUID:forJobResponse:withResponseError:]( self,  "updateAutoAssetStatus:forActiveJobUUID:forJobResponse:withResponseError:",  v23,  v24,  v26,  v22));

    id v28 = v41;
    -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v8,  v27,  v22,  v41);
    unsigned __int8 v29 = v39;
LABEL_13:
    id v35 = (void *)objc_claimAutoreleasedReturnValue([v17 autoAssetClientName]);
    if (v35) {
      uint64_t v36 = objc_claimAutoreleasedReturnValue([v17 autoAssetClientName]);
    }
    else {
      uint64_t v36 = objc_claimAutoreleasedReturnValue([v17 clientProcessName]);
    }
    unsigned __int8 v37 = (void *)v36;
    +[MADAutoAssetHistory recordFailedOperation:fromClient:forAssetID:withSelector:failingWithError:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordFailedOperation:fromClient:forAssetID:withSelector:failingWithError:",  504LL,  v36,  @"UNKNOWN",  v29,  v22);

    goto LABEL_17;
  }

  id v28 = v41;
  unsigned __int8 v29 = v39;
  if ([v9 neverBeenLocked])
  {
    [v9 setNeverBeenLocked:0];
    unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue([v17 autoAssetClientName]);
    if (v31) {
      uint64_t v32 = objc_claimAutoreleasedReturnValue([v17 autoAssetClientName]);
    }
    else {
      uint64_t v32 = objc_claimAutoreleasedReturnValue([v17 clientProcessName]);
    }
    int64_t v33 = (void *)v32;

    -[MADAutoAssetControlManager trackDescriptor:persisting:fromLocation:changedWhileTerminated:changedNeverBeenLocked:historyOperation:firstClientName:]( self,  "trackDescriptor:persisting:fromLocation:changedWhileTerminated:changedNeverBeenLocked:historyOperation:firstClientName:",  v9,  1LL,  v41,  0LL,  1LL,  0LL,  v33,  v19);
  }

  int64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
  id v42 = 0LL;
  id v27 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildFoundResponseMessage:forClientRequest:withFoundDescriptor:withInstance:withDesire:fromLocation:error:]( self,  "buildFoundResponseMessage:forClientRequest:withFoundDescriptor:withInstance:withDesire:fromLocation:error:",  @"lockContent(job complete)",  v34,  v9,  v17,  v19,  v41,  &v42));
  id v22 = v42;

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v8,  v27,  v22,  v41);
  if (v22) {
    goto LABEL_13;
  }
LABEL_17:
}

- (int64_t)action_IssueClientReplySetJob:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 setJobInformation]);
  __int16 v147 = (void *)objc_claimAutoreleasedReturnValue([v8 clientInstance]);
  uint64_t v144 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDesire]);
  uint64_t v146 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentSetStatusFromJobInformation:]( self,  "currentSetStatusFromJobInformation:",  v8));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 responseError]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequestMessage]);
  uint64_t v142 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v11));

  id v148 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 assignedAutoAssetUUID]);
  __int16 v143 = v8;
  __int128 v141 = (void *)objc_claimAutoreleasedReturnValue([v8 setDescriptor]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v9 domain]);
  if (!+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"com.apple.MobileAssetError.AutoAsset"))
  {

    goto LABEL_6;
  }

  id v13 = (char *)[v9 code];

  if (v13 != (_BYTE *)&stru_1830.dylib.timestamp + 1)
  {
LABEL_6:
    unsigned int v14 = 0;
    int v15 = 0;
    char v16 = 0;
    goto LABEL_7;
  }

  if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v142,  @"MA-AUTO-SET(REPLY):CHECK_ATOMIC") & 1) != 0)
  {
    unsigned int v14 = 0;
    int v15 = 1;
    char v16 = 1;
  }

  else
  {
    unsigned int v14 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v142,  @"MA-AUTO-SET(REPLY):LOCK_ATOMIC");
    int v15 = 0;
    char v16 = v14;
  }

- (int64_t)action_RemoveFinishedJob:(id)a3 error:(id *)a4
{
  id v46 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v44 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsBeingTracked](self, "clientRequestsBeingTracked"));
  id v7 = [obj countByEnumeratingWithState:&v51 objects:v58 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v52;
    do
    {
      uint64_t v10 = 0LL;
      do
      {
        if (*(void *)v52 != v9) {
          objc_enumerationMutation(obj);
        }
        uint64_t v11 = *(void *)(*((void *)&v51 + 1) + 8LL * (void)v10);
        id v12 = objc_autoreleasePoolPush();
        id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsBeingTracked](self, "clientRequestsBeingTracked"));
        id v14 = [v13 safeObjectForKey:v11 ofClass:objc_opt_class(MADAutoAssetClientRequest)];
        int v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

        char v16 = (void *)objc_claimAutoreleasedReturnValue([v15 clientReplyCompletion]);
        if (v16)
        {
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v15 autoAssetJobUUID]);
          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v46 autoAssetUUID]);
          unsigned int v19 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v17, v18);

          if (!v19) {
            goto LABEL_15;
          }
          id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsByUUID](self, "currentJobsByUUID"));
          id v21 = (void *)objc_claimAutoreleasedReturnValue([v46 autoAssetUUID]);
          id v22 = [v20 safeObjectForKey:v21 ofClass:objc_opt_class(MADAutoAssetJob)];
          unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue(v22);

          if (v23 && (uint64_t)[v23 clientRequestCount] <= 0)
          {
            uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v15 clientRequestUUID]);
            -[NSMutableDictionary setSafeObject:forKey:](v44, "setSafeObject:forKey:", v15, v32);

            objc_msgSend(v23, "setClientRequestCount:", (char *)objc_msgSend(v23, "clientRequestCount") - 1);
          }

          else
          {
            BOOL v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            unsigned int v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

            if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
            {
              id v26 = (void *)objc_claimAutoreleasedReturnValue([v46 summary]);
              *(_DWORD *)buf = 138543362;
              unsigned __int8 v57 = v26;
              _os_log_impl( &dword_0,  v25,  OS_LOG_TYPE_DEFAULT,  "[MORE_CLIENT_REQUESTS] {RemoveFinishedJob} auto-asset-job indicated removal but has more to do | eventInfo:%{public}@",  buf,  0xCu);
            }
          }
        }

        else
        {
          char v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
          id v28 = (void *)objc_claimAutoreleasedReturnValue([v27 diag]);
          unsigned __int8 v29 = objc_alloc(&OBJC_CLASS___NSString);
          uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
          id v31 = -[NSString initWithFormat:]( v29,  "initWithFormat:",  @"encountered client-request being tracked without reply completion | clientRequest:%@",  v30);
          [v28 trackAnomaly:@"AUTO-CONTROL" forReason:v31 withResult:6101 withError:0];

          unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v15 clientRequestUUID]);
          -[NSMutableDictionary setSafeObject:forKey:](v44, "setSafeObject:forKey:", v15, v23);
        }

LABEL_15:
        objc_autoreleasePoolPop(v12);
        uint64_t v10 = (char *)v10 + 1;
      }

      while (v8 != v10);
      id v33 = [obj countByEnumeratingWithState:&v51 objects:v58 count:16];
      id v8 = v33;
    }

    while (v33);
  }

  __int128 v49 = 0u;
  __int128 v50 = 0u;
  __int128 v47 = 0u;
  __int128 v48 = 0u;
  int64_t v34 = v44;
  id v35 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v34,  "countByEnumeratingWithState:objects:count:",  &v47,  v55,  16LL);
  if (v35)
  {
    id v36 = v35;
    uint64_t v37 = *(void *)v48;
    do
    {
      for (unint64_t i = 0LL; i != v36; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v48 != v37) {
          objc_enumerationMutation(v34);
        }
        uint64_t v39 = *(void *)(*((void *)&v47 + 1) + 8LL * (void)i);
        unsigned int v40 = objc_autoreleasePoolPush();
        id v41 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v34,  "safeObjectForKey:ofClass:",  v39,  objc_opt_class(&OBJC_CLASS___MADAutoAssetClientRequest));
        id v42 = (void *)objc_claimAutoreleasedReturnValue(v41);
        -[MADAutoAssetControlManager removeClientRequest:fromLocation:]( self,  "removeClientRequest:fromLocation:",  v42,  @"RemoveFinishedJob");

        objc_autoreleasePoolPop(v40);
      }

      id v36 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v34,  "countByEnumeratingWithState:objects:count:",  &v47,  v55,  16LL);
    }

    while (v36);
  }

  -[MADAutoAssetControlManager _statsIncrementAutoJobsFinished](self, "_statsIncrementAutoJobsFinished");
  -[MADAutoAssetControlManager removeCurrentJob:schedulerInvolved:potentialNetworkFailure:fromLocation:]( self,  "removeCurrentJob:schedulerInvolved:potentialNetworkFailure:fromLocation:",  v46,  [v46 schedulerInvolved],  objc_msgSend(v46, "potentialNetworkFailure"),  @"RemoveFinishedJob");

  return 0LL;
}

- (int64_t)action_ScheduleJobsBefore1st:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
  return 0LL;
}

- (int64_t)action_ScheduleJobs:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  id v31 = v5;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 setOfAutoAssetSelectors]);
  id v9 = [v8 countByEnumeratingWithState:&v34 objects:v42 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v35;
    uint64_t v33 = *(void *)v35;
    uint64_t v32 = v8;
    do
    {
      for (unint64_t i = 0LL; i != v10; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v35 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = *(void **)(*((void *)&v34 + 1) + 8LL * (void)i);
        if (!-[MADAutoAssetControlManager isAutoAssetBeingEliminated:](self, "isAutoAssetBeingEliminated:", v13))
        {
          id v17 = objc_autoreleasePoolPush();
          uint64_t v18 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobBySelector:](self, "currentJobBySelector:", v13));
          if (v18)
          {
            id v19 = (id)v18;
            id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
            {
              id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
              *(_DWORD *)buf = 138543618;
              uint64_t v39 = v22;
              __int16 v40 = 2114;
              id v41 = v23;
              _os_log_impl( &dword_0,  v21,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {ScheduleJobs} auto-asset-job already running | selector:%{public}@",  buf,  0x16u);

              uint64_t v11 = v33;
              goto LABEL_15;
            }
          }

          else
          {
            BOOL v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
            id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 UUIDString]);

            id v19 = -[MADAutoAssetJob initForSelector:withAutoAssetUUID:]( objc_alloc(&OBJC_CLASS___MADAutoAssetJob),  "initForSelector:withAutoAssetUUID:",  v13,  v21);
            if (v19)
            {
              -[MADAutoAssetControlManager addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:usingSetDescriptor:]( self,  "addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDe scriptor:usingSetDescriptor:",  v19,  v13,  v21,  0LL,  0LL,  0LL,  0LL);
              -[MADAutoAssetControlManager _trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:message:]( self,  "_trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescripto r:baseForPatchDescriptor:message:",  @"ScheduleJobs",  @"ENTRY_ADD",  v13,  v21,  0LL,  0LL,  0LL,  @"scheduled auto-asset-job started");
              -[MADAutoAssetControlManager _statsIncrementSchedulerTriggeredJobs]( self,  "_statsIncrementSchedulerTriggeredJobs");
              id v22 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager jobControlInformationForSelector:]( self,  "jobControlInformationForSelector:",  v13));
              [v19 startScheduleTriggeredSelector:v13 withControlInformation:v22];
LABEL_15:
            }

            else
            {
              unsigned int v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
              id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 diag]);
              char v27 = objc_alloc(&OBJC_CLASS___NSString);
              id v28 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
              unsigned __int8 v29 = -[NSString initWithFormat:]( v27,  "initWithFormat:",  @"unable to allocate scheduler-triggered autoAssetJob for selector:%@",  v28);
              [v26 trackAnomaly:@"AUTO-CONTROL" forReason:v29 withResult:6101 withError:0];

              uint64_t v11 = v33;
              id v8 = v32;

              -[MADAutoAssetControlManager _statsIncrementFailuresToStartJobs]( self,  "_statsIncrementFailuresToStartJobs");
            }
          }

          objc_autoreleasePoolPop(v17);
          continue;
        }

        id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        int v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          char v16 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
          *(_DWORD *)buf = 138543362;
          uint64_t v39 = v16;
          _os_log_impl( &dword_0,  v15,  OS_LOG_TYPE_DEFAULT,  "\n [ELIMINATE]{ScheduleJobs} [IGNORED] auto-asset being eliminated - scheduler trigger ignored | selector:%{public}@",  buf,  0xCu);
        }
      }

      id v10 = [v8 countByEnumeratingWithState:&v34 objects:v42 count:16];
    }

    while (v10);
  }

  -[MADAutoAssetControlManager secureCheckProcessLifeLocks:]( self,  "secureCheckProcessLifeLocks:",  @"ScheduleJobs");
  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");

  return 0LL;
}

- (int64_t)action_ScheduleSetJobs:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  __int128 v87 = 0u;
  __int128 v88 = 0u;
  __int128 v85 = 0u;
  __int128 v86 = 0u;
  id v77 = v5;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 triggeredSets]);
  id v9 = [v8 countByEnumeratingWithState:&v85 objects:v93 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v86;
    id v78 = v8;
    uint64_t v84 = *(void *)v86;
    do
    {
      id v12 = 0LL;
      id v83 = v10;
      do
      {
        if (*(void *)v86 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = *(void **)(*((void *)&v85 + 1) + 8LL * (void)v12);
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 clientDomainName]);
        int v15 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSetIdentifier]);
        unsigned int v16 = -[MADAutoAssetControlManager isSetIdentifierBeingEliminated:forClientDomainName:ofSetIdentifier:]( self,  "isSetIdentifierBeingEliminated:forClientDomainName:ofSetIdentifier:",  @"ScheduleSetJobs",  v14,  v15);

        if (!v16)
        {
          id v20 = objc_autoreleasePoolPush();
          uint64_t v21 = objc_claimAutoreleasedReturnValue([v13 clientDomainName]);
          if (v21
            && (id v22 = (void *)v21,
                unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSetIdentifier]),
                v23,
                v22,
                v23))
          {
            if (-[MADAutoAssetControlManager _haveSetAssetEntriesForSchedulerTriggered:]( self,  "_haveSetAssetEntriesForSchedulerTriggered:",  v13))
            {
              BOOL v24 = (void *)objc_claimAutoreleasedReturnValue([v13 clientDomainName]);
              unsigned int v25 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSetIdentifier]);
              id v26 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetJobForClientDomain:byIdentifier:]( self,  "locateSetJobForClientDomain:byIdentifier:",  v24,  v25));

              if (v26)
              {
                char v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

                if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
                {
                  unsigned __int8 v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
                  *(_DWORD *)buf = 138543618;
                  id v90 = v29;
                  __int16 v91 = 2114;
                  __int128 v92 = v30;
                  _os_log_impl( &dword_0,  v28,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {ScheduleSetJobs} set-job already running | schedulerTriggered:%{public}@",  buf,  0x16u);
                }

                id v10 = v83;
              }

              else
              {
                __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v13 clientDomainName]);
                __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSetIdentifier]);
                id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v34,  v35));

                if (v28)
                {
                  __int128 v36 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetInfoInstance);
                  __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v13 clientDomainName]);
                  id v38 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSetIdentifier]);
                  uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s autoAssetEntries](v28, "autoAssetEntries"));
                  id v81 = v28;
                  id v40 = -[MANAutoAssetSetInfoInstance initUsingClientDomain:forClientName:withProcessName:withProcessID:forAssetSetIdentifier:forAtomicInstance:comprisedOfEntries:asEntriesWhenTargeting:associatingFrameworkUUID:]( v36,  "initUsingClientDomain:forClientName:withProcessName:withProcessID:forAssetSetIdentifier:forAto micInstance:comprisedOfEntries:asEntriesWhenTargeting:associatingFrameworkUUID:",  v37,  @"com.apple.MobileAsset.daemon.internal",  @"ScheduleSetJobs",  0LL,  v38,  0LL,  v39,  0LL,  0LL);

                  id v80 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:forSetInfoInstance:asSubAtomicFrom:]( self,  "atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:forSetInfoInstance:asSubAtomicFrom:",  @"ScheduleSetJobs",  221LL,  v40,  0LL));
                  id v41 = (void *)objc_claimAutoreleasedReturnValue([v80 atomicInstanceUUID]);
                  [v40 setAtomicInstance:v41];

                  id v42 = objc_alloc(&OBJC_CLASS___MADAutoSetDescriptor);
                  BOOL v43 = (void *)objc_claimAutoreleasedReturnValue([v13 clientDomainName]);
                  uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSetIdentifier]);
                  uint64_t v82 = v40;
                  __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([v40 atomicInstance]);
                  id v46 = -[MADAutoSetDescriptor initForClientDomainName:forAssetSetIdentifier:withDiscoveredAtomicInstance:withDiscoveredAtomicEntries:]( v42,  "initForClientDomainName:forAssetSetIdentifier:withDiscoveredAtomicInstance:withDiscoveredAtomicEntries:",  v43,  v44,  v45,  0LL);

                  __int128 v47 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s autoAssetEntries](v81, "autoAssetEntries"));
                  __int128 v48 = v46;
                  [v46 setRequestedAutoAssetEntries:v47];

                  __int128 v49 = (void *)objc_claimAutoreleasedReturnValue([v13 schedulerPolicy]);
                  if (v49)
                  {
                    __int128 v50 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetSetPolicy);
                    __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v13 schedulerPolicy]);
                    -[MANAutoAssetSetPolicy setUserInitiated:]( v50,  "setUserInitiated:",  [v51 userInitiated]);

                    __int128 v52 = (void *)objc_claimAutoreleasedReturnValue([v13 schedulerPolicy]);
                    -[MANAutoAssetSetPolicy setLockInhibitsEmergencyRemoval:]( v50,  "setLockInhibitsEmergencyRemoval:",  [v52 lockInhibitsEmergencyRemoval]);

                    __int128 v53 = (void *)objc_claimAutoreleasedReturnValue([v13 schedulerPolicy]);
                    -[MANAutoAssetSetPolicy setAllowCheckDownloadOnBattery:]( v50,  "setAllowCheckDownloadOnBattery:",  [v53 allowCheckDownloadOnBattery]);

                    __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v13 schedulerPolicy]);
                    -[MANAutoAssetSetPolicy setAllowCheckDownloadWhenBatteryLow:]( v50,  "setAllowCheckDownloadWhenBatteryLow:",  [v54 allowCheckDownloadWhenBatteryLow]);

                    id v55 = (void *)objc_claimAutoreleasedReturnValue([v13 schedulerPolicy]);
                    -[MANAutoAssetSetPolicy setAllowCheckDownloadWhenCPUHigh:]( v50,  "setAllowCheckDownloadWhenCPUHigh:",  [v55 allowCheckDownloadWhenCPUHigh]);

                    id v56 = (void *)objc_claimAutoreleasedReturnValue([v13 schedulerPolicy]);
                    -[MANAutoAssetSetPolicy setAllowCheckDownloadOverExpensive:]( v50,  "setAllowCheckDownloadOverExpensive:",  [v56 allowCheckDownloadOverExpensive]);

                    unsigned __int8 v57 = (void *)objc_claimAutoreleasedReturnValue([v13 schedulerPolicy]);
                    -[MANAutoAssetSetPolicy setAllowCheckDownloadOverCellular:]( v50,  "setAllowCheckDownloadOverCellular:",  [v57 allowCheckDownloadOverCellular]);

                    uint64_t v58 = (void *)objc_claimAutoreleasedReturnValue([v13 schedulerPolicy]);
                    -[MANAutoAssetSetPolicy setBlockCheckDownload:]( v50,  "setBlockCheckDownload:",  [v58 blockCheckDownload]);
                  }

                  else
                  {
                    __int128 v50 = 0LL;
                  }

                  id v64 = objc_alloc(&OBJC_CLASS___MADAutoAssetJob);
                  id v65 = -[os_log_s copy](v81, "copy");
                  unsigned int v66 = (void *)objc_claimAutoreleasedReturnValue([v40 atomicInstance]);
                  uint64_t v79 = v50;
                  id v26 = -[MADAutoAssetJob initForSetInstance:withSchedulerSetPolicy:usingSetConfiguration:usingSetDescriptor:withAutoAssetUUID:]( v64,  "initForSetInstance:withSchedulerSetPolicy:usingSetConfiguration:usingSetDescriptor:withAutoAssetUUID:",  v40,  v50,  v65,  v48,  v66);

                  if (v26)
                  {
                    uint64_t v67 = v80;
                    id v68 = (void *)objc_claimAutoreleasedReturnValue([v80 atomicInstanceUUID]);
                    -[MADAutoAssetControlManager addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:usingSetDescriptor:]( self,  "addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForP atchDescriptor:usingSetDescriptor:",  v26,  0LL,  v68,  0LL,  0LL,  0LL,  v48);

                    id v69 = (void *)objc_claimAutoreleasedReturnValue([v80 atomicInstanceUUID]);
                    BYTE2(v76) = 0;
                    LOWORD(v76) = 0;
                    -[MADAutoAssetControlManager trackSetDescriptor:fromLocation:forLatestDownloaded:forSpecificAtomicInstance:withCurrentSetStatus:changedWhileTerminated:changedNeverBeenLocked:notifyingIfJustDownloaded:latestToVend:historyOperation:firstClientName:]( self,  "trackSetDescriptor:fromLocation:forLatestDownloaded:forSpecificAtomicInstance:withCurrentSetStatus :changedWhileTerminated:changedNeverBeenLocked:notifyingIfJustDownloaded:latestToVend:historyOpera tion:firstClientName:",  v48,  @"ScheduleSetJobs",  0LL,  v69,  0LL,  0LL,  v76,  353LL,  @"com.apple.MobileAsset.daemon.internal");

                    -[MADAutoAssetControlManager _statsIncrementSchedulerTriggeredJobs]( self,  "_statsIncrementSchedulerTriggeredJobs");
                    [v26 startScheduleTriggeredSetJob:0];
                  }

                  else
                  {
                    id v70 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
                    id v71 = (void *)objc_claimAutoreleasedReturnValue([v70 diag]);
                    id v72 = objc_alloc(&OBJC_CLASS___NSString);
                    id v73 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
                    id v74 = -[NSString initWithFormat:]( v72,  "initWithFormat:",  @"unable to allocate scheduler-triggered autoAssetJob | schedulerTriggered:%@",  v73);
                    [v71 trackAnomaly:@"AUTO-CONTROL" forReason:v74 withResult:6101 withError:0];

                    -[MADAutoAssetControlManager _statsIncrementFailuresToStartJobs]( self,  "_statsIncrementFailuresToStartJobs");
                    uint64_t v67 = v80;
                  }

                  id v8 = v78;
                  id v10 = v83;
                  id v28 = v81;
                }

                else
                {
                  __int128 v59 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
                  __int128 v60 = (void *)objc_claimAutoreleasedReturnValue([v59 diag]);
                  __int128 v61 = objc_alloc(&OBJC_CLASS___NSString);
                  id v62 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
                  id v63 = -[NSString initWithFormat:]( v61,  "initWithFormat:",  @"unable to locate set-configuration for scheduler-triggered autoAssetJob | schedulerTriggered:%@",  v62);
                  [v60 trackAnomaly:@"AUTO-CONTROL" forReason:v63 withResult:6101 withError:0];

                  -[MADAutoAssetControlManager _statsIncrementFailuresToStartJobs]( self,  "_statsIncrementFailuresToStartJobs");
                  id v26 = 0LL;
                  id v8 = v78;
                }
              }

- (int64_t)action_LogStatistics:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetControlManager secureCheckProcessLifeLocks:]( self,  "secureCheckProcessLifeLocks:",  @"ScheduleSetJobs");
  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
  return 0LL;
}

- (int64_t)action_IgnorePushNotifications:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  __int128 v39 = 0u;
  __int128 v40 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v35 = v5;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 pushNotifications]);
  id v9 = [v8 countByEnumeratingWithState:&v37 objects:v47 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v38;
    __int128 v36 = v8;
    do
    {
      for (unint64_t i = 0LL; i != v10; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v38 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = *(void **)(*((void *)&v37 + 1) + 8LL * (void)i);
        id v14 = objc_autoreleasePoolPush();
        uint64_t v15 = objc_claimAutoreleasedReturnValue([v13 assetType]);
        if (!v15
          || (unsigned int v16 = (void *)v15,
              id v17 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSpecifier]),
              v17,
              v16,
              !v17))
        {
          unsigned int v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

          if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
            goto LABEL_17;
          }
          uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          id v22 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
          *(_DWORD *)buf = 138543618;
          id v42 = v21;
          __int16 v43 = 2114;
          uint64_t v44 = v22;
          unsigned int v23 = v20;
          BOOL v24 = "[%{public}@] {CLOUDCHANNELS:IgnorePushNotifications} missing required asset-selector information (ignore"
                "d) | pushNotification:%{public}@";
          goto LABEL_13;
        }

        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v13 assetVersion]);

        if (v18)
        {
          id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

          if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
            goto LABEL_17;
          }
          uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          id v22 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
          *(_DWORD *)buf = 138543618;
          id v42 = v21;
          __int16 v43 = 2114;
          uint64_t v44 = v22;
          unsigned int v23 = v20;
          BOOL v24 = "[%{public}@] {CLOUDCHANNELS:IgnorePushNotifications} asset-version specified (not applicable to scheduli"
                "ng - ignored) | pushNotification:%{public}@";
LABEL_13:
          _os_log_error_impl(&dword_0, v23, OS_LOG_TYPE_ERROR, v24, buf, 0x16u);

          goto LABEL_17;
        }

        id v26 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
        char v27 = (void *)objc_claimAutoreleasedReturnValue([v13 assetType]);
        id v28 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSpecifier]);
        id v20 = (os_log_s *)-[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( v26,  "initForAssetType:withAssetSpecifier:",  v27,  v28);

        unsigned __int8 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
        {
          id v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s summary](v20, "summary"));
          uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
          *(_DWORD *)buf = 138543874;
          id v42 = v31;
          __int16 v43 = 2114;
          uint64_t v44 = v32;
          __int16 v45 = 2114;
          id v46 = v33;
          _os_log_impl( &dword_0,  v30,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {CLOUDCHANNELS:IgnorePushNotifications} ignoring too-early push | autoAssetSelector:%{public}@ | pushNotification:%{public}@",  buf,  0x20u);
        }

        id v8 = v36;
LABEL_17:

        objc_autoreleasePoolPop(v14);
      }

      id v10 = [v8 countByEnumeratingWithState:&v37 objects:v47 count:16];
    }

    while (v10);
  }

  return 0LL;
}

- (int64_t)action_HandlePushNotifications:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = self;
  id v46 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v48 = 0u;
  __int128 v49 = 0u;
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  __int16 v43 = v5;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 pushNotifications]);
  id v10 = [v9 countByEnumeratingWithState:&v48 objects:v58 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v47 = *(void *)v49;
    __int16 v45 = v9;
    uint64_t v44 = v8;
    do
    {
      for (unint64_t i = 0LL; i != v11; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v49 != v47) {
          objc_enumerationMutation(v9);
        }
        id v13 = *(void **)(*((void *)&v48 + 1) + 8LL * (void)i);
        id v14 = objc_autoreleasePoolPush();
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v13 autoUpdatePolicy]);
        uint64_t v16 = objc_claimAutoreleasedReturnValue([v13 assetType]);
        if (!v16
          || (id v17 = (void *)v16,
              uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSpecifier]),
              v18,
              v17,
              !v18))
        {
          id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v8, "logger"));
          uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

          if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
            goto LABEL_21;
          }
          id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v8, "_updateLatestSummary"));
          unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
          *(_DWORD *)buf = 138543618;
          __int128 v53 = v22;
          __int16 v54 = 2114;
          id v55 = v23;
          BOOL v24 = v21;
          unsigned int v25 = "[%{public}@] {CLOUDCHANNELS:handlePushNotifications} missing required asset-selector information (ignore"
                "d) | pushNotification:%{public}@";
          goto LABEL_13;
        }

        id v19 = (void *)objc_claimAutoreleasedReturnValue([v13 assetVersion]);

        if (v19)
        {
          id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v8, "logger"));
          uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

          if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
            goto LABEL_21;
          }
          id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v8, "_updateLatestSummary"));
          unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
          *(_DWORD *)buf = 138543618;
          __int128 v53 = v22;
          __int16 v54 = 2114;
          id v55 = v23;
          BOOL v24 = v21;
          unsigned int v25 = "[%{public}@] {CLOUDCHANNELS:handlePushNotifications} asset-version specified (not applicable to scheduli"
                "ng - ignored) | pushNotification:%{public}@";
LABEL_13:
          _os_log_error_impl(&dword_0, v24, OS_LOG_TYPE_ERROR, v25, buf, 0x16u);

          goto LABEL_21;
        }

        char v27 = v8;
        id v28 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
        unsigned __int8 v29 = (void *)objc_claimAutoreleasedReturnValue([v13 assetType]);
        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSpecifier]);
        uint64_t v21 = (os_log_s *)-[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( v28,  "initForAssetType:withAssetSpecifier:",  v29,  v30);

        id v31 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s persistedEntryID](v21, "persistedEntryID"));
        id v32 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v46,  "safeObjectForKey:ofClass:",  v31,  objc_opt_class(&OBJC_CLASS___MAAutoAssetUpdatePolicy));
        uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(v32);

        if (v33)
        {
          __int128 v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v27, "logger"));
          __int128 v35 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 oslog]);

          if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
          {
            __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v27, "_updateLatestSummary"));
            __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
            *(_DWORD *)buf = 138543618;
            __int128 v53 = v36;
            __int16 v54 = 2114;
            id v55 = v37;
            _os_log_error_impl( &dword_0,  v35,  OS_LOG_TYPE_ERROR,  "[%{public}@] {CLOUDCHANNELS:handlePushNotifications} asset-selector repeated (ignoring additional entry) | pushNotification:%{public}@",  buf,  0x16u);
          }

- (int64_t)action_ClearInProgressSecure:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v5 setDescriptor]);
  __int128 v38 = v5;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetDescriptors]);
  id v9 = v8;
  __int128 v39 = v8;
  if (v8)
  {
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    id v10 = [v8 countByEnumeratingWithState:&v40 objects:v44 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v41;
      do
      {
        for (unint64_t i = 0LL; i != v11; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v41 != v12) {
            objc_enumerationMutation(v9);
          }
          id v14 = *(void **)(*((void *)&v40 + 1) + 8LL * (void)i);
          if ([v14 secureOperationInProgress])
          {
            [v14 setSecureOperationInProgress:0];
            if ([v14 secureOperationEliminating])
            {
              uint64_t v15 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
              uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
              id v17 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSpecifier]);
              uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v14 assetVersion]);
              id v19 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v15,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v16,  v17,  v18);

              id v20 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager eliminateTrackerForSelector:]( self,  "eliminateTrackerForSelector:",  v19));
              if (v20)
              {
                -[MADAutoAssetControlManager _eliminateSecureOperationFinished:forEliminateDescriptor:]( self,  "_eliminateSecureOperationFinished:forEliminateDescriptor:",  v20,  v14);
              }

              else
              {
                uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
                id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 diag]);
                unsigned int v23 = objc_alloc(&OBJC_CLASS___NSString);
                BOOL v24 = (void *)objc_claimAutoreleasedReturnValue([v14 summary]);
                unsigned int v25 = -[NSString initWithFormat:]( v23,  "initWithFormat:",  @"{ClearInProgressSecure} no eliminateTracker | nextAssetDescriptor:%@",  v24);
                [v22 trackAnomaly:@"ELIMINATE|AUTO-SECURE" forReason:v25 withResult:6111 withError:0];

                id v9 = v39;
              }
            }
          }
        }

        id v11 = [v9 countByEnumeratingWithState:&v40 objects:v44 count:16];
      }

      while (v11);
    }
  }

  if (v37)
  {
    if ([v37 secureOperationInProgress])
    {
      [v37 setSecureOperationInProgress:0];
      if ([v37 secureOperationEliminating])
      {
        id v26 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
        char v27 = (void *)objc_claimAutoreleasedReturnValue([v37 clientDomainName]);
        id v28 = (void *)objc_claimAutoreleasedReturnValue([v37 assetSetIdentifier]);
        id v29 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( v26,  "initForAssetType:withAssetSpecifier:",  v27,  v28);

        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager eliminateTrackerForSelector:]( self,  "eliminateTrackerForSelector:",  v29));
        if (v30)
        {
          -[MADAutoAssetControlManager _eliminateSecureOperationFinished:forEliminateSetDescriptor:]( self,  "_eliminateSecureOperationFinished:forEliminateSetDescriptor:",  v30,  v37);
        }

        else
        {
          id v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
          id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 diag]);
          uint64_t v33 = objc_alloc(&OBJC_CLASS___NSString);
          __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v37 summary]);
          __int128 v35 = -[NSString initWithFormat:]( v33,  "initWithFormat:",  @"{ClearInProgressSecure} no eliminateTracker | setDescriptor:%@",  v34);
          [v32 trackAnomaly:@"SET-ELIMINATE|AUTO-SECURE" forReason:v35 withResult:6111 withError:0];
        }

        id v9 = v39;
      }
    }
  }

  return 0LL;
}

- (int64_t)action_DecideNeedPersonalize:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedEntryIDs:@"DecideNeedPersonalize"]);

  id v10 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v63 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  unsigned int v66 = self;
  if ([v9 count])
  {
    id v11 = +[MADAutoAssetLocker copyOfLocksBySelector](&OBJC_CLASS___MADAutoAssetLocker, "copyOfLocksBySelector");
    -[MADAutoAssetControlManager setLocksPriorToSecureHealing:](self, "setLocksPriorToSecureHealing:", v11);

    __int128 v74 = 0u;
    __int128 v75 = 0u;
    __int128 v72 = 0u;
    __int128 v73 = 0u;
    id v12 = v9;
    id v69 = [v12 countByEnumeratingWithState:&v72 objects:v82 count:16];
    if (v69)
    {
      id v65 = v10;
      __int128 v61 = v9;
      id v62 = v5;
      uint64_t v68 = *(void *)v73;
      id v67 = v12;
      while (1)
      {
        for (unint64_t i = 0LL; i != v69; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v73 != v68) {
            objc_enumerationMutation(v12);
          }
          id v14 = *(const __CFString **)(*((void *)&v72 + 1) + 8LL * (void)i);
          uint64_t v15 = objc_autoreleasePoolPush();
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 persistedEntry:v14 fromLocation:@"DecideNeedPersonalize"]);

          if (v17)
          {
            id v70 = v15;
            id v18 = [v17 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
            id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
            id v20 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
            uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v19 assetType]);
            id v22 = (void *)objc_claimAutoreleasedReturnValue([v19 assetSpecifier]);
            id v23 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( v20,  "initForAssetType:withAssetSpecifier:",  v21,  v22);

            BOOL v24 = (void *)objc_claimAutoreleasedReturnValue([v23 persistedEntryID]);
            if (!+[MADAutoAssetSecure doesDescriptorInvolvePersonalization:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "doesDescriptorInvolvePersonalization:forDescriptor:",  @"DecideNeedPersonalize",  v19)) {
              goto LABEL_34;
            }
            char v71 = 0;
            unsigned int v25 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationVendingDescriptor:managedAsSet:]( self,  "setConfigurationVendingDescriptor:managedAsSet:",  v19,  &v71));
            unsigned int v26 = +[MADAutoAssetSecure isPersonalizationRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationRequired:forDescriptor:",  @"DecideNeedPersonalize",  v19);
            unsigned int v27 = +[MADAutoAssetSecure isGraftedOrMounted:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isGraftedOrMounted:forDescriptor:",  @"DecideNeedPersonalize",  v19);
            if (v25 || !v71 || [v19 stagedPriorToAvailable])
            {
              if (v26)
              {
                -[NSMutableDictionary setSafeObject:forKey:](v65, "setSafeObject:forKey:", v19, v24);
                id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 oslog]);

                if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v30 = (__CFString *)objc_claimAutoreleasedReturnValue([v19 summary]);
                  *(_DWORD *)buf = 138543362;
                  id v77 = v30;
                  _os_log_impl( &dword_0,  v29,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-SECURE][AUTO-PERSONALIZATION][STARTUP] {DecideNeedPersonalize} will personalize (part of lates t-to-vend) | downloadedDescriptor:%{public}@",  buf,  0xCu);
                }

- (int64_t)action_DecideNeedGraft:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = -[MADAutoAssetControlManagerParam initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:",  @"DecideNeedGraft",  0LL,  0LL);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager prePersonalizedSelectors](self, "prePersonalizedSelectors"));
  id v9 = [v8 count];

  if (v9)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager prePersonalizedSelectors](self, "prePersonalizedSelectors"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetSecure commitPrePersonalizedSync:committingSelectors:]( &OBJC_CLASS___MADAutoAssetSecure,  "commitPrePersonalizedSync:committingSelectors:",  @"DecideNeedGraft",  v10));

    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 oslog]);

    if (v11)
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager action_DecideNeedGraft:error:].cold.1();
      }
    }

    else
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager prePersonalizedSelectors](self, "prePersonalizedSelectors"));
        int v22 = 134217984;
        id v23 = [v14 count];
        _os_log_impl( &dword_0,  v13,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-PERSONALIZATION-COMMIT][STARTUP] {DecideNeedGraft} | commit pre-personalized asset-selectors SUC CESS | prePersonalizedSelectors:%ld",  (uint8_t *)&v22,  0xCu);
      }

      -[MADAutoAssetControlManager setConfigurationsPrePersonalizedJustCommitted:]( self,  "setConfigurationsPrePersonalizedJustCommitted:",  @"DecideNeedGraft");
    }

    uint64_t v15 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    -[MADAutoAssetControlManager setPrePersonalizedSelectors:](self, "setPrePersonalizedSelectors:", v15);
  }

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager descriptorsRequiringGrafting](self, "descriptorsRequiringGrafting"));
  id v17 = [v16 count];

  id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v19 = v18;
  if (v17) {
    id v20 = @"HaveNeedingGraft";
  }
  else {
    id v20 = @"NoneNeedingGraft";
  }
  [v18 followupEvent:v20 withInfo:v7];

  return 0LL;
}

- (int64_t)action_AttemptNextPersonalize:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager descriptorsRequiringPersonalization]( self,  "descriptorsRequiringPersonalization"));
  id v8 = [v7 count];

  if (v8)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager descriptorsRequiringPersonalization]( self,  "descriptorsRequiringPersonalization"));
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectAtIndex:0]);

    id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager descriptorsRequiringPersonalization]( self,  "descriptorsRequiringPersonalization"));
    [v11 removeObjectAtIndex:0];

    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = __66__MADAutoAssetControlManager_action_AttemptNextPersonalize_error___block_invoke;
    v16[3] = &unk_34F2E0;
    id v17 = v10;
    id v18 = self;
    id v12 = v10;
    +[MADAutoAssetSecure personalizeDownloaded:personalizingDescriptor:allowingNetwork:committingPersonalization:completion:]( &OBJC_CLASS___MADAutoAssetSecure,  "personalizeDownloaded:personalizingDescriptor:allowingNetwork:committingPersonalization:completion:",  @"AttemptNextPersonalize",  v12,  1LL,  0LL,  v16);
  }

  else
  {
    id v13 = -[MADAutoAssetControlManagerParam initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:",  @"AttemptNextPersonalize",  0LL,  0LL);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    [v14 postEvent:@"NoneNeedingPersonalize" withInfo:v13];
  }

  return 0LL;
}

void __66__MADAutoAssetControlManager_action_AttemptNextPersonalize_error___block_invoke( uint64_t a1,  uint64_t a2,  void *a3)
{
  id v4 = a3;
  id v9 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  if (*(void *)(a1 + 32)) {
    -[NSMutableArray addObject:](v9, "addObject:");
  }
  id v5 = -[MADAutoAssetControlManagerParam initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:withError:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:withError:",  @"AttemptNextPersonalize",  0LL,  v9,  v4);

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) autoControlManagerFSM]);
  id v7 = v6;
  if (v4) {
    id v8 = @"StartupPersonalizeFailed";
  }
  else {
    id v8 = @"StartupPersonalizeSuccess";
  }
  [v6 postEvent:v8 withInfo:v5];
}

- (int64_t)action_AttemptNextGraft:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager descriptorsRequiringGrafting](self, "descriptorsRequiringGrafting"));
  id v8 = [v7 count];

  if (v8)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager descriptorsRequiringGrafting](self, "descriptorsRequiringGrafting"));
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectAtIndex:0]);

    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager descriptorsRequiringGrafting](self, "descriptorsRequiringGrafting"));
    [v11 removeObjectAtIndex:0];

    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = __60__MADAutoAssetControlManager_action_AttemptNextGraft_error___block_invoke;
    v16[3] = &unk_34F2E0;
    id v17 = v10;
    id v18 = self;
    id v12 = v10;
    +[MADAutoAssetSecure graftDownloaded:graftingDescriptor:completion:]( &OBJC_CLASS___MADAutoAssetSecure,  "graftDownloaded:graftingDescriptor:completion:",  @"AttemptNextGraft",  v12,  v16);
  }

  else
  {
    id v13 = -[MADAutoAssetControlManagerParam initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:",  @"AttemptNextPersonalize",  0LL,  0LL);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    [v14 postEvent:@"NoneNeedingGraft" withInfo:v13];
  }

  return 0LL;
}

void __60__MADAutoAssetControlManager_action_AttemptNextGraft_error___block_invoke( uint64_t a1,  uint64_t a2,  void *a3)
{
  id v4 = a3;
  id v9 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  if (*(void *)(a1 + 32)) {
    -[NSMutableArray addObject:](v9, "addObject:");
  }
  id v5 = -[MADAutoAssetControlManagerParam initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:withError:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:withError:",  @"AttemptNextGraft",  0LL,  v9,  v4);

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) autoControlManagerFSM]);
  id v7 = v6;
  if (v4) {
    id v8 = @"StartupGraftFailed";
  }
  else {
    id v8 = @"StartupGraftSuccess";
  }
  [v6 postEvent:v8 withInfo:v5];
}

- (int64_t)action_PersonalizeSuccessDecideMore:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v48 = -[MADAutoAssetControlManagerParam initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:",  @"PersonalizeSuccessDecideMore",  0LL,  0LL);
  __int128 v49 = v5;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([v5 autoAssetDescriptors]);
  id v8 = [obj countByEnumeratingWithState:&v51 objects:v57 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v52;
    do
    {
      for (unint64_t i = 0LL; i != v9; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v52 != v10) {
          objc_enumerationMutation(obj);
        }
        id v12 = *(void **)(*((void *)&v51 + 1) + 8LL * (void)i);
        if (v12)
        {
          id v13 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
          id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 assetType]);
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSpecifier]);
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v12 assetVersion]);
          id v17 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v13,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v14,  v15,  v16);

          if (v17)
          {
            id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 persistedEntryID]);
            id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager locksPriorToSecureHealing](self, "locksPriorToSecureHealing"));
            id v20 = [v19 safeObjectForKey:v18 ofClass:objc_opt_class(MAAutoAssetLock)];
            uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);

            int v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager prePersonalizedSelectors](self, "prePersonalizedSelectors"));
            [v22 addObject:v17];

            if (v21)
            {
              id v23 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager descriptorsRequiringGrafting]( self,  "descriptorsRequiringGrafting"));
              [v23 addObject:v12];

              BOOL v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              unsigned int v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

              if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
              {
                unsigned int v26 = (NSString *)objc_claimAutoreleasedReturnValue([v12 summary]);
                *(_DWORD *)buf = 138543362;
                __int16 v56 = v26;
                unsigned int v27 = v25;
                id v28 = "\n"
                      "[AUTO-SECURE][AUTO-PERSONALIZATION][STARTUP] {PersonalizeSuccessDecideMore} pre-personalization SU"
                      "CCESS (will graft|mount) | nextPrePersonalizedDescriptor:%{public}@";
                goto LABEL_14;
              }

- (int64_t)action_PersonalizeFailureDecideMore:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v25 = -[MADAutoAssetControlManagerParam initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:",  @"PersonalizeFailureDecideMore",  0LL,  0LL);
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetDescriptors]);
  id v9 = [v8 countByEnumeratingWithState:&v26 objects:v34 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v27;
    do
    {
      id v12 = 0LL;
      do
      {
        if (*(void *)v27 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)v12);
        id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        {
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v5 finishedError]);
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 checkedDescription]);
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
          *(_DWORD *)buf = 138543618;
          id v31 = v17;
          __int16 v32 = 2114;
          uint64_t v33 = v18;
          _os_log_error_impl( &dword_0,  v15,  OS_LOG_TYPE_ERROR,  "\n [SECURE][AUTO-PERSONALIZATION][STARTUP] {PersonalizeFailureDecideMore} pre-personalization ERROR | error:%{p ublic}@ | failedPrePersonalizeDescriptor:%{public}@",  buf,  0x16u);
        }

        id v12 = (char *)v12 + 1;
      }

      while (v10 != v12);
      id v10 = [v8 countByEnumeratingWithState:&v26 objects:v34 count:16];
    }

    while (v10);
  }

  id v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager descriptorsRequiringPersonalization]( self,  "descriptorsRequiringPersonalization"));
  id v20 = [v19 count];

  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int v22 = v21;
  if (v20) {
    id v23 = @"HaveNeedingPersonalize";
  }
  else {
    id v23 = @"NoneNeedingPersonalize";
  }
  [v21 postEvent:v23 withInfo:v25];

  return 0LL;
}

- (int64_t)action_GraftSuccessDecideMore:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v23 = -[MADAutoAssetControlManagerParam initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:",  @"GraftSuccessDecideMore",  0LL,  0LL);
  BOOL v24 = v5;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetDescriptors]);
  id v9 = [v8 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v26;
    do
    {
      for (unint64_t i = 0LL; i != v10; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v26 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = *(void **)(*((void *)&v25 + 1) + 8LL * (void)i);
        id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
          *(_DWORD *)buf = 138543362;
          uint64_t v30 = v16;
          _os_log_impl( &dword_0,  v15,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-GRAFT][STARTUP] {GraftSuccessDecideMore} graft|mount SUCCESS | nextGraftedDescriptor:%{public}@",  buf,  0xCu);
        }
      }

      id v10 = [v8 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }

    while (v10);
  }

  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager descriptorsRequiringGrafting](self, "descriptorsRequiringGrafting"));
  id v18 = [v17 count];

  id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v20 = v19;
  if (v18) {
    uint64_t v21 = @"HaveNeedingGraft";
  }
  else {
    uint64_t v21 = @"NoneNeedingGraft";
  }
  [v19 postEvent:v21 withInfo:v23];

  return 0LL;
}

- (int64_t)action_GraftFailureDecideMore:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v25 = -[MADAutoAssetControlManagerParam initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForSecureOperationsFinished:forSetDescriptor:forAutoAssetDescriptors:",  @"GraftFailureDecideMore",  0LL,  0LL);
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetDescriptors]);
  id v9 = [v8 countByEnumeratingWithState:&v26 objects:v34 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v27;
    do
    {
      id v12 = 0LL;
      do
      {
        if (*(void *)v27 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)v12);
        id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        {
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v5 finishedError]);
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 checkedDescription]);
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
          *(_DWORD *)buf = 138543618;
          id v31 = v17;
          __int16 v32 = 2114;
          uint64_t v33 = v18;
          _os_log_error_impl( &dword_0,  v15,  OS_LOG_TYPE_ERROR,  "\n [SECURE][AUTO-GRAFT][STARTUP] {GraftFailureDecideMore} graft|mount ERROR | error:%{public}@ | failedGraftDes criptor:%{public}@",  buf,  0x16u);
        }

        id v12 = (char *)v12 + 1;
      }

      while (v10 != v12);
      id v10 = [v8 countByEnumeratingWithState:&v26 objects:v34 count:16];
    }

    while (v10);
  }

  id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager descriptorsRequiringGrafting](self, "descriptorsRequiringGrafting"));
  id v20 = [v19 count];

  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int v22 = v21;
  if (v20) {
    id v23 = @"HaveNeedingGraft";
  }
  else {
    id v23 = @"NoneNeedingGraft";
  }
  [v21 postEvent:v23 withInfo:v25];

  return 0LL;
}

- (int64_t)action_StagerAlreadyDownloaded:(id)a3 error:(id *)a4
{
  id v22 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewBySelectorLimitedToStaging:]( self,  "locateDownloadedNewBySelectorLimitedToStaging:",  1LL));
  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager locateNewAllSetConfigurations](self, "locateNewAllSetConfigurations"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager locateNewAllSetTargets](self, "locateNewAllSetTargets"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetScheduler jobsAwaitingTrigger]( &OBJC_CLASS___MADAutoAssetScheduler,  "jobsAwaitingTrigger"));
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  id v11 = v8;
  id v12 = [v11 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v24;
    do
    {
      uint64_t v15 = 0LL;
      do
      {
        if (*(void *)v24 != v14) {
          objc_enumerationMutation(v11);
        }
        uint64_t v16 = *(void *)(*((void *)&v23 + 1) + 8LL * (void)v15);
        id v17 = objc_autoreleasePoolPush();
        id v18 = [v11 safeObjectForKey:v16 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
        if (v19) {
          -[NSMutableArray addObject:](v7, "addObject:", v19);
        }

        objc_autoreleasePoolPop(v17);
        uint64_t v15 = (char *)v15 + 1;
      }

      while (v13 != v15);
      id v13 = [v11 countByEnumeratingWithState:&v23 objects:v27 count:16];
    }

    while (v13);
  }

  +[MADAutoAssetStager controlAlreadyDownloadedDescriptors:withSetConfigurations:withSetTargets:withScheduledJobs:]( &OBJC_CLASS___MADAutoAssetStager,  "controlAlreadyDownloadedDescriptors:withSetConfigurations:withSetTargets:withScheduledJobs:",  v7,  v21,  v9,  v10);
  return 0LL;
}

- (int64_t)action_StagerJobStartDetermine:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJob](self, "stagerCurrentJob"));
  if (v8)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 diag]);
    id v11 = objc_alloc(&OBJC_CLASS___NSString);
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJobUUID](self, "stagerCurrentJobUUID"));
    if (v12) {
      id v13 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJobUUID](self, "stagerCurrentJobUUID"));
    }
    else {
      id v13 = @"N";
    }
    uint64_t v14 = -[NSString initWithFormat:]( v11,  "initWithFormat:",  @"{StagerStartJobDetermine} stager-job when already have a current stager-job - abandoning older stager-job with jobUUID:%@",  v13);
    [v10 trackAnomaly:@"AUTO-CONTROL" forReason:v14 withResult:6109 withError:0];

    if (v12) {
    -[MADAutoAssetControlManager setStagerCurrentJob:](self, "setStagerCurrentJob:", 0LL);
    }
    -[MADAutoAssetControlManager setStagerFormedSetConfiguration:](self, "setStagerFormedSetConfiguration:", 0LL);
    -[MADAutoAssetControlManager setStagerDownloadingSelector:](self, "setStagerDownloadingSelector:", 0LL);
    -[MADAutoAssetControlManager setStagerBondedToAutoJob:](self, "setStagerBondedToAutoJob:", 0LL);
  }

  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 UUIDString]);
  -[MADAutoAssetControlManager setStagerCurrentJobUUID:](self, "setStagerCurrentJobUUID:", v16);

  id v17 = objc_alloc(&OBJC_CLASS___MADAutoAssetJob);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v5 setConfiguration]);
  id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJobUUID](self, "stagerCurrentJobUUID"));
  id v20 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager stagerSetPolicy]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerSetPolicy"));
  id v21 = -[MADAutoAssetJob initForSetConfiguration:withAutoAssetUUID:asStagerJob:withStagerSetPolicy:]( v17,  "initForSetConfiguration:withAutoAssetUUID:asStagerJob:withStagerSetPolicy:",  v18,  v19,  1LL,  v20);
  -[MADAutoAssetControlManager setStagerCurrentJob:](self, "setStagerCurrentJob:", v21);

  id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJob](self, "stagerCurrentJob"));
  if (v22)
  {
    -[MADAutoAssetControlManager _statsIncrementStagerDetermineJobsStarted]( self,  "_statsIncrementStagerDetermineJobsStarted");
    __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJob](self, "stagerCurrentJob"));
    __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v5 assetTargetOSVersion]);
    __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v5 assetTargetBuildVersion]);
    __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v5 assetTargetTrainName]);
    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v5 assetTargetRestoreVersion]);
    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v5 setConfiguration]);
    __int128 v29 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager jobControlInformationForSetConfiguration:]( self,  "jobControlInformationForSetConfiguration:",  v28));
    [v23 startStagerDetermineIfAvailable:v24 withAssetTargetBuildVersion:v25 withAssetTargetTrainName:v26 withAssetTargetRestoreVersion :v27 withControlInformation:v29];
  }

  else
  {
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v31 = (void *)objc_claimAutoreleasedReturnValue([v30 diag]);
    __int16 v32 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
    __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v33 summary]);
    __int128 v35 = -[NSString initWithFormat:]( v32,  "initWithFormat:",  @"{StagerStartJobDetermine} unable to allocate stager-job for selector:%@",  v34);
    [v31 trackAnomaly:@"AUTO-CONTROL" forReason:v35 withResult:6101 withError:0];

    __int128 v23 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6101LL,  @"StagerJobStartDetermine",  0LL,  @"unable to allocate stager-job"));
    -[MADAutoAssetControlManager _statsIncrementFailuresToStartJobs](self, "_statsIncrementFailuresToStartJobs");
    +[MADAutoAssetStager autoAssetStagerJobFailedToStart:]( &OBJC_CLASS___MADAutoAssetStager,  "autoAssetStagerJobFailedToStart:",  v23);
  }

  return 0LL;
}

- (int64_t)action_StagerJobStartDownload:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
  LODWORD(v7) = -[MADAutoAssetControlManager isAutoAssetBeingEliminated:](self, "isAutoAssetBeingEliminated:", v8);

  if ((_DWORD)v7)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6114LL,  @"StagerJobStartDownload",  0LL,  @"stager-job for auto-asset being eliminated"));
    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
      id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
      *(_DWORD *)buf = 138543362;
      __int16 v45 = v13;
      _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "\n [ELIMINATE]{StagerJobStartDownload} [EliminationInProgress] stager-job for auto-asset being eliminated | selector:%{public}@",  buf,  0xCu);
    }

    -[MADAutoAssetControlManager _statsIncrementFailuresToStartJobs](self, "_statsIncrementFailuresToStartJobs");
    +[MADAutoAssetStager autoAssetStagerJobFailedToStart:]( &OBJC_CLASS___MADAutoAssetStager,  "autoAssetStagerJobFailedToStart:",  v9);
  }

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJob](self, "stagerCurrentJob"));

  if (v14)
  {
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 diag]);
    id v17 = objc_alloc(&OBJC_CLASS___NSString);
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJobUUID](self, "stagerCurrentJobUUID"));
    if (v18) {
      id v19 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJobUUID](self, "stagerCurrentJobUUID"));
    }
    else {
      id v19 = @"N";
    }
    id v20 = -[NSString initWithFormat:]( v17,  "initWithFormat:",  @"{StagerStartJobDownload} stager-job when already have a current stager-job - abandoning older stager-job with jobUUID:%@",  v19);
    [v16 trackAnomaly:@"AUTO-CONTROL" forReason:v20 withResult:6109 withError:0];

    if (v18) {
    -[MADAutoAssetControlManager setStagerCurrentJob:](self, "setStagerCurrentJob:", 0LL);
    }
    -[MADAutoAssetControlManager setStagerFormedSetConfiguration:](self, "setStagerFormedSetConfiguration:", 0LL);
    -[MADAutoAssetControlManager setStagerDownloadingSelector:](self, "setStagerDownloadingSelector:", 0LL);
    -[MADAutoAssetControlManager setStagerBondedToAutoJob:](self, "setStagerBondedToAutoJob:", 0LL);
  }

  id v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
  id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 UUIDString]);
  -[MADAutoAssetControlManager setStagerCurrentJobUUID:](self, "setStagerCurrentJobUUID:", v22);

  __int128 v23 = objc_alloc(&OBJC_CLASS___MADAutoAssetJob);
  __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
  __int128 v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJobUUID](self, "stagerCurrentJobUUID"));
  __int128 v26 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager stagerSetPolicy]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerSetPolicy"));
  __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetCatalog]);
  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v5 baseForPatchDescriptor]);
  id v29 = -[MADAutoAssetJob initForSelector:withAutoAssetUUID:asStagerJob:withStagerSetPolicy:usingCachedAutoAssetCatalog:usingBaseForPatching:]( v23,  "initForSelector:withAutoAssetUUID:asStagerJob:withStagerSetPolicy:usingCachedAutoAssetCatalog:usingBaseForPatching:",  v24,  v25,  1LL,  v26,  v27,  v28);
  -[MADAutoAssetControlManager setStagerCurrentJob:](self, "setStagerCurrentJob:", v29);

  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJob](self, "stagerCurrentJob"));
  if (v30)
  {
    id v31 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
    -[MADAutoAssetControlManager setStagerDownloadingSelector:](self, "setStagerDownloadingSelector:", v31);

    -[MADAutoAssetControlManager _statsIncrementStagerDownloadJobsStarted]( self,  "_statsIncrementStagerDownloadJobsStarted");
    __int16 v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJob](self, "stagerCurrentJob"));
    uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v5 assetTargetOSVersion]);
    __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v5 assetTargetBuildVersion]);
    __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
    __int128 v36 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager jobControlInformationForSelector:]( self,  "jobControlInformationForSelector:",  v35));
    [v32 startStagerDownloadForStaging:v33 withAssetTargetBuildVersion:v34 withControlInformation:v36];
  }

  else
  {
    id v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v38 = (void *)objc_claimAutoreleasedReturnValue([v37 diag]);
    id v39 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v40 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
    __int128 v41 = (void *)objc_claimAutoreleasedReturnValue([v40 summary]);
    __int128 v42 = -[NSString initWithFormat:]( v39,  "initWithFormat:",  @"{StagerStartJobDownload} unable to allocate stager-job for selector:%@",  v41);
    [v38 trackAnomaly:@"AUTO-CONTROL" forReason:v42 withResult:6101 withError:0];

    __int16 v32 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6101LL,  @"StagerJobStartDownload",  0LL,  @"unable to allocate stager-job"));
    -[MADAutoAssetControlManager _statsIncrementFailuresToStartJobs](self, "_statsIncrementFailuresToStartJobs");
    +[MADAutoAssetStager autoAssetStagerJobFailedToStart:]( &OBJC_CLASS___MADAutoAssetStager,  "autoAssetStagerJobFailedToStart:",  v32);
  }

  return 0LL;
}

- (int64_t)action_StagerJobDoneDetermine:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetControlManager _statsIncrementStagerDetermineJobsFinished]( self,  "_statsIncrementStagerDetermineJobsFinished");
  -[MADAutoAssetControlManager setStagerCurrentJob:](self, "setStagerCurrentJob:", 0LL);
  -[MADAutoAssetControlManager setStagerCurrentJobUUID:](self, "setStagerCurrentJobUUID:", 0LL);
  -[MADAutoAssetControlManager setStagerFormedSetConfiguration:](self, "setStagerFormedSetConfiguration:", 0LL);
  -[MADAutoAssetControlManager setStagerDownloadingSelector:](self, "setStagerDownloadingSelector:", 0LL);
  -[MADAutoAssetControlManager setStagerBondedToAutoJob:](self, "setStagerBondedToAutoJob:", 0LL);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetCatalog]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 baseForStagingDescriptors]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 finishedError]);

  +[MADAutoAssetStager autoAssetStagerJobDetermineDone:withBaseForStagingDescriptors:withDetermineError:]( &OBJC_CLASS___MADAutoAssetStager,  "autoAssetStagerJobDetermineDone:withBaseForStagingDescriptors:withDetermineError:",  v8,  v9,  v10);
  return 0LL;
}

- (int64_t)action_StagerJobDoneDownload:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetControlManager _statsIncrementStagerDownloadJobsFinished]( self,  "_statsIncrementStagerDownloadJobsFinished");
  -[MADAutoAssetControlManager setStagerCurrentJob:](self, "setStagerCurrentJob:", 0LL);
  -[MADAutoAssetControlManager setStagerCurrentJobUUID:](self, "setStagerCurrentJobUUID:", 0LL);
  -[MADAutoAssetControlManager setStagerFormedSetConfiguration:](self, "setStagerFormedSetConfiguration:", 0LL);
  -[MADAutoAssetControlManager setStagerDownloadingSelector:](self, "setStagerDownloadingSelector:", 0LL);
  -[MADAutoAssetControlManager setStagerBondedToAutoJob:](self, "setStagerBondedToAutoJob:", 0LL);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 jobInformation]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 downloadingDescriptor]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 finishedError]);

  +[MADAutoAssetStager autoAssetStagerJobDownloadDone:withDownloadedDescriptor:withDownloadError:]( &OBJC_CLASS___MADAutoAssetStager,  "autoAssetStagerJobDownloadDone:withDownloadedDescriptor:withDownloadError:",  v8,  v9,  v10);
  return 0LL;
}

- (int64_t)action_StagerJobCancel:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJob](self, "stagerCurrentJob"));
  if (v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJob](self, "stagerCurrentJob"));
    [v8 cancelAutoAssetJob];
  }

  else
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 oslog]);

    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      int v13 = 138543362;
      uint64_t v14 = v11;
      _os_log_impl( &dword_0,  v10,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {StagerJobCancel} no stager-job - stale trigger to cancel from auto-asset-stager",  (uint8_t *)&v13,  0xCu);
    }
  }

  return 0LL;
}

- (int64_t)action_StagerRemoveAllNotPromoted:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v18 = v5;
  id obj = (id)objc_claimAutoreleasedReturnValue([v5 autoAssetDescriptors]);
  id v8 = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v21;
    do
    {
      for (unint64_t i = 0LL; i != v9; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v21 != v10) {
          objc_enumerationMutation(obj);
        }
        id v12 = *(void **)(*((void *)&v20 + 1) + 8LL * (void)i);
        int v13 = (void *)objc_claimAutoreleasedReturnValue([v12 assetType]);
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSpecifier]);
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v12 assetVersion]);
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:]( self,  "_latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:",  @"StagerRemoveAllNotPromoted",  v13,  v14,  v15));

        if (!v16) {
          -[MADAutoAssetControlManager _removeDescriptorFromFilesystem:droppingDescriptor:forHistoryOperation:firstClientName:]( self,  "_removeDescriptorFromFilesystem:droppingDescriptor:forHistoryOperation:firstClientName:",  @"StagerRemoveAllNotPromoted",  v12,  407LL,  0LL);
        }
      }

      id v9 = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
    }

    while (v9);
  }

  return 0LL;
}

- (int64_t)action_EliminateSchedulerDone:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntryID]);
  id v11 = [v8 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoAssetEliminate)];
  id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  if (v12)
  {
    if ([v12 awaitingSchedulerAck])
    {
      [v12 setAwaitingSchedulerAck:0];
    }

    else
    {
      id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v19 diag]);
      __int128 v21 = objc_alloc(&OBJC_CLASS___NSString);
      __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
      __int128 v23 = -[NSString initWithFormat:]( v21,  "initWithFormat:",  @"{EliminateSchedulerDone} duplicate scheduler indication for eliminateTracker:%@",  v22);
      [v20 trackAnomaly:@"AUTO-CONTROL" forReason:v23 withResult:6109 withError:0];
    }

    -[MADAutoAssetControlManager _eliminateCompleteIfAllDone:](self, "_eliminateCompleteIfAllDone:", v12);
  }

  else
  {
    int v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 diag]);
    uint64_t v15 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
    id v18 = -[NSString initWithFormat:]( v15,  "initWithFormat:",  @"{EliminateSchedulerDone} not tracking eliminate for autoAssetSelector:%@",  v17);
    [v14 trackAnomaly:@"AUTO-CONTROL" forReason:v18 withResult:6103 withError:0];
  }

  return 0LL;
}

- (int64_t)action_EliminateStagerDone:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntryID]);
  id v11 = [v8 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoAssetEliminate)];
  id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  if (v12)
  {
    if ([v12 awaitingStagerAck])
    {
      [v12 setAwaitingStagerAck:0];
    }

    else
    {
      id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v19 diag]);
      __int128 v21 = objc_alloc(&OBJC_CLASS___NSString);
      __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
      __int128 v23 = -[NSString initWithFormat:]( v21,  "initWithFormat:",  @"{EliminateStagerDone} duplicate stager indication for eliminateTracker:%@",  v22);
      [v20 trackAnomaly:@"AUTO-CONTROL" forReason:v23 withResult:6109 withError:0];
    }

    -[MADAutoAssetControlManager _eliminateCompleteIfAllDone:](self, "_eliminateCompleteIfAllDone:", v12);
  }

  else
  {
    int v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 diag]);
    uint64_t v15 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
    id v18 = -[NSString initWithFormat:]( v15,  "initWithFormat:",  @"{EliminateStagerDone} not tracking eliminate for autoAssetSelector:%@",  v17);
    [v14 trackAnomaly:@"AUTO-CONTROL" forReason:v18 withResult:6103 withError:0];
  }

  return 0LL;
}

- (int64_t)action_EliminateStagerSetDone:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 setConfiguration]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 setConfiguration]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
  id v13 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( v8,  "initForAssetType:withAssetSpecifier:",  v10,  v12);

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v13 persistedEntryID]);
  id v16 = [v14 safeObjectForKey:v15 ofClass:objc_opt_class(MADAutoAssetEliminate)];
  id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

  if (v17)
  {
    if ([v17 awaitingStagerAck])
    {
      [v17 setAwaitingStagerAck:0];
    }

    else
    {
      __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v26 diag]);
      __int128 v28 = objc_alloc(&OBJC_CLASS___NSString);
      id v29 = (void *)objc_claimAutoreleasedReturnValue([v17 summary]);
      uint64_t v30 = -[NSString initWithFormat:]( v28,  "initWithFormat:",  @"{EliminateStagerSetDone} duplicate stager indication for eliminateTracker:%@",  v29);
      [v27 trackAnomaly:@"AUTO-CONTROL" forReason:v30 withResult:6109 withError:0];

      id v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      __int16 v32 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 oslog]);

      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager action_EliminateStagerSetDone:error:].cold.2(v17);
      }
    }

    -[MADAutoAssetControlManager _eliminateCompleteIfAllDone:](self, "_eliminateCompleteIfAllDone:", v17);
  }

  else
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 diag]);
    __int128 v20 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v5 setConfiguration]);
    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
    __int128 v23 = -[NSString initWithFormat:]( v20,  "initWithFormat:",  @"{EliminateStagerSetDone} not tracking eliminate for setConfiguration:%@",  v22);
    [v19 trackAnomaly:@"AUTO-CONTROL" forReason:v23 withResult:6103 withError:0];

    __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int128 v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager action_EliminateStagerSetDone:error:].cold.1(v5);
    }
  }

  return 0LL;
}

- (int64_t)action_CancelActivityAck:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntryID]);
  id v11 = [v8 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoAssetEliminate)];
  id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  if (v12)
  {
    if ([v12 awaitingCancelActivityAck])
    {
      [v12 setAwaitingCancelActivityAck:0];
    }

    else
    {
      id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v19 diag]);
      __int128 v21 = objc_alloc(&OBJC_CLASS___NSString);
      __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
      __int128 v23 = -[NSString initWithFormat:]( v21,  "initWithFormat:",  @"{CancelActivityAck} duplicate cancel-activity-ack indication for eliminateTracker:%@",  v22);
      [v20 trackAnomaly:@"AUTO-CONTROL" forReason:v23 withResult:6109 withError:0];
    }

    -[MADAutoAssetControlManager _eliminateCompleteIfAllDone:](self, "_eliminateCompleteIfAllDone:", v12);
  }

  else
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 diag]);
    uint64_t v15 = objc_alloc(&OBJC_CLASS___NSString);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
    id v18 = -[NSString initWithFormat:]( v15,  "initWithFormat:",  @"{CancelActivityAck} not tracking eliminate for autoAssetSelector:%@",  v17);
    [v14 trackAnomaly:@"AUTO-CONTROL" forReason:v18 withResult:6103 withError:0];
  }

  return 0LL;
}

- (int64_t)actionUnknownAction:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"unknown action(%@)",  v5);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 diag]);
  [v8 dumpTracked:v6 dumpingTo:5 usingFilename:0 clearingStatistics:0 clearingHistory:0];

  return 0LL;
}

- (int64_t)action_InstallAssets:(id)a3 error:(id *)a4
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  if (_MAPreferencesIsInternalAllowed())
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 downloadingDescriptor]);
    -[MADAutoAssetControlManager _preInstalledMakeDescriptorAvailable:fromLocation:]( self,  "_preInstalledMakeDescriptorAvailable:fromLocation:",  v8,  @"InstallAssets");
  }

  return 0LL;
}

- (void)clientRequestsAwaitingSyncToAwaitingFirstUnlock:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  __int128 v43 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsAwaitingSync](self, "clientRequestsAwaitingSync"));
  id obj = [v7 countByEnumeratingWithState:&v50 objects:v61 count:16];
  if (obj)
  {
    uint64_t v8 = *(void *)v51;
    uint64_t v41 = *(void *)v51;
    __int128 v42 = v7;
    do
    {
      id v9 = 0LL;
      do
      {
        if (*(void *)v51 != v8) {
          objc_enumerationMutation(v7);
        }
        uint64_t v10 = *(void **)(*((void *)&v50 + 1) + 8LL * (void)v9);
        id v11 = objc_autoreleasePoolPush();
        if (!v10)
        {
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 diag]);
          id v16 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:clientRequestsAwaitingSyncToAwaitingFirstUnlock} | nil jobParam on clientRequestsAwaitingSync",  v4);
          [v15 trackAnomaly:@"AUTO-CONTROL" forReason:v16 withResult:6102 withError:0];
          goto LABEL_18;
        }

        id v12 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
        unsigned int v13 = -[MADAutoAssetControlManager _isClientRequestForSetJob:](self, "_isClientRequestForSetJob:", v12);

        if (v13)
        {
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  v4,  v10));
          if (v14)
          {
            -[NSMutableArray addObject:](v43, "addObject:", v10);
            uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
            id v16 = (NSString *)objc_claimAutoreleasedReturnValue([v15 totalDequeuedClientRequests]);
            id v17 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
            -[MADAutoAssetControlManager _statsIncrement:forClientRequest:]( self,  "_statsIncrement:forClientRequest:",  v16,  v17);

LABEL_18:
            goto LABEL_19;
          }

          __int128 v26 = objc_alloc(&OBJC_CLASS___NSString);
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
          __int128 v27 = -[NSString initWithFormat:]( v26,  "initWithFormat:",  @"{%@:clientRequestsAwaitingSyncToAwaitingFirstUnlock} | invalid set-eventInfo (instance:MISSING) | set-eventInfo:%@",  v4,  v15);
LABEL_17:
          id v16 = v27;
          -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v10,  6102LL,  @"QueueClientRequest",  v27);
          goto LABEL_18;
        }

        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageInstance:]( self,  "clientRequestMessageInstance:",  v10));
        if (!v14)
        {
          __int128 v28 = objc_alloc(&OBJC_CLASS___NSString);
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
          __int128 v27 = -[NSString initWithFormat:]( v28,  "initWithFormat:",  @"{%@:clientRequestsAwaitingSyncToAwaitingFirstUnlock} | invalid eventInfo (instance:MISSING) | eventInfo:%@",  v4,  v15);
          goto LABEL_17;
        }

        id v18 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
        id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", v18));
        __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v14 clientAssetSelector]);
        unsigned int v21 = -[MADAutoAssetControlManager _messageBlockedUntilFirstUnlock:forAssetSelector:]( self,  "_messageBlockedUntilFirstUnlock:forAssetSelector:",  v19,  v20);

        if (!v21)
        {
          -[NSMutableArray addObject:](v43, "addObject:", v10);
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
          __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v15 totalDequeuedClientRequests]);
          __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
          -[MADAutoAssetControlManager _statsIncrement:forClientRequest:]( self,  "_statsIncrement:forClientRequest:",  v24,  v25);
          goto LABEL_22;
        }

        __int128 v22 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestsAwaitingFirstUnlock]( self,  "clientRequestsAwaitingFirstUnlock"));
        [v22 addObject:v10];

        __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v23 oslog]);

        if (os_log_type_enabled((os_log_t)v15, OS_LOG_TYPE_DEFAULT))
        {
          __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
          *(_DWORD *)buf = 138543874;
          __int16 v56 = v24;
          __int16 v57 = 2114;
          id v58 = v4;
          __int16 v59 = 2114;
          __int128 v60 = v25;
          _os_log_impl( &dword_0,  (os_log_t)v15,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:clientRequestsAwaitingSyncToAwaitingFirstUnlock} [CLIENT_REQUESTS_AWAITING_SYNC] | moved client-request to awaiting first-unlock | jobParam:%{public}@",  buf,  0x20u);
LABEL_22:
        }

        uint64_t v8 = v41;
        id v7 = v42;
LABEL_19:

        objc_autoreleasePoolPop(v11);
        id v9 = (char *)v9 + 1;
      }

      while (obj != v9);
      id v29 = [v7 countByEnumeratingWithState:&v50 objects:v61 count:16];
      id obj = v29;
    }

    while (v29);
  }

  uint64_t v30 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  -[MADAutoAssetControlManager setClientRequestsAwaitingSync:](self, "setClientRequestsAwaitingSync:", v30);

  __int128 v48 = 0u;
  __int128 v49 = 0u;
  __int128 v46 = 0u;
  __int128 v47 = 0u;
  id obja = v43;
  id v31 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obja,  "countByEnumeratingWithState:objects:count:",  &v46,  v54,  16LL);
  if (v31)
  {
    id v32 = v31;
    uint64_t v33 = *(void *)v47;
    do
    {
      for (unint64_t i = 0LL; i != v32; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v47 != v33) {
          objc_enumerationMutation(obja);
        }
        __int128 v35 = *(void **)(*((void *)&v46 + 1) + 8LL * (void)i);
        __int128 v36 = objc_autoreleasePoolPush();
        id v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        id v38 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 oslog]);

        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
        {
          id v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          __int128 v40 = (void *)objc_claimAutoreleasedReturnValue([v35 summary]);
          *(_DWORD *)buf = 138543874;
          __int16 v56 = v39;
          __int16 v57 = 2114;
          id v58 = v4;
          __int16 v59 = 2114;
          __int128 v60 = v40;
          _os_log_impl( &dword_0,  v38,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:clientRequestsAwaitingSyncToAwaitingFirstUnlock} [PREVIOUSLY_QUEUED] | [schedule an d] route client-request | jobParam:%{public}@",  buf,  0x20u);
        }

        -[MADAutoAssetControlManager _scheduledAndRouteClientRequest:fromLocation:]( self,  "_scheduledAndRouteClientRequest:fromLocation:",  v35,  v4);
        objc_autoreleasePoolPop(v36);
      }

      id v32 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obja,  "countByEnumeratingWithState:objects:count:",  &v46,  v54,  16LL);
    }

    while (v32);
  }
}

- (void)clientRequestsAwaitingDispatchAll:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 oslog]);

  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    int buf = 138543618;
    __int16 v57 = v9;
    __int16 v58 = 2114;
    id v59 = v4;
    _os_log_impl( &dword_0,  v8,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:clientRequestsAwaitingDispatchAll} [CLIENT_REQUESTS_AWAITING_SYNC] | scheduling all queue d client requests",  (uint8_t *)&buf,  0x16u);
  }

  __int128 v53 = 0u;
  __int128 v54 = 0u;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsAwaitingSync](self, "clientRequestsAwaitingSync"));
  id v10 = [obj countByEnumeratingWithState:&v51 objects:v62 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v44 = *(void *)v52;
    do
    {
      for (unint64_t i = 0LL; i != v11; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v52 != v44) {
          objc_enumerationMutation(obj);
        }
        unsigned int v13 = *(void **)(*((void *)&v51 + 1) + 8LL * (void)i);
        uint64_t v14 = objc_autoreleasePoolPush();
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 oslog]);

        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
          int buf = 138543874;
          __int16 v57 = v17;
          __int16 v58 = 2114;
          id v59 = v4;
          __int16 v60 = 2114;
          __int128 v61 = v18;
          _os_log_impl( &dword_0,  v16,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:clientRequestsAwaitingDispatchAll} [PREVIOUSLY_QUEUED] | [schedule and] route clien t-request | jobParam:%{public}@",  (uint8_t *)&buf,  0x20u);
        }

        -[MADAutoAssetControlManager _scheduledAndRouteClientRequest:fromLocation:]( self,  "_scheduledAndRouteClientRequest:fromLocation:",  v13,  v4);
        id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
        __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v19 totalDequeuedClientRequests]);
        unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue([v13 clientRequest]);
        -[MADAutoAssetControlManager _statsIncrement:forClientRequest:]( self,  "_statsIncrement:forClientRequest:",  v20,  v21);

        objc_autoreleasePoolPop(v14);
      }

      id v11 = [obj countByEnumeratingWithState:&v51 objects:v62 count:16];
    }

    while (v11);
  }

  __int128 v22 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  -[MADAutoAssetControlManager setClientRequestsAwaitingSync:](self, "setClientRequestsAwaitingSync:", v22);

  __int128 v49 = 0u;
  __int128 v50 = 0u;
  __int128 v47 = 0u;
  __int128 v48 = 0u;
  id obja = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestsAwaitingFirstUnlock]( self,  "clientRequestsAwaitingFirstUnlock"));
  id v23 = [obja countByEnumeratingWithState:&v47 objects:v55 count:16];
  if (v23)
  {
    id v25 = v23;
    uint64_t v45 = *(void *)v48;
    *(void *)&__int128 v24 = 138543874LL;
    __int128 v41 = v24;
    do
    {
      for (j = 0LL; j != v25; j = (char *)j + 1)
      {
        if (*(void *)v48 != v45) {
          objc_enumerationMutation(obja);
        }
        __int128 v27 = *(void **)(*((void *)&v47 + 1) + 8LL * (void)j);
        __int128 v28 = objc_autoreleasePoolPush();
        char v46 = 0;
        id v29 = (void *)objc_claimAutoreleasedReturnValue([v27 clientRequest]);
        int64_t v30 = -[MADAutoAssetControlManager clientRequestTimeoutSecs:timeoutWasSpecified:]( self,  "clientRequestTimeoutSecs:timeoutWasSpecified:",  v29,  &v46);

        if (v30 == -2 || v46 == 0)
        {
          id v32 = (void *)objc_claimAutoreleasedReturnValue([v27 clientRequest]);
          -[MADAutoAssetControlManager timerStopForClientRequest:fromLocation:]( self,  "timerStopForClientRequest:fromLocation:",  v32,  v4);
        }

        uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger", v41));
        __int128 v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

        if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
        {
          __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v27 summary]);
          int buf = v41;
          __int16 v57 = v35;
          __int16 v58 = 2114;
          id v59 = v4;
          __int16 v60 = 2114;
          __int128 v61 = v36;
          _os_log_impl( &dword_0,  v34,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:clientRequestsAwaitingDispatchAll} [PREVIOUSLY_QUEUED] | [schedule and] route clien t-request that had been awaiting first-unlock | jobParam:%{public}@",  (uint8_t *)&buf,  0x20u);
        }

        -[MADAutoAssetControlManager _scheduledAndRouteClientRequest:fromLocation:]( self,  "_scheduledAndRouteClientRequest:fromLocation:",  v27,  v4);
        id v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
        id v38 = (void *)objc_claimAutoreleasedReturnValue([v37 totalDequeuedClientRequests]);
        id v39 = (void *)objc_claimAutoreleasedReturnValue([v27 clientRequest]);
        -[MADAutoAssetControlManager _statsIncrement:forClientRequest:]( self,  "_statsIncrement:forClientRequest:",  v38,  v39);

        objc_autoreleasePoolPop(v28);
      }

      id v25 = [obja countByEnumeratingWithState:&v47 objects:v55 count:16];
    }

    while (v25);
  }

  __int128 v40 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  -[MADAutoAssetControlManager setClientRequestsAwaitingFirstUnlock:]( self,  "setClientRequestsAwaitingFirstUnlock:",  v40);
}

- (void)addToCurrentJobs:(id)a3 usingSelector:(id)a4 withJobUUID:(id)a5 triggeredByClientMessage:(id)a6 downloadingDescriptor:(id)a7 baseForPatchDescriptor:(id)a8 usingSetDescriptor:(id)a9
{
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  id v19 = a7;
  id v20 = a8;
  id v21 = a9;
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v23 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v22 extendedStateQueue]);
  dispatch_assert_queue_V2(v23);

  if (![v15 autoAssetSetJob])
  {
    id v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageDesire:](self, "clientRequestMessageDesire:", v18));
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v37 clientAssetPolicy]);
    -[MADAutoAssetControlManager initialStatusForJob:usingSelector:withJobUUID:downloadingDescriptor:baseForPatchDescriptor:withClientAssetPolicy:]( self,  "initialStatusForJob:usingSelector:withJobUUID:downloadingDescriptor:baseForPatchDescriptor:withClientAssetPolicy:",  v15,  v16,  v17,  v19,  v20,  v25);

    __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](self, "currentJobsBySelector"));
    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v16));
    [v26 setSafeObject:v15 forKey:v27];

    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsByUUID](self, "currentJobsByUUID"));
    [v28 setSafeObject:v15 forKey:v17];

    id v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    int64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v29 oslog]);

    if (!os_log_type_enabled((os_log_t)v30, OS_LOG_TYPE_DEFAULT))
    {
LABEL_18:

      goto LABEL_19;
    }

    __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
    id v31 = (id)objc_claimAutoreleasedReturnValue([v15 summary]);
    if (v18)
    {
      __int128 v34 = (__CFString *)objc_claimAutoreleasedReturnValue([v18 messageName]);
      if (v19) {
        goto LABEL_6;
      }
    }

    else
    {
      __int128 v34 = @"SCHEDULED | RESUMED";
      if (v19)
      {
LABEL_6:
        uint64_t v33 = (__CFString *)objc_claimAutoreleasedReturnValue([v19 summary]);
        if (v20)
        {
LABEL_7:
          id v32 = (__CFString *)objc_claimAutoreleasedReturnValue([v20 summary]);
LABEL_11:
          *(_DWORD *)int buf = 138544898;
          id v39 = v36;
          __int16 v40 = 2114;
          __int128 v41 = v35;
          __int16 v42 = 2114;
          id v43 = v31;
          __int16 v44 = 2114;
          id v45 = v17;
          __int16 v46 = 2114;
          __int128 v47 = v34;
          __int16 v48 = 2114;
          __int128 v49 = v33;
          __int16 v50 = 2114;
          __int128 v51 = v32;
          _os_log_impl( &dword_0,  (os_log_t)v30,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {addToCurrentJobs} currentJobsBySelector[%{public}@] | autoJob:%{public}@ | JobUUID:%{public}@ | message:%{public}@ | downloadingDescriptor:%{public}@ | baseForPatchDescriptor:%{public}@",  buf,  0x48u);
          if (v20) {

          }
          if (v19) {
          if (v18)
          }

          goto LABEL_18;
        }

- (void)removeCurrentJob:(id)a3 schedulerInvolved:(BOOL)a4 potentialNetworkFailure:(BOOL)a5 fromLocation:(id)a6
{
  BOOL v7 = a5;
  BOOL v8 = a4;
  id v10 = a3;
  id v11 = a6;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned int v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v13);

  uint64_t v14 = objc_claimAutoreleasedReturnValue([v10 fromAutoAssetJob]);
  if (!v14
    || (id v15 = (void *)v14,
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v10 fromAutoAssetJob]),
        unsigned int v17 = [v16 autoAssetSetJob],
        v16,
        v15,
        !v17))
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetJobID]);
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetSelector]);
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 assetVersion]);
    if (v20)
    {
      id v21 = (id)objc_claimAutoreleasedReturnValue([v10 autoAssetSelector]);
    }

    else
    {
      id v21 = 0LL;
    }

    BOOL v143 = v7;

    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetSelector]);
    id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 assetVersion]);
    if (v23)
    {
      id v24 = 0LL;
    }

    else
    {
      id v24 = (id)objc_claimAutoreleasedReturnValue([v10 autoAssetSelector]);
    }

    if (!v18) {
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetUUID]);
    }
    BOOL v144 = v8;
    if (!v24 && v21)
    {
      id v25 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
      __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v21 assetType]);
      __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v21 assetSpecifier]);
      id v28 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( v25,  "initForAssetType:withAssetSpecifier:",  v26,  v27);

      id v24 = v28;
    }

    id v29 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:fromLocation:notFoundCode:notFoundReason:]( self,  "currentJobByUUID:fromLocation:notFoundCode:notFoundReason:",  v18,  v11,  0LL,  0LL));
    uint64_t v30 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobBySelector:](self, "currentJobBySelector:", v21));
    if (v30
      || (uint64_t v30 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobBySelector:](self, "currentJobBySelector:", v24))) != 0)
    {
      id v31 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetSelector]);
      id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 assetVersion]);

      uint64_t v33 = objc_claimAutoreleasedReturnValue([v10 autoAssetSelector]);
      BOOL v34 = v32 == 0LL;
      __int128 v35 = (void *)v30;
      if (v34) {
        __int128 v36 = v24;
      }
      else {
        __int128 v36 = v21;
      }
      if (v34) {
        id v24 = (id)v33;
      }
      else {
        id v21 = (id)v33;
      }

      char v37 = 0;
      BOOL v38 = v29 == 0LL;
    }

    else
    {
      if (!v29)
      {
        id v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        __int16 v44 = (void *)objc_claimAutoreleasedReturnValue([v43 diag]);
        id v45 = objc_alloc(&OBJC_CLASS___NSString);
        id v46 = v24;
        __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
        __int16 v48 = -[NSString initWithFormat:]( v45,  "initWithFormat:",  @"{%@} | job finished that was not tracked by UUID or by selector from eventInfo:%@",  v11,  v47);
        [v44 trackAnomaly:@"AUTO-CONTROL" forReason:v48 withResult:6110 withError:0];

        id v24 = v46;
        goto LABEL_46;
      }

      BOOL v38 = 0;
      __int128 v35 = 0LL;
      char v37 = 1;
    }

    if ((uint64_t)[v29 clientRequestCount] > 0 || (uint64_t)objc_msgSend(v35, "clientRequestCount") >= 1)
    {
      if (v144)
      {
        if (v38)
        {
          if ((v37 & 1) != 0) {
            goto LABEL_42;
          }
          [v35 setEarlierSchedulerInvolved:1];
          if (!v143) {
            goto LABEL_42;
          }
          goto LABEL_34;
        }

        [v29 setEarlierSchedulerInvolved:1];
        if (!v143)
        {
          if ((v37 & 1) == 0) {
            [v35 setEarlierSchedulerInvolved:1];
          }
          goto LABEL_42;
        }

        [v29 setEarlierPotentialNetworkFailure:1];
        if ((v37 & 1) == 0)
        {
          [v35 setEarlierSchedulerInvolved:1];
LABEL_34:
          [v35 setEarlierPotentialNetworkFailure:1];
        }
      }

- (void)removeCurrentSetJob:(id)a3 schedulerInvolved:(BOOL)a4 potentialNetworkFailure:(BOOL)a5 fromLocation:(id)a6 historyOperation:(int64_t)a7
{
  BOOL v89 = a5;
  BOOL v90 = a4;
  id v10 = a3;
  id v11 = a6;
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetJobID]);
  unsigned int v13 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:removeCurrentSetJob",  v11);

  if (!v12) {
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetUUID]);
  }
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v10 fromAutoAssetJob]);
  id v15 = (NSMutableString *)objc_claimAutoreleasedReturnValue([v14 clientDomainName]);

  id v16 = (void *)objc_claimAutoreleasedReturnValue([v10 fromAutoAssetJob]);
  unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue([v16 autoAssetSetIdentifier]);

  __int16 v91 = (void *)objc_claimAutoreleasedReturnValue([v10 setJobInformation]);
  __int128 v92 = (void *)objc_claimAutoreleasedReturnValue([v91 setDescriptor]);
  uint64_t v18 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:fromLocation:notFoundCode:notFoundReason:]( self,  "currentJobByUUID:fromLocation:notFoundCode:notFoundReason:",  v12,  v13,  0LL,  0LL));
  uint64_t v19 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetJobForClientDomain:byIdentifier:]( self,  "locateSetJobForClientDomain:byIdentifier:",  v15,  v17));
  if (!(v18 | v19))
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 diag]);
    __int128 v22 = objc_alloc(&OBJC_CLASS___NSString);
    id v23 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
    id v24 = -[NSString initWithFormat:]( v22,  "initWithFormat:",  @"{%@} | job finished that was not tracked by UUID or by set-identifier from eventInfo:%@",  v13,  v23);
    [v21 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v24 withResult:6110 withError:0];

    goto LABEL_22;
  }

  id v25 = (void *)v19;
  if ((uint64_t)[(id)v18 clientRequestCount] > 0 || (uint64_t)objc_msgSend(v25, "clientRequestCount") >= 1)
  {
    if (v90)
    {
      if (!v18)
      {
        if (!v25) {
          goto LABEL_19;
        }
        [v25 setEarlierSchedulerInvolved:1];
        if (!v89) {
          goto LABEL_19;
        }
        goto LABEL_14;
      }

      [(id)v18 setEarlierSchedulerInvolved:1];
      if (!v89)
      {
        if (v25) {
          [v25 setEarlierSchedulerInvolved:1];
        }
        goto LABEL_19;
      }

      [(id)v18 setEarlierPotentialNetworkFailure:1];
      if (v25)
      {
        [v25 setEarlierSchedulerInvolved:1];
LABEL_14:
        [v25 setEarlierPotentialNetworkFailure:1];
      }
    }

- (id)currentJobByUUID:(id)a3 fromLocation:(id)a4 notFoundCode:(int64_t)a5 notFoundReason:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a6;
  unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 extendedStateQueue]);
  dispatch_assert_queue_V2(v14);

  uint64_t v15 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJob](self, "stagerCurrentJob"));
  if (v15
    && (id v16 = (void *)v15,
        unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJobUUID](self, "stagerCurrentJobUUID")),
        unsigned int v18 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v10, v17),
        v17,
        v16,
        v18))
  {
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager stagerCurrentJob](self, "stagerCurrentJob"));
  }

  else
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsByUUID](self, "currentJobsByUUID"));
    id v21 = [v20 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoAssetJob)];
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v21);

    if (a5 && !v19)
    {
      __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
      id v24 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"AUTO-CONTROL{%@} | %@",  v11,  v12);
      [v23 trackAnomaly:@"AUTO-CONTROL" forReason:v24 withResult:(int)a5 withError:0];

      uint64_t v19 = 0LL;
    }
  }

  return v19;
}

- (id)currentJobByUUID:(id)a3 potentiallyResumingJob:(id)a4 withOriginalSelector:(id)a5 fromLocation:(id)a6 notFoundCode:(int64_t)a7 notFoundReason:(id)a8 downloadingDescriptor:(id)a9 baseForPatchDescriptor:(id)a10
{
  id v14 = a3;
  id v15 = a4;
  id v16 = a5;
  id v17 = a6;
  id v18 = a9;
  id v19 = a10;
  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v21 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v20 extendedStateQueue]);
  dispatch_assert_queue_V2(v21);

  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:fromLocation:notFoundCode:notFoundReason:]( self,  "currentJobByUUID:fromLocation:notFoundCode:notFoundReason:",  v14,  v17,  0LL,  0LL));
  if (!v22)
  {
    id v59 = v19;
    BOOL v24 = v15 != 0LL;
    if (v15 && [v15 autoAssetSetJob])
    {
      id v23 = v15;
      id v19 = v59;
      -[MADAutoAssetControlManager addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:usingSetDescriptor:]( self,  "addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor :usingSetDescriptor:",  v23,  v16,  v14,  0LL,  v18,  v59,  0LL);
      goto LABEL_48;
    }

    if (!v16)
    {
      id v23 = 0LL;
      if (!v15) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }

    uint64_t v25 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobBySelector:](self, "currentJobBySelector:", v16));
    id v23 = (id)v25;
    char v26 = 0;
    id v27 = 0LL;
    id v58 = v15;
    if (!v15 || !v25)
    {
LABEL_23:
      uint64_t v35 = objc_claimAutoreleasedReturnValue([v16 assetVersion]);
      __int128 v36 = (void *)v35;
      if (v18 && !v35)
      {
        uint64_t v37 = objc_claimAutoreleasedReturnValue([v18 assetType]);
        if (!v37)
        {
LABEL_31:
          id v15 = v58;
LABEL_32:
          char v43 = !v24;
          if (v23) {
            char v43 = 1;
          }
          if ((v43 & 1) != 0)
          {
            if (v18) {
              BOOL v44 = v23 == 0LL;
            }
            else {
              BOOL v44 = 1;
            }
            if (v44) {
              char v45 = 1;
            }
            else {
              char v45 = v26;
            }
            id v19 = v59;
            if ((v45 & 1) == 0)
            {
              -[MADAutoAssetControlManager addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:usingSetDescriptor:]( self,  "addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDe scriptor:usingSetDescriptor:",  v23,  v16,  v14,  0LL,  v18,  v59,  0LL);
              -[MADAutoAssetControlManager _trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:message:]( self,  "_trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescripto r:baseForPatchDescriptor:message:",  v17,  @"ENTRY_MODIFY",  v16,  v14,  0LL,  v18,  v59,  @"originalSelector for auto-asset-job refreshed");
              if (v27) {
                -[MADAutoAssetControlManager _trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:message:]( self,  "_trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescrip tor:baseForPatchDescriptor:message:",  v17,  @"ENTRY_MODIFY",  v27,  v14,  0LL,  v18,  v59,  @"fullAssetSelector for auto-asset-job refreshed");
              }
            }
          }

          else
          {
            id v23 = v15;
            id v19 = v59;
            -[MADAutoAssetControlManager addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:usingSetDescriptor:]( self,  "addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDesc riptor:usingSetDescriptor:",  v23,  v16,  v14,  0LL,  v18,  v59,  0LL);
            -[MADAutoAssetControlManager _trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:message:]( self,  "_trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor: baseForPatchDescriptor:message:",  v17,  @"ENTRY_ADD",  v16,  v14,  0LL,  v18,  v59,  @"originalSelector for auto-asset-job resumed");
            if (v27) {
              -[MADAutoAssetControlManager _trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:message:]( self,  "_trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescripto r:baseForPatchDescriptor:message:",  v17,  @"ENTRY_ADD",  v27,  v14,  0LL,  v18,  v59,  @"fullAssetSelector for auto-asset-job resumed");
            }
          }

          goto LABEL_47;
        }

        __int128 v36 = (void *)v37;
        char v57 = v26;
        uint64_t v38 = objc_claimAutoreleasedReturnValue([v18 assetSpecifier]);
        if (v38)
        {
          id v39 = (void *)v38;
          id v55 = v17;
          __int16 v40 = (void *)objc_claimAutoreleasedReturnValue([v18 assetVersion]);

          if (!v40)
          {
            id v15 = v58;
            id v17 = v55;
            char v26 = v57;
            goto LABEL_32;
          }

          __int128 v52 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
          __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v18 assetType]);
          __int128 v41 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSpecifier]);
          id v42 = (void *)objc_claimAutoreleasedReturnValue([v18 assetVersion]);
          id v53 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v52,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v36,  v41,  v42);

          id v27 = v53;
          id v17 = v55;
        }

        char v26 = v57;
      }

      goto LABEL_31;
    }

    id v28 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);
    if (!v18 || v28)
    {

      id v27 = 0LL;
    }

    else
    {
      id v27 = (id)objc_claimAutoreleasedReturnValue([v18 assetType]);
      if (v27)
      {
        uint64_t v29 = objc_claimAutoreleasedReturnValue([v18 assetSpecifier]);
        id v30 = v59;
        if (v29)
        {
          uint64_t v31 = (void *)v29;
          id v32 = (void *)objc_claimAutoreleasedReturnValue([v18 assetVersion]);

          if (v32)
          {
            __int16 v56 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
            id v54 = (void *)objc_claimAutoreleasedReturnValue([v18 assetType]);
            uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSpecifier]);
            uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v18 assetVersion]);
            id v27 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v56,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v54,  v33,  v34);

            -[MADAutoAssetControlManager _trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:message:]( self,  "_trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor: baseForPatchDescriptor:message:",  v17,  @"ENTRY_MODIFY",  v27,  v14,  0LL,  v18,  v59,  @"fullAssetSelector reachable by UUID as well as by selector");
LABEL_54:
            -[MADAutoAssetControlManager addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:usingSetDescriptor:]( self,  "addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDesc riptor:usingSetDescriptor:",  v23,  v16,  v14,  0LL,  v18,  v30,  0LL);
            -[MADAutoAssetControlManager _trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:message:]( self,  "_trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor: baseForPatchDescriptor:message:",  v17,  @"ENTRY_MODIFY",  v16,  v14,  0LL,  v18,  v30,  @"originalSelector reachable by UUID as well as by selector");
            -[MADAutoAssetControlManager _refreshEliminate:withJobUUID:]( self,  "_refreshEliminate:withJobUUID:",  v16,  v14);
            BOOL v24 = 1;
            char v26 = 1;
            goto LABEL_23;
          }
        }

        else
        {
        }

        id v27 = 0LL;
        goto LABEL_54;
      }
    }

    id v30 = v59;
    goto LABEL_54;
  }

  id v23 = v22;
  if (([v22 autoAssetSetJob] & 1) == 0)
  {
    id v59 = v19;
    BOOL v24 = v15 != 0LL;
    if (v16)
    {
LABEL_22:
      id v58 = v15;
      id v27 = 0LL;
      char v26 = 0;
      goto LABEL_23;
    }

    id v16 = (id)objc_claimAutoreleasedReturnValue([v23 autoAssetSelector]);
    if (!v15)
    {
LABEL_21:
      if (!v16)
      {
        uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([v46 diag]);
        __int16 v48 = objc_alloc(&OBJC_CLASS___NSString);
        uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        __int16 v50 = -[NSString initWithFormat:]( v48,  "initWithFormat:",  @"{%@:currentJobByUUID} unable to determine originalSelector | %@",  v17,  v49);
        [v47 trackAnomaly:@"AUTO-CONTROL" forReason:v50 withResult:6101 withError:0];

        id v16 = 0LL;
        id v27 = 0LL;
        id v19 = v59;
LABEL_47:

        goto LABEL_48;
      }

      goto LABEL_22;
    }

- (void)scheduledJobsResumed:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  BOOL v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetControlManager setAlreadyScheduledSelectors:](self, "setAlreadyScheduledSelectors:", v7);

  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  id v8 = v4;
  id v9 = [v8 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v20;
    do
    {
      for (unint64_t i = 0LL; i != v10; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v20 != v11) {
          objc_enumerationMutation(v8);
        }
        unsigned int v13 = *(void **)(*((void *)&v19 + 1) + 8LL * (void)i);
        if ((objc_msgSend(v13, "setJob", (void)v19) & 1) == 0)
        {
          id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSelector]);
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 persistedEntryID]);

          id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager alreadyScheduledSelectors](self, "alreadyScheduledSelectors"));
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSelector]);
          id v18 = [v17 copy];
          [v16 setSafeObject:v18 forKey:v15];
        }
      }

      id v10 = [v8 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }

    while (v10);
  }
}

- (id)locateSetStatusPreferringByInstance:(id)a3 elseByClientDomain:(id)a4 forAssetSetIdentifier:(id)a5 fromLocation:(id)a6
{
  id v10 = a3;
  id v46 = a4;
  id v11 = a5;
  id v45 = a6;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned int v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v13);

  BOOL v44 = v10;
  uint64_t v14 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager locateSetStatusByInstance:](self, "locateSetStatusByInstance:", v10));
  id v15 = (id)v14;
  if (v11 && v46 && !v14) {
    id v15 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetStatusForDomainName:byIdentifier:]( self,  "locateSetStatusForDomainName:byIdentifier:",  v46,  v11));
  }
  if (!v15)
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:]( self,  "locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:",  v10,  0LL,  0LL,  v45));
    if (v16
      || (id v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:]( self,  "locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdenti fier:fromLocation:",  0LL,  v46,  v11,  v45))) != 0LL)
    {
      char v43 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetSetNotifications);
      -[MANAutoAssetSetNotifications setAtomicInstanceDiscovered:](v43, "setAtomicInstanceDiscovered:", 1LL);
      -[MANAutoAssetSetNotifications setAtomicInstanceAvailableForUse:](v43, "setAtomicInstanceAvailableForUse:", 1LL);
      uint64_t v34 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetStatus);
      id v42 = (void *)objc_claimAutoreleasedReturnValue([v16 clientDomainName]);
      __int128 v41 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSetIdentifier]);
      id v40 = -[MADAutoAssetControlManager newAtomicInstancesDownloadedForDescriptor:]( self,  "newAtomicInstancesDownloadedForDescriptor:",  v16);
      id v39 = (void *)objc_claimAutoreleasedReturnValue([v16 catalogCachedAssetSetID]);
      uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue([v16 catalogDownloadedFromLive]);
      uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v16 catalogLastTimeChecked]);
      __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v16 catalogPostedDate]);
      uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v16 discoveredAtomicInstance]);
      id v32 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDowloadedAtomicInstanceEntries]);
      uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDownloadedAtomicInstance]);
      id v30 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDowloadedAtomicInstanceEntries]);
      uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v16 downloadedCatalogCachedAssetSetID]);
      char v26 = (void *)objc_claimAutoreleasedReturnValue([v16 downloadedCatalogDownloadedFromLive]);
      id v28 = (void *)objc_claimAutoreleasedReturnValue([v16 downloadedCatalogLastTimeChecked]);
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v16 downloadedCatalogPostedDate]);
      id v24 = +[MADAutoAssetScheduler newSetPolicyForDomainName:forAssetSetIdentifier:]( &OBJC_CLASS___MADAutoAssetScheduler,  "newSetPolicyForDomainName:forAssetSetIdentifier:",  v46,  v11);
      id v27 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager stagerSetPolicy]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerSetPolicy"));
      unsigned __int8 v35 = -[MADAutoAssetControlManager _haveReceivedLookupResponseForSetDescriptor:]( self,  "_haveReceivedLookupResponseForSetDescriptor:",  v16);
      unsigned __int8 v17 = -[MADAutoAssetControlManager _vendingAtomicInstanceForConfiguredEntriesForSetDescriptor:]( self,  "_vendingAtomicInstanceForConfiguredEntriesForSetDescriptor:",  v16);
      unsigned __int8 v18 = [v16 downloadUserInitiated];
      id v19 = [v16 downloadedNetworkBytes];
      id v20 = [v16 downloadedFilesystemBytes];
      __int128 v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setLockUsageMapForSetDescriptor:]( self,  "setLockUsageMapForSetDescriptor:",  v16));
      BYTE2(v23) = v18;
      BYTE1(v23) = v17;
      LOBYTE(v23) = v35;
      id v15 = -[MANAutoAssetSetStatus initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( v34,  "initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:w ithCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate: withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:with LatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloaded FromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:wit hCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstance ForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloa dedFilesystemBytes:withCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  v42,  v41,  0LL,  v40,  v39,  v37,  v38,  v36,  v33,  v32,  v31,  v30,  v29,  v26,  v28,  v25,  v43,  0LL,  v24,  v27,  v23,  0LL,  v19,  v20,  v21,  0LL,  0LL,  0LL);
    }

    else
    {
      id v15 = 0LL;
    }
  }

  return v15;
}

- (void)clearDownloadedFromSetStatus:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5
{
  id v30 = a3;
  id v8 = a4;
  id v31 = a5;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](self, "currentSetStatusByInstance"));
  id v11 = [obj countByEnumeratingWithState:&v35 objects:v39 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v36;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    id v15 = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      id v16 = 0LL;
      id v32 = v12;
      do
      {
        if (*(void *)v36 != v13) {
          objc_enumerationMutation(obj);
        }
        uint64_t v17 = *(void *)(*((void *)&v35 + 1) + 8LL * (void)v16);
        context = objc_autoreleasePoolPush();
        unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](self, "currentSetStatusByInstance"));
        id v19 = [v18 safeObjectForKey:v17 ofClass:objc_opt_class(p_ivars[258])];
        id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

        __int128 v21 = v15[155];
        __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v20 clientDomainName]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v21, "stringIsEqual:to:", v22, v8) & 1) != 0)
        {
          uint64_t v23 = v15[155];
          id v24 = v15;
          uint64_t v25 = v13;
          char v26 = p_ivars;
          id v27 = v8;
          id v28 = self;
          uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSetIdentifier]);
          LODWORD(v23) = -[__objc2_ivar_list stringIsEqual:to:](v23, "stringIsEqual:to:", v29, v31);

          self = v28;
          id v8 = v27;
          p_ivars = v26;
          uint64_t v13 = v25;
          id v15 = v24;
          id v12 = v32;

          if ((_DWORD)v23)
          {
            [v20 setAtomicInstancesDownloaded:0];
            [v20 setLatestDownloadedAtomicInstance:0];
            [v20 setLatestDowloadedAtomicInstanceEntries:0];
            [v20 setCurrentLockUsage:0];
          }
        }

        else
        {
        }

        objc_autoreleasePoolPop(context);
        id v16 = (char *)v16 + 1;
      }

      while (v12 != v16);
      id v12 = [obj countByEnumeratingWithState:&v35 objects:v39 count:16];
    }

    while (v12);
  }
}

- (id)locateSetLookupResultSatisfying:(id)a3
{
  id v45 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"locateSetLookupResultSatisfying"]);

  if ([v7 count])
  {
    __int128 v70 = 0u;
    __int128 v71 = 0u;
    __int128 v68 = 0u;
    __int128 v69 = 0u;
    id v40 = v7;
    id obj = v7;
    id v8 = [obj countByEnumeratingWithState:&v68 objects:v78 count:16];
    if (!v8)
    {
      os_log_t v41 = 0LL;
      goto LABEL_40;
    }

    id v9 = v8;
    os_log_t v41 = 0LL;
    uint64_t v10 = *(void *)v69;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v42 = *(void *)v69;
    char v43 = self;
    while (1)
    {
      id v12 = 0LL;
      id v44 = v9;
      do
      {
        if (*(void *)v69 != v10) {
          objc_enumerationMutation(obj);
        }
        uint64_t v13 = *(void *)(*((void *)&v68 + 1) + 8LL * (void)v12);
        __int16 v48 = objc_autoreleasePoolPush();
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
        id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 persistedEntry:v13 fromLocation:@"locateSetLookupResultSatisfying"]);

        if (!v15)
        {
          id v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          uint64_t v33 = (os_log_s *)objc_claimAutoreleasedReturnValue([v32 oslog]);

          os_log_t log = v33;
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
          {
            uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
            *(_DWORD *)int buf = 138543618;
            __int128 v75 = v34;
            __int16 v76 = 2114;
            uint64_t v77 = v13;
            _os_log_error_impl( &dword_0,  v33,  OS_LOG_TYPE_ERROR,  "[%{public}@] {locateSetLookupResultSatisfying} unable to determine previous status | entryID:%{public}@",  buf,  0x16u);
          }

          goto LABEL_35;
        }

        id v16 = [v15 secureCodedObjectForKey:@"setLookupResult" ofClass:objc_opt_class(MADAutoSetLookupResult)];
        os_log_t log = (os_log_t)objc_claimAutoreleasedReturnValue(v16);
        if (!log)
        {
          __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          __int128 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

          id v51 = v36;
          if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
          {
            __int128 v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
            *(_DWORD *)int buf = 138543618;
            __int128 v75 = v37;
            __int16 v76 = 2114;
            uint64_t v77 = v13;
            _os_log_error_impl( &dword_0,  v36,  OS_LOG_TYPE_ERROR,  "[%{public}@] {locateSetLookupResultSatisfying} unable to load set-lookup-result | entryID:%{public}@",  buf,  0x16u);
          }

          goto LABEL_34;
        }

        __int128 v66 = 0u;
        __int128 v67 = 0u;
        __int128 v64 = 0u;
        __int128 v65 = 0u;
        id v51 = (os_log_s *)v45;
        id v49 = -[os_log_s countByEnumeratingWithState:objects:count:]( v51,  "countByEnumeratingWithState:objects:count:",  &v64,  v73,  16LL);
        if (!v49) {
          goto LABEL_28;
        }
        uint64_t v50 = *(void *)v65;
        __int128 v47 = v12;
        id v58 = v15;
        while (2)
        {
          uint64_t v17 = 0LL;
          while (2)
          {
            if (*(void *)v65 != v50) {
              objc_enumerationMutation(v51);
            }
            uint64_t v54 = v17;
            unsigned __int8 v18 = *(void **)(*((void *)&v64 + 1) + 8 * v17);
            __int128 v60 = 0u;
            __int128 v61 = 0u;
            __int128 v62 = 0u;
            __int128 v63 = 0u;
            id v56 = (id)objc_claimAutoreleasedReturnValue(-[os_log_s discoveredAtomicEntries](log, "discoveredAtomicEntries"));
            id v59 = [v56 countByEnumeratingWithState:&v60 objects:v72 count:16];
            if (!v59)
            {
LABEL_31:

              uint64_t v10 = v42;
              self = v43;
              id v9 = v44;
              id v12 = v47;
LABEL_34:

              goto LABEL_35;
            }

            uint64_t v19 = *(void *)v61;
            uint64_t v55 = *(void *)v61;
LABEL_16:
            id v20 = 0LL;
            while (1)
            {
              if (*(void *)v61 != v19) {
                objc_enumerationMutation(v56);
              }
              __int128 v21 = *(void **)(*((void *)&v60 + 1) + 8LL * (void)v20);
              __int128 v22 = p_ivars[155];
              uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v21 fullAssetSelector]);
              id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 assetType]);
              uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSelector]);
              char v26 = (void *)objc_claimAutoreleasedReturnValue([v25 assetType]);
              if (!-[__objc2_ivar_list stringIsEqual:to:](v22, "stringIsEqual:to:", v24, v26))
              {

                goto LABEL_23;
              }

              char v57 = p_ivars[155];
              id v27 = (void *)objc_claimAutoreleasedReturnValue([v21 fullAssetSelector]);
              id v28 = (void *)objc_claimAutoreleasedReturnValue([v27 assetSpecifier]);
              uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSelector]);
              id v30 = v18;
              id v31 = (void *)objc_claimAutoreleasedReturnValue([v29 assetSpecifier]);
              LOBYTE(v57) = -[__objc2_ivar_list stringIsEqual:to:](v57, "stringIsEqual:to:", v28, v31);

              unsigned __int8 v18 = v30;
              uint64_t v19 = v55;

              p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
LABEL_23:
              id v20 = (char *)v20 + 1;
              id v15 = v58;
              if (v59 == v20)
              {
                id v59 = [v56 countByEnumeratingWithState:&v60 objects:v72 count:16];
                if (v59) {
                  goto LABEL_16;
                }
                goto LABEL_31;
              }
            }

            uint64_t v17 = v54 + 1;
            id v15 = v58;
            if ((id)(v54 + 1) != v49) {
              continue;
            }
            break;
          }

          uint64_t v10 = v42;
          self = v43;
          id v9 = v44;
          id v12 = v47;
          id v49 = -[os_log_s countByEnumeratingWithState:objects:count:]( v51,  "countByEnumeratingWithState:objects:count:",  &v64,  v73,  16LL);
          if (v49) {
            continue;
          }
          break;
        }

- (id)locateNewAllSetConfigurations
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetConfigurations](self, "persistedKnownSetConfigurations"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 persistedEntryIDs:@"locateNewAllSetConfigurations"]);

  BOOL v7 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  if ([v6 count])
  {
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    __int128 v22 = v6;
    id v8 = v6;
    id v24 = [v8 countByEnumeratingWithState:&v25 objects:v31 count:16];
    if (v24)
    {
      uint64_t v23 = *(void *)v26;
      do
      {
        id v9 = 0LL;
        do
        {
          if (*(void *)v26 != v23) {
            objc_enumerationMutation(v8);
          }
          uint64_t v10 = *(void *)(*((void *)&v25 + 1) + 8LL * (void)v9);
          id v11 = objc_autoreleasePoolPush();
          id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
          uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedEntry:v10 fromLocation:@"locateNewAllSetConfigurations"]);

          if (v13)
          {
            id v14 = [v13 secureCodedObjectForKey:@"setConfiguration" ofClass:objc_opt_class(MADAutoSetConfiguration)];
            id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
            if (v15)
            {
              -[NSMutableArray addObject:](v7, "addObject:", v15);
            }

            else
            {
              id v17 = v8;
              unsigned __int8 v18 = v7;
              uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

              if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)int buf = 138543362;
                uint64_t v30 = v10;
                _os_log_error_impl( &dword_0,  v20,  OS_LOG_TYPE_ERROR,  "{locateNewAllSetConfigurations} | no set-configuration entry found for entry:%{public}@",  buf,  0xCu);
              }

              BOOL v7 = v18;
              id v8 = v17;
            }
          }

          else
          {
            id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 oslog]);

            if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)int buf = 138543362;
              uint64_t v30 = v10;
              _os_log_error_impl( &dword_0,  v15,  OS_LOG_TYPE_ERROR,  "{locateNewAllSetConfigurations} | unable to determine previous status for entry:%{public}@",  buf,  0xCu);
            }
          }

          objc_autoreleasePoolPop(v11);
          id v9 = (char *)v9 + 1;
        }

        while (v24 != v9);
        id v24 = [v8 countByEnumeratingWithState:&v25 objects:v31 count:16];
      }

      while (v24);
    }

    uint64_t v6 = v22;
  }

  if (!-[NSMutableArray count](v7, "count"))
  {

    BOOL v7 = 0LL;
  }

  return v7;
}

- (id)newSetTargetFromClientProvidedSetTarget:(id)a3 forClientDomainName:(id)a4 forSetIdentifier:(id)a5
{
  id v7 = a5;
  id v8 = a4;
  id v9 = a3;
  uint64_t v10 = objc_alloc(&OBJC_CLASS___MADAutoSetTarget);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 minTargetOSVersion]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v9 maxTargetOSVersion]);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v9 autoAssetEntries]);

  id v14 = -[MADAutoSetTarget initForClientDomainName:forAssetSetIdentifier:fromMinTargetOSVersion:toMaxTargetOSVersion:asEntriesWhenTargeting:]( v10,  "initForClientDomainName:forAssetSetIdentifier:fromMinTargetOSVersion:toMaxTargetOSVersion:asEntriesWhenTargeting:",  v8,  v7,  v11,  v12,  v13);
  return v14;
}

- (id)locateNewAllSetTargets
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 persistedEntryIDs:@"locateNewAllSetTargets"]);

  id v7 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  if ([v6 count])
  {
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    __int128 v22 = v6;
    id v8 = v6;
    id v24 = [v8 countByEnumeratingWithState:&v25 objects:v31 count:16];
    if (v24)
    {
      uint64_t v23 = *(void *)v26;
      do
      {
        id v9 = 0LL;
        do
        {
          if (*(void *)v26 != v23) {
            objc_enumerationMutation(v8);
          }
          uint64_t v10 = *(void *)(*((void *)&v25 + 1) + 8LL * (void)v9);
          id v11 = objc_autoreleasePoolPush();
          id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
          uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedEntry:v10 fromLocation:@"locateNewAllSetTargets"]);

          if (v13)
          {
            id v14 = [v13 secureCodedObjectForKey:@"setTarget" ofClass:objc_opt_class(MADAutoSetTarget)];
            id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
            if (v15)
            {
              -[NSMutableArray addObject:](v7, "addObject:", v15);
            }

            else
            {
              id v17 = v8;
              unsigned __int8 v18 = v7;
              uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

              if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)int buf = 138543362;
                uint64_t v30 = v10;
                _os_log_error_impl( &dword_0,  v20,  OS_LOG_TYPE_ERROR,  "{locateNewAllSetTargets} | no set-taget entry found for entry:%{public}@",  buf,  0xCu);
              }

              id v7 = v18;
              id v8 = v17;
            }
          }

          else
          {
            id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 oslog]);

            if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)int buf = 138543362;
              uint64_t v30 = v10;
              _os_log_error_impl( &dword_0,  v15,  OS_LOG_TYPE_ERROR,  "{locateNewAllSetTargets} | unable to determine previous status for entry:%{public}@",  buf,  0xCu);
            }
          }

          objc_autoreleasePoolPop(v11);
          id v9 = (char *)v9 + 1;
        }

        while (v24 != v9);
        id v24 = [v8 countByEnumeratingWithState:&v25 objects:v31 count:16];
      }

      while (v24);
    }

    uint64_t v6 = v22;
  }

  if (!-[NSMutableArray count](v7, "count"))
  {

    id v7 = 0LL;
  }

  return v7;
}

- (BOOL)setTargetEntries:(id)a3 matchSetConfiguration:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v6 autoAssetEntries]);
  id v11 = [v10 count];
  id v40 = v7;
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 autoAssetEntries]);
  id v13 = [v12 count];

  if (v11 == v13)
  {
    os_log_t v38 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    __int128 v51 = 0u;
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    __int128 v36 = v6;
    id obj = (id)objc_claimAutoreleasedReturnValue([v6 autoAssetEntries]);
    id v41 = [obj countByEnumeratingWithState:&v51 objects:v56 count:16];
    if (v41)
    {
      uint64_t v39 = *(void *)v52;
      p_ivars = &MobileAssetKeyManager__metaData.ivars;
      do
      {
        uint64_t v15 = 0LL;
        do
        {
          if (*(void *)v52 != v39) {
            objc_enumerationMutation(obj);
          }
          uint64_t v42 = v15;
          id v16 = *(void **)(*((void *)&v51 + 1) + 8 * v15);
          __int128 v47 = 0u;
          __int128 v48 = 0u;
          __int128 v49 = 0u;
          __int128 v50 = 0u;
          id v44 = (id)objc_claimAutoreleasedReturnValue([v40 autoAssetEntries]);
          id v46 = [v44 countByEnumeratingWithState:&v47 objects:v55 count:16];
          if (v46)
          {
            uint64_t v17 = *(void *)v48;
            char v43 = v16;
            do
            {
              for (unint64_t i = 0LL; i != v46; unint64_t i = (char *)i + 1)
              {
                if (*(void *)v48 != v17) {
                  objc_enumerationMutation(v44);
                }
                uint64_t v19 = *(void **)(*((void *)&v47 + 1) + 8LL * (void)i);
                id v20 = p_ivars[155];
                __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v19 assetSelector]);
                __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v21 assetType]);
                uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSelector]);
                id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 assetType]);
                if (-[__objc2_ivar_list stringIsEqual:to:](v20, "stringIsEqual:to:", v22, v24))
                {
                  id v45 = p_ivars[155];
                  __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v19 assetSelector]);
                  __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v25 assetSpecifier]);
                  __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSelector]);
                  uint64_t v28 = v17;
                  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v27 assetSpecifier]);
                  LODWORD(v45) = -[__objc2_ivar_list stringIsEqual:to:]( v45,  "stringIsEqual:to:",  v26,  v29);

                  uint64_t v17 = v28;
                  id v16 = v43;

                  p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
                  if ((_DWORD)v45)
                  {
                    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v43 assetSelector]);
                    id v31 = (void *)objc_claimAutoreleasedReturnValue([v30 persistedEntryID]);
                    -[NSMutableDictionary setSafeObject:forKey:](v38, "setSafeObject:forKey:", v43, v31);

                    goto LABEL_18;
                  }
                }

                else
                {
                }
              }

              id v46 = [v44 countByEnumeratingWithState:&v47 objects:v55 count:16];
            }

            while (v46);
          }

- (void)removeSetTargetsForClientDomain:(id)a3 forSetIdentifier:(id)a4 fromLocation:(id)a5
{
  id v8 = a3;
  id v49 = a4;
  id v9 = a5;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedEntryIDs:v9]);

  if ([v13 count])
  {
    __int128 v47 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v60 = 0u;
    __int128 v61 = 0u;
    __int128 v62 = 0u;
    __int128 v63 = 0u;
    id v46 = v13;
    id obj = v13;
    id v48 = v8;
    id v53 = [obj countByEnumeratingWithState:&v60 objects:v69 count:16];
    id v55 = v9;
    if (v53)
    {
      uint64_t v51 = *(void *)v61;
      do
      {
        for (unint64_t i = 0LL; i != v53; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v61 != v51) {
            objc_enumerationMutation(obj);
          }
          uint64_t v15 = *(const __CFString **)(*((void *)&v60 + 1) + 8LL * (void)i);
          id v16 = objc_autoreleasePoolPush();
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
          unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue([v17 persistedEntry:v15 fromLocation:v9]);

          if (v15) {
            BOOL v19 = v18 == 0LL;
          }
          else {
            BOOL v19 = 1;
          }
          if (v19)
          {
            id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)int buf = 138543618;
              __int128 v22 = @"N";
              if (v15) {
                __int128 v22 = v15;
              }
              id v66 = v9;
              __int16 v67 = 2114;
              __int128 v68 = v22;
              _os_log_error_impl( &dword_0,  v21,  OS_LOG_TYPE_ERROR,  "{%{public}@:removeSetTargetsForClientDomain} | unable to determine previous set-target for entry:%{public}@",  buf,  0x16u);
            }
          }

          else
          {
            id v23 = [v18 secureCodedObjectForKey:@"setTarget" ofClass:objc_opt_class(MADAutoSetTarget)];
            id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
            __int128 v21 = v24;
            if (v24)
            {
              __int128 v25 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s clientDomainName](v24, "clientDomainName"));
              if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v8, v25) & 1) != 0)
              {
                __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetSetIdentifier](v21, "assetSetIdentifier"));
                unsigned int v27 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v49, v26);

                if (v27) {
                  -[NSMutableArray addObject:](v47, "addObject:", v15);
                }
                id v8 = v48;
                id v9 = v55;
              }

              else
              {

                id v9 = v55;
              }
            }

            else
            {
              uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              uint64_t v29 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 oslog]);

              id v9 = v55;
              if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)int buf = 138543618;
                id v66 = v55;
                __int16 v67 = 2114;
                __int128 v68 = v15;
                _os_log_error_impl( &dword_0,  v29,  OS_LOG_TYPE_ERROR,  "{%{public}@:removeSetTargetsForClientDomain} | no set-taget entry found for entry:%{public}@",  buf,  0x16u);
              }
            }
          }

          objc_autoreleasePoolPop(v16);
        }

        id v53 = [obj countByEnumeratingWithState:&v60 objects:v69 count:16];
      }

      while (v53);
    }

    __int128 v58 = 0u;
    __int128 v59 = 0u;
    __int128 v56 = 0u;
    __int128 v57 = 0u;
    __int128 v54 = v47;
    id v30 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v54,  "countByEnumeratingWithState:objects:count:",  &v56,  v64,  16LL);
    if (v30)
    {
      id v31 = v30;
      uint64_t v32 = *(void *)v57;
      do
      {
        uint64_t v33 = 0LL;
        id v52 = v31;
        do
        {
          if (*(void *)v57 != v32) {
            objc_enumerationMutation(v54);
          }
          BOOL v34 = *(const __CFString **)(*((void *)&v56 + 1) + 8LL * (void)v33);
          __int128 v35 = objc_autoreleasePoolPush();
          if (v34)
          {
            __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
            __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v36 persistedEntry:v34 fromLocation:v55]);

            if (v37)
            {
              id v38 = [v37 secureCodedObjectForKey:@"setTarget" ofClass:objc_opt_class(MADAutoSetTarget)];
              uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue(v38);
              id v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
              [v40 removePersistedEntry:v34 fromLocation:v55];

              id v41 = objc_alloc(&OBJC_CLASS___NSString);
              uint64_t v42 = v32;
              char v43 = (void *)objc_claimAutoreleasedReturnValue([v39 summary]);
              id v44 = -[NSString initWithFormat:]( v41,  "initWithFormat:",  @"removed previously defined set-target | setTarget:%@",  v43);
              -[MADAutoAssetControlManager _logPersistedSetTargetRemoved:removedPersistedEntryID:removedSetTarget:message:]( self,  "_logPersistedSetTargetRemoved:removedPersistedEntryID:removedSetTarget:message:",  v55,  v34,  v39,  v44);

              uint64_t v32 = v42;
              id v31 = v52;
            }

            else
            {
              id v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v45 oslog]);

              if (os_log_type_enabled((os_log_t)v39, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)int buf = 138543618;
                id v66 = v55;
                __int16 v67 = 2114;
                __int128 v68 = v34;
                _os_log_error_impl( &dword_0,  (os_log_t)v39,  OS_LOG_TYPE_ERROR,  "{%{public}@:removeSetTargetsForClientDomain} | unable to re-load set-target for entry:%{public}@",  buf,  0x16u);
              }
            }
          }

          objc_autoreleasePoolPop(v35);
          uint64_t v33 = (char *)v33 + 1;
        }

        while (v31 != v33);
        id v31 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v54,  "countByEnumeratingWithState:objects:count:",  &v56,  v64,  16LL);
      }

      while (v31);
    }

    id v8 = v48;
    id v9 = v55;
    id v13 = v46;
  }
}

- (id)locateSetAtomicInstanceByInstanceUUID:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
  id v8 = [v7 safeObjectForKey:v4 ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  return v9;
}

- (void)persistSetDescriptorActiveJob:(id)a3 fromLocation:(id)a4
{
  id v18 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v18 clientDomainName]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSetIdentifier]);
  id v11 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v9,  v10);

  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
  LODWORD(v10) = [v12 persistedEntryAlreadyExists:v11 fromLocation:v6];

  id v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 persistedEntry:v11 fromLocation:v6]);

  if ((_DWORD)v10) {
    uint64_t v15 = @"ENTRY_MODIFY";
  }
  else {
    uint64_t v15 = @"ENTRY_ADD";
  }
  [v14 persistSecureCodedObject:v18 forKey:@"assetSetDescriptor"];
  id v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v18 summary]);
  [v16 storePersistedEntry:v11 withEntrySummary:v17 fromLocation:v6];

  -[MADAutoAssetControlManager _logPersistedSetDescriptor:forComponentType:operation:forPersistedEntryID:forClientRequest:withJobUUID:withSetDescriptor:message:]( self,  "_logPersistedSetDescriptor:forComponentType:operation:forPersistedEntryID:forClientRequest:withJobUUID:withSetDescriptor:message:",  v6,  @"SET_ACTIVE_JOB_DESCRIPTORS",  v15,  v11,  0LL,  0LL,  v18,  @"maintaining active set-job status");
}

- (void)persistSetDescriptorDownloadedJob:(id)a3 fromLocation:(id)a4
{
  id v18 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:persistSetDescriptorDownloadedJob",  v6);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setDescriptorNewEntryIDForDownloaded:]( self,  "setDescriptorNewEntryIDForDownloaded:",  v18));
  id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
  unsigned int v12 = [v11 persistedEntryAlreadyExists:v10 fromLocation:v9];

  id v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 persistedEntry:v10 fromLocation:v9]);

  if (v12) {
    uint64_t v15 = @"ENTRY_MODIFY";
  }
  else {
    uint64_t v15 = @"ENTRY_ADD";
  }
  [v14 persistSecureCodedObject:v18 forKey:@"assetSetDescriptor"];
  id v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v18 summary]);
  [v16 storePersistedEntry:v10 withEntrySummary:v17 fromLocation:v9];

  -[MADAutoAssetControlManager _logPersistedSetDescriptor:forComponentType:operation:forPersistedEntryID:forClientRequest:withJobUUID:withSetDescriptor:message:]( self,  "_logPersistedSetDescriptor:forComponentType:operation:forPersistedEntryID:forClientRequest:withJobUUID:withSetDescriptor:message:",  v6,  @"SET_DOWNLOADED_DESCRIPTORS",  v15,  v10,  0LL,  0LL,  v18,  @"maintaining downloaded set-descriptors");
}

- (id)newSetDescriptorIfOtherSatisfying:(id)a3 forSetInfoInstance:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  uint64_t v82 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:newSetDescriptorIfOtherSatisfying",  v6);
  id v79 = v7;
  uint64_t v84 = (void *)objc_claimAutoreleasedReturnValue([v7 autoAssetEntries]);
  if (!v84)
  {
    __int128 v72 = (void *)objc_claimAutoreleasedReturnValue([v7 clientDomainName]);
    __int128 v73 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSetIdentifier]);
    id v10 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v72,  v73));

    if (!v10)
    {
      id v23 = 0LL;
      uint64_t v84 = 0LL;
      goto LABEL_47;
    }

    uint64_t v74 = objc_claimAutoreleasedReturnValue([v10 autoAssetEntries]);

    uint64_t v84 = (void *)v74;
    if (!v74)
    {
      id v23 = 0LL;
      uint64_t v84 = 0LL;
      id v10 = 0LL;
      goto LABEL_47;
    }
  }

  __int128 v94 = 0u;
  __int128 v95 = 0u;
  __int128 v92 = 0u;
  __int128 v93 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v10 = [obj countByEnumeratingWithState:&v92 objects:v105 count:16];
  if (!v10)
  {
    id v23 = 0LL;
    goto LABEL_46;
  }

  __int128 v87 = self;
  id v77 = v6;
  id v85 = 0LL;
  uint64_t v11 = *(void *)v93;
  do
  {
    unsigned int v12 = 0LL;
    do
    {
      if (*(void *)v93 != v11) {
        objc_enumerationMutation(obj);
      }
      uint64_t v13 = *(void *)(*((void *)&v92 + 1) + 8LL * (void)v12);
      id v14 = objc_autoreleasePoolPush();
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( v87,  "downloadedSetDescriptorsByInstance"));
      id v16 = [v15 safeObjectForKey:v13 ofClass:objc_opt_class(MADAutoSetDescriptor)];
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

      id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 clientDomainName]);
      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v18,  @"FROM_STAGED_FOR_ALL")) {
        goto LABEL_10;
      }
      BOOL v19 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSetIdentifier]);
      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v19,  @"FROM_STAGED_FOR_ALL"))
      {

LABEL_10:
        goto LABEL_11;
      }

      unsigned int v20 = -[MADAutoAssetControlManager doesSetDescriptor:satisfyAllAutoAssetEntries:]( v87,  "doesSetDescriptor:satisfyAllAutoAssetEntries:",  v17,  v84);

      if (v20)
      {
        if (v85)
        {
          uint64_t v21 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager chooseNewerSetDescriptor:considering:]( v87,  "chooseNewerSetDescriptor:considering:",  v85,  v17));

          id v85 = (id)v21;
        }

        else
        {
          id v85 = v17;
        }
      }

- (id)newSetDescriptorFromAlreadyDownloaded:(id)a3 forSetInfoInstance:(id)a4 fromDownloadedSetDescriptor:(id)a5 forAtomicInstance:(id)a6
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = a6;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetEntries]);
  id v14 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v69 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v71 = v14;
  if (v13 && [v13 count])
  {
    __int16 v67 = v12;
    __int128 v68 = v10;
    id v73 = v9;
    __int128 v79 = 0u;
    __int128 v80 = 0u;
    __int128 v77 = 0u;
    __int128 v78 = 0u;
    id v66 = v13;
    id obj = v13;
    uint64_t v15 = self;
    id v76 = [obj countByEnumeratingWithState:&v77 objects:v87 count:16];
    if (v76)
    {
      uint64_t v75 = *(void *)v78;
      do
      {
        for (unint64_t i = 0LL; i != v76; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v78 != v75) {
            objc_enumerationMutation(obj);
          }
          uint64_t v17 = *(void **)(*((void *)&v77 + 1) + 8LL * (void)i);
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSelector]);
          BOOL v19 = (void *)objc_claimAutoreleasedReturnValue([v18 assetType]);
          unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSelector]);
          uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSpecifier]);
          id v22 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager findAtomicEntryForAssetType:forAssetSpecifier:representedByDescriptor:]( v15,  "findAtomicEntryForAssetType:forAssetSpecifier:representedByDescriptor:",  v19,  v21,  v11));

          if (v22)
          {
            id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 fullAssetSelector]);
            id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 persistedEntryID]);

            id v25 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v14,  "safeObjectForKey:ofClass:",  v24,  objc_opt_class(&OBJC_CLASS___MANAutoAssetSetAtomicEntry));
            id v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
            if (v26)
            {
              uint64_t v74 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v15, "autoControlManagerFSM"));
              id v27 = (void *)objc_claimAutoreleasedReturnValue([v74 diag]);
              uint64_t v28 = objc_alloc(&OBJC_CLASS___NSString);
              uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
              id v30 = (void *)objc_claimAutoreleasedReturnValue([v17 summary]);
              id v31 = v11;
              uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);
              uint64_t v33 = -[NSString initWithFormat:]( v28,  "initWithFormat:",  @"{%@:newSetDescriptorFromAlreadyDownloaded} duplicate nextAtomicEntry ignored | nextAtomicEntry:%@ | setInfoInstance:%@, newSetDescriptor:%@",  v73,  v29,  v30,  v32);
              [v27 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v33 withResult:6109 withError:0];

              uint64_t v15 = self;
              id v11 = v31;

              id v14 = v71;
            }

            else
            {
              -[NSMutableDictionary setSafeObject:forKey:](v14, "setSafeObject:forKey:", v22, v24);
              -[NSMutableArray addObject:](v69, "addObject:", v22);
            }
          }

          else
          {
            id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v15, "autoControlManagerFSM"));
            id v26 = (void *)objc_claimAutoreleasedReturnValue([v24 diag]);
            BOOL v34 = objc_alloc(&OBJC_CLASS___NSString);
            __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v17 summary]);
            __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);
            id v37 = -[NSString initWithFormat:]( v34,  "initWithFormat:",  @"{%@:newSetDescriptorFromAlreadyDownloaded} no nextAtomicEntry | nextSetEntry:%@ | alreadyDownloadedSetDescriptor:%@",  v73,  v35,  v36);
            [v26 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v37 withResult:6101 withError:0];
          }
        }

        id v76 = [obj countByEnumeratingWithState:&v77 objects:v87 count:16];
      }

      while (v76);
    }

    id v38 = objc_alloc(&OBJC_CLASS___MADAutoSetDescriptor);
    id v10 = v68;
    uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v68 clientDomainName]);
    id v40 = (void *)objc_claimAutoreleasedReturnValue([v68 assetSetIdentifier]);
    id v12 = v67;
    id v41 = (void *)objc_claimAutoreleasedReturnValue([v67 atomicInstanceUUID]);
    uint64_t v42 = v15;
    id v43 = -[MADAutoSetDescriptor initForClientDomainName:forAssetSetIdentifier:withDiscoveredAtomicInstance:withDiscoveredAtomicEntries:]( v38,  "initForClientDomainName:forAssetSetIdentifier:withDiscoveredAtomicInstance:withDiscoveredAtomicEntries:",  v39,  v40,  v41,  v69);

    id v44 = (void *)objc_claimAutoreleasedReturnValue([v11 catalogCachedAssetSetID]);
    [v43 setCatalogCachedAssetSetID:v44];

    id v45 = (void *)objc_claimAutoreleasedReturnValue([v11 catalogDownloadedFromLive]);
    [v43 setCatalogDownloadedFromLive:v45];

    id v46 = (void *)objc_claimAutoreleasedReturnValue([v11 catalogLastTimeChecked]);
    [v43 setCatalogLastTimeChecked:v46];

    __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([v11 catalogPostedDate]);
    [v43 setCatalogPostedDate:v47];

    id v48 = (void *)objc_claimAutoreleasedReturnValue([v11 downloadedCatalogCachedAssetSetID]);
    [v43 setDownloadedCatalogCachedAssetSetID:v48];

    id v49 = (void *)objc_claimAutoreleasedReturnValue([v11 downloadedCatalogDownloadedFromLive]);
    [v43 setDownloadedCatalogDownloadedFromLive:v49];

    __int128 v50 = (void *)objc_claimAutoreleasedReturnValue([v11 downloadedCatalogLastTimeChecked]);
    [v43 setDownloadedCatalogLastTimeChecked:v50];

    id v51 = (void *)objc_claimAutoreleasedReturnValue([v11 downloadedCatalogPostedDate]);
    [v43 setDownloadedCatalogPostedDate:v51];

    [v43 setRequestedAutoAssetEntries:obj];
    id v52 = (void *)objc_claimAutoreleasedReturnValue([v67 atomicInstanceUUID]);
    [v43 setLatestDownloadedAtomicInstance:v52];

    [v43 setLatestDowloadedAtomicInstanceEntries:v69];
    [v43 setIsOnFilesystem:1];
    [v43 setIsDiscoveredFullyDownloaded:1];
    [v43 setAtomicInstanceDownloadedNotified:1];
    [v43 setNeverBeenLocked:1];
    id v53 = (void *)objc_claimAutoreleasedReturnValue([v43 latestDownloadedAtomicInstance]);
    __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v68 autoAssetSetClientName]);
    BYTE2(v65) = 1;
    LOWORD(v65) = 0;
    id v9 = v73;
    -[MADAutoAssetControlManager trackSetDescriptor:fromLocation:forLatestDownloaded:forSpecificAtomicInstance:withCurrentSetStatus:changedWhileTerminated:changedNeverBeenLocked:notifyingIfJustDownloaded:latestToVend:historyOperation:firstClientName:]( v42,  "trackSetDescriptor:fromLocation:forLatestDownloaded:forSpecificAtomicInstance:withCurrentSetStatus:changedWhileTer minated:changedNeverBeenLocked:notifyingIfJustDownloaded:latestToVend:historyOperation:firstClientName:",  v43,  v73,  1LL,  v53,  0LL,  0LL,  v65,  355LL,  v54);

    -[MADAutoAssetControlManager updateAutoAssetSetStatus:forSetDescriptor:]( v42,  "updateAutoAssetSetStatus:forSetDescriptor:",  v73,  v43);
    id v55 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v42, "logger"));
    __int128 v56 = (os_log_s *)objc_claimAutoreleasedReturnValue([v55 oslog]);

    if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v57 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v42, "_updateLatestSummary"));
      __int128 v58 = (void *)objc_claimAutoreleasedReturnValue([v68 summary]);
      __int128 v59 = (void *)objc_claimAutoreleasedReturnValue([v43 summary]);
      *(_DWORD *)int buf = 138543874;
      uint64_t v82 = v57;
      __int16 v83 = 2114;
      uint64_t v84 = v58;
      __int16 v85 = 2114;
      uint64_t v86 = v59;
      _os_log_impl( &dword_0,  v56,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {newSetDescriptorFromAlreadyDownloaded}\n [VEND] new set-descriptor from already downloaded | setInfoInstance:%{public}@, newSetDescriptor:%{public}@",  buf,  0x20u);
    }

    __int128 v60 = v66;
  }

  else
  {
    __int128 v61 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    __int128 v60 = v13;
    __int128 v62 = (void *)objc_claimAutoreleasedReturnValue([v61 diag]);
    __int128 v63 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:newSetDescriptorFromAlreadyDownloaded} no autoAssetEntries provided by client when required | setInfoInstance:%@",  v9,  v10);
    [v62 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v63 withResult:6102 withError:0];

    id v43 = 0LL;
  }

  return v43;
}

- (BOOL)doesSetDescriptor:(id)a3 satisfyAllAutoAssetEntries:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v12 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  id v40 = v6;
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 firstAssetType]);
  id v38 = self;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager firstAssetTypeForSetEntries:](self, "firstAssetTypeForSetEntries:", v7));
  LODWORD(v12) = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v10, v11);

  if ((_DWORD)v12)
  {
    id v43 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    __int128 v55 = 0u;
    __int128 v56 = 0u;
    id v36 = v7;
    id obj = v7;
    id v41 = [obj countByEnumeratingWithState:&v53 objects:v58 count:16];
    if (!v41) {
      goto LABEL_24;
    }
    uint64_t v39 = *(void *)v54;
    while (1)
    {
      uint64_t v13 = 0LL;
      do
      {
        if (*(void *)v54 != v39) {
          objc_enumerationMutation(obj);
        }
        uint64_t v42 = v13;
        id v14 = *(void **)(*((void *)&v53 + 1) + 8 * v13);
        __int128 v49 = 0u;
        __int128 v50 = 0u;
        __int128 v51 = 0u;
        __int128 v52 = 0u;
        id v45 = (id)objc_claimAutoreleasedReturnValue([v40 latestDowloadedAtomicInstanceEntries]);
        id v48 = [v45 countByEnumeratingWithState:&v49 objects:v57 count:16];
        if (!v48) {
          goto LABEL_22;
        }
        uint64_t v15 = *(void *)v50;
        uint64_t v44 = *(void *)v50;
        while (2)
        {
          for (unint64_t i = 0LL; i != v48; unint64_t i = (char *)i + 1)
          {
            if (*(void *)v50 != v15) {
              objc_enumerationMutation(v45);
            }
            uint64_t v17 = *(void **)(*((void *)&v49 + 1) + 8LL * (void)i);
            id v18 = p_ivars[155];
            BOOL v19 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSelector]);
            unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v19 assetType]);
            uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v17 fullAssetSelector]);
            id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 assetType]);
            if (-[__objc2_ivar_list stringIsEqual:to:](v18, "stringIsEqual:to:", v20, v22))
            {
              __int128 v47 = p_ivars[155];
              id v23 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSelector]);
              id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 assetSpecifier]);
              id v46 = v17;
              id v25 = v14;
              id v26 = (void *)objc_claimAutoreleasedReturnValue([v17 fullAssetSelector]);
              id v27 = (void *)objc_claimAutoreleasedReturnValue([v26 assetSpecifier]);
              LODWORD(v47) = -[__objc2_ivar_list stringIsEqual:to:](v47, "stringIsEqual:to:", v24, v27);

              id v14 = v25;
              p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);

              uint64_t v15 = v44;
              if (!(_DWORD)v47) {
                continue;
              }
              uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v46 fullAssetSelector]);
              BOOL v19 = (void *)objc_claimAutoreleasedReturnValue([v28 persistedEntryID]);

              if (!v19)
              {
                uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v38, "autoControlManagerFSM"));
                id v30 = (void *)objc_claimAutoreleasedReturnValue([v29 diag]);
                id v31 = objc_alloc(&OBJC_CLASS___NSString);
                uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v46 fullAssetSelector]);
                uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v32 summary]);
                BOOL v34 = -[NSString initWithFormat:]( v31,  "initWithFormat:",  @"{doesSetDescriptor:satisfyAllAutoAssetEntries:} unable to form foundSelectorKey | fullAssetSelector:%@",  v33);
                [v30 trackAnomaly:@"AUTO-CONTROL" forReason:v34 withResult:6101 withError:0];

                goto LABEL_22;
              }

              -[NSMutableDictionary setSafeObject:forKey:](v43, "setSafeObject:forKey:", v19, v19);
            }

            else
            {
            }
          }

          id v48 = [v45 countByEnumeratingWithState:&v49 objects:v57 count:16];
          if (v48) {
            continue;
          }
          break;
        }

- (BOOL)doesSetDescriptor:(id)a3 coverRequestedAutoAssetEntries:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v12 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 firstAssetType]);
  uint64_t v39 = self;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager firstAssetTypeForSetEntries:](self, "firstAssetTypeForSetEntries:", v7));
  LODWORD(v12) = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v10, v11);

  if (!(_DWORD)v12) {
    goto LABEL_27;
  }
  uint64_t v44 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v6 requestedAutoAssetEntries]);

  if (!v13) {
    goto LABEL_26;
  }
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  id v37 = v7;
  id obj = v7;
  id v42 = [obj countByEnumeratingWithState:&v54 objects:v59 count:16];
  if (!v42) {
    goto LABEL_25;
  }
  uint64_t v40 = *(void *)v55;
  id v41 = v6;
  do
  {
    uint64_t v14 = 0LL;
    do
    {
      if (*(void *)v55 != v40) {
        objc_enumerationMutation(obj);
      }
      uint64_t v43 = v14;
      uint64_t v15 = *(void **)(*((void *)&v54 + 1) + 8 * v14);
      __int128 v50 = 0u;
      __int128 v51 = 0u;
      __int128 v52 = 0u;
      __int128 v53 = 0u;
      id v46 = (id)objc_claimAutoreleasedReturnValue([v6 requestedAutoAssetEntries]);
      id v49 = [v46 countByEnumeratingWithState:&v50 objects:v58 count:16];
      if (!v49) {
        goto LABEL_23;
      }
      uint64_t v16 = *(void *)v51;
      uint64_t v45 = *(void *)v51;
      while (2)
      {
        for (unint64_t i = 0LL; i != v49; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v51 != v16) {
            objc_enumerationMutation(v46);
          }
          id v18 = *(void **)(*((void *)&v50 + 1) + 8LL * (void)i);
          BOOL v19 = p_ivars[155];
          unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSelector]);
          uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetType]);
          id v22 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSelector]);
          id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 assetType]);
          if (-[__objc2_ivar_list stringIsEqual:to:](v19, "stringIsEqual:to:", v21, v23))
          {
            id v48 = p_ivars[155];
            id v24 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSelector]);
            id v25 = (void *)objc_claimAutoreleasedReturnValue([v24 assetSpecifier]);
            __int128 v47 = v18;
            id v26 = v15;
            id v27 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSelector]);
            uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v27 assetSpecifier]);
            LODWORD(v48) = -[__objc2_ivar_list stringIsEqual:to:](v48, "stringIsEqual:to:", v25, v28);

            uint64_t v15 = v26;
            p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);

            uint64_t v16 = v45;
            if (!(_DWORD)v48) {
              continue;
            }
            uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v47 assetSelector]);
            unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v29 persistedEntryID]);

            if (!v20)
            {
              id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v39, "autoControlManagerFSM"));
              id v31 = (void *)objc_claimAutoreleasedReturnValue([v30 diag]);
              uint64_t v32 = objc_alloc(&OBJC_CLASS___NSString);
              uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v47 assetSelector]);
              BOOL v34 = (void *)objc_claimAutoreleasedReturnValue([v33 summary]);
              __int128 v35 = -[NSString initWithFormat:]( v32,  "initWithFormat:",  @"{doesSetDescriptor:coverRequestedAutoAssetEntries:} unable to form foundSelectorKey | fullAssetSelector:%@",  v34);
              [v31 trackAnomaly:@"AUTO-CONTROL" forReason:v35 withResult:6101 withError:0];

              goto LABEL_23;
            }

            -[NSMutableDictionary setSafeObject:forKey:](v44, "setSafeObject:forKey:", v20, v20);
          }

          else
          {
          }
        }

        id v49 = [v46 countByEnumeratingWithState:&v50 objects:v58 count:16];
        if (v49) {
          continue;
        }
        break;
      }

- (BOOL)doesSetDescriptor:(id)a3 referenceAssetDescriptor:(id)a4
{
  id v6 = a3;
  id v31 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([v6 latestDowloadedAtomicInstanceEntries]);
  id v9 = [obj countByEnumeratingWithState:&v33 objects:v37 count:16];
  if (!v9)
  {
    BOOL v24 = 0;
    goto LABEL_17;
  }

  id v10 = v9;
  id v26 = v6;
  uint64_t v11 = *(void *)v34;
  id v12 = v31;
  uint64_t v28 = *(void *)v34;
  do
  {
    uint64_t v13 = 0LL;
    id v29 = v10;
    do
    {
      if (*(void *)v34 != v11) {
        objc_enumerationMutation(obj);
      }
      uint64_t v14 = *(void **)(*((void *)&v33 + 1) + 8LL * (void)v13);
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v12 assetType]);
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v14 fullAssetSelector]);
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 assetType]);
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSpecifier]);
      BOOL v19 = (void *)objc_claimAutoreleasedReturnValue([v14 fullAssetSelector]);
      unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v19 assetSpecifier]);
      uint64_t v32 = v18;
      if (!+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v18, v20))
      {

        uint64_t v11 = v28;
        id v10 = v29;
        id v12 = v31;
LABEL_11:

        goto LABEL_12;
      }

      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v31 assetVersion]);
      id v22 = (void *)objc_claimAutoreleasedReturnValue([v14 fullAssetSelector]);
      id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 assetVersion]);
      unsigned __int8 v27 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v21, v23);

      id v12 = v31;
      uint64_t v11 = v28;
      id v10 = v29;
      if ((v27 & 1) != 0)
      {
        BOOL v24 = 1;
        goto LABEL_15;
      }

- (BOOL)isAnyAssetEntryOnFilesystemForSetDescriptor:(id)a3 forSetDescriptor:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  char v41 = 0;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v7 latestDowloadedAtomicInstanceEntries]);
  id v12 = [v11 count];

  __int128 v39 = 0u;
  __int128 v40 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v7 latestDowloadedAtomicInstanceEntries]);
  uint64_t v14 = (char *)[v13 countByEnumeratingWithState:&v37 objects:v52 count:16];
  if (!v14)
  {
    char v18 = 0;
    goto LABEL_21;
  }

  uint64_t v15 = v14;
  __int128 v33 = self;
  id v34 = v7;
  id v31 = v12;
  id v35 = v6;
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  char v18 = 0;
  uint64_t v19 = *(void *)v38;
  while (2)
  {
    unsigned int v20 = 0LL;
    uint64_t v32 = v16;
    __int128 v36 = &v15[(void)v16];
    uint64_t v21 = v17;
    do
    {
      if (*(void *)v38 != v19) {
        objc_enumerationMutation(v13);
      }
      id v22 = *(void **)(*((void *)&v37 + 1) + 8LL * (void)v20);
      id v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "localContentURL", v31));

      if (!v23)
      {
        id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v33, "logger"));
        id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        {
          unsigned __int8 v27 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
          *(_DWORD *)int buf = 138544130;
          id v43 = v35;
          __int16 v44 = 2048;
          uint64_t v45 = (uint64_t)&v20[(void)v32 + 1];
          __int16 v46 = 2048;
          id v47 = v31;
          __int16 v48 = 2114;
          id v49 = v27;
          _os_log_error_impl( &dword_0,  v26,  OS_LOG_TYPE_ERROR,  "{%{public}@} [DROP-SET-DESCRIPTOR] set-descriptor with downloaded entry missing localContentURL | entry:%ld- of-%ld | nextDownloadedEntry:%{public}@",  buf,  0x2Au);
        }

        goto LABEL_19;
      }

      BOOL v24 = (void *)objc_claimAutoreleasedReturnValue([v22 localContentURL]);
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v24 path]);

      if (!v41)
      {
        uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v33, "logger"));
        id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 oslog]);

        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        {
          id v30 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
          *(_DWORD *)int buf = 138544386;
          id v43 = v35;
          __int16 v44 = 2048;
          uint64_t v45 = (uint64_t)&v20[(void)v32 + 1];
          __int16 v46 = 2048;
          id v47 = v31;
          __int16 v48 = 2114;
          id v49 = v30;
          __int16 v50 = 2114;
          __int128 v51 = v17;
          _os_log_error_impl( &dword_0,  v26,  OS_LOG_TYPE_ERROR,  "{%{public}@} [DROP-SET-DESCRIPTOR] set-descriptor with downloaded entry that is not a directory | entry:%ld- of-%ld | nextDownloadedEntry:%{public}@ | localContentURL:%{public}@",  buf,  0x34u);
        }

        uint64_t v21 = v17;
LABEL_19:

        char v18 = 0;
        uint64_t v17 = v21;
        goto LABEL_20;
      }

      char v18 = 1;
LABEL_10:
      ++v20;
      uint64_t v21 = v17;
    }

    while (v15 != v20);
    uint64_t v15 = (char *)[v13 countByEnumeratingWithState:&v37 objects:v52 count:16];
    uint64_t v16 = v36;
    if (v15) {
      continue;
    }
    break;
  }

- (BOOL)doesSetDescriptor:(id)a3 coverAllForAutoAssetEntries:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  __int128 v40 = v6;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v6 firstAssetType]);
  __int128 v39 = self;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager firstAssetTypeForSetEntries:](self, "firstAssetTypeForSetEntries:", v7));
  unsigned int v13 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v11, v12);

  if (!v13) {
    goto LABEL_27;
  }
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  id obj = v7;
  id v37 = [obj countByEnumeratingWithState:&v51 objects:v56 count:16];
  if (!v37)
  {
    LOBYTE(v13) = 1;
    goto LABEL_26;
  }

  uint64_t v38 = *(void *)v52;
  id v35 = v7;
LABEL_4:
  uint64_t v14 = 0LL;
LABEL_5:
  if (*(void *)v52 != v38) {
    objc_enumerationMutation(obj);
  }
  uint64_t v41 = v14;
  uint64_t v15 = *(void **)(*((void *)&v51 + 1) + 8 * v14);
  __int128 v47 = 0u;
  __int128 v48 = 0u;
  __int128 v49 = 0u;
  __int128 v50 = 0u;
  id v44 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "latestDowloadedAtomicInstanceEntries", v35));
  id v16 = [v44 countByEnumeratingWithState:&v47 objects:v55 count:16];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = *(void *)v48;
    id v42 = v15;
LABEL_9:
    uint64_t v19 = 0LL;
    id v43 = v17;
    while (1)
    {
      if (*(void *)v48 != v18) {
        objc_enumerationMutation(v44);
      }
      unsigned int v20 = *(void **)(*((void *)&v47 + 1) + 8 * v19);
      uint64_t v21 = p_ivars[155];
      id v22 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSelector]);
      id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 assetType]);
      __int16 v46 = v20;
      BOOL v24 = (void *)objc_claimAutoreleasedReturnValue([v20 fullAssetSelector]);
      id v25 = (void *)objc_claimAutoreleasedReturnValue([v24 assetType]);
      if (-[__objc2_ivar_list stringIsEqual:to:](v21, "stringIsEqual:to:", v23, v25))
      {
        uint64_t v45 = p_ivars[155];
        id v26 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSelector]);
        unsigned __int8 v27 = (void *)objc_claimAutoreleasedReturnValue([v26 assetSpecifier]);
        uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v46 fullAssetSelector]);
        uint64_t v29 = v18;
        id v30 = (void *)objc_claimAutoreleasedReturnValue([v28 assetSpecifier]);
        LOBYTE(v45) = -[__objc2_ivar_list stringIsEqual:to:](v45, "stringIsEqual:to:", v27, v30);

        uint64_t v18 = v29;
        id v17 = v43;

        p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        uint64_t v15 = v42;

        if ((v45 & 1) != 0)
        {
          id v31 = (void *)objc_claimAutoreleasedReturnValue([v46 fullAssetSelector]);
          uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( v39,  "locateDownloadedByFullSelector:",  v31));

          unsigned int v33 = [v32 isOnFilesystem];
          if (!v33) {
            goto LABEL_24;
          }
          uint64_t v14 = v41 + 1;
          if ((id)(v41 + 1) != v37) {
            goto LABEL_5;
          }
          LOBYTE(v13) = 1;
          id v7 = v35;
          id v37 = [obj countByEnumeratingWithState:&v51 objects:v56 count:16];
          if (!v37) {
            goto LABEL_26;
          }
          goto LABEL_4;
        }
      }

      else
      {
      }

      if (v17 == (id)++v19)
      {
        id v17 = [v44 countByEnumeratingWithState:&v47 objects:v55 count:16];
        if (v17) {
          goto LABEL_9;
        }
        break;
      }
    }
  }

LABEL_24:
  LOBYTE(v13) = 0;
  id v7 = v35;
LABEL_26:

LABEL_27:
  return v13;
}

- (BOOL)doesSetDescriptor:(id)a3 coverAllForAtomicInstanceEntries:(id)a4
{
  id v31 = a3;
  id v6 = a4;
  uint64_t v29 = self;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v48 = 0u;
  __int128 v49 = 0u;
  __int128 v46 = 0u;
  __int128 v47 = 0u;
  id obj = v6;
  id v28 = [obj countByEnumeratingWithState:&v46 objects:v51 count:16];
  if (!v28)
  {
    LOBYTE(v25) = 1;
    goto LABEL_26;
  }

  uint64_t v30 = *(void *)v47;
  do
  {
    uint64_t v9 = 0LL;
LABEL_4:
    if (*(void *)v47 != v30) {
      objc_enumerationMutation(obj);
    }
    uint64_t v32 = v9;
    id v10 = *(void **)(*((void *)&v46 + 1) + 8 * v9);
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    id v37 = (id)objc_claimAutoreleasedReturnValue([v31 latestDowloadedAtomicInstanceEntries]);
    id v41 = [v37 countByEnumeratingWithState:&v42 objects:v50 count:16];
    if (!v41)
    {
LABEL_24:

      LOBYTE(v25) = 0;
      break;
    }

    uint64_t v11 = *(void *)v43;
    uint64_t v36 = *(void *)v43;
    unsigned int v33 = v10;
LABEL_8:
    uint64_t v12 = 0LL;
    while (1)
    {
      if (*(void *)v43 != v11) {
        objc_enumerationMutation(v37);
      }
      unsigned int v13 = *(void **)(*((void *)&v42 + 1) + 8 * v12);
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v10 fullAssetSelector]);
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v13 fullAssetSelector]);
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 assetType]);
      __int128 v40 = (void *)objc_claimAutoreleasedReturnValue([v10 fullAssetSelector]);
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v40 assetSpecifier]);
      uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v13 fullAssetSelector]);
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v38 assetSpecifier]);
      __int128 v39 = v18;
      if (!+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v18, v19))
      {

        uint64_t v11 = v36;
LABEL_16:

        goto LABEL_17;
      }

      id v34 = (void *)objc_claimAutoreleasedReturnValue([v10 fullAssetSelector]);
      unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v34 assetVersion]);
      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v13 fullAssetSelector]);
      id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 assetVersion]);
      unsigned __int8 v35 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v20, v22);

      id v10 = v33;
      uint64_t v11 = v36;
      if ((v35 & 1) != 0) {
        break;
      }
LABEL_17:
      if (v41 == (id)++v12)
      {
        id v41 = [v37 countByEnumeratingWithState:&v42 objects:v50 count:16];
        if (v41) {
          goto LABEL_8;
        }
        goto LABEL_24;
      }
    }

    id v23 = (void *)objc_claimAutoreleasedReturnValue([v13 fullAssetSelector]);
    BOOL v24 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( v29,  "locateDownloadedByFullSelector:",  v23));

    unsigned int v25 = [v24 isOnFilesystem];
    if (!v25) {
      break;
    }
    uint64_t v9 = v32 + 1;
    if ((id)(v32 + 1) != v28) {
      goto LABEL_4;
    }
    LOBYTE(v25) = 1;
    id v28 = [obj countByEnumeratingWithState:&v46 objects:v51 count:16];
  }

  while (v28);
LABEL_26:

  return v25;
}

- (id)locateSetDescriptorDownloadedByClientDomain:(id)a3 forAssetSetIdentifier:(id)a4 consideringPreviouslyStaged:(BOOL)a5
{
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  __int128 v40 = v9;
  uint64_t v38 = v10;
  uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v9,  v10));
  __int128 v49 = 0u;
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int128 v47 = self;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v45 = [obj countByEnumeratingWithState:&v49 objects:v53 count:16];
  if (!v45)
  {
    id v46 = 0LL;
    goto LABEL_36;
  }

  id v46 = 0LL;
  uint64_t v44 = *(void *)v50;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  BOOL v39 = a5;
  do
  {
    uint64_t v14 = 0LL;
    do
    {
      if (*(void *)v50 != v44) {
        objc_enumerationMutation(obj);
      }
      uint64_t v15 = *(void *)(*((void *)&v49 + 1) + 8LL * (void)v14);
      __int128 v48 = objc_autoreleasePoolPush();
      id v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( v47,  "downloadedSetDescriptorsByInstance"));
      id v17 = [v16 safeObjectForKey:v15 ofClass:objc_opt_class(MADAutoSetDescriptor)];
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

      uint64_t v19 = p_ivars[155];
      unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v18 clientDomainName]);
      unsigned __int8 v21 = -[__objc2_ivar_list stringIsEqual:to:]( v19,  "stringIsEqual:to:",  v20,  @"FROM_STAGED_FOR_ALL");
      if ((v21 & 1) != 0) {
        goto LABEL_11;
      }
      id v22 = v9;
      id v23 = p_ivars[155];
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v18 clientDomainName]);
      if (!-[__objc2_ivar_list stringIsEqual:to:](v23, "stringIsEqual:to:", v5, v40))
      {
        id v9 = v22;
LABEL_11:
        int v27 = 0;
        unsigned int v28 = 0;
        if (a5)
        {
LABEL_12:
          __int128 v42 = v9;
          __int128 v43 = v5;
          uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v18 clientDomainName]);
          if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v29,  @"FROM_STAGED_FOR_ALL"))
          {
            uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSetIdentifier]);
            if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v30,  @"FROM_STAGED_FOR_ALL"))
            {
              id v37 = (void *)objc_claimAutoreleasedReturnValue([v18 firstAssetType]);
              id v31 = (void *)objc_claimAutoreleasedReturnValue([v36 autoAssetEntries]);
              uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager firstAssetTypeForSetEntries:]( v47,  "firstAssetTypeForSetEntries:",  v31));
              unsigned int v28 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v37, v32);
            }

            else
            {

              unsigned int v28 = 0;
            }

            id v5 = v43;
            if ((v27 & 1) == 0)
            {
LABEL_24:
              a5 = v39;
              id v9 = v42;
              if ((v21 & 1) == 0)
              {
LABEL_25:

                if ((v28 & 1) != 0) {
                  goto LABEL_26;
                }
LABEL_29:
                p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
                goto LABEL_30;
              }

- (id)locateSetDescriptorDownloadedByClientDomain:(id)a3 forAssetSetIdentifier:(id)a4 forSetConfiguration:(id)a5 requestedAutoAssetEntries:(id)a6 performingNoWait:(BOOL)a7 consideringPreviouslyStaged:(BOOL)a8
{
  id v48 = a3;
  id v47 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v17 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v16 extendedStateQueue]);
  dispatch_assert_queue_V2(v17);

  id v18 = v15;
  uint64_t v19 = v18;
  unsigned int v20 = v18;
  if (v14)
  {
    unsigned int v20 = v18;
    if (!v18) {
      unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v14 autoAssetEntries]);
    }
  }

  __int128 v60 = 0u;
  __int128 v61 = 0u;
  __int128 v58 = 0u;
  __int128 v59 = 0u;
  unsigned __int8 v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v54 = [v21 countByEnumeratingWithState:&v58 objects:v62 count:16];
  if (!v54)
  {

    goto LABEL_41;
  }

  id v45 = v14;
  id v46 = v20;
  uint64_t v44 = v19;
  id v55 = 0LL;
  uint64_t v53 = *(void *)v59;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  id obj = v21;
  __int128 v50 = self;
  do
  {
    id v23 = 0LL;
    do
    {
      __int128 v57 = v9;
      if (*(void *)v59 != v53) {
        objc_enumerationMutation(obj);
      }
      uint64_t v24 = *(void *)(*((void *)&v58 + 1) + 8LL * (void)v23);
      __int128 v56 = objc_autoreleasePoolPush();
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
      id v26 = [v25 safeObjectForKey:v24 ofClass:objc_opt_class(MADAutoSetDescriptor)];
      int v27 = (void *)objc_claimAutoreleasedReturnValue(v26);

      unsigned int v28 = p_ivars[155];
      uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v27 clientDomainName]);
      unsigned __int8 v30 = -[__objc2_ivar_list stringIsEqual:to:]( v28,  "stringIsEqual:to:",  v29,  @"FROM_STAGED_FOR_ALL");
      if ((v30 & 1) != 0
        || (id v31 = p_ivars[155],
            id v8 = (void *)objc_claimAutoreleasedReturnValue([v27 clientDomainName]),
            !-[__objc2_ivar_list stringIsEqual:to:](v31, "stringIsEqual:to:", v8, v48)))
      {
        int v33 = 0;
        unsigned int v34 = 0;
        if (!a8) {
          goto LABEL_20;
        }
      }

      else
      {
        uint64_t v32 = p_ivars[155];
        id v9 = (void *)objc_claimAutoreleasedReturnValue([v27 assetSetIdentifier]);
        if (-[__objc2_ivar_list stringIsEqual:to:](v32, "stringIsEqual:to:", v9, v47))
        {

          goto LABEL_25;
        }

        __int128 v57 = v9;
        if (!a8)
        {

          goto LABEL_23;
        }

        int v33 = 1;
      }

      __int128 v51 = v8;
      unsigned __int8 v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "clientDomainName", v44, v45));
      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v35,  @"FROM_STAGED_FOR_ALL"))
      {
        uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v27 assetSetIdentifier]);
        if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v36,  @"FROM_STAGED_FOR_ALL"))
        {
          id v37 = (void *)objc_claimAutoreleasedReturnValue([v27 firstAssetType]);
          uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager firstAssetTypeForSetEntries:]( v50,  "firstAssetTypeForSetEntries:",  v46));
          unsigned int v34 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v37, v38);
        }

        else
        {

          unsigned int v34 = 0;
        }

        id v8 = v51;
        if ((v33 & 1) == 0) {
          goto LABEL_19;
        }
LABEL_18:

        goto LABEL_19;
      }

      unsigned int v34 = 0;
      if (v33) {
        goto LABEL_18;
      }
LABEL_19:
      self = v50;
LABEL_20:
      if ((v30 & 1) == 0)
      {

        id v9 = v57;
        if ((v34 & 1) != 0) {
          goto LABEL_25;
        }
LABEL_22:
        p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
LABEL_23:
        BOOL v39 = v56;
        goto LABEL_29;
      }

      id v9 = v57;
      if (!v34) {
        goto LABEL_22;
      }
LABEL_25:
      BOOL v39 = v56;
      if (v55)
      {
        uint64_t v40 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager chooseNewerSetDescriptor:considering:]( self,  "chooseNewerSetDescriptor:considering:",  v55,  v27));

        id v55 = (id)v40;
      }

      else
      {
        id v55 = v27;
      }

      p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
LABEL_29:

      objc_autoreleasePoolPop(v39);
      id v23 = (char *)v23 + 1;
    }

    while (v54 != v23);
    id v41 = [obj countByEnumeratingWithState:&v58 objects:v62 count:16];
    id v54 = v41;
  }

  while (v41);

  uint64_t v19 = v44;
  id v14 = v45;
  unsigned int v20 = v46;
  __int128 v42 = v55;
  if (!v55) {
LABEL_41:
  }
    __int128 v42 = 0LL;

  return v42;
}

- (id)locateSetDescriptorDownloadedPreferringByAtomicInstance:(id)a3 elseByClientDomain:(id)a4 forAssetSetIdentifier:(id)a5 fromLocation:(id)a6
{
  LOBYTE(v7) = 0;
  return -[MADAutoAssetControlManager locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:forSetConfiguration:requestedAutoAssetEntries:performingNoWait:creatingIfPreviouslyStagedFound:fromLocation:]( self,  "locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:forSetConfig uration:requestedAutoAssetEntries:performingNoWait:creatingIfPreviouslyStagedFound:fromLocation:",  a3,  a4,  a5,  0LL,  0LL,  0LL,  v7,  a6);
}

- (id)locateSetDescriptorDownloadedPreferringByAtomicInstance:(id)a3 elseByClientDomain:(id)a4 forAssetSetIdentifier:(id)a5 forSetConfiguration:(id)a6 requestedAutoAssetEntries:(id)a7 performingNoWait:(BOOL)a8 creatingIfPreviouslyStagedFound:(BOOL)a9 fromLocation:(id)a10
{
  BOOL v10 = a8;
  id v16 = a3;
  id v17 = a4;
  id v18 = a5;
  id v19 = a6;
  id v20 = a7;
  id v94 = a10;
  unsigned __int8 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v22 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v21 extendedStateQueue]);
  dispatch_assert_queue_V2(v22);

  __int128 v89 = self;
  uint64_t v86 = v20;
  id v87 = v17;
  if (v16)
  {
    id v23 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v16));
    uint64_t v24 = v19;
  }

  else
  {
    uint64_t v24 = v19;
    if (v19 || v20 || v10) {
      uint64_t v25 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByClientDomain:forAssetSetIdentifier:forSetConfiguration:requestedAutoAssetEntries:performingNoWait:consideringPreviouslyStaged:]( self,  "locateSetDescriptorDownloadedByClientDomain:forAssetSetIdentifier:forSetConfiguration:requestedAutoAsset Entries:performingNoWait:consideringPreviouslyStaged:",  v17,  v18,  v19,  v20,  v10,  a9));
    }
    else {
      uint64_t v25 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByClientDomain:forAssetSetIdentifier:consideringPreviouslyStaged:]( self,  "locateSetDescriptorDownloadedByClientDomain:forAssetSetIdentifier:consideringPreviouslyStaged:",  v17,  v18,  a9));
    }
    id v23 = (void *)v25;
  }

  id v26 = v16;
  if (v23)
  {
    id v85 = v18;
    if (([v23 isDiscoveredFullyDownloaded] & 1) == 0)
    {
      unsigned __int8 v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      uint64_t v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
      {
        id v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v23 summary]);
        *(_DWORD *)int buf = 138543618;
        id v110 = v37;
        __int16 v111 = 2114;
        id v112 = v38;
        _os_log_impl( &dword_0,  v36,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {locateSetDescriptorDownloadedPreferringByAtomicInstance} located descriptor not fully downloaded | locatedDownloadedSetDescriptor:%{public}@",  buf,  0x16u);
      }

      unsigned int v34 = 0LL;
      goto LABEL_46;
    }

    uint64_t v84 = v24;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([v23 clientDomainName]);
    uint64_t v29 = v89;
    id v83 = v16;
    if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v28,  @"FROM_STAGED_FOR_ALL") & 1) != 0)
    {
      unsigned __int8 v30 = (void *)objc_claimAutoreleasedReturnValue([v23 assetSetIdentifier]);
      unsigned int v31 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v30,  @"FROM_STAGED_FOR_ALL");

      if (v31 && a9)
      {
        id v32 = v86;
        id v95 = v32;
        if (v32)
        {
          uint64_t v33 = (uint64_t)v32;
          uint64_t v24 = v84;
        }

        else
        {
          uint64_t v24 = v84;
          if (v84
            || (uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( v89,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v87,  v18))) != 0LL)
          {
            uint64_t v33 = objc_claimAutoreleasedReturnValue([v24 autoAssetEntries]);
          }

          else
          {
            uint64_t v33 = 0LL;
          }
        }

        __int128 v62 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
        __int128 v63 = (void *)objc_claimAutoreleasedReturnValue([v62 UUIDString]);

        contexta = (void *)v33;
        __int128 v64 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _limitSetAtomicEntries:fromSetDescriptor:requestedAutoAssetEntries:]( v89,  "_limitSetAtomicEntries:fromSetDescriptor:requestedAutoAssetEntries:",  v94,  v23,  v33));
        id v65 = -[MADAutoSetDescriptor initForClientDomainName:forAssetSetIdentifier:withDiscoveredAtomicInstance:withDiscoveredAtomicEntries:]( objc_alloc(&OBJC_CLASS___MADAutoSetDescriptor),  "initForClientDomainName:forAssetSetIdentifier:withDiscoveredAtomicInstance:withDiscoveredAtomicEntries:",  v87,  v85,  v63,  v64);
        id v66 = (void *)objc_claimAutoreleasedReturnValue([v23 catalogCachedAssetSetID]);
        [v65 setCatalogCachedAssetSetID:v66];

        __int16 v67 = (void *)objc_claimAutoreleasedReturnValue([v23 catalogDownloadedFromLive]);
        [v65 setCatalogDownloadedFromLive:v67];

        __int128 v68 = (void *)objc_claimAutoreleasedReturnValue([v23 catalogLastTimeChecked]);
        [v65 setCatalogLastTimeChecked:v68];

        __int128 v69 = (void *)objc_claimAutoreleasedReturnValue([v23 catalogPostedDate]);
        [v65 setCatalogPostedDate:v69];

        __int128 v70 = (void *)objc_claimAutoreleasedReturnValue([v23 catalogCachedAssetSetID]);
        [v65 setDownloadedCatalogCachedAssetSetID:v70];

        __int128 v71 = (void *)objc_claimAutoreleasedReturnValue([v23 catalogDownloadedFromLive]);
        [v65 setDownloadedCatalogDownloadedFromLive:v71];

        __int128 v72 = (void *)objc_claimAutoreleasedReturnValue([v23 catalogLastTimeChecked]);
        [v65 setDownloadedCatalogLastTimeChecked:v72];

        id v73 = (void *)objc_claimAutoreleasedReturnValue([v23 catalogPostedDate]);
        [v65 setDownloadedCatalogPostedDate:v73];

        [v65 setRequestedAutoAssetEntries:v95];
        [v65 setLatestDownloadedAtomicInstance:v63];
        [v65 setLatestDowloadedAtomicInstanceEntries:v64];
        [v65 setIsOnFilesystem:1];
        [v65 setIsDiscoveredFullyDownloaded:1];
        [v65 setAtomicInstanceDownloadedNotified:1];
        [v65 setNeverBeenLocked:1];
        BYTE2(v82) = 1;
        LOWORD(v82) = 0;
        -[MADAutoAssetControlManager trackSetDescriptor:fromLocation:forLatestDownloaded:forSpecificAtomicInstance:withCurrentSetStatus:changedWhileTerminated:changedNeverBeenLocked:notifyingIfJustDownloaded:latestToVend:historyOperation:firstClientName:]( v89,  "trackSetDescriptor:fromLocation:forLatestDownloaded:forSpecificAtomicInstance:withCurrentSetStatus:changedWhil eTerminated:changedNeverBeenLocked:notifyingIfJustDownloaded:latestToVend:historyOperation:firstClientName:",  v65,  v94,  1LL,  v63,  0LL,  0LL,  v82,  351LL,  v87);
        uint64_t v74 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v89, "logger"));
        uint64_t v75 = (os_log_s *)objc_claimAutoreleasedReturnValue([v74 oslog]);

        if (os_log_type_enabled(v75, OS_LOG_TYPE_DEFAULT))
        {
          id v76 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v89, "_updateLatestSummary"));
          id obja = v63;
          __int128 v77 = (void *)objc_claimAutoreleasedReturnValue([v24 summary]);
          __int128 v78 = v26;
          __int128 v79 = v24;
          __int128 v80 = (void *)objc_claimAutoreleasedReturnValue([v65 summary]);
          *(_DWORD *)int buf = 138543874;
          id v110 = v76;
          __int16 v111 = 2114;
          id v112 = v77;
          __int16 v113 = 2114;
          int64_t v114 = v80;
          _os_log_impl( &dword_0,  v75,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {locateSetDescriptorDownloadedPreferringByAtomicInstance}\n [VEND] new set-descriptor generated from staged set-descriptor | setConfiguration:%{public}@, fromStagedSetD escriptor:%{public}@",  buf,  0x20u);

          uint64_t v24 = v79;
          id v26 = v78;
          p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);

          __int128 v63 = obja;
        }

        id v81 =  -[MADAutoAssetControlManager atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:recoveringForSetDescriptor:usingAsSetClient:]( v89,  "atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:recoveringForSetDescriptor:usingAsSetClient:",  v94,  223LL,  v65,  @"FROM_STAGED");
        unsigned int v34 = v65;
        if (!v65)
        {
          __int128 v60 = v87;
          id v18 = v85;
          goto LABEL_48;
        }

        uint64_t v84 = v24;
        uint64_t v29 = v89;
        goto LABEL_22;
      }
    }

    else
    {
    }

    unsigned int v34 = v23;
LABEL_22:
    __int128 v88 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v103 = 0u;
    __int128 v104 = 0u;
    __int128 v105 = 0u;
    __int128 v106 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( v29,  "downloadedSetDescriptorsByInstance"));
    id v96 = [obj countByEnumeratingWithState:&v103 objects:v108 count:16];
    if (v96)
    {
      uint64_t v39 = *(void *)v104;
      uint64_t v40 = &MobileAssetKeyManager__metaData.ivars;
      uint64_t v91 = *(void *)v104;
      do
      {
        for (unint64_t i = 0LL; i != v96; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v104 != v39) {
            objc_enumerationMutation(obj);
          }
          uint64_t v42 = *(void *)(*((void *)&v103 + 1) + 8LL * (void)i);
          context = objc_autoreleasePoolPush();
          __int128 v43 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( v29,  "downloadedSetDescriptorsByInstance"));
          id v44 = [v43 safeObjectForKey:v42 ofClass:objc_opt_class(v40[218])];
          id v45 = (void *)objc_claimAutoreleasedReturnValue(v44);

          if (v45)
          {
            id v46 = (void *)objc_claimAutoreleasedReturnValue([v45 latestDownloadedAtomicInstance]);
            uint64_t v47 = objc_claimAutoreleasedReturnValue([v34 latestDownloadedAtomicInstance]);
            if (v46 == (void *)v47)
            {
            }

            else
            {
              id v48 = (void *)v47;
              __int128 v49 = p_ivars;
              __int128 v50 = p_ivars[155];
              __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v45 clientDomainName]);
              __int128 v52 = (void *)objc_claimAutoreleasedReturnValue([v34 clientDomainName]);
              if (-[__objc2_ivar_list stringIsEqual:to:](v50, "stringIsEqual:to:", v51, v52))
              {
                __int128 v90 = v49[155];
                uint64_t v53 = (void *)objc_claimAutoreleasedReturnValue([v45 assetSetIdentifier]);
                id v54 = v34;
                id v55 = (void *)objc_claimAutoreleasedReturnValue([v34 assetSetIdentifier]);
                LODWORD(v90) = -[__objc2_ivar_list stringIsEqual:to:](v90, "stringIsEqual:to:", v53, v55);

                uint64_t v29 = v89;
                unsigned int v34 = v54;
                p_ivars = v49;
                uint64_t v39 = v91;
                uint64_t v40 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
                if ((_DWORD)v90) {
                  -[NSMutableArray addObject:](v88, "addObject:", v45);
                }
              }

              else
              {

                p_ivars = v49;
                uint64_t v39 = v91;
                uint64_t v40 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
              }
            }
          }

          objc_autoreleasePoolPop(context);
        }

        id v96 = [obj countByEnumeratingWithState:&v103 objects:v108 count:16];
      }

      while (v96);
    }

    __int128 v101 = 0u;
    __int128 v102 = 0u;
    __int128 v99 = 0u;
    __int128 v100 = 0u;
    uint64_t v36 = v88;
    id v56 = -[os_log_s countByEnumeratingWithState:objects:count:]( v36,  "countByEnumeratingWithState:objects:count:",  &v99,  v107,  16LL);
    if (v56)
    {
      id v57 = v56;
      uint64_t v58 = *(void *)v100;
      id v26 = v83;
      id v18 = v85;
      do
      {
        for (j = 0LL; j != v57; j = (char *)j + 1)
        {
          if (*(void *)v100 != v58) {
            objc_enumerationMutation(v36);
          }
          -[MADAutoAssetControlManager _removeDownloadedSetDescriptorWithNewerDownloaded:fromLocation:]( v29,  "_removeDownloadedSetDescriptorWithNewerDownloaded:fromLocation:",  *(void *)(*((void *)&v99 + 1) + 8LL * (void)j),  v94);
        }

        id v57 = -[os_log_s countByEnumeratingWithState:objects:count:]( v36,  "countByEnumeratingWithState:objects:count:",  &v99,  v107,  16LL);
      }

      while (v57);
      id v23 = v36;
    }

    else
    {
      id v23 = v36;
      id v26 = v83;
      id v18 = v85;
    }

    uint64_t v24 = v84;
LABEL_46:

    goto LABEL_47;
  }

  unsigned int v34 = 0LL;
LABEL_47:
  __int128 v60 = v87;
LABEL_48:

  return v34;
}

- (id)locateSetDescriptorDownloadedLatest:(id)a3 forAssetSetIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  uint64_t v39 = v7;
  uint64_t v40 = v6;
  uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v6,  v7));
  __int128 v49 = 0u;
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v44 = [v10 countByEnumeratingWithState:&v49 objects:v53 count:16];
  id v11 = 0LL;
  if (v44)
  {
    uint64_t v43 = *(void *)v50;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    id v37 = v10;
    do
    {
      unsigned int v13 = 0LL;
      do
      {
        if (*(void *)v50 != v43) {
          objc_enumerationMutation(v10);
        }
        uint64_t v14 = *(void *)(*((void *)&v49 + 1) + 8LL * (void)v13);
        id v48 = objc_autoreleasePoolPush();
        id v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
        id v16 = [v15 safeObjectForKey:v14 ofClass:objc_opt_class(MADAutoSetDescriptor)];
        id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

        id v18 = p_ivars[155];
        uint64_t v19 = objc_claimAutoreleasedReturnValue([v17 clientDomainName]);
        unsigned __int8 v20 = -[__objc2_ivar_list stringIsEqual:to:]( v18,  "stringIsEqual:to:",  v19,  @"FROM_STAGED_FOR_ALL");
        uint64_t v47 = (void *)v19;
        if ((v20 & 1) != 0
          || (unsigned __int8 v21 = p_ivars[155],
              id v45 = (void *)objc_claimAutoreleasedReturnValue([v17 clientDomainName]),
              !-[__objc2_ivar_list stringIsEqual:to:](v21, "stringIsEqual:to:")))
        {
          int v46 = 0;
        }

        else
        {
          id v22 = p_ivars[155];
          id v23 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSetIdentifier]);
          id v41 = v23;
          if (-[__objc2_ivar_list stringIsEqual:to:](v22, "stringIsEqual:to:", v23, v39))
          {

            goto LABEL_20;
          }

          int v46 = 1;
        }

        uint64_t v24 = p_ivars[155];
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "clientDomainName", v37));
        if (!-[__objc2_ivar_list stringIsEqual:to:]( v24,  "stringIsEqual:to:",  v25,  @"FROM_STAGED_FOR_ALL"))
        {

          unsigned int v33 = 0;
          if (!v46) {
            goto LABEL_16;
          }
LABEL_15:

          goto LABEL_16;
        }

        id v42 = v11;
        id v26 = p_ivars[155];
        int v27 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSetIdentifier]);
        if (-[__objc2_ivar_list stringIsEqual:to:]( v26,  "stringIsEqual:to:",  v27,  @"FROM_STAGED_FOR_ALL"))
        {
          unsigned int v28 = p_ivars[155];
          uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v17 firstAssetType]);
          unsigned __int8 v30 = self;
          unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue([v38 autoAssetEntries]);
          id v32 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager firstAssetTypeForSetEntries:]( v30,  "firstAssetTypeForSetEntries:",  v31));
          unsigned int v33 = -[__objc2_ivar_list stringIsEqual:to:](v28, "stringIsEqual:to:", v29, v32);

          self = v30;
          BOOL v10 = v37;
        }

        else
        {

          unsigned int v33 = 0;
        }

        id v11 = v42;
        if ((v46 & 1) != 0) {
          goto LABEL_15;
        }
LABEL_16:
        if ((v20 & 1) != 0)
        {

          p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
          if (!v33) {
            goto LABEL_26;
          }
        }

        else
        {

          p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
          if ((v33 & 1) == 0) {
            goto LABEL_26;
          }
        }

- (id)preInstalledSetDescriptorForSetInstance:(id)a3 dueToMessageName:(id)a4 fromLocation:(id)a5
{
  id v8 = a3;
  id v9 = a5;
  id v10 = a4;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  unsigned int v13 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:preInstalledSetDescriptorForSetInstance",  v9);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v8 atomicInstance]);
  id v27 = 0LL;
  -[MADAutoAssetControlManager setConfigurationSelectUsingInfoInstance:dueToMessageName:selectedConfig:]( self,  "setConfigurationSelectUsingInfoInstance:dueToMessageName:selectedConfig:",  v8,  v10,  &v27);

  id v16 = v27;
  if (v14)
  {
    id v17 = 0LL;
    goto LABEL_3;
  }

  if (!v15)
  {
    uint64_t v14 = 0LL;
    id v17 = 0LL;
LABEL_18:
    if (!v14) {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v16 autoAssetEntries]);
    }
    goto LABEL_3;
  }

  id v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetAtomicInstanceByInstanceUUID:]( self,  "locateSetAtomicInstanceByInstanceUUID:",  v15));
  uint64_t v24 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v15));
  if (v24)
  {
    id v23 = (void *)v24;
    uint64_t v14 = 0LL;
    goto LABEL_9;
  }

  if (v17) {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v17 instanceEntries]);
  }
  else {
    uint64_t v14 = 0LL;
  }
  if (v14) {
    goto LABEL_18;
  }
LABEL_3:
  if (!v14)
  {
    id v23 = 0LL;
    goto LABEL_12;
  }

  id v26 = v15;
  id v18 = v17;
  id v19 = v16;
  unsigned __int8 v20 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
  unsigned __int8 v21 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetSetClientName]);
  id v22 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSetIdentifier]);
  id v23 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager preInstalledSetDescriptor:forClientDomainName:forSetClientName:forAssetSetIdentifier:representingInstanceEntries:]( self,  "preInstalledSetDescriptor:forClientDomainName:forSetClientName:forAssetSetIdentifier:representingInstanceEntries:",  v13,  v20,  v21,  v22,  v14));

  id v16 = v19;
  id v17 = v18;
  if (!v23)
  {
    id v15 = v26;
    goto LABEL_12;
  }

  id v15 = v26;
LABEL_9:
  -[MADAutoAssetControlManager updateAutoAssetSetStatus:forSetDescriptor:]( self,  "updateAutoAssetSetStatus:forSetDescriptor:",  v13,  v23);
LABEL_12:

  return v23;
}

- (id)preInstalledSetDescriptor:(id)a3 forClientDomainName:(id)a4 forSetClientName:(id)a5 forAssetSetIdentifier:(id)a6 representingInstanceEntries:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  id v56 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:preInstalledSetDescriptor",  v12);
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  __int128 v59 = 0u;
  __int128 v60 = 0u;
  id v19 = v16;
  id v20 = [v19 countByEnumeratingWithState:&v57 objects:v67 count:16];
  if (v20)
  {
    id v21 = v20;
    id v47 = v15;
    id v48 = v13;
    id v49 = v12;
    id v50 = v14;
    char v22 = 0;
    uint64_t v54 = *(void *)v58;
    id v55 = self;
    char v23 = 1;
    id obj = v19;
    do
    {
      for (unint64_t i = 0LL; i != v21; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v58 != v54) {
          objc_enumerationMutation(obj);
        }
        uint64_t v25 = *(void **)(*((void *)&v57 + 1) + 8LL * (void)i);
        id v26 = objc_autoreleasePoolPush();
        id v27 = (void *)objc_claimAutoreleasedReturnValue([v25 assetSelector]);
        unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([v27 assetType]);
        uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v25 assetSelector]);
        unsigned __int8 v30 = (void *)objc_claimAutoreleasedReturnValue([v29 assetSpecifier]);
        unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _preInstalledDescriptor:forAssetType:withAssetSpecifier:]( v55,  "_preInstalledDescriptor:forAssetType:withAssetSpecifier:",  v56,  v28,  v30));

        v23 &= v31 != 0LL;
        v22 |= v31 != 0LL;

        objc_autoreleasePoolPop(v26);
      }

      id v19 = obj;
      id v21 = [obj countByEnumeratingWithState:&v57 objects:v67 count:16];
    }

    while (v21);

    id v15 = v47;
    id v13 = v48;
    self = v55;
    if (!(v23 & 1 | ((v22 & 1) == 0)))
    {
      id v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v55, "logger"));
      unsigned int v33 = (os_log_s *)objc_claimAutoreleasedReturnValue([v32 oslog]);

      if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 138543874;
        __int128 v62 = v56;
        __int16 v63 = 2114;
        id v64 = v48;
        __int16 v65 = 2114;
        id v66 = v47;
        _os_log_impl( &dword_0,  v33,  OS_LOG_TYPE_DEFAULT,  "[AUTO-PRE-INSTALLED] {%{public}@} found some asset-specifiers as pre-installed - returning found subset | clie ntDomainName:%{public}@ | assetSetIdentifier:%{public}@",  buf,  0x20u);
      }
    }

    char v34 = v23 | v22;
    id v12 = v49;
    id v14 = v50;
    if ((v34 & 1) == 0)
    {
      id v35 = 0LL;
      goto LABEL_27;
    }
  }

  else
  {
  }

  uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _preInstalledSetAtomicEntriesFromInstanceEntries:]( self,  "_preInstalledSetAtomicEntriesFromInstanceEntries:",  v19));
  if (v36)
  {
    id v37 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:forClientDomainName:forSetClientName:forAssetSetIdentifier:representingInstanceEntries:recoveringAtomicInstanceUUID:asSubAtomicFrom:]( self,  "atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:forClientDomainName:forSetClientName: forAssetSetIdentifier:representingInstanceEntries:recoveringAtomicInstanceUUID:asSubAtomicFrom:",  v56,  224LL,  v13,  v14,  v15,  v19,  0LL,  0LL));
    uint64_t v38 = v37;
    if (v37)
    {
      uint64_t v39 = self;
      uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v37 atomicInstanceUUID]);
      id v41 = -[MADAutoSetDescriptor initForClientDomainName:forAssetSetIdentifier:withDiscoveredAtomicInstance:withDiscoveredAtomicEntries:]( objc_alloc(&OBJC_CLASS___MADAutoSetDescriptor),  "initForClientDomainName:forAssetSetIdentifier:withDiscoveredAtomicInstance:withDiscoveredAtomicEntries:",  v13,  v15,  v40,  v36);
      id v35 = v41;
      if (v41)
      {
        [v41 setRequestedAutoAssetEntries:v19];
        [v35 setLatestDownloadedAtomicInstance:v40];
        [v35 setLatestDowloadedAtomicInstanceEntries:v36];
        [v35 setIsOnFilesystem:1];
        [v35 setIsDiscoveredFullyDownloaded:1];
        [v35 setAtomicInstanceDownloadedNotified:1];
        [v35 setNeverBeenLocked:1];
        -[MADAutoAssetControlManager setDescriptorAddedPreInstalled:](v39, "setDescriptorAddedPreInstalled:", v35);
        id v42 = v35;
      }

      else
      {
        id v51 = v14;
        id obja = v19;
        id v43 = v15;
        id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v39, "logger"));
        id v45 = (os_log_s *)objc_claimAutoreleasedReturnValue([v44 oslog]);

        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int buf = 138543874;
          __int128 v62 = v56;
          __int16 v63 = 2114;
          id v64 = v13;
          __int16 v65 = 2114;
          id v66 = v43;
          _os_log_error_impl( &dword_0,  v45,  OS_LOG_TYPE_ERROR,  "[AUTO-PRE-INSTALLED] {%{public}@} unable to allocate set-descriptor | clientDomainName:%{public}@ | assetSet Identifier:%{public}@",  buf,  0x20u);
        }

        -[MADAutoAssetControlManager atomicInstanceRemove:setAtomicInstanceUUID:removingForReason:historyOperation:]( v39,  "atomicInstanceRemove:setAtomicInstanceUUID:removingForReason:historyOperation:",  v56,  v40,  @"unable to allocate set-descriptor",  337LL);
        id v15 = v43;
        id v14 = v51;
        id v19 = obja;
      }
    }

    else
    {
      id v35 = 0LL;
    }
  }

  else
  {
    id v35 = 0LL;
  }

LABEL_27:
  return v35;
}

- (id)locateSetDescriptorsDownloaded
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v24 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  id v27 = self;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v5 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v29;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    id v9 = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      id v10 = 0LL;
      id v25 = v6;
      do
      {
        if (*(void *)v29 != v7) {
          objc_enumerationMutation(obj);
        }
        uint64_t v11 = *(void *)(*((void *)&v28 + 1) + 8LL * (void)v10);
        id v12 = objc_autoreleasePoolPush();
        id v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( v27,  "downloadedSetDescriptorsByInstance"));
        id v14 = [v13 safeObjectForKey:v11 ofClass:objc_opt_class(p_ivars[218])];
        id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

        if (v15)
        {
          id v16 = v9[155];
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v15 clientDomainName]);
          if (-[__objc2_ivar_list stringIsEqual:to:]( v16,  "stringIsEqual:to:",  v17,  @"FROM_STAGED_FOR_ALL"))
          {
          }

          else
          {
            id v18 = v9[155];
            id v19 = p_ivars;
            id v20 = v9;
            id v21 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSetIdentifier]);
            LOBYTE(v18) = -[__objc2_ivar_list stringIsEqual:to:]( v18,  "stringIsEqual:to:",  v21,  @"FROM_STAGED_FOR_ALL");

            id v9 = v20;
            p_ivars = v19;
            id v6 = v25;
          }
        }

        objc_autoreleasePoolPop(v12);
        id v10 = (char *)v10 + 1;
      }

      while (v6 != v10);
      id v6 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
    }

    while (v6);
  }

  if (-[NSMutableArray count](v24, "count")) {
    char v22 = v24;
  }
  else {
    char v22 = 0LL;
  }

  return v22;
}

- (id)locateSetDescriptorActiveJobByAtomicInstanceUUID:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activeSetDescriptorsByInstance](self, "activeSetDescriptorsByInstance"));
  id v8 = [v7 safeObjectForKey:v4 ofClass:objc_opt_class(MADAutoSetDescriptor)];
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  return v9;
}

- (id)locateSetDescriptorActiveJobByClientDomain:(id)a3 forAssetSetIdentifier:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v7,  v6);
  if (v10)
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager activeSetDescriptorsByIdentifier]( self,  "activeSetDescriptorsByIdentifier"));
    id v12 = [v11 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoSetDescriptor)];
    id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  }

  else
  {
    id v13 = 0LL;
  }

  return v13;
}

- (id)locateSetDescriptorActiveJobPreferringByAtomicInstance:(id)a3 elseByClientDomain:(id)a4 forAssetSetIdentifier:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  if (v8) {
    uint64_t v13 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorActiveJobByAtomicInstanceUUID:]( self,  "locateSetDescriptorActiveJobByAtomicInstanceUUID:",  v8));
  }
  else {
    uint64_t v13 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorActiveJobByClientDomain:forAssetSetIdentifier:]( self,  "locateSetDescriptorActiveJobByClientDomain:forAssetSetIdentifier:",  v9,  v10));
  }
  id v14 = (void *)v13;

  return v14;
}

- (id)locateSetDescriptorForSelector:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v4));
  if (!v21)
  {
    id v15 = 0LL;
    goto LABEL_21;
  }

  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v7 = [obj countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (!v7)
  {
    id v15 = 0LL;
    goto LABEL_20;
  }

  id v8 = v7;
  id v20 = v4;
  uint64_t v9 = *(void *)v24;
  while (2)
  {
    for (unint64_t i = 0LL; i != v8; unint64_t i = (char *)i + 1)
    {
      if (*(void *)v24 != v9) {
        objc_enumerationMutation(obj);
      }
      uint64_t v11 = *(void *)(*((void *)&v23 + 1) + 8LL * (void)i);
      id v12 = objc_autoreleasePoolPush();
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
      id v14 = [v13 safeObjectForKey:v11 ofClass:objc_opt_class(MADAutoSetDescriptor)];
      id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

      if (v15)
      {
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 clientDomainName]);
        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v16,  @"FROM_STAGED_FOR_ALL") & 1) != 0) {
          goto LABEL_11;
        }
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSetIdentifier]);
        if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v17,  @"FROM_STAGED_FOR_ALL"))
        {

LABEL_11:
          goto LABEL_13;
        }

        unsigned int v18 = -[MADAutoAssetControlManager doesSetDescriptor:referenceAssetDescriptor:]( self,  "doesSetDescriptor:referenceAssetDescriptor:",  v15,  v21);

        if (v18)
        {
          objc_autoreleasePoolPop(v12);
          goto LABEL_18;
        }
      }

- (id)locateActiveAutoJobForSetDescriptor:(id)a3
{
  id v25 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](self, "currentJobsBySelector"));
  id v6 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v29;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    id v10 = v25;
    uint64_t v24 = *(void *)v29;
    do
    {
      uint64_t v11 = 0LL;
      id v26 = v7;
      do
      {
        if (*(void *)v29 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v12 = *(void *)(*((void *)&v28 + 1) + 8LL * (void)v11);
        uint64_t v13 = objc_autoreleasePoolPush();
        id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](self, "currentJobsBySelector"));
        id v15 = [v14 safeObjectForKey:v12 ofClass:objc_opt_class(p_ivars[269])];
        id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

        if ([v16 autoAssetSetJob])
        {
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 clientDomainName]);
          unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([v10 clientDomainName]);
          if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v17, v18) & 1) != 0)
          {
            id v19 = self;
            id v20 = (void *)objc_claimAutoreleasedReturnValue([v16 autoAssetSetIdentifier]);
            id v21 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSetIdentifier]);
            unsigned int v22 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v20, v21);

            id v10 = v25;
            self = v19;
            uint64_t v8 = v24;

            p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            id v7 = v26;
            if (v22)
            {
              objc_autoreleasePoolPop(v13);
              goto LABEL_15;
            }
          }

          else
          {

            p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            id v7 = v26;
          }
        }

        objc_autoreleasePoolPop(v13);
        uint64_t v11 = (char *)v11 + 1;
      }

      while (v7 != v11);
      id v7 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
    }

    while (v7);
    id v16 = 0LL;
  }

  else
  {
    id v16 = 0LL;
    id v10 = v25;
  }

- (BOOL)verifySetDescriptorIsLockable:(id)a3 fromLocation:(id)a4 notLocakableError:(id *)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  uint64_t v12 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:verifySetDescriptorIsLockable",  v9);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v8 latestDowloadedAtomicInstanceEntries]);
  id v14 = [v13 count];

  id v49 = v12;
  if (!v14)
  {
    __int128 v31 = objc_alloc(&OBJC_CLASS___NSString);
    id v32 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
    unsigned int v33 = -[NSString initWithFormat:]( v31,  "initWithFormat:",  @"{%@:verifySetDescriptorIsLockable} no downloaded atomic-instance entries | setJobDescriptor:%@",  v9,  v32);
    __int128 v30 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6110LL,  v12,  0LL,  v33));

    goto LABEL_28;
  }

  id v47 = v9;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([v8 latestDowloadedAtomicInstanceEntries]);
  id v15 = [obj countByEnumeratingWithState:&v50 objects:v54 count:16];
  if (!v15)
  {
    __int128 v30 = 0LL;
    goto LABEL_27;
  }

  id v16 = v15;
  uint64_t v17 = *(void *)v51;
  id v45 = v8;
  int v46 = a5;
  while (2)
  {
    for (unint64_t i = 0LL; i != v16; unint64_t i = (char *)i + 1)
    {
      if (*(void *)v51 != v17) {
        objc_enumerationMutation(obj);
      }
      id v19 = *(void **)(*((void *)&v50 + 1) + 8LL * (void)i);
      id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 fullAssetSelector]);
      id v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v20));

      if (!v21)
      {
        char v34 = objc_alloc(&OBJC_CLASS___NSString);
        id v8 = v45;
        id v35 = (void *)objc_claimAutoreleasedReturnValue([v45 summary]);
        uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
        id v37 = -[NSString initWithFormat:]( v34,  "initWithFormat:",  @"{%@:verifySetDescriptorIsLockable} no downloaded descriptor | setJobDescriptor:%@ | nextDownloadedAtomicEntry:%@",  v47,  v35,  v36);
        uint64_t v38 = 6108LL;
        goto LABEL_26;
      }

      if (([v21 isMAAutoAsset] & 1) == 0)
      {
        uint64_t v39 = objc_alloc(&OBJC_CLASS___NSString);
        id v8 = v45;
        id v35 = (void *)objc_claimAutoreleasedReturnValue([v45 summary]);
        uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
        id v37 = -[NSString initWithFormat:]( v39,  "initWithFormat:",  @"{%@:verifySetDescriptorIsLockable} not MAAutoAsset | setJobDescriptor:%@ | downloadedDescriptor:%@",  v47,  v35,  v36);
        uint64_t v38 = 6103LL;
        goto LABEL_26;
      }

      uint64_t v22 = objc_claimAutoreleasedReturnValue([v21 assetType]);
      if (!v22) {
        goto LABEL_25;
      }
      __int128 v23 = (void *)v22;
      uint64_t v24 = objc_claimAutoreleasedReturnValue([v21 assetSpecifier]);
      if (!v24) {
        goto LABEL_24;
      }
      id v25 = (void *)v24;
      uint64_t v26 = objc_claimAutoreleasedReturnValue([v21 assetVersion]);
      if (!v26) {
        goto LABEL_23;
      }
      id v27 = (void *)v26;
      __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v21 assetId]);
      if (!v28)
      {

LABEL_23:
LABEL_24:

LABEL_25:
        uint64_t v40 = objc_alloc(&OBJC_CLASS___NSString);
        id v8 = v45;
        id v35 = (void *)objc_claimAutoreleasedReturnValue([v45 summary]);
        uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
        id v37 = -[NSString initWithFormat:]( v40,  "initWithFormat:",  @"{%@:verifySetDescriptorIsLockable} MISSING required | setJobDescriptor:%@ | downloadedDescriptor:%@",  v47,  v35,  v36);
        uint64_t v38 = 6111LL;
LABEL_26:
        __int128 v30 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  v38,  v49,  0LL,  v37));

        a5 = v46;
        goto LABEL_27;
      }

      __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v21 metadata]);

      if (!v29) {
        goto LABEL_25;
      }
      if (([v21 isOnFilesystem] & 1) == 0)
      {
        id v44 = objc_alloc(&OBJC_CLASS___NSString);
        id v8 = v45;
        id v35 = (void *)objc_claimAutoreleasedReturnValue([v45 summary]);
        uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
        id v37 = -[NSString initWithFormat:]( v44,  "initWithFormat:",  @"{%@:verifySetDescriptorIsLockable} not on filesystem | setJobDescriptor:%@ | downloadedDescriptor:%@",  v47,  v35,  v36);
        uint64_t v38 = 6113LL;
        goto LABEL_26;
      }
    }

    id v16 = [obj countByEnumeratingWithState:&v50 objects:v54 count:16];
    __int128 v30 = 0LL;
    id v8 = v45;
    a5 = v46;
    if (v16) {
      continue;
    }
    break;
  }

- (void)removeSetDescriptorActiveJobByAtomicInstanceUUID:(id)a3
{
  id v10 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activeSetDescriptorsByInstance](self, "activeSetDescriptorsByInstance"));
  id v7 = [v6 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoSetDescriptor)];
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  if (v8)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activeSetDescriptorsByInstance](self, "activeSetDescriptorsByInstance"));
    [v9 removeObjectForKey:v10];
  }
}

- (void)removeSetDescriptorActiveJobByClientDomain:(id)a3 forAssetSetIdentifier:(id)a4 fromLocation:(id)a5
{
  id v8 = a5;
  id v9 = a4;
  id v10 = a3;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v10,  v9);
  if (v13)
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager activeSetDescriptorsByIdentifier]( self,  "activeSetDescriptorsByIdentifier"));
    id v15 = [v14 safeObjectForKey:v13 ofClass:objc_opt_class(MADAutoSetDescriptor)];
    id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

    if (v16)
    {
      id v17 = v13;
      unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedEntry:v17 fromLocation:v8]);

      id v20 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager activeSetDescriptorsByIdentifier]( self,  "activeSetDescriptorsByIdentifier"));
      [v20 removeObjectForKey:v17];

      if (v19)
      {
        id v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
        [v21 removePersistedEntry:v17 fromLocation:v8];

        uint64_t v22 = objc_alloc(&OBJC_CLASS___NSString);
        __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
        uint64_t v24 = -[NSString initWithFormat:]( v22,  "initWithFormat:",  @"removed previously active set-descriptor | setDescriptor:%@",  v23);
        -[MADAutoAssetControlManager _logPersistedSetDescriptorRemoved:forComponentType:removedPersistedEntryID:removedSetDescriptor:message:]( self,  "_logPersistedSetDescriptorRemoved:forComponentType:removedPersistedEntryID:removedSetDescriptor:message:",  v8,  @"SET_ACTIVE_JOB_DESCRIPTORS",  v17,  v16,  v24);
      }

      else
      {
        id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        {
          id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
          *(_DWORD *)int buf = 138543874;
          __int128 v30 = v27;
          __int16 v31 = 2114;
          id v32 = v8;
          __int16 v33 = 2114;
          char v34 = v28;
          _os_log_error_impl( &dword_0,  v26,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@:removeSetDescriptorActiveJobByClientDomain} unable to load persisted-set-descriptor file | locatedActiveJobSetDescriptor:%{public}@",  buf,  0x20u);
        }
      }
    }
  }
}

- (void)removeSetDescriptorDownloaded:(id)a3 fromLocation:(id)a4 checkingByInstance:(BOOL)a5 regardlessOfLatest:(BOOL)a6 historyOperationAI:(int64_t)a7 historyOperationSD:(int64_t)a8
{
  BOOL v9 = a5;
  id v12 = a3;
  id v77 = a4;
  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 extendedStateQueue]);
  dispatch_assert_queue_V2(v14);

  __int128 v72 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v74 = v12;
  int64_t v71 = a7;
  if (v9)
  {
    __int128 v88 = 0u;
    __int128 v89 = 0u;
    __int128 v86 = 0u;
    __int128 v87 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
    id v15 = [obj countByEnumeratingWithState:&v86 objects:v97 count:16];
    id v16 = v77;
    if (v15)
    {
      id v17 = v15;
      uint64_t v80 = *(void *)v87;
      do
      {
        for (unint64_t i = 0LL; i != v17; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v87 != v80) {
            objc_enumerationMutation(obj);
          }
          uint64_t v19 = *(void *)(*((void *)&v86 + 1) + 8LL * (void)i);
          id v20 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
          id v21 = [v20 safeObjectForKey:v19 ofClass:objc_opt_class(MADAutoSetDescriptor)];
          uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);

          if (v19)
          {
            __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v22 clientDomainName]);
            uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
            if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v23, v24) & 1) != 0)
            {
              id v25 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSetIdentifier]);
              uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
              unsigned int v27 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v25, v26);

              id v12 = v74;
              id v16 = v77;
              if (v27)
              {
                if (a6) {
                  goto LABEL_13;
                }
                uint64_t v28 = objc_claimAutoreleasedReturnValue([v74 latestDownloadedAtomicInstance]);
                if (!v28) {
                  goto LABEL_13;
                }
                __int128 v29 = (void *)v28;
                __int128 v30 = (void *)objc_claimAutoreleasedReturnValue([v22 latestDownloadedAtomicInstance]);
                __int16 v31 = (void *)objc_claimAutoreleasedReturnValue([v74 latestDownloadedAtomicInstance]);
                unsigned int v32 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v30, v31);

                id v16 = v77;
                id v12 = v74;

                if (v32) {
LABEL_13:
                }
                  -[NSMutableArray addObject:](v72, "addObject:", v19);
              }
            }

            else
            {

              id v16 = v77;
            }
          }
        }

        id v17 = [obj countByEnumeratingWithState:&v86 objects:v97 count:16];
      }

      while (v17);
    }

    a7 = v71;
  }

  else
  {
    __int16 v33 = (void *)objc_claimAutoreleasedReturnValue([v12 latestDownloadedAtomicInstance]);

    if (v33)
    {
      char v34 = (void *)objc_claimAutoreleasedReturnValue([v12 latestDownloadedAtomicInstance]);
      -[NSMutableArray addObject:](v72, "addObject:", v34);

      id v16 = v77;
    }

    else
    {
      id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      uint64_t v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

      id v16 = v77;
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
      {
        __int128 v68 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        __int128 v69 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
        *(_DWORD *)int buf = 138543874;
        __int128 v92 = v68;
        __int16 v93 = 2114;
        id v94 = v77;
        __int16 v95 = 2114;
        id v96 = v69;
        _os_log_error_impl( &dword_0,  v36,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@:removeSetDescriptorDownloaded} no latest downloaded atomic-instance | setDescriptor:%{public}@",  buf,  0x20u);

        id v12 = v74;
      }
    }
  }

  __int128 v84 = 0u;
  __int128 v85 = 0u;
  __int128 v82 = 0u;
  __int128 v83 = 0u;
  id v76 = v72;
  id v81 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v76,  "countByEnumeratingWithState:objects:count:",  &v82,  v90,  16LL);
  if (v81)
  {
    id obja = *(id *)v83;
    do
    {
      for (j = 0LL; j != v81; j = (char *)j + 1)
      {
        if (*(id *)v83 != obja) {
          objc_enumerationMutation(v76);
        }
        uint64_t v38 = *(void *)(*((void *)&v82 + 1) + 8LL * (void)j);
        uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
        id v40 = [v39 safeObjectForKey:v38 ofClass:objc_opt_class(MADAutoSetDescriptor)];
        id v41 = (void *)objc_claimAutoreleasedReturnValue(v40);

        if (v41)
        {
          id v42 =  +[MADAutoAssetLocker eliminateAllPreviousSetLocksByClient:forSetDescriptor:]( &OBJC_CLASS___MADAutoAssetLocker,  "eliminateAllPreviousSetLocksByClient:forSetDescriptor:",  @"ALL_INSTANCES",  v41);
          -[MADAutoAssetControlManager secureForceUngraftAll:forSetDescriptorBeingRemoved:]( self,  "secureForceUngraftAll:forSetDescriptorBeingRemoved:",  v16,  v41);
          id v43 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
          [v43 removeObjectForKey:v38];

          id v44 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setDescriptorNewEntryIDForDownloaded:]( self,  "setDescriptorNewEntryIDForDownloaded:",  v41));
          id v45 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
          unsigned int v46 = [v45 persistedEntryAlreadyExists:v44 fromLocation:v16];

          if (v46)
          {
            id v47 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
            id v48 = (void *)objc_claimAutoreleasedReturnValue([v47 persistedEntry:v44 fromLocation:v16]);

            if (v48)
            {
              id v49 = (void *)objc_claimAutoreleasedReturnValue([v41 latestDownloadedAtomicInstance]);

              id v73 = v48;
              if (v49)
              {
                __int128 v50 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
                __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v41 latestDownloadedAtomicInstance]);
                [v50 removeObjectForKey:v51];
              }

              else
              {
                __int128 v50 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
                __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v50 diag]);
                id v56 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"EntryID: %@. latestDownloadedAtomicInstance is nil",  v38);
                [v51 trackAnomaly:@"removeSetDescriptorDownloaded" forReason:v56 withResult:6101 withError:0];
              }

              __int128 v57 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
              id v16 = v77;
              [v57 removePersistedEntry:v44 fromLocation:v77];

              __int128 v58 = (void *)objc_claimAutoreleasedReturnValue([v41 latestDowloadedAtomicInstanceEntries]);
              __int128 v59 = self;
              id v60 = [v58 count];
              __int128 v61 = (void *)objc_claimAutoreleasedReturnValue([v41 clientDomainName]);
              __int128 v62 = (void *)objc_claimAutoreleasedReturnValue([v41 assetSetIdentifier]);
              __int16 v63 = (void *)objc_claimAutoreleasedReturnValue([v41 discoveredAtomicInstance]);
              id v64 = v60;
              self = v59;
              +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:usageCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:usageCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:",  a8,  2LL,  1LL,  v64,  v61,  v62,  v63);

              __int16 v65 = objc_alloc(&OBJC_CLASS___NSString);
              __int128 v53 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 summary]);
              id v66 = -[NSString initWithFormat:]( v65,  "initWithFormat:",  @"removed previously downloaded set-descriptor | setDescriptor:%@",  v53);
              -[MADAutoAssetControlManager _logPersistedSetDescriptorRemoved:forComponentType:removedPersistedEntryID:removedSetDescriptor:message:]( v59,  "_logPersistedSetDescriptorRemoved:forComponentType:removedPersistedEntryID:removedSetDescriptor:message:",  v77,  @"SET_DOWNLOADED_DESCRIPTORS",  v44,  v41,  v66);

              a7 = v71;
              id v48 = v73;
              id v12 = v74;
            }

            else
            {
              __int128 v52 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              __int128 v53 = (os_log_s *)objc_claimAutoreleasedReturnValue([v52 oslog]);

              if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
              {
                uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                id v55 = (void *)objc_claimAutoreleasedReturnValue([v41 summary]);
                *(_DWORD *)int buf = 138543874;
                __int128 v92 = v54;
                __int16 v93 = 2114;
                id v94 = v16;
                __int16 v95 = 2114;
                id v96 = v55;
                _os_log_error_impl( &dword_0,  v53,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@:removeSetDescriptorDownloaded} unable to load persisted-set-descriptor file | downloadedSetDescriptor:%{public}@",  buf,  0x20u);

                id v12 = v74;
              }
            }
          }
        }

        __int16 v67 = (void *)objc_claimAutoreleasedReturnValue([v12 latestDownloadedAtomicInstance]);
        -[MADAutoAssetControlManager atomicInstanceRemove:setAtomicInstanceUUID:removingForReason:historyOperation:]( self,  "atomicInstanceRemove:setAtomicInstanceUUID:removingForReason:historyOperation:",  v16,  v67,  v16,  a7);
      }

      id v81 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v76,  "countByEnumeratingWithState:objects:count:",  &v82,  v90,  16LL);
    }

    while (v81);
  }
}

- (id)chooseNewerSetDescriptor:(id)a3 considering:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  BOOL v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 clientDomainName]);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
  id v162 = self;
  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v10,  v11));

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v6 clientDomainName]);
  HIDWORD(v141) = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v13,  @"FROM_STAGED_FOR_ALL");

  id v14 = (void *)objc_claimAutoreleasedReturnValue([v7 clientDomainName]);
  LODWORD(v141) = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v14,  @"FROM_STAGED_FOR_ALL");

  unsigned int v15 = +[MADAutoAssetControlManager preferenceAutoAssetLogSetCompare]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceAutoAssetLogSetCompare");
  id v16 = v6;
  if (!v12)
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v7 clientDomainName]);
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSetIdentifier]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v17,  v18));
  }

  unsigned int v152 = v15;
  if (v15)
  {
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      id v21 = (char *)objc_claimAutoreleasedReturnValue([v12 summary]);
      *(_DWORD *)int buf = 138543362;
      v172 = v21;
      _os_log_impl( &dword_0,  v20,  OS_LOG_TYPE_DEFAULT,  "\n{chooseNewerSetDescriptor} setConfiguration:%{public}@",  buf,  0xCu);
    }

    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int128 v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v24 = (char *)objc_claimAutoreleasedReturnValue([v16 summary]);
      *(_DWORD *)int buf = 138543362;
      v172 = v24;
      _os_log_impl(&dword_0, v23, OS_LOG_TYPE_DEFAULT, "\n{chooseNewerSetDescriptor}  left:%{public}@", buf, 0xCu);
    }

    id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v27 = (char *)objc_claimAutoreleasedReturnValue([v7 summary]);
      *(_DWORD *)int buf = 138543362;
      v172 = v27;
      _os_log_impl(&dword_0, v26, OS_LOG_TYPE_DEFAULT, "\n{chooseNewerSetDescriptor} right:%{public}@", buf, 0xCu);
    }
  }

  v150 = v16;
  id v151 = v7;
  __int128 v169 = 0u;
  __int128 v170 = 0u;
  __int128 v167 = 0u;
  __int128 v168 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "latestDowloadedAtomicInstanceEntries", v141));
  v153 = v12;
  id v158 = [obj countByEnumeratingWithState:&v167 objects:v186 count:16];
  if (!v158)
  {
    uint64_t v144 = 0LL;
    uint64_t v145 = 0LL;
    uint64_t v146 = 0LL;
    uint64_t v147 = 0LL;
    uint64_t v160 = 0LL;
    goto LABEL_49;
  }

  uint64_t v144 = 0LL;
  uint64_t v145 = 0LL;
  uint64_t v146 = 0LL;
  uint64_t v147 = 0LL;
  uint64_t v160 = 0LL;
  uint64_t v156 = *(void *)v168;
  do
  {
    for (unint64_t i = 0LL; i != v158; unint64_t i = (char *)i + 1)
    {
      if (*(void *)v168 != v156) {
        objc_enumerationMutation(obj);
      }
      __int128 v29 = *(void **)(*((void *)&v167 + 1) + 8LL * (void)i);
      __int128 v30 = objc_autoreleasePoolPush();
      __int16 v31 = (void *)objc_claimAutoreleasedReturnValue([v29 fullAssetSelector]);
      unsigned int v32 = (void *)objc_claimAutoreleasedReturnValue([v31 assetType]);
      __int16 v33 = (void *)objc_claimAutoreleasedReturnValue([v29 fullAssetSelector]);
      char v34 = (void *)objc_claimAutoreleasedReturnValue([v33 assetSpecifier]);
      id v35 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetEntryForAssetType:v32 forAssetSpecifier:v34]);

      if (v35)
      {
        uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v29 fullAssetSelector]);
        id v37 = (void *)objc_claimAutoreleasedReturnValue([v36 assetType]);
        uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v29 fullAssetSelector]);
        uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v38 assetSpecifier]);
        id v40 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager findAtomicEntryForAssetType:forAssetSpecifier:representedByDescriptor:]( v162,  "findAtomicEntryForAssetType:forAssetSpecifier:representedByDescriptor:",  v37,  v39,  v151));

        id v41 = (void *)objc_claimAutoreleasedReturnValue([v29 fullAssetSelector]);
        id v42 = (void *)objc_claimAutoreleasedReturnValue([v41 assetType]);
        id v43 = (void *)objc_claimAutoreleasedReturnValue([v29 fullAssetSelector]);
        id v44 = (void *)objc_claimAutoreleasedReturnValue([v43 assetSpecifier]);
        id v45 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager findSetEntryForAssetType:forAssetSpecifier:representedByConfiguration:]( v162,  "findSetEntryForAssetType:forAssetSpecifier:representedByConfiguration:",  v42,  v44,  v12));

        if (v40)
        {
          id v46 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
          id v47 = (void *)objc_claimAutoreleasedReturnValue([v29 fullAssetSelector]);
          id v48 = (void *)objc_claimAutoreleasedReturnValue([v47 assetVersion]);
          id v49 = [v46 initWithRestoreVersion:v48];

          id v50 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
          id v154 = v40;
          __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v40 fullAssetSelector]);
          __int128 v52 = (void *)objc_claimAutoreleasedReturnValue([v51 assetVersion]);
          __int128 v53 = (char *)[v50 initWithRestoreVersion:v52];

          if (![v49 isComparable:v53])
          {
            __int16 v67 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v162, "logger"));
            id v56 = (os_log_s *)objc_claimAutoreleasedReturnValue([v67 oslog]);

            if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR))
            {
              int64_t v71 = (char *)objc_claimAutoreleasedReturnValue([v29 summary]);
              __int128 v72 = (void *)objc_claimAutoreleasedReturnValue([v40 summary]);
              *(_DWORD *)int buf = 138543618;
              v172 = v71;
              __int16 v173 = 2114;
              uint64_t v174 = (uint64_t)v72;
              _os_log_error_impl( &dword_0,  v56,  OS_LOG_TYPE_ERROR,  "\n {chooseNewerSetDescriptor} ignoring (invalid restore version) | nextLeftEntry:%{public}@ | foundRightEntry:%{public}@",  buf,  0x16u);
            }

            id v12 = v153;
            goto LABEL_38;
          }

          uint64_t v54 = (char *)[v49 compare:v53];
          if (v54 == (char *)-1LL)
          {
            ++v146;
            id v12 = v153;
            if (!v152) {
              goto LABEL_39;
            }
            __int128 v68 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v162, "logger"));
            id v56 = (os_log_s *)objc_claimAutoreleasedReturnValue([v68 oslog]);

            if (!os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT)) {
              goto LABEL_38;
            }
            __int128 v57 = (void *)objc_claimAutoreleasedReturnValue([v29 fullAssetSelector]);
            __int128 v58 = (char *)objc_claimAutoreleasedReturnValue([v57 summary]);
            __int128 v59 = (void *)objc_claimAutoreleasedReturnValue([v154 fullAssetSelector]);
            id v60 = (void *)objc_claimAutoreleasedReturnValue([v59 summary]);
            *(_DWORD *)int buf = 138543618;
            v172 = v58;
            __int16 v173 = 2114;
            uint64_t v174 = (uint64_t)v60;
            __int128 v61 = v56;
            __int128 v62 = "\n{chooseNewerSetDescriptor} | rightIsNewer | left:%{public}@ | right:%{public}@";
          }

          else
          {
            id v12 = v153;
            if (v54 == (_BYTE *)&dword_0 + 1)
            {
              ++v145;
              if (v152)
              {
                id v55 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v162, "logger"));
                id v56 = (os_log_s *)objc_claimAutoreleasedReturnValue([v55 oslog]);

                if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
                {
                  __int128 v57 = (void *)objc_claimAutoreleasedReturnValue([v29 fullAssetSelector]);
                  __int128 v58 = (char *)objc_claimAutoreleasedReturnValue([v57 summary]);
                  __int128 v59 = (void *)objc_claimAutoreleasedReturnValue([v154 fullAssetSelector]);
                  id v60 = (void *)objc_claimAutoreleasedReturnValue([v59 summary]);
                  *(_DWORD *)int buf = 138543618;
                  v172 = v58;
                  __int16 v173 = 2114;
                  uint64_t v174 = (uint64_t)v60;
                  __int128 v61 = v56;
                  __int128 v62 = "\n{chooseNewerSetDescriptor} | leftIsNewer | left:%{public}@ | right:%{public}@";
                  goto LABEL_37;
                }

- (id)findAtomicEntryForAssetType:(id)a3 forAssetSpecifier:(id)a4 representedByDescriptor:(id)a5
{
  id v7 = a3;
  id v24 = a4;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([a5 latestDowloadedAtomicInstanceEntries]);
  id v8 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = *(void *)v27;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      uint64_t v11 = 0LL;
      id v23 = v8;
      do
      {
        if (*(void *)v27 != v9) {
          objc_enumerationMutation(obj);
        }
        id v12 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)v11);
        id v13 = p_ivars[155];
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
        unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v13, "stringIsEqual:to:", v15, v7) & 1) != 0)
        {
          id v16 = p_ivars[155];
          uint64_t v17 = v9;
          unsigned int v18 = p_ivars;
          id v19 = v7;
          id v20 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
          id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSpecifier]);
          LODWORD(v16) = -[__objc2_ivar_list stringIsEqual:to:](v16, "stringIsEqual:to:", v21, v24);

          id v7 = v19;
          p_ivars = v18;
          uint64_t v9 = v17;
          id v8 = v23;

          if ((_DWORD)v16)
          {
            id v8 = v12;
            goto LABEL_12;
          }
        }

        else
        {
        }

        uint64_t v11 = (char *)v11 + 1;
      }

      while (v8 != v11);
      id v8 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
    }

    while (v8);
  }

- (id)findAtomicEntryForAssetType:(id)a3 forAssetSpecifier:(id)a4 representedByLookupResult:(id)a5
{
  id v7 = a3;
  id v24 = a4;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([a5 discoveredAtomicEntries]);
  id v8 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = *(void *)v27;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      uint64_t v11 = 0LL;
      id v23 = v8;
      do
      {
        if (*(void *)v27 != v9) {
          objc_enumerationMutation(obj);
        }
        id v12 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)v11);
        id v13 = p_ivars[155];
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
        unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v13, "stringIsEqual:to:", v15, v7) & 1) != 0)
        {
          id v16 = p_ivars[155];
          uint64_t v17 = v9;
          unsigned int v18 = p_ivars;
          id v19 = v7;
          id v20 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
          id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSpecifier]);
          LODWORD(v16) = -[__objc2_ivar_list stringIsEqual:to:](v16, "stringIsEqual:to:", v21, v24);

          id v7 = v19;
          p_ivars = v18;
          uint64_t v9 = v17;
          id v8 = v23;

          if ((_DWORD)v16)
          {
            id v8 = v12;
            goto LABEL_12;
          }
        }

        else
        {
        }

        uint64_t v11 = (char *)v11 + 1;
      }

      while (v8 != v11);
      id v8 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
    }

    while (v8);
  }

- (void)initialStatusForJob:(id)a3 usingSelector:(id)a4 withJobUUID:(id)a5 downloadingDescriptor:(id)a6 baseForPatchDescriptor:(id)a7 withClientAssetPolicy:(id)a8
{
  id v42 = a4;
  id v13 = a6;
  id v14 = a8;
  id v41 = a7;
  id v40 = a5;
  unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v15 extendedStateQueue]);
  dispatch_assert_queue_V2(v16);

  if (v13)
  {
    id v17 = [v13 downloadUserInitiated];
    if (!v14) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  id v17 = 0LL;
  if (v14) {
LABEL_3:
  }
    id v17 = (id)([v14 userInitiated] | v17);
LABEL_4:
  unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentStatusBySelector](self, "currentStatusBySelector"));
  id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v42));
  id v20 = [v18 safeObjectForKey:v19 ofClass:objc_opt_class(MAAutoAssetStatus)];
  id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);

  uint64_t v22 = objc_alloc_init(&OBJC_CLASS___MAAutoAssetNotifications);
  id v23 = (void *)objc_claimAutoreleasedReturnValue([v13 metadata]);
  if (v13)
  {
    unsigned int v38 = [v13 neverBeenLocked];
    id v24 = v22;
    unsigned __int8 v25 = [v13 patchingAttempted];
    unsigned __int8 v26 = [v13 stagedPriorToAvailable];
    unsigned int v37 = v17;
    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v13 stagedFromOSVersion]);
    uint64_t v39 = v21;
    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v13 stagedFromBuildVersion]);
    id v29 = v14;
    __int128 v30 = (void *)objc_claimAutoreleasedReturnValue([v13 patchingAttemptError]);
    LOBYTE(v36) = 0;
    BYTE1(v35) = v26;
    LOBYTE(v35) = v25;
    uint64_t v22 = v24;
    LOBYTE(v34) = 0;
    id v31 = -[MADAutoAssetControlManager newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( self,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNev erBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesys temBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAt tempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLo ckUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v42,  v24,  v23,  0LL,  v38,  v37,  0LL,  -1LL,  -1LL,  v34,  0LL,  -1LL,  v35,  v27,  v28,  v36,  0LL,  v30,  0LL);

    id v14 = v29;
    id v21 = v39;
  }

  else
  {
    LOBYTE(v36) = 0;
    LOWORD(v35) = 0;
    LOBYTE(v34) = 0;
    id v31 = -[MADAutoAssetControlManager newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( self,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNev erBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesys temBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAt tempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLo ckUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v42,  v22,  v23,  0LL,  1LL,  v17,  0LL,  -1LL,  -1LL,  v34,  0LL,  -1LL,  v35,  0LL,  0LL,  v36,  0LL,  0LL,  0LL);
  }

  if (v21) {
    unsigned int v32 = @"INITIAL(again)";
  }
  else {
    unsigned int v32 = @"INITIAL(first)";
  }
  __int16 v33 = (void *)objc_claimAutoreleasedReturnValue([v42 assetVersion]);
  -[MADAutoAssetControlManager updateCurrentAssetStatus:currentStatus:forAssetSelector:forActiveJobUUID:matchingAssetVersion:downloadingDescriptor:baseForPatchDescriptor:]( self,  "updateCurrentAssetStatus:currentStatus:forAssetSelector:forActiveJobUUID:matchingAssetVersion:downloadingDescriptor: baseForPatchDescriptor:",  v32,  v31,  v42,  v40,  v33,  v13,  v41);
}

- (void)initialStatusForSetJob:(id)a3 withJobUUID:(id)a4 usingSetDescriptor:(id)a5 usingSetPolicy:(id)a6
{
  id v22 = a5;
  id v9 = a4;
  id v10 = a3;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v22 clientDomainName]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSetIdentifier]);
  id v15 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v13,  v14);

  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetJobsByIdentifier](self, "currentSetJobsByIdentifier"));
  [v16 setSafeObject:v10 forKey:v15];

  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsByUUID](self, "currentJobsByUUID"));
  [v17 setSafeObject:v10 forKey:v9];

  unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager activeSetDescriptorsByIdentifier]( self,  "activeSetDescriptorsByIdentifier"));
  [v18 setSafeObject:v22 forKey:v15];

  id v19 = (void *)objc_claimAutoreleasedReturnValue([v22 discoveredAtomicInstance]);
  if (v19)
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activeSetDescriptorsByInstance](self, "activeSetDescriptorsByInstance"));
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v22 discoveredAtomicInstance]);
    [v20 setSafeObject:v22 forKey:v21];
  }
}

- (void)updateAutoAssetStatus:(id)a3 forActiveJobUUID:(id)a4 withLatestJobStatus:(id)a5 matchingAssetVersion:(id)a6 fromLocation:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned int v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  if (v14)
  {
    uint64_t v19 = objc_opt_class(&OBJC_CLASS___MAAutoAssetStatus);
    if ((objc_opt_isKindOfClass(v14, v19) & 1) == 0)
    {
      id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager updateAutoAssetStatus:forActiveJobUUID:withLatestJobStatus:matchingAssetVersion:fromLocation:].cold.1();
      }
    }

    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentStatusBySelector](self, "currentStatusBySelector"));
    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v12));
    id v24 = [v22 safeObjectForKey:v23 ofClass:objc_opt_class(MAAutoAssetStatus)];
    unsigned __int8 v25 = (void *)objc_claimAutoreleasedReturnValue(v24);

    -[MADAutoAssetControlManager updateCurrentAssetStatus:currentStatus:forAssetSelector:forActiveJobUUID:matchingAssetVersion:downloadingDescriptor:baseForPatchDescriptor:]( self,  "updateCurrentAssetStatus:currentStatus:forAssetSelector:forActiveJobUUID:matchingAssetVersion:downloadingDescripto r:baseForPatchDescriptor:",  @"UPDATE",  v14,  v12,  v13,  v15,  0LL,  0LL);
    if (!v13) {
      goto LABEL_20;
    }
    if (!v25) {
      goto LABEL_20;
    }
    unsigned __int8 v26 = (void *)objc_claimAutoreleasedReturnValue([v12 assetVersion]);

    if (!v26) {
      goto LABEL_20;
    }
    id v46 = v15;
    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedEntryID]);
    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
    unsigned int v29 = [v28 persistedEntryAlreadyExists:v27 fromLocation:v16];

    if (!v29)
    {
      id v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      unsigned int v32 = (os_log_s *)objc_claimAutoreleasedReturnValue([v42 oslog]);

      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
      {
        id v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        id v44 = (void *)objc_claimAutoreleasedReturnValue([v14 summary]);
        *(_DWORD *)int buf = 138544130;
        id v48 = v43;
        __int16 v49 = 2114;
        id v50 = v16;
        __int16 v51 = 2114;
        __int128 v52 = v44;
        __int16 v53 = 2114;
        id v54 = v13;
        _os_log_error_impl( &dword_0,  v32,  OS_LOG_TYPE_ERROR,  "[%{public}@] UPDATE_STATUS | %{public}@ | currentStatus:%{public}@ | jobUUID:%{public}@ | no currently persist ed active-job descriptor (presumed stale)",  buf,  0x2Au);
      }

      goto LABEL_19;
    }

    __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
    id v31 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:updateAutoAssetStatus",  v16);
    unsigned int v32 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 persistedEntry:v27 fromLocation:v31]);

    if (v32)
    {
      unsigned int v33 = [v14 downloadUserInitiated];
      if (v33 == [v25 downloadUserInitiated])
      {
        unsigned int v34 = [v14 patchingAttempted];
      }

      id v35 = -[os_log_s secureCodedObjectForKey:ofClass:]( v32,  "secureCodedObjectForKey:ofClass:",  @"assetDescriptor",  objc_opt_class(&OBJC_CLASS___MADAutoAssetDescriptor));
      uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
      id v37 = -[os_log_s secureCodedObjectForKey:ofClass:]( v32,  "secureCodedObjectForKey:ofClass:",  @"baseForPatchDescriptor",  objc_opt_class(&OBJC_CLASS___MADAutoAssetDescriptor));
      unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue(v37);
      -[MADAutoAssetControlManager _trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:message:]( self,  "_trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseFo rPatchDescriptor:message:",  v16,  @"ENTRY_MODIFY",  v12,  v13,  0LL,  v36,  v38,  @"update the current status of the auto-asset-job");
    }

    else
    {
      uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue([v36 diag]);
      id v45 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:updateAutoAssetStatus} no jobPersistedState | persistedEntryID:%@",  v16,  v27);
      [v38 trackAnomaly:@"AUTO-CONTROL" forReason:v45 withResult:6101 withError:0];
    }

LABEL_19:
    id v15 = v46;
LABEL_20:

    goto LABEL_21;
  }

  uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v40 = (void *)objc_claimAutoreleasedReturnValue([v39 diag]);
  id v41 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:updateAutoAssetStatus} no progress status",  v16);
  [v40 trackAnomaly:@"AUTO-CONTROL" forReason:v41 withResult:6101 withError:0];

LABEL_21:
}

- (void)updateAutoAssetStatusForChosenDownloadedDescriptor:(id)a3 matchingAssetVersion:(id)a4 fromLocation:(id)a5
{
  id v7 = self;
  id v34 = a5;
  id v33 = a4;
  id v8 = a3;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v7, "autoControlManagerFSM"));
  id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  uint64_t v11 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v8 assetType]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSpecifier]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v8 assetVersion]);
  id v35 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v11,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v12,  v13,  v14);

  id v15 = objc_alloc_init(&OBJC_CLASS___MAAutoAssetNotifications);
  -[MAAutoAssetNotifications setContentAvailableForUse:](v15, "setContentAvailableForUse:", 1LL);
  id v31 = (void *)objc_claimAutoreleasedReturnValue([v8 metadata]);
  unsigned int v30 = [v8 neverBeenLocked];
  unsigned int v29 = [v8 downloadUserInitiated];
  id v28 = [v8 downloadedNetworkBytes];
  id v27 = [v8 downloadedFilesystemBytes];
  LOBYTE(v7) = [v8 isPatch];
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v8 patchedFromBaseSelector]);
  id v17 = [v8 patchedFromBaseFilesystemBytes];
  unsigned __int8 v18 = [v8 patchingAttempted];
  unsigned __int8 v19 = [v8 stagedPriorToAvailable];
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v8 stagedFromOSVersion]);
  id v21 = (void *)objc_claimAutoreleasedReturnValue([v8 stagedFromBuildVersion]);
  id v22 = (void *)objc_claimAutoreleasedReturnValue([v8 patchingAttemptError]);

  LOBYTE(v26) = 0;
  BYTE1(v25) = v19;
  LOBYTE(v25) = v18;
  LOBYTE(v24) = (_BYTE)v7;
  id v23 = -[MADAutoAssetControlManager newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( self,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNever BeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemB ytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempte d:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage: withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v35,  v15,  v31,  0LL,  v30,  v29,  0LL,  v28,  v27,  v24,  v16,  v17,  v25,  v20,  v21,  v26,  0LL,  v22,  0LL);

  -[MADAutoAssetControlManager updateAutoAssetStatus:forActiveJobUUID:withLatestJobStatus:matchingAssetVersion:fromLocation:]( self,  "updateAutoAssetStatus:forActiveJobUUID:withLatestJobStatus:matchingAssetVersion:fromLocation:",  v35,  0LL,  v23,  v33,  v34);
}

- (id)updateAutoAssetStatus:(id)a3 forActiveJobUUID:(id)a4 forJobResponse:(id)a5 withResponseError:(id)a6
{
  id v93 = a3;
  id v90 = a4;
  id v10 = a5;
  id v89 = a6;
  __int128 v92 = self;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v10 message]);
  id v14 = [v13 safeObjectForKey:@"found" ofClass:objc_opt_class(MAAutoAssetInfoFound)];
  id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

  __int128 v83 = v15;
  id v16 = (id)objc_claimAutoreleasedReturnValue([v15 currentStatus]);
  id v17 = v10;
  if (v16) {
    goto LABEL_6;
  }
  unsigned __int8 v18 = objc_alloc_init(&OBJC_CLASS___MAAutoAssetNotifications);
  if (v89)
  {
    __int128 v64 = 0uLL;
    id v67 = v89;
    __int128 v66 = (unint64_t)v89;
    LOBYTE(v65) = 0;
  }

  else
  {
    id v67 = 0LL;
    __int128 v66 = 0u;
    LOBYTE(v65) = 0;
    __int128 v64 = 0u;
  }

  LOWORD(v63) = 0;
  LOBYTE(v62) = 0;
  id v16 = -[MADAutoAssetControlManager newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( self,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNever BeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemB ytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempte d:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage: withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v93,  v18,  0LL,  0LL,  1LL,  0LL,  0LL,  -1LL,  -1LL,  v62,  0LL,  -1LL,  v63,  v64,  v65,  v66,  v67);

  if (v16)
  {
LABEL_6:
    unsigned __int8 v19 = (void *)objc_claimAutoreleasedReturnValue([v93 assetVersion]);
    -[MADAutoAssetControlManager updateCurrentAssetStatus:currentStatus:forAssetSelector:forActiveJobUUID:matchingAssetVersion:downloadingDescriptor:baseForPatchDescriptor:]( self,  "updateCurrentAssetStatus:currentStatus:forAssetSelector:forActiveJobUUID:matchingAssetVersion:downloadingDescripto r:baseForPatchDescriptor:",  @"FINAL",  v16,  v93,  v90,  v19,  0LL,  0LL);

    id v20 = (void *)objc_claimAutoreleasedReturnValue([v17 message]);
    id v21 = [v20 safeObjectForKey:@"instance" ofClass:objc_opt_class(MAAutoAssetInfoInstance)];
    uint64_t v22 = objc_claimAutoreleasedReturnValue(v21);
    id v23 = [v20 safeObjectForKey:@"found" ofClass:objc_opt_class(MAAutoAssetInfoFound)];
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
    id v25 = [v20 safeObjectForKey:@"desire" ofClass:objc_opt_class(MAAutoAssetInfoDesire)];
    uint64_t v87 = objc_claimAutoreleasedReturnValue(v25);
    id v26 = [v20 safeObjectForKey:@"end" ofClass:objc_opt_class(MAAutoAssetInfoEnd)];
    uint64_t v86 = objc_claimAutoreleasedReturnValue(v26);
    __int128 v82 = v20;
    id v27 = [v20 safeObjectForKey:@"listen" ofClass:objc_opt_class(MAAutoAssetInfoListen)];
    uint64_t v85 = objc_claimAutoreleasedReturnValue(v27);
    id v28 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    id v29 = v16;
    id v91 = (void *)v22;
    if (v22) {
      -[NSMutableDictionary setSafeObject:forKey:](v28, "setSafeObject:forKey:", v22, @"instance");
    }
    __int128 v84 = v28;
    unsigned int v30 = v29;
    __int128 v88 = v24;
    if (v17)
    {
      __int128 v78 = (void *)objc_claimAutoreleasedReturnValue([v29 assetSelector]);
      id v77 = (void *)objc_claimAutoreleasedReturnValue([v29 notifications]);
      id v76 = (void *)objc_claimAutoreleasedReturnValue([v29 availableForUseAttributes]);
      id v81 = (void *)objc_claimAutoreleasedReturnValue([v29 newerVersionAttributes]);
      unsigned int v74 = [v29 neverBeenLocked];
      unsigned int v73 = [v29 downloadUserInitiated];
      __int128 v68 = (void *)objc_claimAutoreleasedReturnValue([v29 downloadProgress]);
      id v72 = [v29 downloadedNetworkBytes];
      id v71 = [v29 downloadedFilesystemBytes];
      unsigned __int8 v70 = [v29 downloadedAsPatch];
      id v31 = (void *)objc_claimAutoreleasedReturnValue([v29 patchedFromBaseSelector]);
      id v69 = [v29 patchedFromBaseFilesystemBytes];
      unsigned __int8 v32 = [v29 patchingAttempted];
      unsigned __int8 v33 = [v29 stagedPriorToAvailable];
      id v34 = (void *)objc_claimAutoreleasedReturnValue([v29 stagedFromOSVersion]);
      id v35 = (void *)objc_claimAutoreleasedReturnValue([v29 stagedFromBuildVersion]);
      id v79 = v17;
      uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v29 availableForUseError]);
      id v37 = (void *)objc_claimAutoreleasedReturnValue([v29 patchingAttemptError]);
      unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue([v29 newerVersionError]);
      LOBYTE(v65) = 1;
      BYTE1(v63) = v33;
      LOBYTE(v63) = v32;
      LOBYTE(v62) = v70;
      id v75 = -[MADAutoAssetControlManager newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( v92,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withN everBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFil esystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatc hingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithC urrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v78,  v77,  v76,  v81,  v74,  v73,  v68,  v72,  v71,  v62,  v31,  v69,  v63,  v34,  v35,  v65,  v36,  v37,  v38);

      uint64_t v24 = v88;
      id v17 = v79;

      unsigned int v30 = v75;
    }

    uint64_t v39 = objc_alloc(&OBJC_CLASS___MAAutoAssetInfoFound);
    id v40 = (void *)objc_claimAutoreleasedReturnValue([v91 clientAssetSelector]);
    if (v24)
    {
      id v41 = (void *)objc_claimAutoreleasedReturnValue([v24 localContentURL]);
      id v42 = (void *)objc_claimAutoreleasedReturnValue([v24 assetAttributes]);
      id v43 = -[MAAutoAssetInfoFound initForSelector:withLocalContentURL:withAssetAttributes:reportingStatus:]( v39,  "initForSelector:withLocalContentURL:withAssetAttributes:reportingStatus:",  v40,  v41,  v42,  v30);
    }

    else
    {
      id v43 = -[MAAutoAssetInfoFound initForSelector:withLocalContentURL:withAssetAttributes:reportingStatus:]( v39,  "initForSelector:withLocalContentURL:withAssetAttributes:reportingStatus:",  v40,  0LL,  0LL,  v30);
    }

    id v44 = v84;
    id v45 = (void *)v85;

    if (v43)
    {
      -[NSMutableDictionary setSafeObject:forKey:](v84, "setSafeObject:forKey:", v43, @"found");
    }

    else
    {
      id v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v92, "logger"));
      id v47 = (os_log_s *)objc_claimAutoreleasedReturnValue([v46 oslog]);

      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR))
      {
        id v80 = v17;
        __int128 v59 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v92, "_updateLatestSummary"));
        id v60 = (id)objc_claimAutoreleasedReturnValue([v93 summary]);
        if (v91) {
          __int128 v61 = (__CFString *)objc_claimAutoreleasedReturnValue([v91 summary]);
        }
        else {
          __int128 v61 = @"N";
        }
        *(_DWORD *)int buf = 138543874;
        id v95 = v59;
        __int16 v96 = 2114;
        id v97 = v60;
        __int16 v98 = 2114;
        __int128 v99 = v61;
        _os_log_error_impl( &dword_0,  v47,  OS_LOG_TYPE_ERROR,  "[%{public}@] {updateAutoAssetStatus[%{public}@]} final status reported without found information | instance:%{public}@",  buf,  0x20u);
        if (v91) {

        }
        id v17 = v80;
      }

      id v44 = v84;
    }

    __int16 v49 = (void *)v86;
    id v48 = (void *)v87;
    if (v87) {
      -[NSMutableDictionary setSafeObject:forKey:](v44, "setSafeObject:forKey:", v87, @"desire");
    }
    if (v86) {
      -[NSMutableDictionary setSafeObject:forKey:](v44, "setSafeObject:forKey:", v86, @"end");
    }
    if (v85) {
      -[NSMutableDictionary setSafeObject:forKey:](v44, "setSafeObject:forKey:", v85, @"listen");
    }
    if (v17)
    {
      id v50 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
      __int16 v51 = (void *)objc_claimAutoreleasedReturnValue([v17 messageName]);
      __int128 v52 = v17;
      __int16 v53 = (void *)objc_claimAutoreleasedReturnValue([v17 clientID]);
      id v54 = v50;
      id v48 = (void *)v87;
      id v55 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v54,  "initWithType:messageName:clientID:version:message:",  2LL,  v51,  v53,  0LL,  v44);

      id v17 = v52;
      id v45 = (void *)v85;

      __int16 v49 = (void *)v86;
    }

    else
    {
      id v55 = 0LL;
    }
  }

  else
  {
    __int128 v57 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    __int128 v58 = (void *)objc_claimAutoreleasedReturnValue([v57 diag]);
    [v58 trackAnomaly:@"AUTO-CONTROL" forReason:@"{updateAutoAssetStatus} no final status" withResult:6101 withError:0];

    id v55 = (SUCoreConnectMessage *)v17;
  }

  return v55;
}

- (id)updateAutoAssetSetStatus:(id)a3 forClientDomain:(id)a4 forAssetSetIdentifier:(id)a5 forJobResponse:(id)a6 withResponseError:(id)a7 clearingDownloadProgressReason:(id)a8 withAssetSetStatus:(id)a9
{
  id v15 = a3;
  id v113 = a4;
  id v16 = a5;
  id v17 = a6;
  id v18 = a7;
  id v19 = a8;
  id v20 = a9;
  __int16 v111 = self;
  id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v22 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v21 extendedStateQueue]);
  dispatch_assert_queue_V2(v22);

  id v23 = (__CFString *)v17;
  uint64_t v24 = (__CFString *)v19;
  id v25 = v24;
  if (!v23)
  {
    id v31 = v24;
    if (!v24)
    {
      int64_t v114 = 0LL;
      id v36 = 0LL;
      id v35 = 0LL;
LABEL_15:
      id v41 = v113;
      goto LABEL_40;
    }

- (void)updateAutoAssetSetStatus:(id)a3 forSetDescriptor:(id)a4
{
  id v84 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);
  __int128 v83 = self;
  id v10 = (MANAutoAssetSetNotifications *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetStatusByInstance:]( self,  "locateSetStatusByInstance:",  v9));

  if (v10
    || (uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v6 discoveredAtomicInstance]),
        id v10 = (MANAutoAssetSetNotifications *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetStatusByInstance:]( v83,  "locateSetStatusByInstance:",  v11)),  v11,  v10))
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MANAutoAssetSetNotifications currentNotifications](v10, "currentNotifications"));
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v6 discoveredAtomicInstance]);
    [v12 setAtomicInstanceDiscovered:v13 != 0];

    else {
      uint64_t v14 = 0LL;
    }
    [v12 setAtomicInstanceAvailableForUse:v14];
    objc_msgSend(v12, "setDownloadedBecameIncomplete:", objc_msgSend(v6, "onFilesystemIncomplete"));
    __int128 v82 = (void *)objc_claimAutoreleasedReturnValue([v6 clientDomainName]);
    id v81 = (id)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
    id v80 = -[MADAutoAssetControlManager _newAtomicInstancesDownloadedForSetIdentifier:]( v83,  "_newAtomicInstancesDownloadedForSetIdentifier:",  v6);
    uint64_t v67 = objc_claimAutoreleasedReturnValue([v6 catalogCachedAssetSetID]);
    uint64_t v65 = objc_claimAutoreleasedReturnValue([v6 catalogDownloadedFromLive]);
    id v79 = (void *)objc_claimAutoreleasedReturnValue([v6 catalogLastTimeChecked]);
    id v77 = (void *)objc_claimAutoreleasedReturnValue([v6 catalogPostedDate]);
    uint64_t v63 = objc_claimAutoreleasedReturnValue([v6 discoveredAtomicInstance]);
    uint64_t v61 = objc_claimAutoreleasedReturnValue([v6 discoveredAtomicEntries]);
    uint64_t v59 = objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);
    __int128 v78 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDowloadedAtomicInstanceEntries]);
    uint64_t v75 = (void *)objc_claimAutoreleasedReturnValue([v6 downloadedCatalogCachedAssetSetID]);
    unsigned int v73 = (void *)objc_claimAutoreleasedReturnValue([v6 downloadedCatalogDownloadedFromLive]);
    uint64_t v57 = objc_claimAutoreleasedReturnValue([v6 downloadedCatalogLastTimeChecked]);
    unsigned int v74 = (void *)objc_claimAutoreleasedReturnValue([v6 downloadedCatalogPostedDate]);
    uint64_t v15 = objc_claimAutoreleasedReturnValue(-[MANAutoAssetSetNotifications currentNeedPolicy](v10, "currentNeedPolicy"));
    uint64_t v16 = objc_claimAutoreleasedReturnValue([v6 clientDomainName]);
    uint64_t v58 = objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
    id v69 = (void *)v16;
    id v17 = +[MADAutoAssetScheduler newSetPolicyForDomainName:forAssetSetIdentifier:]( &OBJC_CLASS___MADAutoAssetScheduler,  "newSetPolicyForDomainName:forAssetSetIdentifier:",  v16,  v58);
    id v18 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager stagerSetPolicy]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerSetPolicy"));
    unsigned __int8 v19 = -[MADAutoAssetControlManager _haveReceivedLookupResponseForSetDescriptor:]( v83,  "_haveReceivedLookupResponseForSetDescriptor:",  v6);
    id v71 = v10;
    unsigned __int8 v20 = -[MADAutoAssetControlManager _vendingAtomicInstanceForConfiguredEntriesForSetDescriptor:]( v83,  "_vendingAtomicInstanceForConfiguredEntriesForSetDescriptor:",  v6);
    LOBYTE(v56) = 0;
    BYTE2(v55) = [v6 downloadUserInitiated];
    BYTE1(v55) = v20;
    LOBYTE(v55) = v19;
    id v53 = v17;
    id v21 = v17;
    unsigned __int8 v70 = (void *)v15;
    uint64_t v52 = v15;
    id v72 = v12;
    uint64_t v51 = v12;
    uint64_t v22 = (void *)v57;
    id v23 = (void *)v59;
    uint64_t v24 = (void *)v61;
    id v25 = (void *)v63;
    id v26 = (void *)v65;
    id v27 = (void *)v67;
    id v28 = -[MADAutoAssetControlManager newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:extendingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( v83,  "newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogC achedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtom icInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloaded AtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDown loadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy: withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries: withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:exte ndingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  v84,  @"previous set-status found",  v82,  v81,  v80,  v67,  v65,  v79,  v77,  v63,  v61,  v59,  v78,  v75,  v73,  v57,  v74,  v51,  v52,  v53,  v18,  v55,  0,  [v6 downloadedNetworkBytes],  objc_msgSend(v6, "downloadedFilesystemBytes"),  v56,  0,  0,  0);

    id v29 = (void *)v58;
  }

  else
  {
    id v41 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetSetNotifications);
    id v42 = (void *)objc_claimAutoreleasedReturnValue([v6 discoveredAtomicInstance]);
    -[MANAutoAssetSetNotifications setAtomicInstanceDiscovered:](v41, "setAtomicInstanceDiscovered:", v42 != 0LL);

    else {
      uint64_t v43 = 0LL;
    }
    -[MANAutoAssetSetNotifications setAtomicInstanceAvailableForUse:](v41, "setAtomicInstanceAvailableForUse:", v43);
    -[MANAutoAssetSetNotifications setDownloadedBecameIncomplete:]( v41,  "setDownloadedBecameIncomplete:",  [v6 onFilesystemIncomplete]);
    id v72 = (void *)objc_claimAutoreleasedReturnValue([v6 clientDomainName]);
    __int128 v82 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
    id v81 = -[MADAutoAssetControlManager _newAtomicInstancesDownloadedForSetIdentifier:]( v83,  "_newAtomicInstancesDownloadedForSetIdentifier:",  v6);
    id v80 = (id)objc_claimAutoreleasedReturnValue([v6 catalogCachedAssetSetID]);
    uint64_t v68 = objc_claimAutoreleasedReturnValue([v6 catalogDownloadedFromLive]);
    uint64_t v66 = objc_claimAutoreleasedReturnValue([v6 catalogLastTimeChecked]);
    id v79 = (void *)objc_claimAutoreleasedReturnValue([v6 catalogPostedDate]);
    id v77 = (void *)objc_claimAutoreleasedReturnValue([v6 discoveredAtomicInstance]);
    uint64_t v64 = objc_claimAutoreleasedReturnValue([v6 discoveredAtomicEntries]);
    uint64_t v62 = objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);
    uint64_t v60 = objc_claimAutoreleasedReturnValue([v6 latestDowloadedAtomicInstanceEntries]);
    __int128 v78 = (void *)objc_claimAutoreleasedReturnValue([v6 downloadedCatalogCachedAssetSetID]);
    uint64_t v44 = objc_claimAutoreleasedReturnValue([v6 downloadedCatalogDownloadedFromLive]);
    uint64_t v45 = objc_claimAutoreleasedReturnValue([v6 downloadedCatalogLastTimeChecked]);
    uint64_t v46 = objc_claimAutoreleasedReturnValue([v6 downloadedCatalogPostedDate]);
    id v71 = v41;
    unsigned int v74 = (void *)objc_claimAutoreleasedReturnValue([v6 clientDomainName]);
    unsigned __int8 v70 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
    id v47 = +[MADAutoAssetScheduler newSetPolicyForDomainName:forAssetSetIdentifier:]( &OBJC_CLASS___MADAutoAssetScheduler,  "newSetPolicyForDomainName:forAssetSetIdentifier:",  v74);
    id v29 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager stagerSetPolicy]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerSetPolicy"));
    unsigned __int8 v76 = -[MADAutoAssetControlManager _haveReceivedLookupResponseForSetDescriptor:]( v83,  "_haveReceivedLookupResponseForSetDescriptor:",  v6);
    unsigned __int8 v48 = -[MADAutoAssetControlManager _vendingAtomicInstanceForConfiguredEntriesForSetDescriptor:]( v83,  "_vendingAtomicInstanceForConfiguredEntriesForSetDescriptor:",  v6);
    LOBYTE(v56) = 0;
    id v27 = (void *)v68;
    BYTE2(v55) = [v6 downloadUserInitiated];
    BYTE1(v55) = v48;
    id v26 = (void *)v66;
    LOBYTE(v55) = v76;
    id v69 = v47;
    id v54 = v47;
    uint64_t v22 = (void *)v46;
    unsigned int v73 = (void *)v45;
    uint64_t v50 = v45;
    uint64_t v75 = (void *)v44;
    uint64_t v49 = v44;
    id v23 = (void *)v60;
    uint64_t v24 = (void *)v62;
    id v25 = (void *)v64;
    id v28 = -[MADAutoAssetControlManager newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:extendingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( v83,  "newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogC achedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtom icInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloaded AtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDown loadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy: withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries: withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:exte ndingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  v84,  @"no previous set-status",  v72,  v82,  v81,  v80,  v68,  v66,  v79,  v77,  v64,  v62,  v60,  v78,  v49,  v50,  v46,  v71,  0,  v54,  v29,  v55,  0,  [v6 downloadedNetworkBytes],  objc_msgSend(v6, "downloadedFilesystemBytes"),  v56,  0,  0,  0);
  }

  if (!v28)
  {
    uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v83, "autoControlManagerFSM"));
    uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v39 diag]);
    [v40 trackAnomaly:@"AUTO-SET-CONTROL" forReason:@"{updateAutoAssetSetStatus:forSetDescriptor:} no update status" withResult:6101 withError:0];

    goto LABEL_18;
  }

  id v30 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([v28 atomicInstancesDownloaded]);
  if (v30) {
    goto LABEL_11;
  }
  id v31 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);

  if (v31)
  {
    id v30 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    unsigned __int8 v32 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);
    -[NSMutableArray addObject:](v30, "addObject:", v32);

    [v28 setAtomicInstancesDownloaded:v30];
LABEL_11:
  }

  id v33 = (void *)objc_claimAutoreleasedReturnValue([v28 newerAtomicInstanceDiscovered]);

  if (!v33)
  {
    id v34 = (void *)objc_claimAutoreleasedReturnValue([v6 discoveredAtomicInstance]);
    [v28 setNewerAtomicInstanceDiscovered:v34];

    id v35 = (void *)objc_claimAutoreleasedReturnValue([v6 discoveredAtomicEntries]);
    [v28 setNewerDiscoveredAtomicEntries:v35];
  }

  id v36 = (void *)objc_claimAutoreleasedReturnValue([v28 latestDownloadedAtomicInstance]);

  if (!v36)
  {
    id v37 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);
    [v28 setLatestDownloadedAtomicInstance:v37];

    id v38 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDowloadedAtomicInstanceEntries]);
    [v28 setLatestDowloadedAtomicInstanceEntries:v38];
  }

  uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
  -[MADAutoAssetControlManager _updateCurrentSetStatus:forSetIdentifier:withSetStatus:]( v83,  "_updateCurrentSetStatus:forSetIdentifier:withSetStatus:",  v84,  v39,  v28);
LABEL_18:
}

- (void)updateCurrentAssetStatus:(id)a3 currentStatus:(id)a4 forAssetSelector:(id)a5 forActiveJobUUID:(id)a6 matchingAssetVersion:(id)a7 downloadingDescriptor:(id)a8 baseForPatchDescriptor:(id)a9
{
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v17 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v16 extendedStateQueue]);
  dispatch_assert_queue_V2(v17);

  id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v15));
  unsigned __int8 v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentStatusBySelector](self, "currentStatusBySelector"));
  [v19 setSafeObject:v14 forKey:v18];

  uint64_t v20 = objc_opt_class(&OBJC_CLASS___MAAutoAssetStatus);
  if ((objc_opt_isKindOfClass(v14, v20) & 1) == 0)
  {
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    uint64_t v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager updateCurrentAssetStatus:currentStatus:forAssetSelector:forActiveJobUUID:matchingAssetVersion:downloadingDescriptor:baseForPatchDescriptor:].cold.1();
    }
  }

  id v23 = (void *)objc_claimAutoreleasedReturnValue([v15 assetVersion]);

  if (!a7 && v23) {
    -[MADAutoAssetControlManager updateAssociatedNoVersionStatus:currentStatus:forAssetSelector:]( self,  "updateAssociatedNoVersionStatus:currentStatus:forAssetSelector:",  v13,  v14,  v15);
  }
}

- (void)updateAssociatedNoVersionStatus:(id)a3 currentStatus:(id)a4 forAssetSelector:(id)a5
{
  id v7 = a5;
  id v8 = a4;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  uint64_t v11 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 assetType]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSpecifier]);

  id v43 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( v11,  "initForAssetType:withAssetSpecifier:",  v12,  v13);
  id v14 = objc_alloc_init(&OBJC_CLASS___MAAutoAssetNotifications);
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v8 newerVersionAttributes]);
  -[MAAutoAssetNotifications setNewerVersionDiscovered:](v14, "setNewerVersionDiscovered:", v15 != 0LL);

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v8 newerVersionError]);
  -[MAAutoAssetNotifications setCheckForNewerFailure:](v14, "setCheckForNewerFailure:", v16 != 0LL);

  id v17 = (void *)objc_claimAutoreleasedReturnValue([v8 availableForUseAttributes]);
  -[MAAutoAssetNotifications setContentAvailableForUse:](v14, "setContentAvailableForUse:", v17 != 0LL);

  id v18 = (void *)objc_claimAutoreleasedReturnValue([v8 downloadProgress]);
  id v42 = v14;
  -[MAAutoAssetNotifications setDownloadPending:](v14, "setDownloadPending:", v18 != 0LL);

  unsigned __int8 v19 = (void *)objc_claimAutoreleasedReturnValue([v8 downloadProgress]);
  -[MAAutoAssetNotifications setDownloadProgress:](v14, "setDownloadProgress:", v19 != 0LL);

  uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v8 availableForUseAttributes]);
  uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v8 newerVersionAttributes]);
  unsigned int v38 = [v8 downloadUserInitiated];
  id v37 = (void *)objc_claimAutoreleasedReturnValue([v8 downloadProgress]);
  id v36 = [v8 downloadedNetworkBytes];
  id v35 = [v8 downloadedFilesystemBytes];
  unsigned __int8 v34 = [v8 downloadedAsPatch];
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v8 patchedFromBaseSelector]);
  id v21 = [v8 patchedFromBaseFilesystemBytes];
  unsigned __int8 v22 = [v8 patchingAttempted];
  LOBYTE(v19) = [v8 stagedPriorToAvailable];
  id v33 = (void *)objc_claimAutoreleasedReturnValue([v8 stagedFromOSVersion]);
  id v23 = (void *)objc_claimAutoreleasedReturnValue([v8 stagedFromBuildVersion]);
  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v8 availableForUseError]);
  id v25 = (void *)objc_claimAutoreleasedReturnValue([v8 patchingAttemptError]);
  id v26 = (void *)objc_claimAutoreleasedReturnValue([v8 newerVersionError]);

  LOBYTE(v32) = 0;
  BYTE1(v31) = (_BYTE)v19;
  LOBYTE(v31) = v22;
  LOBYTE(v30) = v34;
  id v27 = -[MADAutoAssetControlManager newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( self,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNever BeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemB ytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempte d:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage: withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v43,  v42,  v40,  v39,  1LL,  v38,  v37,  v36,  v35,  v30,  v20,  v21,  v31,  v33,  v23,  v32,  v24,  v25,  v26);

  id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v43));
  id v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentStatusBySelector](self, "currentStatusBySelector"));
  [v29 setSafeObject:v27 forKey:v28];
}

- (id)_currentSetStatusClearDownloadProgress:(id)a3 clearingSetStatus:(id)a4 forClearingReason:(id)a5
{
  id v51 = a3;
  id v8 = a4;
  id v50 = a5;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  id v11 = v8;
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 downloadProgress]);

  id v13 = v11;
  if (v12)
  {
    uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
    unsigned __int8 v48 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
    id v47 = (void *)objc_claimAutoreleasedReturnValue([v11 atomicInstancesDownloaded]);
    uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue([v11 catalogCachedAssetSetID]);
    uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue([v11 catalogDownloadedFromLive]);
    uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v11 catalogLastTimeChecked]);
    id v41 = (void *)objc_claimAutoreleasedReturnValue([v11 catalogPostedDate]);
    id v43 = (void *)objc_claimAutoreleasedReturnValue([v11 newerAtomicInstanceDiscovered]);
    uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v11 newerDiscoveredAtomicEntries]);
    unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue([v11 latestDownloadedAtomicInstance]);
    id v42 = (void *)objc_claimAutoreleasedReturnValue([v11 latestDowloadedAtomicInstanceEntries]);
    id v36 = (void *)objc_claimAutoreleasedReturnValue([v11 downloadedCatalogCachedAssetSetID]);
    unsigned __int8 v34 = (void *)objc_claimAutoreleasedReturnValue([v11 downloadedCatalogDownloadedFromLive]);
    uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v11 downloadedCatalogLastTimeChecked]);
    id v33 = (void *)objc_claimAutoreleasedReturnValue([v11 downloadedCatalogPostedDate]);
    id v28 = (void *)objc_claimAutoreleasedReturnValue([v11 currentNotifications]);
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v11 currentNeedPolicy]);
    id v29 = (void *)objc_claimAutoreleasedReturnValue([v11 schedulerPolicy]);
    id v26 = (void *)objc_claimAutoreleasedReturnValue([v11 stagerPolicy]);
    id v37 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
    id v35 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
    unsigned __int8 v27 = -[MADAutoAssetControlManager _haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:]( self,  "_haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:",  v37,  v35);
    uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
    unsigned __int8 v14 = -[MADAutoAssetControlManager _vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:]( self,  "_vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:",  v32,  v31);
    unsigned __int8 v15 = [v11 downloadUserInitiated];
    id v16 = [v11 downloadedNetworkBytes];
    id v17 = [v11 downloadedFilesystemBytes];
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v11 selectorsForStaging]);
    unsigned __int8 v19 = (void *)objc_claimAutoreleasedReturnValue([v11 availableForUseError]);
    uint64_t v20 = objc_claimAutoreleasedReturnValue([v11 newerVersionError]);
    id v21 = self;
    unsigned __int8 v22 = (void *)v20;
    LOBYTE(v25) = 1;
    BYTE2(v24) = v15;
    BYTE1(v24) = v14;
    LOBYTE(v24) = v27;
    id v13 = -[MADAutoAssetControlManager newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:extendingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( v21,  "newAssetSetStatus:forReason:forClientDomain:forAssetSetIdentifier:withAtomicInstancesDownloaded:withCatalogC achedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtom icInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloaded AtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDown loadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy: withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries: withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:exte ndingWithCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  v51,  v50,  v49,  v48,  v47,  v45,  v46,  v44,  v41,  v43,  v40,  v38,  v42,  v36,  v34,  v39,  v33,  v28,  v30,  v29,  v26,  v24,  0LL,  v16,  v17,  v25,  v18,  v19,  v20);
  }

  return v13;
}

- (id)notifyLockerJustLockedDescriptor:(id)a3 forClientInstance:(id)a4 withClientDesire:(id)a5 respondingToClientRequest:(id)a6 withClientCompletion:(id)a7
{
  id v12 = a3;
  id v48 = a4;
  id v13 = a5;
  id v14 = a6;
  unsigned __int8 v15 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v12 assetType]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSpecifier]);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v12 assetVersion]);
  id v19 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v15,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v16,  v17,  v18);

  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v14 clientRequestMessage]);
  id v21 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v20));

  unsigned __int8 v22 = (void *)objc_claimAutoreleasedReturnValue([v12 assetType]);
  id v23 = (void *)objc_claimAutoreleasedReturnValue([v12 assetId]);
  id AutoLocalUrlFromTypeAndIdWithPurpose = getAutoLocalUrlFromTypeAndIdWithPurpose(v22, v23, 2LL, @"auto");
  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(AutoLocalUrlFromTypeAndIdWithPurpose);

  if (v25)
  {
    if (!+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v21,  @"MA-AUTO(REPLY):LOCK_CONTENT")) {
      goto LABEL_7;
    }
    if (!v13)
    {
      id v29 = (id)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6102LL,  @"IssueClientReplyJobResponse",  0LL,  @"[NOTIFY-LOCKER] no auto-asset-desire provided in client request"));
      goto LABEL_14;
    }

    if (a7)
    {
      id v26 = (void *)objc_claimAutoreleasedReturnValue([v14 clientRequestMessage]);
      unsigned __int8 v27 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageDesire:]( self,  "clientRequestMessageDesire:",  v26));

      id v47 = v27;
      if (v27)
      {
        id v28 = v13;
        id v13 = v27;
      }

      else
      {
        id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        id v35 = (void *)objc_claimAutoreleasedReturnValue([v28 diag]);
        id v36 = objc_alloc(&OBJC_CLASS___NSString);
        id v37 = (void *)objc_claimAutoreleasedReturnValue([v14 summary]);
        unsigned int v38 = -[NSString initWithFormat:]( v36,  "initWithFormat:",  @"{notifyLockerAsIndicatedByJob} [NOTIFY-LOCKER] client lock request without desire for clientRequest:%@",  v37);
        [v35 trackAnomaly:@"AUTO-CONTROL" forReason:v38 withResult:6111 withError:0];
      }

      uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue([v48 autoAssetClientName]);
      uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue([v48 clientProcessName]);
      id v44 = [v48 clientProcessID];
      id v43 = (void *)objc_claimAutoreleasedReturnValue([v13 desireReason]);
      uint64_t v39 = objc_claimAutoreleasedReturnValue([v13 clientAssetPolicy]);
      uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v12 metadata]);
      id v49 = 0LL;
      id v41 = (void *)v39;
      +[MADAutoAssetLocker lockedByClient:forClientProcessName:withClientProcessID:forAssetSelector:forLockReason:withUsagePolicy:withLocalContentURL:withAssetAttributes:lockError:]( &OBJC_CLASS___MADAutoAssetLocker,  "lockedByClient:forClientProcessName:withClientProcessID:forAssetSelector:forLockReason:withUsagePolicy:withLocal ContentURL:withAssetAttributes:lockError:",  v46,  v45,  v44,  v19,  v43,  v39,  v25,  v40,  &v49);
      id v29 = v49;
    }

    else
    {
LABEL_7:
      id v29 = 0LL;
    }
  }

  else
  {
    uint64_t v30 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
    uint64_t v32 = -[NSString initWithFormat:]( v30,  "initWithFormat:",  @"unable to get local content URL | lockingDescriptor:%@",  v31);

    id v29 = (id)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6101LL,  @"notifyLockerJustLockedDescriptor",  0LL,  v32));
    id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    unsigned __int8 v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager notifyLockerJustLockedDescriptor:forClientInstance:withClientDesire:respondingToClientRequest:withClientCompletion:].cold.1();
    }
  }

- (id)notifyLockerAsIndicatedByJob:(id)a3
{
  id v4 = a3;
  id v5 = (id)objc_claimAutoreleasedReturnValue([v4 responseError]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 setJobInformation]);

  if (!v6)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v4 jobInformation]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequest]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 clientRequestMessage]);
    id v13 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v12));

    id v14 = (void *)objc_claimAutoreleasedReturnValue([v10 clientInstance]);
    id v15 = (id)objc_claimAutoreleasedReturnValue([v10 clientDesire]);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v10 foundContent]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v10 fullAssetSelector]);
    if (v5)
    {
LABEL_17:

      goto LABEL_18;
    }

    if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v13,  @"MA-AUTO(REPLY):LOCK_CONTENT"))
    {
      if (v15)
      {
        if (v16)
        {
          uint64_t v18 = objc_claimAutoreleasedReturnValue([v16 localContentURL]);
          if (v18)
          {
            id v19 = (void *)v18;
            uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v16 assetAttributes]);

            if (v20)
            {
              id v21 = (void *)objc_claimAutoreleasedReturnValue([v4 clientReplyCompletion]);

              if (v21)
              {
                unsigned __int8 v22 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequest]);
                id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 clientRequestMessage]);
                uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageDesire:]( self,  "clientRequestMessageDesire:",  v23));

                if (v46)
                {
                  uint64_t v24 = v15;
                  id v15 = v46;
                }

                else
                {
                  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
                  id v44 = (void *)objc_claimAutoreleasedReturnValue([v24 diag]);
                  unsigned __int8 v27 = objc_alloc(&OBJC_CLASS___NSString);
                  id v41 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
                  id v28 = -[NSString initWithFormat:]( v27,  "initWithFormat:",  @"{notifyLockerAsIndicatedByJob} [NOTIFY-LOCKER] client lock request without desire for eventInfo:%@",  v41);
                  [v44 trackAnomaly:@"AUTO-CONTROL" forReason:v28 withResult:6111 withError:0];
                }

                id v29 = (void *)objc_claimAutoreleasedReturnValue([v16 localContentURL]);
                if (v29)
                {
                  uint64_t v42 = objc_claimAutoreleasedReturnValue([v14 autoAssetClientName]);
                  uint64_t v45 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 clientProcessName]);
                  id v40 = [v14 clientProcessID];
                  uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v15 desireReason]);
                  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v15 clientAssetPolicy]);
                  unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue([v16 localContentURL]);
                  id v47 = 0LL;
                  id v37 = (void *)objc_claimAutoreleasedReturnValue([v16 assetAttributes]);
                  uint64_t v31 = (void *)v42;
                  +[MADAutoAssetLocker lockedByClient:forClientProcessName:withClientProcessID:forAssetSelector:forLockReason:withUsagePolicy:withLocalContentURL:withAssetAttributes:lockError:]( &OBJC_CLASS___MADAutoAssetLocker,  "lockedByClient:forClientProcessName:withClientProcessID:forAssetSelector:forLockReason:withUsagePoli cy:withLocalContentURL:withAssetAttributes:lockError:",  v42,  v45,  v40,  v17,  v39,  v30,  v38,  v37,  &v47);
                  id v5 = v47;
                }

                else
                {
                  uint64_t v32 = objc_alloc(&OBJC_CLASS___NSString);
                  id v33 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
                  unsigned __int8 v34 = -[NSString initWithFormat:]( v32,  "initWithFormat:",  @"found by job yet no local content URL | found:%@",  v33);

                  id v43 = v34;
                  id v5 = (id)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6101LL,  @"notifyLockerAsIndicatedByJob",  0LL,  v34));
                  id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                  id v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

                  uint64_t v45 = v36;
                  if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
                  {
                    uint64_t v31 = v43;
                    -[MADAutoAssetControlManager notifyLockerAsIndicatedByJob:].cold.1();
                  }

                  else
                  {
                    uint64_t v31 = v43;
                  }
                }

                goto LABEL_17;
              }

              goto LABEL_12;
            }
          }

          uint64_t v25 = @"[NOTIFY-LOCKER] found auto-asset without localContentURL and/or assetAttributes in response message";
        }

        else
        {
          uint64_t v25 = @"[NOTIFY-LOCKER] no indication of found auto-asset in response message";
        }
      }

      else
      {
        uint64_t v25 = @"[NOTIFY-LOCKER] no auto-asset-desire provided in client request";
      }

      id v5 = (id)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6102LL,  @"IssueClientReplyJobResponse",  0LL,  v25));
      goto LABEL_17;
    }

- (id)notifyLockerAsIndicatedBySetJob:(id)a3 withSetInstance:(id)a4 withSetDesire:(id)a5 forSetDescriptor:(id)a6 withClientReplyCompletion:(id)a7
{
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  id v15 = a3;
  id v16 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:notifyLockerAsIndicatedBySetJob",  v15);

  if (!v13)
  {
    unsigned __int8 v27 = @"[SET-NOTIFY-LOCKER] no auto-asset-set-desire provided in client request";
LABEL_10:
    a7 = (id)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6102LL,  @"IssueClientReplyJobResponse",  0LL,  v27));
    goto LABEL_11;
  }

  if (!v14)
  {
    unsigned __int8 v27 = @"[SET-NOTIFY-LOCKER] no indication of set-descriptor from set-job";
    goto LABEL_10;
  }

  if (!a7) {
    goto LABEL_15;
  }
  id v36 = 0LL;
  unsigned int v17 = -[MADAutoAssetControlManager verifySetDescriptorIsLockable:fromLocation:notLocakableError:]( self,  "verifySetDescriptorIsLockable:fromLocation:notLocakableError:",  v14,  @"notifyLockerAsIndicatedBySetJob",  &v36);
  id v18 = v36;
  id v19 = v18;
  if (v17)
  {
    unsigned __int8 v31 = -[MADAutoAssetControlManager isSetDescriptorCurrentlyLocked:forSetDescriptor:]( self,  "isSetDescriptorCurrentlyLocked:forSetDescriptor:",  @"{notifyLockerAsIndicatedBySetJob}",  v14);
    unsigned __int8 v34 = (void *)objc_claimAutoreleasedReturnValue([v12 autoAssetSetClientName]);
    id v33 = (void *)objc_claimAutoreleasedReturnValue([v12 clientProcessName]);
    id v32 = [v12 clientProcessID];
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v13 desireReason]);
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v13 clientAssetSetPolicy]);
    id v35 = v19;
    unsigned int v22 = +[MADAutoAssetLocker lockedSetByClient:forClientProcessName:withClientProcessID:lockingSetDescriptor:forLockReason:withSetUsagePolicy:lockError:]( &OBJC_CLASS___MADAutoAssetLocker,  "lockedSetByClient:forClientProcessName:withClientProcessID:lockingSetDescriptor:forLockReason:withSetUsagePolicy:lockError:",  v34,  v33,  v32,  v14,  v20,  v21,  &v35);
    a7 = v35;

    if (v22)
    {
      id v23 = (void *)objc_claimAutoreleasedReturnValue([v13 desireReason]);
      -[MADAutoAssetControlManager setLockUsageMapLockedSetDescriptor:forLockReason:]( self,  "setLockUsageMapLockedSetDescriptor:forLockReason:",  v14,  v23);

      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v13 clientAssetSetPolicy]);
      unsigned int v25 = [v24 supportingShortTermLocks];

      if (v25) {
        id v26 =  -[MADAutoAssetControlManager shortTermLockSetDescriptor:forSetDescriptor:]( self,  "shortTermLockSetDescriptor:forSetDescriptor:",  @"notifyLockerAsIndicatedBySetJob",  v14);
      }
    }

    else if ((v31 & 1) == 0)
    {
      -[MADAutoAssetControlManager secureCheckUngraftAll:forSetDescriptorNoLongerLocked:]( self,  "secureCheckUngraftAll:forSetDescriptorNoLongerLocked:",  v16,  v14);
    }
  }

  else
  {
    a7 = v18;
  }

- (void)_statsIncrementAutoAssetJobsStarted
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  objc_msgSend(v5, "setTotalAutoAssetJobsStarted:", (char *)objc_msgSend(v5, "totalAutoAssetJobsStarted") + 1);

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsIncrementAutoJobsFinished
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  objc_msgSend(v5, "setTotalAutoJobsFinished:", (char *)objc_msgSend(v5, "totalAutoJobsFinished") + 1);

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsIncrementStagerDetermineJobsStarted
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  objc_msgSend( v5,  "setTotalStagerDetermineJobsStarted:",  (char *)objc_msgSend(v5, "totalStagerDetermineJobsStarted") + 1);

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsIncrementStagerDetermineJobsFinished
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  objc_msgSend( v5,  "setTotalStagerDetermineJobsFinished:",  (char *)objc_msgSend(v5, "totalStagerDetermineJobsFinished") + 1);

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsIncrementStagerDownloadJobsStarted
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  objc_msgSend(v5, "setTotalStagerDownloadJobsStarted:", (char *)objc_msgSend(v5, "totalStagerDownloadJobsStarted") + 1);

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsIncrementStagerDownloadJobsFinished
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  objc_msgSend( v5,  "setTotalStagerDownloadJobsFinished:",  (char *)objc_msgSend(v5, "totalStagerDownloadJobsFinished") + 1);

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsIncrementResumedInFlightJobs
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  objc_msgSend(v5, "setTotalResumedInFlightJobs:", (char *)objc_msgSend(v5, "totalResumedInFlightJobs") + 1);

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsIncrementSchedulerTriggeredJobs
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  objc_msgSend(v5, "setTotalSchedulerTriggeredJobs:", (char *)objc_msgSend(v5, "totalSchedulerTriggeredJobs") + 1);

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsIncrementFailuresToStartJobs
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  objc_msgSend(v5, "setTotalFailuresToStartJobs:", (char *)objc_msgSend(v5, "totalFailuresToStartJobs") + 1);

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsIncrementPreviouslyDownloadedForDescriptor:(id)a3
{
  id v12 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  unsigned int v6 = [v12 isPatch];
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 previouslyDownloaded]);
  uint64_t v9 = v8;
  if (v6)
  {
    objc_msgSend(v8, "setPatchedAssets:", (char *)objc_msgSend(v8, "patchedAssets") + 1);

    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 previouslyDownloaded]);
    objc_msgSend( v11,  "setPatchedBytes:",  (char *)-[MADAutoAssetControlManager _bytesDownloadedForDescriptor:](self, "_bytesDownloadedForDescriptor:", v12)
    + (void)[v11 patchedBytes]);
  }

  else
  {
    objc_msgSend(v8, "setFullAssets:", (char *)objc_msgSend(v8, "fullAssets") + 1);

    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 previouslyDownloaded]);
    objc_msgSend( v11,  "setFullBytes:",  (char *)-[MADAutoAssetControlManager _bytesDownloadedForDescriptor:](self, "_bytesDownloadedForDescriptor:", v12)
    + (void)[v11 fullBytes]);
  }

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsIncrementDownloadedForDescriptor:(id)a3
{
  id v12 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  unsigned int v6 = [v12 isPatch];
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 totalDownloaded]);
  uint64_t v9 = v8;
  if (v6)
  {
    objc_msgSend(v8, "setPatchedAssets:", (char *)objc_msgSend(v8, "patchedAssets") + 1);

    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 totalDownloaded]);
    objc_msgSend( v11,  "setPatchedBytes:",  (char *)-[MADAutoAssetControlManager _bytesDownloadedForDescriptor:](self, "_bytesDownloadedForDescriptor:", v12)
    + (void)[v11 patchedBytes]);
  }

  else
  {
    objc_msgSend(v8, "setFullAssets:", (char *)objc_msgSend(v8, "fullAssets") + 1);

    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 totalDownloaded]);
    objc_msgSend( v11,  "setFullBytes:",  (char *)-[MADAutoAssetControlManager _bytesDownloadedForDescriptor:](self, "_bytesDownloadedForDescriptor:", v12)
    + (void)[v11 fullBytes]);
  }

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsIncrementPromotedForDescriptor:(id)a3
{
  id v12 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  unsigned int v6 = [v12 isPatch];
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 totalPromoted]);
  uint64_t v9 = v8;
  if (v6)
  {
    objc_msgSend(v8, "setPatchedAssets:", (char *)objc_msgSend(v8, "patchedAssets") + 1);

    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 totalPromoted]);
    objc_msgSend( v11,  "setPatchedBytes:",  (char *)-[MADAutoAssetControlManager _bytesDownloadedForDescriptor:](self, "_bytesDownloadedForDescriptor:", v12)
    + (void)[v11 patchedBytes]);
  }

  else
  {
    objc_msgSend(v8, "setFullAssets:", (char *)objc_msgSend(v8, "fullAssets") + 1);

    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 totalPromoted]);
    objc_msgSend( v11,  "setFullBytes:",  (char *)-[MADAutoAssetControlManager _bytesDownloadedForDescriptor:](self, "_bytesDownloadedForDescriptor:", v12)
    + (void)[v11 fullBytes]);
  }

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (void)_statsIncrementRemovedForDescriptor:(id)a3
{
  id v12 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  unsigned int v6 = [v12 isPatch];
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 totalRemoved]);
  uint64_t v9 = v8;
  if (v6)
  {
    objc_msgSend(v8, "setPatchedAssets:", (char *)objc_msgSend(v8, "patchedAssets") + 1);

    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 totalRemoved]);
    objc_msgSend( v11,  "setPatchedBytes:",  (char *)-[MADAutoAssetControlManager _bytesDownloadedForDescriptor:](self, "_bytesDownloadedForDescriptor:", v12)
    + (void)[v11 patchedBytes]);
  }

  else
  {
    objc_msgSend(v8, "setFullAssets:", (char *)objc_msgSend(v8, "fullAssets") + 1);

    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 totalRemoved]);
    objc_msgSend( v11,  "setFullBytes:",  (char *)-[MADAutoAssetControlManager _bytesDownloadedForDescriptor:](self, "_bytesDownloadedForDescriptor:", v12)
    + (void)[v11 fullBytes]);
  }

  -[MADAutoAssetControlManager _statsMaintainReporting](self, "_statsMaintainReporting");
}

- (id)_statsCombinedCopy:(BOOL)a3
{
  BOOL v3 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned int v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (-[MADAutoAssetControlManager stagerResumed](self, "stagerResumed"))
  {
    id v16 = 0LL;
    id v17 = 0LL;
    id v14 = 0LL;
    id v15 = 0LL;
    +[MADAutoAssetStager controlStatisticsClientRepliesSuccess:clientRepliesFailure:totalStaged:totalUnstaged:clearingAfter:]( &OBJC_CLASS___MADAutoAssetStager,  "controlStatisticsClientRepliesSuccess:clientRepliesFailure:totalStaged:totalUnstaged:clearingAfter:",  &v17,  &v16,  &v15,  &v14,  v3);
    id v7 = v17;
    id v8 = v16;
    id v9 = v15;
    id v10 = v14;
    id v11 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _combinedStatisticsWithStagerClientRepliesSuccess:withStagerClientRepliesFailure:withStagerTotalStaged:withStagerTotalUnstaged:]( self,  "_combinedStatisticsWithStagerClientRepliesSuccess:withStagerClientRepliesFailure:withStagerTotalStaged :withStagerTotalUnstaged:",  v7,  v8,  v9,  v10));
  }

  else
  {
    id v7 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
    id v11 = [v7 copy];
  }

  if (v3)
  {
    -[MADAutoAssetControlManager _statsClearingAfterReporting](self, "_statsClearingAfterReporting");
    id v12 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetControlStatistics);
    -[MADAutoAssetControlManager setStatistics:](self, "setStatistics:", v12);
  }

  return v11;
}

- (void)_statsClearingAfterReporting
{
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  unsigned int v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v5 oslog]);

  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
    int v10 = 138543618;
    id v11 = v7;
    __int16 v12 = 2114;
    id v13 = v9;
    _os_log_impl( &dword_0,  v6,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] AUTO-STATISTICS | clearing after | statistics:%{public}@",  (uint8_t *)&v10,  0x16u);
  }

  -[MADAutoAssetControlManager _statsRestartNextMaintentanceReport](self, "_statsRestartNextMaintentanceReport");
}

- (void)_statsRestartNextMaintentanceReport
{
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v5 timeIntervalSince1970];
  double v7 = v6;

  -[MADAutoAssetControlManager setStatisticsNextMaintenanceReport:]( self,  "setStatisticsNextMaintenanceReport:",  v7 + 900.0);
}

- (int64_t)_scheduleAndCreateSetConfiguration:(id)a3 fromLocation:(id)a4 errorString:(id *)a5
{
  id v8 = a3;
  id v9 = a4;
  int v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  __int16 v12 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_scheduleAndCreateSetConfiguration",  v9);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequestMessage]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 messageName]);

  id v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  v12,  v8));
  id v40 = 0LL;
  int64_t v16 = -[MADAutoAssetControlManager setConfigurationSelectUsingInfoInstance:dueToMessageName:selectedConfig:]( self,  "setConfigurationSelectUsingInfoInstance:dueToMessageName:selectedConfig:",  v15,  v14,  &v40);
  id v17 = v40;
  id v18 = v17;
  int64_t v19 = 6555LL;
  if (v16 == 6555)
  {
    uint64_t v20 = @"An empty configuration for a set is not allowed";
    goto LABEL_13;
  }

  if (v17)
  {
    uint64_t v20 = 0LL;
LABEL_12:
    int64_t v19 = v16;
    goto LABEL_13;
  }

  id v21 = (void *)objc_claimAutoreleasedReturnValue([v15 autoAssetEntries]);

  if (!v21) {
    goto LABEL_11;
  }
  if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v14,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC"))
  {
    id v39 = 0LL;
    int64_t v19 = -[MADAutoAssetControlManager setConfigurationNewSetConfiguration:forSetInfoInstance:dueToMessageName:selectedConfig:]( self,  "setConfigurationNewSetConfiguration:forSetInfoInstance:dueToMessageName:selectedConfig:",  v12,  v15,  v14,  &v39);
    id v18 = v39;
    if (v19) {
      uint64_t v20 = @"Failed to modify asset configuration with the provided asset configuration";
    }
    else {
      uint64_t v20 = 0LL;
    }
    goto LABEL_13;
  }

  if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v14,  @"MA-AUTO-SET:FORM_SUB_ATOMIC") & 1) != 0)
  {
LABEL_11:
    uint64_t v20 = 0LL;
    id v18 = 0LL;
    goto LABEL_12;
  }

  unsigned __int8 v34 = (void *)objc_claimAutoreleasedReturnValue([v15 autoAssetEntries]);
  id v35 = a5;
  id v36 = [v34 count];

  id v18 = 0LL;
  BOOL v37 = v36 == 0LL;
  a5 = v35;
  if (v37) {
    uint64_t v20 = 0LL;
  }
  else {
    uint64_t v20 = @"A set configuration different than the currently defined set configuration is provided";
  }
  if (v37) {
    int64_t v19 = v16;
  }
  else {
    int64_t v19 = 6554LL;
  }
LABEL_13:
  if (-[MADAutoAssetControlManager _setMessageInvolvesSchedulerPolicy:]( self,  "_setMessageInvolvesSchedulerPolicy:",  v14))
  {
    unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
    uint64_t v23 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageSetDesire:](self, "clientRequestMessageSetDesire:", v22));
    int64_t v38 = v19;
    uint64_t v24 = self;
    unsigned int v25 = v14;
    id v26 = v8;
    unsigned __int8 v27 = v15;
    id v28 = v20;
    id v29 = v12;
    uint64_t v30 = a5;
    unsigned __int8 v31 = (void *)v23;

    id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 clientAssetSetPolicy]);
    a5 = v30;
    __int16 v12 = v29;
    uint64_t v20 = v28;
    id v15 = v27;
    id v8 = v26;
    id v14 = v25;
    self = v24;
    int64_t v19 = v38;
    if (!v18) {
      goto LABEL_19;
    }
  }

  else
  {
    id v32 = 0LL;
    if (!v18) {
      goto LABEL_19;
    }
  }

  if (-[MADAutoAssetControlManager _setMessageShouldBeScheduled:forSetConfiguration:forLatestEventInfo:]( self,  "_setMessageShouldBeScheduled:forSetConfiguration:forLatestEventInfo:",  v14,  v18,  v8))
  {
    -[MADAutoAssetControlManager _scheduleSetConfiguration:withClientSetPolicy:]( self,  "_scheduleSetConfiguration:withClientSetPolicy:",  v18,  v32);
  }

- (BOOL)_setMessageCanCreateSetConfiguration:(id)a3
{
  id v3 = a3;
  BOOL v4 = (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:NEED_FOR_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:LOCK_ATOMIC") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v3,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC");

  return v4;
}

- (BOOL)_messageBlockedUntilDownloadManagerSync:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  double v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:INTEREST_IN_CONTENT") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:CHECK_FOR_NEWER") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:DETERMINE_IF_AVAILABLE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:LOCK_CONTENT") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:MAP_LOCKED_CONTENT_TO_EXCLAVE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:CONTINUE_LOCK_USAGE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:END_LOCK_USAGE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:END_PREVIOUS_LOCKS") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:END_ALL_PREVIOUS_LOCKS") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:CANCEL_ACTIVITY_FOR_SELECTOR") & 1) != 0
    || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:ELIMINATE_ALL_FOR_SELECTOR") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:ELIMINATE_ALL_FOR_ASSET_TYPE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:ELIMINATE_PROMOTED_NEVER_LOCKED_FOR_SELECTOR") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-STAGE:DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-STAGE:DETERMINE_ALL_AVAILABLE_FOR_UPDATE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-STAGE:DETERMINE_ALL_AVAILABLE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-STAGE:DOWNLOAD_GROUPS") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-STAGE:DOWNLOAD_ALL") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-STAGE:CANCEL_OPERATION") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-STAGE:PURGE_ALL") & 1) != 0
    || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-STAGE:ERASE_ALL") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:NEED_FOR_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:LOCK_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:MAP_LOCKED_ATOMIC_ENTRY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:FORM_SUB_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:CONTINUE_ATOMIC_LOCK") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:END_ATOMIC_LOCK") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:END_ATOMIC_LOCKS_FOR_CLIENT") & 1) != 0
    || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:ASSET_SET_FOR_STAGING") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:CURRENT_SET_STATUS") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET:ELIMINATE_ATOMIC") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET-CONTROL:KNOWN_ASSET_SET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET-CONTROL:ACTIVE_SET_JOB_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET-CONTROL:SCHEDULED_SET_JOB_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET-CONTROL:LOCKED_ASSET_SET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET-CONTROL:STAGED_ASSET_SET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET-CONTROL:ASSET_SETS_OVERVIEW") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-SET-CONTROL:SET_INSTANCE_INFO") & 1) != 0
    || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:KNOWN_ASSET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:AVAILABLE_FOR_STAGING_ASSET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:ACTIVE_JOB_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:SCHEDULED_JOB_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:LOCKED_ASSET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:STAGED_ASSET_SUMMARY") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_UNLOCK") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_FORGET") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_PURGE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_ABANDON") & 1) != 0)
  {
    BOOL v7 = 1;
  }

  else
  {
    if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO:CURRENT_STATUS") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:CONTROL_STATISTICS") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:SIM_CACHE_DELETE_DETERMINE_RECLAIMABLE") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:SIM_CACHE_DELETE_RECLAIM_SPACE") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v4,  @"MA-AUTO-CONTROL:SIM_SET_JOB_OPERATION") & 1) == 0)
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      int v10 = (void *)objc_claimAutoreleasedReturnValue([v9 diag]);
      id v11 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{_messageBlockedUntilDownloadManagerSync} unknown messageName:%@",  v4);
      [v10 trackAnomaly:@"AUTO-CONTROL" forReason:v11 withResult:6106 withError:0];
    }

    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_messageBlockedUntilFirstUnlock:(id)a3 forAssetSelector:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  if (v7)
  {
    if (+[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock"))
    {
      char v10 = 1;
    }

    else
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updatePolicyForSelector:](self, "_updatePolicyForSelector:", v7));
      char v10 = [v11 blockIfBeforeFirstUnlock]
         && ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v6,  @"MA-AUTO:INTEREST_IN_CONTENT") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v6,  @"MA-AUTO:CHECK_FOR_NEWER") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v6,  @"MA-AUTO:DETERMINE_IF_AVAILABLE") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v6,  @"MA-AUTO:LOCK_CONTENT"));
    }
  }

  else
  {
    char v10 = 0;
  }

  return v10;
}

- (BOOL)_messageBlockedUntilFirstUnlock:(id)a3 forSetInstance:(id)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (a4) {
    return +[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock");
  }
  else {
    return 0;
  }
}

- (BOOL)_messageAssetPolicyDownloadUserInitiated:(id)a3 forClientRequest:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v6,  @"MA-AUTO:INTEREST_IN_CONTENT") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v6,  @"MA-AUTO:CHECK_FOR_NEWER") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v6,  @"MA-AUTO:LOCK_CONTENT"))
  {
    char v10 = (void *)objc_claimAutoreleasedReturnValue([v7 clientRequestMessage]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageDesire:](self, "clientRequestMessageDesire:", v10));

    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 clientAssetPolicy]);
  }

  else
  {
    if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v6,  @"MA-AUTO-SET:NEED_FOR_ATOMIC") & 1) == 0 && (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v6,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) == 0 && !+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v6,  @"MA-AUTO-SET:LOCK_ATOMIC"))
    {
      unsigned __int8 v14 = 0;
      goto LABEL_6;
    }

    id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetDesire:]( self,  "clientRequestMessageSetDesire:",  v7));
    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 clientAssetSetPolicy]);
  }

  id v13 = v12;
  unsigned __int8 v14 = [v12 userInitiated];

LABEL_6:
  return v14;
}

- (void)_routeClientRequest:(id)a3 alreadyScheduledSelector:(BOOL)a4 fromLocation:(id)a5
{
  BOOL v6 = a4;
  id v8 = a3;
  id v9 = a5;
  char v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  __int16 v12 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_routeClientReuest",  v9);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequestMessage]);
  uint64_t v105 = objc_claimAutoreleasedReturnValue([v13 messageName]);

  int IsInternalAllowed = _MAPreferencesIsInternalAllowed();
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
  unsigned int v16 = -[MADAutoAssetControlManager _isClientRequestForSetJob:](self, "_isClientRequestForSetJob:", v15);

  __int128 v104 = v9;
  if (v16)
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  v9,  v8));
    if (v17)
    {
      uint64_t v108 = 0LL;
      id v18 = 0LL;
      id v19 = 0LL;
      uint64_t v20 = (void *)v105;
      if (-[MADAutoAssetControlManager _doesClientRequestInvolveSetConfiguration:]( self,  "_doesClientRequestInvolveSetConfiguration:",  v8)
        && (id v107 = 0LL,
            id v19 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationFromMessageName:withInfoInstance:errorCode:errorDescription:]( self,  "setConfigurationFromMessageName:withInfoInstance:errorCode:errorDescription:",  v105,  v17,  &v108,  &v107)),  v18 = v107,  !v19))
      {
        -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v8,  v108,  v104,  v18);
      }

      else if (!-[MADAutoAssetControlManager setPolicyValidate:fromLocation:]( self,  "setPolicyValidate:fromLocation:",  v8,  v12))
      {
        __int128 v103 = v12;
        id v21 = (void *)objc_claimAutoreleasedReturnValue([v17 clientDomainName]);
        unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSetIdentifier]);
        uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetJobForClientDomain:byIdentifier:]( self,  "locateSetJobForClientDomain:byIdentifier:",  v21,  v22));

        if (v23)
        {
          if (![v23 beingCanceled])
          {
            __int128 v101 = v23;
            goto LABEL_26;
          }

          uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          unsigned int v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
            unsigned __int8 v27 = (NSString *)objc_claimAutoreleasedReturnValue([v8 summary]);
            *(_DWORD *)int buf = 138543618;
            id v110 = v26;
            __int16 v111 = 2114;
            id v112 = v27;
            _os_log_impl( &dword_0,  v25,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_routeClientRequest}\n [CANCEL-SET-JOB] active set-job being canceled - not considering as active job | set-eventInfo:%{public}@",  buf,  0x16u);
          }
        }

        __int128 v101 = 0LL;
LABEL_26:
        uint64_t v20 = (void *)v105;

        if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET:CURRENT_SET_STATUS"))
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetClientCurrentStatusRequest:forAutoJob:]( self,  "handleSetClientCurrentStatusRequest:forAutoJob:",  v8,  v101);
LABEL_63:
          id v29 = 0LL;
LABEL_67:
          __int16 v12 = v103;
          goto LABEL_68;
        }

        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET-CONTROL:KNOWN_ASSET_SET_SUMMARY") & IsInternalAllowed) == 1)
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetControlClientKnownAssetSetSummaryRequest:forAutoJob:]( self,  "handleSetControlClientKnownAssetSetSummaryRequest:forAutoJob:",  v8,  v101);
          goto LABEL_63;
        }

        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET-CONTROL:ACTIVE_SET_JOB_SUMMARY") & IsInternalAllowed) == 1)
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetControlClientActiveSetSummaryRequest:forAutoJob:]( self,  "handleSetControlClientActiveSetSummaryRequest:forAutoJob:",  v8,  v101);
          goto LABEL_63;
        }

        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET-CONTROL:SCHEDULED_SET_JOB_SUMMARY") & IsInternalAllowed) == 1)
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetControlClientScheduledSetJobSummaryRequest:forAutoJob:]( self,  "handleSetControlClientScheduledSetJobSummaryRequest:forAutoJob:",  v8,  v101);
          goto LABEL_63;
        }

        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET-CONTROL:LOCKED_ASSET_SET_SUMMARY") & IsInternalAllowed) == 1)
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetControlClientLockedAssetSetSummaryRequest:forAutoJob:]( self,  "handleSetControlClientLockedAssetSetSummaryRequest:forAutoJob:",  v8,  v101);
          goto LABEL_63;
        }

        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET-CONTROL:STAGED_ASSET_SET_SUMMARY") & IsInternalAllowed) == 1)
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetControlClientStagedAssetSetSummaryRequest:forAutoJob:]( self,  "handleSetControlClientStagedAssetSetSummaryRequest:forAutoJob:",  v8,  v101);
          goto LABEL_63;
        }

        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET-CONTROL:ASSET_SETS_OVERVIEW") & IsInternalAllowed) == 1)
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetControlClientAssetSetsOverviewRequest:forAutoJob:]( self,  "handleSetControlClientAssetSetsOverviewRequest:forAutoJob:",  v8,  v101);
          goto LABEL_63;
        }

        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET-CONTROL:SET_INSTANCE_INFO") & IsInternalAllowed) == 1)
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetControlClientInstanceInfoRequest:forAutoJob:]( self,  "handleSetControlClientInstanceInfoRequest:forAutoJob:",  v8,  v101);
          goto LABEL_63;
        }

        if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET:NEED_FOR_ATOMIC"))
        {
          -[MADAutoAssetControlManager handleSetClientNeedForAtomicRequest:fromLocation:]( self,  "handleSetClientNeedForAtomicRequest:fromLocation:",  v8,  v104);
LABEL_58:
          id v29 = 0LL;
          unsigned __int8 v31 = v101;
          __int16 v12 = v103;
          goto LABEL_68;
        }

        if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET:ALTER_ENTRIES_REPRESENTING_ATOMIC"))
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetClientAlterEntriesRepresentingAtomicRequest:forAutoJob:alteringFromSetConfiguration:]( self,  "handleSetClientAlterEntriesRepresentingAtomicRequest:forAutoJob:alteringFromSetConfiguration:",  v8,  v101,  v19);
          goto LABEL_63;
        }

        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET:CHECK_ATOMIC") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET:LOCK_ATOMIC"))
        {
          if (!-[MADAutoAssetControlManager handleClientPotentialSetJob:forAutoJob:fromLocation:]( self,  "handleClientPotentialSetJob:forAutoJob:fromLocation:",  v8,  v101,  v104)) {
            goto LABEL_58;
          }
          if (+[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock"))
          {
            int64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
            -[MADAutoAssetControlManager timerStartForRequest:fromLocation:]( self,  "timerStartForRequest:fromLocation:",  v38,  v103);

            id v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsAwaitingSync](self, "clientRequestsAwaitingSync"));
            [v39 addObject:v8];

            id v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue([v40 oslog]);

            if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              id v43 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
              *(_DWORD *)int buf = 138543874;
              id v110 = v42;
              __int16 v111 = 2114;
              id v112 = v103;
              __int16 v113 = 2114;
              int64_t v114 = v43;
              _os_log_impl( &dword_0,  v41,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:_routeClientRequest} [SET_CLIENT_REQUESTS_AWAITING_SYNC] | job queued since dev ice before first-unlock | eventInfo:%{public}@",  buf,  0x20u);
            }

            id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
            uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue([v44 totalQueuedClientRequests]);
            uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
            -[MADAutoAssetControlManager _statsIncrement:forClientRequest:]( self,  "_statsIncrement:forClientRequest:",  v45,  v46);

            id v29 = 0LL;
            goto LABEL_135;
          }

          id v29 = 0LL;
LABEL_90:
          if (v101)
          {
            objc_msgSend(v101, "setClientRequestCount:", (char *)objc_msgSend(v101, "clientRequestCount") + 1);
            uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
            -[MADAutoAssetControlManager timerStartForRequest:fromLocation:]( self,  "timerStartForRequest:fromLocation:",  v56,  v103);

            uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
            if (v16)
            {
              unsigned __int8 v31 = v101;
              [v101 startHandlingClientRequest:v57 withControlInformation:0];
            }

            else
            {
              uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([v29 clientAssetSelector]);
              uint64_t v67 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager jobControlInformationForSelector:]( self,  "jobControlInformationForSelector:",  v66));
              unsigned __int8 v31 = v101;
              [v101 startHandlingClientRequest:v57 withControlInformation:v67];
            }

            goto LABEL_142;
          }

          uint64_t v58 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
          __int128 v100 = (void *)objc_claimAutoreleasedReturnValue([v58 UUIDString]);

          if (v16)
          {
            uint64_t v59 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
            __int128 v102 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetDesire:]( self,  "clientRequestMessageSetDesire:",  v59));

            id v106 = 0LL;
            int64_t v98 = -[MADAutoAssetControlManager setConfigurationSelectUsingInfoInstance:dueToMessageName:selectedConfig:]( self,  "setConfigurationSelectUsingInfoInstance:dueToMessageName:selectedConfig:",  v17,  v105,  &v106);
            id v19 = v106;
            if (v19)
            {
              uint64_t v60 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceUUIDForNewSetJob:]( self,  "atomicInstanceUUIDForNewSetJob:",  v17));

              uint64_t v61 = objc_alloc(&OBJC_CLASS___MADAutoSetDescriptor);
              uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([v17 clientDomainName]);
              uint64_t v63 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSetIdentifier]);
              __int128 v100 = (void *)v60;
              id v99 = -[MADAutoSetDescriptor initForClientDomainName:forAssetSetIdentifier:withDiscoveredAtomicInstance:withDiscoveredAtomicEntries:]( v61,  "initForClientDomainName:forAssetSetIdentifier:withDiscoveredAtomicInstance:withDiscoveredAtomicEntries:",  v62,  v63,  v60,  0LL);

              uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue([v17 autoAssetEntries]);
              if (v64) {
                uint64_t v65 = v17;
              }
              else {
                uint64_t v65 = v19;
              }
              unsigned int v73 = (void *)objc_claimAutoreleasedReturnValue([v65 autoAssetEntries]);
              [v99 setRequestedAutoAssetEntries:v73];

              unsigned int v74 = (void *)objc_claimAutoreleasedReturnValue([v17 clientDomainName]);
              uint64_t v75 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSetIdentifier]);
              unsigned __int8 v76 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedLatest:forAssetSetIdentifier:]( self,  "locateSetDescriptorDownloadedLatest:forAssetSetIdentifier:",  v74,  v75));

              if (v76)
              {
                id v77 = (void *)objc_claimAutoreleasedReturnValue([v76 downloadedCatalogCachedAssetSetID]);
                [v99 setDownloadedCatalogCachedAssetSetID:v77];

                __int128 v78 = (void *)objc_claimAutoreleasedReturnValue([v76 downloadedCatalogDownloadedFromLive]);
                [v99 setDownloadedCatalogDownloadedFromLive:v78];

                id v79 = (void *)objc_claimAutoreleasedReturnValue([v76 downloadedCatalogLastTimeChecked]);
                [v99 setDownloadedCatalogLastTimeChecked:v79];

                id v80 = (void *)objc_claimAutoreleasedReturnValue([v76 downloadedCatalogPostedDate]);
                [v99 setDownloadedCatalogPostedDate:v80];
              }

              id v81 = objc_alloc(&OBJC_CLASS___MADAutoAssetJob);
              id v82 = [v19 copy];
              id v83 = -[MADAutoAssetJob initForSetInstance:withSetDesire:usingSetConfiguration:usingSetDescriptor:withAutoAssetUUID:]( v81,  "initForSetInstance:withSetDesire:usingSetConfiguration:usingSetDescriptor:withAutoAssetUUID:",  v17,  v102,  v82,  v99,  v60);

              __int128 v101 = v83;
              if (v83) {
                goto LABEL_125;
              }
              if (v98) {
                uint64_t v71 = v98;
              }
              else {
                uint64_t v71 = 6101LL;
              }
            }

            else
            {
              id v72 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"unable to determine valid set-configuration when REQUIRED for operation [%@]",  v105);

              id v99 = 0LL;
              if (v98) {
                uint64_t v71 = v98;
              }
              else {
                uint64_t v71 = 6101LL;
              }
              if (v72) {
                goto LABEL_133;
              }
            }
          }

          else
          {
            uint64_t v68 = objc_alloc(&OBJC_CLASS___MADAutoAssetJob);
            id v69 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
            id v70 = -[MADAutoAssetJob initForInstance:withAutoAssetUUID:downloadingUserInitiated:]( v68,  "initForInstance:withAutoAssetUUID:downloadingUserInitiated:",  v29,  v100,  -[MADAutoAssetControlManager _messageAssetPolicyDownloadUserInitiated:forClientRequest:]( self,  "_messageAssetPolicyDownloadUserInitiated:forClientRequest:",  v105,  v69));

            id v99 = 0LL;
            __int128 v101 = v70;
            if (v70)
            {
LABEL_125:
              objc_msgSend(v101, "setClientRequestCount:", (char *)objc_msgSend(v101, "clientRequestCount") + 1);
              if (v16)
              {
                id v84 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequestMessage]);
                -[MADAutoAssetControlManager addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:usingSetDescriptor:]( self,  "addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatch Descriptor:usingSetDescriptor:",  v101,  0LL,  v100,  v84,  0LL,  0LL,  v99);

                id v85 = (void *)objc_claimAutoreleasedReturnValue([v99 clientDomainName]);
                uint64_t v86 = (void *)objc_claimAutoreleasedReturnValue([v99 assetSetIdentifier]);
                id v72 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v85,  v86);

                uint64_t v87 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager activeSetDescriptorsByIdentifier]( self,  "activeSetDescriptorsByIdentifier"));
                [v87 setSafeObject:v99 forKey:v72];

                id v88 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager activeSetDescriptorsByInstance]( self,  "activeSetDescriptorsByInstance"));
                id v89 = (void *)objc_claimAutoreleasedReturnValue([v99 discoveredAtomicInstance]);
                [v88 setSafeObject:v99 forKey:v89];

                id v90 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
                -[MADAutoAssetControlManager timerStartForRequest:fromLocation:]( self,  "timerStartForRequest:fromLocation:",  v90,  v103);

                -[MADAutoAssetControlManager _statsIncrementAutoAssetJobsStarted]( self,  "_statsIncrementAutoAssetJobsStarted");
                id v91 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
                [v101 startHandlingClientRequest:v91 withControlInformation:0];
              }

              else
              {
                id v92 = (void *)objc_claimAutoreleasedReturnValue([v29 clientAssetSelector]);
                id v93 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequestMessage]);
                -[MADAutoAssetControlManager addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:usingSetDescriptor:]( self,  "addToCurrentJobs:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatch Descriptor:usingSetDescriptor:",  v101,  v92,  v100,  v93,  0LL,  0LL,  0LL);

                id v94 = (void *)objc_claimAutoreleasedReturnValue([v29 clientAssetSelector]);
                id v95 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequestMessage]);
                -[MADAutoAssetControlManager _trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescriptor:baseForPatchDescriptor:message:]( self,  "_trackActiveDescriptor:operation:usingSelector:withJobUUID:triggeredByClientMessage:downloadingDescrip tor:baseForPatchDescriptor:message:",  v104,  @"ENTRY_ADD",  v94,  v100,  v95,  0LL,  0LL,  @"auto-asset-job started");

                __int16 v96 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
                -[MADAutoAssetControlManager timerStartForRequest:fromLocation:]( self,  "timerStartForRequest:fromLocation:",  v96,  v103);

                -[MADAutoAssetControlManager _statsIncrementAutoAssetJobsStarted]( self,  "_statsIncrementAutoAssetJobsStarted");
                id v72 = (__CFString *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
                id v91 = (void *)objc_claimAutoreleasedReturnValue([v29 clientAssetSelector]);
                id v97 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager jobControlInformationForSelector:]( self,  "jobControlInformationForSelector:",  v91));
                [v101 startHandlingClientRequest:v72 withControlInformation:v97];
              }

              goto LABEL_134;
            }

            uint64_t v71 = 6101LL;
          }

          id v72 = @"unable to allocate auto-asset-job";
LABEL_133:
          -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v8,  v71,  v103,  v72);
          -[MADAutoAssetControlManager _statsIncrementFailuresToStartJobs](self, "_statsIncrementFailuresToStartJobs");
          __int128 v101 = 0LL;
LABEL_134:

          goto LABEL_135;
        }

        if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET:MAP_LOCKED_ATOMIC_ENTRY"))
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetClientMapLockedAtomicEntryRequest:forAutoJob:fromLocation:]( self,  "handleSetClientMapLockedAtomicEntryRequest:forAutoJob:fromLocation:",  v8,  v101,  v104);
LABEL_141:
          id v29 = 0LL;
          goto LABEL_142;
        }

        if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET:FORM_SUB_ATOMIC"))
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetClientFormSubAtomicRequest:forAutoJob:]( self,  "handleSetClientFormSubAtomicRequest:forAutoJob:",  v8,  v101);
          goto LABEL_141;
        }

        if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET:CONTINUE_ATOMIC_LOCK"))
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetClientContinueAtomicLockRequest:forAutoJob:]( self,  "handleSetClientContinueAtomicLockRequest:forAutoJob:",  v8,  v101);
          goto LABEL_141;
        }

        if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET:END_ATOMIC_LOCK"))
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetClientEndAtomicLockRequest:forAutoJob:]( self,  "handleSetClientEndAtomicLockRequest:forAutoJob:",  v8,  v101);
          goto LABEL_141;
        }

        if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET:END_ATOMIC_LOCKS_FOR_CLIENT"))
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetClientEndAtomicLocksForClientRequest:forAutoJob:]( self,  "handleSetClientEndAtomicLocksForClientRequest:forAutoJob:",  v8,  v101);
          goto LABEL_141;
        }

        if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET:ELIMINATE_ATOMIC"))
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetClientEliminateAtomicRequest:forAutoJob:]( self,  "handleSetClientEliminateAtomicRequest:forAutoJob:",  v8,  v101);
          goto LABEL_141;
        }

        if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-SET:ASSET_SET_FOR_STAGING"))
        {
          unsigned __int8 v31 = v101;
          -[MADAutoAssetControlManager handleSetClientAssetSetForStagingRequest:forAutoJob:]( self,  "handleSetClientAssetSetForStagingRequest:forAutoJob:",  v8,  v101);
          goto LABEL_141;
        }

        id v29 = 0LL;
LABEL_144:
        __int16 v12 = v103;
        -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v8,  6106LL,  v103,  @"unknown auto-asset command request received");
        goto LABEL_136;
      }

      id v29 = 0LL;
      unsigned __int8 v31 = 0LL;
      goto LABEL_68;
    }

    id v32 = objc_alloc(&OBJC_CLASS___NSString);
    id v33 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
    unsigned __int8 v34 = -[NSString initWithFormat:]( v32,  "initWithFormat:",  @"{%@} | invalid set-eventInfo (instance:MISSING) | set-eventInfo:%@",  v12,  v33);
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v8,  6102LL,  v9,  v34);

    id v29 = 0LL;
  }

  else
  {
    __int128 v103 = v12;
    id v28 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageInstance:]( self,  "clientRequestMessageInstance:",  v8));
    id v29 = v28;
    if (v28)
    {
      uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v28 clientAssetSelector]);
      unsigned __int8 v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobBySelector:](self, "currentJobBySelector:", v30));

      uint64_t v20 = (void *)v105;
      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:CURRENT_STATUS"))
      {
        -[MADAutoAssetControlManager handleClientCurrentStatusRequest:forAutoJob:]( self,  "handleClientCurrentStatusRequest:forAutoJob:",  v8,  v31);
      }

      else
      {
        __int128 v101 = v31;
        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:CONTROL_STATISTICS") & IsInternalAllowed) == 1)
        {
          -[MADAutoAssetControlManager handleControlClientControlStatisticsRequest:forAutoJob:]( self,  "handleControlClientControlStatisticsRequest:forAutoJob:",  v8,  v31);
        }

        else if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:KNOWN_ASSET_SUMMARY") & IsInternalAllowed) == 1)
        {
          -[MADAutoAssetControlManager handleControlClientKnownAssetSummaryRequest:forAutoJob:]( self,  "handleControlClientKnownAssetSummaryRequest:forAutoJob:",  v8,  v31);
        }

        else if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:AVAILABLE_FOR_STAGING_ASSET_SUMMARY") & IsInternalAllowed) == 1)
        {
          -[MADAutoAssetControlManager handleControlClientAvailableForStagingSummaryRequest:forAutoJob:]( self,  "handleControlClientAvailableForStagingSummaryRequest:forAutoJob:",  v8,  v31);
        }

        else if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:ACTIVE_JOB_SUMMARY") & IsInternalAllowed) == 1)
        {
          -[MADAutoAssetControlManager handleControlClientActiveJobSummaryRequest:forAutoJob:]( self,  "handleControlClientActiveJobSummaryRequest:forAutoJob:",  v8,  v31);
        }

        else if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:SCHEDULED_JOB_SUMMARY") & IsInternalAllowed) == 1)
        {
          -[MADAutoAssetControlManager handleControlClientScheduledJobSummaryRequest:forAutoJob:]( self,  "handleControlClientScheduledJobSummaryRequest:forAutoJob:",  v8,  v31);
        }

        else if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:LOCKED_ASSET_SUMMARY") & IsInternalAllowed) == 1)
        {
          -[MADAutoAssetControlManager handleControlClientLockedAssetSummaryRequest:forAutoJob:]( self,  "handleControlClientLockedAssetSummaryRequest:forAutoJob:",  v8,  v31);
        }

        else if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:STAGED_ASSET_SUMMARY") & IsInternalAllowed) == 1)
        {
          -[MADAutoAssetControlManager handleControlClientStagedAssetSummaryRequest:forAutoJob:]( self,  "handleControlClientStagedAssetSummaryRequest:forAutoJob:",  v8,  v31);
        }

        else if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_UNLOCK") & IsInternalAllowed) == 1)
        {
          -[MADAutoAssetControlManager handleControlClientForceGlobalUnlockRequest:forAutoJob:]( self,  "handleControlClientForceGlobalUnlockRequest:forAutoJob:",  v8,  v31);
        }

        else if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_FORGET") & IsInternalAllowed) == 1)
        {
          -[MADAutoAssetControlManager handleControlClientForceGlobalForgetRequest:forAutoJob:]( self,  "handleControlClientForceGlobalForgetRequest:forAutoJob:",  v8,  v31);
        }

        else if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_PURGE") & IsInternalAllowed) == 1)
        {
          -[MADAutoAssetControlManager handleControlClientForceGlobalPurgeRequest:forAutoJob:]( self,  "handleControlClientForceGlobalPurgeRequest:forAutoJob:",  v8,  v31);
        }

        else
        {
          if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:FORCE_GLOBAL_ABANDON") & IsInternalAllowed) != 1)
          {
            if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:INTEREST_IN_CONTENT") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:CHECK_FOR_NEWER") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:DETERMINE_IF_AVAILABLE") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:LOCK_CONTENT"))
            {
              if (-[MADAutoAssetControlManager handleClientPotentialJob:alreadyScheduledSelector:forAutoJob:fromLocation:]( self,  "handleClientPotentialJob:alreadyScheduledSelector:forAutoJob:fromLocation:",  v8,  v6,  v31,  v9))
              {
                if (!+[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock"))
                {
                  id v19 = 0LL;
                  id v17 = 0LL;
                  goto LABEL_90;
                }

                id v47 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
                -[MADAutoAssetControlManager timerStartForRequest:fromLocation:]( self,  "timerStartForRequest:fromLocation:",  v47,  v9);

                id v48 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestsAwaitingSync]( self,  "clientRequestsAwaitingSync"));
                [v48 addObject:v8];

                id v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                id v50 = (os_log_s *)objc_claimAutoreleasedReturnValue([v49 oslog]);

                if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
                {
                  id v51 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                  uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
                  *(_DWORD *)int buf = 138543874;
                  id v110 = v51;
                  __int16 v111 = 2114;
                  id v112 = v103;
                  __int16 v113 = 2114;
                  int64_t v114 = v52;
                  _os_log_impl( &dword_0,  v50,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@} [CLIENT_REQUESTS_AWAITING_SYNC] | job queued since device before first-unl ock | eventInfo:%{public}@",  buf,  0x20u);
                }

                id v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
                id v54 = (void *)objc_claimAutoreleasedReturnValue([v53 totalQueuedClientRequests]);
                uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequest]);
                -[MADAutoAssetControlManager _statsIncrement:forClientRequest:]( self,  "_statsIncrement:forClientRequest:",  v54,  v55);
              }
            }

            else if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:MAP_LOCKED_CONTENT_TO_EXCLAVE"))
            {
              -[MADAutoAssetControlManager handleClientMapLockedToExclaveRequest:fromLocation:]( self,  "handleClientMapLockedToExclaveRequest:fromLocation:",  v8,  v9);
            }

            else
            {
              if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:CONTINUE_LOCK_USAGE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:END_LOCK_USAGE") & 1) != 0 || (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:END_PREVIOUS_LOCKS") & 1) != 0 || +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:END_ALL_PREVIOUS_LOCKS"))
              {
                -[MADAutoAssetControlManager handleClientAlterLockOperation:forAutoJob:]( self,  "handleClientAlterLockOperation:forAutoJob:",  v8,  v31);
                id v17 = 0LL;
                id v19 = 0LL;
LABEL_142:
                __int16 v12 = v103;
                goto LABEL_18;
              }

              if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:CANCEL_ACTIVITY_FOR_SELECTOR"))
              {
                -[MADAutoAssetControlManager handleClientCancelActivityForSelectorRequest:]( self,  "handleClientCancelActivityForSelectorRequest:",  v8);
              }

              else if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:ELIMINATE_ALL_FOR_SELECTOR"))
              {
                -[MADAutoAssetControlManager handleClientEliminateAllForSelectorRequest:]( self,  "handleClientEliminateAllForSelectorRequest:",  v8);
              }

              else if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:ELIMINATE_ALL_FOR_ASSET_TYPE"))
              {
                -[MADAutoAssetControlManager handleClientEliminateAllForAssetTypeRequest:]( self,  "handleClientEliminateAllForAssetTypeRequest:",  v8);
              }

              else if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO:ELIMINATE_PROMOTED_NEVER_LOCKED_FOR_SELECTOR"))
              {
                -[MADAutoAssetControlManager handleClientEliminatePromotedNeverLockedForSelectorRequest:]( self,  "handleClientEliminatePromotedNeverLockedForSelectorRequest:",  v8);
              }

              else if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-STAGE:DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE"))
              {
                -[MADAutoAssetControlManager handleStagingClientDetermineGroupsAvailableForUpdateRequest:]( self,  "handleStagingClientDetermineGroupsAvailableForUpdateRequest:",  v8);
              }

              else if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-STAGE:DETERMINE_ALL_AVAILABLE_FOR_UPDATE"))
              {
                -[MADAutoAssetControlManager handleStagingClientDetermineAllAvailableForUpdateRequest:]( self,  "handleStagingClientDetermineAllAvailableForUpdateRequest:",  v8);
              }

              else if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-STAGE:DETERMINE_ALL_AVAILABLE"))
              {
                -[MADAutoAssetControlManager handleStagingClientDetermineAllAvailableRequest:]( self,  "handleStagingClientDetermineAllAvailableRequest:",  v8);
              }

              else if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-STAGE:DOWNLOAD_GROUPS"))
              {
                -[MADAutoAssetControlManager handleStagingClientDownloadGroupsRequest:]( self,  "handleStagingClientDownloadGroupsRequest:",  v8);
              }

              else if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-STAGE:DOWNLOAD_ALL"))
              {
                -[MADAutoAssetControlManager handleStagingClientDownloadAllRequest:]( self,  "handleStagingClientDownloadAllRequest:",  v8);
              }

              else if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-STAGE:CANCEL_OPERATION"))
              {
                -[MADAutoAssetControlManager handleStagingClientCancelOperation:]( self,  "handleStagingClientCancelOperation:",  v8);
              }

              else if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-STAGE:PURGE_ALL"))
              {
                -[MADAutoAssetControlManager handleStagingClientPurgeAllRequest:]( self,  "handleStagingClientPurgeAllRequest:",  v8);
              }

              else if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-STAGE:ERASE_ALL"))
              {
                -[MADAutoAssetControlManager handleStagingClientEraseAllRequest:]( self,  "handleStagingClientEraseAllRequest:",  v8);
              }

              else if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:SIM_CACHE_DELETE_DETERMINE_RECLAIMABLE") & IsInternalAllowed) == 1)
              {
                -[MADAutoAssetControlManager handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest:]( self,  "handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest:",  v8);
              }

              else if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:SIM_CACHE_DELETE_RECLAIM_SPACE") & IsInternalAllowed) == 1)
              {
                -[MADAutoAssetControlManager handleControlClientSimulatedCacheDeleteReclaimSpaceRequest:]( self,  "handleControlClientSimulatedCacheDeleteReclaimSpaceRequest:",  v8);
              }

              else
              {
                if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v105,  @"MA-AUTO-CONTROL:SIM_SET_JOB_OPERATION") & IsInternalAllowed) != 1)
                {
                  id v19 = 0LL;
                  id v17 = 0LL;
                  goto LABEL_144;
                }

                -[MADAutoAssetControlManager handleControlClientSimulateSetJobOperation:]( self,  "handleControlClientSimulateSetJobOperation:",  v8);
              }
            }

            id v17 = 0LL;
            id v19 = 0LL;
LABEL_135:
            __int16 v12 = v103;
LABEL_136:
            uint64_t v20 = (void *)v105;
            unsigned __int8 v31 = v101;
            goto LABEL_68;
          }

          -[MADAutoAssetControlManager handleControlClientForceGlobalAbandonRequest:forAutoJob:]( self,  "handleControlClientForceGlobalAbandonRequest:forAutoJob:",  v8,  v31);
        }
      }

      id v17 = 0LL;
      id v19 = 0LL;
      goto LABEL_67;
    }

    id v35 = objc_alloc(&OBJC_CLASS___NSString);
    id v36 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
    BOOL v37 = -[NSString initWithFormat:]( v35,  "initWithFormat:",  @"{%@} | invalid eventInfo (instance:MISSING) | eventInfo:%@",  v103,  v36);
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v8,  6102LL,  v103,  v37);

    __int16 v12 = v103;
    id v17 = 0LL;
  }

  id v19 = 0LL;
  unsigned __int8 v31 = 0LL;
LABEL_18:
  uint64_t v20 = (void *)v105;
LABEL_68:
}

- (BOOL)handleClientPotentialJob:(id)a3 alreadyScheduledSelector:(BOOL)a4 forAutoJob:(id)a5 fromLocation:(id)a6
{
  BOOL v8 = a4;
  id v10 = a3;
  id v11 = a5;
  id v12 = a6;
  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned __int8 v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 extendedStateQueue]);
  dispatch_assert_queue_V2(v14);

  id v15 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
  unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([v15 clientRequestMessage]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 messageName]);

  id v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageInstance:]( self,  "clientRequestMessageInstance:",  v10));
  if (!v18)
  {
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v10,  6102LL,  v12,  @"no auto-asset-instance provided in client request");
    goto LABEL_6;
  }

  if (!+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v17,  @"MA-AUTO:INTEREST_IN_CONTENT"))
  {
    if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v17,  @"MA-AUTO:CHECK_FOR_NEWER") & 1) == 0 && !+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v17,  @"MA-AUTO:LOCK_CONTENT"))
    {
      goto LABEL_12;
    }

    id v26 = (void *)objc_claimAutoreleasedReturnValue([v15 clientRequestMessage]);
    unsigned __int8 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageDesire:](self, "clientRequestMessageDesire:", v26));

    if (v27)
    {
      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v17,  @"MA-AUTO:CHECK_FOR_NEWER"))
      {
        unsigned __int8 v28 = -[MADAutoAssetControlManager handleClientCheckForNewer:forAutoJob:instance:desire:fromLocation:]( self,  "handleClientCheckForNewer:forAutoJob:instance:desire:fromLocation:",  v10,  v11,  v18,  v27,  v12);
LABEL_16:
        BOOL v25 = v28;
LABEL_19:

        goto LABEL_20;
      }

      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v17,  @"MA-AUTO:LOCK_CONTENT"))
      {
        unsigned __int8 v28 = -[MADAutoAssetControlManager handleClientLockContent:forAutoJob:instance:desire:fromLocation:]( self,  "handleClientLockContent:forAutoJob:instance:desire:fromLocation:",  v10,  v11,  v18,  v27,  v12);
        goto LABEL_16;
      }

      id v29 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"unexpected messageName:%@",  v17);
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v10,  6108LL,  @"handleClientPotentialJob",  v29);
    }

    else
    {
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v10,  6102LL,  @"handleClientPotentialJob",  @"no auto-asset-desire provided in client request");
    }

    BOOL v25 = 0;
    goto LABEL_19;
  }

  if (!v8)
  {
LABEL_12:
    BOOL v25 = 1;
    goto LABEL_20;
  }

  id v34 = v11;
  id v32 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
  unsigned __int8 v31 = (void *)objc_claimAutoreleasedReturnValue([v32 clientRequestMessage]);
  id v19 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v31));
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
  id v33 = v12;
  id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 clientRequestMessage]);
  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue([v21 clientID]);
  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v19,  @"com.apple.MAAutoControl",  v22,  0LL,  0LL));

  id v12 = v33;
  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
  -[MADAutoAssetControlManager issueResponseToClientRequest:issuingResponseMessage:withResponseError:]( self,  "issueResponseToClientRequest:issuingResponseMessage:withResponseError:",  v24,  v23,  0LL);

  id v11 = v34;
LABEL_6:
  BOOL v25 = 0;
LABEL_20:

  return v25;
}

- (BOOL)handleClientCheckForNewer:(id)a3 forAutoJob:(id)a4 instance:(id)a5 desire:(id)a6 fromLocation:(id)a7
{
  id v11 = a3;
  id v12 = a5;
  id v13 = a6;
  id v14 = a7;
  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned int v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v15 extendedStateQueue]);
  dispatch_assert_queue_V2(v16);

  id v17 = (void *)objc_claimAutoreleasedReturnValue([v11 clientRequest]);
  unsigned __int8 v18 = +[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock");
  id v19 = [v13 checkWaitTimeoutSecs];
  if (!v19)
  {
    if ((v18 & 1) != 0)
    {
      uint64_t v20 = @"check (NO_WAIT) requested when device before first-unlock";
LABEL_11:
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v11,  6206LL,  v14,  v20);
      goto LABEL_12;
    }

    id v21 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
    unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue([v21 assetVersion]);

    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
    id v36 = (void *)objc_claimAutoreleasedReturnValue([v23 assetType]);
    id v33 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
    id v34 = (void *)objc_claimAutoreleasedReturnValue([v33 assetSpecifier]);
    if (v22)
    {
      id v32 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v32 assetVersion]);
      BOOL v25 = v23;
      uint64_t v26 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:]( self,  "_latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:",  v14,  v36,  v34,  v24));

      uint64_t v27 = v26;
      uint64_t v23 = v25;

      uint64_t v20 = @"check (NO_WAIT) requested when specific asset-version not already downloaded";
    }

    else
    {
      uint64_t v27 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _latestDownloadedDescriptor:forAssetType:withAssetSpecifier:]( self,  "_latestDownloadedDescriptor:forAssetType:withAssetSpecifier:",  v14,  v36,  v34));
      uint64_t v20 = @"check (NO_WAIT) requested when no already downloaded asset-version available";
    }

    if (!v27) {
      goto LABEL_11;
    }
    BOOL v37 = (void *)v27;
    id v38 = 0LL;
    unsigned __int8 v28 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildFoundResponseMessage:forClientRequest:withFoundDescriptor:withInstance:withDesire:fromLocation:error:]( self,  "buildFoundResponseMessage:forClientRequest:withFoundDescriptor:withInstance:withDesire:fromLocation:error:",  @"checkForNewer",  v17,  v27,  v12,  v13,  v14,  &v38));
    id v29 = v38;
    if (!v29)
    {
      id v35 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
      uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v35 assetVersion]);
      -[MADAutoAssetControlManager updateAutoAssetStatusForChosenDownloadedDescriptor:matchingAssetVersion:fromLocation:]( self,  "updateAutoAssetStatusForChosenDownloadedDescriptor:matchingAssetVersion:fromLocation:",  v37,  v30,  v14);
    }

    -[MADAutoAssetControlManager issueResponseToClientRequest:issuingResponseMessage:withResponseError:]( self,  "issueResponseToClientRequest:issuingResponseMessage:withResponseError:",  v17,  v28,  v29);
  }

- (BOOL)handleClientLockContent:(id)a3 forAutoJob:(id)a4 instance:(id)a5 desire:(id)a6 fromLocation:(id)a7
{
  id v11 = a3;
  id v12 = a5;
  id v13 = a6;
  id v14 = a7;
  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned int v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v15 extendedStateQueue]);
  dispatch_assert_queue_V2(v16);

  id v17 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:handleClientLockContent",  v14);
  unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue([v11 clientRequest]);
  unsigned int v19 = +[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock");
  if ((v19 & 1) != 0) {
    goto LABEL_46;
  }
  uint64_t v86 = v11;
  uint64_t v87 = v18;
  id v85 = v13;
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
  id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetVersion]);

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 assetType]);
  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
  BOOL v25 = (void *)objc_claimAutoreleasedReturnValue([v24 assetSpecifier]);
  if (v21)
  {
    uint64_t v26 = v17;
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
    unsigned int v83 = v19;
    unsigned __int8 v28 = v22;
    id v29 = v12;
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v27 assetVersion]);
    unsigned __int8 v31 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:]( self,  "_latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:",  v26,  v23,  v25,  v30));

    id v12 = v29;
    unsigned int v22 = v28;
    unsigned int v19 = v83;

    id v17 = v26;
  }

  else
  {
    unsigned __int8 v31 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _latestDownloadedDescriptor:forAssetType:withAssetSpecifier:]( self,  "_latestDownloadedDescriptor:forAssetType:withAssetSpecifier:",  v17,  v23,  v25));
  }

  id v13 = v85;
  id v11 = v86;
  unsigned __int8 v18 = v87;
  if (!v31)
  {
LABEL_46:
    if ([v13 lockWaitTimeoutSecs])
    {
      BOOL v45 = 1;
    }

    else
    {
      if (v19) {
        uint64_t v46 = @"lock (NO_WAIT) requested when device before first-unlock";
      }
      else {
        uint64_t v46 = @"lock (NO_WAIT) requested when specific asset-version not already downloaded";
      }
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v11,  6503LL,  v17,  v46);
      BOOL v45 = 0;
    }
  }

  else
  {
    id v32 = v12;
    uint64_t v33 = objc_claimAutoreleasedReturnValue([v31 assetType]);
    if (v33)
    {
      id v34 = (void *)v33;
      uint64_t v35 = objc_claimAutoreleasedReturnValue([v31 assetId]);
      if (v35)
      {
        id v36 = (void *)v35;
        BOOL v37 = (void *)objc_claimAutoreleasedReturnValue([v31 metadata]);

        if (v37)
        {
          id v38 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
          id v39 = (void *)objc_claimAutoreleasedReturnValue([v31 assetType]);
          id v84 = v17;
          id v40 = (void *)objc_claimAutoreleasedReturnValue([v31 assetSpecifier]);
          id v82 = v31;
          id v41 = (void *)objc_claimAutoreleasedReturnValue([v31 assetVersion]);
          id v42 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v38,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v39,  v40,  v41);

          id v43 = v82;
          id v17 = v84;

          if (+[MADAutoAssetSecure isPersonalizationOrGraftingRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationOrGraftingRequired:forDescriptor:",  v84,  v82))
          {
            if (+[MADAutoAssetSecure isPersonalizationRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationRequired:forDescriptor:",  v84,  v82))
            {
              [v82 setSecureOperationInProgress:1];
              v94[0] = _NSConcreteStackBlock;
              v94[1] = 3221225472LL;
              v94[2] = __94__MADAutoAssetControlManager_handleClientLockContent_forAutoJob_instance_desire_fromLocation___block_invoke;
              v94[3] = &unk_34F330;
              v94[4] = self;
              id v95 = v82;
              id v96 = v42;
              id v97 = v84;
              id v98 = v86;
              id v17 = v84;
              +[MADAutoAssetSecure personalizeGraftDownloaded:forDescriptor:allowingNetwork:completion:]( &OBJC_CLASS___MADAutoAssetSecure,  "personalizeGraftDownloaded:forDescriptor:allowingNetwork:completion:",  v97,  v95,  1LL,  v94);

              id v44 = v95;
LABEL_22:

              BOOL v45 = 0;
              unsigned __int8 v18 = v87;
              id v12 = v32;
LABEL_42:

              goto LABEL_43;
            }

            if (+[MADAutoAssetSecure doesDescriptorInvolveGrafting:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "doesDescriptorInvolveGrafting:forDescriptor:",  v84,  v82))
            {
              [v82 setSecureOperationInProgress:1];
              v90[0] = _NSConcreteStackBlock;
              v90[1] = 3221225472LL;
              v90[2] = __94__MADAutoAssetControlManager_handleClientLockContent_forAutoJob_instance_desire_fromLocation___block_invoke_1927;
              v90[3] = &unk_34F2B8;
              v90[4] = self;
              id v91 = v82;
              id v92 = v84;
              id v93 = v86;
              id v17 = v84;
              +[MADAutoAssetSecure graftDownloaded:graftingDescriptor:completion:]( &OBJC_CLASS___MADAutoAssetSecure,  "graftDownloaded:graftingDescriptor:completion:",  v92,  v91,  v90);

              id v44 = v91;
              goto LABEL_22;
            }
          }

          id v80 = v42;
          id v50 = (void *)objc_claimAutoreleasedReturnValue([v82 assetType]);
          id v51 = (void *)objc_claimAutoreleasedReturnValue([v82 assetId]);
          id AutoLocalUrlFromTypeAndIdWithPurpose = getAutoLocalUrlFromTypeAndIdWithPurpose(v50, v51, 2LL, @"auto");
          uint64_t v53 = objc_claimAutoreleasedReturnValue(AutoLocalUrlFromTypeAndIdWithPurpose);

          id v81 = (void *)v53;
          if (v53)
          {
            uint64_t v54 = objc_claimAutoreleasedReturnValue([v32 autoAssetClientName]);
            uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v32 clientProcessName]);
            id v56 = [v32 clientProcessID];
            uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue([v85 desireReason]);
            uint64_t v58 = (void *)objc_claimAutoreleasedReturnValue([v85 clientAssetPolicy]);
            uint64_t v59 = (void *)objc_claimAutoreleasedReturnValue([v82 metadata]);
            id v89 = 0LL;
            uint64_t v78 = v53;
            uint64_t v60 = (void *)v54;
            LODWORD(v54) = +[MADAutoAssetLocker lockedByClient:forClientProcessName:withClientProcessID:forAssetSelector:forLockReason:withUsagePolicy:withLocalContentURL:withAssetAttributes:lockError:]( &OBJC_CLASS___MADAutoAssetLocker,  "lockedByClient:forClientProcessName:withClientProcessID:forAssetSelector:forLockReason:with UsagePolicy:withLocalContentURL:withAssetAttributes:lockError:",  v54,  v55,  v56,  v42,  v57,  v58,  v78,  v59,  &v89);
            id v61 = v89;

            if ((_DWORD)v54)
            {
              id v11 = v86;
              if (usingCentralizedCachedelete())
              {
                uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([v81 path]);
                markLockedAssetPurgeable(v62);
              }

              id v79 = v61;
              id v43 = v82;
              id v17 = v84;
              id v13 = v85;
              unsigned __int8 v18 = v87;
              if ([v82 neverBeenLocked])
              {
                uint64_t v63 = (void *)objc_claimAutoreleasedReturnValue([v32 autoAssetClientName]);
                if (v63) {
                  uint64_t v64 = objc_claimAutoreleasedReturnValue([v32 autoAssetClientName]);
                }
                else {
                  uint64_t v64 = objc_claimAutoreleasedReturnValue([v32 clientProcessName]);
                }
                id v72 = (void *)v64;

                id v43 = v82;
                [v82 setNeverBeenLocked:0];
                -[MADAutoAssetControlManager trackDescriptor:persisting:fromLocation:changedWhileTerminated:changedNeverBeenLocked:historyOperation:firstClientName:]( self,  "trackDescriptor:persisting:fromLocation:changedWhileTerminated:changedNeverBeenLocked:historyOperation :firstClientName:",  v82,  1LL,  v84,  0LL,  1LL,  0LL,  v72);
              }

              unsigned int v73 = (void *)objc_claimAutoreleasedReturnValue([v32 clientAssetSelector]);
              unsigned int v74 = (void *)objc_claimAutoreleasedReturnValue([v73 assetVersion]);
              -[MADAutoAssetControlManager updateAutoAssetStatusForChosenDownloadedDescriptor:matchingAssetVersion:fromLocation:]( self,  "updateAutoAssetStatusForChosenDownloadedDescriptor:matchingAssetVersion:fromLocation:",  v43,  v74,  v84);

              id v88 = 0LL;
              uint64_t v75 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildFoundResponseMessage:forClientRequest:withFoundDescriptor:withInstance:withDesire:fromLocation:error:]( self,  "buildFoundResponseMessage:forClientRequest:withFoundDescriptor:withInstance:withDesire:f romLocation:error:",  @"lockContent",  v87,  v43,  v32,  v85,  v84,  &v88));
              id v76 = v88;
              -[MADAutoAssetControlManager issueResponseToClientRequest:issuingResponseMessage:withResponseError:]( self,  "issueResponseToClientRequest:issuingResponseMessage:withResponseError:",  v87,  v75,  v76);

              id v12 = v32;
              BOOL v45 = 0;
              uint64_t v71 = v81;
              id v61 = v79;
              goto LABEL_41;
            }

            id v13 = v85;
            id v11 = v86;
            if ([v85 lockWaitTimeoutSecs])
            {
              BOOL v45 = 1;
              id v17 = v84;
            }

            else
            {
              id v17 = v84;
              -[MADAutoAssetControlManager issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  v86,  v61,  v84,  @"unable to lock auto-asset");
              BOOL v45 = 0;
            }

            unsigned __int8 v18 = v87;
            id v43 = v82;
            id v12 = v32;
          }

          else
          {
            uint64_t v65 = objc_alloc(&OBJC_CLASS___NSString);
            uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([v82 summary]);
            uint64_t v67 = -[NSString initWithFormat:]( v65,  "initWithFormat:",  @"unable to get local content URL | chosenDownloadedDescriptor:%@",  v66);

            uint64_t v68 = objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6101LL,  v84,  0LL,  v67));
            id v69 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v70 = (os_log_s *)objc_claimAutoreleasedReturnValue([v69 oslog]);

            if (os_log_type_enabled(v70, OS_LOG_TYPE_ERROR)) {
              -[MADAutoAssetControlManager handleClientLockContent:forAutoJob:instance:desire:fromLocation:].cold.1();
            }

            -[MADAutoAssetControlManager issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  v86,  v68,  v84,  @"failure to lock content");
            BOOL v45 = 0;
            id v61 = (id)v68;
            unsigned __int8 v18 = v87;
            id v12 = v32;
            id v42 = v80;
          }

          uint64_t v71 = v81;
LABEL_41:

          goto LABEL_42;
        }
      }

      else
      {
      }
    }

    id v47 = objc_alloc(&OBJC_CLASS___NSString);
    id v48 = (void *)objc_claimAutoreleasedReturnValue([v31 summary]);
    id v49 = -[NSString initWithFormat:]( v47,  "initWithFormat:",  @"lock found descriptor MISSING required element(s) | chosenDownloadedDescriptor:%@",  v48);
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v86,  6111LL,  v17,  v49);

    BOOL v45 = 0;
    id v12 = v32;
  }

void __94__MADAutoAssetControlManager_handleClientLockContent_forAutoJob_instance_desire_fromLocation___block_invoke( id *a1,  uint64_t a2,  void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] autoControlManagerFSM]);
  BOOL v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = __94__MADAutoAssetControlManager_handleClientLockContent_forAutoJob_instance_desire_fromLocation___block_invoke_2;
  v10[3] = &unk_34F308;
  id v7 = a1[5];
  id v8 = a1[4];
  id v11 = v7;
  id v12 = v8;
  id v13 = a1[6];
  id v14 = a1[7];
  id v15 = a1[8];
  id v16 = v4;
  id v9 = v4;
  dispatch_async(v6, v10);
}

void __94__MADAutoAssetControlManager_handleClientLockContent_forAutoJob_instance_desire_fromLocation___block_invoke_2( uint64_t a1)
{
  if ([*(id *)(a1 + 40) isAutoAssetBeingEliminated:*(void *)(a1 + 48)])
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) logger]);
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 oslog]);

    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 56);
      id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) summary]);
      *(_DWORD *)int buf = 138543618;
      uint64_t v8 = v4;
      __int16 v9 = 2114;
      id v10 = v5;
      _os_log_impl( &dword_0,  v3,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-PERSONALIZATION-GRAFT][SINGLETON-CONTROL][ELIMINATE] {%{public}@} | eliminate triggered while perf orming personalize+graft|mount | chosenDownloadedDescriptor:%{public}@",  buf,  0x16u);
    }

    [*(id *)(a1 + 40) eliminateUngraftDescriptor:*(void *)(a1 + 56) forAutoAssetDescriptor:*(void *)(a1 + 32) failingClientRequestForEventInfo:*(void *)(a1 + 64)];
  }

  else if (*(void *)(a1 + 72))
  {
    BOOL v6 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@[PERSONALIZING/GRAFTING]",  *(void *)(a1 + 56));
    objc_msgSend( *(id *)(a1 + 40),  "issueResponseToFailedAutoAssetLockRequest:forEventInfo:withResponseError:forAttemptedDescriptor:");
  }

  else
  {
    [*(id *)(a1 + 40) lockAutoAssetReplyJobResponse:@"any personalization/grafting [or mounting] successful" forEventInfo:*(void *)(a1 + 64) lockingChosenDescriptor:*(void *)(a1 + 32)];
  }

void __94__MADAutoAssetControlManager_handleClientLockContent_forAutoJob_instance_desire_fromLocation___block_invoke_1927( id *a1,  uint64_t a2,  void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] autoControlManagerFSM]);
  BOOL v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __94__MADAutoAssetControlManager_handleClientLockContent_forAutoJob_instance_desire_fromLocation___block_invoke_2_1928;
  block[3] = &unk_34EF88;
  id v7 = a1[5];
  id v8 = a1[4];
  id v11 = v7;
  id v12 = v8;
  id v13 = a1[6];
  id v14 = a1[7];
  id v15 = v4;
  id v9 = v4;
  dispatch_async(v6, block);
}

void __94__MADAutoAssetControlManager_handleClientLockContent_forAutoJob_instance_desire_fromLocation___block_invoke_2_1928( uint64_t a1)
{
  uint64_t v2 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) assetType]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) assetSpecifier]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) assetVersion]);
  id v6 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v2,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v3,  v4,  v5);

  [*(id *)(a1 + 32) setSecureOperationInProgress:0];
  if ([*(id *)(a1 + 40) isAutoAssetBeingEliminated:v6])
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) logger]);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 oslog]);

    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 48);
      id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) summary]);
      *(_DWORD *)int buf = 138543618;
      uint64_t v13 = v9;
      __int16 v14 = 2114;
      id v15 = v10;
      _os_log_impl( &dword_0,  v8,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-GRAFT][SINGLETON-CONTROL][ELIMINATE] {%{public}@} | eliminate triggered while grafting|mounting | chosenDownloadedDescriptor:%{public}@",  buf,  0x16u);
    }

    [*(id *)(a1 + 40) eliminateUngraftDescriptor:@"IssueClientReplyJobResponse" forAutoAssetDescriptor:*(void *)(a1 + 32) failingClientRequestForEventInfo:*(void *)(a1 + 56)];
  }

  else if (*(void *)(a1 + 64))
  {
    id v11 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@[GRAFTING]",  *(void *)(a1 + 48));
    [*(id *)(a1 + 40) issueResponseToFailedAutoAssetLockRequest:v11 forEventInfo:*(void *)(a1 + 56) withResponseError:*(void *)(a1 + 64) forAttemptedDescriptor:*(void *)(a1 + 32)];
  }

  else
  {
    [*(id *)(a1 + 40) lockAutoAssetReplyJobResponse:@"grafting [or mounting] successful" forEventInfo:*(void *)(a1 + 56) lockingChosenDescriptor:*(void *)(a1 + 32)];
  }
}

- (id)buildFoundResponseMessage:(id)a3 forClientRequest:(id)a4 withFoundDescriptor:(id)a5 withInstance:(id)a6 withDesire:(id)a7 fromLocation:(id)a8 error:(id *)a9
{
  id v93 = a3;
  id v15 = a4;
  id v16 = a5;
  id v99 = a6;
  id v98 = a7;
  id v102 = a8;
  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned __int8 v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  id v92 = v15;
  unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue([v15 clientRequestMessage]);
  __int128 v104 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v19));

  id v97 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v20 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v21 = (void *)objc_claimAutoreleasedReturnValue([v16 assetType]);
  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSpecifier]);
  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);
  id v24 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v20,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v21,  v22,  v23);

  BOOL v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentStatusBySelector](self, "currentStatusBySelector"));
  __int128 v100 = self;
  __int128 v103 = v24;
  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v24));
  id v27 = [v25 safeObjectForKey:v26 ofClass:objc_opt_class(MAAutoAssetStatus)];
  id v28 = (id)objc_claimAutoreleasedReturnValue(v27);

  if (v28) {
    goto LABEL_3;
  }
  id v29 = objc_alloc_init(&OBJC_CLASS___MAAutoAssetNotifications);
  -[MAAutoAssetNotifications setContentAvailableForUse:](v29, "setContentAvailableForUse:", 1LL);
  id v94 = (void *)objc_claimAutoreleasedReturnValue([v16 metadata]);
  unsigned int v89 = [v16 neverBeenLocked];
  unsigned int v87 = [v16 downloadUserInitiated];
  id v85 = [v16 downloadedNetworkBytes];
  id v83 = [v16 downloadedFilesystemBytes];
  unsigned __int8 v30 = [v16 isPatch];
  unsigned __int8 v31 = (void *)objc_claimAutoreleasedReturnValue([v16 patchedFromBaseSelector]);
  id v32 = [v16 patchedFromBaseFilesystemBytes];
  unsigned __int8 v33 = [v16 patchingAttempted];
  unsigned __int8 v34 = [v16 stagedPriorToAvailable];
  uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v16 stagedFromOSVersion]);
  id v36 = (void *)objc_claimAutoreleasedReturnValue([v16 stagedFromBuildVersion]);
  BOOL v37 = (void *)objc_claimAutoreleasedReturnValue([v16 patchingAttemptError]);
  LOBYTE(v74) = 0;
  BYTE1(v73) = v34;
  LOBYTE(v73) = v33;
  LOBYTE(v72) = v30;
  id v28 = -[MADAutoAssetControlManager newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( v100,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNever BeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemB ytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempte d:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage: withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v103,  v29,  v94,  0LL,  v89,  v87,  0LL,  v85,  v83,  v72,  v31,  v32,  v73,  v35,  v36,  v74,  0LL,  v37,  0LL);

  if (v28)
  {
LABEL_3:
    id v91 = v16;
    id v84 = (void *)objc_claimAutoreleasedReturnValue([v28 assetSelector]);
    id v90 = (void *)objc_claimAutoreleasedReturnValue([v28 notifications]);
    id v88 = (void *)objc_claimAutoreleasedReturnValue([v28 availableForUseAttributes]);
    uint64_t v86 = (void *)objc_claimAutoreleasedReturnValue([v28 newerVersionAttributes]);
    unsigned int v95 = [v28 neverBeenLocked];
    unsigned int v82 = [v28 downloadUserInitiated];
    id v77 = (void *)objc_claimAutoreleasedReturnValue([v28 downloadProgress]);
    id v81 = [v28 downloadedNetworkBytes];
    id v80 = [v28 downloadedFilesystemBytes];
    unsigned __int8 v79 = [v28 downloadedAsPatch];
    id v76 = (void *)objc_claimAutoreleasedReturnValue([v28 patchedFromBaseSelector]);
    id v78 = [v28 patchedFromBaseFilesystemBytes];
    unsigned __int8 v38 = [v28 patchingAttempted];
    unsigned __int8 v39 = [v28 stagedPriorToAvailable];
    uint64_t v75 = (void *)objc_claimAutoreleasedReturnValue([v28 stagedFromOSVersion]);
    id v40 = (void *)objc_claimAutoreleasedReturnValue([v28 stagedFromBuildVersion]);
    id v41 = (void *)objc_claimAutoreleasedReturnValue([v28 availableForUseError]);
    id v42 = (void *)objc_claimAutoreleasedReturnValue([v28 patchingAttemptError]);
    id v43 = (void *)objc_claimAutoreleasedReturnValue([v28 newerVersionError]);
    LOBYTE(v74) = 1;
    BYTE1(v73) = v39;
    LOBYTE(v73) = v38;
    LOBYTE(v72) = v79;
    id v44 = v100;
    id v96 = -[MADAutoAssetControlManager newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( v100,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNev erBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesys temBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAt tempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLo ckUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v84,  v90,  v88,  v86,  v95,  v82,  v77,  v81,  v80,  v72,  v76,  v78,  v73,  v75,  v40,  v74,  v41,  v42,  v43);

    id v16 = v91;
  }

  else
  {
    id v96 = 0LL;
    id v44 = v100;
  }

  if (!+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v104,  @"MA-AUTO(REPLY):LOCK_CONTENT"))
  {
LABEL_14:
    id v61 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
    uint64_t v63 = -[NSString initWithFormat:]( v61,  "initWithFormat:",  @"unable to get local content URL | foundDescriptor:%@",  v62);

    uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6101LL,  @"notifyLockerJustLockedDescriptor",  0LL,  v63));
    uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v44, "logger"));
    uint64_t v65 = (os_log_s *)objc_claimAutoreleasedReturnValue([v64 oslog]);

    if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager buildFoundResponseMessage:forClientRequest:withFoundDescriptor:withInstance:withDesire:fromLocation:error:].cold.1();
    }

    uint64_t v46 = 0LL;
    id v50 = 0LL;
    goto LABEL_17;
  }

  uint64_t v45 = objc_claimAutoreleasedReturnValue( +[MADAutoAssetSecure localContentURL:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "localContentURL:forDescriptor:",  v102,  v16));
  if (!v45)
  {
    uint64_t v55 = objc_alloc(&OBJC_CLASS___NSString);
    id v56 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
    uint64_t v57 = -[NSString initWithFormat:]( v55,  "initWithFormat:",  @"unable to get local content URL | foundDescriptor:%@",  v56);

    uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6101LL,  @"notifyLockerJustLockedDescriptor",  0LL,  v57));
    uint64_t v58 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v44, "logger"));
    uint64_t v59 = (os_log_s *)objc_claimAutoreleasedReturnValue([v58 oslog]);

    if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager buildFoundResponseMessage:forClientRequest:withFoundDescriptor:withInstance:withDesire:fromLocation:error:].cold.1();
    }

    if (v54)
    {
      uint64_t v46 = 0LL;
      uint64_t v53 = 0LL;
      id v50 = 0LL;
LABEL_12:
      uint64_t v60 = a9;
      if (!a9) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }

    goto LABEL_14;
  }

  uint64_t v46 = (void *)v45;
  id v47 = v44;
  id v48 = objc_alloc(&OBJC_CLASS___MAAutoAssetInfoFound);
  id v49 = (void *)objc_claimAutoreleasedReturnValue([v16 metadata]);
  id v50 = -[MAAutoAssetInfoFound initForSelector:withLocalContentURL:withAssetAttributes:reportingStatus:]( v48,  "initForSelector:withLocalContentURL:withAssetAttributes:reportingStatus:",  v103,  v46,  v49,  v96);

  -[NSMutableDictionary setSafeObject:forKey:](v97, "setSafeObject:forKey:", v99, @"instance");
  -[NSMutableDictionary setSafeObject:forKey:](v97, "setSafeObject:forKey:", v50, @"found");
  -[NSMutableDictionary setSafeObject:forKey:](v97, "setSafeObject:forKey:", v98, @"desire");
  id v51 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue([v92 clientID]);
  uint64_t v53 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v51,  "initWithType:messageName:clientID:version:message:",  2LL,  v104,  v52,  0LL,  v97);

  if (v53)
  {
    uint64_t v54 = 0LL;
    goto LABEL_12;
  }

  id v67 = v16;
  uint64_t v63 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"unable to build response for %@ request",  v93);
  uint64_t v68 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v47, "logger"));
  id v69 = (os_log_s *)objc_claimAutoreleasedReturnValue([v68 oslog]);

  if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR))
  {
    __int128 v101 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v47, "_updateLatestSummary"));
    id v70 = (void *)objc_claimAutoreleasedReturnValue([v92 summary]);
    *(_DWORD *)int buf = 138544386;
    id v106 = v101;
    __int16 v107 = 2114;
    id v108 = v102;
    __int16 v109 = 2114;
    id v110 = v63;
    __int16 v111 = 2114;
    id v112 = v70;
    __int16 v113 = 2114;
    uint64_t v114 = objc_claimAutoreleasedReturnValue([v50 summary]);
    uint64_t v71 = (void *)v114;
    _os_log_error_impl( &dword_0,  v69,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@:buildFoundResponseMessage} failed to create response message - %{public}@ | clientRequest :%{public}@ | found:%{public}@",  buf,  0x34u);
  }

  uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6101LL,  v102,  0LL,  v63));
  id v16 = v67;
LABEL_17:
  uint64_t v60 = a9;

  uint64_t v53 = 0LL;
  if (a9) {
LABEL_18:
  }
    *uint64_t v60 = v54;
LABEL_19:

  return v53;
}

- (void)handleClientAlterLockOperation:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 messageName]);

  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v5));
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 clientAssetSelector]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v11));

  if (v10)
  {
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v10 clientAssetSelector]);
    __int16 v14 = (void *)objc_claimAutoreleasedReturnValue([v13 assetVersion]);

    if (v14)
    {
      id v70 = v9;
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
      uint64_t v71 = (void *)objc_claimAutoreleasedReturnValue([v15 message]);

      id v16 = (void *)objc_claimAutoreleasedReturnValue([v10 clientAssetSelector]);
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);

      unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue([v10 clientAssetSelector]);
      unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue([v18 assetType]);
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v10 clientAssetSelector]);
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSpecifier]);
      id v69 = v12;
      if (v17)
      {
        unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue([v10 clientAssetSelector]);
        uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 assetVersion]);
        uint64_t v24 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:]( self,  "_latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:",  @"handleClientAlterLockOperation",  v19,  v21,  v23));

        BOOL v25 = (void *)v24;
      }

      else
      {
        BOOL v25 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _latestDownloadedDescriptor:forAssetType:withAssetSpecifier:]( self,  "_latestDownloadedDescriptor:forAssetType:withAssetSpecifier:",  @"handleClientAlterLockOperation",  v19,  v21));
      }

      id v27 = (void *)objc_claimAutoreleasedReturnValue([v25 assetType]);
      id v28 = (void *)objc_claimAutoreleasedReturnValue([v25 assetId]);
      id AutoLocalUrlFromTypeAndIdWithPurpose = getAutoLocalUrlFromTypeAndIdWithPurpose(v27, v28, 2LL, @"auto");
      unsigned __int8 v30 = (void *)objc_claimAutoreleasedReturnValue(AutoLocalUrlFromTypeAndIdWithPurpose);

      if (!v30)
      {
        id v40 = objc_alloc(&OBJC_CLASS___NSString);
        id v41 = (void *)objc_claimAutoreleasedReturnValue([v25 summary]);
        id v42 = -[NSString initWithFormat:]( v40,  "initWithFormat:",  @"unable to get local content URL | descriptor:%@",  v41);

        id v43 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6101LL,  @"handleClientAlterLockOperation",  0LL,  v42));
        id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        uint64_t v45 = (os_log_s *)objc_claimAutoreleasedReturnValue([v44 oslog]);

        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
          -[MADAutoAssetControlManager handleClientAlterLockOperation:forAutoJob:].cold.1();
        }

        -[MADAutoAssetControlManager issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  v5,  v43,  @"handleClientAlterLockOperation",  @"failure to perform alter lock operation");
        id v12 = v69;
        uint64_t v9 = v70;
        goto LABEL_48;
      }

      uint64_t v68 = v30;
      uint64_t v9 = v70;
      id v67 = v25;
      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v70,  @"MA-AUTO:CONTINUE_LOCK_USAGE"))
      {
        id v31 = [v71 safeObjectForKey:@"desire" ofClass:objc_opt_class(MAAutoAssetInfoDesire)];
        id v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
        unsigned __int8 v33 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetClientName]);
        unsigned __int8 v34 = (void *)objc_claimAutoreleasedReturnValue([v10 clientAssetSelector]);
        uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v32 desireReason]);
        id v36 = (void *)objc_claimAutoreleasedReturnValue([v32 clientAssetPolicy]);
        id v75 = 0LL;
        unsigned int v37 = +[MADAutoAssetLocker continuedLockByClient:forAssetSelector:forLockReason:withUsagePolicy:continueError:]( &OBJC_CLASS___MADAutoAssetLocker,  "continuedLockByClient:forAssetSelector:forLockReason:withUsagePolicy:continueError:",  v33,  v34,  v35,  v36,  &v75);
        id v38 = v75;

        if (v37)
        {
          if (usingCentralizedCachedelete())
          {
            unsigned __int8 v39 = (void *)objc_claimAutoreleasedReturnValue([v68 path]);
            markLockedAssetPurgeable(v39);
          }

          -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  0LL,  @"handleClientAlterLockOperation",  @"successful lock continuation of auto-specific-asset (that was previously locked)");
        }

        else
        {
          -[MADAutoAssetControlManager issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  v5,  v38,  @"handleClientAlterLockOperation",  @"failed lock continuation of auto-specific-asset");
        }

        uint64_t v9 = v70;
        goto LABEL_45;
      }

      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v70,  @"MA-AUTO:END_LOCK_USAGE"))
      {
        id v46 = [v71 safeObjectForKey:@"end" ofClass:objc_opt_class(MAAutoAssetInfoEnd)];
        id v32 = (void *)objc_claimAutoreleasedReturnValue(v46);
        id v47 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetClientName]);
        id v48 = (void *)objc_claimAutoreleasedReturnValue([v10 clientAssetSelector]);
        id v49 = (void *)objc_claimAutoreleasedReturnValue([v32 endLockReason]);
        id v74 = 0LL;
        unsigned int v50 = +[MADAutoAssetLocker endedLockByClient:forAssetSelector:forLockReason:endError:]( &OBJC_CLASS___MADAutoAssetLocker,  "endedLockByClient:forAssetSelector:forLockReason:endError:",  v47,  v48,  v49,  &v74);
        id v38 = v74;

        if (v50)
        {
          id v12 = v69;
          if (-[MADAutoAssetControlManager isDescriptorCurrentlyLocked:forDescriptor:]( self,  "isDescriptorCurrentlyLocked:forDescriptor:",  @"handleClientAlterLockOperation",  v69))
          {
            id v51 = @"successful end of lock of auto-specific-asset (still other lock[s])";
LABEL_33:
            -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  0LL,  @"handleClientAlterLockOperation",  v51);
LABEL_46:
            BOOL v25 = v67;
            unsigned __int8 v30 = v68;
LABEL_47:

            goto LABEL_48;
          }

          -[MADAutoAssetControlManager secureCheckUngraft:forDescriptorNoLongerLocked:]( self,  "secureCheckUngraft:forDescriptorNoLongerLocked:",  @"handleClientAlterLockOperation(END_LOCK_USAGE)",  v69);
          if ([v69 secureOperationEliminating]) {
            -[MADAutoAssetControlManager eliminateUngraftDescriptor:forAutoAssetDescriptor:failingClientRequestForEventInfo:]( self,  "eliminateUngraftDescriptor:forAutoAssetDescriptor:failingClientRequestForEventInfo:",  @"handleClientAlterLockOperation",  v69,  0LL);
          }
          BOOL v25 = v67;
          unsigned __int8 v30 = v68;
          if (usingCentralizedCachedelete())
          {
            uint64_t v63 = (void *)objc_claimAutoreleasedReturnValue([v68 path]);
            markAssetPurgeable(v63);

            unsigned __int8 v30 = v68;
            id v12 = v69;
          }

          uint64_t v64 = @"successful end of lock of auto-specific-asset (last lock ended)";
LABEL_56:
          -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  0LL,  @"handleClientAlterLockOperation",  v64);
          goto LABEL_47;
        }

        uint64_t v57 = @"failed end of lock of auto-specific-asset";
LABEL_44:
        -[MADAutoAssetControlManager issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  v5,  v38,  @"handleClientAlterLockOperation",  v57);
LABEL_45:
        id v12 = v69;
        goto LABEL_46;
      }

      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v70,  @"MA-AUTO:END_PREVIOUS_LOCKS"))
      {
        id v52 = [v71 safeObjectForKey:@"end" ofClass:objc_opt_class(MAAutoAssetInfoEnd)];
        id v32 = (void *)objc_claimAutoreleasedReturnValue(v52);
        uint64_t v53 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetClientName]);
        uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue([v10 clientAssetSelector]);
        uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v32 endLockReason]);
        id v73 = 0LL;
        unsigned int v56 = +[MADAutoAssetLocker endedPreviousLocksByClient:forAssetSelector:forLockReason:removingLockCount:endError:]( MADAutoAssetLocker,  "endedPreviousLocksByClient:forAssetSelector:forLockReason:removingLockCount:endError:",  v53,  v54,  v55,  [v32 endLockCount],  &v73);
        id v38 = v73;

        if (!v56)
        {
          uint64_t v57 = @"failed to end previous locks of auto-specific-asset (for client-specified criteria)";
          goto LABEL_44;
        }

        id v12 = v69;
        if (-[MADAutoAssetControlManager isDescriptorCurrentlyLocked:forDescriptor:]( self,  "isDescriptorCurrentlyLocked:forDescriptor:",  @"handleClientAlterLockOperation",  v69))
        {
          id v51 = @"successful end of previous locks of auto-specific-asset (still other lock[s])";
          goto LABEL_33;
        }

        -[MADAutoAssetControlManager secureCheckUngraft:forDescriptorNoLongerLocked:]( self,  "secureCheckUngraft:forDescriptorNoLongerLocked:",  @"handleClientAlterLockOperation(END_PREVIOUS_LOCKS)",  v69);
        if ([v69 secureOperationEliminating])
        {
          uint64_t v65 = @"handleClientAlterLockOperation(END_PREVIOUS_LOCKS)";
LABEL_52:
          -[MADAutoAssetControlManager eliminateUngraftDescriptor:forAutoAssetDescriptor:failingClientRequestForEventInfo:]( self,  "eliminateUngraftDescriptor:forAutoAssetDescriptor:failingClientRequestForEventInfo:",  v65,  v12,  0LL);
        }
      }

      else
      {
        if (!+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v70,  @"MA-AUTO:END_ALL_PREVIOUS_LOCKS"))
        {
          -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6106LL,  @"handleClientAlterLockOperation",  @"unknown auto-asset lock manipulation command request received");
          id v12 = v69;
LABEL_48:

          goto LABEL_49;
        }

        id v58 = [v71 safeObjectForKey:@"end" ofClass:objc_opt_class(MAAutoAssetInfoEnd)];
        id v32 = (void *)objc_claimAutoreleasedReturnValue(v58);
        uint64_t v59 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetClientName]);
        uint64_t v60 = (void *)objc_claimAutoreleasedReturnValue([v10 clientAssetSelector]);
        id v61 = (void *)objc_claimAutoreleasedReturnValue([v32 endLockReason]);
        id v72 = 0LL;
        unsigned int v62 = +[MADAutoAssetLocker endedAllPreviousLocksByClient:forAssetSelector:forLockReason:endError:]( &OBJC_CLASS___MADAutoAssetLocker,  "endedAllPreviousLocksByClient:forAssetSelector:forLockReason:endError:",  v59,  v60,  v61,  &v72);
        id v38 = v72;

        if (!v62)
        {
          uint64_t v57 = @"failed to end all locks of auto-specific-asset (for client-specified criteria)";
          goto LABEL_44;
        }

        id v12 = v69;
        if (-[MADAutoAssetControlManager isDescriptorCurrentlyLocked:forDescriptor:]( self,  "isDescriptorCurrentlyLocked:forDescriptor:",  @"handleClientAlterLockOperation",  v69))
        {
          id v51 = @"successful end of all previous locks of auto-specific-asset (yet still other lock[s])";
          goto LABEL_33;
        }

        -[MADAutoAssetControlManager secureCheckUngraft:forDescriptorNoLongerLocked:]( self,  "secureCheckUngraft:forDescriptorNoLongerLocked:",  @"handleClientAlterLockOperation(END_ALL_PREVIOUS_LOCKS)",  v69);
        if ([v69 secureOperationEliminating])
        {
          uint64_t v65 = @"handleClientAlterLockOperation(END_ALL_PREVIOUS_LOCKS)";
          goto LABEL_52;
        }
      }

      BOOL v25 = v67;
      unsigned __int8 v30 = v68;
      if (usingCentralizedCachedelete())
      {
        uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([v68 path]);
        markAssetPurgeable(v66);

        unsigned __int8 v30 = v68;
        id v12 = v69;
      }

      uint64_t v64 = @"successful end of previous locks of auto-specific-asset (last lock ended)";
      goto LABEL_56;
    }

    uint64_t v26 = @"asset-selector missing indication of asset-version when required to identify pre-existing lock";
  }

  else
  {
    uint64_t v26 = @"no auto-asset-instance provided in client request related to pre-existing lock";
  }

  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6102LL,  @"handleClientAlterLockOperation",  v26);
LABEL_49:
}

- (void)handleClientCurrentStatusRequest:(id)a3 forAutoJob:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __74__MADAutoAssetControlManager_handleClientCurrentStatusRequest_forAutoJob___block_invoke;
  block[3] = &unk_34DB70;
  void block[4] = self;
  id v13 = v6;
  id v14 = v7;
  id v10 = v7;
  id v11 = v6;
  dispatch_async(v9, block);
}

void __74__MADAutoAssetControlManager_handleClientCurrentStatusRequest_forAutoJob___block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientRequestMessageInstance:*(void *)(a1 + 40)]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentStatusBySelector]);
  id v4 = *(void **)(a1 + 32);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v2 clientAssetSelector]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 jobSelectorKey:v5]);
  id v7 = [v3 safeObjectForKey:v6 ofClass:objc_opt_class(MAAutoAssetStatus)];
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  unsigned __int8 v139 = v2;
  uint64_t v140 = a1;
  id v138 = *(id *)(a1 + 48);
  if (v8)
  {
    uint64_t v141 = *(void **)(a1 + 32);
    uint64_t v134 = objc_claimAutoreleasedReturnValue([v2 clientAssetSelector]);
    id v130 = (void *)objc_claimAutoreleasedReturnValue([v8 notifications]);
    __int128 v126 = (void *)objc_claimAutoreleasedReturnValue([v8 availableForUseAttributes]);
    id v123 = (void *)objc_claimAutoreleasedReturnValue([v8 newerVersionAttributes]);
    unsigned int v120 = [v8 neverBeenLocked];
    unsigned int v117 = [v8 downloadUserInitiated];
    __int16 v111 = (void *)objc_claimAutoreleasedReturnValue([v8 downloadProgress]);
    id v116 = [v8 downloadedNetworkBytes];
    id v114 = [v8 downloadedFilesystemBytes];
    unsigned __int8 v113 = [v8 downloadedAsPatch];
    id v110 = (void *)objc_claimAutoreleasedReturnValue([v8 patchedFromBaseSelector]);
    id v112 = [v8 patchedFromBaseFilesystemBytes];
    unsigned __int8 v9 = [v8 patchingAttempted];
    unsigned __int8 v10 = [v8 stagedPriorToAvailable];
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 stagedFromOSVersion]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v8 stagedFromBuildVersion]);
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v8 availableForUseError]);
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v8 patchingAttemptError]);
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v8 newerVersionError]);
    LOBYTE(v109) = 1;
    BYTE1(v108) = v10;
    LOBYTE(v108) = v9;
    LOBYTE(v107) = v113;
    id v16 = (void *)v134;
    id v142 = objc_msgSend( v141,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNe verBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFiles ystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchin gAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurre ntLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v134,  v130,  v126,  v123,  v120,  v117,  v111,  v116,  v114,  v107,  v110,  v112,  v108,  v11,  v12,  v109,  v13,  v14,  v15);

LABEL_7:
    goto LABEL_8;
  }

  id v17 = (void *)objc_claimAutoreleasedReturnValue([v2 clientAssetSelector]);
  unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue([v17 assetVersion]);

  unsigned int v19 = *(void **)(a1 + 32);
  if (v18)
  {
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v2 clientAssetSelector]);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v19 locateDownloadedByFullSelector:v20]);

    id v21 = *(void **)(a1 + 32);
    if (v16)
    {
      uint64_t v135 = objc_claimAutoreleasedReturnValue([v2 clientAssetSelector]);
      id v131 = objc_alloc_init(&OBJC_CLASS___MAAutoAssetNotifications);
      __int128 v127 = (void *)objc_claimAutoreleasedReturnValue([v16 metadata]);
      unsigned int v143 = [v16 neverBeenLocked];
      unsigned int v124 = [v16 downloadUserInitiated];
      id v121 = [v16 downloadedNetworkBytes];
      id v118 = [v16 downloadedFilesystemBytes];
      unsigned __int8 v22 = [v16 isPatch];
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v16 patchedFromBaseSelector]);
      id v24 = [v16 patchedFromBaseFilesystemBytes];
      unsigned __int8 v25 = [v16 patchingAttempted];
      unsigned __int8 v26 = [v16 stagedPriorToAvailable];
      id v27 = (void *)objc_claimAutoreleasedReturnValue([v16 stagedFromOSVersion]);
      id v28 = (void *)objc_claimAutoreleasedReturnValue([v16 stagedFromBuildVersion]);
      id v29 = (void *)objc_claimAutoreleasedReturnValue([v16 patchingAttemptError]);
      LOBYTE(v109) = 1;
      BYTE1(v108) = v26;
      LOBYTE(v108) = v25;
      unsigned __int8 v30 = (void *)v135;
      LOBYTE(v107) = v22;
      id v142 = objc_msgSend( v21,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:with NeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedF ilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withP atchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingW ithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v135,  v131,  v127,  0,  v143,  v124,  0,  v121,  v118,  v107,  v23,  v24,  v108,  v27,  v28,  v109,  0,  v29,  0);

LABEL_6:
      goto LABEL_7;
    }

    uint64_t v63 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stagerCurrentJob]);
    if (v63)
    {
      unsigned __int8 v30 = (void *)v63;
      uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue([v2 clientAssetSelector]);
      uint64_t v65 = (void *)objc_claimAutoreleasedReturnValue([v64 assetType]);
      uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stagerCurrentJob]);
      id v67 = (void *)objc_claimAutoreleasedReturnValue([v66 autoAssetSelector]);
      uint64_t v68 = v2;
      id v69 = (void *)objc_claimAutoreleasedReturnValue([v67 assetType]);
      if (!+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v65, v69))
      {

LABEL_53:
        id v142 = 0LL;
        goto LABEL_6;
      }

      uint64_t v144 = v64;
      id v136 = v30;
      id v70 = (void *)objc_claimAutoreleasedReturnValue([v68 clientAssetSelector]);
      uint64_t v71 = objc_claimAutoreleasedReturnValue([v70 assetSpecifier]);
      id v128 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stagerCurrentJob]);
      __int128 v125 = (void *)objc_claimAutoreleasedReturnValue([v128 autoAssetSelector]);
      uint64_t v72 = objc_claimAutoreleasedReturnValue([v125 assetSpecifier]);
      __int16 v132 = (void *)v71;
      uint64_t v73 = v71;
      id v74 = (void *)v72;
      if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v73, v72))
      {
        id v119 = (void *)objc_claimAutoreleasedReturnValue([v68 clientAssetSelector]);
        unsigned int v115 = (void *)objc_claimAutoreleasedReturnValue([v119 assetVersion]);
        id v75 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stagerCurrentJob]);
        id v122 = v70;
        id v76 = (void *)objc_claimAutoreleasedReturnValue([v75 autoAssetSelector]);
        id v77 = v65;
        id v78 = (void *)objc_claimAutoreleasedReturnValue([v76 assetVersion]);
        unsigned int v79 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v115, v78);

        uint64_t v65 = v77;
        id v70 = v122;
      }

      else
      {
        unsigned int v79 = 0;
      }

      if (v79)
      {
        id v102 = *(void **)(v140 + 32);
        if (!*(void *)(v140 + 48))
        {
          __int128 v104 = (void *)objc_claimAutoreleasedReturnValue([v139 clientAssetSelector]);
          uint64_t v105 = objc_alloc_init(&OBJC_CLASS___MAAutoAssetNotifications);
          LOBYTE(v109) = 1;
          LOWORD(v108) = 0;
          LOBYTE(v107) = 0;
          id v142 = objc_msgSend( v102,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes: withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDow nloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesyste mBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVe rsion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v104,  v105,  0,  0,  1,  0,  0,  -1,  -1,  v107,  0,  -1,  v108,  0,  0,  v109,  0,  0,  0);

          unsigned __int8 v30 = v138;
          id v138 = (id)objc_claimAutoreleasedReturnValue([*(id *)(v140 + 32) stagerCurrentJob]);
          goto LABEL_6;
        }

        unsigned __int8 v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v140 + 32) autoControlManagerFSM]);
        __int128 v103 = (void *)objc_claimAutoreleasedReturnValue([v30 diag]);
        [v103 trackAnomaly:@"AUTO-CONTROL" forReason:@"{handleClientCurrentStatusRequest} downloading-stager-job matching provided auto-job" withResult:6101 withError:0];

        goto LABEL_53;
      }
    }

    id v142 = 0LL;
    goto LABEL_7;
  }

  uint64_t v58 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stagerCurrentJob]);
  if (v58)
  {
    uint64_t v59 = (void *)v58;
    uint64_t v60 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stagerCurrentJob]);
    id v61 = (void *)objc_claimAutoreleasedReturnValue([v60 autoAssetSelector]);
    unsigned int v62 = (void *)objc_claimAutoreleasedReturnValue([v61 assetVersion]);
    if (v62)
    {
    }

    else
    {
      uint64_t v145 = (void *)objc_claimAutoreleasedReturnValue([v2 clientAssetSelector]);
      id v80 = (void *)objc_claimAutoreleasedReturnValue([v145 assetType]);
      id v81 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stagerCurrentJob]);
      unsigned int v82 = (void *)objc_claimAutoreleasedReturnValue([v81 autoAssetSelector]);
      id v83 = (void *)objc_claimAutoreleasedReturnValue([v82 assetType]);
      uint64_t v137 = v80;
      if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v80, v83))
      {
        id v129 = (void *)objc_claimAutoreleasedReturnValue([v2 clientAssetSelector]);
        id v84 = (void *)objc_claimAutoreleasedReturnValue([v129 assetSpecifier]);
        id v85 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stagerCurrentJob]);
        uint64_t v86 = (void *)objc_claimAutoreleasedReturnValue([v85 autoAssetSelector]);
        unsigned int v87 = (void *)objc_claimAutoreleasedReturnValue([v86 assetSpecifier]);
        unsigned int v133 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v84, v87);

        uint64_t v88 = v140;
        uint64_t v2 = v139;

        if (!v133) {
          goto LABEL_34;
        }
        unsigned int v89 = *(void **)(v140 + 32);
        if (!*(void *)(v140 + 48))
        {
          uint64_t v106 = objc_claimAutoreleasedReturnValue([v89 stagerCurrentJob]);

          id v99 = 0LL;
          id v138 = (id)v106;
LABEL_46:
          __int128 v100 = *(void **)(v88 + 32);
          id v90 = (id)objc_claimAutoreleasedReturnValue([v2 clientAssetSelector]);
          __int128 v101 = objc_alloc_init(&OBJC_CLASS___MAAutoAssetNotifications);
          LOBYTE(v109) = 1;
          LOWORD(v108) = 0;
          LOBYTE(v107) = 0;
          id v142 = objc_msgSend( v100,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes: withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDow nloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesyste mBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVe rsion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v90,  v101,  0,  0,  1,  0,  0,  -1,  -1,  v107,  0,  -1,  v108,  0,  0,  v109,  0,  0,  0);

          goto LABEL_47;
        }

        uint64_t v59 = (void *)objc_claimAutoreleasedReturnValue([v89 autoControlManagerFSM]);
        uint64_t v60 = (void *)objc_claimAutoreleasedReturnValue([v59 diag]);
        [v60 trackAnomaly:@"AUTO-CONTROL" forReason:@"{handleClientCurrentStatusRequest} determining-stager-job matching provided auto-job" withResult:6101 withError:0];
        goto LABEL_33;
      }
    }

LABEL_33:
  }

- (void)handleClientMapLockedToExclaveRequest:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned __int8 v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  unsigned __int8 v10 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:handleClientMapLockedToExclaveRequest",  v7);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v6));
  id v12 = v11;
  if (!v11)
  {
    id v28 = @"no auto-asset-instance provided in client map-locked-to-exclave request";
LABEL_19:
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6102LL,  v10,  v28);
    goto LABEL_24;
  }

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 clientAssetSelector]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSpecifier]);

  if (!v14)
  {
    id v28 = @"asset-selector missing asset-specifier to be mapped";
    goto LABEL_19;
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 assetVersion]);

  if (!v16)
  {
    id v28 = @"asset-selector missing asset-version to be mapped";
    goto LABEL_19;
  }

  id v31 = v10;
  id v32 = v7;
  unsigned __int8 v30 = v12;
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
  id v29 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v17));
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  id v18 = +[MADAutoAssetLocker copyOfLocksBySelector](&OBJC_CLASS___MADAutoAssetLocker, "copyOfLocksBySelector");
  id v19 = [v18 countByEnumeratingWithState:&v38 objects:v42 count:16];
  if (v19)
  {
    id v20 = v19;
    uint64_t v21 = *(void *)v39;
    while (2)
    {
      for (unint64_t i = 0LL; i != v20; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v39 != v21) {
          objc_enumerationMutation(v18);
        }
        id v23 = [v18 safeObjectForKey:*(void *)(*((void *)&v38 + 1) + 8 * (void)i) ofClass:objc_opt_class(MAAutoAssetLock)];
        id v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
        unsigned __int8 v25 = (void *)objc_claimAutoreleasedReturnValue([v24 fullAssetSelector]);
        unsigned __int8 v26 = [v25 isEqual:v17];

        if ((v26 & 1) != 0)
        {

          unsigned __int8 v10 = v31;
          id v27 = v29;
          if (+[MADAutoAssetSecure doesDescriptorInvolveGrafting:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "doesDescriptorInvolveGrafting:forDescriptor:",  v31,  v29))
          {
            id v12 = v30;
            if ([v29 secureOperationInProgress])
            {
              -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6532LL,  v31,  @"secure operation already in-progress for set-descriptor - mapping blocked until current secure operation has completed");
            }

            else
            {
              [v29 setSecureOperationInProgress:1];
              v33[0] = _NSConcreteStackBlock;
              v33[1] = 3221225472LL;
              v33[2] = __81__MADAutoAssetControlManager_handleClientMapLockedToExclaveRequest_fromLocation___block_invoke;
              v33[3] = &unk_34F330;
              v33[4] = self;
              id v34 = v29;
              id v35 = v17;
              id v36 = v31;
              id v37 = v6;
              +[MADAutoAssetSecure mapToExclave:forDescriptor:completion:]( &OBJC_CLASS___MADAutoAssetSecure,  "mapToExclave:forDescriptor:completion:",  v36,  v34,  v33);
            }

            id v7 = v32;
          }

          else
          {
            -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6531LL,  v31,  @"asset-selector is not a cyptex file (must be a cryptex to map to exclave environment)");
            id v7 = v32;
            id v12 = v30;
          }

          goto LABEL_23;
        }
      }

      id v20 = [v18 countByEnumeratingWithState:&v38 objects:v42 count:16];
      if (v20) {
        continue;
      }
      break;
    }
  }

  unsigned __int8 v10 = v31;
  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6501LL,  v31,  @"asset-selector is not currently locked (must be locked to map to exclave environment)");
  id v7 = v32;
  id v27 = v29;
  id v12 = v30;
LABEL_23:

LABEL_24:
}

void __81__MADAutoAssetControlManager_handleClientMapLockedToExclaveRequest_fromLocation___block_invoke( id *a1,  uint64_t a2,  void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] autoControlManagerFSM]);
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = __81__MADAutoAssetControlManager_handleClientMapLockedToExclaveRequest_fromLocation___block_invoke_2;
  v10[3] = &unk_34F308;
  id v7 = a1[5];
  id v8 = a1[4];
  id v11 = v7;
  id v12 = v8;
  id v13 = a1[6];
  id v14 = a1[7];
  id v15 = a1[8];
  id v16 = v4;
  id v9 = v4;
  dispatch_async(v6, v10);
}

id __81__MADAutoAssetControlManager_handleClientMapLockedToExclaveRequest_fromLocation___block_invoke_2( uint64_t a1)
{
  if ([*(id *)(a1 + 40) isAutoAssetBeingEliminated:*(void *)(a1 + 48)])
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) logger]);
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 oslog]);

    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 56);
      id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) summary]);
      int v8 = 138543618;
      uint64_t v9 = v4;
      __int16 v10 = 2114;
      id v11 = v5;
      _os_log_impl( &dword_0,  v3,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-MAP][ELIMINATE] {%{public}@} | eliminate triggered while mapping-to-exclave | mapDescriptor:%{public}@",  (uint8_t *)&v8,  0x16u);
    }

    return [*(id *)(a1 + 40) eliminateUngraftDescriptor:*(void *)(a1 + 56) forAutoAssetDescriptor:*(void *)(a1 + 32) failingClientRequestForEventInfo:*(void *)(a1 + 64)];
  }

  else
  {
    id v7 = *(void **)(a1 + 40);
    if (*(void *)(a1 + 72)) {
      return objc_msgSend( v7,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  *(void *)(a1 + 64));
    }
    else {
      return [v7 lockAutoAssetReplyJobResponse:@"mapping successful" forEventInfo:*(void *)(a1 + 64) lockingChosenDescriptor:*(void *)(a1 + 32)];
    }
  }

- (void)handleClientCancelActivityForSelectorRequest:(id)a3
{
  id v12 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v12));
  id v7 = v6;
  if (!v6)
  {
    id v11 = @"no auto-asset-instance provided in client cancel-activity request";
LABEL_6:
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v12,  6102LL,  @"handleClientCancelActivityForSelectorRequest",  v11);
    goto LABEL_7;
  }

  int v8 = (void *)objc_claimAutoreleasedReturnValue([v6 clientAssetSelector]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSpecifier]);

  if (!v9)
  {
    id v11 = @"asset-selector missing asset-specifier when required for cancel-activity request";
    goto LABEL_6;
  }

  __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([v7 clientAssetSelector]);
  -[MADAutoAssetControlManager _eliminateBegin:forAssetSelector:limitingToActivity:fromLocation:]( self,  "_eliminateBegin:forAssetSelector:limitingToActivity:fromLocation:",  v12,  v10,  1LL,  @"handleClientCancelActivityForSelectorRequest");

LABEL_7:
}

- (void)handleClientEliminateAllForSelectorRequest:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v4));
  int v8 = v7;
  if (!v7)
  {
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v4,  6102LL,  @"handleClientEliminateAllForSelectorRequest",  @"no auto-asset-instance provided in client eliminate request");
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 oslog]);

    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager handleClientEliminateAllForSelectorRequest:].cold.1(v4);
    }
    goto LABEL_8;
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v7 clientAssetSelector]);
  __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSpecifier]);

  if (!v10)
  {
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v4,  6102LL,  @"handleClientEliminateAllForSelectorRequest",  @"asset-selector missing asset-specifier when required for eliminate request");
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager handleClientEliminateAllForSelectorRequest:].cold.2(v4);
    }
LABEL_8:

    goto LABEL_9;
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 clientAssetSelector]);
  -[MADAutoAssetControlManager _eliminateBegin:forAssetSelector:limitingToActivity:fromLocation:]( self,  "_eliminateBegin:forAssetSelector:limitingToActivity:fromLocation:",  v4,  v11,  0LL,  @"handleClientEliminateAllForSelectorRequest");

LABEL_9:
}

- (void)handleClientEliminateAllForAssetTypeRequest:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v4));
  if (v7)
  {
    int v8 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v7 clientAssetSelector]);
    __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);
    id v11 = -[MAAutoAssetSelector initForAssetType:](v8, "initForAssetType:", v10);

    -[MADAutoAssetControlManager _eliminateBegin:forAssetSelector:limitingToActivity:fromLocation:]( self,  "_eliminateBegin:forAssetSelector:limitingToActivity:fromLocation:",  v4,  v11,  0LL,  @"handleClientEliminateAllForAssetTypeRequest");
  }

  else
  {
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v4,  6102LL,  @"handleClientEliminateAllForAssetTypeRequest",  @"no auto-asset-instance provided in client eliminate request");
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 oslog]);

    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager handleClientEliminateAllForAssetTypeRequest:].cold.1(v4);
    }
  }
}

- (void)handleClientEliminatePromotedNeverLockedForSelectorRequest:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v4));
  int v8 = v7;
  if (v7)
  {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v7 clientAssetSelector]);
    __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSpecifier]);

    if (v10)
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 clientAssetSelector]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 assetVersion]);

      if (!v12)
      {
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v8 clientAssetSelector]);
        -[MADAutoAssetControlManager _eliminatePromotedNeverLocked:forAssetSelector:]( self,  "_eliminatePromotedNeverLocked:forAssetSelector:",  v4,  v17);

        goto LABEL_11;
      }

      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v4,  6102LL,  @"handleClientEliminatePromotedNeverLockedForSelectorRequest",  @"asset-selector with asset-version not supported for eliminate request");
      id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 oslog]);

      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager handleClientEliminatePromotedNeverLockedForSelectorRequest:].cold.3(v4);
      }
    }

    else
    {
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v4,  6102LL,  @"handleClientEliminatePromotedNeverLockedForSelectorRequest",  @"asset-selector missing asset-specifier when required for eliminate request");
      id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 oslog]);

      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager handleClientEliminatePromotedNeverLockedForSelectorRequest:].cold.2(v4);
      }
    }
  }

  else
  {
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v4,  6102LL,  @"handleClientEliminatePromotedNeverLockedForSelectorRequest",  @"no auto-asset-instance provided in client eliminate request");
    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 oslog]);

    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager handleClientEliminatePromotedNeverLockedForSelectorRequest:].cold.1(v4);
    }
  }

LABEL_11:
}

- (void)handleControlClientControlStatisticsRequest:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int v8 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v19 = (id)objc_claimAutoreleasedReturnValue([v8 message]);

  id v9 = +[MASAutoAssetInfoControl newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetInfoControl,  "newShimmedFromFrameworkMessage:forKey:",  v19,  @"control");
  __int16 v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _statsCombinedCopy:]( self,  "_statsCombinedCopy:",  [v9 clearingAfter]));
  id v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v12 = +[MASAutoAssetControlStatistics newShimmedToFramework:]( &OBJC_CLASS___MASAutoAssetControlStatistics,  "newShimmedToFramework:",  v10);
  -[NSMutableDictionary setSafeObject:forKey:](v11, "setSafeObject:forKey:", v12, @"controlStatistics");

  id v13 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v14));
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 clientID]);
  id v18 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v13,  "initWithType:messageName:clientID:version:message:",  2LL,  v15,  v17,  0LL,  v11);

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v5,  v18,  0LL,  @"handleControlClientControlStatisticsRequest");
}

- (void)handleControlClientAvailableForStagingSummaryRequest:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v13 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  +[MADAutoAssetStager extendSummaryWithAvailableForStagingAssets:]( &OBJC_CLASS___MADAutoAssetStager,  "extendSummaryWithAvailableForStagingAssets:",  v13);
  -[NSMutableDictionary setSafeObject:forKey:](v6, "setSafeObject:forKey:", v13, @"jobSummary");
  id v7 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  int v8 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v8));
  __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 clientID]);
  id v12 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v7,  "initWithType:messageName:clientID:version:message:",  2LL,  v9,  v11,  0LL,  v6);

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v5,  v12,  0LL,  @"handleControlClientAvailableForStagingSummaryRequest");
}

- (void)handleControlClientKnownAssetSummaryRequest:(id)a3 forAutoJob:(id)a4
{
  id v6 = a3;
  id v53 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  int v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  uint64_t v54 = v6;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
  uint64_t v10 = objc_claimAutoreleasedReturnValue([v9 message]);

  id v52 = (void *)v10;
  id v11 = +[MASAutoAssetInfoControl newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetInfoControl,  "newShimmedFromFrameworkMessage:forKey:",  v10,  @"control");
  id v12 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  -[MADAutoAssetControlManager addActiveJobs:basedOnControl:](self, "addActiveJobs:basedOnControl:", v12, v11);
  -[MADAutoAssetControlManager addSuccessfullyDownloadedJobs:basedOnControl:]( self,  "addSuccessfullyDownloadedJobs:basedOnControl:",  v12,  v11);
  +[MADAutoAssetStager extendSummaryWithDeterminedAssets:basedOnControl:]( &OBJC_CLASS___MADAutoAssetStager,  "extendSummaryWithDeterminedAssets:basedOnControl:",  v12,  v11);
  +[MADAutoAssetStager extendSummaryWithStagingAssets:basedOnControl:]( &OBJC_CLASS___MADAutoAssetStager,  "extendSummaryWithStagingAssets:basedOnControl:",  v12,  v11);
  +[MADAutoAssetStager extendSummaryWithStagedAssets:basedOnControl:]( &OBJC_CLASS___MADAutoAssetStager,  "extendSummaryWithStagedAssets:basedOnControl:",  v12,  v11);
  uint64_t v56 = v12;
  +[MADAutoAssetScheduler addScheduledJobs:basedOnControl:]( &OBJC_CLASS___MADAutoAssetScheduler,  "addScheduledJobs:basedOnControl:",  v12,  v11);
  __int128 v63 = 0u;
  __int128 v64 = 0u;
  __int128 v61 = 0u;
  __int128 v62 = 0u;
  uint64_t v55 = self;
  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsAwaitingSync](self, "clientRequestsAwaitingSync"));
  id v14 = [v13 countByEnumeratingWithState:&v61 objects:v66 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v62;
    do
    {
      id v17 = 0LL;
      do
      {
        if (*(void *)v62 != v16) {
          objc_enumerationMutation(v13);
        }
        id v18 = *(void **)(*((void *)&v61 + 1) + 8LL * (void)v17);
        id v19 = objc_autoreleasePoolPush();
        id v20 = (void *)objc_claimAutoreleasedReturnValue([v18 autoAssetSelector]);
        unsigned int v21 = +[MADAutoAssetControlManager selectorToBeIncluded:basedOnControl:]( &OBJC_CLASS___MADAutoAssetControlManager,  "selectorToBeIncluded:basedOnControl:",  v20,  v11);

        if (v21)
        {
          unsigned __int8 v22 = (void *)objc_claimAutoreleasedReturnValue([v18 autoAssetStatus]);
          id v23 = [v22 copy];

          id v24 = objc_alloc(&OBJC_CLASS___MAAutoAssetSummary);
          unsigned __int8 v25 = (void *)objc_claimAutoreleasedReturnValue([v18 autoAssetSelector]);
          unsigned __int8 v26 = -[MAAutoAssetSummary initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:withScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMonitorCount:withMaximumClientCount:withTotalClientCount:]( v24,  "initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:with ScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMon itorCount:withMaximumClientCount:withTotalClientCount:",  v25,  200LL,  0LL,  0LL,  v23,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL);

          if (v26)
          {
            -[NSMutableArray addObject:](v56, "addObject:", v26);
          }

          else
          {
            id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v55, "autoControlManagerFSM"));
            id v28 = (void *)objc_claimAutoreleasedReturnValue([v27 diag]);
            [v28 trackAnomaly:@"AUTO-CONTROL" forReason:@"{handleControlClientKnownAssetSummaryRequest} unable to allocate summaryEntry for clientRequestsAwaitingSync" withResult:6101 withError:0];
          }
        }

        objc_autoreleasePoolPop(v19);
        id v17 = (char *)v17 + 1;
      }

      while (v15 != v17);
      id v15 = [v13 countByEnumeratingWithState:&v61 objects:v66 count:16];
    }

    while (v15);
  }

  __int128 v59 = 0u;
  __int128 v60 = 0u;
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  id v29 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestsAwaitingFirstUnlock]( v55,  "clientRequestsAwaitingFirstUnlock"));
  id v30 = [v29 countByEnumeratingWithState:&v57 objects:v65 count:16];
  if (v30)
  {
    id v31 = v30;
    uint64_t v32 = *(void *)v58;
    do
    {
      unsigned __int8 v33 = 0LL;
      do
      {
        if (*(void *)v58 != v32) {
          objc_enumerationMutation(v29);
        }
        id v34 = *(void **)(*((void *)&v57 + 1) + 8LL * (void)v33);
        id v35 = objc_autoreleasePoolPush();
        id v36 = (void *)objc_claimAutoreleasedReturnValue([v34 autoAssetSelector]);
        unsigned int v37 = +[MADAutoAssetControlManager selectorToBeIncluded:basedOnControl:]( &OBJC_CLASS___MADAutoAssetControlManager,  "selectorToBeIncluded:basedOnControl:",  v36,  v11);

        if (v37)
        {
          __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([v34 autoAssetStatus]);
          id v39 = [v38 copy];

          __int128 v40 = objc_alloc(&OBJC_CLASS___MAAutoAssetSummary);
          __int128 v41 = (void *)objc_claimAutoreleasedReturnValue([v34 autoAssetSelector]);
          id v42 = -[MAAutoAssetSummary initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:withScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMonitorCount:withMaximumClientCount:withTotalClientCount:]( v40,  "initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:with ScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMon itorCount:withMaximumClientCount:withTotalClientCount:",  v41,  201LL,  0LL,  0LL,  v39,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL);

          if (v42)
          {
            -[NSMutableArray addObject:](v56, "addObject:", v42);
          }

          else
          {
            id v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v55, "autoControlManagerFSM"));
            id v44 = (void *)objc_claimAutoreleasedReturnValue([v43 diag]);
            [v44 trackAnomaly:@"AUTO-CONTROL" forReason:@"{handleControlClientKnownAssetSummaryRequest} unable to allocate summaryEntry for clientRequestsAwaitingFirstUnlock" withResult:6101 withError:0];
          }
        }

        objc_autoreleasePoolPop(v35);
        unsigned __int8 v33 = (char *)v33 + 1;
      }

      while (v31 != v33);
      id v31 = [v29 countByEnumeratingWithState:&v57 objects:v65 count:16];
    }

    while (v31);
  }

  uint64_t v45 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setSafeObject:forKey:](v45, "setSafeObject:forKey:", v56, @"jobSummary");
  id v46 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  id v47 = (void *)objc_claimAutoreleasedReturnValue([v54 clientRequestMessage]);
  id v48 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v47));
  id v49 = (void *)objc_claimAutoreleasedReturnValue([v54 clientRequestMessage]);
  unsigned int v50 = (void *)objc_claimAutoreleasedReturnValue([v49 clientID]);
  id v51 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v46,  "initWithType:messageName:clientID:version:message:",  2LL,  v48,  v50,  0LL,  v45);

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( v55,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v54,  v51,  0LL,  @"handleControlClientKnownAssetSummaryRequest");
}

- (void)handleControlClientLockedAssetSummaryRequest:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int v8 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v18 = (id)objc_claimAutoreleasedReturnValue([v8 message]);

  id v9 = +[MASAutoAssetInfoControl newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetInfoControl,  "newShimmedFromFrameworkMessage:forKey:",  v18,  @"control");
  uint64_t v10 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  +[MADAutoAssetLocker addClientLockReasons:basedOnControl:]( &OBJC_CLASS___MADAutoAssetLocker,  "addClientLockReasons:basedOnControl:",  v10,  v9);
  id v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setSafeObject:forKey:](v11, "setSafeObject:forKey:", v10, @"lockSummary");
  id v12 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v13));
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 clientID]);
  id v17 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v12,  "initWithType:messageName:clientID:version:message:",  2LL,  v14,  v16,  0LL,  v11);

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v5,  v17,  0LL,  @"handleControlClientKnownAssetSummaryRequest");
}

- (void)handleControlClientStagedAssetSummaryRequest:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int v8 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v18 = (id)objc_claimAutoreleasedReturnValue([v8 message]);

  id v9 = +[MASAutoAssetInfoControl newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetInfoControl,  "newShimmedFromFrameworkMessage:forKey:",  v18,  @"control");
  uint64_t v10 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  +[MADAutoAssetStager extendSummaryWithStagedAssets:basedOnControl:]( &OBJC_CLASS___MADAutoAssetStager,  "extendSummaryWithStagedAssets:basedOnControl:",  v10,  v9);
  id v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setSafeObject:forKey:](v11, "setSafeObject:forKey:", v10, @"jobSummary");
  id v12 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v13));
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 clientID]);
  id v17 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v12,  "initWithType:messageName:clientID:version:message:",  2LL,  v14,  v16,  0LL,  v11);

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v5,  v17,  0LL,  @"handleControlClientStagedAssetSummaryRequest");
}

- (void)handleControlClientActiveJobSummaryRequest:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int v8 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v18 = (id)objc_claimAutoreleasedReturnValue([v8 message]);

  id v9 = +[MASAutoAssetInfoControl newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetInfoControl,  "newShimmedFromFrameworkMessage:forKey:",  v18,  @"control");
  uint64_t v10 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  -[MADAutoAssetControlManager addActiveJobs:basedOnControl:](self, "addActiveJobs:basedOnControl:", v10, v9);
  id v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setSafeObject:forKey:](v11, "setSafeObject:forKey:", v10, @"jobSummary");
  id v12 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v13));
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 clientID]);
  id v17 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v12,  "initWithType:messageName:clientID:version:message:",  2LL,  v14,  v16,  0LL,  v11);

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v5,  v17,  0LL,  @"handleControlClientActiveJobSummaryRequest");
}

- (void)handleControlClientScheduledJobSummaryRequest:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int v8 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v18 = (id)objc_claimAutoreleasedReturnValue([v8 message]);

  id v9 = +[MASAutoAssetInfoControl newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetInfoControl,  "newShimmedFromFrameworkMessage:forKey:",  v18,  @"control");
  uint64_t v10 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  +[MADAutoAssetScheduler addScheduledJobs:basedOnControl:]( &OBJC_CLASS___MADAutoAssetScheduler,  "addScheduledJobs:basedOnControl:",  v10,  v9);
  id v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setSafeObject:forKey:](v11, "setSafeObject:forKey:", v10, @"jobSummary");
  id v12 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v13));
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 clientID]);
  id v17 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v12,  "initWithType:messageName:clientID:version:message:",  2LL,  v14,  v16,  0LL,  v11);

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v5,  v17,  0LL,  @"handleControlClientScheduledJobSummaryRequest");
}

- (void)handleControlClientForceGlobalUnlockRequest:(id)a3 forAutoJob:(id)a4
{
  id v19 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v19));
  int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 clientAssetSelector]);
  id v9 = v8;
  if (!v8)
  {
    id v18 = @"no clientAssetSelector in request";
LABEL_8:
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v19,  6102LL,  @"RouteClientRequest",  v18);
    goto LABEL_9;
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 assetType]);

  if (!v10)
  {
    id v18 = @"clientAssetSelector is missing assetType";
    goto LABEL_8;
  }

  +[MADAutoAssetLocker forceGlobalUnlock:](&OBJC_CLASS___MADAutoAssetLocker, "forceGlobalUnlock:", v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 assetVersion]);

  if (v11)
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v9));
    -[MADAutoAssetControlManager secureCheckUngraft:forDescriptorNoLongerLocked:]( self,  "secureCheckUngraft:forDescriptorNoLongerLocked:",  @"handleControlClientForceGlobalUnlockRequest",  v12);
  }

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v19 clientRequestMessage]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v13));
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v19 clientRequestMessage]);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 clientID]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v14,  @"com.apple.MAAutoControl",  v16,  0LL,  0LL));

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v19,  v17,  0LL,  @"handleControlClientForceGlobalUnlockRequest");
LABEL_9:
}

- (void)handleControlClientForceGlobalForgetRequest:(id)a3 forAutoJob:(id)a4
{
  id v19 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v19));
  int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 clientAssetSelector]);
  id v9 = v8;
  if (!v8)
  {
    id v18 = @"no clientAssetSelector in request";
LABEL_8:
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v19,  6102LL,  @"RouteClientRequest",  v18);
    goto LABEL_9;
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 assetType]);

  if (!v10)
  {
    id v18 = @"clientAssetSelector is missing assetType";
    goto LABEL_8;
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntryID]);
  +[MADAutoAssetScheduler forceGlobalForget:](&OBJC_CLASS___MADAutoAssetScheduler, "forceGlobalForget:", v9);
  if (v11)
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager alreadyScheduledSelectors](self, "alreadyScheduledSelectors"));
    [v12 removeObjectForKey:v11];
  }

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v19 clientRequestMessage]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v13));
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v19 clientRequestMessage]);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 clientID]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v14,  @"com.apple.MAAutoControl",  v16,  0LL,  0LL));

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v19,  v17,  0LL,  @"handleControlClientForceGlobalForgetRequest");
LABEL_9:
}

- (void)handleControlClientForceGlobalPurgeRequest:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v5));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 clientAssetSelector]);
  uint64_t v10 = v9;
  if (v9)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);

    if (v11)
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v10 assetType]);
      id AutoLocalUrlFromTypeWithPurpose = getAutoLocalUrlFromTypeWithPurpose(v12, 2LL, @"auto");
      id v14 = (void *)objc_claimAutoreleasedReturnValue(AutoLocalUrlFromTypeWithPurpose);

      uint64_t v15 = objc_claimAutoreleasedReturnValue([v14 path]);
      uint64_t v16 = objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
      id v44 = (void *)v15;
      uint64_t v45 = v14;
      id v43 = (void *)v16;
      if (!v15)
      {
        id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        id v28 = (void *)objc_claimAutoreleasedReturnValue([v27 diag]);
        id v29 = objc_alloc(&OBJC_CLASS___NSString);
        id v30 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
        id v31 = -[NSString initWithFormat:]( v29,  "initWithFormat:",  @"{handleControlClientForceGlobalPurgeRequest} unable to determine local repository path for selector:%@",  v30);
        [v28 trackAnomaly:@"AUTO-CONTROL" forReason:v31 withResult:6101 withError:0];

        uint64_t v32 = objc_alloc(&OBJC_CLASS___NSString);
        id v18 = (NSURL *)objc_claimAutoreleasedReturnValue([v10 summary]);
        unsigned __int8 v33 = -[NSString initWithFormat:]( v32,  "initWithFormat:",  @"unable to determine local repository path for selector:%@",  v18);
        unsigned __int8 v25 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6107LL,  @"handleControlClientForceGlobalPurgeRequest",  0LL,  v33));

LABEL_17:
        __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
        id v39 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v38));
        __int128 v40 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequestMessage]);
        __int128 v41 = (void *)objc_claimAutoreleasedReturnValue([v40 clientID]);
        id v42 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v39,  @"com.apple.MAAutoControl",  v41,  0LL,  v25));

        -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v5,  v42,  v25,  @"handleControlClientForceGlobalPurgeRequest");
        goto LABEL_18;
      }

      id v17 = (void *)v16;
      id v18 = -[NSURL initFileURLWithPath:](objc_alloc(&OBJC_CLASS___NSURL), "initFileURLWithPath:", v15);
      if ([v17 fileExistsAtPath:v15])
      {
        id ControlManager = getControlManager();
        id v20 = (void *)objc_claimAutoreleasedReturnValue(ControlManager);
        unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue([v20 getSAFRegistrationBundleID:v18]);

        id v46 = 0LL;
        [v17 removeItemAtPath:v15 error:&v46];
        id v22 = v46;
        if (v22)
        {
          id v23 = v22;
          id v24 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"error while attempting to remove auto-asset repository directory:%@",  v15);
          unsigned __int8 v25 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6107LL,  @"handleControlClientForceGlobalPurgeRequest",  v23,  v24));
LABEL_16:

          goto LABEL_17;
        }
      }

      else
      {
        unsigned int v21 = 0LL;
      }

      id v34 = getControlManager();
      id v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
      [v35 updateSpaceAttributionForBundleID:v21 assetPath:v18 doRegistration:0];

      id v36 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetClientName]);
      if (v36) {
        uint64_t v37 = objc_claimAutoreleasedReturnValue([v8 autoAssetClientName]);
      }
      else {
        uint64_t v37 = objc_claimAutoreleasedReturnValue([v8 clientProcessName]);
      }
      id v24 = (NSString *)v37;

      id v23 = (void *)objc_claimAutoreleasedReturnValue([v10 assetType]);
      -[MADAutoAssetControlManager trackDescriptorForgetAssetType:firstClientName:]( self,  "trackDescriptorForgetAssetType:firstClientName:",  v23,  v24);
      unsigned __int8 v25 = 0LL;
      goto LABEL_16;
    }

    unsigned __int8 v26 = @"clientAssetSelector is missing assetType";
  }

  else
  {
    unsigned __int8 v26 = @"no clientAssetSelector in request";
  }

  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6102LL,  @"RouteClientRequest",  v26);
LABEL_18:
}

- (void)handleControlClientForceGlobalAbandonRequest:(id)a3 forAutoJob:(id)a4
{
  id v16 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v16));
  int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 clientAssetSelector]);
  id v9 = v8;
  if (!v8)
  {
    id v12 = @"no clientAssetSelector in request";
LABEL_6:
    id v13 = self;
    id v14 = v16;
    uint64_t v15 = 6102LL;
    goto LABEL_7;
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 assetType]);

  if (!v10)
  {
    id v12 = @"clientAssetSelector is missing assetType";
    goto LABEL_6;
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);
  -[MADAutoAssetControlManager _removeFromPersistedActiveJobs:](self, "_removeFromPersistedActiveJobs:", v11);

  id v12 = @"active jobs for provided asset-type have been removed from tracking (auto-asset-jobs may remain)";
  id v13 = self;
  id v14 = v16;
  uint64_t v15 = 0LL;
LABEL_7:
  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( v13,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v14,  v15,  @"RouteClientRequest",  v12);
}

- (void)handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequestMessage]);
  int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 message]);

  id v9 = +[MASAutoAssetInfoControl newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetInfoControl,  "newShimmedFromFrameworkMessage:forKey:",  v8,  @"control");
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    unsigned int v13 = [v9 cacheDeleteUrgency];
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v9 volumeToReclaim]);
    if (v14) {
      uint64_t v15 = (__CFString *)objc_claimAutoreleasedReturnValue([v9 volumeToReclaim]);
    }
    else {
      uint64_t v15 = @"N";
    }
    *(_DWORD *)int buf = 138543874;
    id v24 = v12;
    __int16 v25 = 1024;
    unsigned int v26 = v13;
    __int16 v27 = 2114;
    id v28 = v15;
    _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest} simulating trigger from cache-de lete to determine reclaimable space | urgency:%d, volume:%{public}@ | respondToCacheDelete...",  buf,  0x1Cu);
    if (v14) {
  }
    }

  id v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager sharedDispatchQueue](self, "sharedDispatchQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __97__MADAutoAssetControlManager_handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest___block_invoke;
  block[3] = &unk_34DB70;
  id v20 = v9;
  unsigned int v21 = self;
  id v22 = v4;
  id v17 = v4;
  id v18 = v9;
  dispatch_async(v16, block);
}

void __97__MADAutoAssetControlManager_handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest___block_invoke( uint64_t a1)
{
  id ControlManager = getControlManager();
  id v3 = (void *)objc_claimAutoreleasedReturnValue(ControlManager);
  id v4 = objc_alloc_init(&OBJC_CLASS___MADAnalyticsCacheDeleteResults);
  id v5 = [*(id *)(a1 + 32) cacheDeleteUrgency];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) volumeToReclaim]);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = __97__MADAutoAssetControlManager_handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest___block_invoke_2;
  v9[3] = &unk_34F358;
  int8x16_t v8 = *(int8x16_t *)(a1 + 32);
  id v7 = (id)v8.i64[0];
  int8x16_t v10 = vextq_s8(v8, v8, 8uLL);
  id v11 = *(id *)(a1 + 48);
  [v3 respondToCacheDelete:0 targetingPurgeAmount:0 cacheDeleteResults:v4 withUrgency:v5 forVolume:v6 then:v9];
}

void __97__MADAutoAssetControlManager_handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest___block_invoke_2( uint64_t a1,  uint64_t a2)
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) autoControlManagerFSM]);
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = __97__MADAutoAssetControlManager_handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest___block_invoke_3;
  v7[3] = &unk_34E420;
  id v6 = *(void **)(a1 + 40);
  v7[4] = *(void *)(a1 + 32);
  id v8 = v6;
  uint64_t v10 = a2;
  id v9 = *(id *)(a1 + 48);
  dispatch_async(v5, v7);
}

void __97__MADAutoAssetControlManager_handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest___block_invoke_3( uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logger]);
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 oslog]);

  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _updateLatestSummary]);
    unsigned int v5 = [*(id *)(a1 + 40) cacheDeleteUrgency];
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) volumeToReclaim]);
    if (v6) {
      id v7 = (__CFString *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) volumeToReclaim]);
    }
    else {
      id v7 = @"N";
    }
    id v8 = allocStringForBytes(*(void *)(a1 + 56));
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    int v21 = 138544130;
    id v22 = v4;
    __int16 v23 = 1024;
    unsigned int v24 = v5;
    __int16 v25 = 2114;
    unsigned int v26 = v7;
    __int16 v27 = 2114;
    id v28 = v9;
    _os_log_impl( &dword_0,  v3,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest} simulating trigger from cache-de lete to determine reclaimable space | urgency:%d, volume:%{public}@ | reclaimableSpace:%{public}@ | ...respondToCacheDelete",  (uint8_t *)&v21,  0x26u);
    if (v6) {
  }
    }

  uint64_t v10 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v11 = objc_alloc(&OBJC_CLASS___MANAutoAssetInfoControl);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) volumeToReclaim]);
  unsigned int v13 = -[MANAutoAssetInfoControl initWithVolumeToReclaim:withUrgency:targetingPurgeAmount:]( v11,  "initWithVolumeToReclaim:withUrgency:targetingPurgeAmount:",  v12,  [*(id *)(a1 + 40) cacheDeleteUrgency],  *(void *)(a1 + 56));

  id v14 = +[MASAutoAssetInfoControl newShimmedToFramework:]( &OBJC_CLASS___MASAutoAssetInfoControl,  "newShimmedToFramework:",  v13);
  -[NSMutableDictionary setSafeObject:forKey:](v10, "setSafeObject:forKey:", v14, @"control");

  uint64_t v15 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) clientRequestMessage]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v16));
  id v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) clientRequestMessage]);
  id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 clientID]);
  id v20 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v15,  "initWithType:messageName:clientID:version:message:",  2LL,  v17,  v19,  0LL,  v10);

  [*(id *)(a1 + 32) issueBuiltResponseForEventInfo:*(void *)(a1 + 48) issuingResponseMessage:v20 withResponseError:0 fromLocation:@"handleControlClientSimulatedCacheDeleteDetermineReclaimableRequest"];
}

- (void)handleControlClientSimulatedCacheDeleteReclaimSpaceRequest:(id)a3
{
  id v4 = a3;
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequestMessage]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 message]);

  id v9 = +[MASAutoAssetInfoControl newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetInfoControl,  "newShimmedFromFrameworkMessage:forKey:",  v8,  @"control");
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    unsigned int v13 = [v9 cacheDeleteUrgency];
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v9 volumeToReclaim]);
    if (v14) {
      uint64_t v15 = (__CFString *)objc_claimAutoreleasedReturnValue([v9 volumeToReclaim]);
    }
    else {
      uint64_t v15 = @"N";
    }
    id v16 = allocStringForBytes((uint64_t)[v9 targetingPurgeAmount]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    *(_DWORD *)int buf = 138544130;
    unsigned int v26 = v12;
    __int16 v27 = 1024;
    unsigned int v28 = v13;
    __int16 v29 = 2114;
    id v30 = v15;
    __int16 v31 = 2114;
    uint64_t v32 = v17;
    _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {handleControlClientSimulatedCacheDeleteReclaimSpaceRequest} simulating trigger from cache-delete to reclaim space | urgency:%d, volume:%{public}@, targetingPurgeAmount:%{public}@ | respondToCacheDelete...",  buf,  0x26u);
    if (v14) {
  }
    }

  id v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager sharedDispatchQueue](self, "sharedDispatchQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __89__MADAutoAssetControlManager_handleControlClientSimulatedCacheDeleteReclaimSpaceRequest___block_invoke;
  block[3] = &unk_34DB70;
  id v22 = v9;
  __int16 v23 = self;
  id v24 = v4;
  id v19 = v4;
  id v20 = v9;
  dispatch_async(v18, block);
}

void __89__MADAutoAssetControlManager_handleControlClientSimulatedCacheDeleteReclaimSpaceRequest___block_invoke( uint64_t a1)
{
  id ControlManager = getControlManager();
  id v3 = (void *)objc_claimAutoreleasedReturnValue(ControlManager);
  id v4 = [*(id *)(a1 + 32) targetingPurgeAmount];
  unsigned int v5 = objc_alloc_init(&OBJC_CLASS___MADAnalyticsCacheDeleteResults);
  id v6 = [*(id *)(a1 + 32) cacheDeleteUrgency];
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) volumeToReclaim]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = __89__MADAutoAssetControlManager_handleControlClientSimulatedCacheDeleteReclaimSpaceRequest___block_invoke_2;
  v10[3] = &unk_34F358;
  int8x16_t v9 = *(int8x16_t *)(a1 + 32);
  id v8 = (id)v9.i64[0];
  int8x16_t v11 = vextq_s8(v9, v9, 8uLL);
  id v12 = *(id *)(a1 + 48);
  [v3 respondToCacheDelete:1 targetingPurgeAmount:v4 cacheDeleteResults:v5 withUrgency:v6 forVolume:v7 then:v10];
}

void __89__MADAutoAssetControlManager_handleControlClientSimulatedCacheDeleteReclaimSpaceRequest___block_invoke_2( uint64_t a1,  uint64_t a2)
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) autoControlManagerFSM]);
  unsigned int v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = __89__MADAutoAssetControlManager_handleControlClientSimulatedCacheDeleteReclaimSpaceRequest___block_invoke_3;
  v7[3] = &unk_34E420;
  id v6 = *(void **)(a1 + 40);
  v7[4] = *(void *)(a1 + 32);
  id v8 = v6;
  uint64_t v10 = a2;
  id v9 = *(id *)(a1 + 48);
  dispatch_async(v5, v7);
}

void __89__MADAutoAssetControlManager_handleControlClientSimulatedCacheDeleteReclaimSpaceRequest___block_invoke_3( uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logger]);
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 oslog]);

  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _updateLatestSummary]);
    unsigned int v5 = [*(id *)(a1 + 40) cacheDeleteUrgency];
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) volumeToReclaim]);
    if (v6) {
      id v7 = (__CFString *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) volumeToReclaim]);
    }
    else {
      id v7 = @"N";
    }
    id v8 = allocStringForBytes((uint64_t)[*(id *)(a1 + 40) targetingPurgeAmount]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    uint64_t v10 = allocStringForBytes(*(void *)(a1 + 56));
    int8x16_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    int v23 = 138544386;
    id v24 = v4;
    __int16 v25 = 1024;
    unsigned int v26 = v5;
    __int16 v27 = 2114;
    unsigned int v28 = v7;
    __int16 v29 = 2114;
    id v30 = v9;
    __int16 v31 = 2114;
    uint64_t v32 = v11;
    _os_log_impl( &dword_0,  v3,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {handleControlClientSimulatedCacheDeleteReclaimSpaceRequest} simulating trigger from cache-delete to reclaim space | urgency:%d, volume:%{public}@, targetingPurgeAmount:%{public}@ | reclaimedSpace:%{public}@ | ...re spondToCacheDelete",  (uint8_t *)&v23,  0x30u);
    if (v6) {
  }
    }

  id v12 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  unsigned int v13 = objc_alloc(&OBJC_CLASS___MANAutoAssetInfoControl);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) volumeToReclaim]);
  uint64_t v15 = -[MANAutoAssetInfoControl initWithVolumeToReclaim:withUrgency:targetingPurgeAmount:]( v13,  "initWithVolumeToReclaim:withUrgency:targetingPurgeAmount:",  v14,  [*(id *)(a1 + 40) cacheDeleteUrgency],  *(void *)(a1 + 56));

  id v16 = +[MASAutoAssetInfoControl newShimmedToFramework:]( &OBJC_CLASS___MASAutoAssetInfoControl,  "newShimmedToFramework:",  v15);
  -[NSMutableDictionary setSafeObject:forKey:](v12, "setSafeObject:forKey:", v16, @"control");

  id v17 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) clientRequestMessage]);
  id v19 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v18));
  id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) clientRequestMessage]);
  int v21 = (void *)objc_claimAutoreleasedReturnValue([v20 clientID]);
  id v22 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v17,  "initWithType:messageName:clientID:version:message:",  2LL,  v19,  v21,  0LL,  v12);

  [*(id *)(a1 + 32) issueBuiltResponseForEventInfo:*(void *)(a1 + 48) issuingResponseMessage:v22 withResponseError:0 fromLocation:@"handleControlClientSimulatedCacheDeleteReclaimSpaceRequest"];
}

- (void)handleControlClientSimulateSetJobOperation:(id)a3
{
  id v4 = a3;
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](self, "clientRequestMessageInstance:", v4));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequestMessage]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 message]);

  id v10 = +[MASAutoAssetInfoControl newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetInfoControl,  "newShimmedFromFrameworkMessage:forKey:",  v9,  @"control");
  int8x16_t v11 = v10;
  if (!v7)
  {
    id v19 = objc_alloc(&OBJC_CLASS___NSString);
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
    int v21 = -[NSString initWithFormat:]( v19,  "initWithFormat:",  @"SIMULATE | invalid eventInfo (instance:MISSING) | eventInfo:%@",  v20);
LABEL_7:
    int v23 = v21;
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v4,  6102LL,  @"handleControlClientSimulateSetJobOperation",  v21);

    goto LABEL_16;
  }

  if (!v10)
  {
    id v22 = objc_alloc(&OBJC_CLASS___NSString);
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
    int v21 = -[NSString initWithFormat:]( v22,  "initWithFormat:",  @"SIMULATE | invalid eventInfo (control:MISSING) | eventInfo:%@",  v20);
    goto LABEL_7;
  }

  uint64_t v45 = v9;
  id v12 = objc_alloc(&OBJC_CLASS___MADMarker);
  unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([v7 clientAssetSelector]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 assetType]);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 clientAssetSelector]);
  id v16 = -[MADMarker initForAssetType:forClientDomainName:forAssetSetIdentifier:forAssetSelector:forSetJob:withSetPolicy:withPushedPolicy:]( v12,  "initForAssetType:forClientDomainName:forAssetSetIdentifier:forAssetSelector:forSetJob:withSetPolicy:withPushedPolicy:",  v14,  0LL,  0LL,  v15,  0LL,  0LL,  0LL);

  id v17 = (char *)[v11 simulateOperation];
  id v18 = (int *)[v11 simulateOperation];
  id v44 = v16;
  if (v17 == (_BYTE *)&dword_4 + 3)
  {
    +[MADAutoAssetConnector simulateNetworkPathUp:](&OBJC_CLASS___MADAutoAssetConnector, "simulateNetworkPathUp:", v16);
  }

  else if (v18 == &dword_8)
  {
    +[MADAutoAssetConnector simulateNetworkPathDown:]( &OBJC_CLASS___MADAutoAssetConnector,  "simulateNetworkPathDown:",  v16);
  }

  else
  {
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSelector]);
    __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobBySelector:](self, "currentJobBySelector:", v24));

    unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int16 v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      id v43 = v25;
      unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      id v42 = (void *)objc_claimAutoreleasedReturnValue([v7 clientAssetSelector]);
      __int128 v41 = (void *)objc_claimAutoreleasedReturnValue([v42 summary]);
      __int16 v29 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetInfoControl nameOfSimulateOperation:]( MANAutoAssetInfoControl,  "nameOfSimulateOperation:",  [v11 simulateOperation]));
      id v30 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetInfoControl nameOfSimulateEnd:]( MANAutoAssetInfoControl,  "nameOfSimulateEnd:",  [v11 simulateEnd]));
      *(_DWORD *)int buf = 138544130;
      id v47 = v28;
      __int16 v48 = 2114;
      id v49 = v41;
      __int16 v50 = 2114;
      id v51 = v29;
      __int16 v52 = 2114;
      id v53 = v30;
      _os_log_impl( &dword_0,  v27,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {handleControlClientSimulateSetJobOperation} SIMULATE | setting job simulate operation | assetSelec tor:%{public}@ | simulateOperation:%{public}@, simulateEnd:%{public}@",  buf,  0x2Au);

      __int16 v25 = v43;
    }

    -[MADAutoAssetControlManager setSimulateOperationRequested:](self, "setSimulateOperationRequested:", 1LL);
    __int16 v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager simulateOperationsBySelector](self, "simulateOperationsBySelector"));
    uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSelector]);
    unsigned __int8 v33 = (void *)objc_claimAutoreleasedReturnValue([v32 persistedEntryID]);
    [v31 setSafeObject:v11 forKey:v33];

    if (v25) {
      [v25 handleSimulateOperation:v11];
    }
  }

  id v34 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v35 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  id v36 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequestMessage]);
  uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v36));
  __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequestMessage]);
  id v39 = (void *)objc_claimAutoreleasedReturnValue([v38 clientID]);
  __int128 v40 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v35,  "initWithType:messageName:clientID:version:message:",  2LL,  v37,  v39,  0LL,  v34);

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v4,  v40,  0LL,  @"handleControlClientSimulateSetJobOperation");
  id v9 = v45;
LABEL_16:
}

- (void)handleSetClientNeedForAtomicRequest:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequest]);
  int8x16_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequestMessage]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 messageName]);

  unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  v7,  v6));
  id v14 = v13;
  if (v13)
  {
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v13 atomicInstance]);

    if (v15)
    {
      id v16 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"atomicInstance specified when not valid for messageName:%@",  v12);
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6108LL,  @"handleSetClientNeedForAtomicRequest",  v16);
LABEL_23:

      goto LABEL_24;
    }

    id v16 = (NSString *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationNewEntryIDForInfoInstance:]( self,  "setConfigurationNewEntryIDForInfoInstance:",  v14));
    id v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
    id v18 = [v17 safeObjectForKey:v16 ofClass:objc_opt_class(MADAutoSetConfiguration)];
    id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);

    if (v19)
    {
      if (([v19 inhibitImpliedScheduling] & 1) == 0)
      {
        id v20 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequest]);
        int v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetDesire:]( self,  "clientRequestMessageSetDesire:",  v20));

        id v49 = v21;
        id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 clientAssetSetPolicy]);
        LODWORD(v21) = [v22 blockCheckDownload];

        if ((_DWORD)v21)
        {
          if (([v19 inhibitImpliedScheduling] & 1) == 0)
          {
            int v23 = 1;
LABEL_15:
            unsigned int log = v23;
            __int16 v29 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
            id v30 = (void *)objc_claimAutoreleasedReturnValue([v29 persistedEntry:v16 fromLocation:v7]);

            uint64_t v45 = v30;
            if (v30)
            {
              [v19 setInhibitImpliedScheduling:log];
              [v30 persistSecureCodedObject:v19 forKey:@"setConfiguration"];
              __int16 v31 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
              uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
              [v31 storePersistedEntry:v16 withEntrySummary:v32 fromLocation:@"handleSetClientNeedForAtomicRequest"];

              unsigned __int8 v33 = objc_alloc(&OBJC_CLASS___NSString);
              id v34 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
              id v35 = -[NSString initWithFormat:]( v33,  "initWithFormat:",  @"modified inhibitImpliedScheduling | setConfiguration:%@",  v34);
              -[MADAutoAssetControlManager _logPersistedSetConfiguration:operation:forPersistedEntryID:withSetConfiguration:historyOperation:message:]( self,  "_logPersistedSetConfiguration:operation:forPersistedEntryID:withSetConfiguration:historyOperation:message:",  @"handleSetClientNeedForAtomicRequest",  @"ENTRY_MODIFY",  v16,  v19,  443LL,  v35);

              id v36 = v45;
              uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
              [v37 setSafeObject:v19 forKey:v16];
            }

            else
            {
              __int128 v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v39 = (os_log_s *)objc_claimAutoreleasedReturnValue([v38 oslog]);

              if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
              {
                id v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                logb = v39;
                id v44 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
                *(_DWORD *)int buf = 138543874;
                id v51 = v7;
                __int16 v52 = 2114;
                id v53 = v43;
                __int16 v54 = 2114;
                uint64_t v55 = v44;
                _os_log_error_impl( &dword_0,  logb,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@:handleSetClientAlterEntriesRepresentingAtomicRequest} unable to load persiste d-set-configuration file | set-eventInfo:%{public}@",  buf,  0x20u);

                id v39 = logb;
              }

              __int128 v40 = objc_alloc(&OBJC_CLASS___NSString);
              __int128 v41 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
              id v42 = -[NSString initWithFormat:]( v40,  "initWithFormat:",  @"unable to load persisted-set-configuration file | set-eventInfo:%@",  v41);
              -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6101LL,  v7,  v42);

              id v36 = 0LL;
            }
          }
        }

        else
        {
          __int16 v27 = (void *)objc_claimAutoreleasedReturnValue([v14 autoAssetEntries]);
          if (v27)
          {
            unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([v14 autoAssetEntries]);
            BOOL loga = [v28 count] == 0;

            int v23 = loga;
          }

          else
          {
            int v23 = 0;
          }
        }
      }
    }

    else
    {
      id v24 = objc_alloc(&OBJC_CLASS___NSString);
      __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
      unsigned int v26 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"invalid set-eventInfo (no set-identifier to be altered) | set-eventInfo:%@",  v25);
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6554LL,  @"handleSetClientNeedForAtomicRequest",  v26);
    }

    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  0LL,  v7,  @"successful need-for-atomic (no immediate set-job required)");

    goto LABEL_23;
  }

  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6102LL,  v7,  @"no auto-asset-set-instance provided in client request");
LABEL_24:
}

void __97__MADAutoAssetControlManager_handleSetClientCheckAtomic_forAutoJob_instance_desire_fromLocation___block_invoke( id *a1,  uint64_t a2,  void *a3)
{
  id v4 = a3;
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] autoControlManagerFSM]);
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = __97__MADAutoAssetControlManager_handleSetClientCheckAtomic_forAutoJob_instance_desire_fromLocation___block_invoke_2;
  v10[3] = &unk_34F380;
  id v11 = v4;
  id v7 = a1[5];
  id v8 = a1[4];
  id v12 = v7;
  id v13 = v8;
  id v14 = a1[6];
  id v15 = a1[7];
  id v16 = a1[8];
  id v17 = a1[9];
  id v18 = a1[10];
  id v9 = v4;
  dispatch_async(v6, v10);
}

void __97__MADAutoAssetControlManager_handleSetClientCheckAtomic_forAutoJob_instance_desire_fromLocation___block_invoke_2( uint64_t a1)
{
  uint64_t v1 = a1;
  id v2 = *(id *)(a1 + 32);
  [*(id *)(v1 + 40) setSecureOperationInProgress:0];
  __int128 v48 = 0u;
  __int128 v49 = 0u;
  __int128 v46 = 0u;
  __int128 v47 = 0u;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 40) latestDowloadedAtomicInstanceEntries]);
  id v4 = [v3 countByEnumeratingWithState:&v46 objects:v58 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v47;
    uint64_t v45 = v1;
    do
    {
      for (unint64_t i = 0LL; i != v5; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v47 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(v1 + 48);
        id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v46 + 1) + 8 * (void)i) fullAssetSelector]);
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 locateDownloadedByFullSelector:v9]);

        [v10 setSecureOperationInProgress:0];
        if ([v10 secureOperationEliminating])
        {
          id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 48) logger]);
          id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v13 = *(void *)(v1 + 56);
            id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 40) summary]);
            id v15 = v5;
            uint64_t v16 = v6;
            id v17 = v3;
            id v18 = v2;
            id v19 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
            *(_DWORD *)int buf = 138544130;
            id v51 = @"AUTO-PERSONALIZATION";
            __int16 v52 = 2114;
            uint64_t v53 = v13;
            __int16 v54 = 2114;
            uint64_t v55 = v14;
            __int16 v56 = 2114;
            __int128 v57 = v19;
            _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][%{public}@][SET-CONTROL][ELIMINATE] {%{public}@} auto-asset of set-descriptor eliminate while per forming secure operation(s) | setDescriptor:%{public}@ | nextDownloadedDescriptor:%{public}@",  buf,  0x2Au);

            id v2 = v18;
            id v3 = v17;
            uint64_t v6 = v16;
            id v5 = v15;
            uint64_t v1 = v45;
          }

          [*(id *)(v1 + 48) eliminateUngraftDescriptor:*(void *)(v1 + 56) forAutoAssetDescriptor:v10 failingClientRequestForEventInfo:0];
          if (!v2)
          {
            uint64_t v20 = *(void *)(v1 + 56);
            int v21 = objc_alloc(&OBJC_CLASS___NSString);
            id v22 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
            int v23 = -[NSString initWithFormat:]( v21,  "initWithFormat:",  @"encountered set-descriptor with auto-asset being eliminated | nextDownloadedDescriptor:%@",  v22);
            id v2 = (id)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6114LL,  v20,  0LL,  v23));
          }
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v46 objects:v58 count:16];
    }

    while (v5);
  }

  id v24 = *(void **)(v1 + 48);
  uint64_t v25 = *(void *)(v1 + 56);
  unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 64) clientDomainName]);
  __int16 v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 64) assetSetIdentifier]);
  LODWORD(v24) = [v24 isSetIdentifierBeingEliminated:v25 forClientDomainName:v26 ofSetIdentifier:v27];

  if ((_DWORD)v24)
  {
    unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 48) logger]);
    __int16 v29 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 oslog]);

    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v30 = *(void *)(v1 + 56);
      __int16 v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 40) summary]);
      *(_DWORD *)int buf = 138543874;
      id v51 = @"AUTO-PERSONALIZATION";
      __int16 v52 = 2114;
      uint64_t v53 = v30;
      __int16 v54 = 2114;
      uint64_t v55 = v31;
      _os_log_impl( &dword_0,  v29,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][%{public}@][SET-CONTROL][ELIMINATE] {%{public}@} set-identifier eliminate while performing secure opera tion(s) | nextDownloadedDescriptor:%{public}@",  buf,  0x20u);
    }

    [*(id *)(v1 + 48) eliminateUngraftSetDescriptor:*(void *)(v1 + 40) failingClientRequestForEventInfo:0];
    if (v2) {
      goto LABEL_19;
    }
    uint64_t v32 = *(void *)(v1 + 56);
    unsigned __int8 v33 = objc_alloc(&OBJC_CLASS___NSString);
    id v34 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 40) summary]);
    id v35 = -[NSString initWithFormat:]( v33,  "initWithFormat:",  @"encountered set-descriptor being eliminated | setDescriptor:%@",  v34);
    id v2 = (id)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6114LL,  v32,  0LL,  v35));
  }

  if (!v2)
  {
    __int128 v41 = *(void **)(v1 + 48);
    id v42 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 40) clientDomainName]);
    id v43 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 40) assetSetIdentifier]);
    __int128 v40 = (void *)objc_claimAutoreleasedReturnValue([v41 locateSetConfigurationByClientDomain:v42 forAssetSetIdentifier:v43]);

    [*(id *)(v1 + 48) setConfigurationAdoptLatestToVend:*(void *)(v1 + 56) fromSetDescriptor:*(void *)(v1 + 40) toSetConfiguration:v40];
    id v44 = [*(id *)(v1 + 48) newSetDescriptorLimitedToCheckInformation:*(void *)(v1 + 40)];
    id v2 = (id)objc_claimAutoreleasedReturnValue( [*(id *)(v1 + 48) buildSetFoundResponseMessage:@"checkAtomic" forClientRequest:*(void *)(v1 + 72) withFoundSetDescriptor:v44 withSubAtomicInstance:0 forLatestDow nloaded:1 withInstance:*(void *)(v1 + 64) withDesire:*(void *)(v1 + 80) fromLocation:*(void *)(v1 + 56)]);
    [*(id *)(v1 + 48) issueResponseToClientRequest:*(void *)(v1 + 72) issuingResponseMessage:v2 withResponseError:0];

    goto LABEL_21;
  }

- (BOOL)doesSetDescriptor:(id)a3 alignWithSetConfiguration:(id)a4
{
  id v5 = a3;
  unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([a4 autoAssetEntries]);
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([v5 latestDowloadedAtomicInstanceEntries]);
  id v26 = [obj countByEnumeratingWithState:&v38 objects:v43 count:16];
  if (!v26)
  {
    BOOL v22 = 1;
    goto LABEL_23;
  }

  uint64_t v27 = *(void *)v39;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  id v24 = v5;
  while (2)
  {
    uint64_t v7 = 0LL;
    while (2)
    {
      if (*(void *)v39 != v27) {
        objc_enumerationMutation(obj);
      }
      uint64_t v29 = v7;
      id v8 = *(void **)(*((void *)&v38 + 1) + 8 * v7);
      __int128 v34 = 0u;
      __int128 v35 = 0u;
      __int128 v36 = 0u;
      __int128 v37 = 0u;
      id v31 = v28;
      id v33 = [v31 countByEnumeratingWithState:&v34 objects:v42 count:16];
      if (!v33)
      {
LABEL_21:

        BOOL v22 = 0;
        id v5 = v24;
        goto LABEL_23;
      }

      uint64_t v9 = *(void *)v35;
      uint64_t v30 = v8;
LABEL_8:
      uint64_t v10 = 0LL;
      while (1)
      {
        if (*(void *)v35 != v9) {
          objc_enumerationMutation(v31);
        }
        id v11 = *(void **)(*((void *)&v34 + 1) + 8 * v10);
        id v12 = p_ivars[155];
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "assetSelector", v24));
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 assetType]);
        id v15 = (void *)objc_claimAutoreleasedReturnValue([v8 fullAssetSelector]);
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 assetType]);
        if (!-[__objc2_ivar_list stringIsEqual:to:](v12, "stringIsEqual:to:", v14, v16))
        {

          goto LABEL_15;
        }

        uint64_t v32 = p_ivars[155];
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSelector]);
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSpecifier]);
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v8 fullAssetSelector]);
        uint64_t v20 = v9;
        int v21 = (void *)objc_claimAutoreleasedReturnValue([v19 assetSpecifier]);
        LOBYTE(v32) = -[__objc2_ivar_list stringIsEqual:to:](v32, "stringIsEqual:to:", v18, v21);

        uint64_t v9 = v20;
        id v8 = v30;

        p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
LABEL_15:
        if (v33 == (id)++v10)
        {
          id v33 = [v31 countByEnumeratingWithState:&v34 objects:v42 count:16];
          if (v33) {
            goto LABEL_8;
          }
          goto LABEL_21;
        }
      }

      uint64_t v7 = v29 + 1;
      if ((id)(v29 + 1) != v26) {
        continue;
      }
      break;
    }

    BOOL v22 = 1;
    id v5 = v24;
    id v26 = [obj countByEnumeratingWithState:&v38 objects:v43 count:16];
    if (v26) {
      continue;
    }
    break;
  }

- (BOOL)doesSetDescriptor:(id)a3 matchSetConfiguration:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 autoAssetEntries]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDowloadedAtomicInstanceEntries]);
  id v10 = [v8 count];
  if (v10 == [v9 count]) {
    BOOL v11 = -[MADAutoAssetControlManager doesSetDescriptor:alignWithSetConfiguration:]( self,  "doesSetDescriptor:alignWithSetConfiguration:",  v6,  v7);
  }
  else {
    BOOL v11 = 0;
  }

  return v11;
}

- (void)handleSetClientMapLockedAtomicEntryRequest:(id)a3 forAutoJob:(id)a4 fromLocation:(id)a5
{
  id v7 = a3;
  id v8 = a5;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  BOOL v11 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:handleSetClientMapLockedAtomicEntryRequest",  v8);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  @"handleSetClientMapLockedAtomicEntryRequest",  v7));
  uint64_t v13 = v12;
  if (v12)
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 atomicInstance]);
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v13 clientDomainName]);
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSetIdentifier]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:]( self,  "locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:",  v14,  v15,  v16,  @"handleSetClientMapLockedAtomicEntryRequest"));

    if (v17)
    {
      if (-[MADAutoAssetControlManager isSetDescriptorCurrentlyLocked:forSetDescriptor:]( self,  "isSetDescriptorCurrentlyLocked:forSetDescriptor:",  @"handleSetClientMapLockedAtomicEntryRequest",  v17))
      {
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetEntries]);

        if (v18)
        {
          id v19 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetEntries]);
          uint64_t v20 = (char *)[v19 count];

          if (v20 == (_BYTE *)&dword_0 + 1)
          {
            int v21 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetEntries]);
            BOOL v22 = (void *)objc_claimAutoreleasedReturnValue([v21 objectAtIndex:0]);

            int v23 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSelector]);
            id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 assetType]);
            uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v23 assetSpecifier]);
            id v26 = (void *)objc_claimAutoreleasedReturnValue([v17 downloadedEntryForAssetType:v24 forAssetSpecifier:v25]);

            uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v23 assetVersion]);
            if (v27)
            {
              id v43 = v22;
              unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([v23 assetVersion]);
              id v42 = v26;
              uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v26 fullAssetSelector]);
              uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v29 assetVersion]);
              unsigned __int8 v31 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v28, v30);

              if ((v31 & 1) == 0)
              {
                -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v7,  6108LL,  v11,  @"atomic-instance lock to be mapped to exclave environment with autoAssetEntries value for different asset-version than entry associated with atomic-instance");

                id v26 = v42;
                BOOL v22 = v43;
                goto LABEL_27;
              }

              id v26 = v42;
              BOOL v22 = v43;
            }

            else
            {
              if (!v26)
              {
                -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v7,  6108LL,  v11,  @"atomic-instance lock to be mapped to exclave environment with autoAssetEntries value (without asset-version) that is not found in the associated atomic-instance");
LABEL_26:

                goto LABEL_27;
              }

              uint64_t v39 = objc_claimAutoreleasedReturnValue([v26 fullAssetSelector]);

              int v23 = (void *)v39;
            }

            if (v23)
            {
              __int128 v40 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v23));
              __int128 v41 = v40;
              if (v40)
              {
                [v40 setSecureOperationInProgress:1];
                v44[0] = _NSConcreteStackBlock;
                v44[1] = 3221225472LL;
                v44[2] = __97__MADAutoAssetControlManager_handleSetClientMapLockedAtomicEntryRequest_forAutoJob_fromLocation___block_invoke;
                v44[3] = &unk_34F3D0;
                v44[4] = self;
                id v45 = v41;
                id v46 = v23;
                __int128 v47 = v11;
                id v48 = v7;
                id v49 = v17;
                id v50 = v13;
                +[MADAutoAssetSecure mapToExclave:forDescriptor:completion:]( &OBJC_CLASS___MADAutoAssetSecure,  "mapToExclave:forDescriptor:completion:",  v47,  v45,  v44);
              }

              else
              {
                -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v7,  6111LL,  v11,  @"atomic-instance lock to be mapped to exclave environment with auto-asset asset-selector that is not currently downloaded");
              }

              goto LABEL_26;
            }

void __97__MADAutoAssetControlManager_handleSetClientMapLockedAtomicEntryRequest_forAutoJob_fromLocation___block_invoke( id *a1,  uint64_t a2,  void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] autoControlManagerFSM]);
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = __97__MADAutoAssetControlManager_handleSetClientMapLockedAtomicEntryRequest_forAutoJob_fromLocation___block_invoke_2;
  v10[3] = &unk_34F380;
  id v7 = a1[5];
  id v8 = a1[4];
  id v11 = v7;
  id v12 = v8;
  id v13 = a1[6];
  id v14 = a1[7];
  id v15 = a1[8];
  id v16 = v4;
  id v17 = a1[9];
  id v18 = a1[10];
  id v9 = v4;
  dispatch_async(v6, v10);
}

void __97__MADAutoAssetControlManager_handleSetClientMapLockedAtomicEntryRequest_forAutoJob_fromLocation___block_invoke_2( uint64_t a1)
{
  if ([*(id *)(a1 + 40) isAutoAssetBeingEliminated:*(void *)(a1 + 48)])
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) logger]);
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 oslog]);

    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 56);
      id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) summary]);
      *(_DWORD *)int buf = 138543618;
      uint64_t v12 = v4;
      __int16 v13 = 2114;
      id v14 = v5;
      _os_log_impl( &dword_0,  v3,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-MAP][ELIMINATE] {%{public}@} | eliminate triggered while mapping-to-exclave | mapDescriptor:%{public}@",  buf,  0x16u);
    }

    [*(id *)(a1 + 40) eliminateUngraftDescriptor:*(void *)(a1 + 56) forAutoAssetDescriptor:*(void *)(a1 + 32) failingClientRequestForEventInfo:*(void *)(a1 + 64)];
  }

  else
  {
    id v6 = *(void **)(a1 + 40);
    if (*(void *)(a1 + 72))
    {
      objc_msgSend( *(id *)(a1 + 40),  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  *(void *)(a1 + 64));
    }

    else
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) clientRequest]);
      id v10 = (id)objc_claimAutoreleasedReturnValue( [v6 buildSetFoundResponseMessage:@"mapToExclave" forClientRequest:v7 withFoundSetDescriptor:*(void *)(a1 + 80) withSubAtomicInstance:0 forLatest Downloaded:1 withInstance:*(void *)(a1 + 88) withDesire:0 fromLocation:*(void *)(a1 + 56)]);

      id v8 = *(void **)(a1 + 40);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) clientRequest]);
      [v8 issueResponseToClientRequest:v9 issuingResponseMessage:v10 withResponseError:0];
    }
  }

- (void)handleSetControlClientKnownAssetSetSummaryRequest:(id)a3 forAutoJob:(id)a4
{
}

- (void)handleSetControlClientActiveSetSummaryRequest:(id)a3 forAutoJob:(id)a4
{
  id v7 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v7,  6801LL,  @"handleSetControlClientKnownAssetSetSummaryRequest",  @"handleSetControlClientKnownAssetSetSummaryRequest - not yet implemented");
}

- (void)handleSetControlClientScheduledSetJobSummaryRequest:(id)a3 forAutoJob:(id)a4
{
  id v7 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v7,  6801LL,  @"handleSetControlClientScheduledSetJobSummaryRequest",  @"handleSetControlClientScheduledSetJobSummaryRequest - not yet implemented");
}

- (void)handleSetControlClientLockedAssetSetSummaryRequest:(id)a3 forAutoJob:(id)a4
{
  id v7 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v7,  6801LL,  @"handleSetControlClientLockedAssetSetSummaryRequest",  @"handleSetControlClientLockedAssetSetSummaryRequest - not yet implemented");
}

- (void)handleSetControlClientStagedAssetSetSummaryRequest:(id)a3 forAutoJob:(id)a4
{
  id v7 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v7,  6801LL,  @"handleSetControlClientStagedAssetSetSummaryRequest",  @"handleSetControlClientStagedAssetSetSummaryRequest - not yet implemented");
}

- (void)handleSetControlClientAssetSetsOverviewRequest:(id)a3 forAutoJob:(id)a4
{
  id v6 = a3;
  id v85 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  uint64_t v86 = v6;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
  uint64_t v10 = objc_claimAutoreleasedReturnValue([v9 message]);

  id v84 = (void *)v10;
  id v11 = +[MASAutoAssetSetInfoControl newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoControl,  "newShimmedFromFrameworkMessage:forKey:",  v10,  @"setControl");
  unsigned int v87 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v93 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v102 = 0u;
  __int128 v103 = 0u;
  __int128 v104 = 0u;
  __int128 v105 = 0u;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
  __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([v12 allKeys]);
  id v14 = [v13 copy];

  id obj = v14;
  id v15 = [v14 countByEnumeratingWithState:&v102 objects:v108 count:16];
  uint64_t v88 = v11;
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = *(void *)v103;
    do
    {
      id v18 = 0LL;
      do
      {
        if (*(void *)v103 != v17) {
          objc_enumerationMutation(obj);
        }
        uint64_t v19 = *(void *)(*((void *)&v102 + 1) + 8LL * (void)v18);
        uint64_t v20 = objc_autoreleasePoolPush();
        int v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
        id v22 = [v21 safeObjectForKey:v19 ofClass:objc_opt_class(MADAutoSetConfiguration)];
        int v23 = (void *)objc_claimAutoreleasedReturnValue(v22);

        if (v23)
        {
          id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 assetSetIdentifier]);
          uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v23 clientDomainName]);
          unsigned int v26 = +[MADAutoAssetControlManager assetSetToBeIncluded:consideredClientDomain:basedOnControl:]( &OBJC_CLASS___MADAutoAssetControlManager,  "assetSetToBeIncluded:consideredClientDomain:basedOnControl:",  v24,  v25,  v11);

          if (v26)
          {
            uint64_t v27 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetOverview);
            unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([v23 clientDomainName]);
            uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v23 assetSetIdentifier]);
            uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v23 autoAssetEntries]);
            unsigned __int8 v31 = -[MANAutoAssetSetOverview initWithDomainName:forAssetSetIdentifier:withConfiguredAssetEntries:withLatestDownloadedAtomicInstance:withDownloadedAtomicInstances:withDiscoveredAtomicInstance:withActiveClientCount:withActiveMonitorCount:withMaximumClientCount:withTotalClientCount:]( v27,  "initWithDomainName:forAssetSetIdentifier:withConfiguredAssetEntries:withLatestDownloadedAtomicInstan ce:withDownloadedAtomicInstances:withDiscoveredAtomicInstance:withActiveClientCount:withActiveMonito rCount:withMaximumClientCount:withTotalClientCount:",  v28,  v29,  v30,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL);

            if (v31) {
              -[NSMutableArray addObject:](v87, "addObject:", v31);
            }
            uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v23 clientDomainName]);
            id v33 = (void *)objc_claimAutoreleasedReturnValue([v23 assetSetIdentifier]);
            id v34 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v32,  v33);

            -[NSMutableDictionary setSafeObject:forKey:](v93, "setSafeObject:forKey:", v31, v34);
            id v11 = v88;
          }
        }

        objc_autoreleasePoolPop(v20);
        id v18 = (char *)v18 + 1;
      }

      while (v16 != v18);
      id v16 = [obj countByEnumeratingWithState:&v102 objects:v108 count:16];
    }

    while (v16);
  }

  __int128 v100 = 0u;
  __int128 v101 = 0u;
  __int128 v98 = 0u;
  __int128 v99 = 0u;
  id v89 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id obja = [v89 countByEnumeratingWithState:&v98 objects:v107 count:16];
  if (obja)
  {
    uint64_t v35 = *(void *)v99;
    do
    {
      __int128 v36 = 0LL;
      do
      {
        if (*(void *)v99 != v35) {
          objc_enumerationMutation(v89);
        }
        uint64_t v37 = *(void *)(*((void *)&v98 + 1) + 8LL * (void)v36);
        uint64_t v38 = objc_autoreleasePoolPush();
        uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
        id v40 = [v39 safeObjectForKey:v37 ofClass:objc_opt_class(MADAutoSetDescriptor)];
        __int128 v41 = (void *)objc_claimAutoreleasedReturnValue(v40);

        if (v41)
        {
          id v42 = (id)objc_claimAutoreleasedReturnValue([v41 clientDomainName]);
          if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v42,  @"FROM_STAGED_FOR_ALL") & 1) == 0)
          {
            uint64_t v43 = v35;
            id v44 = (void *)objc_claimAutoreleasedReturnValue([v41 assetSetIdentifier]);
            unsigned __int8 v45 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v44,  @"FROM_STAGED_FOR_ALL");

            uint64_t v35 = v43;
            if ((v45 & 1) != 0) {
              goto LABEL_32;
            }
            id v46 = (void *)objc_claimAutoreleasedReturnValue([v41 clientDomainName]);
            __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([v41 assetSetIdentifier]);
            id v42 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v46,  v47);

            id v48 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v93,  "safeObjectForKey:ofClass:",  v42,  objc_opt_class(&OBJC_CLASS___MANAutoAssetSetOverview));
            id v49 = (void *)objc_claimAutoreleasedReturnValue(v48);
            id v50 = v49;
            if (v49)
            {
              id v51 = (void *)objc_claimAutoreleasedReturnValue([v49 downloadedAtomicInstances]);

              if (v51)
              {
                if (v37) {
                  goto LABEL_24;
                }
              }

              else
              {
                __int128 v60 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
                [v50 setDownloadedAtomicInstances:v60];

                if (v37)
                {
LABEL_24:
                  __int16 v52 = (void *)objc_claimAutoreleasedReturnValue([v50 downloadedAtomicInstances]);
                  [v52 addObject:v37];
                }
              }

              uint64_t v53 = (void *)objc_claimAutoreleasedReturnValue([v50 latestDownloadedAtomicInstance]);

              if (v53)
              {
                __int16 v54 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
                uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v50 latestDownloadedAtomicInstance]);
                id v56 = [v54 safeObjectForKey:v55 ofClass:objc_opt_class(MADAutoSetDescriptor)];
                __int128 v57 = (void *)objc_claimAutoreleasedReturnValue(v56);

                __int128 v58 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager chooseNewerSetDescriptor:considering:]( self,  "chooseNewerSetDescriptor:considering:",  v57,  v41));
                __int128 v59 = (void *)objc_claimAutoreleasedReturnValue([v58 latestDownloadedAtomicInstance]);
                [v50 setLatestDownloadedAtomicInstance:v59];
              }

              else
              {
                [v50 setLatestDownloadedAtomicInstance:v37];
              }
            }

            uint64_t v35 = v43;
          }
        }

- (void)handleSetControlClientInstanceInfoRequest:(id)a3 forAutoJob:(id)a4
{
  id v41 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v41 clientRequestMessage]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 message]);

  id v9 = +[MASAutoAssetSetInfoInstance newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoInstance,  "newShimmedFromFrameworkMessage:forKey:",  v8,  @"setInstance");
  uint64_t v10 = objc_claimAutoreleasedReturnValue([v9 atomicInstance]);
  id v40 = (void *)v10;
  if (!v10) {
    goto LABEL_6;
  }
  uint64_t v11 = v10;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v13 = [v12 safeObjectForKey:v11 ofClass:objc_opt_class(MADAutoSetDescriptor)];
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

  if (v14
    || (id v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager activeSetDescriptorsByInstance]( self,  "activeSetDescriptorsByInstance")),  v16 = [v15 safeObjectForKey:v11 ofClass:objc_opt_class(MADAutoSetDescriptor)],  v14 = (void *)objc_claimAutoreleasedReturnValue(v16),  v15,  v14))
  {
    uint64_t v38 = v8;
    uint64_t v39 = self;
    id v37 = v9;
    else {
      uint64_t v17 = objc_claimAutoreleasedReturnValue([v14 discoveredAtomicEntries]);
    }
    uint64_t v19 = (void *)v17;
    uint64_t v20 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetInstanceDescriptor);
    int v21 = (void *)objc_claimAutoreleasedReturnValue([v14 clientDomainName]);
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSetIdentifier]);
    id v23 = [v14 isDiscoveredFullyDownloaded];
    id v24 = [v14 neverBeenLocked];
    id v25 = [v14 downloadUserInitiated];
    id v26 = [v14 downloadedNetworkBytes];
    id v27 = [v14 downloadedFilesystemBytes];
    LOBYTE(v36) = [v14 stagedPriorToAvailable];
    id v18 = -[MANAutoAssetSetInstanceDescriptor initForClientDomainName:forAssetSetIdentifier:withAtomicInstanceEntries:withFullyDownloaded:withNeverBeenLocked:withDownloadUserInitiated:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withStagedPriorToAvailable:]( v20,  "initForClientDomainName:forAssetSetIdentifier:withAtomicInstanceEntries:withFullyDownloaded:withNeverBeenLoc ked:withDownloadUserInitiated:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withStagedPriorToAvailable:",  v21,  v22,  v19,  v23,  v24,  v25,  v26,  v27,  v36);

    id v8 = v38;
    self = v39;
    id v9 = v37;
  }

  else
  {
LABEL_6:
    id v18 = 0LL;
  }

  unsigned int v28 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v29 = +[MASAutoAssetSetInstanceDescriptor newShimmedToFramework:]( &OBJC_CLASS___MASAutoAssetSetInstanceDescriptor,  "newShimmedToFramework:",  v18);
  -[NSMutableDictionary setSafeObject:forKey:](v28, "setSafeObject:forKey:", v29, @"setInstanceInfo");

  uint64_t v30 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  unsigned __int8 v31 = (void *)objc_claimAutoreleasedReturnValue([v41 clientRequestMessage]);
  uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v31));
  id v33 = (void *)objc_claimAutoreleasedReturnValue([v41 clientRequestMessage]);
  id v34 = (void *)objc_claimAutoreleasedReturnValue([v33 clientID]);
  uint64_t v35 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v30,  "initWithType:messageName:clientID:version:message:",  2LL,  v32,  v34,  0LL,  v28);

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v41,  v35,  0LL,  @"handleSetControlClientInstanceInfoRequest");
}

+ (BOOL)assetSetToBeIncluded:(id)a3 consideredClientDomain:(id)a4 basedOnControl:(id)a5
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a5;
  uint64_t v10 = v9;
  if (v9)
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v9 limitedToSetIdentifiers]);

    if (v11)
    {
      __int128 v26 = 0u;
      __int128 v27 = 0u;
      __int128 v24 = 0u;
      __int128 v25 = 0u;
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v10 limitedToSetIdentifiers]);
      id v13 = [v12 countByEnumeratingWithState:&v24 objects:v29 count:16];
      if (v13)
      {
        uint64_t v14 = *(void *)v25;
        while (2)
        {
          for (unint64_t i = 0LL; i != v13; unint64_t i = (char *)i + 1)
          {
            if (*(void *)v25 != v14) {
              objc_enumerationMutation(v12);
            }
            if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  *(void *)(*((void *)&v24 + 1) + 8LL * (void)i)) & 1) != 0)
            {

              goto LABEL_13;
            }
          }

          id v13 = [v12 countByEnumeratingWithState:&v24 objects:v29 count:16];
          if (v13) {
            continue;
          }
          break;
        }
      }

      goto LABEL_25;
    }

- (void)handleSetClientAlterEntriesRepresentingAtomicRequest:(id)a3 forAutoJob:(id)a4 alteringFromSetConfiguration:(id)a5
{
  id v7 = a3;
  id v8 = a5;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  @"handleSetClientAlterEntriesRepresentingAtomicRequest",  v7));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v7 clientRequest]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetDesire:]( self,  "clientRequestMessageSetDesire:",  v12));

  if (v11)
  {
    uint64_t v14 = objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
    if (v14)
    {
      id v15 = (void *)v14;
      uint64_t v16 = objc_claimAutoreleasedReturnValue([v11 autoAssetSetClientName]);
      if (v16)
      {
        uint64_t v17 = (void *)v16;
        uint64_t v18 = objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
        if (v18)
        {
          uint64_t v19 = (void *)v18;
          __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v11 autoAssetEntries]);

          if (v20)
          {
            __int128 v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationNewEntryIDForInfoInstance:]( self,  "setConfigurationNewEntryIDForInfoInstance:",  v11));
            __int128 v22 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
            id v23 = [v22 safeObjectForKey:v21 ofClass:objc_opt_class(MADAutoSetConfiguration)];
            __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(v23);

            if (!v24)
            {
              uint64_t v38 = objc_alloc(&OBJC_CLASS___NSString);
              uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
              id v40 = -[NSString initWithFormat:]( v38,  "initWithFormat:",  @"[ALTER] invalid set-eventInfo (no set-identifier to be altered) | set-eventInfo:%@",  v39);
              -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v7,  6554LL,  @"handleSetClientAlterEntriesRepresentingAtomicRequest",  v40);

LABEL_41:
              goto LABEL_17;
            }

            __int128 v25 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
            uint64_t v26 = objc_claimAutoreleasedReturnValue( [v25 persistedEntry:v21 fromLocation:@"handleSetClientAlterEntriesRepresentingAtomicRequest"]);

            __int128 v95 = (void *)v26;
            if (v26)
            {
              __int128 v94 = v24;
              uint64_t v27 = objc_claimAutoreleasedReturnValue([v11 autoAssetEntries]);
              if (v27)
              {
                unsigned int v28 = (void *)v27;
                id v29 = (void *)objc_claimAutoreleasedReturnValue([v11 autoAssetEntries]);
                id v30 = [v29 count];

                if (v30)
                {
                  unsigned int v31 = -[MADAutoAssetControlManager setConfiguration:matchesAssetEntriesFromInfoInstance:]( self,  "setConfiguration:matchesAssetEntriesFromInfoInstance:",  v8,  v11);
                  uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v13 clientAssetSetPolicy]);
                  unsigned __int8 v33 = [v32 blockCheckDownload];

                  if ((v33 & 1) != 0)
                  {
                    BOOL v89 = 1;
                  }

                  else
                  {
                    id v51 = (void *)objc_claimAutoreleasedReturnValue([v11 autoAssetEntries]);
                    BOOL v89 = [v51 count] == 0;
                  }

                  unsigned int v82 = v21;
                  char v91 = v31;
                  if (v31)
                  {
                    __int16 v52 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                    uint64_t v53 = (os_log_s *)objc_claimAutoreleasedReturnValue([v52 oslog]);

                    if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
                    {
                      __int16 v54 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                      uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);
                      *(_DWORD *)int buf = 138543618;
                      __int128 v97 = v54;
                      __int16 v98 = 2114;
                      __int128 v99 = v55;
                      _os_log_impl( &dword_0,  v53,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {handleSetClientAlterEntriesRepresentingAtomicRequest}\n [ALTER] altered without change to auto-asset-entries | setInfoInstance:%{public}@",  buf,  0x16u);
                    }
                  }

                  else
                  {
                    id v56 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
                    __int128 v57 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
                    uint64_t v53 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetJobForClientDomain:byIdentifier:]( self,  "locateSetJobForClientDomain:byIdentifier:",  v56,  v57));

                    if (v53)
                    {
                      unsigned int v83 = -[os_log_s beingCanceled](v53, "beingCanceled");
                      __int128 v58 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                      __int128 v59 = (os_log_s *)objc_claimAutoreleasedReturnValue([v58 oslog]);

                      unsigned int log = v59;
                      BOOL v60 = os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT);
                      if (v83)
                      {
                        if (v60)
                        {
                          id v61 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _updateLatestSummary]( self,  "_updateLatestSummary"));
                          id v62 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
                          *(_DWORD *)int buf = 138543618;
                          __int128 v97 = v61;
                          __int16 v98 = 2114;
                          __int128 v99 = v62;
                          _os_log_impl( &dword_0,  log,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {handleSetClientAlterEntriesRepresentingAtomicRequest}\n [CANCEL-SET-JOB][ALTER] already canceling set-job | set-eventInfo:%{public}@",  buf,  0x16u);
                        }
                      }

                      else
                      {
                        if (v60)
                        {
                          uint64_t v63 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _updateLatestSummary]( self,  "_updateLatestSummary"));
                          __int128 v64 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
                          *(_DWORD *)int buf = 138543618;
                          __int128 v97 = v63;
                          __int16 v98 = 2114;
                          __int128 v99 = v64;
                          _os_log_impl( &dword_0,  log,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {handleSetClientAlterEntriesRepresentingAtomicRequest}\n [CANCEL-SET-JOB][ALTER] canceling active set-job | set-eventInfo:%{public}@",  buf,  0x16u);
                        }

                        -[os_log_s setBeingCanceled:](v53, "setBeingCanceled:", 1LL);
                        -[os_log_s cancelAutoAssetJob](v53, "cancelAutoAssetJob");
                      }
                    }
                  }

                  BOOL loga = objc_alloc(&OBJC_CLASS___MADAutoSetConfiguration);
                  id v84 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
                  uint64_t v65 = (void *)objc_claimAutoreleasedReturnValue([v11 autoAssetSetClientName]);
                  uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
                  id v67 = (void *)objc_claimAutoreleasedReturnValue([v11 autoAssetEntries]);
                  id v68 = (void *)objc_claimAutoreleasedReturnValue([v8 latestAtomicInstanceToVend]);
                  BYTE1(v78) = v91;
                  LOBYTE(v78) = [v8 haveReceivedLookupResponse];
                  id v69 = -[MADAutoSetConfiguration initForClientDomainName:forSetClientName:forAssetSetIdentifier:withAutoAssetEntries:withLatestAtomicInstanceToVend:inhibitingImpliedScheduling:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:]( loga,  "initForClientDomainName:forSetClientName:forAssetSetIdentifier:withAutoAssetEntries:withLatest AtomicInstanceToVend:inhibitingImpliedScheduling:havingReceivedLookupResponse:vendingAtomicIns tanceForConfiguredEntries:",  v84,  v65,  v66,  v67,  v68,  v89,  v78);

                  if (v69)
                  {
                    -[MADAutoAssetControlManager setConfigurationPersist:fromLocation:dueToAlter:forHistoryOperation:]( self,  "setConfigurationPersist:fromLocation:dueToAlter:forHistoryOperation:",  v69,  @"handleSetClientAlterEntriesRepresentingAtomicRequest",  1LL,  449LL);
                    +[MADAutoAssetLookupCache clearLookupResultsForSetConfiguration:]( &OBJC_CLASS___MADAutoAssetLookupCache,  "clearLookupResultsForSetConfiguration:",  v69);
                    id v92 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetInfoInstance);
                    id v90 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
                    os_log_t logb = (os_log_t)objc_claimAutoreleasedReturnValue([v11 autoAssetSetClientName]);
                    id v81 = (void *)objc_claimAutoreleasedReturnValue([v11 clientProcessName]);
                    id v80 = [v11 clientProcessID];
                    id v70 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
                    uint64_t v71 = (void *)objc_claimAutoreleasedReturnValue([v69 latestAtomicInstanceToVend]);
                    unsigned int v79 = (void *)objc_claimAutoreleasedReturnValue([v11 autoAssetEntries]);
                    id v72 = (void *)objc_claimAutoreleasedReturnValue([v11 entriesWhenTargeting]);
                    id v85 = v69;
                    id v73 = (void *)objc_claimAutoreleasedReturnValue([v11 frameworkInstanceUUID]);
                    id v93 = -[MANAutoAssetSetInfoInstance initUsingClientDomain:forClientName:withProcessName:withProcessID:forAssetSetIdentifier:forAtomicInstance:comprisedOfEntries:asEntriesWhenTargeting:associatingFrameworkUUID:]( v92,  "initUsingClientDomain:forClientName:withProcessName:withProcessID:forAssetSetIdentifier:forA tomicInstance:comprisedOfEntries:asEntriesWhenTargeting:associatingFrameworkUUID:",  v90,  logb,  v81,  v80,  v70,  v71,  v79,  v72,  v73);

                    id v69 = v85;
                    id v74 = (void *)objc_claimAutoreleasedReturnValue([v7 clientRequest]);
                    id v75 = (NSString *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildSetFoundResponseMessage:forClientRequest:withFoundSetDescriptor:withSubAtomicInstance:forLatestDownloaded:withInstance:withDesire:fromLocation:]( self,  "buildSetFoundResponseMessage:forClientRequest:withFoundSetDescriptor:withSubAt omicInstance:forLatestDownloaded:withInstance:withDesire:fromLocation:",  @"alterEntriesRepresentingAtomic",  v74,  0LL,  0LL,  1LL,  v93,  v13,  @"handleSetClientAlterEntriesRepresentingAtomicRequest"));

                    id v76 = (void *)objc_claimAutoreleasedReturnValue([v7 clientRequest]);
                    -[MADAutoAssetControlManager issueResponseToClientRequest:issuingResponseMessage:withResponseError:]( self,  "issueResponseToClientRequest:issuingResponseMessage:withResponseError:",  v76,  v75,  0LL);
                  }

                  else
                  {
                    id v77 = objc_alloc(&OBJC_CLASS___NSString);
                    id v93 = (id)objc_claimAutoreleasedReturnValue([v7 summary]);
                    id v75 = -[NSString initWithFormat:]( v77,  "initWithFormat:",  @"[ALTER] unable to allocate set-configuration | set-eventInfo:%@",  v93);
                    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v7,  6101LL,  @"handleSetClientAlterEntriesRepresentingAtomicRequest",  v75);
                  }

                  __int128 v21 = v82;
                  __int128 v24 = v94;
                  id v50 = v95;

                  goto LABEL_40;
                }
              }

              id v41 = objc_alloc(&OBJC_CLASS___NSString);
              id v42 = v21;
              uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
              id v44 = -[NSString initWithFormat:]( v41,  "initWithFormat:",  @"[ALTER] no valid asset-entries to alter to | set-eventInfo:%@",  v43);
              -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v7,  6555LL,  @"handleSetClientAlterEntriesRepresentingAtomicRequest",  v44);

              __int128 v21 = v42;
              __int128 v24 = v94;
            }

            else
            {
              unsigned __int8 v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v46 = (os_log_s *)objc_claimAutoreleasedReturnValue([v45 oslog]);

              if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
                -[MADAutoAssetControlManager handleSetClientAlterEntriesRepresentingAtomicRequest:forAutoJob:alteringFromSetConfiguration:].cold.1();
              }

              __int128 v47 = objc_alloc(&OBJC_CLASS___NSString);
              id v48 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
              id v49 = -[NSString initWithFormat:]( v47,  "initWithFormat:",  @"[ALTER] unable to load persisted-set-configuration file | set-eventInfo:%@",  v48);
              -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v7,  6101LL,  @"handleSetClientAlterEntriesRepresentingAtomicRequest",  v49);
            }

            id v50 = v95;
LABEL_40:

            goto LABEL_41;
          }

          goto LABEL_15;
        }
      }
    }

- (void)handleSetClientFormSubAtomicRequest:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  @"handleSetClientFormSubAtomicRequest",  v5));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetDesire:]( self,  "clientRequestMessageSetDesire:",  v9));

  if (v8)
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceMatchingInfoInstance:withSetInfoInstance:]( self,  "atomicInstanceMatchingInfoInstance:withSetInfoInstance:",  @"handleSetClientFormSubAtomicRequest",  v8));
    uint64_t v12 = v11;
    if (v11)
    {
      id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 atomicInstanceUUID]);
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v13));

      if (v14)
      {
        id v49 = 0LL;
        id v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceNewSubAtomicFromAtomic:forSubsetInfoInstance:error:]( self,  "atomicInstanceNewSubAtomicFromAtomic:forSubsetInfoInstance:error:",  v12,  v8,  &v49));
        id v16 = v49;
        uint64_t v17 = v16;
        if (!v15 || v16)
        {
          if (!v16)
          {
            -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6552LL,  @"handleSetClientFormSubAtomicRequest",  @"unable to form sub-atomic-instance is to be formed from is not a known atomic-instance");
            goto LABEL_19;
          }

          id v38 = [v16 code];
          unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([v17 localizedDescription]);
          -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  v38,  @"handleSetClientFormSubAtomicRequest",  v28);
        }

        else
        {
          id v46 = v10;
          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v15 instanceEntries]);
          id v19 = [v18 count];

          if (v19)
          {
            id v20 = -[MADAutoAssetControlManager newSetDescriptorFromAlreadyDownloaded:forSetInfoInstance:fromDownloadedSetDescriptor:forAtomicInstance:]( self,  "newSetDescriptorFromAlreadyDownloaded:forSetInfoInstance:fromDownloadedSetDescriptor:forAtomicInstance:",  @"handleSetClientFormSubAtomicRequest",  v8,  v14,  v15);
            if (!v20)
            {
              uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v15 atomicInstanceUUID]);
              -[MADAutoAssetControlManager atomicInstanceRemove:setAtomicInstanceUUID:removingForReason:historyOperation:]( self,  "atomicInstanceRemove:setAtomicInstanceUUID:removingForReason:historyOperation:",  @"handleSetClientFormSubAtomicRequest",  v39,  @"unable to create new set-descriptor",  323LL);

              -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6101LL,  @"handleSetClientFormSubAtomicRequest",  @"unable to create new set-descriptor associated with the new sub-atomic-instance");
              goto LABEL_19;
            }
          }

          uint64_t v43 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetInfoInstance);
          __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
          id v48 = v15;
          id v42 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetSetClientName]);
          __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v8 clientProcessName]);
          id v41 = [v8 clientProcessID];
          __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSetIdentifier]);
          id v23 = (void *)objc_claimAutoreleasedReturnValue([v48 atomicInstanceUUID]);
          id v40 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
          unsigned __int8 v45 = v14;
          __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v8 entriesWhenTargeting]);
          __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v8 frameworkInstanceUUID]);
          id v44 = -[MANAutoAssetSetInfoInstance initUsingClientDomain:forClientName:withProcessName:withProcessID:forAssetSetIdentifier:forAtomicInstance:comprisedOfEntries:asEntriesWhenTargeting:associatingFrameworkUUID:]( v43,  "initUsingClientDomain:forClientName:withProcessName:withProcessID:forAssetSetIdentifier:forAtomicInsta nce:comprisedOfEntries:asEntriesWhenTargeting:associatingFrameworkUUID:",  v47,  v42,  v21,  v41,  v22,  v23,  v40,  v24,  v25);

          id v15 = v48;
          uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
          uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v48 atomicInstanceUUID]);
          uint64_t v10 = v46;
          unsigned int v28 = v44;
          id v29 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildSetFoundResponseMessage:forClientRequest:withFoundSetDescriptor:withSubAtomicInstance:forLatestDownloaded:withInstance:withDesire:fromLocation:]( self,  "buildSetFoundResponseMessage:forClientRequest:withFoundSetDescriptor:withSubAtomicInstance:f orLatestDownloaded:withInstance:withDesire:fromLocation:",  @"formSubAtomicInstance",  v26,  0LL,  v27,  1LL,  v44,  v46,  @"handleSetClientFormSubAtomicRequest"));

          uint64_t v17 = 0LL;
          id v30 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
          -[MADAutoAssetControlManager issueResponseToClientRequest:issuingResponseMessage:withResponseError:]( self,  "issueResponseToClientRequest:issuingResponseMessage:withResponseError:",  v30,  v29,  0LL);

          uint64_t v14 = v45;
        }

LABEL_19:
        goto LABEL_20;
      }

      id v34 = @"atomic-instance that sub-atomic-instance is to be formed from has no associated set-descriptor (orphaned atomic-instance)";
      uint64_t v35 = self;
      id v36 = v5;
      uint64_t v37 = 6557LL;
    }

    else
    {
      id v34 = @"atomic-instance that sub-atomic-instance is to be formed from is not a known atomic-instance";
      uint64_t v35 = self;
      id v36 = v5;
      uint64_t v37 = 6551LL;
    }

    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( v35,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v36,  v37,  @"handleSetClientFormSubAtomicRequest",  v34);
LABEL_20:

    goto LABEL_21;
  }

  unsigned int v31 = objc_alloc(&OBJC_CLASS___NSString);
  uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v5 summary]);
  unsigned __int8 v33 = -[NSString initWithFormat:]( v31,  "initWithFormat:",  @"invalid set-eventInfo (instance:MISSING) | set-eventInfo:%@",  v32);
  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6102LL,  @"handleSetClientFormSubAtomicRequest",  v33);

LABEL_21:
}

- (void)handleSetClientContinueAtomicLockRequest:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  @"handleSetClientContinueAtomicLockRequest",  v5));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetDesire:]( self,  "clientRequestMessageSetDesire:",  v9));

  if (v8)
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v8 atomicInstance]);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSetIdentifier]);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:]( self,  "locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:",  v11,  v12,  v13,  @"handleSetClientContinueAtomicLockRequest"));

    if (v14)
    {
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetSetClientName]);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v10 desireReason]);
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v10 clientAssetSetPolicy]);
      id v26 = 0LL;
      unsigned int v18 = +[MADAutoAssetLocker continuedSetLockByClient:forSetDescriptor:forLockReason:withSetUsagePolicy:continueError:]( &OBJC_CLASS___MADAutoAssetLocker,  "continuedSetLockByClient:forSetDescriptor:forLockReason:withSetUsagePolicy:continueError:",  v15,  v14,  v16,  v17,  &v26);
      id v19 = v26;

      if (v18)
      {
        id v20 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
        __int128 v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildSetFoundResponseMessage:forClientRequest:withFoundSetDescriptor:withSubAtomicInstance:forLatestDownloaded:withInstance:withDesire:fromLocation:]( self,  "buildSetFoundResponseMessage:forClientRequest:withFoundSetDescriptor:withSubAtomicInstance:for LatestDownloaded:withInstance:withDesire:fromLocation:",  @"continueAtomicLock",  v20,  v14,  0LL,  1LL,  v8,  v10,  @"handleSetClientContinueAtomicLockRequest"));

        __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
        -[MADAutoAssetControlManager issueResponseToClientRequest:issuingResponseMessage:withResponseError:]( self,  "issueResponseToClientRequest:issuingResponseMessage:withResponseError:",  v22,  v21,  0LL);
      }

      else
      {
        -[MADAutoAssetControlManager issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  v5,  v19,  @"handleSetClientContinueAtomicLockRequest",  @"failed lock continuation of auto-asset-set");
      }
    }

    else
    {
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6551LL,  @"handleSetClientContinueAtomicLockRequest",  @"atomic-instance lock to be continued for unknown atomic-instance [presumed retired]");
    }
  }

  else
  {
    id v23 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v5 summary]);
    __int128 v25 = -[NSString initWithFormat:]( v23,  "initWithFormat:",  @"invalid set-eventInfo (instance:MISSING) | set-eventInfo:%@",  v24);
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6102LL,  @"handleSetClientContinueAtomicLockRequest",  v25);
  }
}

- (void)handleSetClientEndAtomicLocksForClientRequest:(id)a3 forAutoJob:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  @"handleSetClientEndAtomicLocksForClientRequest",  v6));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequest]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetDesire:]( self,  "clientRequestMessageSetDesire:",  v11));

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequest]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageSetEnd:](self, "clientRequestMessageSetEnd:", v13));

  if (!v10)
  {
    id v50 = objc_alloc(&OBJC_CLASS___NSString);
    id v51 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    __int16 v52 = -[NSString initWithFormat:]( v50,  "initWithFormat:",  @"invalid set-eventInfo (instance:MISSING) | set-eventInfo:%@",  v51);
LABEL_33:
    __int16 v54 = v52;
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6102LL,  @"handleSetClientEndAtomicLocksForClientRequest",  v52);
    goto LABEL_34;
  }

  if (!v14)
  {
    uint64_t v53 = objc_alloc(&OBJC_CLASS___NSString);
    id v51 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    __int16 v52 = -[NSString initWithFormat:]( v53,  "initWithFormat:",  @"invalid set-eventInfo (end:MISSING) | set-eventInfo:%@",  v51);
    goto LABEL_33;
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue([v10 atomicInstance]);
  unsigned int v16 = [v15 isEqualToString:@"ALL_INSTANCES"];

  uint64_t v17 = self;
  char v91 = self;
  if (!v16)
  {
    uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v10 atomicInstance]);
    id v56 = (void *)objc_claimAutoreleasedReturnValue([v10 clientDomainName]);
    __int128 v57 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSetIdentifier]);
    id v51 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:]( v17,  "locateSetDescriptorDownloadedPreferringByAtomicInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:",  v55,  v56,  v57,  @"handleSetClientEndAtomicLocksForClientRequest"));

    if (!v51)
    {
      -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( v17,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6551LL,  @"handleSetClientEndAtomicLocksForClientRequest",  @"atomic-instance locks to be ended for unknown atomic-instance [presumed retired]");
      goto LABEL_35;
    }

    if (!-[MADAutoAssetControlManager isShortTermLockableSetDescriptor:](v17, "isShortTermLockableSetDescriptor:", v51))
    {
      __int128 v59 = v14;
      __int16 v54 = 0LL;
LABEL_45:
      id v62 = v54;
      uint64_t v63 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetSetClientName]);
      __int128 v64 = (void *)objc_claimAutoreleasedReturnValue([v12 desireReason]);
      id v84 = v59;
      id v92 = v54;
      unsigned int v65 = +[MADAutoAssetLocker endedPreviousSetLocksByClient:forSetDescriptor:forLockReason:removingLockCount:endError:]( MADAutoAssetLocker,  "endedPreviousSetLocksByClient:forSetDescriptor:forLockReason:removingLockCount:endError:",  v63,  v51,  v64,  [v59 endLockCount],  &v92);
      __int16 v54 = v92;

      if (v65)
      {
        uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([v12 desireReason]);
        uint64_t v14 = v84;
        -[MADAutoAssetControlManager setLockUsageMapEndedLockForSetDescriptor:forLockReason:endedLockCount:]( v91,  "setLockUsageMapEndedLockForSetDescriptor:forLockReason:endedLockCount:",  v51,  v66,  [v84 endLockCount]);

        if (!-[MADAutoAssetControlManager isSetDescriptorCurrentlyLocked:forSetDescriptor:]( v91,  "isSetDescriptorCurrentlyLocked:forSetDescriptor:",  @"handleSetClientEndAtomicLocksForClientRequest",  v51)) {
          -[MADAutoAssetControlManager secureCheckUngraftAll:forSetDescriptorNoLongerLocked:]( v91,  "secureCheckUngraftAll:forSetDescriptorNoLongerLocked:",  @"handleSetClientEndAtomicLocksForClientRequest",  v51);
        }
        -[MADAutoAssetControlManager _removeDownloadedSetDescriptorWithNewerDownloaded:fromLocation:]( v91,  "_removeDownloadedSetDescriptorWithNewerDownloaded:fromLocation:",  v51,  @"handleSetClientEndAtomicLocksForClientRequest");
        -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( v91,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  0LL,  @"handleSetClientEndAtomicLocksForClientRequest",  @"successful end of atomic-locks of auto-asset-set (for client-specified criteria)");
        id v67 = (void *)objc_claimAutoreleasedReturnValue([v51 clientDomainName]);
        id v68 = (void *)objc_claimAutoreleasedReturnValue([v51 assetSetIdentifier]);
        -[MADAutoAssetControlManager finishSetEliminateIfAwaitingUnlocked:forClientDomain:forAssetSetIdentifier:]( v91,  "finishSetEliminateIfAwaitingUnlocked:forClientDomain:forAssetSetIdentifier:",  @"handleSetClientEndAtomicLocksForClientRequest",  v67,  v68);
      }

      else
      {
        -[MADAutoAssetControlManager issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:]( v91,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  v6,  v54,  @"handleSetClientEndAtomicLocksForClientRequest",  @"failed to end previous atomic-locks of auto-asset-set (for client-specified criteria)");
        uint64_t v14 = v84;
      }

      goto LABEL_34;
    }

    id v93 = 0LL;
    unsigned __int8 v58 = -[MADAutoAssetControlManager removeShortTermLockingOfSetDescriptor:forSetDescriptor:endingAll:error:]( v17,  "removeShortTermLockingOfSetDescriptor:forSetDescriptor:endingAll:error:",  @"handleSetClientEndAtomicLocksForClientRequest(specific)",  v51,  0LL,  &v93);
    __int16 v54 = (NSString *)v93;
    if ((v58 & 1) != 0)
    {
      __int128 v59 = v14;
      goto LABEL_45;
    }

    -[MADAutoAssetControlManager issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:]( v17,  "issueResponseForEventInfo:withAutoAssetError:fromAction:withDescription:",  v6,  v54,  @"handleSetClientEndAtomicLocksForClientRequest",  @"failed to end standard-lock due to SHORT-TERM locks");
LABEL_34:

LABEL_35:
    goto LABEL_36;
  }

  unsigned int v83 = v14;
  unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([v10 clientDomainName]);
  id v19 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSetIdentifier]);
  uint64_t v20 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setLockUsageMapForClientDomain:forSetIdentifier:]( self,  "setLockUsageMapForClientDomain:forSetIdentifier:",  v18,  v19));

  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  __int128 v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

  BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);
  unsigned int v87 = (void *)v20;
  if (!v20)
  {
    if (v23)
    {
      BOOL v60 = (void *)objc_claimAutoreleasedReturnValue([v10 clientDomainName]);
      id v61 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSetIdentifier]);
      *(_DWORD *)int buf = 138543618;
      uint64_t v106 = v60;
      __int16 v107 = 2114;
      uint64_t v108 = v61;
      _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "{handleSetClientEndAtomicLocksForClientRequest} No lock is held when requesting to end all locks in all atomic a nd sub-atomic instances for domain: %{public}@, setID: %{public}@",  buf,  0x16u);
    }

    goto LABEL_61;
  }

  if (v23)
  {
    __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v10 clientDomainName]);
    __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSetIdentifier]);
    *(_DWORD *)int buf = 138543618;
    uint64_t v106 = v24;
    __int16 v107 = 2114;
    uint64_t v108 = v25;
    _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "{handleSetClientEndAtomicLocksForClientRequest} Ending all locks in all atomic and sub-atomic instances for domain : %{public}@, setID: %{public}@",  buf,  0x16u);
  }

  id v80 = v12;
  id v82 = v6;

  uint64_t v86 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v99 = 0u;
  __int128 v100 = 0u;
  __int128 v101 = 0u;
  __int128 v102 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v89 = [obj countByEnumeratingWithState:&v99 objects:v104 count:16];
  id v81 = v7;
  if (!v89)
  {
    id v85 = 0LL;
    id v29 = self;
    goto LABEL_50;
  }

  id v85 = 0LL;
  uint64_t v26 = *(void *)v100;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  unsigned int v28 = &MobileAssetKeyManager__metaData.ivars;
  id v29 = self;
  do
  {
    id v30 = 0LL;
    do
    {
      if (*(void *)v100 != v26) {
        objc_enumerationMutation(obj);
      }
      uint64_t v31 = *(void *)(*((void *)&v99 + 1) + 8LL * (void)v30);
      uint64_t v32 = objc_autoreleasePoolPush();
      unsigned __int8 v33 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( v29,  "downloadedSetDescriptorsByInstance"));
      id v34 = [v33 safeObjectForKey:v31 ofClass:objc_opt_class(p_ivars[218])];
      uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(v34);

      if (v35)
      {
        id v90 = v32;
        id v36 = p_ivars;
        uint64_t v37 = v26;
        id v38 = v28[155];
        id v39 = (id)objc_claimAutoreleasedReturnValue([v35 clientDomainName]);
        id v40 = (void *)objc_claimAutoreleasedReturnValue([v10 clientDomainName]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v38, "stringIsEqual:to:", v39, v40) & 1) == 0)
        {

          uint64_t v26 = v37;
          p_ivars = v36;
          uint64_t v32 = v90;
          goto LABEL_21;
        }

        id v41 = v28[155];
        id v42 = (void *)objc_claimAutoreleasedReturnValue([v35 assetSetIdentifier]);
        uint64_t v43 = v10;
        id v44 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSetIdentifier]);
        LODWORD(v41) = -[__objc2_ivar_list stringIsEqual:to:](v41, "stringIsEqual:to:", v42, v44);

        if ((_DWORD)v41)
        {
          unsigned __int8 v45 = (void *)objc_claimAutoreleasedReturnValue([v35 latestDownloadedAtomicInstance]);
          int v46 = -[MADAutoAssetControlManager setLockUsageMapForAtomicInstance:clientLockUsageMap:lockReason:]( v91,  "setLockUsageMapForAtomicInstance:clientLockUsageMap:lockReason:",  v45,  v87,  0LL);

          uint64_t v32 = v90;
          if (v46 >= 1)
          {
            uint64_t v10 = v43;
            unsigned int v28 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            if (-[MADAutoAssetControlManager isShortTermLockableSetDescriptor:]( v91,  "isShortTermLockableSetDescriptor:",  v35))
            {
              id v98 = 0LL;
              id v29 = v91;
              unsigned __int8 v47 = -[MADAutoAssetControlManager removeShortTermLockingOfSetDescriptor:forSetDescriptor:endingAll:error:]( v91,  "removeShortTermLockingOfSetDescriptor:forSetDescriptor:endingAll:error:",  @"handleSetClientEndAtomicLocksForClientRequest(ALL)",  v35,  1LL,  &v98);
              id v48 = v98;
              id v39 = v48;
              uint64_t v26 = v37;
              if ((v47 & 1) == 0)
              {
                p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
                if (!v85)
                {
                  id v39 = v48;
                  id v85 = v39;
                }

                goto LABEL_21;
              }
            }

            else
            {
              id v29 = v91;
              id v39 = 0LL;
              uint64_t v26 = v37;
            }

            p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            -[NSMutableArray addObject:](v86, "addObject:", v35);
LABEL_21:

            goto LABEL_25;
          }

          uint64_t v10 = v43;
          id v29 = v91;
        }

        else
        {
          uint64_t v10 = v43;
          uint64_t v32 = v90;
          id v29 = v91;
        }

        uint64_t v26 = v37;
        p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        unsigned int v28 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
      }

- (void)handleSetClientAssetSetForStagingRequest:(id)a3 forAutoJob:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v49 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  @"handleSetClientAssetSetForStagingRequest",  v6));
  if (!v49)
  {
    uint64_t v43 = @"setInfoInstance is not provided in request | MISSING REQUIRED FIELD";
LABEL_23:
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6103LL,  @"handleSetClientAssetSetForStagingRequest",  v43);
    goto LABEL_26;
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v49 entriesWhenTargeting]);

  if (!v10)
  {
    uint64_t v43 = @"no set-target entries provided in request | MISSING REQUIRED FIELD";
    goto LABEL_23;
  }

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v49 clientDomainName]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v49 assetSetIdentifier]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v11,  v12));

  if (v13)
  {
    id v44 = v13;
    id v45 = v7;
    id v46 = v6;
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v49 clientDomainName]);
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v49 assetSetIdentifier]);
    -[MADAutoAssetControlManager removeSetTargetsForClientDomain:forSetIdentifier:fromLocation:]( self,  "removeSetTargetsForClientDomain:forSetIdentifier:fromLocation:",  v14,  v15,  @"handleSetClientAssetSetForStagingRequest");

    __int128 v55 = 0u;
    __int128 v56 = 0u;
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue([v49 entriesWhenTargeting]);
    id v51 = [obj countByEnumeratingWithState:&v53 objects:v61 count:16];
    if (v51)
    {
      uint64_t v50 = *(void *)v54;
      unsigned int v16 = @"handleSetClientAssetSetForStagingRequest";
      do
      {
        for (unint64_t i = 0LL; i != v51; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v54 != v50) {
            objc_enumerationMutation(obj);
          }
          uint64_t v18 = *(void *)(*((void *)&v53 + 1) + 8LL * (void)i);
          id v19 = objc_autoreleasePoolPush();
          uint64_t v20 = v19;
          if (v18)
          {
            __int16 v52 = v19;
            __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v49 clientDomainName]);
            __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v49 assetSetIdentifier]);
            id v23 = -[MADAutoAssetControlManager newSetTargetFromClientProvidedSetTarget:forClientDomainName:forSetIdentifier:]( self,  "newSetTargetFromClientProvidedSetTarget:forClientDomainName:forSetIdentifier:",  v18,  v21,  v22);

            __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v23 clientDomainName]);
            __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v23 assetSetIdentifier]);
            uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setTargetNewEntryIDForClientDomainName:forAssetSetIdentifier:forClientProvidedSetTarget:]( self,  "setTargetNewEntryIDForClientDomainName:forAssetSetIdentifier:forClientProvidedSetTarget:",  v24,  v25,  v18));

            uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
            unsigned int v28 = v16;
            LODWORD(v24) = [v27 persistedEntryAlreadyExists:v26 fromLocation:v16];

            id v29 = @"ENTRY_ADD";
            if ((_DWORD)v24)
            {
              id v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
              id v30 = (void *)objc_claimAutoreleasedReturnValue([v48 diag]);
              uint64_t v31 = objc_alloc(&OBJC_CLASS___NSString);
              uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v23 summary]);
              unsigned __int8 v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              id v34 = -[NSString initWithFormat:]( v31,  "initWithFormat:",  @"{handleSetClientAssetSetForStagingRequest} persisted-entry already exists when should have just been removed | setTarget:%@ | %@",  v32,  v33);
              [v30 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v34 withResult:6109 withError:0];

              id v29 = @"ENTRY_MODIFY";
            }

            uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
            unsigned int v16 = v28;
            id v36 = (void *)objc_claimAutoreleasedReturnValue([v35 persistedEntry:v26 fromLocation:v28]);

            if (v36)
            {
              [v36 persistSecureCodedObject:v23 forKey:@"setTarget"];
              uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
              id v38 = (void *)objc_claimAutoreleasedReturnValue([v23 summary]);
              [v37 storePersistedEntry:v26 withEntrySummary:v38 fromLocation:v28];

              -[MADAutoAssetControlManager _logPersistedSetTarget:operation:forPersistedEntryID:withSetTarget:message:]( self,  "_logPersistedSetTarget:operation:forPersistedEntryID:withSetTarget:message:",  v28,  v29,  v26,  v23,  @"new set-target");
            }

            else
            {
              id v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v40 = (os_log_s *)objc_claimAutoreleasedReturnValue([v39 oslog]);

              if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
              {
                id v41 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                id v42 = (void *)objc_claimAutoreleasedReturnValue([v23 summary]);
                *(_DWORD *)int buf = 138543618;
                unsigned __int8 v58 = v41;
                __int16 v59 = 2114;
                BOOL v60 = v42;
                _os_log_error_impl( &dword_0,  v40,  OS_LOG_TYPE_ERROR,  "[%{public}@] {handleSetClientAssetSetForStagingRequest} unable to load persisted-set-target file | set Target:%{public}@",  buf,  0x16u);
              }

              unsigned int v16 = v28;
            }

            uint64_t v20 = v52;
          }

          objc_autoreleasePoolPop(v20);
        }

        id v51 = [obj countByEnumeratingWithState:&v53 objects:v61 count:16];
      }

      while (v51);
    }

    id v6 = v46;
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v46,  0LL,  @"handleSetClientAssetSetForStagingRequest",  @"successfully defined asset-set-for-staging");
    id v13 = v44;
    id v7 = v45;
  }

  else
  {
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v6,  6558LL,  @"handleSetClientAssetSetForStagingRequest",  @"set-identifier (for given client-domain-name) is not currently defined");
  }

LABEL_26:
}

- (void)handleSetClientEliminateAtomicRequest:(id)a3 forAutoJob:(id)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  @"handleSetClientEliminateAtomicRequest",  v5));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 clientRequest]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetDesire:]( self,  "clientRequestMessageSetDesire:",  v9));

  if (!v8)
  {
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6102LL,  @"handleSetClientEliminateAtomicRequest",  @"no instance provided in client eliminate request");
    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    unsigned int v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 oslog]);

    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager handleSetClientEliminateAtomicRequest:forAutoJob:].cold.1(v5);
    }
    goto LABEL_11;
  }

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);

  if (!v11)
  {
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6102LL,  @"handleSetClientEliminateAtomicRequest",  @"instance missing client-domain-name when required for eliminate request");
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    unsigned int v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager handleSetClientEliminateAtomicRequest:forAutoJob:].cold.2(v5);
    }
    goto LABEL_11;
  }

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSetIdentifier]);

  if (!v12)
  {
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v5,  6102LL,  @"handleSetClientEliminateAtomicRequest",  @"instance missing asset-set-identifier when required for eliminate request");
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    unsigned int v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager handleSetClientEliminateAtomicRequest:forAutoJob:].cold.3(v5);
    }
LABEL_11:

    goto LABEL_12;
  }

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSetIdentifier]);
  -[MADAutoAssetControlManager _eliminateAtomicTriggeredByClient:forClientDomainName:forAssetSetIdentifier:awaitingUnlocked:]( self,  "_eliminateAtomicTriggeredByClient:forClientDomainName:forAssetSetIdentifier:awaitingUnlocked:",  v5,  v13,  v14,  [v10 awaitDownloadingOfDiscovered]);

LABEL_12:
}

- (void)_eliminateAtomicTriggeredWhileLoading:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5
{
  id v8 = a5;
  id v9 = a4;
  id v12 = a3;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  -[MADAutoAssetControlManager _forgetAtomicLostToVend:forClientDomainName:forAssetSetIdentifier:]( self,  "_forgetAtomicLostToVend:forClientDomainName:forAssetSetIdentifier:",  v12,  v9,  v8);
  -[MADAutoAssetControlManager setConfigurationEliminate:forClientDomainName:forAssetSetIdentifier:]( self,  "setConfigurationEliminate:forClientDomainName:forAssetSetIdentifier:",  v12,  v9,  v8);
}

- (void)_forgetAtomicLostToVend:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5
{
  id v66 = a3;
  id v67 = a4;
  id v64 = a5;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int16 v59 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  __int128 v80 = 0u;
  __int128 v81 = 0u;
  __int128 v82 = 0u;
  __int128 v83 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v10 = [obj countByEnumeratingWithState:&v80 objects:v87 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v81;
    do
    {
      id v13 = 0LL;
      do
      {
        if (*(void *)v81 != v12) {
          objc_enumerationMutation(obj);
        }
        uint64_t v14 = *(void *)(*((void *)&v80 + 1) + 8LL * (void)v13);
        id v15 = objc_autoreleasePoolPush();
        unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
        id v17 = [v16 safeObjectForKey:v14 ofClass:objc_opt_class(MADAutoSetDescriptor)];
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

        if (v14)
        {
          id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 clientDomainName]);
          if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v19, v67) & 1) != 0)
          {
            uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSetIdentifier]);
            unsigned int v21 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v20, v64);

            if (v21)
            {
              __int128 v22 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setLockUsageMapForSetDescriptor:]( self,  "setLockUsageMapForSetDescriptor:",  v18));

              if (v22)
              {
                id v23 =  +[MADAutoAssetLocker eliminateAllPreviousSetLocksByClient:forSetDescriptor:]( &OBJC_CLASS___MADAutoAssetLocker,  "eliminateAllPreviousSetLocksByClient:forSetDescriptor:",  @"ALL_INSTANCES",  v18);
                -[MADAutoAssetControlManager secureForceUngraftAll:forSetDescriptorBeingRemoved:]( self,  "secureForceUngraftAll:forSetDescriptorBeingRemoved:",  v66,  v18);
              }

              -[NSMutableArray addObject:](v59, "addObject:", v14);
            }
          }

          else
          {
          }
        }

        objc_autoreleasePoolPop(v15);
        id v13 = (char *)v13 + 1;
      }

      while (v11 != v13);
      id v11 = [obj countByEnumeratingWithState:&v80 objects:v87 count:16];
    }

    while (v11);
  }

  __int128 v78 = 0u;
  __int128 v79 = 0u;
  __int128 v76 = 0u;
  __int128 v77 = 0u;
  id obja = v59;
  id v24 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obja,  "countByEnumeratingWithState:objects:count:",  &v76,  v86,  16LL);
  if (v24)
  {
    id v25 = v24;
    uint64_t v26 = *(void *)v77;
    do
    {
      uint64_t v27 = 0LL;
      do
      {
        if (*(void *)v77 != v26) {
          objc_enumerationMutation(obja);
        }
        uint64_t v28 = *(void *)(*((void *)&v76 + 1) + 8LL * (void)v27);
        id v29 = objc_autoreleasePoolPush();
        id v30 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
        id v31 = [v30 safeObjectForKey:v28 ofClass:objc_opt_class(MADAutoSetDescriptor)];
        uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(v31);

        unsigned __int8 v33 = (void *)objc_claimAutoreleasedReturnValue([v32 clientDomainName]);
        id v34 = (void *)objc_claimAutoreleasedReturnValue([v32 assetSetIdentifier]);
        uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v33,  v34,  v28));

        -[MADAutoAssetControlManager removeSetDescriptorDownloaded:fromLocation:checkingByInstance:regardlessOfLatest:historyOperationAI:historyOperationSD:]( self,  "removeSetDescriptorDownloaded:fromLocation:checkingByInstance:regardlessOfLatest:historyOperationAI:historyOperationSD:",  v32,  v66,  0LL,  0LL,  326LL,  370LL);
        id v36 =  -[MADAutoAssetControlManager _shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:]( self,  "_shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:",  @"_eliminateAtomicTriggeredWhileLoading",  v35,  v65,  @"atomic-instance shared lock atomic-instance (eliminated set-identifier)");

        objc_autoreleasePoolPop(v29);
        uint64_t v27 = (char *)v27 + 1;
      }

      while (v25 != v27);
      id v25 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obja,  "countByEnumeratingWithState:objects:count:",  &v76,  v86,  16LL);
    }

    while (v25);
  }

  -[MADAutoAssetControlManager setLockUsageMapEliminateForClientDomain:forSetIdentifier:]( self,  "setLockUsageMapEliminateForClientDomain:forSetIdentifier:",  v67,  v64);
  -[MADAutoAssetControlManager atomicInstanceEliminate:forClientDomainName:forAssetSetIdentifier:]( self,  "atomicInstanceEliminate:forClientDomainName:forAssetSetIdentifier:",  v66,  v67,  v64);
  BOOL v60 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);

  __int128 v74 = 0u;
  __int128 v75 = 0u;
  __int128 v72 = 0u;
  __int128 v73 = 0u;
  id objb = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](self, "currentSetStatusByInstance"));
  id v37 = [objb countByEnumeratingWithState:&v72 objects:v85 count:16];
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  if (v37)
  {
    id v39 = v37;
    uint64_t v40 = *(void *)v73;
    do
    {
      id v41 = 0LL;
      do
      {
        if (*(void *)v73 != v40) {
          objc_enumerationMutation(objb);
        }
        uint64_t v42 = *(void *)(*((void *)&v72 + 1) + 8LL * (void)v41);
        uint64_t v43 = objc_autoreleasePoolPush();
        id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](self, "currentSetStatusByInstance"));
        id v45 = [v44 safeObjectForKey:v42 ofClass:objc_opt_class(MANAutoAssetSetStatus)];
        id v46 = (void *)objc_claimAutoreleasedReturnValue(v45);

        if (v42)
        {
          unsigned __int8 v47 = p_ivars[155];
          id v48 = (void *)objc_claimAutoreleasedReturnValue([v46 clientDomainName]);
          if ((-[__objc2_ivar_list stringIsEqual:to:](v47, "stringIsEqual:to:", v48, v67) & 1) != 0)
          {
            id v49 = p_ivars[155];
            uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v46 assetSetIdentifier]);
            LODWORD(v49) = -[__objc2_ivar_list stringIsEqual:to:](v49, "stringIsEqual:to:", v50, v64);

            p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            if ((_DWORD)v49) {
              -[NSMutableArray addObject:](v60, "addObject:", v42);
            }
          }

          else
          {
          }
        }

        objc_autoreleasePoolPop(v43);
        id v41 = (char *)v41 + 1;
      }

      while (v39 != v41);
      id v39 = [objb countByEnumeratingWithState:&v72 objects:v85 count:16];
    }

    while (v39);
  }

  __int128 v70 = 0u;
  __int128 v71 = 0u;
  __int128 v68 = 0u;
  __int128 v69 = 0u;
  id v51 = v60;
  id v52 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v51,  "countByEnumeratingWithState:objects:count:",  &v68,  v84,  16LL);
  if (v52)
  {
    id v53 = v52;
    uint64_t v54 = *(void *)v69;
    do
    {
      __int128 v55 = 0LL;
      do
      {
        if (*(void *)v69 != v54) {
          objc_enumerationMutation(v51);
        }
        uint64_t v56 = *(void *)(*((void *)&v68 + 1) + 8LL * (void)v55);
        __int128 v57 = objc_autoreleasePoolPush();
        unsigned __int8 v58 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](self, "currentSetStatusByInstance"));
        [v58 removeObjectForKey:v56];

        objc_autoreleasePoolPop(v57);
        __int128 v55 = (char *)v55 + 1;
      }

      while (v53 != v55);
      id v53 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v51,  "countByEnumeratingWithState:objects:count:",  &v68,  v84,  16LL);
    }

    while (v53);
  }
}

- (void)_eliminateAtomicTriggeredByClient:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5 awaitingUnlocked:(BOOL)a6
{
  BOOL v6 = a6;
  id v25 = a3;
  id v10 = a4;
  id v11 = a5;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v13);

  id v14 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( objc_alloc(&OBJC_CLASS___MAAutoAssetSelector),  "initForAssetType:withAssetSpecifier:",  v10,  v11);
  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
  unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([v14 persistedEntryID]);
  id v17 = [v15 safeObjectForKey:v16 ofClass:objc_opt_class(MADAutoAssetEliminate)];
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

  if (!v18)
  {
    __int128 v22 = objc_alloc(&OBJC_CLASS___NSString);
    id v23 = @"N";
    if (v6) {
      id v23 = @"Y";
    }
    id v24 = -[NSString initWithFormat:]( v22,  "initWithFormat:",  @"_eliminateAtomicTriggeredByClient(awaitUnlocked:%@)",  v23);
    +[MADAutoAssetControlManager postSetNotificationName:forAssetSetIdentifier:fromModule:fromLocation:]( &OBJC_CLASS___MADAutoAssetControlManager,  "postSetNotificationName:forAssetSetIdentifier:fromModule:fromLocation:",  @"ATOMIC_INSTANCE_ELIMINATED",  v11,  @"AUTO-CONTROL",  v24);

    goto LABEL_8;
  }

  if ([v18 awaitingUnlocked] && !v6)
  {
LABEL_8:
    -[MADAutoAssetControlManager setDescriptorEliminate:triggeredByClient:forClientDomainName:forAssetSetIdentifier:awaitingUnlocked:]( self,  "setDescriptorEliminate:triggeredByClient:forClientDomainName:forAssetSetIdentifier:awaitingUnlocked:",  @"_eliminateAtomicTriggeredByClient",  v25,  v10,  v11,  v6);
    goto LABEL_9;
  }

  id v19 = objc_alloc(&OBJC_CLASS___NSString);
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v14 summary]);
  unsigned int v21 = -[NSString initWithFormat:]( v19,  "initWithFormat:",  @"eliminate-atomic when already eliminating (and not changing from soft to hard eliminate) | eliminateSelector:%@",  v20);
  -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v25,  6114LL,  @"_eliminateAtomicTriggeredByClient",  v21);

LABEL_9:
}

- (id)buildReportedSetStatus:(id)a3 forClientDomainName:(id)a4 forSetIdentifier:(id)a5 forAtomicInstance:(id)a6 withFoundSetDescriptor:(id)a7 withSubAtomicInstance:(id)a8 reportingLocalContentURLs:(BOOL)a9
{
  id v15 = a3;
  id v112 = a4;
  id v113 = a5;
  id v16 = a7;
  id v86 = a8;
  id v17 = a6;
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v19 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v18 extendedStateQueue]);
  dispatch_assert_queue_V2(v19);

  id v20 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetStatusPreferringByInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:]( self,  "locateSetStatusPreferringByInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:",  v17,  0LL,  0LL,  v15));
  unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDowloadedAtomicInstanceEntries]);
  __int128 v22 = self;
  id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoAssetDescriptorsForSet:](self, "autoAssetDescriptorsForSet:", v16));
  LODWORD(v17) = +[MADAutoAssetSecure doesSetDescriptorInvolveSecureOperations:forSetDescriptor:withAutoAssetDescriptors:]( &OBJC_CLASS___MADAutoAssetSecure,  "doesSetDescriptorInvolveSecureOperations:forSetDescriptor:withAutoAssetDescriptors:",  v15,  v16,  v23);

  if ((_DWORD)v17)
  {
    id v24 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetSecure latestDownloadedAtomicInstanceEntries:forSetDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "latestDownloadedAtomicInstanceEntries:forSetDescriptor:",  v15,  v16));
  }

  else
  {
    id v24 = v21;
  }

  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  uint64_t v26 = &MobileAssetKeyManager__metaData.ivars;
  uint64_t v27 = v22;
  unsigned int v87 = v24;
  if (v20
    || (uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDownloadedAtomicInstance]),
        id v20 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetStatusPreferringByInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:]( v22,  "locateSetStatusPreferringByInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:",  v28,  0LL,  0LL,  v15)),  v28,  v20)
    || (id v29 = (void *)objc_claimAutoreleasedReturnValue([v16 discoveredAtomicInstance]),
        id v20 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetStatusPreferringByInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:]( v22,  "locateSetStatusPreferringByInstance:elseByClientDomain:forAssetSetIdentifier:fromLocation:",  v29,  0LL,  0LL,  v15)),  v29,  v20))
  {
    if (v16)
    {
      id v30 = (void *)objc_claimAutoreleasedReturnValue([v20 currentNotifications]);
      [v30 setAtomicInstanceDiscovered:1];

      id v31 = (void *)objc_claimAutoreleasedReturnValue([v20 currentNotifications]);
      [v31 setAtomicInstanceAvailableForUse:1];

      uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v20 atomicInstancesDownloaded]);
      if (!v32)
      {
        unsigned __int8 v33 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceUUIDArrayForSetDescriptor:]( v22,  "atomicInstanceUUIDArrayForSetDescriptor:",  v16));
        [v20 setAtomicInstancesDownloaded:v33];
      }

      id v34 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDownloadedAtomicInstance]);
      [v20 setLatestDownloadedAtomicInstance:v34];

      [v20 setLatestDowloadedAtomicInstanceEntries:v24];
    }

    [v20 setAvailableForUseError:0];
    [v20 setNewerVersionError:0];
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v20 catalogCachedAssetSetID]);

    if (!v35)
    {
      id v36 = (void *)objc_claimAutoreleasedReturnValue([v16 catalogCachedAssetSetID]);
      [v20 setCatalogCachedAssetSetID:v36];

      id v37 = (void *)objc_claimAutoreleasedReturnValue([v16 catalogDownloadedFromLive]);
      [v20 setCatalogDownloadedFromLive:v37];

      id v38 = (void *)objc_claimAutoreleasedReturnValue([v16 catalogLastTimeChecked]);
      [v20 setCatalogLastTimeChecked:v38];

      id v39 = (void *)objc_claimAutoreleasedReturnValue([v16 catalogPostedDate]);
      [v20 setCatalogPostedDate:v39];
    }

    uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v20 downloadedCatalogCachedAssetSetID]);

    if (!v40)
    {
      id v41 = (void *)objc_claimAutoreleasedReturnValue([v16 downloadedCatalogCachedAssetSetID]);
      [v20 setDownloadedCatalogCachedAssetSetID:v41];

      uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([v16 downloadedCatalogDownloadedFromLive]);
      [v20 setDownloadedCatalogDownloadedFromLive:v42];

      uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v16 downloadedCatalogLastTimeChecked]);
      [v20 setDownloadedCatalogLastTimeChecked:v43];

      id v44 = (void *)objc_claimAutoreleasedReturnValue([v16 downloadedCatalogPostedDate]);
      [v20 setDownloadedCatalogPostedDate:v44];
    }

    -[MADAutoAssetControlManager _updateCurrentSetStatus:forSetIdentifier:withSetStatus:]( v22,  "_updateCurrentSetStatus:forSetIdentifier:withSetStatus:",  @"FOUND_SET_STATUS",  v113,  v20);
  }

  else
  {
    id v57 = (id)objc_claimAutoreleasedReturnValue([v16 discoveredAtomicInstance]);
    unsigned __int8 v58 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetSetNotifications);
    if (!v57) {
      id v57 = v86;
    }
    -[MANAutoAssetSetNotifications setAtomicInstanceDiscovered:](v58, "setAtomicInstanceDiscovered:", 1LL);
    -[MANAutoAssetSetNotifications setAtomicInstanceAvailableForUse:](v58, "setAtomicInstanceAvailableForUse:", 1LL);
    __int128 v95 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetStatus);
    __int16 v111 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationAssetEntries:]( v22,  "setConfigurationAssetEntries:",  v16));
    uint64_t v106 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceUUIDArrayForSetDescriptor:]( v22,  "atomicInstanceUUIDArrayForSetDescriptor:",  v16));
    __int128 v104 = (void *)objc_claimAutoreleasedReturnValue([v16 catalogCachedAssetSetID]);
    __int128 v102 = (void *)objc_claimAutoreleasedReturnValue([v16 catalogDownloadedFromLive]);
    id v110 = (void *)objc_claimAutoreleasedReturnValue([v16 catalogLastTimeChecked]);
    uint64_t v108 = (void *)objc_claimAutoreleasedReturnValue([v16 catalogPostedDate]);
    char v91 = (void *)objc_claimAutoreleasedReturnValue([v16 discoveredAtomicEntries]);
    __int128 v99 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDownloadedAtomicInstance]);
    id v89 = (void *)objc_claimAutoreleasedReturnValue([v16 downloadedCatalogCachedAssetSetID]);
    id v85 = (void *)objc_claimAutoreleasedReturnValue([v16 downloadedCatalogDownloadedFromLive]);
    __int128 v97 = (void *)objc_claimAutoreleasedReturnValue([v16 downloadedCatalogLastTimeChecked]);
    __int128 v83 = (void *)objc_claimAutoreleasedReturnValue([v16 downloadedCatalogPostedDate]);
    id v81 = +[MADAutoAssetScheduler newSetPolicyForDomainName:forAssetSetIdentifier:]( &OBJC_CLASS___MADAutoAssetScheduler,  "newSetPolicyForDomainName:forAssetSetIdentifier:",  v112,  v113);
    __int16 v59 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager stagerSetPolicy]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerSetPolicy"));
    unsigned __int8 v60 = -[MADAutoAssetControlManager _haveReceivedLookupResponseForSetDescriptor:]( v22,  "_haveReceivedLookupResponseForSetDescriptor:",  v16);
    unsigned __int8 v61 = -[MADAutoAssetControlManager _vendingAtomicInstanceForConfiguredEntriesForSetDescriptor:]( v22,  "_vendingAtomicInstanceForConfiguredEntriesForSetDescriptor:",  v16);
    uint64_t v62 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager setLockUsageMapForSetDescriptor:](v22, "setLockUsageMapForSetDescriptor:", v16));
    uint64_t v63 = v58;
    id v93 = v58;
    id v64 = (void *)v62;
    BYTE2(v65) = 0;
    BYTE1(v65) = v61;
    LOBYTE(v65) = v60;
    id v20 = -[MANAutoAssetSetStatus initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( v95,  "initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:wit hCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:with NewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatest DowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive :withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNe edPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfigure dEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemB ytes:withCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  v112,  v113,  v111,  v106,  v104,  v102,  v110,  v108,  v57,  v91,  v99,  v87,  v89,  v85,  v97,  v83,  v63,  0LL,  v81,  v59,  v65,  0LL,  0LL,  0LL,  v62,  0LL,  0LL,  0LL);

    id v24 = v87;
    uint64_t v26 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
    uint64_t v27 = v22;

    p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
    if (!v20)
    {
      __int128 v55 = 0LL;
      goto LABEL_23;
    }
  }

  id v79 = objc_alloc((Class)p_ivars[258]);
  id v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager setConfigurationAssetEntries:](v27, "setConfigurationAssetEntries:", v16));
  uint64_t v109 = (void *)objc_claimAutoreleasedReturnValue([v20 atomicInstancesDownloaded]);
  uint64_t v46 = objc_claimAutoreleasedReturnValue([v20 catalogCachedAssetSetID]);
  __int128 v105 = (void *)objc_claimAutoreleasedReturnValue([v20 catalogDownloadedFromLive]);
  __int128 v103 = (void *)objc_claimAutoreleasedReturnValue([v20 catalogLastTimeChecked]);
  __int128 v101 = (void *)objc_claimAutoreleasedReturnValue([v20 catalogPostedDate]);
  __int128 v100 = (void *)objc_claimAutoreleasedReturnValue([v20 newerAtomicInstanceDiscovered]);
  uint64_t v47 = objc_claimAutoreleasedReturnValue([v20 newerDiscoveredAtomicEntries]);
  __int16 v107 = (void *)v46;
  __int128 v82 = (void *)v47;
  if (a9)
  {
    id v90 = v24;
    id v92 = (void *)objc_claimAutoreleasedReturnValue([v20 latestDownloadedAtomicInstance]);
    uint64_t v88 = v47;
  }

  else
  {
    uint64_t v88 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _limitToCheckAtomicEntries:](v27, "_limitToCheckAtomicEntries:", v47));
    id v92 = (void *)objc_claimAutoreleasedReturnValue([v20 latestDownloadedAtomicInstance]);
    id v90 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _limitToCheckAtomicEntries:](v27, "_limitToCheckAtomicEntries:", v24));
  }

  id v98 = (void *)objc_claimAutoreleasedReturnValue([v20 downloadedCatalogCachedAssetSetID]);
  __int128 v96 = (void *)objc_claimAutoreleasedReturnValue([v20 downloadedCatalogDownloadedFromLive]);
  __int128 v94 = (void *)objc_claimAutoreleasedReturnValue([v20 downloadedCatalogLastTimeChecked]);
  __int128 v76 = (void *)objc_claimAutoreleasedReturnValue([v20 downloadedCatalogPostedDate]);
  __int128 v75 = (void *)objc_claimAutoreleasedReturnValue([v20 currentNotifications]);
  __int128 v73 = (void *)objc_claimAutoreleasedReturnValue([v20 currentNeedPolicy]);
  id v71 = +[MADAutoAssetScheduler newSetPolicyForDomainName:forAssetSetIdentifier:]( &OBJC_CLASS___MADAutoAssetScheduler,  "newSetPolicyForDomainName:forAssetSetIdentifier:",  v112,  v113);
  __int128 v70 = (void *)objc_claimAutoreleasedReturnValue(-[__objc2_ivar_list stagerSetPolicy](v26[174], "stagerSetPolicy"));
  __int128 v78 = (void *)objc_claimAutoreleasedReturnValue([v20 clientDomainName]);
  __int128 v77 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSetIdentifier]);
  unsigned __int8 v69 = -[MADAutoAssetControlManager _haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:]( v27,  "_haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:",  v78,  v77);
  __int128 v74 = (void *)objc_claimAutoreleasedReturnValue([v20 clientDomainName]);
  __int128 v72 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSetIdentifier]);
  unsigned __int8 v68 = -[MADAutoAssetControlManager _vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:]( v27,  "_vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:",  v74,  v72);
  unsigned __int8 v67 = [v20 downloadUserInitiated];
  id v66 = (void *)objc_claimAutoreleasedReturnValue([v20 downloadProgress]);
  id v48 = [v20 downloadedNetworkBytes];
  id v49 = [v20 downloadedFilesystemBytes];
  id v84 = v16;
  uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setLockUsageMapForSetDescriptor:]( v27,  "setLockUsageMapForSetDescriptor:",  v16));
  id v51 = (void *)objc_claimAutoreleasedReturnValue([v20 selectorsForStaging]);
  id v52 = (void *)objc_claimAutoreleasedReturnValue([v20 availableForUseError]);
  id v53 = (void *)objc_claimAutoreleasedReturnValue([v20 newerVersionError]);
  BYTE2(v65) = v67;
  BYTE1(v65) = v68;
  LOBYTE(v65) = v69;
  id v80 = objc_msgSend( v79,  "initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:withC atalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewe rAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloa dedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDow nloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:w ithSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:wit hDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withCurre ntLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  v112,  v113,  v45,  v109,  v107,  v105,  v103,  v101,  v100,  v88,  v92,  v90,  v98,  v96,  v94,  v76,  v75,  v73,  v71,  v70,  v65,  v66,  v48,  v49,  v50,  v51,  v52,  v53);

  if (a9)
  {
    uint64_t v54 = v92;
  }

  else
  {

    uint64_t v54 = (void *)v88;
  }

  id v16 = v84;
  id v24 = v87;
  __int128 v55 = v80;
LABEL_23:

  return v55;
}

- (id)setJobInstanceKeyFromSetDescriptor:(id)a3 forLatestDownloaded:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
  if (!v9)
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager setJobInstanceKeyFromSetDescriptor:forLatestDownloaded:].cold.1();
    }
    goto LABEL_14;
  }

  if (!v4)
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v6 discoveredAtomicInstance]);

    if (v16)
    {
      id v11 = objc_alloc(&OBJC_CLASS___NSString);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
      uint64_t v13 = objc_claimAutoreleasedReturnValue([v6 discoveredAtomicInstance]);
      goto LABEL_9;
    }

    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager setJobInstanceKeyFromSetDescriptor:forLatestDownloaded:].cold.3();
    }
LABEL_14:

    uint64_t v18 = 0LL;
    goto LABEL_15;
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);

  if (!v10)
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager setJobInstanceKeyFromSetDescriptor:forLatestDownloaded:].cold.2();
    }
    goto LABEL_14;
  }

  id v11 = objc_alloc(&OBJC_CLASS___NSString);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
  uint64_t v13 = objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);
LABEL_9:
  id v17 = (void *)v13;
  uint64_t v18 = -[NSString initWithFormat:](v11, "initWithFormat:", @"%@_%@", v12, v13);

LABEL_15:
  return v18;
}

- (id)setJobInstanceKeyForSetInstance:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);

  if (v5)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 atomicInstance]);

    if (v6)
    {
      id v7 = objc_alloc(&OBJC_CLASS___NSString);
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v4 atomicInstance]);
      id v10 = -[NSString initWithFormat:](v7, "initWithFormat:", @"%@_%@", v8, v9);
    }

    else
    {
      id v10 = (NSString *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);
    }
  }

  else
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager setJobInstanceKeyForSetInstance:].cold.1();
    }

    id v10 = 0LL;
  }

  return v10;
}

- (void)securePersonalizeGraftLockSet:(id)a3 lockingSetDescriptor:(id)a4 forEventInfo:(id)a5 fallingBackToSetDescriptor:(id)a6
{
  id v10 = a3;
  id v11 = a5;
  id v12 = a6;
  id v13 = a4;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  BOOL v16 = v12 == 0LL;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472LL;
  v20[2] = __121__MADAutoAssetControlManager_securePersonalizeGraftLockSet_lockingSetDescriptor_forEventInfo_fallingBackToSetDescriptor___block_invoke;
  v20[3] = &unk_34F438;
  id v21 = v12;
  __int128 v22 = self;
  id v23 = v10;
  id v24 = v11;
  id v17 = v11;
  id v18 = v10;
  id v19 = v12;
  -[MADAutoAssetControlManager securePersonalizeGraftLockSet:lockingSetDescriptor:forEventInfo:replyingOnError:completion:]( self,  "securePersonalizeGraftLockSet:lockingSetDescriptor:forEventInfo:replyingOnError:completion:",  v18,  v13,  v17,  v16,  v20);
}

id __121__MADAutoAssetControlManager_securePersonalizeGraftLockSet_lockingSetDescriptor_forEventInfo_fallingBackToSetDescriptor___block_invoke( id result,  uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = *((void *)result + 4);
    if (v2) {
      return [*((id *)result + 5) securePersonalizeGraftLockSet:*((void *)result + 6) lockingSetDescriptor:v2 forEventInfo:*((void *)result + 7) replyingOnError:1 completion:&__block_literal_global_2319];
    }
  }

  return result;
}

- (void)securePersonalizeGraftLockSet:(id)a3 lockingSetDescriptor:(id)a4 forEventInfo:(id)a5 replyingOnError:(BOOL)a6 completion:(id)a7
{
  BOOL v77 = a6;
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  id v79 = a7;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  BOOL v16 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:securePersonalizeGraftLockSet",  v11);
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v13 setJobInformation]);
  uint64_t v18 = objc_claimAutoreleasedReturnValue([v17 clientInstance]);
  id v81 = v17;
  uint64_t v19 = objc_claimAutoreleasedReturnValue([v17 clientDesire]);
  id v20 = (void *)v19;
  if (v18)
  {
    if (v19) {
      goto LABEL_3;
    }
  }

  else
  {
    uint64_t v18 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetInstance:withEventInfo:]( self,  "clientRequestMessageSetInstance:withEventInfo:",  v16,  v13));
    if (v20) {
      goto LABEL_3;
    }
  }

  id v52 = (void *)objc_claimAutoreleasedReturnValue([v13 clientRequest]);
  id v20 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageSetDesire:]( self,  "clientRequestMessageSetDesire:",  v52));

LABEL_3:
  __int128 v82 = v20;
  unsigned int v87 = v16;
  __int128 v83 = (void *)v18;
  id v80 = v11;
  if (![v12 secureOperationInProgress])
  {
    uint64_t v42 = self;
    __int128 v76 = v13;
    __int128 v99 = 0u;
    __int128 v100 = 0u;
    __int128 v97 = 0u;
    __int128 v98 = 0u;
    uint64_t v43 = v12;
    id obj = (id)objc_claimAutoreleasedReturnValue([v12 latestDowloadedAtomicInstanceEntries]);
    id v44 = [obj countByEnumeratingWithState:&v97 objects:v101 count:16];
    if (v44)
    {
      id v45 = v44;
      int v46 = 0;
      int v47 = 0;
      uint64_t v48 = *(void *)v98;
      do
      {
        for (unint64_t i = 0LL; i != v45; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v98 != v48) {
            objc_enumerationMutation(obj);
          }
          uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v97 + 1) + 8 * (void)i) fullAssetSelector]);
          id v51 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( v42,  "locateDownloadedByFullSelector:",  v50));

          BOOL v16 = v87;
          if (+[MADAutoAssetSecure isPersonalizationRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationRequired:forDescriptor:",  v87,  v51))
          {
            [v51 setSecureOperationInProgress:1];
            [v43 setSecureOperationInProgress:1];
            ++v47;
          }

          if (+[MADAutoAssetSecure doesDescriptorInvolveGrafting:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "doesDescriptorInvolveGrafting:forDescriptor:",  v87,  v51))
          {
            [v51 setSecureOperationInProgress:1];
            [v43 setSecureOperationInProgress:1];
            ++v46;
          }
        }

        id v45 = [obj countByEnumeratingWithState:&v97 objects:v101 count:16];
      }

      while (v45);
    }

    else
    {
      int v46 = 0;
      int v47 = 0;
    }

    if (v47 > 0 || v46 >= 1)
    {
      uint64_t v65 = @"AUTO-PERSONALIZATION-GRAFT";
      if (v46 < 1) {
        uint64_t v65 = @"AUTO-PERSONALIZATION";
      }
      if (v47 >= 1) {
        id v66 = v65;
      }
      else {
        id v66 = @"AUTO-GRAFT";
      }
      unsigned __int8 v67 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoAssetDescriptorsForSet:](v42, "autoAssetDescriptorsForSet:", v43));
      v88[0] = _NSConcreteStackBlock;
      v88[1] = 3221225472LL;
      v88[2] = __121__MADAutoAssetControlManager_securePersonalizeGraftLockSet_lockingSetDescriptor_forEventInfo_replyingOnError_completion___block_invoke;
      v88[3] = &unk_34F488;
      v88[4] = v42;
      id v89 = v43;
      id v90 = (__CFString *)v66;
      id v12 = v43;
      char v91 = v87;
      uint64_t v40 = v83;
      id v92 = v83;
      id v41 = v20;
      id v93 = v20;
      id v13 = v76;
      id v94 = v76;
      BOOL v96 = v77;
      id v39 = (void (**)(void, void))v79;
      id v95 = v79;
      BOOL v16 = v87;
      +[MADAutoAssetSecure personalizeGraftSetDownloaded:forSetDescriptor:allowingNetwork:withAutoAssetDescriptors:completion:]( &OBJC_CLASS___MADAutoAssetSecure,  "personalizeGraftSetDownloaded:forSetDescriptor:allowingNetwork:withAutoAssetDescriptors:completion:",  v91,  v89,  1LL,  v67,  v88);

      goto LABEL_33;
    }

    id v53 = (void *)objc_claimAutoreleasedReturnValue([v76 clientReplyCompletion]);
    id obja = v42;
    uint64_t v40 = v83;
    id v12 = v43;
    uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager notifyLockerAsIndicatedBySetJob:withSetInstance:withSetDesire:forSetDescriptor:withClientReplyCompletion:]( v42,  "notifyLockerAsIndicatedBySetJob:withSetInstance:withSetDesire:forSetDescriptor:withClientReplyCompletion:",  v16,  v83,  v20,  v43,  v53));

    __int128 v55 = v80;
    if (v54)
    {
      id v13 = v76;
      id v39 = (void (**)(void, void))v79;
      if (!v77)
      {
LABEL_38:
        ((void (**)(void, void *))v39)[2](v39, v54);

        id v41 = v82;
        goto LABEL_39;
      }

      id objb = (id)objc_claimAutoreleasedReturnValue([v76 clientRequest]);
      __int128 v78 = (void *)objc_claimAutoreleasedReturnValue([objb clientRequestMessage]);
      __int128 v75 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v78));
      uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue([v76 clientRequest]);
      id v57 = (void *)objc_claimAutoreleasedReturnValue([v56 clientRequestMessage]);
      unsigned __int8 v58 = v54;
      __int16 v59 = (void *)objc_claimAutoreleasedReturnValue([v57 clientID]);
      uint64_t v60 = objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v75,  @"com.apple.MAAutoControl",  v59,  0LL,  v58));

      uint64_t v40 = v83;
      unsigned __int8 v61 = (void *)v60;

      BOOL v16 = v87;
      uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([v76 clientRequest]);
      uint64_t v63 = v42;
      id v64 = v58;
      -[MADAutoAssetControlManager issueResponseToClientRequest:issuingResponseMessage:withResponseError:]( v63,  "issueResponseToClientRequest:issuingResponseMessage:withResponseError:",  v62,  v61,  v58);
    }

    else
    {
      id v64 = 0LL;
      unsigned __int8 v68 = (void *)objc_claimAutoreleasedReturnValue([v76 clientRequest]);
      unsigned __int8 v69 = obja;
      unsigned __int8 v61 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildSetFoundResponseMessage:forClientRequest:withFoundSetDescriptor:withSubAtomicInstance:forLatestDownloaded:withInstance:withDesire:fromLocation:]( obja,  "buildSetFoundResponseMessage:forClientRequest:withFoundSetDescriptor:withSubAtomicInstance:forLa testDownloaded:withInstance:withDesire:fromLocation:",  @"[AUTO-PERSONALIZATION] lockAtomic(SUCCESS)",  v68,  v43,  0LL,  1LL,  v83,  v20,  v16));

      __int128 v70 = (void *)objc_claimAutoreleasedReturnValue([v83 atomicInstance]);
      id v13 = v76;
      if (!v70)
      {
        id v71 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
        __int128 v72 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
        __int128 v73 = v61;
        __int128 v74 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( obja,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v71,  v72));

        BOOL v16 = v87;
        -[MADAutoAssetControlManager setConfigurationAdoptLatestToVend:fromSetDescriptor:toSetConfiguration:]( obja,  "setConfigurationAdoptLatestToVend:fromSetDescriptor:toSetConfiguration:",  v87,  v12,  v74);

        unsigned __int8 v61 = v73;
        unsigned __int8 v69 = obja;
      }

      -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( v69,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v76,  v61,  0LL,  v16);
      id v39 = (void (**)(void, void))v79;
    }

    uint64_t v54 = v64;
    goto LABEL_38;
  }

  id v21 = objc_alloc(&OBJC_CLASS___NSString);
  __int128 v22 = v16;
  id v23 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
  id v24 = -[NSString initWithFormat:]( v21,  "initWithFormat:",  @"encountered set-descriptor with already in-progress secure-operation | setDescriptor:%@",  v23);
  id v25 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6532LL,  v22,  0LL,  v24));

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v26 diag]);
  uint64_t v28 = objc_alloc(&OBJC_CLASS___NSString);
  uint64_t v29 = objc_claimAutoreleasedReturnValue([v12 summary]);
  id v30 = v11;
  id v31 = self;
  uint64_t v32 = (void *)v29;
  unsigned __int8 v33 = -[NSString initWithFormat:]( v28,  "initWithFormat:",  @"{%@:securePersonalizeGraftLockSet} already in-progress secure-operation | setDescriptor:%@",  v30,  v29);
  [v27 trackAnomaly:@"AUTO-SECURE" forReason:v33 withResult:6532 withError:v25];

  if (v77)
  {
    id v34 = (void *)objc_claimAutoreleasedReturnValue([v83 clientDomainName]);
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSetIdentifier]);
    id v36 = (void *)objc_claimAutoreleasedReturnValue([v13 clientRequest]);
    id v37 = (void *)objc_claimAutoreleasedReturnValue([v36 responseMessage]);
    id v38 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager updateAutoAssetSetStatus:forClientDomain:forAssetSetIdentifier:forJobResponse:withResponseError:clearingDownloadProgressReason:withAssetSetStatus:]( v31,  "updateAutoAssetSetStatus:forClientDomain:forAssetSetIdentifier:forJobResponse:withResponseError:cl earingDownloadProgressReason:withAssetSetStatus:",  v87,  v34,  v35,  v37,  0LL,  @"reached [secure operation] lock phase",  0LL));

    -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( v31,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v13,  v38,  v25,  v87);
  }

  id v39 = (void (**)(void, void))v79;
  (*((void (**)(id, void *))v79 + 2))(v79, v25);

  BOOL v16 = v87;
  id v41 = v82;
  uint64_t v40 = v83;
LABEL_33:
  __int128 v55 = v80;
LABEL_39:
}

void __121__MADAutoAssetControlManager_securePersonalizeGraftLockSet_lockingSetDescriptor_forEventInfo_replyingOnError_completion___block_invoke( uint64_t a1,  uint64_t a2,  void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) autoControlManagerFSM]);
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = __121__MADAutoAssetControlManager_securePersonalizeGraftLockSet_lockingSetDescriptor_forEventInfo_replyingOnError_completion___block_invoke_2;
  v10[3] = &unk_34F460;
  id v11 = v4;
  id v7 = *(id *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 32);
  id v12 = v7;
  uint64_t v13 = v8;
  id v14 = *(id *)(a1 + 48);
  id v15 = *(id *)(a1 + 56);
  id v16 = *(id *)(a1 + 64);
  id v17 = *(id *)(a1 + 72);
  id v18 = *(id *)(a1 + 80);
  char v20 = *(_BYTE *)(a1 + 96);
  id v19 = *(id *)(a1 + 88);
  id v9 = v4;
  dispatch_async(v6, v10);
}

void __121__MADAutoAssetControlManager_securePersonalizeGraftLockSet_lockingSetDescriptor_forEventInfo_replyingOnError_completion___block_invoke_2( uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  [*(id *)(a1 + 40) setSecureOperationInProgress:0];
  __int128 v67 = 0u;
  __int128 v68 = 0u;
  __int128 v65 = 0u;
  __int128 v66 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) latestDowloadedAtomicInstanceEntries]);
  id v3 = [obj countByEnumeratingWithState:&v65 objects:v77 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v66;
    uint64_t v63 = *(void *)v66;
    do
    {
      for (unint64_t i = 0LL; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v66 != v5) {
          objc_enumerationMutation(obj);
        }
        id v7 = *(void **)(a1 + 48);
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v65 + 1) + 8 * (void)i) fullAssetSelector]);
        id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 locateDownloadedByFullSelector:v8]);

        [v9 setSecureOperationInProgress:0];
        if ([v9 secureOperationEliminating])
        {
          id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) logger]);
          id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
          {
            id v12 = v2;
            uint64_t v13 = *(void *)(a1 + 56);
            uint64_t v14 = *(void *)(a1 + 64);
            id v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) summary]);
            id v16 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
            *(_DWORD *)int buf = 138544130;
            uint64_t v70 = v13;
            id v2 = v12;
            __int16 v71 = 2114;
            uint64_t v72 = v14;
            uint64_t v5 = v63;
            __int16 v73 = 2114;
            __int128 v74 = v15;
            __int16 v75 = 2114;
            __int128 v76 = v16;
            _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][%{public}@][SET-CONTROL][ELIMINATE] {%{public}@} auto-asset of set-descriptor eliminate while per forming secure operation(s) | setDescriptor:%{public}@ | nextDownloadedDescriptor:%{public}@",  buf,  0x2Au);
          }

          [*(id *)(a1 + 48) eliminateUngraftDescriptor:*(void *)(a1 + 64) forAutoAssetDescriptor:v9 failingClientRequestForEventInfo:0];
          if (!v2)
          {
            uint64_t v17 = *(void *)(a1 + 64);
            id v18 = objc_alloc(&OBJC_CLASS___NSString);
            id v19 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
            char v20 = -[NSString initWithFormat:]( v18,  "initWithFormat:",  @"encountered set-descriptor with auto-asset being eliminated | nextDownloadedDescriptor:%@",  v19);
            id v2 = (id)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6114LL,  v17,  0LL,  v20));
          }
        }
      }

      id v4 = [obj countByEnumeratingWithState:&v65 objects:v77 count:16];
    }

    while (v4);
  }

  id v21 = *(void **)(a1 + 48);
  uint64_t v22 = *(void *)(a1 + 64);
  id v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 72) clientDomainName]);
  id v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 72) assetSetIdentifier]);
  LODWORD(v21) = [v21 isSetIdentifierBeingEliminated:v22 forClientDomainName:v23 ofSetIdentifier:v24];

  if ((_DWORD)v21)
  {
    id v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) logger]);
    uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      id v27 = v2;
      uint64_t v28 = *(void *)(a1 + 56);
      uint64_t v29 = *(void *)(a1 + 64);
      id v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) summary]);
      *(_DWORD *)int buf = 138543874;
      uint64_t v70 = v28;
      id v2 = v27;
      __int16 v71 = 2114;
      uint64_t v72 = v29;
      __int16 v73 = 2114;
      __int128 v74 = v30;
      _os_log_impl( &dword_0,  v26,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][%{public}@][SET-CONTROL][ELIMINATE] {%{public}@} set-identifier eliminate while performing secure opera tion(s) | nextDownloadedDescriptor:%{public}@",  buf,  0x20u);
    }

    [*(id *)(a1 + 48) eliminateUngraftSetDescriptor:*(void *)(a1 + 40) failingClientRequestForEventInfo:0];
    if (v2) {
      goto LABEL_20;
    }
    uint64_t v31 = *(void *)(a1 + 64);
    uint64_t v32 = objc_alloc(&OBJC_CLASS___NSString);
    unsigned __int8 v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) summary]);
    id v34 = -[NSString initWithFormat:]( v32,  "initWithFormat:",  @"encountered set-descriptor being eliminated | setDescriptor:%@",  v33);
    id v2 = (id)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6114LL,  v31,  0LL,  v34));
  }

  if (!v2)
  {
    uint64_t v35 = *(void *)(a1 + 64);
    uint64_t v36 = *(void *)(a1 + 72);
    uint64_t v38 = *(void *)(a1 + 40);
    id v37 = *(void **)(a1 + 48);
    uint64_t v39 = *(void *)(a1 + 80);
    uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 88) clientReplyCompletion]);
    id v2 = (id)objc_claimAutoreleasedReturnValue( [v37 notifyLockerAsIndicatedBySetJob:v35 withSetInstance:v36 withSetDesire:v39 forSetDescriptor:v38 withClientReplyCompletion:v40]);

    if (!v2)
    {
      uint64_t v56 = *(void **)(a1 + 48);
      id v57 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 88) clientRequest]);
      uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue( [v56 buildSetFoundResponseMessage:@"[AUTO-PERSONALIZATION] lockAtomic(SUCCESS)" forClientRequest:v57 withFoundSetDescriptor:*(void *)(a1 + 40) withSubAtomicInstance:0 forLa testDownloaded:1 withInstance:*(void *)(a1 + 72) withDesire:*(void *)(a1 + 80) fromLocation:*(void *)(a1 + 64)]);

      unsigned __int8 v58 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 72) atomicInstance]);
      if (!v58)
      {
        __int16 v59 = *(void **)(a1 + 48);
        uint64_t v60 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientDomainName]);
        unsigned __int8 v61 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) assetSetIdentifier]);
        uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([v59 locateSetConfigurationByClientDomain:v60 forAssetSetIdentifier:v61]);

        [*(id *)(a1 + 48) setConfigurationAdoptLatestToVend:*(void *)(a1 + 64) fromSetDescriptor:*(void *)(a1 + 40) toSetConfiguration:v62];
      }

      id v2 = 0LL;
      char v41 = 1;
      if (v48) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
  }

- (void)secureCheckProcessLifeLocks:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v25 = v4;
  id v30 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:secureCheckProcessLifeLocks",  v4);
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  __int128 v42 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue( +[MADAutoAssetSecure orphanedProcessLifeLocks:]( &OBJC_CLASS___MADAutoAssetSecure,  "orphanedProcessLifeLocks:"));
  id v28 = [obj countByEnumeratingWithState:&v39 objects:v52 count:16];
  id v7 = 0LL;
  if (v28)
  {
    uint64_t v27 = *(void *)v40;
    do
    {
      uint64_t v8 = 0LL;
      do
      {
        if (*(void *)v40 != v27) {
          objc_enumerationMutation(obj);
        }
        uint64_t v29 = v8;
        id v9 = *(void **)(*((void *)&v39 + 1) + 8 * v8);
        __int128 v35 = 0u;
        __int128 v36 = 0u;
        __int128 v37 = 0u;
        __int128 v38 = 0u;
        id v31 = (id)objc_claimAutoreleasedReturnValue([v9 lockedAssetSelectors]);
        id v33 = [v31 countByEnumeratingWithState:&v35 objects:v51 count:16];
        if (v33)
        {
          uint64_t v32 = *(void *)v36;
          do
          {
            id v10 = 0LL;
            id v11 = v7;
            do
            {
              if (*(void *)v36 != v32) {
                objc_enumerationMutation(v31);
              }
              id v12 = *(void **)(*((void *)&v35 + 1) + 8LL * (void)v10);
              uint64_t v13 = objc_autoreleasePoolPush();
              uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v9 clientProcessName]);
              id v15 = [v9 clientProcessID];
              id v34 = v11;
              unsigned int v16 = +[MADAutoAssetLocker endedAllPreviousLocksByClientProcessName:withClientProcessID:forAssetSelector:endError:]( &OBJC_CLASS___MADAutoAssetLocker,  "endedAllPreviousLocksByClientProcessName:withClientProcessID:forAssetSelector:endError:",  v14,  v15,  v12,  &v34);
              id v7 = v34;

              uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

              if (v16)
              {
                if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
                {
                  id v19 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
                  char v20 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
                  id v21 = (void *)objc_claimAutoreleasedReturnValue([v7 checkedDescription]);
                  *(_DWORD *)int buf = 138544130;
                  id v44 = v30;
                  __int16 v45 = 2114;
                  int v46 = v19;
                  __int16 v47 = 2114;
                  uint64_t v48 = v20;
                  __int16 v49 = 2114;
                  uint64_t v50 = v21;
                  _os_log_error_impl( &dword_0,  v18,  OS_LOG_TYPE_ERROR,  "\n [AUTO-MANAGER-SECURE]{%{public}@} ERROR | ending all PROCESS-LIFE locks for asset-selector | nextOrp hanedLifeLock%{public}@ | nextOrphanedSelector:%{public}@ | error:%{public}@",  buf,  0x2Au);
                }
              }

              else if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
                id v23 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
                *(_DWORD *)int buf = 138543874;
                id v44 = v30;
                __int16 v45 = 2114;
                int v46 = v22;
                __int16 v47 = 2114;
                uint64_t v48 = v23;
                _os_log_impl( &dword_0,  v18,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-MANAGER-SECURE]{%{public}@} SUCCESS | ended all PROCESS-LIFE locks for asset-selector | nextOrph anedLifeLock%{public}@ | nextOrphanedSelector:%{public}@",  buf,  0x20u);
              }

              id v24 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v12));
              if (v24) {
                -[MADAutoAssetControlManager secureCheckUngraft:forDescriptorNoLongerLocked:]( self,  "secureCheckUngraft:forDescriptorNoLongerLocked:",  @"secureCheckProcessLifeLocks",  v24);
              }

              objc_autoreleasePoolPop(v13);
              id v10 = (char *)v10 + 1;
              id v11 = v7;
            }

            while (v33 != v10);
            id v33 = [v31 countByEnumeratingWithState:&v35 objects:v51 count:16];
          }

          while (v33);
        }

        uint64_t v8 = v29 + 1;
      }

      while ((id)(v29 + 1) != v28);
      id v28 = [obj countByEnumeratingWithState:&v39 objects:v52 count:16];
    }

    while (v28);
  }
}

- (void)secureStartupEstablishOperationSequence:(id)a3 forRequiringPersonalization:(id)a4 forRequiringGrafting:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v46 = a5;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  __int16 v45 = v8;
  uint64_t v48 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:secureStartupEstablishOperationSequence",  v8);
  id v12 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  -[MADAutoAssetControlManager setDescriptorsRequiringPersonalization:]( self,  "setDescriptorsRequiringPersonalization:",  v12);

  uint64_t v13 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  -[MADAutoAssetControlManager setDescriptorsRequiringGrafting:](self, "setDescriptorsRequiringGrafting:", v13);

  __int128 v55 = 0u;
  __int128 v56 = 0u;
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  id v14 = v9;
  id v15 = [v14 countByEnumeratingWithState:&v53 objects:v64 count:16];
  __int16 v47 = v14;
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = 0LL;
    uint64_t v18 = *(void *)v54;
    do
    {
      for (unint64_t i = 0LL; i != v16; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v54 != v18) {
          objc_enumerationMutation(v14);
        }
        uint64_t v20 = *(void *)(*((void *)&v53 + 1) + 8LL * (void)i);
        id v21 = [v14 safeObjectForKey:v20 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
        if (v22)
        {
          v17 += -[MADAutoAssetControlManager addToTryPersonalize:forDescriptor:]( self,  "addToTryPersonalize:forDescriptor:",  v48,  v22);
        }

        else
        {
          id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
          id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 diag]);
          id v25 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} unable to load secure descriptor to be personalized | descriptorKey:%@",  v48,  v20);
          [v24 trackAnomaly:@"AUTO-CONTROL" forReason:v25 withResult:6111 withError:0];

          id v14 = v47;
        }
      }

      id v16 = [v14 countByEnumeratingWithState:&v53 objects:v64 count:16];
    }

    while (v16);
  }

  else
  {
    uint64_t v17 = 0LL;
  }

  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int128 v49 = 0u;
  __int128 v50 = 0u;
  id v26 = v46;
  id v27 = [v26 countByEnumeratingWithState:&v49 objects:v63 count:16];
  if (v27)
  {
    id v28 = v27;
    uint64_t v29 = *(void *)v50;
    do
    {
      for (j = 0LL; j != v28; j = (char *)j + 1)
      {
        if (*(void *)v50 != v29) {
          objc_enumerationMutation(v26);
        }
        uint64_t v31 = *(void *)(*((void *)&v49 + 1) + 8LL * (void)j);
        id v32 = [v26 safeObjectForKey:v31 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        id v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
        if (v33)
        {
          ++v17;
          id v34 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager descriptorsRequiringGrafting]( self,  "descriptorsRequiringGrafting"));
          [v34 addObject:v33];

          __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          __int128 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

          if (!os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_23;
          }
          __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v33 summary]);
          *(_DWORD *)int buf = 138543874;
          unsigned __int8 v58 = v48;
          __int16 v59 = 2048;
          id v60 = v17;
          __int16 v61 = 2114;
          id v62 = v37;
          _os_log_impl( &dword_0,  v36,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-SECURE][AUTO-GRAFT][STARTUP] {%{public}@} heal operation #%ld (graft|mount) | secureDescriptor:%{public}@",  buf,  0x20u);
        }

        else
        {
          __int128 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
          __int128 v37 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s diag](v36, "diag"));
          __int128 v38 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} unable to load secure descriptor to be grafted | descriptorKey:%@",  v48,  v31);
          [v37 trackAnomaly:@"AUTO-CONTROL" forReason:v38 withResult:6111 withError:0];
        }

LABEL_23:
      }

      id v28 = [v26 countByEnumeratingWithState:&v49 objects:v63 count:16];
    }

    while (v28);
  }

  __int128 v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  __int128 v40 = (os_log_s *)objc_claimAutoreleasedReturnValue([v39 oslog]);

  if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v41 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager descriptorsRequiringPersonalization]( self,  "descriptorsRequiringPersonalization"));
    id v42 = [v41 count];
    uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager descriptorsRequiringGrafting](self, "descriptorsRequiringGrafting"));
    id v44 = [v43 count];
    *(_DWORD *)int buf = 138543874;
    unsigned __int8 v58 = v48;
    __int16 v59 = 2048;
    id v60 = v42;
    __int16 v61 = 2048;
    id v62 = v44;
    _os_log_impl( &dword_0,  v40,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-SECURE][AUTO-PERSONALIZATION-GRAFT][STARTUP] {%{public}@} ready to begin secure operations | requiringPerson alized:%ld | requiringGrafting:%ld",  buf,  0x20u);
  }
}

- (BOOL)addToTryPersonalize:(id)a3 forDescriptor:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v41 = v6;
  __int128 v39 = self;
  __int128 v40 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:addToTryPersonalize",  v6);
  __int128 v43 = 0u;
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  __int128 v46 = 0u;
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager descriptorsRequiringPersonalization]( self,  "descriptorsRequiringPersonalization"));
  id v11 = -[os_log_s countByEnumeratingWithState:objects:count:]( v10,  "countByEnumeratingWithState:objects:count:",  &v43,  v53,  16LL);
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v44;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      id v15 = 0LL;
      id v42 = v12;
      do
      {
        if (*(void *)v44 != v13) {
          objc_enumerationMutation(v10);
        }
        id v16 = *(void **)(*((void *)&v43 + 1) + 8LL * (void)v15);
        uint64_t v17 = p_ivars[155];
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v7 assetType]);
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v16 assetType]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v17, "stringIsEqual:to:", v18, v19) & 1) != 0)
        {
          uint64_t v20 = p_ivars[155];
          uint64_t v21 = objc_claimAutoreleasedReturnValue([v7 assetSpecifier]);
          uint64_t v22 = v13;
          id v23 = p_ivars;
          id v24 = v7;
          id v25 = v10;
          id v26 = (void *)v21;
          id v27 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSpecifier]);
          LOBYTE(v20) = -[__objc2_ivar_list stringIsEqual:to:](v20, "stringIsEqual:to:", v26, v27);

          id v10 = v25;
          id v7 = v24;
          p_ivars = v23;
          uint64_t v13 = v22;
          id v12 = v42;

          if ((v20 & 1) != 0)
          {
            BOOL v37 = 0;
            goto LABEL_15;
          }
        }

        else
        {
        }

        id v15 = (char *)v15 + 1;
      }

      while (v12 != v15);
      id v12 = -[os_log_s countByEnumeratingWithState:objects:count:]( v10,  "countByEnumeratingWithState:objects:count:",  &v43,  v53,  16LL);
    }

    while (v12);
  }

  id v28 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager descriptorsRequiringPersonalization]( v39,  "descriptorsRequiringPersonalization"));
  [v28 addObject:v7];

  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v39, "logger"));
  id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

  id v10 = v30;
  if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v31 = v30;
    id v32 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager descriptorsRequiringPersonalization]( v39,  "descriptorsRequiringPersonalization"));
    id v33 = [v32 count];
    id v34 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
    *(_DWORD *)int buf = 138543874;
    __int128 v35 = v40;
    uint64_t v48 = v40;
    __int16 v49 = 2048;
    id v50 = v33;
    __int16 v51 = 2114;
    __int128 v52 = v34;
    _os_log_impl( &dword_0,  v31,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-SECURE][AUTO-PERSONALIZATION][STARTUP] {%{public}@} will attempt personalization count:%ld | secureDescriptor:%{public}@",  buf,  0x20u);

    id v10 = v31;
    BOOL v37 = 1;
    __int128 v36 = v41;
  }

  else
  {
    BOOL v37 = 1;
LABEL_15:
    __int128 v35 = v40;
    __int128 v36 = v41;
  }

  return v37;
}

- (void)addActiveJobs:(id)a3 basedOnControl:(id)a4
{
  id v29 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](self, "currentJobsBySelector"));
  id v10 = [v9 countByEnumeratingWithState:&v31 objects:v35 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v32;
    id v27 = v9;
    id v28 = v6;
    uint64_t v26 = *(void *)v32;
    do
    {
      for (unint64_t i = 0LL; i != v11; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v32 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void *)(*((void *)&v31 + 1) + 8LL * (void)i);
        id v15 = objc_autoreleasePoolPush();
        id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](self, "currentJobsBySelector"));
        id v17 = [v16 safeObjectForKey:v14 ofClass:objc_opt_class(MADAutoAssetJob)];
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

        if (v18
          && -[MADAutoAssetControlManager jobToBeIncluded:basedOnControl:]( self,  "jobToBeIncluded:basedOnControl:",  v18,  v6))
        {
          id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 summaryOfJob]);
          uint64_t v20 = v19;
          if (v19)
          {
            [v19 setAssetRepresentation:300];
            [v29 addObject:v20];
          }

          else
          {
            id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
            uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v30 diag]);
            uint64_t v22 = objc_alloc(&OBJC_CLASS___NSString);
            id v23 = (void *)objc_claimAutoreleasedReturnValue([v18 summary]);
            id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
            id v25 = -[NSString initWithFormat:]( v22,  "initWithFormat:",  @"{addActiveJobs} unable to form job summaryEntry | job:%@ | %@",  v23,  v24);
            [v21 trackAnomaly:@"AUTO-CONTROL" forReason:v25 withResult:6111 withError:0];

            id v6 = v28;
            id v9 = v27;

            uint64_t v12 = v26;
          }
        }

        objc_autoreleasePoolPop(v15);
      }

      id v11 = [v9 countByEnumeratingWithState:&v31 objects:v35 count:16];
    }

    while (v11);
  }
}

- (void)addSuccessfullyDownloadedJobs:(id)a3 basedOnControl:(id)a4
{
  id v51 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v55 = objc_alloc_init(&OBJC_CLASS___MAAutoAssetNotifications);
  -[MAAutoAssetNotifications setContentAvailableForUse:](v55, "setContentAvailableForUse:", 1LL);
  id v57 = self;
  __int128 v65 = 0u;
  __int128 v66 = 0u;
  __int128 v67 = 0u;
  __int128 v68 = 0u;
  id v9 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewAllBySelector]( self,  "locateDownloadedNewAllBySelector"));
  id v10 = [v9 countByEnumeratingWithState:&v65 objects:v69 count:16];
  if (v10)
  {
    id v11 = v10;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v13 = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v14 = *(void *)v66;
    id v53 = v9;
    id v54 = v6;
    uint64_t v52 = *(void *)v66;
    do
    {
      id v15 = 0LL;
      id v56 = v11;
      do
      {
        if (*(void *)v66 != v14) {
          objc_enumerationMutation(v9);
        }
        uint64_t v16 = *(void *)(*((void *)&v65 + 1) + 8LL * (void)v15);
        id v17 = objc_autoreleasePoolPush();
        id v18 = [v9 safeObjectForKey:v16 ofClass:objc_opt_class(p_ivars[223])];
        id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
        if (v19
          && -[__objc2_ivar_list descriptorToBeIncluded:basedOnControl:]( v13[174],  "descriptorToBeIncluded:basedOnControl:",  v19,  v6))
        {
          uint64_t v63 = v17;
          uint64_t v20 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
          uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v19 assetType]);
          uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v19 assetSpecifier]);
          id v23 = (void *)objc_claimAutoreleasedReturnValue([v19 assetVersion]);
          id v64 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v20,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v21,  v22,  v23);

          id v62 = (void *)objc_claimAutoreleasedReturnValue([v19 metadata]);
          unsigned int v61 = [v19 neverBeenLocked];
          unsigned int v60 = [v19 downloadUserInitiated];
          id v59 = [v19 downloadedNetworkBytes];
          id v58 = [v19 downloadedFilesystemBytes];
          unsigned __int8 v24 = [v19 isPatch];
          id v25 = (void *)objc_claimAutoreleasedReturnValue([v19 patchedFromBaseSelector]);
          id v26 = [v19 patchedFromBaseFilesystemBytes];
          unsigned __int8 v27 = [v19 patchingAttempted];
          LOBYTE(v23) = [v19 stagedPriorToAvailable];
          id v28 = (void *)objc_claimAutoreleasedReturnValue([v19 stagedFromOSVersion]);
          id v29 = (void *)objc_claimAutoreleasedReturnValue([v19 stagedFromBuildVersion]);
          id v30 = (void *)objc_claimAutoreleasedReturnValue([v19 patchingAttemptError]);
          LOBYTE(v50) = 1;
          BYTE1(v49) = (_BYTE)v23;
          LOBYTE(v49) = v27;
          LOBYTE(v48) = v24;
          id v31 = -[MADAutoAssetControlManager newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( v57,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:w ithNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownl oadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBy tes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersio n:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v64,  v55,  v62,  0LL,  v61,  v60,  0LL,  v59,  v58,  v48,  v25,  v26,  v49,  v28,  v29,  v50,  0LL,  v30,  0LL);

          id v32 = [v31 copy];
          __int128 v33 = objc_alloc(&OBJC_CLASS___MAAutoAssetSummary);
          char v34 = objc_opt_respondsToSelector( v33,  "initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:with ScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMon itorCount:withMaximumClientCount:withTotalClientCount:withIsSecureMobileAsset:withPersonalizationStatu s:withPrePersonalizationStatus:withGraftStatus:withGraftPoint:withStageGroupType:withTargetOS:");

          if ((v34 & 1) != 0)
          {
            unsigned __int8 v35 = +[MADAutoAssetSecure isSecureAsset:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isSecureAsset:forDescriptor:",  @"{addSuccessfullyDownloadedJobs}",  v19);
            unsigned __int8 v36 = +[MADAutoAssetSecure isPersonalizationRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationRequired:forDescriptor:",  @"{addSuccessfullyDownloadedJobs}",  v19);
            unsigned __int8 v37 = +[MADAutoAssetSecure isPrePersonalized:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPrePersonalized:forDescriptor:",  @"{addSuccessfullyDownloadedJobs}",  v19);
            unsigned int v38 = +[MADAutoAssetSecure isGraftedOrMounted:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isGraftedOrMounted:forDescriptor:",  @"{addSuccessfullyDownloadedJobs}",  v19);
            char v39 = v38;
            if (v38) {
              __int128 v40 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetSecure getGraftPath:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "getGraftPath:forDescriptor:",  @"{addSuccessfullyDownloadedJobs}",  v19));
            }
            else {
              __int128 v40 = 0LL;
            }
            BYTE3(v49) = v39;
            BYTE2(v49) = v37;
            BYTE1(v49) = v36 ^ 1;
            LOBYTE(v49) = v35;
            id v41 = v64;
            id v42 = -[MAAutoAssetSummary initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:withScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMonitorCount:withMaximumClientCount:withTotalClientCount:withIsSecureMobileAsset:withPersonalizationStatus:withPrePersonalizationStatus:withGraftStatus:withGraftPoint:withStageGroupType:withTargetOS:]( [MAAutoAssetSummary alloc],  "initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:wi thScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiv eMonitorCount:withMaximumClientCount:withTotalClientCount:withIsSecureMobileAsset:withPersonalizatio nStatus:withPrePersonalizationStatus:withGraftStatus:withGraftPoint:withStageGroupType:withTargetOS:",  v64,  500,  [v19 isPatch],  0,  v32,  0,  0,  0,  0,  0,  0,  0,  v49,  v40,  0,  0);
          }

          else
          {
            id v41 = v64;
            id v42 = -[MAAutoAssetSummary initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:withScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMonitorCount:withMaximumClientCount:withTotalClientCount:]( [MAAutoAssetSummary alloc],  "initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:wi thScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiv eMonitorCount:withMaximumClientCount:withTotalClientCount:",  v64,  500,  [v19 isPatch],  objc_msgSend(v19, "isPatch"),  v32,  0,  0,  0,  0,  0,  0,  0);
          }

          id v6 = v54;
          if (v42)
          {
            [v51 addObject:v42];
          }

          else
          {
            __int128 v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v57, "autoControlManagerFSM"));
            __int128 v44 = (void *)objc_claimAutoreleasedReturnValue([v43 diag]);
            __int128 v45 = objc_alloc(&OBJC_CLASS___NSString);
            __int128 v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v57, "_updateLatestSummary"));
            __int16 v47 = -[NSString initWithFormat:]( v45,  "initWithFormat:",  @"{addSuccessfullyDownloadedJobs} unable to form job jobSummary | %@",  v46);
            [v44 trackAnomaly:@"AUTO-CONTROL" forReason:v47 withResult:6111 withError:0];

            id v41 = v64;
          }

          uint64_t v14 = v52;
          id v9 = v53;
          p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
          id v11 = v56;
          uint64_t v13 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
          id v17 = v63;
        }

        objc_autoreleasePoolPop(v17);
        id v15 = (char *)v15 + 1;
      }

      while (v11 != v15);
      id v11 = [v9 countByEnumeratingWithState:&v65 objects:v69 count:16];
    }

    while (v11);
  }
}

- (id)_updateSandboxExtensionForResponse:(id)a3 responseError:(id)a4 clientRequest:(id)a5 alreadyOnStateQueue:(BOOL)a6
{
  BOOL v6 = a6;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = v10;
  if (!__isPlatformVersionAtLeast(3, 17, 4, 0))
  {
    id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 oslog]);

    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      id v29 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      if (v13) {
        id v30 = (__CFString *)objc_claimAutoreleasedReturnValue([v13 summary]);
      }
      else {
        id v30 = @"N";
      }
      uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetClientRequest responseErrorSummary:]( &OBJC_CLASS___MADAutoAssetClientRequest,  "responseErrorSummary:",  v11));
      uint64_t v49 = (__CFString *)objc_claimAutoreleasedReturnValue([v12 summary]);
      *(_DWORD *)int buf = 138544130;
      *(void *)&uint8_t buf[4] = v29;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v30;
      *(_WORD *)&buf[22] = 2114;
      *(void *)&buf[24] = v48;
      __int16 v67 = 2114;
      __int128 v68 = v49;
      uint64_t v50 = "[%{public}@] {_updateSandboxExtensionForResponse} MADAutoAssetAuthorizationPolicy not available on this base"
            " build | responseMessage:%{public}@, responseError:%{public}@, clientRequest:%{public}@";
      goto LABEL_28;
    }

    goto LABEL_31;
  }

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v12 clientRequestMessage]);
  char v15 = objc_opt_respondsToSelector(v14, "clientConnectionAuditToken");

  if ((v15 & 1) == 0)
  {
    id v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 oslog]);

    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      id v29 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      if (v13) {
        id v30 = (__CFString *)objc_claimAutoreleasedReturnValue([v13 summary]);
      }
      else {
        id v30 = @"N";
      }
      uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetClientRequest responseErrorSummary:]( &OBJC_CLASS___MADAutoAssetClientRequest,  "responseErrorSummary:",  v11));
      uint64_t v49 = (__CFString *)objc_claimAutoreleasedReturnValue([v12 summary]);
      *(_DWORD *)int buf = 138544130;
      *(void *)&uint8_t buf[4] = v29;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v30;
      *(_WORD *)&buf[22] = 2114;
      *(void *)&buf[24] = v48;
      __int16 v67 = 2114;
      __int128 v68 = v49;
      uint64_t v50 = "[%{public}@] {_updateSandboxExtensionForResponse} MADAutoAssetAuthorizationPolicy not applicable on this bas"
            "e build (no clientConnectionAuditToken) | responseMessage:%{public}@, responseError:%{public}@, clientRequest:%{public}@";
      goto LABEL_28;
    }

- (void)issueBuiltResponseForEventInfo:(id)a3 issuingResponseMessage:(id)a4 withResponseError:(id)a5 fromLocation:(id)a6
{
  id v10 = a3;
  uint64_t v11 = (uint64_t)a4;
  uint64_t v12 = (uint64_t)a5;
  id v13 = a6;
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  char v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  uint64_t v16 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:issueBuiltResponseForEventInfo",  v13);
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 clientReplyCompletion]);

  if (v18)
  {
    if (!v11 && v12)
    {
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 clientRequestMessage]);
      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v20));
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
      id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 clientID]);
      uint64_t v11 = objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v21,  @"com.apple.MAAutoControl",  v23,  0LL,  v12));

LABEL_22:
      id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
      unsigned __int8 v35 = (void *)objc_claimAutoreleasedReturnValue([v34 totalClientRepliesFailure]);
      id v36 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
      -[MADAutoAssetControlManager _statsIncrement:forClientRequest:]( self,  "_statsIncrement:forClientRequest:",  v35,  v36);
LABEL_24:

      unsigned __int8 v37 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
      unsigned int v38 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue([v37 clientReplyCompletion]);
      v38[2](v38, v11, v12);

      char v39 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
      [v39 setClientReplyCompletion:0];

      id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
      -[MADAutoAssetControlManager removeClientRequest:fromLocation:]( self,  "removeClientRequest:fromLocation:",  v25,  v16);
      goto LABEL_25;
    }

    if (v11 | v12)
    {
      if (!v11 || v12)
      {
        if (v12) {
          goto LABEL_22;
        }
      }

      else
      {
        id v31 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);

        if (v31)
        {
          id v32 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
          uint64_t v33 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _updateSandboxExtensionForResponse:responseError:clientRequest:alreadyOnStateQueue:]( self,  "_updateSandboxExtensionForResponse:responseError:clientRequest:alreadyOnStateQueue:",  v11,  0LL,  v32,  1LL));

          uint64_t v11 = v33;
        }
      }
    }

    else
    {
      uint64_t v12 = objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6111LL,  v16,  0LL,  @"about to issue successful response when no response message"));
      uint64_t v11 = 0LL;
      if (v12) {
        goto LABEL_22;
      }
    }

    id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
    unsigned __int8 v35 = (void *)objc_claimAutoreleasedReturnValue([v34 totalClientRepliesSuccess]);
    id v36 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
    -[MADAutoAssetControlManager _statsIncrement:forClientRequest:](self, "_statsIncrement:forClientRequest:", v35, v36);
    uint64_t v12 = 0LL;
    goto LABEL_24;
  }

  unsigned __int8 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

  if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    id v26 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
    unsigned __int8 v27 = (void *)objc_claimAutoreleasedReturnValue([v26 clientReplyCompletion]);
    id v28 = @"N";
    if (v27) {
      id v29 = @"Y";
    }
    else {
      id v29 = @"N";
    }
    if (v11) {
      id v28 = (__CFString *)objc_claimAutoreleasedReturnValue([(id)v11 summary]);
    }
    id v30 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetClientRequest responseErrorSummary:]( &OBJC_CLASS___MADAutoAssetClientRequest,  "responseErrorSummary:",  v12));
    *(_DWORD *)int buf = 138544386;
    id v42 = v40;
    __int16 v43 = 2114;
    id v44 = v16;
    __int16 v45 = 2114;
    __int128 v46 = v29;
    __int16 v47 = 2114;
    uint64_t v48 = v28;
    __int16 v49 = 2114;
    uint64_t v50 = v30;
    _os_log_impl( &dword_0,  v25,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@} no response issued (already completed or scheduled event) | clientReplyCompletion:%{publ ic}@, responseMessage:%{public}@, responseError:%{public}@",  buf,  0x34u);
    if (v11) {
  }
    }

- (void)issueResponseToFailedAutoAssetLockRequest:(id)a3 forEventInfo:(id)a4 withResponseError:(id)a5 forAttemptedDescriptor:(id)a6
{
  id v48 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = a6;
  __int16 v49 = self;
  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 extendedStateQueue]);
  dispatch_assert_queue_V2(v14);

  char v15 = (void *)objc_claimAutoreleasedReturnValue([v10 jobInformation]);
  uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v15 fullAssetSelector]);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v10 originalSelector]);
  if (v16) {
    uint64_t v17 = objc_claimAutoreleasedReturnValue([v10 originalSelector]);
  }
  else {
    uint64_t v17 = objc_claimAutoreleasedReturnValue([v10 autoAssetSelector]);
  }
  id v18 = (id)v17;

  uint64_t v19 = objc_claimAutoreleasedReturnValue([v15 clientInstance]);
  if (v12 && !v18)
  {
    uint64_t v20 = v19;
    uint64_t v21 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v12 assetType]);
    id v23 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSpecifier]);
    unsigned __int8 v24 = (void *)objc_claimAutoreleasedReturnValue([v12 assetVersion]);
    id v25 = v21;
    uint64_t v19 = v20;
    id v18 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v25,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v22,  v23,  v24);
  }

  if (!v18) {
    id v18 = v50;
  }
  __int16 v47 = v15;
  id v26 = v49;
  if (!v19) {
    uint64_t v19 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageInstance:](v49, "clientRequestMessageInstance:", v10));
  }
  id v51 = (void *)v19;
  unsigned __int8 v27 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetUUID]);
  id v28 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
  id v29 = (void *)objc_claimAutoreleasedReturnValue([v28 responseMessage]);
  id v30 = (SUCoreConnectMessage *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager updateAutoAssetStatus:forActiveJobUUID:forJobResponse:withResponseError:]( v49,  "updateAutoAssetStatus:forActiveJobUUID:forJobResponse:withResponseError:",  v18,  v27,  v29,  v11));

  if (!v30)
  {
    id v46 = v11;
    id v31 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    __int16 v45 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
    id v32 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
    uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v32 clientRequestMessage]);
    id v34 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v33));
    unsigned __int8 v35 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
    id v36 = (void *)objc_claimAutoreleasedReturnValue([v35 clientID]);
    id v30 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v45,  "initWithType:messageName:clientID:version:message:",  2LL,  v34,  v36,  0LL,  v31);

    id v26 = v49;
    if (!v30)
    {
      unsigned __int8 v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v49, "logger"));
      unsigned int v38 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 oslog]);

      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager issueResponseToFailedAutoAssetLockRequest:forEventInfo:withResponseError:forAttemptedDescriptor:].cold.1();
      }
    }

    id v11 = v46;
  }

  char v39 = v12;
  __int128 v40 = v11;
  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( v26,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v10,  v30,  v11,  v48);
  id v41 = (void *)objc_claimAutoreleasedReturnValue([v51 autoAssetClientName]);
  if (v41) {
    uint64_t v42 = objc_claimAutoreleasedReturnValue([v51 autoAssetClientName]);
  }
  else {
    uint64_t v42 = objc_claimAutoreleasedReturnValue([v51 clientProcessName]);
  }
  __int16 v43 = (void *)v42;
  if (v39)
  {
    id v44 = (void *)objc_claimAutoreleasedReturnValue([v39 assetId]);
    +[MADAutoAssetHistory recordFailedOperation:fromClient:forAssetID:withSelector:failingWithError:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordFailedOperation:fromClient:forAssetID:withSelector:failingWithError:",  500LL,  v43,  v44,  v18,  v40);
  }

  else
  {
    +[MADAutoAssetHistory recordFailedOperation:fromClient:forAssetID:withSelector:failingWithError:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordFailedOperation:fromClient:forAssetID:withSelector:failingWithError:",  500LL,  v42,  0LL,  v18,  v11);
  }
}

- (void)issueResponseToFailedSetLockRequest:(id)a3 forEventInfo:(id)a4 forAtomicInstance:(id)a5 withResponseError:(id)a6
{
  id v27 = a6;
  id v26 = a5;
  id v10 = a4;
  id v11 = a3;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v13);

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v10 setJobInformation]);
  char v15 = (void *)objc_claimAutoreleasedReturnValue([v14 clientInstance]);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 clientDomainName]);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSetIdentifier]);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 responseMessage]);
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager updateAutoAssetSetStatus:forClientDomain:forAssetSetIdentifier:forJobResponse:withResponseError:clearingDownloadProgressReason:withAssetSetStatus:]( self,  "updateAutoAssetSetStatus:forClientDomain:forAssetSetIdentifier:forJobResponse:withResponseError:clea ringDownloadProgressReason:withAssetSetStatus:",  v11,  v16,  v17,  v19,  v27,  @"failed attempt to lock set",  0LL));

  -[MADAutoAssetControlManager issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:]( self,  "issueBuiltResponseForEventInfo:issuingResponseMessage:withResponseError:fromLocation:",  v10,  v20,  v27,  v11);
  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v15 autoAssetSetClientName]);
  if (v21) {
    uint64_t v22 = objc_claimAutoreleasedReturnValue([v15 autoAssetSetClientName]);
  }
  else {
    uint64_t v22 = objc_claimAutoreleasedReturnValue([v15 clientProcessName]);
  }
  id v23 = (void *)v22;
  unsigned __int8 v24 = (void *)objc_claimAutoreleasedReturnValue([v15 clientDomainName]);
  id v25 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSetIdentifier]);
  +[MADAutoAssetHistory recordFailedOperation:fromClient:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:failingWithError:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordFailedOperation:fromClient:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:failingWithError:",  500LL,  v23,  v24,  v25,  v26,  v27);
}

- (id)clientRequestMessageDesire:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  BOOL v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 message]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKey:@"desire"]);
  if (!v8)
  {
LABEL_6:
    id v10 = 0LL;
    goto LABEL_7;
  }

  id v9 = [v7 safeObjectForKey:@"desire" ofClass:objc_opt_class(MAAutoAssetInfoDesire)];
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  if (!v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager clientRequestMessageDesire:].cold.1(self);
    }

    goto LABEL_6;
  }

- (BOOL)clientRequestIndicatesNoWait:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequestMessage]);
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);

  id v7 = [v6 safeObjectForKey:@"desire" ofClass:objc_opt_class(MAAutoAssetInfoDesire)];
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v4 clientReplyCompletion]);

  BOOL v10 = 0;
  if (v9 && v8)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequest]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", v11));

    if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO:CHECK_FOR_NEWER")) {
      BOOL v10 = [v8 checkWaitTimeoutSecs] == 0;
    }
    else {
      BOOL v10 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO:LOCK_CONTENT")
    }
         && (![v8 checkWaitTimeoutSecs] || !objc_msgSend(v8, "lockWaitTimeoutSecs"));
  }

  return v10;
}

- (id)clientRequestMessageSetEnd:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  BOOL v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequestMessage]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 message]);

  id v9 = +[MASAutoAssetSetInfoEnd newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoEnd,  "newShimmedFromFrameworkMessage:forKey:",  v8,  @"setEnd");
  if (!v9)
  {
    BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager clientRequestMessageSetEnd:].cold.1();
    }
  }

  return v9;
}

+ (id)assetTypeForClientDomainName:(id)a3 forSetIdentifier:(id)a4 alreadyOnStateQueue:(BOOL)a5
{
  BOOL v5 = a5;
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  BOOL v10 = v9;
  uint64_t v25 = 0LL;
  id v26 = &v25;
  uint64_t v27 = 0x3032000000LL;
  id v28 = __Block_byref_object_copy__12;
  id v29 = __Block_byref_object_dispose__12;
  id v30 = 0LL;
  if (v5)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 autoControlManagerFSM]);
    id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
    dispatch_assert_queue_V2(v12);

    id v13 = (void *)objc_claimAutoreleasedReturnValue([v10 setConfigurationForClientDomain:v7 forAssetSetIdentifier:v8]);
    uint64_t v14 = objc_claimAutoreleasedReturnValue([v13 firstEntryAssetType]);
    char v15 = (void *)v26[5];
    v26[5] = v14;
  }

  else
  {
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v9 autoControlManagerFSM]);
    uint64_t v17 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v16 extendedStateQueue]);
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472LL;
    v20[2] = __96__MADAutoAssetControlManager_assetTypeForClientDomainName_forSetIdentifier_alreadyOnStateQueue___block_invoke;
    v20[3] = &unk_34F4B0;
    id v21 = v10;
    id v22 = v7;
    id v23 = v8;
    unsigned __int8 v24 = &v25;
    dispatch_sync(v17, v20);

    id v13 = v21;
  }

  id v18 = (id)v26[5];
  _Block_object_dispose(&v25, 8);

  return v18;
}

void __96__MADAutoAssetControlManager_assetTypeForClientDomainName_forSetIdentifier_alreadyOnStateQueue___block_invoke( uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) setConfigurationForClientDomain:*(void *)(a1 + 40) forAssetSetIdentifier:*(void *)(a1 + 48)]);
  uint64_t v2 = objc_claimAutoreleasedReturnValue([v5 firstEntryAssetType]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 56) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

+ (id)newSummaryForSetRequestMessage:(id)a3 includingSetAtomicInstance:(BOOL)a4
{
  BOOL v4 = a4;
  id v5 = a3;
  BOOL v6 = objc_alloc(&OBJC_CLASS___NSMutableString);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 messageName]);
  id v8 = -[NSMutableString initWithFormat:](v6, "initWithFormat:", @"%@", v7);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
  if (v9)
  {
    BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
    id v11 = +[MASAutoAssetSetInfoInstance newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoInstance,  "newShimmedFromFrameworkMessage:forKey:",  v10,  @"setInstance");

    id v12 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
    id v13 = +[MASAutoAssetSetInfoDesire newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoDesire,  "newShimmedFromFrameworkMessage:forKey:",  v12,  @"desire");

    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v5 message]);
    id v15 = +[MASAutoAssetSetInfoEnd newShimmedFromFrameworkMessage:forKey:]( &OBJC_CLASS___MASAutoAssetSetInfoEnd,  "newShimmedFromFrameworkMessage:forKey:",  v14,  @"end");

    if (v11)
    {
      if (v4)
      {
        uint64_t v16 = (NSString *)objc_claimAutoreleasedReturnValue([v11 summary]);
      }

      else
      {
        id v28 = objc_alloc(&OBJC_CLASS___NSString);
        unsigned __int8 v35 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
        id v34 = (void *)objc_claimAutoreleasedReturnValue([v11 autoAssetSetClientName]);
        uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v11 clientProcessName]);
        id v27 = [v11 clientProcessID];
        id v32 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
        id v29 = (void *)objc_claimAutoreleasedReturnValue([v11 atomicInstance]);
        if (v29) {
          id v31 = (__CFString *)objc_claimAutoreleasedReturnValue([v11 atomicInstance]);
        }
        else {
          id v31 = @"N";
        }
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v11 autoAssetEntries]);
        if (v17)
        {
          id v18 = objc_alloc(&OBJC_CLASS___NSString);
          id v26 = (void *)objc_claimAutoreleasedReturnValue([v11 autoAssetEntries]);
          id v30 = -[NSString initWithFormat:](v18, "initWithFormat:", @"%ld", [v26 count]);
        }

        else
        {
          id v30 = @"N";
        }

        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v11 entriesWhenTargeting]);
        if (v19)
        {
          uint64_t v20 = objc_alloc(&OBJC_CLASS___NSString);
          id v21 = (void *)objc_claimAutoreleasedReturnValue([v11 entriesWhenTargeting]);
          id v22 = -[NSString initWithFormat:](v20, "initWithFormat:", @"%ld", [v21 count]);
          uint64_t v16 = -[NSString initWithFormat:]( v28,  "initWithFormat:",  @"domainName:%@|clientName:%@|processName:%@|pid:%ld|setIdentifier:%@|atomicInstance:%@|entries:%@(WhenTargeting:%@)",  v35,  v34,  v33,  v27,  v32,  v31,  v30,  v22);
        }

        else
        {
          uint64_t v16 = -[NSString initWithFormat:]( v28,  "initWithFormat:",  @"domainName:%@|clientName:%@|processName:%@|pid:%ld|setIdentifier:%@|atomicInstance:%@|entries:%@(WhenTargeting:%@)",  v35,  v34,  v33,  v27,  v32,  v31,  v30,  @"N");
        }

        if (v17)
        {
        }

        if (v29) {
      }
        }

      -[NSMutableString appendFormat:](v8, "appendFormat:", @"[instance:%@]", v16);
    }

    if (v13)
    {
      id v23 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
      -[NSMutableString appendFormat:](v8, "appendFormat:", @"[desire:%@]", v23);
    }

    if (v15)
    {
      unsigned __int8 v24 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
      -[NSMutableString appendFormat:](v8, "appendFormat:", @"[end:%@]", v24);
    }
  }

  return v8;
}

- (void)eliminateUngraftDescriptor:(id)a3 forAutoAssetDescriptor:(id)a4 failingClientRequestForEventInfo:(id)a5
{
  id v25 = a4;
  id v8 = a5;
  id v9 = a3;
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  id v12 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:eliminateUngraftDescriptor",  v9);
  id v13 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6114LL,  v12,  0LL,  @"auto-asset eliminate occurred when had been personalizing / grafting [or mounting]"));
  uint64_t v14 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v25 assetType]);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v25 assetSpecifier]);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v25 assetVersion]);
  id v18 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v14,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v15,  v16,  v17);

  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager eliminateTrackerForSelector:](self, "eliminateTrackerForSelector:", v18));
  -[MADAutoAssetControlManager secureForceUngraft:forDescriptorBeingRemoved:]( self,  "secureForceUngraft:forDescriptorBeingRemoved:",  v12,  v25);
  if (v8) {
    -[MADAutoAssetControlManager issueResponseToFailedAutoAssetLockRequest:forEventInfo:withResponseError:forAttemptedDescriptor:]( self,  "issueResponseToFailedAutoAssetLockRequest:forEventInfo:withResponseError:forAttemptedDescriptor:",  v12,  v8,  v13,  v25);
  }
  if ([v25 secureOperationEliminating])
  {
    if (v19)
    {
      -[MADAutoAssetControlManager _eliminateSecureOperationFinished:forEliminateDescriptor:]( self,  "_eliminateSecureOperationFinished:forEliminateDescriptor:",  v19,  v25);
    }

    else
    {
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 diag]);
      id v22 = objc_alloc(&OBJC_CLASS___NSString);
      id v23 = (void *)objc_claimAutoreleasedReturnValue([v25 summary]);
      unsigned __int8 v24 = -[NSString initWithFormat:]( v22,  "initWithFormat:",  @"{%@} no eliminateTracker | beingEliminatedDescriptor:%@",  v12,  v23);
      [v21 trackAnomaly:@"ELIMINATE|AUTO-SECURE" forReason:v24 withResult:6111 withError:0];
    }
  }
}

- (void)eliminateUngraftSetDescriptor:(id)a3 failingClientRequestForEventInfo:(id)a4
{
  id v22 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6114LL,  @"eliminateUngraftSetDescriptor",  0LL,  @"auto-asset-set eliminate occurred when had been personalizing / grafting [or mounting]"));
  BOOL v10 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v22 clientDomainName]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSetIdentifier]);
  id v13 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( v10,  "initForAssetType:withAssetSpecifier:",  v11,  v12);

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager eliminateTrackerForSelector:](self, "eliminateTrackerForSelector:", v13));
  if (v14)
  {
    if (v6) {
      -[MADAutoAssetControlManager issueResponseToFailedAutoAssetLockRequest:forEventInfo:withResponseError:forAttemptedDescriptor:]( self,  "issueResponseToFailedAutoAssetLockRequest:forEventInfo:withResponseError:forAttemptedDescriptor:",  @"eliminateUngraftSetDescriptor",  v6,  v9,  0LL);
    }
    if ([v22 secureOperationEliminating]) {
      -[MADAutoAssetControlManager _eliminateSecureOperationFinished:forEliminateSetDescriptor:]( self,  "_eliminateSecureOperationFinished:forEliminateSetDescriptor:",  v14,  v22);
    }
  }

  else
  {
    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 diag]);
    uint64_t v17 = objc_alloc(&OBJC_CLASS___NSString);
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
    if (v6) {
      uint64_t v19 = (__CFString *)objc_claimAutoreleasedReturnValue([v6 summary]);
    }
    else {
      uint64_t v19 = @"N";
    }
    uint64_t v20 = -[NSString initWithFormat:]( v17,  "initWithFormat:",  @"{eliminateUngraftSetDescriptor} no eliminateTracker | setDescriptor:%@ | eventInfo:%@",  v18,  v19);
    [v16 trackAnomaly:@"SET-ELIMINATE|AUTO-SECURE" forReason:v20 withResult:6111 withError:0];

    if (v6) {
  }
    }

  id v21 = (void *)objc_claimAutoreleasedReturnValue([v22 latestDownloadedAtomicInstance]);
  -[MADAutoAssetControlManager issueResponseToFailedSetLockRequest:forEventInfo:forAtomicInstance:withResponseError:]( self,  "issueResponseToFailedSetLockRequest:forEventInfo:forAtomicInstance:withResponseError:",  @"eliminateUngraftSetDescriptor",  v6,  v21,  v9);
}

- (id)jobToBeGivenGrant:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (v4
    && (id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 awaitingExclusiveGrant]),
        id v8 = [v7 count],
        v7,
        v8))
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v4 awaitingExclusiveGrant]);
    BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectAtIndex:0]);

    id v11 = (void *)objc_claimAutoreleasedReturnValue([v4 awaitingExclusiveGrant]);
    [v11 removeObjectAtIndex:0];

    id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:potentiallyResumingJob:withOriginalSelector:fromLocation:notFoundCode:notFoundReason:downloadingDescriptor:baseForPatchDescriptor:]( self,  "currentJobByUUID:potentiallyResumingJob:withOriginalSelector:fromLocation:notFoundCode:notFoundRea son:downloadingDescriptor:baseForPatchDescriptor:",  v10,  0LL,  0LL,  @"jobToBeGivenGrant",  6111LL,  @"next auto-asset-job for obtain-lookup-grant not found",  0LL,  0LL));
    if (v12) {
      [v4 setHolderJobUUID:v10];
    }
  }

  else
  {
    id v12 = 0LL;
  }

  return v12;
}

- (void)handleStagingClientDetermineGroupsAvailableForUpdateRequest:(id)a3
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([a3 clientRequest]);
  +[MADAutoAssetStager clientDetermineGroupsAvailable:]( &OBJC_CLASS___MADAutoAssetStager,  "clientDetermineGroupsAvailable:",  v3);
}

- (void)handleStagingClientDetermineAllAvailableForUpdateRequest:(id)a3
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([a3 clientRequest]);
  +[MADAutoAssetStager clientDetermineAllAvailable:]( &OBJC_CLASS___MADAutoAssetStager,  "clientDetermineAllAvailable:",  v3);
}

- (void)handleStagingClientDetermineAllAvailableRequest:(id)a3
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([a3 clientRequest]);
  +[MADAutoAssetStager clientDetermineAllAvailable:]( &OBJC_CLASS___MADAutoAssetStager,  "clientDetermineAllAvailable:",  v3);
}

- (void)handleStagingClientDownloadGroupsRequest:(id)a3
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([a3 clientRequest]);
  +[MADAutoAssetStager clientDownloadGroups:](&OBJC_CLASS___MADAutoAssetStager, "clientDownloadGroups:", v3);
}

- (void)handleStagingClientDownloadAllRequest:(id)a3
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([a3 clientRequest]);
  +[MADAutoAssetStager clientDownloadAll:](&OBJC_CLASS___MADAutoAssetStager, "clientDownloadAll:", v3);
}

- (void)handleStagingClientCancelOperation:(id)a3
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([a3 clientRequest]);
  +[MADAutoAssetStager clientCancelOperation:](&OBJC_CLASS___MADAutoAssetStager, "clientCancelOperation:", v3);
}

- (void)handleStagingClientEraseAllRequest:(id)a3
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([a3 clientRequest]);
  +[MADAutoAssetStager clientEraseAll:](&OBJC_CLASS___MADAutoAssetStager, "clientEraseAll:", v3);
}

- (id)_combinedStatisticsWithStagerClientRepliesSuccess:(id)a3 withStagerClientRepliesFailure:(id)a4 withStagerTotalStaged:(id)a5 withStagerTotalUnstaged:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager statistics](self, "statistics"));
  id v15 = [v14 copy];

  if (v10)
  {
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 totalClientRepliesSuccess]);
    objc_msgSend( v16,  "setStageDetermineAllAvailable:",  (char *)objc_msgSend(v10, "stageDetermineAllAvailable") + (void)objc_msgSend(v16, "stageDetermineAllAvailable"));

    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v15 totalClientRepliesSuccess]);
    objc_msgSend( v17,  "setStageDownloadAll:",  (char *)objc_msgSend(v10, "stageDownloadAll") + (void)objc_msgSend(v17, "stageDownloadAll"));

    id v18 = (void *)objc_claimAutoreleasedReturnValue([v15 totalClientRepliesSuccess]);
    objc_msgSend( v18,  "setStagePurgeAll:",  (char *)objc_msgSend(v10, "stagePurgeAll") + (void)objc_msgSend(v18, "stagePurgeAll"));

    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v15 totalClientRepliesSuccess]);
    objc_msgSend( v19,  "setStageEraseAll:",  (char *)objc_msgSend(v10, "stageEraseAll") + (void)objc_msgSend(v19, "stageEraseAll"));
  }

  if (v11)
  {
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v15 totalClientRepliesFailure]);
    objc_msgSend( v20,  "setStageDetermineAllAvailable:",  (char *)objc_msgSend(v11, "stageDetermineAllAvailable") + (void)objc_msgSend(v20, "stageDetermineAllAvailable"));

    id v21 = (void *)objc_claimAutoreleasedReturnValue([v15 totalClientRepliesFailure]);
    objc_msgSend( v21,  "setStageDownloadAll:",  (char *)objc_msgSend(v11, "stageDownloadAll") + (void)objc_msgSend(v21, "stageDownloadAll"));

    id v22 = (void *)objc_claimAutoreleasedReturnValue([v15 totalClientRepliesFailure]);
    objc_msgSend( v22,  "setStagePurgeAll:",  (char *)objc_msgSend(v11, "stagePurgeAll") + (void)objc_msgSend(v22, "stagePurgeAll"));

    id v23 = (void *)objc_claimAutoreleasedReturnValue([v15 totalClientRepliesFailure]);
    objc_msgSend( v23,  "setStageEraseAll:",  (char *)objc_msgSend(v11, "stageEraseAll") + (void)objc_msgSend(v23, "stageEraseAll"));
  }

  if (v12)
  {
    unsigned __int8 v24 = (void *)objc_claimAutoreleasedReturnValue([v15 totalStaged]);
    objc_msgSend( v24,  "setPatchedAssets:",  (char *)objc_msgSend(v12, "patchedAssets") + (void)objc_msgSend(v24, "patchedAssets"));

    id v25 = (void *)objc_claimAutoreleasedReturnValue([v15 totalStaged]);
    objc_msgSend( v25,  "setPatchedBytes:",  (char *)objc_msgSend(v12, "patchedBytes") + (void)objc_msgSend(v25, "patchedBytes"));

    id v26 = (void *)objc_claimAutoreleasedReturnValue([v15 totalStaged]);
    objc_msgSend( v26,  "setFullAssets:",  (char *)objc_msgSend(v12, "fullAssets") + (void)objc_msgSend(v26, "fullAssets"));

    id v27 = (void *)objc_claimAutoreleasedReturnValue([v15 totalStaged]);
    objc_msgSend(v27, "setFullBytes:", (char *)objc_msgSend(v12, "fullBytes") + (void)objc_msgSend(v27, "fullBytes"));
  }

  if (v13)
  {
    id v28 = (void *)objc_claimAutoreleasedReturnValue([v15 totalUnstaged]);
    objc_msgSend( v28,  "setPatchedAssets:",  (char *)objc_msgSend(v13, "patchedAssets") + (void)objc_msgSend(v28, "patchedAssets"));

    id v29 = (void *)objc_claimAutoreleasedReturnValue([v15 totalUnstaged]);
    objc_msgSend( v29,  "setPatchedBytes:",  (char *)objc_msgSend(v13, "patchedBytes") + (void)objc_msgSend(v29, "patchedBytes"));

    id v30 = (void *)objc_claimAutoreleasedReturnValue([v15 totalUnstaged]);
    objc_msgSend( v30,  "setFullAssets:",  (char *)objc_msgSend(v13, "fullAssets") + (void)objc_msgSend(v30, "fullAssets"));

    id v31 = (void *)objc_claimAutoreleasedReturnValue([v15 totalUnstaged]);
    objc_msgSend(v31, "setFullBytes:", (char *)objc_msgSend(v13, "fullBytes") + (void)objc_msgSend(v31, "fullBytes"));
  }

  return v15;
}

- (id)_latestDownloadedDescriptor:(id)a3 forAssetType:(id)a4 withAssetSpecifier:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v54 = a5;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  __int128 v56 = 0u;
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  __int128 v59 = 0u;
  id v12 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewAllBySelector]( self,  "locateDownloadedNewAllBySelector"));
  id v13 = [v12 countByEnumeratingWithState:&v56 objects:v68 count:16];
  unsigned __int8 v53 = v12;
  if (!v13)
  {

    id v51 = 0LL;
    goto LABEL_26;
  }

  id v15 = v13;
  id v49 = v8;
  uint64_t v50 = self;
  id v51 = 0LL;
  uint64_t v52 = 0LL;
  uint64_t v55 = *(void *)v57;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  *(void *)&__int128 v14 = 138543874LL;
  __int128 v48 = v14;
  uint64_t v17 = v12;
  do
  {
    for (unint64_t i = 0LL; i != v15; unint64_t i = (char *)i + 1)
    {
      if (*(void *)v57 != v55) {
        objc_enumerationMutation(v17);
      }
      uint64_t v19 = *(void *)(*((void *)&v56 + 1) + 8LL * (void)i);
      uint64_t v20 = objc_autoreleasePoolPush();
      id v21 = [v17 safeObjectForKey:v19 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
      id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
      id v23 = p_ivars[155];
      id v24 = (id)objc_claimAutoreleasedReturnValue([v22 assetType]);
      id v25 = v9;
      id v26 = p_ivars[155];
      id v27 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSpecifier]);
      LODWORD(v26) = -[__objc2_ivar_list stringIsEqual:to:](v26, "stringIsEqual:to:", v54, v27);

      if (!(_DWORD)v26)
      {
        id v9 = v25;
        uint64_t v17 = v53;
        goto LABEL_19;
      }

      if (!v52)
      {
        id v32 = v22;
        id v33 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
        uint64_t v52 = v32;
        id v24 = (id)objc_claimAutoreleasedReturnValue([v32 assetVersion]);
        id v34 = (os_log_s *)[v33 initWithRestoreVersion:v24];
        id v30 = v51;
        id v51 = v34;
        goto LABEL_16;
      }

      id v28 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
      id v29 = (void *)objc_claimAutoreleasedReturnValue([v22 assetVersion]);
      id v24 = [v28 initWithRestoreVersion:v29];

      id v30 = v51;
      if (![v24 isComparable:v51])
      {
        unsigned __int8 v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v50, "logger"));
        id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
        {
          id v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v50, "_updateLatestSummary"));
          unsigned __int8 v37 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
          *(_DWORD *)int buf = v48;
          unsigned int v61 = v36;
          __int16 v62 = 2114;
          id v63 = v49;
          __int16 v64 = 2114;
          id v65 = v37;
          _os_log_error_impl( &dword_0,  v30,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@:_latestDownloadedDescriptor} ignoring (invalid restore version) | descriptor:%{public}@",  buf,  0x20u);
        }

        goto LABEL_16;
      }

      if ([v24 compare:v51] == (char *)&dword_0 + 1)
      {
        id v31 = v22;

        id v24 = v24;
        id v51 = (os_log_s *)v24;
        uint64_t v52 = v31;
LABEL_16:
      }

      id v9 = v25;
      uint64_t v17 = v53;
LABEL_18:

LABEL_19:
      objc_autoreleasePoolPop(v20);
      p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
    }

    id v15 = [v17 countByEnumeratingWithState:&v56 objects:v68 count:16];
  }

  while (v15);

  if (v52)
  {
    unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v50, "logger"));
    char v39 = (os_log_s *)objc_claimAutoreleasedReturnValue([v38 oslog]);

    id v8 = v49;
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v50, "_updateLatestSummary"));
      id v41 = v52;
      id v42 = v9;
      __int16 v43 = (void *)objc_claimAutoreleasedReturnValue([v52 summary]);
      *(_DWORD *)int buf = v48;
      unsigned int v61 = v40;
      __int16 v62 = 2114;
      id v63 = v49;
      __int16 v64 = 2114;
      id v65 = v43;
      _os_log_impl( &dword_0,  v39,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:_latestDownloadedDescriptor} matched on downloaded | descriptor:%{public}@",  buf,  0x20u);

      id v9 = v42;
    }

    else
    {
      id v41 = v52;
    }

    goto LABEL_30;
  }

  id v8 = v49;
  self = v50;
LABEL_26:
  id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger", v48));
  char v39 = (os_log_s *)objc_claimAutoreleasedReturnValue([v44 oslog]);

  if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    *(_DWORD *)int buf = 138544130;
    unsigned int v61 = v45;
    __int16 v62 = 2114;
    id v63 = v8;
    __int16 v64 = 2114;
    id v65 = v9;
    __int16 v66 = 2114;
    id v67 = v54;
    _os_log_impl( &dword_0,  v39,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:_latestDownloadedDescriptor} no match on downloaded descriptor | assetType:%{public}@, as setSpecifier:%{public}@",  buf,  0x2Au);
  }

  id v41 = 0LL;
LABEL_30:

  id v46 = v41;
  return v46;
}

- (id)_latestDownloadedDescriptor:(id)a3 forAssetType:(id)a4 withAssetSpecifier:(id)a5 matchingAssetVersion:(id)a6
{
  id v38 = a3;
  id v10 = a4;
  id v40 = a5;
  id v39 = a6;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  unsigned __int8 v37 = self;
  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewAllBySelector]( self,  "locateDownloadedNewAllBySelector"));
  id v13 = [obj countByEnumeratingWithState:&v42 objects:v56 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v43;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
LABEL_3:
    uint64_t v17 = 0LL;
    while (1)
    {
      if (*(void *)v43 != v15) {
        objc_enumerationMutation(obj);
      }
      uint64_t v18 = *(void *)(*((void *)&v42 + 1) + 8LL * (void)v17);
      uint64_t v19 = objc_autoreleasePoolPush();
      id v20 = [obj safeObjectForKey:v18 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
      id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
      id v22 = p_ivars[155];
      id v23 = (void *)objc_claimAutoreleasedReturnValue([v21 assetType]);
      id v24 = p_ivars[155];
      id v25 = (void *)objc_claimAutoreleasedReturnValue([v21 assetSpecifier]);
      id v26 = p_ivars[155];
      id v27 = v10;
      id v28 = (void *)objc_claimAutoreleasedReturnValue([v21 assetVersion]);
      LOBYTE(v26) = -[__objc2_ivar_list stringIsEqual:to:](v26, "stringIsEqual:to:", v39, v28);

      id v10 = v27;
      if ((v26 & 1) != 0)
      {
        objc_autoreleasePoolPop(v19);

        if (!v21) {
          goto LABEL_18;
        }
        id v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v37, "logger"));
        id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

        id v31 = v38;
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
        {
          id v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v37, "_updateLatestSummary"));
          id v33 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
          *(_DWORD *)int buf = 138543874;
          __int16 v47 = v32;
          __int16 v48 = 2114;
          id v49 = v38;
          __int16 v50 = 2114;
          id v51 = v33;
          _os_log_impl( &dword_0,  v30,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:_latestDownloadedDescriptor} matched on downloaded | descriptor:%{public}@",  buf,  0x20u);

          id v10 = v27;
        }

        goto LABEL_21;
      }

- (id)_preInstalledDescriptor:(id)a3 forAssetType:(id)a4 withAssetSpecifier:(id)a5
{
  id v8 = a3;
  id v29 = a4;
  id v28 = a5;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  id v11 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewAllBySelector]( self,  "locateDownloadedNewAllBySelector"));
  id v12 = [v11 countByEnumeratingWithState:&v30 objects:v34 count:16];
  if (v12)
  {
    id v13 = v12;
    id v26 = v8;
    id v27 = v11;
    uint64_t v14 = *(void *)v31;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      for (unint64_t i = 0LL; i != v13; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v31 != v14) {
          objc_enumerationMutation(v11);
        }
        uint64_t v17 = *(void *)(*((void *)&v30 + 1) + 8LL * (void)i);
        uint64_t v18 = objc_autoreleasePoolPush();
        id v19 = [v11 safeObjectForKey:v17 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
        if ([v20 foundAsPreInstalled])
        {
          id v21 = p_ivars[155];
          id v22 = (void *)objc_claimAutoreleasedReturnValue([v20 assetType]);
          if ((-[__objc2_ivar_list stringIsEqual:to:](v21, "stringIsEqual:to:", v29, v22) & 1) != 0)
          {
            id v23 = p_ivars[155];
            id v24 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSpecifier]);
            LODWORD(v23) = -[__objc2_ivar_list stringIsEqual:to:](v23, "stringIsEqual:to:", v28, v24);

            p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            id v11 = v27;

            if ((_DWORD)v23)
            {
              objc_autoreleasePoolPop(v18);
              goto LABEL_14;
            }
          }

          else
          {
          }
        }

        objc_autoreleasePoolPop(v18);
      }

      id v13 = [v11 countByEnumeratingWithState:&v30 objects:v34 count:16];
    }

    while (v13);
    id v20 = 0LL;
LABEL_14:
    id v8 = v26;
  }

  else
  {
    id v20 = 0LL;
  }

  return v20;
}

- (int64_t)_bytesDownloadedForDescriptor:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a3 metadata]);
  id v4 = [v3 safeIntegerForKey:@"_UnarchivedSize"];

  return (int64_t)v4;
}

- (BOOL)isDescriptorManagedAsSet:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 allKeys]);
  id v9 = [v8 copy];

  id obj = v9;
  id v10 = [v9 countByEnumeratingWithState:&v24 objects:v28 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v25;
    while (2)
    {
      for (unint64_t i = 0LL; i != v11; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v25 != v12) {
          objc_enumerationMutation(obj);
        }
        uint64_t v14 = *(void *)(*((void *)&v24 + 1) + 8LL * (void)i);
        uint64_t v15 = objc_autoreleasePoolPush();
        uint64_t v16 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
        id v17 = [(id)v16 safeObjectForKey:v14 ofClass:objc_opt_class(MADAutoSetConfiguration)];
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

        id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 firstEntryAssetType]);
        id v20 = (void *)objc_claimAutoreleasedReturnValue([v4 assetType]);
        LOBYTE(v16) = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v19, v20);

        objc_autoreleasePoolPop(v15);
        if ((v16 & 1) != 0)
        {
          BOOL v21 = 1;
          goto LABEL_11;
        }
      }

      id v11 = [obj countByEnumeratingWithState:&v24 objects:v28 count:16];
      if (v11) {
        continue;
      }
      break;
    }
  }

  BOOL v21 = 0;
LABEL_11:

  return v21;
}

- (BOOL)isDescriptorCurrentlyLocked:(id)a3 forDescriptor:(id)a4
{
  id v5 = a4;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 assetType]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 assetSpecifier]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 assetVersion]);

  id v12 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v8,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v9,  v10,  v11);
  id v13 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetLocker lockedSelectorsForEliminate:]( &OBJC_CLASS___MADAutoAssetLocker,  "lockedSelectorsForEliminate:",  v12));
  uint64_t v14 = v13;
  if (v13) {
    BOOL v15 = [v13 count] != 0;
  }
  else {
    BOOL v15 = 0;
  }

  return v15;
}

- (BOOL)_updateTrackedDescriptor:(id)a3 fromLatestDescriptor:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  uint64_t v10 = objc_claimAutoreleasedReturnValue([v6 assetType]);
  if (!v10) {
    goto LABEL_40;
  }
  id v11 = (void *)v10;
  uint64_t v12 = objc_claimAutoreleasedReturnValue([v7 assetType]);
  if (!v12) {
    goto LABEL_39;
  }
  id v13 = (void *)v12;
  uint64_t v14 = objc_claimAutoreleasedReturnValue([v6 assetSpecifier]);
  if (!v14)
  {
LABEL_38:

LABEL_39:
    goto LABEL_40;
  }

  BOOL v15 = (void *)v14;
  uint64_t v16 = objc_claimAutoreleasedReturnValue([v7 assetSpecifier]);
  if (!v16)
  {
LABEL_37:

    goto LABEL_38;
  }

  id v17 = (void *)v16;
  uint64_t v18 = objc_claimAutoreleasedReturnValue([v6 assetId]);
  if (!v18)
  {
LABEL_36:

    goto LABEL_37;
  }

  id v19 = (void *)v18;
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v7 assetId]);
  if (!v20 || ![v6 isMAAutoAsset])
  {

    goto LABEL_36;
  }

  unsigned __int8 v21 = [v7 isMAAutoAsset];

  if ((v21 & 1) == 0)
  {
LABEL_40:
    __int128 v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int128 v43 = (void *)objc_claimAutoreleasedReturnValue([v42 oslog]);

    if (!os_log_type_enabled((os_log_t)v43, OS_LOG_TYPE_ERROR))
    {
LABEL_41:

      LOBYTE(v26) = 0;
      goto LABEL_42;
    }

    __int128 v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    id v46 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    __int16 v47 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
    int v62 = 138543874;
    id v63 = v45;
    __int16 v64 = 2114;
    id v65 = v46;
    __int16 v66 = 2114;
    id v67 = v47;
    __int16 v48 = "[%{public}@] {_updateTrackedDescriptor} missing base-level information | updateDescriptor:%{public}@ | recentD"
          "escriptor:%{public}@";
LABEL_44:
    _os_log_error_impl(&dword_0, (os_log_t)v43, OS_LOG_TYPE_ERROR, v48, (uint8_t *)&v62, 0x20u);

    goto LABEL_41;
  }

  uint64_t v22 = objc_claimAutoreleasedReturnValue([v6 assetVersion]);
  if (v22)
  {
    id v23 = (void *)v22;
    __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v7 assetVersion]);

    if (!v24)
    {
      __int16 v50 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      __int128 v43 = (void *)objc_claimAutoreleasedReturnValue([v50 oslog]);

      if (!os_log_type_enabled((os_log_t)v43, OS_LOG_TYPE_ERROR)) {
        goto LABEL_41;
      }
      __int128 v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      id v46 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
      __int16 v47 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
      int v62 = 138543874;
      id v63 = v45;
      __int16 v64 = 2114;
      id v65 = v46;
      __int16 v66 = 2114;
      id v67 = v47;
      __int16 v48 = "[%{public}@] {_updateTrackedDescriptor} update full-asset-selector when recent not full | updateDescriptor:%"
            "{public}@ | recentDescriptor:%{public}@";
      goto LABEL_44;
    }
  }

  unsigned int v25 = [v6 foundByLookupWithoutAssetVersion];
  LODWORD(v26) = v25 ^ [v7 foundByLookupWithoutAssetVersion];
  if ((_DWORD)v26 == 1) {
    objc_msgSend(v6, "setFoundByLookupWithoutAssetVersion:", objc_msgSend(v7, "foundByLookupWithoutAssetVersion"));
  }
  unsigned int v27 = [v6 preSoftwareUpdateAssetStaging];
  if (v27 != [v7 preSoftwareUpdateAssetStaging])
  {
    objc_msgSend(v6, "setPreSoftwareUpdateAssetStaging:", objc_msgSend(v7, "preSoftwareUpdateAssetStaging"));
    LOBYTE(v26) = 1;
  }

  unsigned int v28 = [v6 isPatch];
  if (v28 != [v7 isPatch])
  {
    objc_msgSend(v6, "setIsPatch:", objc_msgSend(v7, "isPatch"));
    LOBYTE(v26) = 1;
  }

  unsigned int v29 = [v6 isOnFilesystem];
  if (v29 != [v7 isOnFilesystem])
  {
    objc_msgSend(v6, "setIsOnFilesystem:", objc_msgSend(v7, "isOnFilesystem"));
    LOBYTE(v26) = 1;
  }

  unsigned int v30 = [v6 neverBeenLocked];
  if (v30 != [v7 neverBeenLocked] && objc_msgSend(v6, "neverBeenLocked"))
  {
    objc_msgSend(v6, "setNeverBeenLocked:", objc_msgSend(v7, "neverBeenLocked"));
    LOBYTE(v26) = 1;
  }

  unsigned int v31 = [v6 downloadUserInitiated];
  if (v31 != [v7 downloadUserInitiated])
  {
    objc_msgSend(v6, "setDownloadUserInitiated:", objc_msgSend(v7, "downloadUserInitiated"));
    LOBYTE(v26) = 1;
  }

  id v32 = [v6 downloadedNetworkBytes];
  if (v32 != [v7 downloadedNetworkBytes])
  {
    objc_msgSend(v6, "setDownloadedNetworkBytes:", objc_msgSend(v7, "downloadedNetworkBytes"));
    LOBYTE(v26) = 1;
  }

  id v33 = [v6 downloadedFilesystemBytes];
  if (v33 != [v7 downloadedFilesystemBytes])
  {
    objc_msgSend(v6, "setDownloadedFilesystemBytes:", objc_msgSend(v7, "downloadedFilesystemBytes"));
    LOBYTE(v26) = 1;
  }

  id v34 = (void *)objc_claimAutoreleasedReturnValue([v6 patchedFromBaseSelector]);
  if (!v34)
  {
    id v49 = (void *)objc_claimAutoreleasedReturnValue([v7 patchedFromBaseSelector]);
    if (v49)
    {

LABEL_47:
      id v34 = (void *)objc_claimAutoreleasedReturnValue([v7 patchedFromBaseSelector]);
      [v6 setPatchedFromBaseSelector:v34];
      LOBYTE(v26) = 1;
      goto LABEL_51;
    }
  }

  uint64_t v35 = objc_claimAutoreleasedReturnValue([v6 patchedFromBaseSelector]);
  if (v35)
  {
    id v36 = (void *)v35;
    uint64_t v37 = objc_claimAutoreleasedReturnValue([v7 patchedFromBaseSelector]);
    if (!v37)
    {

      goto LABEL_51;
    }

    id v38 = (void *)v37;
    id v39 = (void *)objc_claimAutoreleasedReturnValue([v6 patchedFromBaseSelector]);
    id v40 = (void *)objc_claimAutoreleasedReturnValue([v7 patchedFromBaseSelector]);
    unsigned __int8 v41 = [v39 isEqual:v40];

    if (v34) {
    if ((v41 & 1) != 0)
    }
      goto LABEL_52;
    goto LABEL_47;
  }

- (BOOL)doesSelectorArray:(id)a3 coverAssetDescriptor:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  id obj = v6;
  id v10 = [obj countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v10)
  {
    uint64_t v11 = *(void *)v22;
    do
    {
      for (unint64_t i = 0LL; i != v10; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v11) {
          objc_enumerationMutation(obj);
        }
        id v13 = *(void **)(*((void *)&v21 + 1) + 8LL * (void)i);
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 assetType]);
        BOOL v15 = (void *)objc_claimAutoreleasedReturnValue([v7 assetType]);
        if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v14, v15) & 1) != 0)
        {
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSpecifier]);
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSpecifier]);
          unsigned __int8 v18 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v16, v17);

          if ((v18 & 1) != 0)
          {
            LOBYTE(v10) = 1;
            goto LABEL_12;
          }
        }

        else
        {
        }
      }

      id v10 = [obj countByEnumeratingWithState:&v21 objects:v25 count:16];
    }

    while (v10);
  }

- (void)setConfigurationLoadedFromPersisted:(id)a3 persistedEntryID:(id)a4
{
  id v17 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationNewEntryIDForSetConfiguration:]( self,  "setConfigurationNewEntryIDForSetConfiguration:",  v17));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
  id v9 = [v8 safeObjectForKey:v7 ofClass:objc_opt_class(MADAutoSetConfiguration)];
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  if (v10)
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 diag]);
    id v13 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v17 summary]);
    BOOL v15 = -[NSString initWithFormat:]( v13,  "initWithFormat:",  @"{setConfigurationLoadedFromPersisted} already tracking setConfiguration:%@",  v14);
    [v12 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v15 withResult:6109 withError:0];
  }

  else
  {
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
    [v16 setSafeObject:v17 forKey:v7];

    -[MADAutoAssetControlManager _logPersistedSetConfiguration:operation:forPersistedEntryID:withSetConfiguration:historyOperation:message:]( self,  "_logPersistedSetConfiguration:operation:forPersistedEntryID:withSetConfiguration:historyOperation:message:",  @"setConfigurationLoadedFromPersisted",  @"ENTRY_LOAD",  v7,  v17,  444LL,  @"set-configuration validated");
  }
}

- (void)setConfigurationsRefreshStaleIndications
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier",  0LL));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 allKeys]);
  id v7 = [v6 copy];

  id v8 = [v7 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v21;
    do
    {
      uint64_t v11 = 0LL;
      do
      {
        if (*(void *)v21 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void *)(*((void *)&v20 + 1) + 8LL * (void)v11);
        id v13 = objc_autoreleasePoolPush();
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
        id v15 = [v14 safeObjectForKey:v12 ofClass:objc_opt_class(MADAutoSetConfiguration)];
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

        if (v16)
        {
          uint64_t v17 = objc_claimAutoreleasedReturnValue([v16 latestAtomicInstanceToVend]);
          if (v17)
          {
            unsigned __int8 v18 = (void *)v17;
            unsigned __int8 v19 = [v16 haveReceivedLookupResponse];

            if ((v19 & 1) == 0)
            {
              [v16 setHaveReceivedLookupResponse:1];
              -[MADAutoAssetControlManager setConfigurationPersist:fromLocation:dueToAlter:forHistoryOperation:]( self,  "setConfigurationPersist:fromLocation:dueToAlter:forHistoryOperation:",  v16,  @"setConfigurationsRefreshStaleIndications",  0LL,  450LL);
            }
          }
        }

        objc_autoreleasePoolPop(v13);
        uint64_t v11 = (char *)v11 + 1;
      }

      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }

    while (v9);
  }
}

- (int64_t)setConfigurationSelectUsingInfoInstance:(id)a3 dueToMessageName:(id)a4 selectedConfig:(id *)a5
{
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v8 clientDomainName]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSetIdentifier]);
  id v15 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v13,  v14));

  if (!v12)
  {
    int64_t v20 = 0LL;
    __int128 v21 = v15;
    if (a5) {
      goto LABEL_35;
    }
    goto LABEL_36;
  }

  id v44 = v9;
  if (!v15)
  {
    id v59 = 0LL;
    int64_t v20 = -[MADAutoAssetControlManager setConfigurationNewSetConfiguration:forSetInfoInstance:dueToMessageName:selectedConfig:]( self,  "setConfigurationNewSetConfiguration:forSetInfoInstance:dueToMessageName:selectedConfig:",  @"setConfigurationSelectUsingInfoInstance",  v8,  v9,  &v59);
    id v15 = v59;
    if (v20)
    {
      __int128 v21 = 0LL;
      goto LABEL_34;
    }
  }

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
  id v17 = [v16 count];

  id v46 = v15;
  unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue([v15 autoAssetEntries]);
  id v19 = [v18 count];

  if (v17 != v19)
  {
    int64_t v20 = 0LL;
    __int128 v21 = 0LL;
LABEL_33:
    id v15 = v46;
    goto LABEL_34;
  }

  __int128 v57 = 0u;
  __int128 v58 = 0u;
  __int128 v55 = 0u;
  __int128 v56 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
  id v42 = [obj countByEnumeratingWithState:&v55 objects:v61 count:16];
  if (!v42) {
    goto LABEL_28;
  }
  uint64_t v43 = *(void *)v56;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  id v39 = a5;
  id v40 = v8;
  while (2)
  {
    uint64_t v23 = 0LL;
    while (2)
    {
      if (*(void *)v56 != v43) {
        objc_enumerationMutation(obj);
      }
      uint64_t v45 = v23;
      __int128 v24 = *(void **)(*((void *)&v55 + 1) + 8 * v23);
      __int128 v51 = 0u;
      __int128 v52 = 0u;
      __int128 v53 = 0u;
      __int128 v54 = 0u;
      id v48 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "autoAssetEntries", v39, v40));
      id v50 = [v48 countByEnumeratingWithState:&v51 objects:v60 count:16];
      if (!v50)
      {
LABEL_32:

        int64_t v20 = 0LL;
        __int128 v21 = 0LL;
        a5 = v39;
        id v8 = v40;
        goto LABEL_33;
      }

      uint64_t v25 = *(void *)v52;
      uint64_t v47 = *(void *)v52;
LABEL_16:
      uint64_t v26 = 0LL;
      while (1)
      {
        if (*(void *)v52 != v25) {
          objc_enumerationMutation(v48);
        }
        unsigned int v27 = *(void **)(*((void *)&v51 + 1) + 8 * v26);
        unsigned int v28 = p_ivars[155];
        unsigned int v29 = (void *)objc_claimAutoreleasedReturnValue([v27 assetSelector]);
        unsigned int v30 = (void *)objc_claimAutoreleasedReturnValue([v29 assetType]);
        unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue([v24 assetSelector]);
        id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 assetType]);
        if (!-[__objc2_ivar_list stringIsEqual:to:](v28, "stringIsEqual:to:", v30, v32))
        {

          goto LABEL_23;
        }

        id v49 = p_ivars[155];
        id v33 = (void *)objc_claimAutoreleasedReturnValue([v27 assetSelector]);
        id v34 = (void *)objc_claimAutoreleasedReturnValue([v33 assetSpecifier]);
        uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v24 assetSelector]);
        id v36 = v24;
        uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue([v35 assetSpecifier]);
        LOBYTE(v49) = -[__objc2_ivar_list stringIsEqual:to:](v49, "stringIsEqual:to:", v34, v37);

        __int128 v24 = v36;
        p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);

        uint64_t v25 = v47;
LABEL_23:
        if (v50 == (id)++v26)
        {
          id v50 = [v48 countByEnumeratingWithState:&v51 objects:v60 count:16];
          if (v50) {
            goto LABEL_16;
          }
          goto LABEL_32;
        }
      }

      uint64_t v23 = v45 + 1;
      if ((id)(v45 + 1) != v42) {
        continue;
      }
      break;
    }

    a5 = v39;
    id v8 = v40;
    id v42 = [obj countByEnumeratingWithState:&v55 objects:v61 count:16];
    if (v42) {
      continue;
    }
    break;
  }

- (int64_t)setConfigurationNewSetConfiguration:(id)a3 forSetInfoInstance:(id)a4 dueToMessageName:(id)a5 selectedConfig:(id *)a6
{
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetEntries]);
  if (v13)
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetEntries]);
    id v15 = [v14 count];

    if (v15)
    {
      uint64_t v16 = objc_alloc(&OBJC_CLASS___MADAutoSetConfiguration);
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v10 clientDomainName]);
      unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetSetClientName]);
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSetIdentifier]);
      int64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetEntries]);
      LOWORD(v28) = 0;
      id v21 = -[MADAutoSetConfiguration initForClientDomainName:forSetClientName:forAssetSetIdentifier:withAutoAssetEntries:withLatestAtomicInstanceToVend:inhibitingImpliedScheduling:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:]( v16,  "initForClientDomainName:forSetClientName:forAssetSetIdentifier:withAutoAssetEntries:withLatestAtomicInstan ceToVend:inhibitingImpliedScheduling:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:",  v17,  v18,  v19,  v20,  0LL,  0LL,  v28);

      -[MADAutoAssetControlManager setConfigurationPersist:fromLocation:dueToAlter:forHistoryOperation:]( self,  "setConfigurationPersist:fromLocation:dueToAlter:forHistoryOperation:",  v21,  v9,  0LL,  451LL);
      int64_t v22 = 0LL;
      if (!a6) {
        goto LABEL_9;
      }
    }

    else
    {
      id v21 = 0LL;
      int64_t v22 = 6555LL;
      if (!a6) {
        goto LABEL_9;
      }
    }

    goto LABEL_8;
  }

  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  __int128 v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

  if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
  {
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    unsigned int v27 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
    *(_DWORD *)int buf = 138543874;
    unsigned int v30 = v26;
    __int16 v31 = 2114;
    id v32 = v9;
    __int16 v33 = 2114;
    id v34 = v27;
    _os_log_error_impl( &dword_0,  v24,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@:setConfigurationNewSetConfiguration} MISSING asset-entries from set-information | setInfo Instance:%{public}@",  buf,  0x20u);
  }

  int64_t v22 = 0LL;
  id v21 = 0LL;
  if (a6) {
LABEL_8:
  }
    *a6 = v21;
LABEL_9:

  return v22;
}

- (void)setConfigurationPersist:(id)a3 fromLocation:(id)a4 dueToAlter:(BOOL)a5 forHistoryOperation:(int64_t)a6
{
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  if (v9)
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationNewEntryIDForSetConfiguration:]( self,  "setConfigurationNewEntryIDForSetConfiguration:",  v9));
    uint64_t v14 = objc_opt_self(self);
    id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 persistedKnownSetConfigurations]);
    unsigned int v17 = [v16 persistedEntryAlreadyExists:v13 fromLocation:v10];

    unsigned __int8 v18 = @"ENTRY_ADD";
    if (v17) {
      unsigned __int8 v18 = @"ENTRY_MODIFY";
    }
    id v19 = v18;
    int64_t v20 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 persistedEntry:v13 fromLocation:v10]);

    if (v21)
    {
      [v21 persistSecureCodedObject:v9 forKey:@"setConfiguration"];
      int64_t v22 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
      [v22 storePersistedEntry:v13 withEntrySummary:v23 fromLocation:v10];

      __int128 v24 = objc_alloc(&OBJC_CLASS___NSString);
      if (v17) {
        uint64_t v25 = @"altered";
      }
      else {
        uint64_t v25 = @"new";
      }
      uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
      unsigned int v27 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"%@ set-configuration persisted | setConfiguration:%@",  v25,  v26);
      -[MADAutoAssetControlManager _logPersistedSetConfiguration:operation:forPersistedEntryID:withSetConfiguration:historyOperation:message:]( self,  "_logPersistedSetConfiguration:operation:forPersistedEntryID:withSetConfiguration:historyOperation:message:",  v10,  v19,  v13,  v9,  a6,  v27);

      uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
      [v28 setSafeObject:v9 forKey:v13];
    }

    else
    {
      unsigned int v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      unsigned int v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
      {
        __int16 v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        id v32 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
        *(_DWORD *)int buf = 138543874;
        id v34 = v31;
        __int16 v35 = 2114;
        id v36 = v10;
        __int16 v37 = 2114;
        id v38 = v32;
        _os_log_error_impl( &dword_0,  v30,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@:setConfigurationPersist} unable to load persisted-set-configuration file | setConfigu ration:%{public}@",  buf,  0x20u);
      }
    }
  }
}

- (id)setConfigurationForClientDomain:(id)a3 forAssetSetIdentifier:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationNewEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "setConfigurationNewEntryIDForClientDomain:forAssetSetIdentifier:",  v7,  v6));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
  id v12 = [v11 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoSetConfiguration)];
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

  return v13;
}

- (id)setConfigurationVendingDescriptor:(id)a3 managedAsSet:(BOOL *)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetConfigurations](self, "persistedKnownSetConfigurations"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntryIDs:@"{setConfigurationVendingDescriptor}"]);

  if (![v10 count])
  {
    BOOL v51 = 0;
    id v50 = 0LL;
    if (a4) {
      goto LABEL_43;
    }
    goto LABEL_44;
  }

  __int128 v76 = 0u;
  __int128 v77 = 0u;
  __int128 v74 = 0u;
  __int128 v75 = 0u;
  id v11 = v10;
  id v61 = [v11 countByEnumeratingWithState:&v74 objects:v83 count:16];
  char v12 = 0;
  if (!v61)
  {
LABEL_40:

    id v50 = 0LL;
    BOOL v51 = v12 & 1;
    if (a4) {
      goto LABEL_43;
    }
    goto LABEL_44;
  }

  uint64_t v13 = *(void *)v75;
  __int128 v53 = &v80;
  __int128 v56 = v10;
  __int128 v57 = a4;
  __int128 v54 = self;
  __int128 v55 = v11;
  uint64_t v59 = *(void *)v75;
LABEL_4:
  id v14 = 0LL;
  while (1)
  {
    if (*(void *)v75 != v13) {
      objc_enumerationMutation(v11);
    }
    int v62 = (char *)v14;
    id v15 = *(void **)(*((void *)&v74 + 1) + 8LL * (void)v14);
    context = objc_autoreleasePoolPush();
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue([v16 persistedEntry:v15 fromLocation:@"{setConfigurationVendingDescriptor}"]);

    __int128 v68 = v17;
    if (!v17)
    {
      id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      int64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v44 oslog]);

      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)int buf = 138543362;
        __int128 v82 = v15;
        _os_log_error_impl( &dword_0,  v20,  OS_LOG_TYPE_ERROR,  "{setConfigurationVendingDescriptor} unable to load set-configuration from persisted-state | entryID:%{public}@",  buf,  0xCu);
      }

      goto LABEL_33;
    }

    id v18 = [v17 secureCodedObjectForKey:@"setConfiguration" ofClass:objc_opt_class(MADAutoSetConfiguration)];
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    int64_t v20 = v19;
    if (!v19)
    {
      uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v46 = (os_log_s *)objc_claimAutoreleasedReturnValue([v45 oslog]);

      os_log_t log = v46;
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)int buf = 138543362;
        __int128 v82 = v68;
        _os_log_error_impl( &dword_0,  v46,  OS_LOG_TYPE_ERROR,  "{setConfigurationVendingDescriptor} unable to load secure-coded set-configuration | entryID:%{public}@",  buf,  0xCu);
      }

      uint64_t v47 = v62;
      goto LABEL_37;
    }

    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s firstEntryAssetType](v19, "firstEntryAssetType"));
    int64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
    unsigned int v23 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v21, v22);

    if (v23) {
      break;
    }
    uint64_t v13 = v59;
LABEL_33:
    uint64_t v47 = v62;
LABEL_38:

    objc_autoreleasePoolPop(context);
    id v14 = v47 + 1;
    if (v14 == v61)
    {
      id v61 = [v11 countByEnumeratingWithState:&v74 objects:v83 count:16];
      if (!v61) {
        goto LABEL_40;
      }
      goto LABEL_4;
    }
  }

  __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s latestAtomicInstanceToVend](v20, "latestAtomicInstanceToVend"));

  uint64_t v13 = v59;
  if (!v24)
  {
    char v12 = 1;
    goto LABEL_33;
  }

  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s latestAtomicInstanceToVend](v20, "latestAtomicInstanceToVend"));
  uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v25));

  os_log_t log = v26;
  if (!v26)
  {
    id v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v49 = (os_log_s *)objc_claimAutoreleasedReturnValue([v48 oslog]);

    id obj = v49;
    if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager setConfigurationVendingDescriptor:managedAsSet:].cold.1((uint64_t)v79, (uint64_t)v20);
    }
    goto LABEL_36;
  }

  __int128 v72 = 0u;
  __int128 v73 = 0u;
  __int128 v70 = 0u;
  __int128 v71 = 0u;
  id obj = (os_log_s *)objc_claimAutoreleasedReturnValue(-[os_log_s latestDowloadedAtomicInstanceEntries](v26, "latestDowloadedAtomicInstanceEntries"));
  id v27 = -[os_log_s countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v70,  v78,  16LL);
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  if (!v27)
  {
LABEL_36:
    uint64_t v47 = v62;

    char v12 = 1;
LABEL_37:

    goto LABEL_38;
  }

  __int128 v58 = v20;
  uint64_t v29 = *(void *)v71;
  id v30 = v27;
  uint64_t v65 = *(void *)v71;
LABEL_14:
  uint64_t v31 = 0LL;
  id v66 = v30;
  while (1)
  {
    if (*(void *)v71 != v29) {
      objc_enumerationMutation(obj);
    }
    id v32 = *(void **)(*((void *)&v70 + 1) + 8 * v31);
    __int16 v33 = p_ivars[155];
    id v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "fullAssetSelector", v53));
    __int16 v35 = (void *)objc_claimAutoreleasedReturnValue([v34 assetType]);
    id v36 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
    __int16 v37 = p_ivars[155];
    __int16 v69 = (void *)objc_claimAutoreleasedReturnValue([v32 fullAssetSelector]);
    id v38 = (void *)objc_claimAutoreleasedReturnValue([v69 assetSpecifier]);
    id v39 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSpecifier]);
    if (!-[__objc2_ivar_list stringIsEqual:to:](v37, "stringIsEqual:to:", v38, v39))
    {

      uint64_t v29 = v65;
      id v30 = v66;
LABEL_22:

      goto LABEL_23;
    }

    __int16 v64 = p_ivars[155];
    id v40 = (void *)objc_claimAutoreleasedReturnValue([v32 fullAssetSelector]);
    unsigned __int8 v41 = (void *)objc_claimAutoreleasedReturnValue([v40 assetVersion]);
    id v42 = v6;
    uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v6 assetVersion]);
    LOBYTE(v64) = -[__objc2_ivar_list stringIsEqual:to:](v64, "stringIsEqual:to:", v41, v43);

    id v6 = v42;
    p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);

    uint64_t v29 = v65;
    id v30 = v66;
LABEL_23:
    if (v30 == (id)++v31)
    {
      id v30 = -[os_log_s countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v70,  v78,  16LL);
      if (v30) {
        goto LABEL_14;
      }
      id v10 = v56;
      a4 = v57;
      self = v54;
      id v11 = v55;
      int64_t v20 = v58;
      uint64_t v13 = v59;
      goto LABEL_36;
    }
  }

  objc_autoreleasePoolPop(context);
  BOOL v51 = 1;
  id v10 = v56;
  a4 = v57;
  id v50 = v58;
  if (!v57) {
    goto LABEL_44;
  }
LABEL_43:
  *a4 = v51;
LABEL_44:

  return v50;
}

- (BOOL)setConfigurationReferencesDescriptor:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetConfigurations](self, "persistedKnownSetConfigurations"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 persistedEntryIDs:@"{setConfigurationReferencesDescriptor}"]);

  if ([v8 count])
  {
    __int128 v91 = 0u;
    __int128 v92 = 0u;
    __int128 v89 = 0u;
    __int128 v90 = 0u;
    id v9 = v8;
    id v10 = [v9 countByEnumeratingWithState:&v89 objects:v98 count:16];
    __int16 v64 = v8;
    if (!v10)
    {
      char v70 = 0;
      goto LABEL_60;
    }

    id v11 = v10;
    char v70 = 0;
    uint64_t v12 = *(void *)v90;
    __int128 v76 = v4;
    id v67 = v9;
    __int128 v68 = self;
    uint64_t v66 = *(void *)v90;
    while (1)
    {
      uint64_t v13 = 0LL;
      id v69 = v11;
      do
      {
        if (*(void *)v90 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v89 + 1) + 8LL * (void)v13);
        context = objc_autoreleasePoolPush();
        id v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( [v15 persistedEntry:v14 fromLocation:@"{setConfigurationReferencesDescriptor}"]);

        int v80 = v16;
        if (!v16)
        {
          id v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          int64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v42 oslog]);

          if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          {
            unsigned int v17 = 0LL;
            goto LABEL_53;
          }

          *(_DWORD *)int buf = 138543362;
          __int128 v97 = v14;
          _os_log_error_impl( &dword_0,  v20,  OS_LOG_TYPE_ERROR,  "{setConfigurationReferencesDescriptor} unable to load set-configuration from persisted-state | entryID:%{public}@",  buf,  0xCu);
          goto LABEL_31;
        }

        unsigned int v17 = v16;
        id v18 = [v16 secureCodedObjectForKey:@"setConfiguration" ofClass:objc_opt_class(MADAutoSetConfiguration)];
        id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
        if (!v19)
        {
          uint64_t v72 = 0LL;
          uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v44 = (os_log_s *)objc_claimAutoreleasedReturnValue([v43 oslog]);

          os_log_t loga = v44;
          if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)int buf = 138543362;
            __int128 v97 = v17;
            _os_log_error_impl( &dword_0,  v44,  OS_LOG_TYPE_ERROR,  "{setConfigurationReferencesDescriptor} unable to load secure-coded set-configuration | entryID:%{public}@",  buf,  0xCu);
          }

          goto LABEL_52;
        }

        __int128 v71 = v13;
        int64_t v20 = v19;
        id v21 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s firstEntryAssetType](v19, "firstEntryAssetType"));
        int64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v4 assetType]);
        unsigned int v23 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v21, v22);

        if (!v23)
        {
          uint64_t v13 = v71;
LABEL_31:
          unsigned int v17 = v80;
          goto LABEL_53;
        }

        __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s latestAtomicInstanceToVend](v20, "latestAtomicInstanceToVend"));

        uint64_t v72 = (uint64_t)v20;
        if (!v24)
        {
          unsigned int v17 = v80;
          goto LABEL_37;
        }

        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s latestAtomicInstanceToVend](v20, "latestAtomicInstanceToVend"));
        uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v25));

        unsigned int v17 = v80;
        if (!v26)
        {
          uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v46 = (os_log_s *)objc_claimAutoreleasedReturnValue([v45 oslog]);

          id obj = v46;
          if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
            -[MADAutoAssetControlManager setConfigurationReferencesDescriptor:].cold.1((uint64_t)v95, v72);
          }
          goto LABEL_36;
        }

        __int128 v87 = 0u;
        __int128 v88 = 0u;
        __int128 v85 = 0u;
        __int128 v86 = 0u;
        id obj = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 latestDowloadedAtomicInstanceEntries]);
        os_log_t log = (os_log_t)-[os_log_s countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v85,  v94,  16LL);
        if (!log) {
          goto LABEL_36;
        }
        uint64_t v65 = v26;
        uint64_t v27 = *(void *)v86;
        p_ivars = &MobileAssetKeyManager__metaData.ivars;
        uint64_t v74 = *(void *)v86;
        do
        {
          for (os_log_t i = 0LL; i != log; os_log_t i = (os_log_t)((char *)i + 1))
          {
            if (*(void *)v86 != v27) {
              objc_enumerationMutation(obj);
            }
            id v30 = *(void **)(*((void *)&v85 + 1) + 8LL * (void)i);
            uint64_t v31 = p_ivars[155];
            id v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "fullAssetSelector", v64));
            __int16 v33 = (void *)objc_claimAutoreleasedReturnValue([v32 assetType]);
            id v34 = (void *)objc_claimAutoreleasedReturnValue([v4 assetType]);
            __int16 v35 = p_ivars[155];
            __int128 v77 = (void *)objc_claimAutoreleasedReturnValue([v30 fullAssetSelector]);
            id v36 = (void *)objc_claimAutoreleasedReturnValue([v77 assetSpecifier]);
            __int16 v37 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSpecifier]);
            if (!-[__objc2_ivar_list stringIsEqual:to:](v35, "stringIsEqual:to:", v36, v37))
            {

              uint64_t v27 = v74;
LABEL_22:

              goto LABEL_23;
            }

            id v38 = p_ivars[155];
            id v39 = (void *)objc_claimAutoreleasedReturnValue([v30 fullAssetSelector]);
            id v40 = (void *)objc_claimAutoreleasedReturnValue([v39 assetVersion]);
            unsigned __int8 v41 = (void *)objc_claimAutoreleasedReturnValue([v4 assetVersion]);
            LOBYTE(v38) = -[__objc2_ivar_list stringIsEqual:to:](v38, "stringIsEqual:to:", v40, v41);

            id v4 = v76;
            p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            uint64_t v27 = v74;
            if ((v38 & 1) != 0)
            {
              char v70 = 1;
              id v9 = v67;
              self = v68;
              uint64_t v12 = v66;
              id v11 = v69;
              unsigned int v17 = v80;
              goto LABEL_35;
            }

- (id)setConfigurationNewEntryIDForSetConfiguration:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);

  id v7 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v5,  v6);
  return v7;
}

- (id)setConfigurationNewEntryIDForClientDomain:(id)a3 forAssetSetIdentifier:(id)a4
{
  return  -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  a3,  a4);
}

- (BOOL)setConfiguration:(id)a3 matchesAssetEntriesFromInfoInstance:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = v7;
  if (!v6
    || !v7
    || (uint64_t v9 = objc_claimAutoreleasedReturnValue([v6 autoAssetEntries])) == 0
    || (id v10 = (void *)v9,
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]),
        v11,
        v10,
        !v11))
  {
    __int16 v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v34 = (void *)objc_claimAutoreleasedReturnValue([v33 diag]);
    __int16 v35 = objc_alloc(&OBJC_CLASS___NSString);
    if (v6)
    {
      id v36 = (__CFString *)objc_claimAutoreleasedReturnValue([v6 summary]);
      if (v8)
      {
LABEL_40:
        __int16 v37 = (__CFString *)objc_claimAutoreleasedReturnValue([v8 summary]);
LABEL_43:
        id v38 = -[NSString initWithFormat:]( v35,  "initWithFormat:",  @"{setConfiguration:matchesAssetEntriesFromInfoInstance:} missing required | setConfiguration:%@, setInfoInstance:%@",  v36,  v37);
        [v34 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v38 withResult:6111 withError:0];

        if (v8) {
        if (v6)
        }

LABEL_48:
        BOOL v32 = 0;
        goto LABEL_49;
      }
    }

    else
    {
      id v36 = @"N";
      if (v8) {
        goto LABEL_40;
      }
    }

    __int16 v37 = @"N";
    goto LABEL_43;
  }

  __int128 v56 = 0u;
  __int128 v57 = 0u;
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([v6 autoAssetEntries]);
  id v12 = [obj countByEnumeratingWithState:&v54 objects:v61 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v55;
    while (1)
    {
      uint64_t v15 = 0LL;
LABEL_8:
      if (*(void *)v55 != v14) {
        objc_enumerationMutation(obj);
      }
      uint64_t v16 = *(void **)(*((void *)&v54 + 1) + 8 * v15);
      __int128 v50 = 0u;
      __int128 v51 = 0u;
      __int128 v52 = 0u;
      __int128 v53 = 0u;
      unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
      id v18 = [v17 countByEnumeratingWithState:&v50 objects:v60 count:16];
      if (!v18) {
        break;
      }
      id v19 = v18;
      uint64_t v20 = *(void *)v51;
LABEL_12:
      uint64_t v21 = 0LL;
      while (1)
      {
        if (*(void *)v51 != v20) {
          objc_enumerationMutation(v17);
        }
        if (v19 == (id)++v21)
        {
          id v19 = [v17 countByEnumeratingWithState:&v50 objects:v60 count:16];
          if (v19) {
            goto LABEL_12;
          }
          goto LABEL_50;
        }
      }

      if ((id)++v15 != v13) {
        goto LABEL_8;
      }
      id v13 = [obj countByEnumeratingWithState:&v54 objects:v61 count:16];
      if (!v13) {
        goto LABEL_21;
      }
    }

- (BOOL)setConfigurationPotentialLatestToVend:(id)a3 forSetDescriptor:(id)a4 forSetConfiguration:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:setConfigurationPotentialLatestToVend",  v8);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v9 latestDownloadedAtomicInstance]);

  if (v14
    && (uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v9 latestDowloadedAtomicInstanceEntries]),
        id v16 = [v15 count],
        v15,
        v16))
  {
    __int128 v34 = 0u;
    __int128 v35 = 0u;
    __int128 v32 = 0u;
    __int128 v33 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue([v9 latestDowloadedAtomicInstanceEntries]);
    id v17 = [obj countByEnumeratingWithState:&v32 objects:v36 count:16];
    if (v17)
    {
      id v18 = v17;
      char v19 = 0;
      uint64_t v20 = *(void *)v33;
      id v29 = v10;
      id v30 = v8;
      while (2)
      {
        for (os_log_t i = 0LL; i != v18; os_log_t i = (char *)i + 1)
        {
          if (*(void *)v33 != v20) {
            objc_enumerationMutation(obj);
          }
          id v22 = *(void **)(*((void *)&v32 + 1) + 8LL * (void)i);
          id v23 = objc_autoreleasePoolPush();
          if (!v22) {
            goto LABEL_17;
          }
          uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v22 fullAssetSelector]);
          uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v24));

          if (!v25
            || ![v25 isOnFilesystem]
            || +[MADAutoAssetSecure isPersonalizationRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationRequired:forDescriptor:",  v13,  v25))
          {

LABEL_17:
            objc_autoreleasePoolPop(v23);
            char v26 = 0;
            id v10 = v29;
            id v8 = v30;
            goto LABEL_19;
          }

          objc_autoreleasePoolPop(v23);
          char v19 = 1;
        }

        id v18 = [obj countByEnumeratingWithState:&v32 objects:v36 count:16];
        char v26 = 1;
        id v10 = v29;
        id v8 = v30;
        if (v18) {
          continue;
        }
        break;
      }
    }

    else
    {
      char v19 = 0;
      char v26 = 1;
    }

- (BOOL)setConfigurationAdoptLatestToVend:(id)a3 fromSetDescriptor:(id)a4 toSetConfiguration:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:setConfigurationAdoptLatestToVend",  v8);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v9 latestDownloadedAtomicInstance]);

  if (!v14)
  {
    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([v31 diag]);
    __int128 v33 = objc_alloc(&OBJC_CLASS___NSString);
    if (v9) {
      __int128 v34 = (__CFString *)objc_claimAutoreleasedReturnValue([v9 summary]);
    }
    else {
      __int128 v34 = @"N";
    }
    id v36 = -[NSString initWithFormat:]( v33,  "initWithFormat:",  @"{%@} set-descriptor without latest-to-vend | setDescriptor:%@",  v13,  v34);
    goto LABEL_25;
  }

  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v9 latestDowloadedAtomicInstanceEntries]);
  id v16 = [v15 count];

  if (!v16)
  {
    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([v31 diag]);
    __int128 v35 = objc_alloc(&OBJC_CLASS___NSString);
    if (v9) {
      __int128 v34 = (__CFString *)objc_claimAutoreleasedReturnValue([v9 summary]);
    }
    else {
      __int128 v34 = @"N";
    }
    id v36 = -[NSString initWithFormat:]( v35,  "initWithFormat:",  @"{%@} empty set-descriptor | setDescriptor:%@",  v13,  v34);
LABEL_25:
    __int16 v37 = v36;
    [v32 trackAnomaly:@"LATEST-TO-VEND" forReason:v36 withResult:6108 withError:0];

    if (v9) {
    goto LABEL_28;
    }
  }

  __int128 v92 = v13;
  __int128 v89 = v10;
  __int128 v95 = 0u;
  __int128 v96 = 0u;
  __int128 v93 = 0u;
  __int128 v94 = 0u;
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v9 latestDowloadedAtomicInstanceEntries]);
  id v18 = [v17 countByEnumeratingWithState:&v93 objects:v103 count:16];
  if (!v18)
  {

LABEL_30:
    __int128 v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int128 v44 = (os_log_s *)objc_claimAutoreleasedReturnValue([v43 oslog]);

    id v10 = v89;
    id v13 = v92;
    if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
      *(_DWORD *)int buf = 138543618;
      __int128 v98 = v92;
      __int16 v99 = 2114;
      __int128 v100 = v45;
      _os_log_impl( &dword_0,  v44,  OS_LOG_TYPE_DEFAULT,  "{%{public}@}\n [LATEST-TO-VEND] [NO_CHANGE] no asset-versions are available to the client | setDescriptor:%{public}@",  buf,  0x16u);
    }

    goto LABEL_33;
  }

  id v19 = v18;
  id v88 = v8;
  char v20 = 0;
  uint64_t v21 = *(void *)v94;
  id obj = v17;
  while (2)
  {
    for (os_log_t i = 0LL; i != v19; os_log_t i = (char *)i + 1)
    {
      if (*(void *)v94 != v21) {
        objc_enumerationMutation(obj);
      }
      id v23 = *(void **)(*((void *)&v93 + 1) + 8LL * (void)i);
      uint64_t v24 = objc_autoreleasePoolPush();
      if (!v23)
      {
        id v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        id v39 = (void *)objc_claimAutoreleasedReturnValue([v38 diag]);
        id v40 = objc_alloc(&OBJC_CLASS___NSString);
        unsigned __int8 v41 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
        __int128 v42 = -[NSString initWithFormat:]( v40,  "initWithFormat:",  @"{%@} unable to access latest downloaded atomic-instance entry | setDescriptor:%@",  v92,  v41);
        [v39 trackAnomaly:@"LATEST-TO-VEND" forReason:v42 withResult:6108 withError:0];

        objc_autoreleasePoolPop(v24);
        id v8 = v88;
        if ((v20 & 1) == 0) {
          goto LABEL_30;
        }
LABEL_39:
        BOOL v30 = 0;
        id v10 = v89;
        goto LABEL_40;
      }

      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v23 fullAssetSelector]);
      char v26 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v25));

      if (!v26)
      {
        __int128 v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        __int128 v48 = (void *)objc_claimAutoreleasedReturnValue([v47 diag]);
        __int128 v49 = objc_alloc(&OBJC_CLASS___NSString);
        __int128 v50 = (void *)objc_claimAutoreleasedReturnValue([v23 summary]);
        __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
        __int128 v52 = -[NSString initWithFormat:]( v49,  "initWithFormat:",  @"{%@} unable to locate asset-descriptor for atomic-instance entry | nextAtomicEntry:%@| setDescriptor:%@",  v92,  v50,  v51);
LABEL_37:
        __int128 v54 = v52;
        [v48 trackAnomaly:@"LATEST-TO-VEND" forReason:v52 withResult:6108 withError:0];

        id v8 = v88;
        goto LABEL_38;
      }

      if (([v26 isOnFilesystem] & 1) == 0)
      {
        __int128 v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        __int128 v48 = (void *)objc_claimAutoreleasedReturnValue([v47 diag]);
        __int128 v53 = objc_alloc(&OBJC_CLASS___NSString);
        __int128 v50 = (void *)objc_claimAutoreleasedReturnValue([v23 summary]);
        __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
        __int128 v52 = -[NSString initWithFormat:]( v53,  "initWithFormat:",  @"{%@} atomic-instance entry no longer on the filesystem | nextAtomicEntry:%@| setDescriptor:%@",  v92,  v50,  v51);
        goto LABEL_37;
      }

      if (+[MADAutoAssetSecure isPersonalizationRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationRequired:forDescriptor:",  v92,  v26))
      {
        __int128 v55 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([v55 oslog]);

        if (os_log_type_enabled((os_log_t)v47, OS_LOG_TYPE_DEFAULT))
        {
          __int128 v56 = (void *)objc_claimAutoreleasedReturnValue([v23 summary]);
          __int128 v57 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
          *(_DWORD *)int buf = 138543874;
          id v8 = v88;
          __int128 v98 = (NSString *)v88;
          __int16 v99 = 2114;
          __int128 v100 = v56;
          __int16 v101 = 2114;
          __int128 v102 = v57;
          _os_log_impl( &dword_0,  (os_log_t)v47,  OS_LOG_TYPE_DEFAULT,  "{%{public}@}\n [LATEST-TO-VEND] [NO_CHANGE] atomic-instance entry requiring personalization | nextAtomicEntry:%{public}@ | setDescriptor:%{public}@",  buf,  0x20u);
        }

        else
        {
          id v8 = v88;
        }

- (void)setConfigurationForceUnlocked:(id)a3 forSetConfiguration:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int128 v34 = v6;
  id v10 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:setConfigurationForceUnlocked",  v6);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v7 latestAtomicInstanceToVend]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v11));

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v7 latestAtomicInstanceToVend]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetAtomicInstanceByInstanceUUID:]( self,  "locateSetAtomicInstanceByInstanceUUID:",  v13));

  if (v12)
  {
    id v15 =  +[MADAutoAssetLocker eliminateAllPreviousSetLocksByClient:forSetDescriptor:]( &OBJC_CLASS___MADAutoAssetLocker,  "eliminateAllPreviousSetLocksByClient:forSetDescriptor:",  @"ALL_INSTANCES",  v12);
    -[MADAutoAssetControlManager secureForceUngraftAll:forSetDescriptorBeingRemoved:]( self,  "secureForceUngraftAll:forSetDescriptorBeingRemoved:",  v10,  v12);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v7 clientDomainName]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSetIdentifier]);
    -[MADAutoAssetControlManager setLockUsageMapEliminateForClientDomain:forSetIdentifier:]( self,  "setLockUsageMapEliminateForClientDomain:forSetIdentifier:",  v16,  v17);
  }

  [v7 setLatestAtomicInstanceToVend:0];
  [v7 setVendingAtomicInstanceForConfiguredEntries:0];
  id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    char v20 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
    *(_DWORD *)int buf = 138543618;
    id v36 = v10;
    __int16 v37 = 2114;
    id v38 = v20;
    _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "{%{public}@}\n [LATEST-TO-VEND] cleared set-configuration latestAtomicInstanceToVend | setConfiguration:%{public}@",  buf,  0x16u);
  }

  -[MADAutoAssetControlManager setConfigurationPersist:fromLocation:dueToAlter:forHistoryOperation:]( self,  "setConfigurationPersist:fromLocation:dueToAlter:forHistoryOperation:",  v7,  v10,  0LL,  452LL);
  __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v7 autoAssetEntries]);
  id v30 = [v33 count];
  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v12 requestedAutoAssetEntries]);
  id v29 = [v21 count];
  id v22 = (void *)objc_claimAutoreleasedReturnValue([v12 discoveredAtomicEntries]);
  __int128 v32 = v12;
  id v23 = [v22 count];
  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v14 instanceEntries]);
  id v25 = [v24 count];
  uint64_t v31 = v14;
  char v26 = (void *)objc_claimAutoreleasedReturnValue([v7 clientDomainName]);
  char v27 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSetIdentifier]);
  id v28 = (void *)objc_claimAutoreleasedReturnValue([v7 latestAtomicInstanceToVend]);
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:configuredCount:requestedCount:fromPallasCount:vendingCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:withAddendumMessage:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:configuredCount:requestedCount:fromPallasCount:vendingCount:forClientDomainN ame:forAssetSetIdentifier:forAtomicInstance:withAddendumMessage:",  442LL,  2LL,  1LL,  v30,  v29,  v23,  v25,  v26,  v27,  v28,  v34);
}

- (void)setConfigurationEliminate:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  __int128 v48 = v9;
  __int128 v47 = v10;
  -[MADAutoAssetControlManager removeSetTargetsForClientDomain:forSetIdentifier:fromLocation:]( self,  "removeSetTargetsForClientDomain:forSetIdentifier:fromLocation:",  v9,  v10,  v8);
  __int128 v46 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v60 = 0u;
  __int128 v61 = 0u;
  __int128 v62 = 0u;
  __int128 v63 = 0u;
  id v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 allKeys]);
  id v15 = [v14 copy];

  id obj = v15;
  __int128 v51 = v8;
  id v54 = [v15 countByEnumeratingWithState:&v60 objects:v69 count:16];
  if (v54)
  {
    uint64_t v52 = *(void *)v61;
    do
    {
      for (os_log_t i = 0LL; i != v54; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v61 != v52) {
          objc_enumerationMutation(obj);
        }
        uint64_t v17 = *(void *)(*((void *)&v60 + 1) + 8LL * (void)i);
        id v18 = objc_autoreleasePoolPush();
        id v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
        id v20 = [v19 safeObjectForKey:v17 ofClass:objc_opt_class(MADAutoSetConfiguration)];
        uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);

        if (v17) {
          BOOL v22 = v21 == 0LL;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          id v23 = (void *)objc_claimAutoreleasedReturnValue([v21 clientDomainName]);
          if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v48, v23) & 1) != 0)
          {
            uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v21 assetSetIdentifier]);
            unsigned int v25 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v47, v24);

            id v8 = v51;
            if (v25)
            {
              -[NSMutableArray addObject:](v46, "addObject:", v17);
              char v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              char v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

              if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT)) {
                goto LABEL_18;
              }
              id v28 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
              *(_DWORD *)int buf = 138543618;
              id v66 = v51;
              __int16 v67 = 2114;
              __int128 v68 = v28;
              id v29 = v27;
              id v30 = "\n"
                    "[SET-ELIMINATE]{%{public}@:setConfigurationEliminate} eliminating | nextSetConfiguration:%{public}@";
              goto LABEL_17;
            }
          }

          else
          {
          }
        }

        uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        char v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 oslog]);

        if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_18;
        }
        id v28 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
        *(_DWORD *)int buf = 138543618;
        id v66 = v8;
        __int16 v67 = 2114;
        __int128 v68 = v28;
        id v29 = v27;
        id v30 = "\n"
              "[SET-ELIMINATE]{%{public}@:setConfigurationEliminate} NOT eliminating | nextSetConfiguration:%{public}@";
LABEL_17:
        _os_log_impl(&dword_0, v29, OS_LOG_TYPE_DEFAULT, v30, buf, 0x16u);

LABEL_18:
        objc_autoreleasePoolPop(v18);
      }

      id v54 = [obj countByEnumeratingWithState:&v60 objects:v69 count:16];
    }

    while (v54);
  }

  __int128 v58 = 0u;
  __int128 v59 = 0u;
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  id obja = v46;
  id v55 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obja,  "countByEnumeratingWithState:objects:count:",  &v56,  v64,  16LL);
  if (v55)
  {
    uint64_t v53 = *(void *)v57;
    do
    {
      __int128 v32 = 0LL;
      do
      {
        if (*(void *)v57 != v53) {
          objc_enumerationMutation(obja);
        }
        uint64_t v33 = *(void *)(*((void *)&v56 + 1) + 8LL * (void)v32);
        __int128 v34 = objc_autoreleasePoolPush();
        __int128 v35 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
        id v36 = [v35 safeObjectForKey:v33 ofClass:objc_opt_class(MADAutoSetConfiguration)];
        __int16 v37 = (void *)objc_claimAutoreleasedReturnValue(v36);

        if (v37)
        {
          id v38 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationNewEntryIDForSetConfiguration:]( self,  "setConfigurationNewEntryIDForSetConfiguration:",  v37));
          id v39 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
          id v40 = (void *)objc_claimAutoreleasedReturnValue([v39 persistedEntry:v38 fromLocation:v51]);

          if (v40)
          {
            unsigned __int8 v41 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
            [v41 removePersistedEntry:v38 fromLocation:v51];

            -[MADAutoAssetControlManager _logPersistedSetConfigurationRemoved:removedPersistedEntryID:removedSetConfiguration:message:]( self,  "_logPersistedSetConfigurationRemoved:removedPersistedEntryID:removedSetConfiguration:message:",  v51,  v38,  v37,  @"eliminated by client");
          }

          else
          {
            __int128 v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            __int128 v43 = (os_log_s *)objc_claimAutoreleasedReturnValue([v42 oslog]);

            if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
            {
              __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([v37 summary]);
              *(_DWORD *)int buf = 138543618;
              id v66 = v51;
              __int16 v67 = 2114;
              __int128 v68 = v45;
              _os_log_error_impl( &dword_0,  v43,  OS_LOG_TYPE_ERROR,  "\n [SET-ELIMINATE]{%{public}@:setConfigurationEliminate} unable to load persisted-set-configuration file | nextRemoveSetConfiguration:%{public}@",  buf,  0x16u);
            }
          }
        }

        objc_autoreleasePoolPop(v34);
        __int128 v44 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
        [v44 removeObjectForKey:v33];

        __int128 v32 = (char *)v32 + 1;
      }

      while (v55 != v32);
      id v55 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obja,  "countByEnumeratingWithState:objects:count:",  &v56,  v64,  16LL);
    }

    while (v55);
  }
}

- (id)setConfigurationCopy:(id)a3
{
  id v25 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  char v26 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 allKeys]);
  id v8 = [v7 copy];

  id v9 = v8;
  id v10 = [v8 countByEnumeratingWithState:&v27 objects:v35 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v28;
    do
    {
      id v13 = 0LL;
      do
      {
        if (*(void *)v28 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void **)(*((void *)&v27 + 1) + 8LL * (void)v13);
        id v15 = objc_autoreleasePoolPush();
        id v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
        id v17 = [v16 safeObjectForKey:v14 ofClass:objc_opt_class(MADAutoSetConfiguration)];
        id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

        if (v18)
        {
          id v19 = (os_log_s *)[v18 copy];
          if (v19)
          {
            -[NSMutableArray addObject:](v26, "addObject:", v19);
          }

          else
          {
            uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            BOOL v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

            if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
            {
              id v23 = (void *)objc_claimAutoreleasedReturnValue([v18 summary]);
              *(_DWORD *)int buf = 138543618;
              id v32 = v25;
              __int16 v33 = 2114;
              __int128 v34 = v23;
              _os_log_error_impl( &dword_0,  v22,  OS_LOG_TYPE_ERROR,  "\n [SET-CONFIGURATION]{%{public}@:setConfigurationCopy} unable to copy set-configuration | nextSetConfiguration:%{public}@",  buf,  0x16u);
            }
          }
        }

        else
        {
          id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)int buf = 138543618;
            id v32 = v25;
            __int16 v33 = 2114;
            __int128 v34 = v14;
            _os_log_error_impl( &dword_0,  v19,  OS_LOG_TYPE_ERROR,  "\n [SET-CONFIGURATION]{%{public}@:setConfigurationCopy} unable to load set-configuration | setConfigurationKey:%{public}@",  buf,  0x16u);
          }
        }

        objc_autoreleasePoolPop(v15);
        id v13 = (char *)v13 + 1;
      }

      while (v11 != v13);
      id v11 = [v9 countByEnumeratingWithState:&v27 objects:v35 count:16];
    }

    while (v11);
  }

  return v26;
}

- (void)setConfigurationsPrePersonalizedJustCommitted:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v39 = v4;
  id v40 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:setConfigurationsPrePersonalizedJustCommitted",  v4);
  __int128 v49 = 0u;
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int128 v44 = self;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager prePersonalizedSelectors](self, "prePersonalizedSelectors"));
  id v9 = [v8 countByEnumeratingWithState:&v49 objects:v58 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v50;
    do
    {
      for (os_log_t i = 0LL; i != v10; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v50 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = *(void *)(*((void *)&v49 + 1) + 8LL * (void)i);
        uint64_t v14 = objc_autoreleasePoolPush();
        id v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorForSelector:]( self,  "locateSetDescriptorForSelector:",  v13));
        id v16 = v15;
        if (v15)
        {
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v15 latestDownloadedAtomicInstance]);
          id v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetAtomicInstanceByInstanceUUID:]( self,  "locateSetAtomicInstanceByInstanceUUID:",  v17));

          if (v18)
          {
            id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 atomicInstanceUUID]);
            -[NSMutableDictionary setSafeObject:forKey:](v7, "setSafeObject:forKey:", v18, v19);
          }
        }

        objc_autoreleasePoolPop(v14);
      }

      id v10 = [v8 countByEnumeratingWithState:&v49 objects:v58 count:16];
    }

    while (v10);
  }

  __int128 v47 = 0u;
  __int128 v48 = 0u;
  __int128 v45 = 0u;
  __int128 v46 = 0u;
  id v20 = v7;
  uint64_t v21 = v40;
  id v43 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v20,  "countByEnumeratingWithState:objects:count:",  &v45,  v57,  16LL);
  if (v43)
  {
    uint64_t v42 = *(void *)v46;
    unsigned __int8 v41 = v20;
    do
    {
      for (j = 0LL; j != v43; j = (char *)j + 1)
      {
        if (*(void *)v46 != v42) {
          objc_enumerationMutation(v20);
        }
        uint64_t v23 = *(void *)(*((void *)&v45 + 1) + 8LL * (void)j);
        uint64_t v24 = objc_autoreleasePoolPush();
        id v25 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v20,  "safeObjectForKey:ofClass:",  v23,  objc_opt_class(&OBJC_CLASS___MADAutoSetAtomicInstance));
        char v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
        __int128 v27 = v26;
        if (v26)
        {
          __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v26 clientDomainName]);
          __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v27 assetSetIdentifier]);
          __int128 v30 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( v44,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v28,  v29));

          uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v27 atomicInstanceUUID]);
          id v32 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( v44,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v31));

          if (v30) {
            BOOL v33 = v32 == 0LL;
          }
          else {
            BOOL v33 = 1;
          }
          if (!v33)
          {
            __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v32 clientDomainName]);
            if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v34,  @"FROM_STAGED_FOR_ALL") & 1) != 0) {
              goto LABEL_26;
            }
            __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v32 assetSetIdentifier]);
            unsigned __int8 v36 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v35,  @"FROM_STAGED_FOR_ALL");

            uint64_t v21 = v40;
            if ((v36 & 1) == 0)
            {
              -[MADAutoAssetControlManager setConfigurationAdoptLatestToVend:fromSetDescriptor:toSetConfiguration:]( v44,  "setConfigurationAdoptLatestToVend:fromSetDescriptor:toSetConfiguration:",  v40,  v32,  v30);
              __int16 v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v44, "logger"));
              __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v37 oslog]);

              if (os_log_type_enabled((os_log_t)v34, OS_LOG_TYPE_DEFAULT))
              {
                id v38 = (void *)objc_claimAutoreleasedReturnValue([v32 summary]);
                *(_DWORD *)int buf = 138412546;
                id v54 = v40;
                __int16 v55 = 2114;
                __int128 v56 = v38;
                _os_log_impl( &dword_0,  (os_log_t)v34,  OS_LOG_TYPE_DEFAULT,  "{%{publci}@}\n[LATEST-TO-VEND] just committed all pre-personalized secure | setDescriptor:%{public}@",  buf,  0x16u);
              }

- (BOOL)doesSetConfiguration:(id)a3 coverAssetDescriptor:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([v6 autoAssetEntries]);
  id v10 = [obj countByEnumeratingWithState:&v33 objects:v37 count:16];
  if (v10)
  {
    id v11 = v10;
    id v29 = v6;
    uint64_t v12 = *(void *)v34;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      uint64_t v14 = 0LL;
      id v30 = v11;
      do
      {
        if (*(void *)v34 != v12) {
          objc_enumerationMutation(obj);
        }
        id v15 = *(void **)(*((void *)&v33 + 1) + 8LL * (void)v14);
        id v16 = p_ivars[155];
        id v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "assetSelector", v29));
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 assetType]);
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v7 assetType]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v16, "stringIsEqual:to:", v18, v19) & 1) != 0)
        {
          id v32 = p_ivars[155];
          id v20 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSelector]);
          uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSpecifier]);
          uint64_t v22 = objc_claimAutoreleasedReturnValue([v7 assetSpecifier]);
          uint64_t v23 = p_ivars;
          id v24 = v7;
          uint64_t v25 = v12;
          char v26 = (void *)v22;
          LOBYTE(v32) = -[__objc2_ivar_list stringIsEqual:to:](v32, "stringIsEqual:to:", v21, v22);

          uint64_t v12 = v25;
          id v7 = v24;
          p_ivars = v23;

          id v11 = v30;
          if ((v32 & 1) != 0)
          {
            BOOL v27 = 1;
            goto LABEL_13;
          }
        }

        else
        {
        }

        uint64_t v14 = (char *)v14 + 1;
      }

      while (v11 != v14);
      id v11 = [obj countByEnumeratingWithState:&v33 objects:v37 count:16];
    }

    while (v11);
    BOOL v27 = 0;
LABEL_13:
    id v6 = v29;
  }

  else
  {
    BOOL v27 = 0;
  }

  return v27;
}

- (BOOL)_isSetDescriptorAvailableToClient:(id)a3 forSetDescriptor:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 latestDowloadedAtomicInstanceEntries]);
  id v11 = [v10 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v11)
  {
    id v12 = v11;
    id v21 = v7;
    uint64_t v13 = *(void *)v23;
    while (2)
    {
      for (os_log_t i = 0LL; i != v12; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v13) {
          objc_enumerationMutation(v10);
        }
        id v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v22 + 1) + 8 * (void)i) fullAssetSelector]);
        id v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v15));

        if (!v16)
        {
          id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
            -[MADAutoAssetControlManager _isSetDescriptorAvailableToClient:forSetDescriptor:].cold.1();
          }

LABEL_15:
          BOOL v17 = 0;
          goto LABEL_16;
        }

        if (+[MADAutoAssetSecure isSecureAsset:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isSecureAsset:forDescriptor:",  v6,  v16)
          && +[MADAutoAssetSecure isPersonalizationOrGraftingRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationOrGraftingRequired:forDescriptor:",  v6,  v16))
        {
          goto LABEL_15;
        }
      }

      id v12 = [v10 countByEnumeratingWithState:&v22 objects:v26 count:16];
      if (v12) {
        continue;
      }
      break;
    }

    BOOL v17 = 1;
LABEL_16:
    id v7 = v21;
  }

  else
  {
    BOOL v17 = 1;
  }

  return v17;
}

- (BOOL)_doesSetDescriptorRequirePersonalization:(id)a3 forSetDescriptor:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 latestDowloadedAtomicInstanceEntries]);
  id v11 = [v10 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v11)
  {
    id v12 = v11;
    id v21 = v7;
    uint64_t v13 = *(void *)v23;
    while (2)
    {
      for (os_log_t i = 0LL; i != v12; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v13) {
          objc_enumerationMutation(v10);
        }
        id v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v22 + 1) + 8 * (void)i) fullAssetSelector]);
        id v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v15));

        if (!v16)
        {
          id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
            -[MADAutoAssetControlManager _doesSetDescriptorRequirePersonalization:forSetDescriptor:].cold.1();
          }

LABEL_15:
          BOOL v17 = 1;
          goto LABEL_16;
        }

        if (+[MADAutoAssetSecure isSecureAsset:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isSecureAsset:forDescriptor:",  v6,  v16)
          && +[MADAutoAssetSecure isPersonalizationRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationRequired:forDescriptor:",  v6,  v16))
        {
          goto LABEL_15;
        }
      }

      id v12 = [v10 countByEnumeratingWithState:&v22 objects:v26 count:16];
      if (v12) {
        continue;
      }
      break;
    }

    BOOL v17 = 0;
LABEL_16:
    id v7 = v21;
  }

  else
  {
    BOOL v17 = 0;
  }

  return v17;
}

- (BOOL)_isDownloadedDescriptorPartOfLatestToVend:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v49 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v64 = 0u;
  __int128 v65 = 0u;
  __int128 v62 = 0u;
  __int128 v63 = 0u;
  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 allKeys]);
  id v11 = [v10 copy];

  id v12 = [v11 countByEnumeratingWithState:&v62 objects:v67 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v63;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v44 = *(void *)v63;
    __int128 v45 = self;
    id v48 = v11;
    while (1)
    {
      id v16 = 0LL;
      id v46 = v13;
      do
      {
        if (*(void *)v63 != v14) {
          objc_enumerationMutation(v11);
        }
        uint64_t v17 = *(void *)(*((void *)&v62 + 1) + 8LL * (void)v16);
        context = objc_autoreleasePoolPush();
        id v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
        id v19 = [v18 safeObjectForKey:v17 ofClass:objc_opt_class(p_ivars[211])];
        id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

        id v21 = v20;
        if (!v20) {
          goto LABEL_24;
        }
        id v52 = v20;
        __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v20 latestAtomicInstanceToVend]);

        id v21 = v52;
        if (!v22) {
          goto LABEL_24;
        }
        __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v52 latestAtomicInstanceToVend]);
        __int128 v24 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v23));

        if (!v24) {
          goto LABEL_23;
        }
        __int128 v47 = v16;
        __int128 v60 = 0u;
        __int128 v61 = 0u;
        __int128 v58 = 0u;
        __int128 v59 = 0u;
        __int128 v50 = v24;
        id obj = (id)objc_claimAutoreleasedReturnValue([v24 latestDowloadedAtomicInstanceEntries]);
        id v25 = [obj countByEnumeratingWithState:&v58 objects:v66 count:16];
        char v26 = &MobileAssetKeyManager__metaData.ivars;
        if (!v25) {
          goto LABEL_22;
        }
        id v27 = v25;
        uint64_t v28 = *(void *)v59;
        uint64_t v54 = *(void *)v59;
        do
        {
          id v29 = 0LL;
          id v55 = v27;
          do
          {
            if (*(void *)v59 != v28) {
              objc_enumerationMutation(obj);
            }
            id v30 = *(void **)(*((void *)&v58 + 1) + 8LL * (void)v29);
            uint64_t v31 = v26[155];
            id v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "fullAssetSelector", v44, v45));
            __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v32 assetType]);
            __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
            __int128 v35 = v26[155];
            __int128 v57 = (void *)objc_claimAutoreleasedReturnValue([v30 fullAssetSelector]);
            __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v57 assetSpecifier]);
            __int16 v37 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSpecifier]);
            if (!-[__objc2_ivar_list stringIsEqual:to:](v35, "stringIsEqual:to:", v36, v37))
            {

              uint64_t v28 = v54;
              id v27 = v55;
LABEL_19:

              goto LABEL_20;
            }

            uint64_t v53 = v26[155];
            id v38 = (void *)objc_claimAutoreleasedReturnValue([v30 fullAssetSelector]);
            id v39 = (void *)objc_claimAutoreleasedReturnValue([v38 assetVersion]);
            id v40 = v6;
            unsigned __int8 v41 = (void *)objc_claimAutoreleasedReturnValue([v6 assetVersion]);
            LOBYTE(v53) = -[__objc2_ivar_list stringIsEqual:to:](v53, "stringIsEqual:to:", v39, v41);

            id v6 = v40;
            char v26 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);

            uint64_t v28 = v54;
            id v27 = v55;
            if ((v53 & 1) != 0)
            {

              objc_autoreleasePoolPop(context);
              BOOL v42 = 1;
              id v11 = v48;
              goto LABEL_28;
            }

- (BOOL)_isDownloadedSetDescriptorLatestToVend:(id)a3 fromLocation:(id)a4
{
  id v27 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 allKeys]);
  id v11 = [v10 copy];

  id obj = v11;
  id v12 = [v11 countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v29;
    while (2)
    {
      for (os_log_t i = 0LL; i != v13; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v29 != v14) {
          objc_enumerationMutation(obj);
        }
        uint64_t v16 = *(void *)(*((void *)&v28 + 1) + 8LL * (void)i);
        uint64_t v17 = objc_autoreleasePoolPush();
        id v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
        id v19 = [v18 safeObjectForKey:v16 ofClass:objc_opt_class(MADAutoSetConfiguration)];
        id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

        if (v20)
        {
          id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 latestAtomicInstanceToVend]);
          __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v27 latestDownloadedAtomicInstance]);
          unsigned int v23 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v21, v22);

          if (v23)
          {

            objc_autoreleasePoolPop(v17);
            BOOL v24 = 1;
            goto LABEL_13;
          }
        }

        objc_autoreleasePoolPop(v17);
      }

      id v13 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
      if (v13) {
        continue;
      }
      break;
    }

    BOOL v24 = 0;
  }

  else
  {
    BOOL v24 = 0;
  }

- (void)_clearAtomicInstanceFromLatestToVend:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v27 = v7;
  __int128 v29 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:atomicInstanceEliminate",  v7);
  __int128 v31 = v6;
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 atomicInstanceUUID]);
  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v10));

  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 allKeys]);
  id v13 = [v12 copy];

  id obj = v13;
  id v14 = [v13 countByEnumeratingWithState:&v32 objects:v36 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v33;
    while (2)
    {
      for (os_log_t i = 0LL; i != v15; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v33 != v16) {
          objc_enumerationMutation(obj);
        }
        uint64_t v18 = *(void *)(*((void *)&v32 + 1) + 8LL * (void)i);
        id v19 = objc_autoreleasePoolPush();
        id v20 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( self,  "knownSetConfigurationsByIdentifier"));
        id v21 = [v20 safeObjectForKey:v18 ofClass:objc_opt_class(MADAutoSetConfiguration)];
        __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(v21);

        if (v22)
        {
          unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v22 latestAtomicInstanceToVend]);
          BOOL v24 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v23));

          id v25 = (void *)objc_claimAutoreleasedReturnValue([v22 latestAtomicInstanceToVend]);
          char v26 = (void *)objc_claimAutoreleasedReturnValue([v31 atomicInstanceUUID]);
          LODWORD(v23) = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v25, v26);

          if ((_DWORD)v23)
          {
            -[MADAutoAssetControlManager _clearSetConfigurationLatestToVend:forSetDesriptor:forSetAtomicInstance:fromLocation:]( self,  "_clearSetConfigurationLatestToVend:forSetDesriptor:forSetAtomicInstance:fromLocation:",  v22,  v24,  v31,  v29);
            if (v28) {
              -[MADAutoAssetControlManager _removeDownloadedSetDescriptorWithNewerDownloaded:fromLocation:]( self,  "_removeDownloadedSetDescriptorWithNewerDownloaded:fromLocation:",  v28,  v29);
            }

            objc_autoreleasePoolPop(v19);
            goto LABEL_15;
          }
        }

        objc_autoreleasePoolPop(v19);
      }

      id v15 = [obj countByEnumeratingWithState:&v32 objects:v36 count:16];
      if (v15) {
        continue;
      }
      break;
    }
  }

- (void)_clearSetConfigurationLatestToVend:(id)a3 forSetDesriptor:(id)a4 forSetAtomicInstance:(id)a5 fromLocation:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  uint64_t v16 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:atomicInstanceEliminate",  v13);
  if (v10)
  {
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v10 latestAtomicInstanceToVend]);

    if (v17)
    {
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        id v21 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
        *(_DWORD *)int buf = 138543874;
        __int128 v36 = v20;
        __int16 v37 = 2114;
        id v38 = v16;
        __int16 v39 = 2114;
        id v40 = v21;
        _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@}\n [LATEST-TO-VEND] clearing set-configuration latestAtomicInstanceToVend | setConfiguration:%{public}@",  buf,  0x20u);
      }

      [v10 setLatestAtomicInstanceToVend:0];
      [v10 setVendingAtomicInstanceForConfiguredEntries:0];
      -[MADAutoAssetControlManager setConfigurationPersist:fromLocation:dueToAlter:forHistoryOperation:]( self,  "setConfigurationPersist:fromLocation:dueToAlter:forHistoryOperation:",  v10,  v16,  0LL,  9999LL);
      __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v10 autoAssetEntries]);
      id v32 = [v34 count];
      __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v11 requestedAutoAssetEntries]);
      id v31 = [v33 count];
      __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v11 discoveredAtomicEntries]);
      id v30 = [v22 count];
      unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v12 instanceEntries]);
      id v24 = [v23 count];
      id v25 = v11;
      char v26 = (void *)objc_claimAutoreleasedReturnValue([v10 clientDomainName]);
      id v27 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSetIdentifier]);
      id v28 = v12;
      __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v10 latestAtomicInstanceToVend]);
      +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:configuredCount:requestedCount:fromPallasCount:vendingCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:withAddendumMessage:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:configuredCount:requestedCount:fromPallasCount:vendingCount:forClientDom ainName:forAssetSetIdentifier:forAtomicInstance:withAddendumMessage:",  442LL,  2LL,  1LL,  v32,  v31,  v30,  v24,  v26,  v27,  v29,  v16);

      id v12 = v28;
      id v11 = v25;
    }
  }
}

- (void)atomicInstanceLoadedFromPersisted:(id)a3 persistedEntryID:(id)a4
{
  id v20 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v20 atomicInstanceUUID]);
  id v11 = [v9 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
  id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  if (v12)
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 diag]);
    id v15 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v20 summary]);
    uint64_t v17 = -[NSString initWithFormat:]( v15,  "initWithFormat:",  @"{atomicInstanceLoadedFromPersisted} already tracking setAtomicInstance:%@",  v16);
    [v14 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v17 withResult:6109 withError:0];
  }

  else
  {
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v20 atomicInstanceUUID]);
    [v18 setSafeObject:v20 forKey:v19];

    -[MADAutoAssetControlManager _logPersistedSetAtomicInstance:operation:forPersistedEntryID:withSetAtomicInstance:message:]( self,  "_logPersistedSetAtomicInstance:operation:forPersistedEntryID:withSetAtomicInstance:message:",  @"atomicInstanceLoadedFromPersisted",  @"ENTRY_LOAD",  v6,  v20,  @"set-atomic-instance validated");
  }
}

- (id)atomicInstanceNewSetAtomicInstance:(id)a3 recordingHistoryOperation:(int64_t)a4 forSetInfoInstance:(id)a5 asSubAtomicFrom:(id)a6
{
  id v10 = a6;
  id v11 = a5;
  id v12 = a3;
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v11 autoAssetSetClientName]);
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v11 autoAssetEntries]);

  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:forClientDomainName:forSetClientName:forAssetSetIdentifier:representingInstanceEntries:recoveringAtomicInstanceUUID:asSubAtomicFrom:]( self,  "atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:forClientDomainName:forSetClientName:fo rAssetSetIdentifier:representingInstanceEntries:recoveringAtomicInstanceUUID:asSubAtomicFrom:",  v12,  a4,  v13,  v14,  v15,  v16,  0LL,  v10));
  return v17;
}

- (id)atomicInstanceNewSetAtomicInstance:(id)a3 recordingHistoryOperation:(int64_t)a4 recoveringForSetDescriptor:(id)a5 usingAsSetClient:(id)a6
{
  id v30 = a3;
  id v8 = a5;
  id v28 = a6;
  id v32 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v29 = v8;
  id obj = (id)objc_claimAutoreleasedReturnValue([v8 latestDowloadedAtomicInstanceEntries]);
  id v9 = [obj countByEnumeratingWithState:&v34 objects:v38 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v33 = *(void *)v35;
    do
    {
      id v11 = 0LL;
      do
      {
        if (*(void *)v35 != v33) {
          objc_enumerationMutation(obj);
        }
        id v12 = *(void **)(*((void *)&v34 + 1) + 8LL * (void)v11);
        id v13 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetEntry);
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
        id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSpecifier]);
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v12 fullAssetSelector]);
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 downloadDecryptionKey]);
        id v20 = -[MANAutoAssetSetEntry initForAssetType:withAssetSpecifier:usingDecryptionKey:assetLockedInhibitsRemoval:]( v13,  "initForAssetType:withAssetSpecifier:usingDecryptionKey:assetLockedInhibitsRemoval:",  v15,  v17,  v19,  [v12 inhibitedFromEmergencyRemoval]);

        if (v20) {
          -[NSMutableArray addObject:](v32, "addObject:", v20);
        }

        id v11 = (char *)v11 + 1;
      }

      while (v10 != v11);
      id v10 = [obj countByEnumeratingWithState:&v34 objects:v38 count:16];
    }

    while (v10);
  }

  id v21 = (void *)objc_claimAutoreleasedReturnValue([v29 clientDomainName]);
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v29 assetSetIdentifier]);
  unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v29 latestDownloadedAtomicInstance]);
  id v24 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:forClientDomainName:forSetClientName:forAssetSetIdentifier:representingInstanceEntries:recoveringAtomicInstanceUUID:asSubAtomicFrom:]( self,  "atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:forClientDomainName:forSetClientName:fo rAssetSetIdentifier:representingInstanceEntries:recoveringAtomicInstanceUUID:asSubAtomicFrom:",  v30,  a4,  v21,  v28,  v22,  v32,  v23,  0LL));

  return v24;
}

- (id)atomicInstanceNewSetAtomicInstance:(id)a3 recordingHistoryOperation:(int64_t)a4 forClientDomainName:(id)a5 forSetClientName:(id)a6 forAssetSetIdentifier:(id)a7 representingInstanceEntries:(id)a8 recoveringAtomicInstanceUUID:(id)a9 asSubAtomicFrom:(id)a10
{
  id v59 = a3;
  id v60 = a5;
  id v15 = a7;
  id v16 = a9;
  id v17 = a10;
  id v18 = a8;
  id v19 = a6;
  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v21 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v20 extendedStateQueue]);
  dispatch_assert_queue_V2(v21);

  id v58 = v16;
  if (v16)
  {
    id v22 = v16;
  }

  else
  {
    unsigned int v23 = objc_alloc_init(&OBJC_CLASS___NSUUID);
    id v22 = (id)objc_claimAutoreleasedReturnValue(-[NSUUID UUIDString](v23, "UUIDString"));
  }

  id v24 = objc_alloc(&OBJC_CLASS___MADAutoSetAtomicInstance);
  id v25 = objc_alloc_init(&OBJC_CLASS___NSDate);
  char v26 = self;
  id v27 = -[MADAutoSetAtomicInstance initForClientDomainName:forSetClientName:forAssetSetIdentifier:withAtomicInstanceUUID:asSubAtomicFrom:originallyCreatedOnDate:withCreationIndex:representingInstanceEntries:inUseBySetJob:]( v24,  "initForClientDomainName:forSetClientName:forAssetSetIdentifier:withAtomicInstanceUUID:asSubAtomicFrom:original lyCreatedOnDate:withCreationIndex:representingInstanceEntries:inUseBySetJob:",  v60,  v19,  v15,  v22,  v17,  v25,  -[MADAutoAssetControlManager atomicInstanceNextCreationIndex:forClientDomainName:forAssetSetIdentifier:]( self,  "atomicInstanceNextCreationIndex:forClientDomainName:forAssetSetIdentifier:",  v59,  v60,  v15),  v18,  0LL);

  id v28 = v59;
  if (v27)
  {
    if (a4 == 226)
    {
      __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
      {
        id v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v26, "_updateLatestSummary"));
        id v32 = (void *)objc_claimAutoreleasedReturnValue([v27 summary]);
        *(_DWORD *)int buf = 138543874;
        __int128 v62 = v31;
        __int16 v63 = 2114;
        id v64 = v59;
        __int16 v65 = 2114;
        id v66 = v32;
        _os_log_impl( &dword_0,  v30,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:atomicInstanceNewSetAtomicInstance} not persisting sub-atomic-instance of 0 entries | setAtomicInstance:%{public}@",  buf,  0x20u);
      }

      uint64_t v33 = v30;
    }

    else
    {
      uint64_t v33 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceNewEntryIDForSetAtomicInstance:]( self,  "atomicInstanceNewEntryIDForSetAtomicInstance:",  v27));
      __int128 v34 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
      __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v34 persistedEntry:v33 fromLocation:v59]);

      __int128 v56 = v35;
      if (v35)
      {
        [v35 persistSecureCodedObject:v27 forKey:@"setAtomicInstance"];
        __int128 v36 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
        __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v27 summary]);
        [v36 storePersistedEntry:v33 withEntrySummary:v37 fromLocation:v59];

        id v38 = (void *)objc_claimAutoreleasedReturnValue([v27 instanceEntries]);
        id v39 = [v38 count];
        id v40 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _specifierVersionNamesForAtomicInstance:]( self,  "_specifierVersionNamesForAtomicInstance:",  v27));
        +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:usageCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:withAddendumMessage:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:usageCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance :withAddendumMessage:",  a4,  2LL,  1LL,  v39,  v60,  v15,  v22,  v40);

        unsigned __int8 v41 = objc_alloc(&OBJC_CLASS___NSString);
        BOOL v42 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 subAtomicFromAtomicInstanceUUID]);
        if (v42) {
          id v43 = @"sub-";
        }
        else {
          id v43 = &stru_355768;
        }
        uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v27 summary]);
        id v55 = v43;
        id v28 = v59;
        __int128 v45 = -[NSString initWithFormat:]( v41,  "initWithFormat:",  @"new set %@atomic-instance added | setAtomicInstance:%@",  v55,  v44);
        -[MADAutoAssetControlManager _logPersistedSetAtomicInstance:operation:forPersistedEntryID:withSetAtomicInstance:message:]( self,  "_logPersistedSetAtomicInstance:operation:forPersistedEntryID:withSetAtomicInstance:message:",  v59,  @"ENTRY_ADD",  v33,  v27,  v45);
      }

      else
      {
        id v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        BOOL v42 = (os_log_s *)objc_claimAutoreleasedReturnValue([v46 oslog]);

        if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
        {
          uint64_t v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue([v27 summary]);
          *(_DWORD *)int buf = 138543874;
          __int128 v62 = v53;
          __int16 v63 = 2114;
          id v64 = v59;
          __int16 v65 = 2114;
          id v66 = v54;
          _os_log_error_impl( &dword_0,  v42,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@:atomicInstanceNewSetAtomicInstance} unable to load persisted-set-atomic-instance fi le | setAtomicInstance:%{public}@",  buf,  0x20u);

          id v16 = v58;
        }
      }

      __int128 v47 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
      [v47 setSafeObject:v27 forKey:v22];

      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v15,  @"FROM_STAGED_FOR_ALL"))
      {
        id v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        id v49 = (os_log_s *)objc_claimAutoreleasedReturnValue([v48 oslog]);

        if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
        {
          __int128 v50 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v27 summary]);
          *(_DWORD *)int buf = 138543874;
          __int128 v62 = v50;
          __int16 v63 = 2114;
          id v64 = v28;
          __int16 v65 = 2114;
          id v66 = v51;
          _os_log_impl( &dword_0,  v49,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:atomicInstanceNewSetAtomicInstance}\n [PSUS] not trimming based on overflow | setAtomicInstance:%{public}@",  buf,  0x20u);
        }
      }

      else
      {
        -[MADAutoAssetControlManager atomicInstanceTrimOverflowAfterPersisting:]( self,  "atomicInstanceTrimOverflowAfterPersisting:",  v27);
      }
    }
  }

  return v27;
}

- (id)atomicInstanceUUIDForNewSetJob:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 atomicInstance]);
  if (!v7
    || (id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance")),  v9 = (void *)objc_claimAutoreleasedReturnValue([v4 atomicInstance]),  v10 = objc_msgSend(v8, "safeObjectForKey:ofClass:", v9, objc_opt_class(MADAutoSetAtomicInstance)),  v11 = (void *)objc_claimAutoreleasedReturnValue(v10),  v9,  v8,  !v11))
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:forSetInfoInstance:asSubAtomicFrom:]( self,  "atomicInstanceNewSetAtomicInstance:recordingHistoryOperation:forSetInfoInstance:asSubAtomicFrom:",  @"atomicInstanceUUIDForNewSetJob",  225LL,  v4,  0LL));
  }

  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 atomicInstanceUUID]);

  return v12;
}

- (id)atomicInstanceNewIdentifierForSetAtomicInstance:(id)a3
{
  id v3 = a3;
  id v4 = objc_alloc(&OBJC_CLASS___NSString);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 clientDomainName]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 assetSetIdentifier]);

  id v7 = -[NSString initWithFormat:](v4, "initWithFormat:", @"%@_%@", v5, v6);
  return v7;
}

- (id)atomicInstanceNewEntryIDForSetAtomicInstance:(id)a3
{
  id v3 = a3;
  id v4 = objc_alloc(&OBJC_CLASS___NSString);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 clientDomainName]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 assetSetIdentifier]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 atomicInstanceUUID]);

  id v8 = -[NSString initWithFormat:](v4, "initWithFormat:", @"%@_%@_%@", v5, v6, v7);
  return v8;
}

- (id)atomicInstanceUUIDArrayForSetDescriptor:(id)a3
{
  id v3 = a3;
  id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 latestDownloadedAtomicInstance]);

  if (v5)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 latestDownloadedAtomicInstance]);
    -[NSMutableArray addObject:](v4, "addObject:", v6);
  }

  if (!-[NSMutableArray count](v4, "count"))
  {

    id v4 = 0LL;
  }

  return v4;
}

- (id)atomicInstanceNewSubAtomicFromAtomic:(id)a3 forSubsetInfoInstance:(id)a4 error:(id *)a5
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v7 atomicInstanceUUID]);
  if (!v11)
  {
    __int128 v36 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
    id v38 = -[NSString initWithFormat:]( v36,  "initWithFormat:",  @"auto-asset-set to create sub-atomic-instance from has no atomic-instance | fromSetAtomicInstance:%@",  v37);
    id v39 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6551LL,  @"atomicInstanceNewSubAtomicFromAtomic",  0LL,  v38));

    id v40 = 0LL;
    if (v39) {
      goto LABEL_36;
    }
    goto LABEL_38;
  }

  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v7 atomicInstanceUUID]);
  id v14 = [v12 safeObjectForKey:v13 ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
  uint64_t v15 = objc_claimAutoreleasedReturnValue(v14);

  uint64_t v54 = (void *)v15;
  if (!v15)
  {
    unsigned __int8 v41 = objc_alloc(&OBJC_CLASS___NSString);
    BOOL v42 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
    id v43 = -[NSString initWithFormat:]( v41,  "initWithFormat:",  @"auto-asset-set to create sub-atomic-instance from is not currenty known [presumed retired] | fromSetAtomicInstance:%@",  v42);
    uint64_t v44 = 6551LL;
LABEL_31:
    id v39 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  v44,  @"atomicInstanceNewSubAtomicFromAtomic",  0LL,  v43));

    id v40 = 0LL;
    goto LABEL_35;
  }

  id v16 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);

  if (!v16)
  {
    __int128 v45 = objc_alloc(&OBJC_CLASS___NSString);
    BOOL v42 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
    id v43 = -[NSString initWithFormat:]( v45,  "initWithFormat:",  @"entries to make up sub-atomic-instance must be specified [use empty array to indicate empty sub-atomic-instance | subsetAtomicInfoInstance:%@",  v42);
    uint64_t v44 = 6102LL;
    goto LABEL_31;
  }

  id v17 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
  id v18 = [v17 count];

  if (!v18)
  {
    uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v7 atomicInstanceUUID]);
    __int128 v34 = self;
    uint64_t v35 = 226LL;
    goto LABEL_34;
  }

  __int128 v74 = 0u;
  __int128 v75 = 0u;
  __int128 v72 = 0u;
  __int128 v73 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
  id v51 = [obj countByEnumeratingWithState:&v72 objects:v77 count:16];
  if (!v51) {
    goto LABEL_26;
  }
  id v52 = v7;
  uint64_t v53 = *(void *)v73;
  id v59 = v8;
  __int128 v57 = self;
  while (2)
  {
    uint64_t v19 = 0LL;
    while (2)
    {
      if (*(void *)v73 != v53)
      {
        uint64_t v20 = v19;
        objc_enumerationMutation(obj);
        uint64_t v19 = v20;
      }

      uint64_t v55 = v19;
      __int16 v67 = *(void **)(*((void *)&v72 + 1) + 8 * v19);
      __int128 v68 = 0u;
      __int128 v69 = 0u;
      __int128 v70 = 0u;
      __int128 v71 = 0u;
      id v60 = (id)objc_claimAutoreleasedReturnValue([v7 instanceEntries]);
      id v66 = [v60 countByEnumeratingWithState:&v68 objects:v76 count:16];
      if (!v66)
      {
LABEL_32:

        id v46 = objc_alloc(&OBJC_CLASS___NSString);
        __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
        id v48 = -[NSString initWithFormat:]( v46,  "initWithFormat:",  @"auto-asset-set to create sub-atomic-instance from does not represent selector(s) to be a sub-atomic-instance | subsetAtomicInfoInstance:%@",  v47);
        id v39 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6553LL,  @"atomicInstanceNewSubAtomicFromAtomic",  0LL,  v48));

        id v40 = 0LL;
        id v7 = v52;
        goto LABEL_35;
      }

      uint64_t v65 = *(void *)v69;
LABEL_12:
      uint64_t v21 = 0LL;
      while (1)
      {
        if (*(void *)v69 != v65) {
          objc_enumerationMutation(v60);
        }
        id v22 = *(void **)(*((void *)&v68 + 1) + 8 * v21);
        unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v67 assetSelector]);
        id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 assetType]);
        id v25 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSelector]);
        char v26 = (void *)objc_claimAutoreleasedReturnValue([v25 assetType]);
        __int128 v62 = v23;
        id v64 = (void *)objc_claimAutoreleasedReturnValue([v67 assetSelector]);
        id v27 = (void *)objc_claimAutoreleasedReturnValue([v64 assetSpecifier]);
        __int128 v61 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSelector]);
        id v28 = (void *)objc_claimAutoreleasedReturnValue([v61 assetSpecifier]);
        __int16 v63 = v27;
        if (!+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v27, v28))
        {

          id v8 = v59;
          unsigned int v23 = v62;
LABEL_20:

          goto LABEL_21;
        }

        __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v67 assetSelector]);
        id v30 = (void *)objc_claimAutoreleasedReturnValue([v29 assetVersion]);
        id v31 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSelector]);
        id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 assetVersion]);
        unsigned __int8 v58 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v30, v32);

        id v8 = v59;
        self = v57;
        if ((v58 & 1) != 0) {
          break;
        }
LABEL_21:
        if (v66 == (id)++v21)
        {
          id v66 = [v60 countByEnumeratingWithState:&v68 objects:v76 count:16];
          if (v66) {
            goto LABEL_12;
          }
          goto LABEL_32;
        }
      }

      uint64_t v19 = v55 + 1;
      id v7 = v52;
      if ((id)(v55 + 1) != v51) {
        continue;
      }
      break;
    }

    id v51 = [obj countByEnumeratingWithState:&v72 objects:v77 count:16];
    if (v51) {
      continue;
    }
    break;
  }

- (id)atomicInstanceMatchingInfoInstance:(id)a3 withSetInfoInstance:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 atomicInstance]);
  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 atomicInstance]);
    id v13 = [v11 safeObjectForKey:v12 ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
    id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

    if (v14)
    {
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 clientDomainName]);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v7 clientDomainName]);
      if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v15, v16) & 1) != 0)
      {
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSetIdentifier]);
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSetIdentifier]);
        unsigned int v19 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v17, v18);

        if (v19)
        {
          id v20 = v14;
LABEL_10:

          goto LABEL_11;
        }
      }

      else
      {
      }

      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 diag]);
      unsigned int v23 = objc_alloc(&OBJC_CLASS___NSString);
      id v24 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
      id v25 = (void *)objc_claimAutoreleasedReturnValue([v14 summary]);
      char v26 = -[NSString initWithFormat:]( v23,  "initWithFormat:",  @"{%@:atomicInstanceMatchingInfoInstance} setInfoInstance is tracking a different auto-asset-set | setInfoInstance:%@ | setAtomicInstance:%@",  v6,  v24,  v25);
      [v22 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v26 withResult:6108 withError:0];
    }

    id v20 = 0LL;
    goto LABEL_10;
  }

  id v20 = 0LL;
LABEL_11:

  return v20;
}

- (id)atomicInstanceForSetDescriptor:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);
  if (v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
    uint64_t v9 = objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);
  }

  else
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v4 discoveredAtomicInstance]);

    if (!v10)
    {
      id v13 = 0LL;
      goto LABEL_6;
    }

    id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
    uint64_t v9 = objc_claimAutoreleasedReturnValue([v4 discoveredAtomicInstance]);
  }

  id v11 = (void *)v9;
  id v12 = [v8 safeObjectForKey:v9 ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

LABEL_6:
  return v13;
}

- (int64_t)atomicInstanceNextCreationIndex:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5
{
  id v24 = a3;
  id v27 = a4;
  id v26 = a5;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager knownSetAtomicInstancesByInstance](self, "knownSetAtomicInstancesByInstance"));
  id v10 = [obj countByEnumeratingWithState:&v29 objects:v33 count:16];
  if (v10)
  {
    id v11 = v10;
    id v25 = 0LL;
    uint64_t v12 = *(void *)v30;
    id v13 = v27;
    do
    {
      for (os_log_t i = 0LL; i != v11; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v30 != v12) {
          objc_enumerationMutation(obj);
        }
        uint64_t v15 = *(void *)(*((void *)&v29 + 1) + 8LL * (void)i);
        id v16 = objc_autoreleasePoolPush();
        id v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
        id v18 = [v17 safeObjectForKey:v15 ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
        unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue(v18);

        id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 clientDomainName]);
        if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v20, v13) & 1) != 0)
        {
          uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v19 assetSetIdentifier]);
          unsigned int v22 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v21, v26);

          if (v22)
          {
            id v13 = v27;
          }

          else
          {
            id v13 = v27;
          }
        }

        else
        {
        }

        objc_autoreleasePoolPop(v16);
      }

      id v11 = [obj countByEnumeratingWithState:&v29 objects:v33 count:16];
    }

    while (v11);
  }

  else
  {
    id v25 = 0LL;
    id v13 = v27;
  }

  return (int64_t)v25 + 1;
}

- (void)atomicInstanceTrackSetDescriptor:(id)a3 fromLocation:(id)a4 forSpecificAtomicInstance:(id)a5
{
  id v6 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3, a4, a5));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);
}

- (id)atomicInstanceUUIDFromCurrentStatus:(id)a3
{
  id v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 newerAtomicInstanceDiscovered]);
  if (!v4) {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 latestDownloadedAtomicInstance]);
  }

  return v4;
}

- (void)atomicInstanceRemovedSetJob:(id)a3 removingForReason:(id)a4 historyOperation:(int64_t)a5
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = v7;
  id v45 = v8;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  __int128 v47 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  __int128 v59 = 0u;
  __int128 v60 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager knownSetAtomicInstancesByInstance](self, "knownSetAtomicInstancesByInstance"));
  id v51 = [obj countByEnumeratingWithState:&v57 objects:v62 count:16];
  if (v51)
  {
    uint64_t v12 = *(void *)v58;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    id v48 = v7;
    uint64_t v49 = *(void *)v58;
    do
    {
      id v14 = 0LL;
      do
      {
        uint64_t v15 = p_ivars;
        if (*(void *)v58 != v12) {
          objc_enumerationMutation(obj);
        }
        uint64_t v16 = *(void *)(*((void *)&v57 + 1) + 8LL * (void)v14);
        id v17 = objc_autoreleasePoolPush();
        id v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
        id v19 = [v18 safeObjectForKey:v16 ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
        id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

        uint64_t v21 = objc_claimAutoreleasedReturnValue([v20 atomicInstanceUUID]);
        p_ivars = v15;
        if (v21)
        {
          unsigned int v22 = (void *)v21;
          id v52 = v17;
          unsigned int v23 = self;
          id v24 = v15[155];
          id v25 = (void *)objc_claimAutoreleasedReturnValue([v20 clientDomainName]);
          id v26 = p_ivars;
          id v27 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
          if ((-[__objc2_ivar_list stringIsEqual:to:](v24, "stringIsEqual:to:", v25, v27) & 1) != 0)
          {
            id v28 = v26[155];
            __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSetIdentifier]);
            __int128 v30 = (void *)objc_claimAutoreleasedReturnValue([v9 autoAssetSetIdentifier]);
            LODWORD(v28) = -[__objc2_ivar_list stringIsEqual:to:](v28, "stringIsEqual:to:", v29, v30);

            uint64_t v9 = v48;
            uint64_t v12 = v49;

            p_ivars = v26;
            self = v23;
            id v17 = v52;
            if (!(_DWORD)v28) {
              goto LABEL_14;
            }
            __int128 v31 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
            __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([v20 atomicInstanceUUID]);
            id v33 = [v31 safeObjectForKey:v32 ofClass:objc_opt_class(MADAutoSetDescriptor)];
            unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue(v33);

            if (v22)
            {
              uint64_t v12 = v49;
LABEL_13:

              goto LABEL_14;
            }

            __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v20 atomicInstanceUUID]);

            if (v34)
            {
              id v25 = (void *)objc_claimAutoreleasedReturnValue([v20 atomicInstanceUUID]);
              -[NSMutableArray addObject:](v47, "addObject:", v25);
            }

            else
            {
              id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
              uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v25 diag]);
              __int128 v36 = objc_alloc(&OBJC_CLASS___NSString);
              __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v20 summary]);
              id v38 = -[NSString initWithFormat:]( v36,  "initWithFormat:",  @"{atomicInstanceRemovedSetJob} MISSING atomicInstanceUUID | nextSetAtomicInstance:%@",  v37);
              [v35 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v38 withResult:6108 withError:0];

              uint64_t v9 = v48;
            }

            uint64_t v12 = v49;
          }

          else
          {

            p_ivars = v26;
            self = v23;
            id v17 = v52;
          }

          goto LABEL_13;
        }

- (void)atomicInstanceEliminate:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5
{
  id v8 = a3;
  id v58 = a4;
  id v56 = a5;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  __int128 v55 = v8;
  __int128 v57 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:atomicInstanceEliminate",  v8);
  __int128 v61 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v71 = 0u;
  __int128 v72 = 0u;
  __int128 v73 = 0u;
  __int128 v74 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager knownSetAtomicInstancesByInstance](self, "knownSetAtomicInstancesByInstance"));
  id v11 = [obj countByEnumeratingWithState:&v71 objects:v82 count:16];
  id v64 = self;
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v72;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      for (os_log_t i = 0LL; i != v12; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v72 != v13) {
          objc_enumerationMutation(obj);
        }
        uint64_t v16 = *(void *)(*((void *)&v71 + 1) + 8LL * (void)i);
        id v17 = objc_autoreleasePoolPush();
        id v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
        id v19 = [v18 safeObjectForKey:v16 ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
        id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

        if (v16) {
          BOOL v21 = v20 == 0LL;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          unsigned int v22 = p_ivars[155];
          unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v20 clientDomainName]);
          if (-[__objc2_ivar_list stringIsEqual:to:](v22, "stringIsEqual:to:", v58, v23))
          {
            id v24 = p_ivars[155];
            id v25 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSetIdentifier]);
            LODWORD(v24) = -[__objc2_ivar_list stringIsEqual:to:](v24, "stringIsEqual:to:", v56, v25);

            self = v64;
            if (!(_DWORD)v24) {
              goto LABEL_15;
            }
            -[NSMutableArray addObject:](v61, "addObject:", v16);
            id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v64, "logger"));
            unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v26 oslog]);

            if (os_log_type_enabled((os_log_t)v23, OS_LOG_TYPE_DEFAULT))
            {
              id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager summary](v64, "summary"));
              id v28 = (void *)objc_claimAutoreleasedReturnValue([v20 summary]);
              *(_DWORD *)int buf = 138543874;
              __int128 v77 = v27;
              __int16 v78 = 2114;
              id v79 = v57;
              __int16 v80 = 2114;
              uint64_t v81 = (uint64_t)v28;
              _os_log_impl( &dword_0,  (os_log_t)v23,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@} | eliminating nextSetAtomicInstance:%{public}@",  buf,  0x20u);

              self = v64;
            }
          }

          p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        }

- (void)atomicInstanceRemove:(id)a3 setAtomicInstanceUUID:(id)a4 removingForReason:(id)a5 historyOperation:(int64_t)a6
{
  id v9 = a3;
  id v10 = a4;
  id v64 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = v10;
  __int128 v67 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v59 = v9;
  __int16 v63 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:atomicInstanceRemove",  v9);
  __int128 v76 = 0u;
  __int128 v77 = 0u;
  __int128 v78 = 0u;
  __int128 v79 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager knownSetAtomicInstancesByInstance](self, "knownSetAtomicInstancesByInstance"));
  id v14 = [obj countByEnumeratingWithState:&v76 objects:v91 count:16];
  id v66 = v10;
  __int128 v71 = self;
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v77;
    do
    {
      for (os_log_t i = 0LL; i != v15; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v77 != v16) {
          objc_enumerationMutation(obj);
        }
        uint64_t v18 = *(void *)(*((void *)&v76 + 1) + 8LL * (void)i);
        id v19 = objc_autoreleasePoolPush();
        id v20 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
        id v21 = [v20 safeObjectForKey:v18 ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
        unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue(v21);

        if (v18) {
          BOOL v23 = v22 == 0LL;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          id v24 = (void *)objc_claimAutoreleasedReturnValue([v22 atomicInstanceUUID]);
          if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v24, v13))
          {
          }

          else
          {
            id v25 = (void *)objc_claimAutoreleasedReturnValue([v22 subAtomicFromAtomicInstanceUUID]);
            unsigned int v26 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v25, v66);

            id v13 = v66;
            if (!v26) {
              goto LABEL_16;
            }
          }

          -[NSMutableArray addObject:](v67, "addObject:", v18);
          id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v71, "logger"));
          id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

          if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
          {
            __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager summary](v71, "summary"));
            uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
            *(_DWORD *)int buf = 138544386;
            id v82 = v29;
            __int16 v83 = 2114;
            id v84 = v63;
            __int16 v85 = 2114;
            id v86 = v64;
            __int16 v87 = 2114;
            uint64_t v88 = (uint64_t)v66;
            __int16 v89 = 2114;
            __int128 v90 = v30;
            _os_log_impl( &dword_0,  v28,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n [REMOVAL] {%{public}@} (%{public}@) removing by UUID | setAtomicInstanceUUID:%{public}@ | nextSetAtomicIns tance:%{public}@",  buf,  0x34u);
          }

          id v13 = v66;
        }

- (void)setLockUsageMapEliminateForClientDomain:(id)a3 forSetIdentifier:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v11 = -[MADAutoAssetControlManager newSetLockUsageMapKeyForClientDomain:forSetIdentifier:]( self,  "newSetLockUsageMapKeyForClientDomain:forSetIdentifier:",  v7,  v6);
  if (v11)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager setLockUsageMap](self, "setLockUsageMap"));
    [v10 removeObjectForKey:v11];
  }
}

- (int)setLockUsageMapForAtomicInstance:(id)a3 clientLockUsageMap:(id)a4 lockReason:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  if (v10)
  {
    id v32 = v10;
    id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v32, 1LL));
  }

  else
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v9 allKeys]);
  }

  unsigned int v26 = v10;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  id v14 = v13;
  id v15 = [v14 countByEnumeratingWithState:&v27 objects:v31 count:16];
  if (v15)
  {
    id v16 = v15;
    int v17 = 0;
    uint64_t v18 = *(void *)v28;
    do
    {
      for (os_log_t i = 0LL; i != v16; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v28 != v18) {
          objc_enumerationMutation(v14);
        }
        id v20 = [v9 safeObjectForKey:*(void *)(*((void *)&v27 + 1) + 8 * (void)i) ofClass:objc_opt_class(NSDictionary)];
        id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
        if (v21)
        {
          id v22 = [v21 safeObjectForKey:v8 ofClass:objc_opt_class(NSNumber)];
          BOOL v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
          id v24 = v23;
          if (v23) {
            v17 += [v23 intValue];
          }
        }
      }

      id v16 = [v14 countByEnumeratingWithState:&v27 objects:v31 count:16];
    }

    while (v16);
  }

  else
  {
    int v17 = 0;
  }

  return v17;
}

- (id)shortTermLockSetDescriptor:(id)a3 forSetDescriptor:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int128 v70 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v74 = v6;
  __int128 v73 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:shortTermLockSetDescriptor",  v6);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 clientDomainName]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSetIdentifier]);
  __int128 v72 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager latestShortTermLockableAtomicInstanceForClientDomain:forAssetSetIdentifier:]( self,  "latestShortTermLockableAtomicInstanceForClientDomain:forAssetSetIdentifier:",  v10,  v11));

  id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 clientDomainName]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSetIdentifier]);
  uint64_t v14 = objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v12,  v13,  @"specific"));

  id v15 = (void *)objc_claimAutoreleasedReturnValue([v7 clientDomainName]);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSetIdentifier]);
  uint64_t v17 = objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v15,  v16,  0LL));

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v7 clientDomainName]);
  id v19 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSetIdentifier]);
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v7 latestDownloadedAtomicInstance]);
  id v21 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v18,  v19,  v20));

  id v22 = (void *)objc_claimAutoreleasedReturnValue([v7 latestDownloadedAtomicInstance]);
  BOOL v23 = self;
  id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager locateSetStatusByInstance:](self, "locateSetStatusByInstance:", v22));

  __int128 v71 = (void *)v14;
  __int128 v68 = v24;
  __int128 v69 = (void *)v17;
  if (v14 && v17 && v21 && v24)
  {
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v7 clientDomainName]);
    unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSetIdentifier]);
    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v7 latestDownloadedAtomicInstance]);
    LOBYTE(v66) = 1;
    uint64_t v28 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildReportedSetStatus:forClientDomainName:forSetIdentifier:forAtomicInstance:withFoundSetDescriptor:withSubAtomicInstance:reportingLocalContentURLs:]( v23,  "buildReportedSetStatus:forClientDomainName:forSetIdentifier:forAtomicInstance:withFoundSetDescriptor:withS ubAtomicInstance:reportingLocalContentURLs:",  v74,  v25,  v26,  v27,  v7,  0LL,  v66));

    __int128 v67 = (void *)v28;
    if (v72)
    {
      __int128 v29 = v73;
      uint64_t v30 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _shortTermPersistSetStatus:forSetDescriptor:persistingSetStatus:toFilename:]( v23,  "_shortTermPersistSetStatus:forSetDescriptor:persistingSetStatus:toFilename:",  v73,  v7,  v28,  v21));
      id v31 = v23;
      if (v30)
      {
        id v32 = (void *)v30;
        id v33 = 0LL;
        uint64_t v34 = v70;
        id v35 = (void *)v28;
LABEL_35:
        id v42 = v74;
LABEL_40:

        goto LABEL_41;
      }

      __int128 v50 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( v23,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v72));
      uint64_t v34 = v70;
      id v42 = v74;
      if (v50)
      {
        id v51 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager chooseNewerSetDescriptor:considering:]( v31,  "chooseNewerSetDescriptor:considering:",  v7,  v50));
        id v52 = (void *)objc_claimAutoreleasedReturnValue([v51 latestDownloadedAtomicInstance]);
        id v53 = (void *)objc_claimAutoreleasedReturnValue([v7 latestDownloadedAtomicInstance]);

        if (v52 != v53)
        {
          id v32 = 0LL;
          id v35 = v67;
LABEL_39:

          id v33 = 0LL;
          goto LABEL_40;
        }
      }

      else
      {
        id v56 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v31, "autoControlManagerFSM"));
        uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue([v56 diag]);
        id v58 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} unable to determine set-descriptor for atomic-instance that should be currently symlinked | atomic-instance:%@",  v73,  v72);
        [v57 trackAnomaly:@"AUTO-CONTROL" forReason:v58 withResult:6103 withError:0];
      }

      id v32 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _shortTermCreateSymbolicLink:symbolicLinkFilename:linkedToFilename:forSetDescriptor:usingFileManager:]( v31,  "_shortTermCreateSymbolicLink:symbolicLinkFilename:linkedToFilename:forSetDescriptor:usingFileManager:",  v73,  v69,  v21,  v7,  v70));
      id v35 = v67;
      if (!v32) {
        -[MADAutoAssetControlManager trackShortTermLockedSetDescriptor:](v31, "trackShortTermLockedSetDescriptor:", v7);
      }
      goto LABEL_39;
    }

    uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v7 clientDomainName]);
    uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSetIdentifier]);
    id v45 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockDirectory:forAssetSetIdentifier:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockDirectory:forAssetSetIdentifier:",  v43,  v44));

    NSFileAttributeKey v82 = NSFilePosixPermissions;
    __int16 v83 = &off_38EFE0;
    id v46 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v83,  &v82,  1LL));
    id v75 = 0LL;
    LODWORD(v44) = [v70 createDirectoryAtPath:v45 withIntermediateDirectories:1 attributes:v46 error:&v75];
    id v33 = v75;

    __int128 v29 = v73;
    if ((_DWORD)v44)
    {
      id v31 = v23;
      if ([v70 createFileAtPath:v71 contents:0 attributes:0])
      {
        __int128 v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v23, "logger"));
        uint64_t v48 = (os_log_s *)objc_claimAutoreleasedReturnValue([v47 oslog]);

        if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
        {
          id v49 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
          *(_DWORD *)int buf = 138543874;
          __int128 v77 = v73;
          __int16 v78 = 2114;
          __int128 v79 = v71;
          __int16 v80 = 2114;
          uint64_t v81 = v49;
          _os_log_impl( &dword_0,  v48,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][FILE]{%{public}@} created SHORT-TERM atomic-instance file | filename:%{public}@ | setDescr iptor:%{public}@",  buf,  0x20u);
        }

        id v35 = v67;
        id v32 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _shortTermPersistSetStatus:forSetDescriptor:persistingSetStatus:toFilename:]( v23,  "_shortTermPersistSetStatus:forSetDescriptor:persistingSetStatus:toFilename:",  v73,  v7,  v67,  v21));
        uint64_t v34 = v70;
        if (!v32)
        {
          id v32 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _shortTermCreateSymbolicLink:symbolicLinkFilename:linkedToFilename:forSetDescriptor:usingFileManager:]( v31,  "_shortTermCreateSymbolicLink:symbolicLinkFilename:linkedToFilename:forSetDescriptor:usingFileManager:",  v73,  v69,  v21,  v7,  v70));
          if (!v32) {
            -[MADAutoAssetControlManager trackShortTermLockedSetDescriptor:]( v31,  "trackShortTermLockedSetDescriptor:",  v7);
          }
        }

        goto LABEL_34;
      }

      __int128 v55 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"unable to create SHORT-TERM lock atomic-instance file | filename:%@ | setDescriptor:%@",  v71,  v45);
      id v32 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildShortTermLockError:code:description:forSetDescriptor:underlyingError:]( v23,  "buildShortTermLockError:code:description:forSetDescriptor:underlyingError:",  v73,  6583LL,  v55,  v7,  v33));

      uint64_t v34 = v70;
    }

    else
    {
      __int128 v54 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"unable to create directory for SHORT-TERM locking | shortTermDirectory:%@",  v45);
      id v31 = v23;
      id v32 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildShortTermLockError:code:description:forSetDescriptor:underlyingError:]( v23,  "buildShortTermLockError:code:description:forSetDescriptor:underlyingError:",  v73,  6583LL,  v54,  v7,  v33));

      uint64_t v34 = v70;
    }

    id v35 = v67;
LABEL_34:

    goto LABEL_35;
  }

  id v36 = (const __CFString *)v17;
  __int128 v37 = objc_alloc(&OBJC_CLASS___NSString);
  id v38 = @"N";
  if (v14) {
    id v39 = (const __CFString *)v14;
  }
  else {
    id v39 = @"N";
  }
  if (!v17) {
    id v36 = @"N";
  }
  if (v21) {
    id v40 = v21;
  }
  else {
    id v40 = @"N";
  }
  if (v24) {
    id v38 = (__CFString *)objc_claimAutoreleasedReturnValue([v24 summary]);
  }
  id v41 = -[NSString initWithFormat:]( v37,  "initWithFormat:",  @"unable to prepare for SHORT-TERM locking [MISSING-REQUIRED] | atomic-instance filenames (specific:%@,latest:%@,base:%@) | currentStatus:%@",  v39,  v36,  v40,  v38);
  id v31 = v23;
  id v32 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildShortTermLockError:code:description:forSetDescriptor:underlyingError:]( v23,  "buildShortTermLockError:code:description:forSetDescriptor:underlyingError:",  v73,  6101LL,  v41,  v7,  0LL));

  if (v24) {
  id v33 = 0LL;
  }
  id v42 = v74;
  uint64_t v34 = v70;
  __int128 v29 = v73;
LABEL_41:
  __int128 v59 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v31, "logger"));
  __int128 v60 = (os_log_s *)objc_claimAutoreleasedReturnValue([v59 oslog]);

  if (v32)
  {
    id v61 = v71;
    if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
    {
      __int128 v62 = (void *)objc_claimAutoreleasedReturnValue([v32 checkedDescription]);
      __int16 v63 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
      *(_DWORD *)int buf = 138543874;
      __int128 v77 = v29;
      __int16 v78 = 2114;
      __int128 v79 = v62;
      __int16 v80 = 2114;
      uint64_t v81 = v63;
      _os_log_error_impl( &dword_0,  v60,  OS_LOG_TYPE_ERROR,  "[AUTO-SHORT-TERM][SUPPORT]{%{public}@} ERROR preparing for SHORT-TERM locking | error:%{public}@ | setDescriptor:%{public}@",  buf,  0x20u);

      id v61 = v71;
      id v42 = v74;
    }
  }

  else
  {
    id v61 = v71;
    if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
    {
      id v64 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
      *(_DWORD *)int buf = 138543618;
      __int128 v77 = v29;
      __int16 v78 = 2114;
      __int128 v79 = v64;
      _os_log_impl( &dword_0,  v60,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][SUPPORT]{%{public}@} SUCCESS preparing for SHORT-TERM locking | setDescriptor:%{public}@",  buf,  0x16u);

      id v61 = v71;
    }
  }

  return v32;
}

- (void)trackShortTermLockedSetDescriptor:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);
  id v9 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v7,  v8);

  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager shortTermLockedLatestByIdentifier]( self,  "shortTermLockedLatestByIdentifier"));
  id v11 = [v10 safeObjectForKey:v9 ofClass:objc_opt_class(NSString)];
  id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  id v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v12));
  if (v13)
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager chooseNewerSetDescriptor:considering:]( self,  "chooseNewerSetDescriptor:considering:",  v4,  v13));
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 latestDownloadedAtomicInstance]);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);

    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);
    -[MADAutoAssetControlManager _shortTermChangeAtomicInstance:forAtomicInstance:toShortTermSupported:]( self,  "_shortTermChangeAtomicInstance:forAtomicInstance:toShortTermSupported:",  @"trackShortTermLockedSetDescriptor",  v17,  1LL);

    if (v15 != v16) {
      goto LABEL_8;
    }
  }

  else
  {
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);
    -[MADAutoAssetControlManager _shortTermChangeAtomicInstance:forAtomicInstance:toShortTermSupported:]( self,  "_shortTermChangeAtomicInstance:forAtomicInstance:toShortTermSupported:",  @"trackShortTermLockedSetDescriptor",  v18,  1LL);
  }

  id v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager shortTermLockedLatestByIdentifier]( self,  "shortTermLockedLatestByIdentifier"));
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);
  [v19 setSafeObject:v20 forKey:v9];

  id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v23 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
    int v32 = 138543618;
    id v33 = v23;
    __int16 v34 = 2114;
    id v35 = v24;
    _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][LATEST]{trackShortTermLockedSetDescriptor} latest supporting SHORT-TERM locking | atomicInstance :%{public}@ | setDescriptor:%{public}@",  (uint8_t *)&v32,  0x16u);
  }

LABEL_8:
  id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager shortTermLockedByAtomicInstance](self, "shortTermLockedByAtomicInstance"));
  unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);
  [v25 setSafeObject:v9 forKey:v26];

  __int128 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

  if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
    int v32 = 138543618;
    id v33 = v29;
    __int16 v34 = 2114;
    id v35 = v30;
    _os_log_impl( &dword_0,  v28,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][INSTANCE]{trackShortTermLockedSetDescriptor} now supporting SHORT-TERM locking | atomicInstance: %{public}@ | setDescriptor:%{public}@",  (uint8_t *)&v32,  0x16u);
  }

  id v31 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);
  +[MADAutoAssetControlManager postSetNotificationName:forAssetSetIdentifier:fromModule:fromLocation:]( &OBJC_CLASS___MADAutoAssetControlManager,  "postSetNotificationName:forAssetSetIdentifier:fromModule:fromLocation:",  @"ATOMIC_INSTANCE_FIRST_LOCKED",  v31,  @"AUTO-CONTROL",  @"trackShortTermLockedSetDescriptor");
}

- (BOOL)removeShortTermLockingOfSetDescriptor:(id)a3 forSetDescriptor:(id)a4 endingAll:(BOOL)a5 error:(id *)a6
{
  id v8 = a3;
  id v9 = a4;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  id v12 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:removeShortTermLockingOfSetDescriptor",  v8);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSetIdentifier]);
  uint64_t v15 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager latestShortTermLockableAtomicInstanceForClientDomain:forAssetSetIdentifier:]( self,  "latestShortTermLockableAtomicInstanceForClientDomain:forAssetSetIdentifier:",  v13,  v14));

  id v128 = (void *)v15;
  if (!v15)
  {
    unsigned int v26 = 0LL;
    BOOL v28 = 1;
    goto LABEL_92;
  }

  uint64_t v141 = objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  __int16 v132 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v129 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSetIdentifier]);
  id v18 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setLockUsageMapForClientDomain:forSetIdentifier:]( self,  "setLockUsageMapForClientDomain:forSetIdentifier:",  v16,  v17));

  id v19 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSetIdentifier]);
  id v146 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v19,  v20);

  __int128 v126 = v18;
  if (!v18)
  {
    id v29 = 0LL;
    unsigned int v26 = 0LL;
    char v135 = 1;
    goto LABEL_48;
  }

  id v21 = (void *)objc_claimAutoreleasedReturnValue([v9 latestDownloadedAtomicInstance]);
  int v22 = -[MADAutoAssetControlManager setLockUsageMapForAtomicInstance:clientLockUsageMap:lockReason:]( self,  "setLockUsageMapForAtomicInstance:clientLockUsageMap:lockReason:",  v21,  v18,  0LL);

  BOOL v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
    *(_DWORD *)int buf = 138544130;
    __int128 v167 = v12;
    __int16 v168 = 1024;
    *(_DWORD *)__int128 v169 = v22;
    *(_WORD *)&v169[4] = 2114;
    *(void *)&v169[6] = v128;
    *(_WORD *)&v169[14] = 2114;
    *(void *)&v169[16] = v25;
    _os_log_impl( &dword_0,  v24,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][INSTANCE]{%{public}@} from clientLockUsageMap, currently held standard locks:%d | latestShortTer mLockableAtomicInstance:%{public}@ | setDescriptor:%{public}@",  buf,  0x26u);
  }

  if (v22 <= 1)
  {
    char v135 = 0;
    id v124 = v8;
    __int128 v162 = 0u;
    __int128 v163 = 0u;
    __int128 v160 = 0u;
    __int128 v161 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager shortTermLockedByAtomicInstance](self, "shortTermLockedByAtomicInstance"));
    id v30 = [obj countByEnumeratingWithState:&v160 objects:v171 count:16];
    if (v30)
    {
      id v31 = v30;
      id v134 = 0LL;
      uint64_t v32 = *(void *)v161;
      p_ivars = &MobileAssetKeyManager__metaData.ivars;
      do
      {
        __int16 v34 = 0LL;
        id v138 = v31;
        do
        {
          if (*(void *)v161 != v32) {
            objc_enumerationMutation(obj);
          }
          uint64_t v35 = *(void *)(*((void *)&v160 + 1) + 8LL * (void)v34);
          id v36 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager shortTermLockedByAtomicInstance]( self,  "shortTermLockedByAtomicInstance"));
          id v37 = [v36 safeObjectForKey:v35 ofClass:objc_opt_class(NSString)];
          id v38 = (void *)objc_claimAutoreleasedReturnValue(v37);

          if (v35 && -[__objc2_ivar_list stringIsEqual:to:](p_ivars[155], "stringIsEqual:to:", v38, v146))
          {
            uint64_t v39 = v32;
            id v40 = v12;
            id v41 = p_ivars;
            id v42 = p_ivars[155];
            uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v9 latestDownloadedAtomicInstance]);
            LODWORD(v42) = -[__objc2_ivar_list stringIsEqual:to:](v42, "stringIsEqual:to:", v35, v43);

            if ((_DWORD)v42)
            {
              -[NSMutableArray addObject:](v132, "addObject:", v35);
              p_ivars = v41;
            }

            else
            {
              uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v35));
              id v45 = v44;
              if (v134)
              {
                uint64_t v46 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager chooseNewerSetDescriptor:considering:]( self,  "chooseNewerSetDescriptor:considering:",  v134,  v44));

                id v134 = (id)v46;
              }

              else
              {
                id v134 = v44;
              }

              p_ivars = v41;
            }

            id v12 = v40;
            uint64_t v32 = v39;
            id v31 = v138;
          }

          __int16 v34 = (char *)v34 + 1;
        }

        while (v31 != v34);
        id v31 = [obj countByEnumeratingWithState:&v160 objects:v171 count:16];
      }

      while (v31);
    }

    else
    {
      id v134 = 0LL;
    }

    if (-[NSMutableArray count](v132, "count"))
    {
      __int128 v158 = 0u;
      __int128 v159 = 0u;
      __int128 v156 = 0u;
      __int128 v157 = 0u;
      id v136 = v132;
      id obja = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v136,  "countByEnumeratingWithState:objects:count:",  &v156,  v170,  16LL);
      id v18 = 0LL;
      if (obja)
      {
        uint64_t v139 = *(void *)v157;
        while (2)
        {
          __int128 v47 = 0LL;
          uint64_t v48 = v18;
          do
          {
            if (*(void *)v157 != v139) {
              objc_enumerationMutation(v136);
            }
            uint64_t v49 = *(void *)(*((void *)&v156 + 1) + 8LL * (void)v47);
            __int128 v50 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
            id v51 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSetIdentifier]);
            id v52 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v50,  v51,  v49));

            id v155 = v48;
            id v53 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _shortTermSharedLockOpenExclusive:forSetDescriptor:atomicInstanceFilename:error:]( self,  "_shortTermSharedLockOpenExclusive:forSetDescriptor:atomicInstanceFilename:error:",  v12,  v9,  v52,  &v155));
            id v18 = v155;

            if (v53)
            {
              -[NSMutableArray addObject:](v129, "addObject:", v53);
            }

            else
            {
              id v131 = v18;
              __int128 v54 = (char *)[v18 code];
              __int128 v55 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v56 = (os_log_s *)objc_claimAutoreleasedReturnValue([v55 oslog]);

              BOOL v57 = os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT);
              if (v54 == "ks/Network.framework/Network")
              {
                if (v57)
                {
                  __int128 v60 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
                  *(_DWORD *)int buf = 138543874;
                  __int128 v167 = v12;
                  __int16 v168 = 2114;
                  *(void *)__int128 v169 = v49;
                  *(_WORD *)&v169[8] = 2114;
                  *(void *)&v169[10] = v60;
                  _os_log_impl( &dword_0,  v56,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][INSTANCE]{%{public}@} unable to end SHORT-TERM locking (shared lock held) | nextAt omicInstance:%{public}@ | setDescriptor:%{public}@",  buf,  0x20u);
                }

                id v18 = v131;
                unsigned int v26 = v18;
                goto LABEL_46;
              }

              if (v57)
              {
                id v58 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
                __int128 v59 = (void *)objc_claimAutoreleasedReturnValue([v131 checkedDescription]);
                *(_DWORD *)int buf = 138544130;
                __int128 v167 = v12;
                __int16 v168 = 2114;
                *(void *)__int128 v169 = v49;
                *(_WORD *)&v169[8] = 2114;
                *(void *)&v169[10] = v58;
                *(_WORD *)&v169[18] = 2114;
                *(void *)&v169[20] = v59;
                _os_log_impl( &dword_0,  v56,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][INSTANCE]{%{public}@} unable to end SHORT-TERM locking (considering as no shared loc ks) | nextAtomicInstance:%{public}@ | setDescriptor:%{public}@ | underlyingError:%{public}@",  buf,  0x2Au);
              }

              id v18 = v131;
            }

            __int128 v47 = (char *)v47 + 1;
            uint64_t v48 = v18;
          }

          while (obja != v47);
          id obja = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v136,  "countByEnumeratingWithState:objects:count:",  &v156,  v170,  16LL);
          if (obja) {
            continue;
          }
          break;
        }
      }

      unsigned int v26 = 0LL;
LABEL_46:
      id v8 = v124;
    }

    else
    {
      id v18 = 0LL;
      unsigned int v26 = 0LL;
      char v135 = 1;
      id v8 = v124;
    }

    id v29 = v134;
LABEL_48:
    unsigned int v133 = v29;
    id v130 = v18;
    if (v26)
    {
      BOOL v27 = 0;
      goto LABEL_81;
    }

    id v61 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
    __int128 v62 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSetIdentifier]);
    __int16 v63 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v61,  v62,  0LL));

    id v64 = (void *)objc_claimAutoreleasedReturnValue([v9 latestDownloadedAtomicInstance]);
    unsigned int v65 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v64, v128);

    id v125 = v8;
    if (v65)
    {
      char v66 = (char)v133;
      if (v133)
      {
        __int128 v67 = (void *)objc_claimAutoreleasedReturnValue([v133 clientDomainName]);
        __int128 v68 = (void *)objc_claimAutoreleasedReturnValue([v133 assetSetIdentifier]);
        __int128 v69 = (void *)objc_claimAutoreleasedReturnValue([v133 latestDownloadedAtomicInstance]);
        __int128 v70 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v67,  v68,  v69));

        __int128 v71 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _shortTermCreateSymbolicLink:symbolicLinkFilename:linkedToFilename:forSetDescriptor:usingFileManager:]( self,  "_shortTermCreateSymbolicLink:symbolicLinkFilename:linkedToFilename:forSetDescriptor:usingFileManager:",  v12,  v63,  v70,  v9,  v141));
        if (v71
          && (id v72 =  -[MADAutoAssetControlManager _shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:]( self,  "_shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:",  v12,  v63,  v141,  @"atomic-instance symlink file (to re-attempt symlink on standard-unlock of newest)"),  v73 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _shortTermCreateSymbolicLink:symbolicLinkFilename:linkedToFilename:forSetDescriptor:usingFileManager:]( self,  "_shortTermCreateSymbolicLink:symbolicLinkFilename:linkedToFilename:forSetDescriptor:usingFileManager:",  v12,  v63,  v70,  v9,  v141)),  v73,  v73))
        {
          char v66 = 0;
        }

        else
        {
          id objb = v63;
          id v75 = (void *)objc_claimAutoreleasedReturnValue([v133 clientDomainName]);
          __int128 v76 = (void *)objc_claimAutoreleasedReturnValue([v133 assetSetIdentifier]);
          id v77 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v75,  v76);

          __int16 v78 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager shortTermLockedLatestByIdentifier]( self,  "shortTermLockedLatestByIdentifier"));
          __int128 v79 = (void *)objc_claimAutoreleasedReturnValue([v133 latestDownloadedAtomicInstance]);
          [v78 setSafeObject:v79 forKey:v77];

          __int16 v80 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          uint64_t v81 = (os_log_s *)objc_claimAutoreleasedReturnValue([v80 oslog]);

          if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
          {
            NSFileAttributeKey v82 = (void *)objc_claimAutoreleasedReturnValue([v133 latestDownloadedAtomicInstance]);
            __int16 v83 = (void *)objc_claimAutoreleasedReturnValue([v133 summary]);
            *(_DWORD *)int buf = 138543874;
            __int128 v167 = v12;
            __int16 v168 = 2114;
            *(void *)__int128 v169 = v82;
            *(_WORD *)&v169[8] = 2114;
            *(void *)&v169[10] = v83;
            _os_log_impl( &dword_0,  v81,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][LATEST]{%{public}@} latest removed when older supporting SHORT-TERM locking | atomicInst ance:%{public}@ | otherSetDescriptor:%{public}@",  buf,  0x20u);
          }

          char v66 = 1;
          __int16 v63 = objb;
        }

        int v74 = 0;
        uint64_t v84 = v141;
      }

      else
      {
        uint64_t v84 = v141;
        unsigned int v133 = 0LL;
        __int128 v70 = v130;
        int v74 = 1;
        id v130 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:]( self,  "_shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:",  v12,  v63,  v141,  @"atomic-instance shared lock file (no other atomic-instance supporting SHORT-TERM locking)"));
      }

      if (!v146 || (v66 & 1) != 0) {
        goto LABEL_67;
      }
      __int16 v85 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager shortTermLockedLatestByIdentifier]( self,  "shortTermLockedLatestByIdentifier"));
      [v85 removeObjectForKey:v146];

      id v86 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      __int16 v87 = (os_log_s *)objc_claimAutoreleasedReturnValue([v86 oslog]);

      if (os_log_type_enabled(v87, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v88 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
        *(_DWORD *)int buf = 138543874;
        __int128 v167 = v12;
        __int16 v168 = 2114;
        *(void *)__int128 v169 = v146;
        *(_WORD *)&v169[8] = 2114;
        *(void *)&v169[10] = v88;
        _os_log_impl( &dword_0,  v87,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][LATEST]{%{public}@} no longer supporting SHORT-TERM locking | shortTermLockedKey:%{public}@ | otherSetDescriptor:%{public}@",  buf,  0x20u);
      }
    }

    else
    {
      int v74 = 0;
    }

    uint64_t v84 = v141;
LABEL_67:

    BOOL v123 = v74 != 0;
    __int128 v153 = 0u;
    __int128 v154 = 0u;
    __int128 v151 = 0u;
    __int128 v152 = 0u;
    uint64_t v137 = v132;
    id objc = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v137,  "countByEnumeratingWithState:objects:count:",  &v151,  v165,  16LL);
    if (objc)
    {
      uint64_t v140 = *(void *)v152;
      do
      {
        for (os_log_t i = 0LL; i != objc; os_log_t i = (char *)i + 1)
        {
          if (*(void *)v152 != v140) {
            objc_enumerationMutation(v137);
          }
          uint64_t v90 = *(void *)(*((void *)&v151 + 1) + 8LL * (void)i);
          __int128 v91 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
          __int128 v92 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSetIdentifier]);
          __int128 v93 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v91,  v92,  v90));

          __int128 v94 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
          __int128 v95 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSetIdentifier]);
          id v96 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v94,  v95);

          __int128 v97 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager shortTermLockedLatestByIdentifier]( self,  "shortTermLockedLatestByIdentifier"));
          id v98 = [v97 safeObjectForKey:v146 ofClass:objc_opt_class(NSString)];
          __int16 v99 = (void *)objc_claimAutoreleasedReturnValue(v98);

          id v100 =  -[MADAutoAssetControlManager _shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:]( self,  "_shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:",  v12,  v93,  v84,  @"atomic-instance shared lock file (just removed from supporting SHORT-TERM locking)");
          -[MADAutoAssetControlManager _shortTermChangeAtomicInstance:forAtomicInstance:toShortTermSupported:]( self,  "_shortTermChangeAtomicInstance:forAtomicInstance:toShortTermSupported:",  v12,  v90,  0LL);
          __int16 v101 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager shortTermLockedByAtomicInstance]( self,  "shortTermLockedByAtomicInstance"));
          [v101 removeObjectForKey:v90];

          if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v90, v99))
          {
            __int128 v102 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager shortTermLockedLatestByIdentifier]( self,  "shortTermLockedLatestByIdentifier"));
            [v102 removeObjectForKey:v96];

            __int128 v103 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            __int128 v104 = (os_log_s *)objc_claimAutoreleasedReturnValue([v103 oslog]);

            if (os_log_type_enabled(v104, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)int buf = 138543618;
              __int128 v167 = v12;
              __int16 v168 = 2114;
              *(void *)__int128 v169 = v96;
              _os_log_impl( &dword_0,  v104,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][LATEST]{%{public}@} removed latest | shortTermLatestLockedKey:%{public}@",  buf,  0x16u);
            }
          }

          __int128 v105 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          uint64_t v106 = (os_log_s *)objc_claimAutoreleasedReturnValue([v105 oslog]);

          if (os_log_type_enabled(v106, OS_LOG_TYPE_DEFAULT))
          {
            __int16 v107 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
            *(_DWORD *)int buf = 138543874;
            __int128 v167 = v12;
            __int16 v168 = 2114;
            *(void *)__int128 v169 = v90;
            *(_WORD *)&v169[8] = 2114;
            *(void *)&v169[10] = v107;
            _os_log_impl( &dword_0,  v106,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][INSTANCE]{%{public}@} no longer supporting SHORT-TERM locking | atomicInstance:%{public} @ | setDescriptor:%{public}@",  buf,  0x20u);
          }

          uint64_t v84 = v141;
        }

        id objc = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v137,  "countByEnumeratingWithState:objects:count:",  &v151,  v165,  16LL);
      }

      while (objc);
    }

    char v135 = 1;
    unsigned int v26 = 0LL;
    id v8 = v125;
    BOOL v27 = v123;
    goto LABEL_81;
  }

  unsigned int v26 = 0LL;
  unsigned int v133 = 0LL;
  BOOL v27 = 0;
  id v130 = 0LL;
  char v135 = 1;
LABEL_81:
  __int128 v149 = 0u;
  __int128 v150 = 0u;
  __int128 v147 = 0u;
  __int128 v148 = 0u;
  uint64_t v108 = v129;
  id v109 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v108,  "countByEnumeratingWithState:objects:count:",  &v147,  v164,  16LL);
  if (v109)
  {
    id v110 = v109;
    uint64_t v111 = *(void *)v148;
    do
    {
      for (j = 0LL; j != v110; j = (char *)j + 1)
      {
        if (*(void *)v148 != v111) {
          objc_enumerationMutation(v108);
        }
        -[MADAutoAssetControlManager _shortTermSharedLockClose:forSetDescriptor:atomicInstanceFileDescriptor:]( self,  "_shortTermSharedLockClose:forSetDescriptor:atomicInstanceFileDescriptor:",  v12,  v9,  *(void *)(*((void *)&v147 + 1) + 8LL * (void)j));
      }

      id v110 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v108,  "countByEnumeratingWithState:objects:count:",  &v147,  v164,  16LL);
    }

    while (v110);
  }

  if (v27)
  {
    id v113 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
    id v114 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSetIdentifier]);
    unsigned int v115 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockDirectory:forAssetSetIdentifier:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockDirectory:forAssetSetIdentifier:",  v113,  v114));

    id v116 = (void *)v141;
    unsigned int v117 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:]( self,  "_shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:",  v12,  v115,  v141,  @"atomic-instance shared lock directory (no more SHORT-TERM locking support for the set-identifier)"));
  }

  else
  {
    id v116 = (void *)v141;
    unsigned int v117 = v130;
  }

  BOOL v28 = v135;
LABEL_92:
  if (a6) {
    *a6 = v26;
  }
  id v118 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v119 = (os_log_s *)objc_claimAutoreleasedReturnValue([v118 oslog]);

  if (v26)
  {
    if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR))
    {
      unsigned int v120 = (void *)objc_claimAutoreleasedReturnValue([v26 checkedDescription]);
      id v121 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
      *(_DWORD *)int buf = 138543874;
      __int128 v167 = v12;
      __int16 v168 = 2114;
      *(void *)__int128 v169 = v120;
      *(_WORD *)&v169[8] = 2114;
      *(void *)&v169[10] = v121;
      _os_log_error_impl( &dword_0,  v119,  OS_LOG_TYPE_ERROR,  "[AUTO-SHORT-TERM][SUPPORT]{%{public}@} ERROR removing SHORT-TERM locking | error:%{public}@ | setDescriptor:%{public}@",  buf,  0x20u);

LABEL_99:
    }
  }

  else if (os_log_type_enabled(v119, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v120 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
    *(_DWORD *)int buf = 138543618;
    __int128 v167 = v12;
    __int16 v168 = 2114;
    *(void *)__int128 v169 = v120;
    _os_log_impl( &dword_0,  v119,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][SUPPORT]{%{public}@} SUCCESS removing SHORT-TERM locking | setDescriptor:%{public}@",  buf,  0x16u);
    goto LABEL_99;
  }

  return v28;
}

- (id)_shortTermSharedLockOpenExclusive:(id)a3 forSetDescriptor:(id)a4 atomicInstanceFilename:(id)a5 error:(id *)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 extendedStateQueue]);
  dispatch_assert_queue_V2(v14);

  uint64_t v15 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_shortTermSharedLockOpenExclusive",  v10);
  id v16 = v12;
  unsigned int v17 = open((const char *)[v16 UTF8String], 36);
  if ((v17 & 0x80000000) != 0)
  {
    BOOL v23 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} unable to obtain exclusive lock | errno:%d | atomicInstanceFilename:%@",  v15,  *__error(),  v16);
    id v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildShortTermLockError:code:description:forSetDescriptor:underlyingError:]( self,  "buildShortTermLockError:code:description:forSetDescriptor:underlyingError:",  v15,  6584LL,  v23,  v11,  0LL));

    if (!v19) {
      goto LABEL_4;
    }
  }

  else
  {
    id v18 = -[NSNumber initWithInteger:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithInteger:", v17);
    if (v18)
    {
LABEL_5:
      id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        int v22 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);
        *(_DWORD *)int buf = 138544130;
        id v29 = v15;
        __int16 v30 = 1024;
        unsigned int v31 = v17;
        __int16 v32 = 2114;
        id v33 = v16;
        __int16 v34 = 2114;
        uint64_t v35 = v22;
        _os_log_impl( &dword_0,  v21,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][EXCLUSIVE]{%{public}@} SUCCESS(%d) | atomicInstanceFilename:%{public}@ | setDescriptor:%{public}@",  buf,  0x26u);
      }

      id v19 = 0LL;
      goto LABEL_12;
    }

    -[MADAutoAssetControlManager _shortTermSharedLockClose:forSetDescriptor:atomicInstanceFileDescriptor:]( self,  "_shortTermSharedLockClose:forSetDescriptor:atomicInstanceFileDescriptor:",  v10,  v11,  0LL);
    id v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildShortTermLockError:code:description:forSetDescriptor:underlyingError:]( self,  "buildShortTermLockError:code:description:forSetDescriptor:underlyingError:",  v15,  6584LL,  @"insufficient memory to perform removal",  v11,  0LL));
    if (!v19)
    {
LABEL_4:
      id v18 = 0LL;
      goto LABEL_5;
    }
  }

  id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

  if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
  {
    unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue([v19 checkedDescription]);
    BOOL v27 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);
    *(_DWORD *)int buf = 138544386;
    id v29 = v15;
    __int16 v30 = 1024;
    unsigned int v31 = v17;
    __int16 v32 = 2114;
    id v33 = v16;
    __int16 v34 = 2114;
    uint64_t v35 = v26;
    __int16 v36 = 2114;
    id v37 = v27;
    _os_log_error_impl( &dword_0,  v21,  OS_LOG_TYPE_ERROR,  "[AUTO-SHORT-TERM][EXCLUSIVE]{%{public}@} ERROR(%d) | atomicInstanceFilename:%{public}@ | returnedError:%{public}@ | setDescriptor:%{public}@",  buf,  0x30u);
  }

  id v18 = 0LL;
LABEL_12:

  if (a6) {
    *a6 = v19;
  }

  return v18;
}

- (void)_shortTermSharedLockClose:(id)a3 forSetDescriptor:(id)a4 atomicInstanceFileDescriptor:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  int v13 = [v10 intValue];
  if (close(v13))
  {
    int v14 = *__error();
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 oslog]);

    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
      int v19 = 138544130;
      id v20 = v8;
      __int16 v21 = 1024;
      int v22 = v13;
      __int16 v23 = 1024;
      LODWORD(v24[0]) = v14;
      WORD2(v24[0]) = 2114;
      *(void *)((char *)v24 + 6) = v17;
      _os_log_error_impl( &dword_0,  v16,  OS_LOG_TYPE_ERROR,  "[AUTO-SHORT-TERM][EXCLUSIVE]{%{public}@:_shortTermSharedLockClose} ERROR(%d) | errno:%d | setDescriptor:%{public}@",  (uint8_t *)&v19,  0x22u);
LABEL_6:
    }
  }

  else
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
      int v19 = 138543874;
      id v20 = v8;
      __int16 v21 = 1024;
      int v22 = v13;
      __int16 v23 = 2114;
      v24[0] = v17;
      _os_log_impl( &dword_0,  v16,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][EXCLUSIVE]{%{public}@:_shortTermSharedLockClose} SUCCESS(%d) | setDescriptor:%{public}@",  (uint8_t *)&v19,  0x1Cu);
      goto LABEL_6;
    }
  }
}

- (id)_shortTermCreateSymbolicLink:(id)a3 symbolicLinkFilename:(id)a4 linkedToFilename:(id)a5 forSetDescriptor:(id)a6 usingFileManager:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  id v32 = 0LL;
  [v16 removeItemAtPath:v13 error:&v32];
  id v19 = v32;
  if (v19)
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int16 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      int v22 = (void *)objc_claimAutoreleasedReturnValue([v19 checkedDescription]);
      *(_DWORD *)int buf = 138543618;
      id v34 = v13;
      __int16 v35 = 2114;
      id v36 = v22;
      _os_log_impl( &dword_0,  v21,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][SYMLINK]{_shortTermCreateSymbolicLink} unable to remove symlink (normal if no symlink yet crea ted) | symbolicLinkFilename:%{public}@ | error:%{public}@",  buf,  0x16u);
    }
  }

  id v31 = 0LL;
  unsigned __int8 v23 = [v16 createSymbolicLinkAtPath:v13 withDestinationPath:v14 error:&v31];
  id v24 = v31;
  if ((v23 & 1) != 0)
  {
    id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    unsigned int v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v27 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
      *(_DWORD *)int buf = 138544130;
      id v34 = v12;
      __int16 v35 = 2114;
      id v36 = v13;
      __int16 v37 = 2114;
      id v38 = v14;
      __int16 v39 = 2114;
      id v40 = v27;
      _os_log_impl( &dword_0,  v26,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][SYMLINK]{%{public}@:_shortTermCreateSymbolicLink} created SHORT-TERM locking symlink | %{publi c}@ >=> %{public}@ | setDescriptor:%{public}@",  buf,  0x2Au);
    }

    BOOL v28 = 0LL;
  }

  else
  {
    unsigned int v26 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_shortTermCreateSymbolicLink",  v12);
    id v29 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"unable to create symbolic link for SHORT-TERM locking latest | %@ >=> %@",  v13,  v13);
    BOOL v28 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildShortTermLockError:code:description:forSetDescriptor:underlyingError:]( self,  "buildShortTermLockError:code:description:forSetDescriptor:underlyingError:",  v26,  6583LL,  v29,  v15,  v24));
  }

  return v28;
}

- (id)_shortTermPersistSetStatus:(id)a3 forSetDescriptor:(id)a4 persistingSetStatus:(id)a5 toFilename:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  id v16 = +[MASAutoAssetSetStatus newShimmedToFramework:]( &OBJC_CLASS___MASAutoAssetSetStatus,  "newShimmedToFramework:",  v12);
  if (!v16)
  {
    unsigned __int8 v23 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_shortTermPersistSetStatus",  v10);
    id v24 = objc_alloc(&OBJC_CLASS___NSString);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
    unsigned int v26 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"unable to create shimmed set-status to write to shared lock file | atomicInstanceFilename:%@ | firstLockedSetStatus:%@",  v13,  v25);
    BOOL v27 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildShortTermLockError:code:description:forSetDescriptor:underlyingError:]( self,  "buildShortTermLockError:code:description:forSetDescriptor:underlyingError:",  v23,  6583LL,  v26,  v11,  0LL));

    goto LABEL_14;
  }

  unsigned int v17 = objc_alloc(&OBJC_CLASS___SUCorePersistedState);
  char v18 = objc_opt_respondsToSelector( v17,  "initWithDispatchQueue:withPersistencePath:forPolicyVersion:issuingDefaultLevelLogging:");

  id v19 = objc_alloc(&OBJC_CLASS___SUCorePersistedState);
  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  __int16 v21 = (void *)objc_claimAutoreleasedReturnValue([v20 extendedStateQueue]);
  if ((v18 & 1) != 0) {
    int v22 = -[SUCorePersistedState initWithDispatchQueue:withPersistencePath:forPolicyVersion:issuingDefaultLevelLogging:]( v19,  "initWithDispatchQueue:withPersistencePath:forPolicyVersion:issuingDefaultLevelLogging:",  v21,  v13,  @"1.0",  0LL);
  }
  else {
    int v22 = -[SUCorePersistedState initWithDispatchQueue:withPersistencePath:forPolicyVersion:]( v19,  "initWithDispatchQueue:withPersistencePath:forPolicyVersion:",  v21,  v13,  @"1.0");
  }
  unsigned __int8 v23 = (NSString *)v22;

  if (!v23)
  {
    id v32 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_shortTermPersistSetStatus",  v10);
    id v33 = objc_alloc(&OBJC_CLASS___NSString);
    id v34 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
    __int16 v35 = -[NSString initWithFormat:]( v33,  "initWithFormat:",  @"unable to create persisted-state for shared lock file | atomicInstanceFilename:%@ | firstLockedSetStatus:%@",  v13,  v34);
LABEL_13:
    __int16 v37 = v35;
    BOOL v27 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager buildShortTermLockError:code:description:forSetDescriptor:underlyingError:]( self,  "buildShortTermLockError:code:description:forSetDescriptor:underlyingError:",  v32,  6583LL,  v35,  v11,  0LL));

    goto LABEL_14;
  }

  if (!-[NSString loadPersistedState](v23, "loadPersistedState"))
  {
    id v32 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_shortTermPersistSetStatus",  v10);
    id v36 = objc_alloc(&OBJC_CLASS___NSString);
    id v34 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
    __int16 v35 = -[NSString initWithFormat:]( v36,  "initWithFormat:",  @"unable to load persisted-state for shared lock file | atomicInstanceFilename:%@ | firstLockedSetStatus:%@",  v13,  v34);
    goto LABEL_13;
  }

  -[NSString persistString:forKey:shouldPersist:]( v23,  "persistString:forKey:shouldPersist:",  @"SHORT-TERM",  @"lockerType",  0LL);
  -[NSString persistSecureCodedObject:forKey:shouldPersist:]( v23,  "persistSecureCodedObject:forKey:shouldPersist:",  v16,  @"sharedLockSetStatus",  1LL);
  BOOL v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 oslog]);

  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v30 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);
    id v31 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
    *(_DWORD *)int buf = 138543874;
    id v40 = v13;
    __int16 v41 = 2114;
    id v42 = v30;
    __int16 v43 = 2114;
    uint64_t v44 = v31;
    _os_log_impl( &dword_0,  v29,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM][FILE]{_shortTermPersistSetStatus} created SHORT-TERM atomic-instance file | filename:%{public}@ | setDescriptor:%{public}@ | setStatus:%{public}@ ",  buf,  0x20u);
  }

  BOOL v27 = 0LL;
LABEL_14:

  return v27;
}

- (id)_shortTermSharedLockRemove:(id)a3 removingSharedLockFilename:(id)a4 usingFileManager:(id)a5 removingDescription:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a6;
  id v13 = a5;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  id v26 = 0LL;
  [v13 removeItemAtPath:v11 error:&v26];

  id v16 = v26;
  unsigned int v17 = v16;
  if (v16)
  {
    char v18 = (char *)[v16 code];
    id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);
    if (v18 == (_BYTE *)&dword_0 + 2)
    {
      if (v21)
      {
        *(_DWORD *)int buf = 138543874;
        id v28 = v10;
        __int16 v29 = 2114;
        id v30 = v12;
        __int16 v31 = 2114;
        id v32 = v11;
        int v22 = "[AUTO-SHORT-TERM]{%{public}@:_shortTermSharedLockRemove} attempted to remove %{public}@ [did not exist] | "
              "sharedLockFilename:%{public}@";
LABEL_7:
        _os_log_impl(&dword_0, v20, OS_LOG_TYPE_DEFAULT, v22, buf, 0x20u);
      }
    }

    else if (v21)
    {
      id v24 = (void *)objc_claimAutoreleasedReturnValue([v17 checkedDescription]);
      *(_DWORD *)int buf = 138544130;
      id v28 = v10;
      __int16 v29 = 2114;
      id v30 = v12;
      __int16 v31 = 2114;
      id v32 = v11;
      __int16 v33 = 2114;
      id v34 = v24;
      _os_log_impl( &dword_0,  v20,  OS_LOG_TYPE_DEFAULT,  "[AUTO-SHORT-TERM]{%{public}@:_shortTermSharedLockRemove} WARNING unable to remove %{public}@ | sharedLockFilenam e:%{public}@ | removeError:%{public}@",  buf,  0x2Au);
    }
  }

  else
  {
    unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138543874;
      id v28 = v10;
      __int16 v29 = 2114;
      id v30 = v12;
      __int16 v31 = 2114;
      id v32 = v11;
      int v22 = "[AUTO-SHORT-TERM]{%{public}@:_shortTermSharedLockRemove} removed %{public}@ | sharedLockFilename:%{public}@";
      goto LABEL_7;
    }
  }

  return v17;
}

- (void)_shortTermChangeAtomicInstance:(id)a3 forAtomicInstance:(id)a4 toShortTermSupported:(BOOL)a5
{
  BOOL v5 = a5;
  id v8 = a4;
  id v9 = a3;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  id v12 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_shortTermChangeAtomicInstance",  v9);
  if (v8)
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetAtomicInstanceByInstanceUUID:]( self,  "locateSetAtomicInstanceByInstanceUUID:",  v8));
    id v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceNewEntryIDForSetAtomicInstance:]( self,  "atomicInstanceNewEntryIDForSetAtomicInstance:",  v13));
    id v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 persistedEntry:v14 fromLocation:v12]);

    if (v16)
    {
      [v13 setLockedSupportingShortTermLocking:v5];
      unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
      char v18 = (void *)objc_claimAutoreleasedReturnValue([v13 atomicInstanceUUID]);
      [v17 setSafeObject:v13 forKey:v18];

      [v16 persistSecureCodedObject:v13 forKey:@"setAtomicInstance"];
      id v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
      id v20 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
      [v19 storePersistedEntry:v14 withEntrySummary:v20 fromLocation:v12];

      BOOL v21 = objc_alloc(&OBJC_CLASS___NSString);
      if (v5) {
        int v22 = @"Y";
      }
      else {
        int v22 = @"N";
      }
      unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
      id v24 = -[NSString initWithFormat:]( v21,  "initWithFormat:",  @"SHORT-TERM behavior change | supportingShortTermLocking:%@ | setAtomicInstance:%@",  v22,  v23);
      -[MADAutoAssetControlManager _logPersistedSetAtomicInstance:operation:forPersistedEntryID:withSetAtomicInstance:message:]( self,  "_logPersistedSetAtomicInstance:operation:forPersistedEntryID:withSetAtomicInstance:message:",  v12,  @"ENTRY_MODIFY",  v14,  v13,  v24);
    }

    else
    {
      id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      BOOL v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager _shortTermChangeAtomicInstance:forAtomicInstance:toShortTermSupported:].cold.2();
      }
    }
  }

  else
  {
    id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v25 oslog]);

    if (os_log_type_enabled((os_log_t)v13, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager _shortTermChangeAtomicInstance:forAtomicInstance:toShortTermSupported:].cold.1();
    }
  }
}

- (id)buildShortTermLockError:(id)a3 code:(int64_t)a4 description:(id)a5 forSetDescriptor:(id)a6 underlyingError:(id)a7
{
  id v38 = a5;
  id v37 = a7;
  id v11 = a6;
  id v35 = a3;
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v12,  v13,  0LL));

  id v15 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
  uint64_t v17 = objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v15,  v16,  @"specific"));

  char v18 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
  id v19 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v11 latestDownloadedAtomicInstance]);
  BOOL v21 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v18,  v19,  v20));

  int v22 = (void *)objc_claimAutoreleasedReturnValue([v11 latestDownloadedAtomicInstance]);
  unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager locateSetStatusByInstance:](self, "locateSetStatusByInstance:", v22));

  id v24 = objc_alloc(&OBJC_CLASS___NSString);
  id v25 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);

  id v26 = @"N";
  if (v21) {
    BOOL v27 = v21;
  }
  else {
    BOOL v27 = @"N";
  }
  id v34 = (void *)v17;
  if (v17) {
    id v28 = @"Y";
  }
  else {
    id v28 = @"N";
  }
  if (v14) {
    __int16 v29 = @"Y";
  }
  else {
    __int16 v29 = @"N";
  }
  if (v23) {
    id v26 = (__CFString *)objc_claimAutoreleasedReturnValue([v23 summary]);
  }
  if (v37) {
    id v30 = (__CFString *)objc_claimAutoreleasedReturnValue([v37 checkedDescription]);
  }
  else {
    id v30 = @"N";
  }
  __int16 v31 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"%@ | setDescriptor:%@ | atomicInstanceFilename:%@ | specific:%@ | latest:%@ | setDescriptorCurrentStatus:%@ | error:%@",  v38,  v25,  v27,  v28,  v29,  v26,  v30);
  id v32 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  a4,  v35,  v37,  v31));

  if (v37) {
  if (v23)
  }

  return v32;
}

- (BOOL)isShortTermLockableSetDescriptor:(id)a3
{
  id v4 = a3;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);
  if (v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager shortTermLockedByAtomicInstance]( self,  "shortTermLockedByAtomicInstance"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);
    id v10 = [v8 safeObjectForKey:v9 ofClass:objc_opt_class(NSString)];
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

    BOOL v12 = v11 != 0LL;
  }

  else
  {
    BOOL v12 = 0;
  }

  return v12;
}

- (id)latestShortTermLockableAtomicInstanceForClientDomain:(id)a3 forAssetSetIdentifier:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v7,  v6);
  id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager shortTermLockedLatestByIdentifier]( self,  "shortTermLockedLatestByIdentifier"));
  id v12 = [v11 safeObjectForKey:v10 ofClass:objc_opt_class(NSString)];
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

  return v13;
}

- (id)newSetInfoLimitedToCheckInformation:(id)a3 forAssetSetIdentifier:(id)a4 fromSetInfoFound:(id)a5
{
  id v8 = a5;
  id v9 = a4;
  id v10 = a3;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v42 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetStatus);
  __int128 v55 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  __int128 v69 = (void *)objc_claimAutoreleasedReturnValue([v55 configuredAssetEntries]);
  __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  __int128 v68 = (void *)objc_claimAutoreleasedReturnValue([v54 atomicInstancesDownloaded]);
  id v53 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  __int128 v67 = (void *)objc_claimAutoreleasedReturnValue([v53 catalogCachedAssetSetID]);
  id v52 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  char v66 = (void *)objc_claimAutoreleasedReturnValue([v52 catalogDownloadedFromLive]);
  id v51 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue([v51 catalogLastTimeChecked]);
  __int128 v50 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  id v64 = (void *)objc_claimAutoreleasedReturnValue([v50 catalogPostedDate]);
  uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  __int16 v63 = (void *)objc_claimAutoreleasedReturnValue([v49 newerAtomicInstanceDiscovered]);
  uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([v48 newerDiscoveredAtomicEntries]);
  __int128 v62 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _limitToCheckAtomicEntries:](self, "_limitToCheckAtomicEntries:", v47));
  uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  id v61 = (void *)objc_claimAutoreleasedReturnValue([v46 latestDownloadedAtomicInstance]);
  id v45 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v45 latestDowloadedAtomicInstanceEntries]);
  __int128 v60 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _limitToCheckAtomicEntries:](self, "_limitToCheckAtomicEntries:", v44));
  __int16 v41 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  __int128 v59 = (void *)objc_claimAutoreleasedReturnValue([v41 downloadedCatalogCachedAssetSetID]);
  id v40 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  BOOL v57 = (void *)objc_claimAutoreleasedReturnValue([v40 downloadedCatalogDownloadedFromLive]);
  __int16 v39 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  id v35 = (void *)objc_claimAutoreleasedReturnValue([v39 downloadedCatalogLastTimeChecked]);
  id v38 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  __int16 v33 = (void *)objc_claimAutoreleasedReturnValue([v38 downloadedCatalogPostedDate]);
  id v37 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  id v56 = (void *)objc_claimAutoreleasedReturnValue([v37 currentNotifications]);
  id v30 = v10;
  id v58 = v9;
  id v31 = +[MADAutoAssetScheduler newSetPolicyForDomainName:forAssetSetIdentifier:]( &OBJC_CLASS___MADAutoAssetScheduler,  "newSetPolicyForDomainName:forAssetSetIdentifier:",  v10,  v9);
  id v25 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager stagerSetPolicy]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerSetPolicy"));
  unsigned __int8 v28 = -[MADAutoAssetControlManager _haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:]( self,  "_haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:",  v10,  v9);
  unsigned __int8 v27 = -[MADAutoAssetControlManager _vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:]( self,  "_vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:",  v10,  v9);
  id v36 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  unsigned __int8 v26 = [v36 downloadUserInitiated];
  id v34 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  id v24 = (void *)objc_claimAutoreleasedReturnValue([v34 downloadProgress]);
  id v32 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  id v13 = [v32 downloadedNetworkBytes];
  __int16 v29 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  id v14 = [v29 downloadedFilesystemBytes];
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 currentLockUsage]);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);
  char v18 = (void *)objc_claimAutoreleasedReturnValue([v17 availableForUseError]);
  id v19 = (void *)objc_claimAutoreleasedReturnValue([v8 currentSetStatus]);

  id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 newerVersionError]);
  BYTE2(v23) = v26;
  BYTE1(v23) = v27;
  LOBYTE(v23) = v28;
  id v43 = -[MANAutoAssetSetStatus initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( v42,  "initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:withC atalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewe rAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloa dedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDow nloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:w ithSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:wit hDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withCurre ntLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  v30,  v58,  v69,  v68,  v67,  v66,  v65,  v64,  v63,  v62,  v61,  v60,  v59,  v57,  v35,  v33,  v56,  0LL,  v31,  v25,  v23,  v24,  v13,  v14,  v16,  0LL,  v18,  v20);

  id v21 = -[MANAutoAssetSetInfoFound initForAssetSetIdentifier:reportingStatus:]( objc_alloc(&OBJC_CLASS___MANAutoAssetSetInfoFound),  "initForAssetSetIdentifier:reportingStatus:",  v58,  v43);
  return v21;
}

- (id)setDescriptorNewEntryIDForDownloaded:(id)a3
{
  id v4 = a3;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);

  id v8 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:ofAtomicInstance:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:ofAtomicInstance:",  v5,  v6,  v7);
  return v8;
}

- (void)setDescriptorEliminateMatching:(id)a3 forClientDomainName:(id)a4 forAssetSetIdentifier:(id)a5 eliminatingSetIdentifer:(BOOL)a6
{
  BOOL v90 = a6;
  id v9 = a3;
  id v100 = a4;
  id v92 = a5;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  __int128 v103 = v9;
  __int16 v101 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:setDescriptorEliminateMatching",  v9);
  __int128 v94 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v102 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  __int128 v117 = 0u;
  __int128 v118 = 0u;
  __int128 v119 = 0u;
  __int128 v120 = 0u;
  __int128 v104 = self;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v12 = [obj countByEnumeratingWithState:&v117 objects:v130 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v118;
    do
    {
      for (os_log_t i = 0LL; i != v13; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v118 != v14) {
          objc_enumerationMutation(obj);
        }
        uint64_t v16 = *(void *)(*((void *)&v117 + 1) + 8LL * (void)i);
        uint64_t v17 = objc_autoreleasePoolPush();
        char v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
        id v19 = [v18 safeObjectForKey:v16 ofClass:objc_opt_class(MADAutoSetDescriptor)];
        id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

        if (v16)
        {
          id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 clientDomainName]);
          if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v21, v100) & 1) != 0)
          {
            int v22 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSetIdentifier]);
            unsigned int v23 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v22, v92);

            if (v23) {
              -[NSMutableArray addObject:](v94, "addObject:", v16);
            }
          }

          else
          {
          }
        }

        objc_autoreleasePoolPop(v17);
      }

      id v13 = [obj countByEnumeratingWithState:&v117 objects:v130 count:16];
    }

    while (v13);
  }

  __int128 v115 = 0u;
  __int128 v116 = 0u;
  __int128 v113 = 0u;
  __int128 v114 = 0u;
  __int128 v93 = v94;
  id v24 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v93,  "countByEnumeratingWithState:objects:count:",  &v113,  v129,  16LL);
  if (v24)
  {
    id v25 = v24;
    uint64_t v26 = *(void *)v114;
    do
    {
      for (j = 0LL; j != v25; j = (char *)j + 1)
      {
        if (*(void *)v114 != v26) {
          objc_enumerationMutation(v93);
        }
        uint64_t v28 = *(void *)(*((void *)&v113 + 1) + 8LL * (void)j);
        __int16 v29 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
        id v30 = [v29 safeObjectForKey:v28 ofClass:objc_opt_class(MADAutoSetDescriptor)];
        id v31 = (void *)objc_claimAutoreleasedReturnValue(v30);

        id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 clientDomainName]);
        __int16 v33 = (void *)objc_claimAutoreleasedReturnValue([v31 assetSetIdentifier]);
        id v34 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v32,  v33,  v28));

        -[MADAutoAssetControlManager removeSetDescriptorDownloaded:fromLocation:checkingByInstance:regardlessOfLatest:historyOperationAI:historyOperationSD:]( self,  "removeSetDescriptorDownloaded:fromLocation:checkingByInstance:regardlessOfLatest:historyOperationAI:historyOperationSD:",  v31,  v103,  1LL,  1LL,  327LL,  371LL);
        id v35 =  -[MADAutoAssetControlManager _shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:]( self,  "_shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:",  @"setDescriptorEliminateMatching",  v34,  v102,  @"atomic-instance shared lock removed (eliminated set-identifier)");
      }

      id v25 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v93,  "countByEnumeratingWithState:objects:count:",  &v113,  v129,  16LL);
    }

    while (v25);
  }

  if (!v90) {
    goto LABEL_62;
  }
  id v36 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
  id v37 = (void *)objc_claimAutoreleasedReturnValue([v36 persistedEntryIDs:@"setDescriptorEliminate"]);

  if (![v37 count]) {
    goto LABEL_61;
  }
  __int128 v95 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v109 = 0u;
  __int128 v110 = 0u;
  __int128 v111 = 0u;
  __int128 v112 = 0u;
  __int16 v87 = v37;
  id obja = v37;
  id v38 = [obja countByEnumeratingWithState:&v109 objects:v128 count:16];
  if (v38)
  {
    id v39 = v38;
    id v40 = *(id *)v110;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    id v88 = *(id *)v110;
    do
    {
      id v42 = 0LL;
      id v91 = v39;
      do
      {
        if (*(id *)v110 != v40) {
          objc_enumerationMutation(obja);
        }
        uint64_t v43 = *(void *)(*((void *)&v109 + 1) + 8LL * (void)v42);
        uint64_t v44 = objc_autoreleasePoolPush();
        if (v43)
        {
          id v45 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
          uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue([v45 persistedEntry:v43 fromLocation:v101]);

          if (v46)
          {
            id v47 = [v46 secureCodedObjectForKey:@"assetSetDescriptor" ofClass:objc_opt_class(MADAutoSetDescriptor)];
            uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(v47);
            uint64_t v49 = v48;
            if (v48)
            {
              __int128 v50 = p_ivars[155];
              id v51 = p_ivars;
              id v52 = (void *)objc_claimAutoreleasedReturnValue([v48 clientDomainName]);
              if ((-[__objc2_ivar_list stringIsEqual:to:](v50, "stringIsEqual:to:", v52, v100) & 1) != 0)
              {
                id v53 = v51[155];
                __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v49 assetSetIdentifier]);
                LODWORD(v53) = -[__objc2_ivar_list stringIsEqual:to:](v53, "stringIsEqual:to:", v54, v92);

                id v40 = v88;
                if ((_DWORD)v53)
                {
                  __int128 v55 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                  id v56 = (os_log_s *)objc_claimAutoreleasedReturnValue([v55 oslog]);

                  if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_DWORD *)int buf = 138543874;
                    BOOL v123 = v101;
                    __int16 v124 = 2114;
                    id v125 = v100;
                    __int16 v126 = 2114;
                    id v127 = v92;
                    _os_log_impl( &dword_0,  v56,  OS_LOG_TYPE_DEFAULT,  "\n [SET-ELIMINATE]{%{public}@} matched set-descriptor | clientDomainName:%{public}@ | assetSetIdentifier:%{public}@",  buf,  0x20u);
                  }

                  goto LABEL_41;
                }
              }

              else
              {
              }
            }

            else
            {
              __int128 v60 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v56 = (os_log_s *)objc_claimAutoreleasedReturnValue([v60 oslog]);

              if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)int buf = 138543874;
                BOOL v123 = v101;
                __int16 v124 = 2114;
                id v125 = v100;
                __int16 v126 = 2114;
                id v127 = v92;
                _os_log_error_impl( &dword_0,  v56,  OS_LOG_TYPE_ERROR,  "\n [SET-ELIMINATE]{%{public}@} unable to load set-descriptor | clientDomainName:%{public}@ | assetSetIden tifier:%{public}@",  buf,  0x20u);
              }

- (id)newSetDescriptorLimitedToLockInformation:(id)a3 forSetConfiguration:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = v6;
  id v8 = 0LL;
  if (v5 && v6)
  {
    uint64_t v26 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v25 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v23 = [v5 copy];
    id v24 = v7;
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    __int128 v30 = 0u;
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 autoAssetEntries]);
    id v10 = [v9 countByEnumeratingWithState:&v27 objects:v31 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v28;
      do
      {
        id v13 = 0LL;
        do
        {
          if (*(void *)v28 != v12) {
            objc_enumerationMutation(v9);
          }
          uint64_t v14 = *(void **)(*((void *)&v27 + 1) + 8LL * (void)v13);
          if (v14)
          {
            uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 assetType]);
            uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSelector]);
            char v18 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSpecifier]);
            id v19 = (void *)objc_claimAutoreleasedReturnValue([v5 downloadedEntryForAssetType:v16 forAssetSpecifier:v18]);

            if (v19)
            {
              -[NSMutableArray addObject:](v26, "addObject:", v19);
              -[NSMutableArray addObject:](v25, "addObject:", v19);
            }
          }

          id v13 = (char *)v13 + 1;
        }

        while (v11 != v13);
        id v11 = [v9 countByEnumeratingWithState:&v27 objects:v31 count:16];
      }

      while (v11);
    }

    id v8 = v23;
    [v23 setDiscoveredAtomicEntries:v26];
    [v23 setLatestDowloadedAtomicInstanceEntries:v25];
    id v20 = objc_alloc_init(&OBJC_CLASS___NSUUID);
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[NSUUID UUIDString](v20, "UUIDString"));
    [v23 setLatestDownloadedAtomicInstance:v21];

    id v7 = v24;
  }

  return v8;
}

- (id)_limitSetAtomicEntries:(id)a3 fromSetDescriptor:(id)a4 requestedAutoAssetEntries:(id)a5
{
  id v7 = a4;
  id v8 = a5;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  id v39 = v8;
  id v34 = v39;
  if (v39) {
    goto LABEL_3;
  }
  id v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "clientDomainName", 0));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSetIdentifier]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v11,  v12));

  uint64_t v14 = objc_claimAutoreleasedReturnValue([v13 autoAssetEntries]);
  id v39 = (id)v14;
  if (v14)
  {
LABEL_3:
    id v15 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue([v7 latestDowloadedAtomicInstanceEntries]);
    id v40 = [obj countByEnumeratingWithState:&v50 objects:v55 count:16];
    if (v40)
    {
      uint64_t v36 = *(void *)v51;
      id v37 = v15;
      p_ivars = &MobileAssetKeyManager__metaData.ivars;
      id v38 = v7;
      do
      {
        uint64_t v17 = 0LL;
        do
        {
          if (*(void *)v51 != v36) {
            objc_enumerationMutation(obj);
          }
          uint64_t v41 = v17;
          char v18 = *(void **)(*((void *)&v50 + 1) + 8 * v17);
          __int128 v46 = 0u;
          __int128 v47 = 0u;
          __int128 v48 = 0u;
          __int128 v49 = 0u;
          id v43 = v39;
          id v45 = [v43 countByEnumeratingWithState:&v46 objects:v54 count:16];
          if (v45)
          {
            uint64_t v19 = *(void *)v47;
            id v42 = v18;
            while (2)
            {
              for (os_log_t i = 0LL; i != v45; os_log_t i = (char *)i + 1)
              {
                if (*(void *)v47 != v19) {
                  objc_enumerationMutation(v43);
                }
                id v21 = *(void **)(*((void *)&v46 + 1) + 8LL * (void)i);
                int v22 = p_ivars[155];
                id v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "assetSelector", v34));
                id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 assetType]);
                id v25 = (void *)objc_claimAutoreleasedReturnValue([v18 fullAssetSelector]);
                uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v25 assetType]);
                if (-[__objc2_ivar_list stringIsEqual:to:](v22, "stringIsEqual:to:", v24, v26))
                {
                  uint64_t v44 = p_ivars[155];
                  __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v21 assetSelector]);
                  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v27 assetSpecifier]);
                  __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v18 fullAssetSelector]);
                  uint64_t v30 = v19;
                  id v31 = (void *)objc_claimAutoreleasedReturnValue([v29 assetSpecifier]);
                  LOBYTE(v44) = -[__objc2_ivar_list stringIsEqual:to:]( v44,  "stringIsEqual:to:",  v28,  v31);

                  uint64_t v19 = v30;
                  char v18 = v42;

                  p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
                  if ((v44 & 1) != 0)
                  {

                    id v15 = v37;
                    if (v42) {
                      -[NSMutableArray addObject:](v37, "addObject:", v42);
                    }
                    goto LABEL_22;
                  }
                }

                else
                {
                }
              }

              id v45 = [v43 countByEnumeratingWithState:&v46 objects:v54 count:16];
              if (v45) {
                continue;
              }
              break;
            }
          }

          id v15 = v37;
LABEL_22:
          uint64_t v17 = v41 + 1;
          id v7 = v38;
        }

        while ((id)(v41 + 1) != v40);
        id v40 = [obj countByEnumeratingWithState:&v50 objects:v55 count:16];
      }

      while (v40);
    }

    if (-[NSMutableArray count](v15, "count")) {
      id v32 = v15;
    }
    else {
      id v32 = 0LL;
    }
  }

  else
  {
    id v32 = 0LL;
  }

  return v32;
}

- (void)setDescriptorDownloadedLoadedFromPersisted:(id)a3 persistedEntryID:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);
  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v10));
    if (v11)
    {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 oslog]);

      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager setDescriptorDownloadedLoadedFromPersisted:persistedEntryID:].cold.1();
      }
    }

    else
    {
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
      [v19 setSafeObject:v6 forKey:v10];

      -[MADAutoAssetControlManager _logPersistedSetDescriptor:forComponentType:operation:forPersistedEntryID:forClientRequest:withJobUUID:withSetDescriptor:message:]( self,  "_logPersistedSetDescriptor:forComponentType:operation:forPersistedEntryID:forClientRequest:withJobUUID:withSetDe scriptor:message:",  @"setDescriptorDownloadedLoadedFromPersisted",  @"SET_DOWNLOADED_DESCRIPTORS",  @"ENTRY_LOAD",  v7,  0LL,  0LL,  v6,  @"downloaded-by-instance set-descriptor validated");
    }
  }

  else
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 diag]);
    uint64_t v16 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    char v18 = -[NSString initWithFormat:]( v16,  "initWithFormat:",  @"{setDescriptorDownloadedLoadedFromPersisted} already no latestDownloadedAtomicInstance | setDescriptor:%@",  v17);
    [v15 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v18 withResult:6108 withError:0];
  }
}

- (void)setDescriptorAddedPreInstalled:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDownloadedAtomicInstance]);
  if (v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v7));
    if (v8)
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 oslog]);

      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager setDescriptorAddedPreInstalled:].cold.1();
      }
    }

    else
    {
      uint64_t v16 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setDescriptorNewEntryIDForDownloaded:]( self,  "setDescriptorNewEntryIDForDownloaded:",  v4));
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
      __int128 v27 = (os_log_s *)v16;
      __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v17 persistedEntry:v16 fromLocation:@"setDescriptorAddedPreInstalled"]);

      [v28 persistSecureCodedObject:v4 forKey:@"assetSetDescriptor"];
      char v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
      [v18 storePersistedEntry:v16 withEntrySummary:v19 fromLocation:@"setDescriptorAddedPreInstalled"];

      id v20 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDowloadedAtomicInstanceEntries]);
      id v21 = [v20 count];
      int v22 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
      id v23 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);
      id v24 = (void *)objc_claimAutoreleasedReturnValue([v4 discoveredAtomicInstance]);
      id v25 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _specifierVersionNamesForSetDescriptor:]( self,  "_specifierVersionNamesForSetDescriptor:",  v4));
      +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:usageCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:withAddendumMessage:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:usageCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:w ithAddendumMessage:",  352LL,  2LL,  1LL,  v21,  v22,  v23,  v24,  v25);

      id v10 = v27;
      -[MADAutoAssetControlManager _logPersistedSetDescriptor:forComponentType:operation:forPersistedEntryID:forClientRequest:withJobUUID:withSetDescriptor:message:]( self,  "_logPersistedSetDescriptor:forComponentType:operation:forPersistedEntryID:forClientRequest:withJobUUID:withSetDe scriptor:message:",  @"setDescriptorAddedPreInstalled",  @"SET_DOWNLOADED_DESCRIPTORS",  @"ENTRY_ADD",  v27,  0LL,  0LL,  v4,  @"new descriptor representing pre-installed auto-asset entries");
      uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
      [v26 setSafeObject:v4 forKey:v7];
    }
  }

  else
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 diag]);
    id v13 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
    id v15 = -[NSString initWithFormat:]( v13,  "initWithFormat:",  @"{setDescriptorAddedPreInstalled} already no latestDownloadedAtomicInstance | setDescriptor:%@",  v14);
    [v12 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v15 withResult:6108 withError:0];
  }
}

- (BOOL)setDescriptorAllEntriesDownloaded:(id)a3 forSetDescriptor:(id)a4 loggingEntryExists:(BOOL)a5
{
  BOOL v37 = a5;
  id v35 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v39 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  char v44 = 0;
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 latestDowloadedAtomicInstanceEntries]);
  id v34 = [v10 count];

  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([v7 latestDowloadedAtomicInstanceEntries]);
  id v11 = [obj countByEnumeratingWithState:&v40 objects:v55 count:16];
  if (!v11)
  {
    LOBYTE(v16) = 1;
    goto LABEL_27;
  }

  id v12 = v11;
  id v33 = v7;
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t v15 = *(void *)v41;
  int v16 = 1;
  while (2)
  {
    int v36 = v16;
    uint64_t v17 = 0LL;
    char v18 = v14;
    do
    {
      if (*(void *)v41 != v15) {
        objc_enumerationMutation(obj);
      }
      uint64_t v19 = *(void **)(*((void *)&v40 + 1) + 8LL * (void)v17);
      id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 localContentURL]);

      if (!v20)
      {
        __int128 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        __int128 v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        {
          __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
          *(_DWORD *)int buf = 138544130;
          id v46 = v35;
          __int16 v47 = 2048;
          uint64_t v48 = (uint64_t)v17 + v13 + 1;
          __int16 v49 = 2048;
          id v50 = v34;
          __int16 v51 = 2114;
          __int128 v52 = v29;
          _os_log_error_impl( &dword_0,  v28,  OS_LOG_TYPE_ERROR,  "{%{public}@} [DROP-SET-DESCRIPTOR] set-descriptor with downloaded entry missing localContentURL | entry:%ld- of-%ld | nextDownloadedEntry:%{public}@",  buf,  0x2Au);
        }

        goto LABEL_25;
      }

      id v21 = (void *)objc_claimAutoreleasedReturnValue([v19 localContentURL]);
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v21 path]);

      if (![v39 fileExistsAtPath:v14 isDirectory:&v44])
      {
        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        __int128 v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 oslog]);

        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        {
          id v32 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
          *(_DWORD *)int buf = 138544386;
          id v46 = v35;
          __int16 v47 = 2048;
          uint64_t v48 = (uint64_t)v17 + v13 + 1;
          __int16 v49 = 2048;
          id v50 = v34;
          __int16 v51 = 2114;
          __int128 v52 = v32;
          __int16 v53 = 2114;
          __int128 v54 = v14;
          _os_log_error_impl( &dword_0,  v28,  OS_LOG_TYPE_ERROR,  "{%{public}@} [DROP-SET-DESCRIPTOR] set-descriptor with downloaded entry missing from filesystem | entry:%ld- of-%ld | nextDownloadedEntry:%{public}@ | localContentURL:%{public}@",  buf,  0x34u);
        }

        char v18 = v14;
LABEL_25:

        LOBYTE(v16) = 0;
        uint64_t v14 = v18;
        goto LABEL_26;
      }

      if (v44)
      {
        if (!v37) {
          goto LABEL_16;
        }
        int v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          id v24 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
          *(_DWORD *)int buf = 138544386;
          id v46 = v35;
          __int16 v47 = 2048;
          uint64_t v48 = (uint64_t)v17 + v13 + 1;
          __int16 v49 = 2048;
          id v50 = v34;
          __int16 v51 = 2114;
          __int128 v52 = v24;
          __int16 v53 = 2114;
          __int128 v54 = v14;
          _os_log_impl( &dword_0,  v23,  OS_LOG_TYPE_DEFAULT,  "{%{public}@} [KEEP-SET-DESCRIPTOR] set-descriptor with downloaded entry on filesystem | entry:%ld-of-%ld | n extDownloadedEntry:%{public}@ | localContentURL:%{public}@",  buf,  0x34u);
        }
      }

      else
      {
        id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        {
          uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
          *(_DWORD *)int buf = 138544386;
          id v46 = v35;
          __int16 v47 = 2048;
          uint64_t v48 = (uint64_t)v17 + v13 + 1;
          __int16 v49 = 2048;
          id v50 = v34;
          __int16 v51 = 2114;
          __int128 v52 = v26;
          __int16 v53 = 2114;
          __int128 v54 = v14;
          _os_log_error_impl( &dword_0,  v23,  OS_LOG_TYPE_ERROR,  "{%{public}@} [DROP-SET-DESCRIPTOR] set-descriptor with downloaded entry that is not a directory | entry:%ld- of-%ld | nextDownloadedEntry:%{public}@ | localContentURL:%{public}@",  buf,  0x34u);
        }

        int v36 = 0;
      }

LABEL_16:
      uint64_t v17 = (char *)v17 + 1;
      char v18 = v14;
    }

    while (v12 != v17);
    id v12 = [obj countByEnumeratingWithState:&v40 objects:v55 count:16];
    v13 += (uint64_t)v17;
    int v16 = v36;
    if (v12) {
      continue;
    }
    break;
  }

- (BOOL)setDescriptorLocked:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = +[MADAutoAssetLocker newCurrentSetLockUsageForDescriptor:]( &OBJC_CLASS___MADAutoAssetLocker,  "newCurrentSetLockUsageForDescriptor:",  v4);
  if (v7) {
    BOOL v8 = [v7 count] != 0;
  }
  else {
    BOOL v8 = 0;
  }

  return v8;
}

- (BOOL)setDescriptorVerifyNoDuplicates:(id)a3
{
  id v4 = a3;
  __int128 v28 = self;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v29 = v4;
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue([v4 latestDowloadedAtomicInstanceEntries]);
  id v9 = [v8 countByEnumeratingWithState:&v30 objects:v34 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v31;
    do
    {
      for (os_log_t i = 0LL; i != v10; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v31 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = *(void **)(*((void *)&v30 + 1) + 8LL * (void)i);
        uint64_t v14 = objc_autoreleasePoolPush();
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v13 fullAssetSelector]);
        int v16 = (void *)objc_claimAutoreleasedReturnValue([v15 persistedEntryID]);

        id v17 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v7,  "safeObjectForKey:ofClass:",  v16,  objc_opt_class(&OBJC_CLASS___MANAutoAssetSetAtomicEntry));
        char v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
        if (!v18) {
          -[NSMutableDictionary setSafeObject:forKey:](v7, "setSafeObject:forKey:", v13, v16);
        }

        objc_autoreleasePoolPop(v14);
      }

      id v10 = [v8 countByEnumeratingWithState:&v30 objects:v34 count:16];
    }

    while (v10);
  }

  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v29 latestDowloadedAtomicInstanceEntries]);
  id v20 = [v19 count];
  id v21 = -[NSMutableDictionary count](v7, "count");

  if (v20 != v21)
  {
    int v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v28, "autoControlManagerFSM"));
    id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
    id v24 = objc_alloc(&OBJC_CLASS___NSString);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v29 summary]);
    uint64_t v26 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"{setDescriptorVerifyNoDuplicates} set-descriptor has not yet been deduped | setDescriptor:%@",  v25);
    [v23 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v26 withResult:6109 withError:0];
  }

  return v20 == v21;
}

- (id)setDescriptorDedupDownloadedEntries:(id)a3 forSetDescriptor:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = [v6 copy];
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDowloadedAtomicInstanceEntries]);

  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setAtomicEntriesRemoveDuplicates:dedupingAtomicEntries:]( self,  "setAtomicEntriesRemoveDuplicates:dedupingAtomicEntries:",  v7,  v11));
  [v10 setLatestDowloadedAtomicInstanceEntries:v12];

  return v10;
}

- (id)setAtomicEntriesRemoveDuplicates:(id)a3 dedupingAtomicEntries:(id)a4
{
  id v26 = a3;
  id v5 = a4;
  id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v23 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  id obj = (NSMutableArray *)v5;
  id v7 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v27,  v31,  16LL);
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v28;
    do
    {
      for (os_log_t i = 0LL; i != v8; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v28 != v9) {
          objc_enumerationMutation(obj);
        }
        uint64_t v11 = *(void **)(*((void *)&v27 + 1) + 8LL * (void)i);
        id v12 = objc_autoreleasePoolPush();
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v11 fullAssetSelector]);
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 persistedEntryID]);

        id v15 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v6,  "safeObjectForKey:ofClass:",  v14,  objc_opt_class(&OBJC_CLASS___MANAutoAssetSetAtomicEntry));
        int v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
        if (v16)
        {
          id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
          char v18 = (void *)objc_claimAutoreleasedReturnValue([v17 diag]);
          uint64_t v19 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:setAtomicEntriesRemoveDuplicates} atomic-entries needed dedup | dropped selectorKey:%@",  v26,  v14);
          [v18 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v19 withResult:6109 withError:0];
        }

        else
        {
          -[NSMutableDictionary setSafeObject:forKey:](v6, "setSafeObject:forKey:", v11, v14);
          -[NSMutableArray addObject:](v23, "addObject:", v11);
        }

        objc_autoreleasePoolPop(v12);
      }

      id v8 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v27,  v31,  16LL);
    }

    while (v8);
  }

  if (-[NSMutableArray count](v23, "count")) {
    id v20 = v23;
  }
  else {
    id v20 = obj;
  }
  id v21 = v20;

  return v21;
}

- (id)newSetEntryIDForClientDomain:(id)a3 forAssetSetIdentifier:(id)a4 ofAtomicInstance:(id)a5
{
  id v7 = a5;
  id v8 = a4;
  id v9 = a3;
  id v10 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@_%@_%@",  v9,  v8,  v7);

  return v10;
}

- (BOOL)isSetDescriptor:(id)a3 coveredBySetDescriptorStatus:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  BOOL v37 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewAllBySelector]( self,  "locateDownloadedNewAllBySelector"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 latestDowloadedAtomicInstanceEntries]);
  id v11 = [v10 count];

  if (!v11)
  {
    BOOL v30 = 0;
    goto LABEL_26;
  }

  __int128 v50 = 0u;
  __int128 v51 = 0u;
  __int128 v48 = 0u;
  __int128 v49 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([v7 latestDowloadedAtomicInstanceEntries]);
  id v35 = [obj countByEnumeratingWithState:&v48 objects:v53 count:16];
  if (!v35)
  {
    BOOL v30 = 1;
    goto LABEL_25;
  }

  uint64_t v36 = *(void *)v49;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  uint64_t v13 = &MobileAssetKeyManager__metaData.ivars;
  id v32 = v7;
  id v33 = v6;
  while (2)
  {
    uint64_t v14 = 0LL;
    while (2)
    {
      if (*(void *)v49 != v36) {
        objc_enumerationMutation(obj);
      }
      uint64_t v38 = v14;
      id v15 = *(void **)(*((void *)&v48 + 1) + 8 * v14);
      __int128 v44 = 0u;
      __int128 v45 = 0u;
      __int128 v46 = 0u;
      __int128 v47 = 0u;
      id v16 = v37;
      id v42 = [v16 countByEnumeratingWithState:&v44 objects:v52 count:16];
      if (!v42)
      {
LABEL_22:

        BOOL v30 = 0;
        id v7 = v32;
        id v6 = v33;
        goto LABEL_25;
      }

      uint64_t v41 = *(void *)v45;
      id v39 = v16;
LABEL_9:
      uint64_t v17 = 0LL;
      while (1)
      {
        if (*(void *)v45 != v41) {
          objc_enumerationMutation(v16);
        }
        uint64_t v18 = *(void *)(*((void *)&v44 + 1) + 8 * v17);
        context = objc_autoreleasePoolPush();
        id v19 = [v16 safeObjectForKey:v18 ofClass:objc_opt_class(p_ivars[223])];
        id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
        id v21 = v13[155];
        int v22 = (void *)objc_claimAutoreleasedReturnValue([v20 assetType]);
        id v23 = (void *)objc_claimAutoreleasedReturnValue([v15 fullAssetSelector]);
        id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 assetType]);
        if (!-[__objc2_ivar_list stringIsEqual:to:](v21, "stringIsEqual:to:", v22, v24))
        {

          objc_autoreleasePoolPop(context);
          goto LABEL_16;
        }

        __int128 v40 = v13[155];
        id v25 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSpecifier]);
        id v26 = (void *)objc_claimAutoreleasedReturnValue([v15 fullAssetSelector]);
        __int128 v27 = v15;
        __int128 v28 = p_ivars;
        __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v26 assetSpecifier]);
        LOBYTE(v40) = -[__objc2_ivar_list stringIsEqual:to:](v40, "stringIsEqual:to:", v25, v29);

        p_ivars = v28;
        id v15 = v27;

        uint64_t v13 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        id v16 = v39;

        objc_autoreleasePoolPop(context);
LABEL_16:
        if (v42 == (id)++v17)
        {
          id v42 = [v16 countByEnumeratingWithState:&v44 objects:v52 count:16];
          if (v42) {
            goto LABEL_9;
          }
          goto LABEL_22;
        }
      }

      uint64_t v14 = v38 + 1;
      if ((id)(v38 + 1) != v35) {
        continue;
      }
      break;
    }

    BOOL v30 = 1;
    id v7 = v32;
    id v6 = v33;
    id v35 = [obj countByEnumeratingWithState:&v48 objects:v53 count:16];
    if (v35) {
      continue;
    }
    break;
  }

- (void)setDescriptorEliminate:(id)a3 triggeredByClient:(id)a4 forClientDomainName:(id)a5 forAssetSetIdentifier:(id)a6 awaitingUnlocked:(BOOL)a7
{
  BOOL v7 = a7;
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v17 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v16 extendedStateQueue]);
  dispatch_assert_queue_V2(v17);

  __int16 v53 = v14;
  id v18 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( objc_alloc(&OBJC_CLASS___MAAutoAssetSelector),  "initForAssetType:withAssetSpecifier:",  v14,  v15);
  id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedEntryID]);
  id v21 = [v19 safeObjectForKey:v20 ofClass:objc_opt_class(MADAutoAssetEliminate)];
  int v22 = (MADAutoAssetEliminate *)objc_claimAutoreleasedReturnValue(v21);

  __int128 v55 = self;
  if (!v22)
  {
    BOOL v47 = v7;
    id v48 = v18;
    __int128 v49 = v13;
    id v52 = v15;
    id v50 = v12;
    __int128 v51 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v56 = 0u;
    __int128 v57 = 0u;
    __int128 v58 = 0u;
    __int128 v59 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
    id v26 = [obj countByEnumeratingWithState:&v56 objects:v64 count:16];
    id v27 = v14;
    if (!v26) {
      goto LABEL_20;
    }
    id v28 = v26;
    __int128 v29 = self;
    uint64_t v30 = *(void *)v57;
    while (1)
    {
      for (os_log_t i = 0LL; i != v28; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v57 != v30) {
          objc_enumerationMutation(obj);
        }
        uint64_t v32 = *(void *)(*((void *)&v56 + 1) + 8LL * (void)i);
        id v33 = objc_autoreleasePoolPush();
        id v34 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( v29,  "downloadedSetDescriptorsByInstance"));
        id v35 = [v34 safeObjectForKey:v32 ofClass:objc_opt_class(MADAutoSetDescriptor)];
        uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(v35);

        if (v36)
        {
          BOOL v37 = (void *)objc_claimAutoreleasedReturnValue([v36 clientDomainName]);
          if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v37,  @"FROM_STAGED_FOR_ALL")) {
            goto LABEL_17;
          }
          uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v36 clientDomainName]);
          if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v38, v27) & 1) == 0)
          {

LABEL_17:
            __int128 v29 = v55;
            goto LABEL_18;
          }

          id v39 = (void *)objc_claimAutoreleasedReturnValue([v36 assetSetIdentifier]);
          unsigned int v40 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v39, v52);

          id v27 = v53;
          __int128 v29 = v55;
          if (v40) {
            -[NSMutableArray addObject:](v51, "addObject:", v36);
          }
        }

- (void)setIdentifierEliminate:(id)a3 usingEliminateTracker:(id)a4 whenCurrentlyLocked:(BOOL)a5 beginningToEliminate:(BOOL)a6 removingContent:(BOOL)a7
{
  BOOL v7 = a7;
  BOOL v8 = a6;
  BOOL v9 = a5;
  id v12 = a3;
  id v13 = a4;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  id v16 = v13;
  uint64_t v144 = v12;
  id v146 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:setIdentifierEliminate",  v12);
  __int128 v147 = self;
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v19 = objc_claimAutoreleasedReturnValue([v13 summary]);
    id v20 = (void *)v19;
    id v21 = @"N";
    *(_DWORD *)int buf = 138544386;
    uint64_t v174 = v146;
    if (v9) {
      int v22 = @"Y";
    }
    else {
      int v22 = @"N";
    }
    if (v8) {
      id v23 = @"Y";
    }
    else {
      id v23 = @"N";
    }
    if (v7) {
      id v21 = @"Y";
    }
    __int16 v175 = 2114;
    *(void *)uint64_t v176 = v19;
    *(_WORD *)&v176[8] = 2114;
    *(void *)&v176[10] = v22;
    __int16 v177 = 2114;
    uint64_t v178 = v23;
    __int16 v179 = 2114;
    uint64_t v180 = v21;
    _os_log_impl( &dword_0,  v18,  OS_LOG_TYPE_DEFAULT,  "\n [SET-ELIMINATE]{%{public}@} eliminateTracker:%{public}@ | currentlyLocked:%{public}@ | beginEliminate:%{public}@ | removeContent:%{public}@",  buf,  0x34u);
  }

  uint64_t v145 = v13;
  if (v8)
  {
    BOOL v134 = v7;
    BOOL v136 = v8;
    [v13 setAwaitingSchedulerAck:1];
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v13 clientDomainName]);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSetIdentifier]);
    +[MADAutoAssetScheduler controlEliminateSetDomainName:forAssetSetIdentifier:indicatingWhenEliminated:]( &OBJC_CLASS___MADAutoAssetScheduler,  "controlEliminateSetDomainName:forAssetSetIdentifier:indicatingWhenEliminated:",  v24,  v25,  1LL);

    __int128 v166 = 0u;
    __int128 v167 = 0u;
    __int128 v164 = 0u;
    __int128 v165 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](v147, "currentJobsBySelector"));
    id v26 = [obj countByEnumeratingWithState:&v164 objects:v172 count:16];
    if (v26)
    {
      id v27 = v26;
      uint64_t v28 = *(void *)v165;
      p_ivars = &MobileAssetKeyManager__metaData.ivars;
      do
      {
        uint64_t v30 = 0LL;
        id v138 = v27;
        do
        {
          if (*(void *)v165 != v28) {
            objc_enumerationMutation(obj);
          }
          uint64_t v31 = *(void *)(*((void *)&v164 + 1) + 8LL * (void)v30);
          uint64_t v32 = objc_autoreleasePoolPush();
          id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](v147, "currentJobsBySelector"));
          id v34 = [v33 safeObjectForKey:v31 ofClass:objc_opt_class(p_ivars[269])];
          id v35 = (void *)objc_claimAutoreleasedReturnValue(v34);

          if (v35 && [v35 autoAssetSetJob])
          {
            uint64_t v36 = v28;
            BOOL v37 = (void *)objc_claimAutoreleasedReturnValue([v35 clientDomainName]);
            uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v145 clientDomainName]);
            if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v37, v38) & 1) != 0)
            {
              id v39 = (void *)objc_claimAutoreleasedReturnValue([v35 autoAssetSetIdentifier]);
              unsigned int v40 = (void *)objc_claimAutoreleasedReturnValue([v145 assetSetIdentifier]);
              unsigned int v41 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v39, v40);

              uint64_t v28 = v36;
              p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
              id v27 = v138;
              if (v41)
              {
                id v42 = (void *)objc_claimAutoreleasedReturnValue([v145 activeJobsByUUID]);
                __int128 v43 = (void *)objc_claimAutoreleasedReturnValue([v35 autoAssetUUID]);
                BOOL v44 = (void *)objc_claimAutoreleasedReturnValue([v35 autoAssetUUID]);
                [v42 setSafeObject:v43 forKey:v44];

                [v35 cancelAutoAssetJob];
              }
            }

            else
            {

              uint64_t v28 = v36;
              p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
              id v27 = v138;
            }
          }

          objc_autoreleasePoolPop(v32);
          uint64_t v30 = (char *)v30 + 1;
        }

        while (v27 != v30);
        id v27 = [obj countByEnumeratingWithState:&v164 objects:v172 count:16];
      }

      while (v27);
    }

    __int128 v45 = v145;
    if ([v145 eliminatingSet])
    {
      __int128 v46 = (void *)objc_claimAutoreleasedReturnValue([v145 clientDomainName]);
      BOOL v47 = (void *)objc_claimAutoreleasedReturnValue([v145 assetSetIdentifier]);
      id v48 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationForClientDomain:forAssetSetIdentifier:]( v147,  "setConfigurationForClientDomain:forAssetSetIdentifier:",  v46,  v47));

      BOOL v8 = v136;
      BOOL v7 = v134;
      if (v48)
      {
        [v145 setAwaitingStagerAck:1];
        +[MADAutoAssetStager controlEliminateSetConfiguration:]( &OBJC_CLASS___MADAutoAssetStager,  "controlEliminateSetConfiguration:",  v48);
      }

      __int128 v45 = v145;
    }

    else
    {
      [v145 setAwaitingStagerAck:1];
      id v48 = (void *)objc_claimAutoreleasedReturnValue([v145 assetSelector]);
      +[MADAutoAssetStager controlEliminateSelector:]( &OBJC_CLASS___MADAutoAssetStager,  "controlEliminateSelector:",  v48);
      BOOL v8 = v136;
      BOOL v7 = v134;
    }

    __int128 v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](v147, "activelyEliminatingSelectors"));
    id v50 = (void *)objc_claimAutoreleasedReturnValue([v45 assetSelector]);
    __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v50 persistedEntryID]);
    [v49 setSafeObject:v145 forKey:v51];

    id v16 = v145;
    id v52 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v147, "logger"));
    __int16 v53 = (os_log_s *)objc_claimAutoreleasedReturnValue([v52 oslog]);

    if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v145 summary]);
      *(_DWORD *)int buf = 138543618;
      uint64_t v174 = v146;
      __int16 v175 = 2114;
      *(void *)uint64_t v176 = v54;
      _os_log_impl( &dword_0,  v53,  OS_LOG_TYPE_DEFAULT,  "\n[SET-ELIMINATE]{%{public}@} [BEGIN] elimination operations in progress | eliminateTracker:%{public}@",  buf,  0x16u);
    }
  }

  if (v7)
  {
    int v55 = [v16 awaitingSecureOperations];
    __int128 v56 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v147, "logger"));
    __int128 v57 = (os_log_s *)objc_claimAutoreleasedReturnValue([v56 oslog]);

    if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v58 = @"s";
      *(_DWORD *)int buf = 138543874;
      uint64_t v174 = v146;
      if (v55 == 1) {
        __int128 v58 = &stru_355768;
      }
      __int16 v175 = 1024;
      *(_DWORD *)uint64_t v176 = v55;
      *(_WORD *)&v176[4] = 2114;
      *(void *)&v176[6] = v58;
      _os_log_impl( &dword_0,  v57,  OS_LOG_TYPE_DEFAULT,  "\n[SET-ELIMINATE]{%{public}@} [AUTO-SECURE] waiting for %d in-progress secure operation%{public}@",  buf,  0x1Cu);
    }

    int v59 = v55 > 0 || v8;
    int v133 = v59;
    char v135 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v139 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id obja = (id)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    __int128 v160 = 0u;
    __int128 v161 = 0u;
    __int128 v162 = 0u;
    __int128 v163 = 0u;
    __int128 v60 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager shortTermLockedByAtomicInstance]( v147,  "shortTermLockedByAtomicInstance"));
    id v61 = [v60 countByEnumeratingWithState:&v160 objects:v171 count:16];
    if (v61)
    {
      id v62 = v61;
      uint64_t v63 = *(void *)v161;
      do
      {
        for (os_log_t i = 0LL; i != v62; os_log_t i = (char *)i + 1)
        {
          if (*(void *)v161 != v63) {
            objc_enumerationMutation(v60);
          }
          uint64_t v65 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( v147,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  *(void *)(*((void *)&v160 + 1) + 8LL * (void)i)));
          char v66 = v65;
          if (v65)
          {
            __int128 v67 = (void *)objc_claimAutoreleasedReturnValue([v65 clientDomainName]);
            __int128 v68 = (void *)objc_claimAutoreleasedReturnValue([v16 clientDomainName]);
            if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v67, v68) & 1) != 0)
            {
              id v69 = (void *)objc_claimAutoreleasedReturnValue([v66 assetSetIdentifier]);
              __int128 v70 = (void *)objc_claimAutoreleasedReturnValue([v145 assetSetIdentifier]);
              unsigned int v71 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v69, v70);

              id v16 = v145;
              if (!v71) {
                goto LABEL_55;
              }
              id v72 = (void *)objc_claimAutoreleasedReturnValue([v66 latestDownloadedAtomicInstance]);
              __int128 v67 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetAtomicInstanceByInstanceUUID:]( v147,  "locateSetAtomicInstanceByInstanceUUID:",  v72));

              id v73 =  +[MADAutoAssetLocker eliminateAllPreviousSetLocksByClient:forSetDescriptor:]( &OBJC_CLASS___MADAutoAssetLocker,  "eliminateAllPreviousSetLocksByClient:forSetDescriptor:",  @"ALL_INSTANCES",  v66);
              -[MADAutoAssetControlManager secureForceUngraftAll:forSetDescriptorBeingRemoved:]( v147,  "secureForceUngraftAll:forSetDescriptorBeingRemoved:",  v146,  v66);
            }

            else
            {
            }
          }

- (void)finishSetEliminateIfAwaitingUnlocked:(id)a3 forClientDomain:(id)a4 forAssetSetIdentifier:(id)a5
{
  id v22 = a3;
  id v8 = a4;
  id v9 = a5;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  if (-[MADAutoAssetControlManager isSetIdentifierBeingEliminated:forClientDomainName:ofSetIdentifier:]( self,  "isSetIdentifierBeingEliminated:forClientDomainName:ofSetIdentifier:",  v22,  v8,  v9)
    && !-[MADAutoAssetControlManager isSetIdentifierCurrentlyLocked:forClientDomainName:forAssetSetIdentifier:]( self,  "isSetIdentifierCurrentlyLocked:forClientDomainName:forAssetSetIdentifier:",  v22,  v8,  v9))
  {
    id v12 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( objc_alloc(&OBJC_CLASS___MAAutoAssetSelector),  "initForAssetType:withAssetSpecifier:",  v8,  v9);
    id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedEntryID]);
    id v15 = [v13 safeObjectForKey:v14 ofClass:objc_opt_class(MADAutoAssetEliminate)];
    id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

    if (v16)
    {
      -[MADAutoAssetControlManager setIdentifierEliminate:usingEliminateTracker:whenCurrentlyLocked:beginningToEliminate:removingContent:]( self,  "setIdentifierEliminate:usingEliminateTracker:whenCurrentlyLocked:beginningToEliminate:removingContent:",  v22,  v16,  0LL,  0LL,  1LL);
    }

    else
    {
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 diag]);
      uint64_t v19 = objc_alloc(&OBJC_CLASS___NSString);
      id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      id v21 = -[NSString initWithFormat:]( v19,  "initWithFormat:",  @"{%@:finishSetEliminateIfAwaitingUnlocked} set-identifier being eliminated yet no eliminateTracker | clientDomainName:%@ | assetSetIdentifier:%@ | %@",  v22,  v8,  v9,  v20);
      [v18 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v21 withResult:6111 withError:0];
    }
  }
}

- (BOOL)setJobFoundAllContent:(id)a3 forJobAtomicInstance:(id)a4 withCurrentSetStatus:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  id v10 = a3;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:setJobFoundAllContent",  v10);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetAtomicInstanceByInstanceUUID:]( self,  "locateSetAtomicInstanceByInstanceUUID:",  v8));
  if (!v14)
  {
    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v15 diag]);
    id v18 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
    id v20 = -[NSString initWithFormat:]( v18,  "initWithFormat:",  @"{%@} set-job current-set-status did not include active atomic-instance | jobAtomicInstance:%@ | currentSetStatus:%@",  v13,  v8,  v19);
    [v17 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v20 withResult:6111 withError:0];
    goto LABEL_12;
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v8));
  if (!v15)
  {
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSetIdentifier]);
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationForClientDomain:forAssetSetIdentifier:]( self,  "setConfigurationForClientDomain:forAssetSetIdentifier:",  v21,  v22));

    if (v17)
    {
      uint64_t v23 = objc_claimAutoreleasedReturnValue([v9 latestDowloadedAtomicInstanceEntries]);
      if (v23 || (uint64_t v23 = objc_claimAutoreleasedReturnValue([v9 newerDiscoveredAtomicEntries])) != 0)
      {
        uint64_t v19 = (void *)v23;
        BOOL v16 = 1;
LABEL_13:

        goto LABEL_14;
      }

      id v20 = (NSString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      id v25 = (void *)objc_claimAutoreleasedReturnValue(-[NSString diag](v20, "diag"));
      id v27 = objc_alloc(&OBJC_CLASS___NSString);
      id v26 = (NSString *)objc_claimAutoreleasedReturnValue([v9 summary]);
      uint64_t v28 = -[NSString initWithFormat:]( v27,  "initWithFormat:",  @"{%@} set-job current-set-status does not include latestDowloadedEntries | jobAtomicInstance:%@ | currentSetStatus:%@",  v13,  v8,  v26);
      [v25 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v28 withResult:6111 withError:0];

      uint64_t v19 = 0LL;
    }

    else
    {
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      id v20 = (NSString *)objc_claimAutoreleasedReturnValue([v19 diag]);
      id v24 = objc_alloc(&OBJC_CLASS___NSString);
      id v25 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
      id v26 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"{%@} set-job current-set-status has no set-configuration | jobAtomicInstance:%@ | currentSetStatus:%@",  v13,  v8,  v25);
      -[NSString trackAnomaly:forReason:withResult:withError:]( v20,  "trackAnomaly:forReason:withResult:withError:",  @"AUTO-SET-CONTROL",  v26,  6111LL,  0LL);
    }

LABEL_12:
    BOOL v16 = 0;
    goto LABEL_13;
  }

  BOOL v16 = 0;
LABEL_14:

  return v16;
}

- (BOOL)shouldAdoptJobFoundAllContent:(id)a3 forJobAtomicInstance:(id)a4 withCurrentSetStatus:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:shouldAdoptJobFoundAllContent",  v8);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetAtomicInstanceByInstanceUUID:]( self,  "locateSetAtomicInstanceByInstanceUUID:",  v9));
  if (!v14)
  {
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 diag]);
    uint64_t v19 = objc_alloc(&OBJC_CLASS___NSString);
    BOOL v16 = (NSString *)objc_claimAutoreleasedReturnValue([v10 summary]);
    id v20 = -[NSString initWithFormat:]( v19,  "initWithFormat:",  @"{%@} set-job current-set-status did not include active atomic-instance | jobAtomicInstance:%@ | currentSetStatus:%@",  v13,  v9,  v16);
    [v18 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v20 withResult:6111 withError:0];

    LOBYTE(v16) = 0;
    goto LABEL_33;
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v9));
  if (!v15)
  {
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v10 clientDomainName]);
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSetIdentifier]);
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationForClientDomain:forAssetSetIdentifier:]( self,  "setConfigurationForClientDomain:forAssetSetIdentifier:",  v21,  v22));

    if (v23)
    {
      id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 latestAtomicInstanceToVend]);

      id v15 = 0LL;
      if (v24)
      {
        id v25 = (void *)objc_claimAutoreleasedReturnValue([v23 latestAtomicInstanceToVend]);
        id v26 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v25));

        if (v26)
        {
          id v27 = (void *)objc_claimAutoreleasedReturnValue([v10 latestDowloadedAtomicInstanceEntries]);
          uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v26 latestDowloadedAtomicInstanceEntries]);
          unsigned int v67 = -[MADAutoAssetControlManager doSetAtomicEntries:matchOtherAtomicEntries:]( self,  "doSetAtomicEntries:matchOtherAtomicEntries:",  v27,  v28);

          id v15 = 0LL;
          if (v67)
          {
            __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
            __int128 v70 = 0u;
            __int128 v71 = 0u;
            __int128 v72 = 0u;
            __int128 v73 = 0u;
            id obj = (id)objc_claimAutoreleasedReturnValue([v26 latestDowloadedAtomicInstanceEntries]);
            id v30 = [obj countByEnumeratingWithState:&v70 objects:v80 count:16];
            if (v30)
            {
              id v31 = v30;
              __int128 v60 = v14;
              id v61 = v10;
              id v62 = v26;
              uint64_t v63 = v13;
              __int128 v68 = v23;
              id v64 = v8;
              uint64_t v32 = *(void *)v71;
              id v33 = obj;
              while (2)
              {
                for (os_log_t i = 0LL; i != v31; os_log_t i = (char *)i + 1)
                {
                  if (*(void *)v71 != v32) {
                    objc_enumerationMutation(obj);
                  }
                  id v35 = objc_claimAutoreleasedReturnValue( [*(id *)(*((void *)&v70 + 1) + 8 * (void)i) localContentURL]);
                  uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( NSString,  "stringWithUTF8String:",  [v35 fileSystemRepresentation]));

                  if (([v29 fileExistsAtPath:v36] & 1) == 0)
                  {
                    int v59 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
                    __int128 v43 = (void *)objc_claimAutoreleasedReturnValue([v59 diag]);
                    id obja = v29;
                    BOOL v44 = objc_alloc(&OBJC_CLASS___NSString);
                    __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([0 assetSetIdentifier]);
                    __int128 v46 = (void *)objc_claimAutoreleasedReturnValue([v62 latestDownloadedAtomicInstance]);
                    id v13 = v63;
                    BOOL v47 = -[NSString initWithFormat:]( v44,  "initWithFormat:",  @"{%@} Latest-to-vend for set %@, %@, has atomic entries that are missing from filesystem.  Missing atomic entry: %@. ",  v63,  v45,  v46,  v36);
                    [v43 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v47 withResult:6111 withError:0];

                    id v8 = v64;
                    uint64_t v23 = v68;
                    id v15 = 0LL;
                    id v14 = v60;
                    id v10 = v61;
                    goto LABEL_22;
                  }
                }

                id v31 = [obj countByEnumeratingWithState:&v70 objects:v80 count:16];
                if (v31) {
                  continue;
                }
                break;
              }

              LODWORD(v16) = 0;
              id v13 = v63;
              id v8 = v64;
              uint64_t v23 = v68;
              id v15 = 0LL;
              id v14 = v60;
              goto LABEL_26;
            }

            goto LABEL_19;
          }
        }
      }

- (BOOL)doSetAtomicEntries:(id)a3 matchOtherAtomicEntries:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = [v5 count];
  id v34 = v6;
  if (v7 != [v6 count])
  {
    BOOL v27 = 0;
    goto LABEL_28;
  }

  __int128 v49 = 0u;
  __int128 v50 = 0u;
  __int128 v47 = 0u;
  __int128 v48 = 0u;
  id obj = v5;
  id v31 = [obj countByEnumeratingWithState:&v47 objects:v52 count:16];
  if (!v31)
  {
    BOOL v27 = 1;
    goto LABEL_27;
  }

  uint64_t v32 = *(void *)v48;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  id v29 = v5;
  while (2)
  {
    uint64_t v9 = 0LL;
    while (2)
    {
      if (*(void *)v48 != v32) {
        objc_enumerationMutation(obj);
      }
      uint64_t v33 = v9;
      id v10 = *(void **)(*((void *)&v47 + 1) + 8 * v9);
      __int128 v43 = 0u;
      __int128 v44 = 0u;
      __int128 v45 = 0u;
      __int128 v46 = 0u;
      id v37 = v34;
      id v42 = [v37 countByEnumeratingWithState:&v43 objects:v51 count:16];
      if (!v42)
      {
LABEL_25:

        BOOL v27 = 0;
        id v5 = v29;
        goto LABEL_27;
      }

      uint64_t v11 = *(void *)v44;
      uint64_t v36 = *(void *)v44;
LABEL_9:
      uint64_t v12 = 0LL;
      while (1)
      {
        if (*(void *)v44 != v11) {
          objc_enumerationMutation(v37);
        }
        id v13 = *(void **)(*((void *)&v43 + 1) + 8 * v12);
        id v14 = p_ivars[155];
        id v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "fullAssetSelector", v29));
        BOOL v16 = (void *)objc_claimAutoreleasedReturnValue([v15 assetType]);
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v13 fullAssetSelector]);
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 assetType]);
        id v39 = v15;
        uint64_t v19 = p_ivars;
        id v20 = p_ivars[155];
        unsigned int v41 = (void *)objc_claimAutoreleasedReturnValue([v10 fullAssetSelector]);
        id v21 = (void *)objc_claimAutoreleasedReturnValue([v41 assetSpecifier]);
        uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v13 fullAssetSelector]);
        id v22 = (void *)objc_claimAutoreleasedReturnValue([v38 assetSpecifier]);
        unsigned int v40 = v21;
        if (!-[__objc2_ivar_list stringIsEqual:to:](v20, "stringIsEqual:to:", v21, v22))
        {

          p_ivars = v19;
          uint64_t v11 = v36;
          id v15 = v39;
LABEL_17:

          goto LABEL_18;
        }

        id v35 = v19[155];
        uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v10 fullAssetSelector]);
        id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 assetVersion]);
        id v25 = (void *)objc_claimAutoreleasedReturnValue([v13 fullAssetSelector]);
        id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 assetVersion]);
        LOBYTE(v35) = -[__objc2_ivar_list stringIsEqual:to:](v35, "stringIsEqual:to:", v24, v26);

        p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        uint64_t v11 = v36;
LABEL_18:
        if (v42 == (id)++v12)
        {
          id v42 = [v37 countByEnumeratingWithState:&v43 objects:v51 count:16];
          if (v42) {
            goto LABEL_9;
          }
          goto LABEL_25;
        }
      }

      uint64_t v9 = v33 + 1;
      if ((id)(v33 + 1) != v31) {
        continue;
      }
      break;
    }

    BOOL v27 = 1;
    id v5 = v29;
    id v31 = [obj countByEnumeratingWithState:&v47 objects:v52 count:16];
    if (v31) {
      continue;
    }
    break;
  }

- (id)setTargetNewEntryIDForClientDomainName:(id)a3 forAssetSetIdentifier:(id)a4 forClientProvidedSetTarget:(id)a5
{
  id v8 = a5;
  id v9 = a4;
  id v10 = a3;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v8 minTargetOSVersion]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v8 maxTargetOSVersion]);

  id v13 = -[MADAutoAssetControlManager newSetEntryIDForClientDomainName:forAssetSetIdentifier:forMinTargetOS:forMaxTargetOS:]( self,  "newSetEntryIDForClientDomainName:forAssetSetIdentifier:forMinTargetOS:forMaxTargetOS:",  v10,  v9,  v11,  v12);
  return v13;
}

- (id)newSetEntryIDForClientDomainName:(id)a3 forAssetSetIdentifier:(id)a4 forMinTargetOS:(id)a5 forMaxTargetOS:(id)a6
{
  id v9 = a6;
  id v10 = a5;
  id v11 = a4;
  id v12 = a3;
  id v13 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@_%@_%@_%@",  v12,  v11,  v10,  v9);

  return v13;
}

- (void)_routeCatalogFinished:(id)a3 withEventInfo:(id)a4
{
  id v14 = a4;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v14 autoAssetJobID]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:fromLocation:notFoundCode:notFoundReason:]( self,  "currentJobByUUID:fromLocation:notFoundCode:notFoundReason:",  v9,  v6,  6103LL,  @"catalog-download-finished when no active auto-asset-job"));

  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v14 autoAssetJobID]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v14 autoAssetCatalog]);
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v14 finishedError]);
    [v10 handleDownloadCatalogJobFinished:v11 withCatalog:v12 downloadError:v13];
  }
}

- (void)_routeConfigFinished:(id)a3 withEventInfo:(id)a4
{
  id v13 = a4;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetJobID]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:fromLocation:notFoundCode:notFoundReason:]( self,  "currentJobByUUID:fromLocation:notFoundCode:notFoundReason:",  v9,  v6,  6103LL,  @"download-config when no active auto-asset-job"));

  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetJobID]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v13 finishedError]);
    [v10 handleDownloadConfigJobFinished:v11 configError:v12];
  }
}

- (void)_routeAssetProgress:(id)a3 toCurrentJobByUUID:(id)a4 withDownloadProgress:(id)a5
{
  id v13 = a4;
  id v8 = a5;
  id v9 = a3;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:fromLocation:notFoundCode:notFoundReason:]( self,  "currentJobByUUID:fromLocation:notFoundCode:notFoundReason:",  v13,  v9,  6103LL,  @"download-progress when no active auto-asset-job"));
  if (v12) {
    [v12 handleDownloadAssetProgressForJob:v13 withProgress:v8];
  }
}

- (void)_routeAssetFinished:(id)a3 withEventInfo:(id)a4
{
  id v13 = a4;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetJobID]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:fromLocation:notFoundCode:notFoundReason:]( self,  "currentJobByUUID:fromLocation:notFoundCode:notFoundReason:",  v9,  v6,  6103LL,  @"asset-download-finished when no active auto-asset-job"));

  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v13 autoAssetJobID]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v13 finishedError]);
    [v10 handleDownloadAssetJobFinished:v11 downloadError:v12];
  }
}

- (void)_awaitingResumeRemoveType:(int64_t)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadManagerEventsAwaitingResumed]( self,  "downloadManagerEventsAwaitingResumed",  0LL));
  id v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      id v11 = 0LL;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void *)(*((void *)&v13 + 1) + 8LL * (void)v11);
        if (v12 && [*(id *)(*((void *)&v13 + 1) + 8 * (void)v11) paramType] != &dword_8) {
          -[NSMutableArray addObject:](v6, "addObject:", v12);
        }
        id v11 = (char *)v11 + 1;
      }

      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }

    while (v9);
  }

  -[MADAutoAssetControlManager setDownloadManagerEventsAwaitingResumed:]( self,  "setDownloadManagerEventsAwaitingResumed:",  v6);
}

- (void)_awaitingResumeReduceToLatest
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadManagerEventsAwaitingResumed]( self,  "downloadManagerEventsAwaitingResumed"));
  id v8 = [v7 countByEnumeratingWithState:&v27 objects:v32 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v28;
    do
    {
      for (os_log_t i = 0LL; i != v9; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v28 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void **)(*((void *)&v27 + 1) + 8LL * (void)i);
        __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([v12 autoAssetJobID]);
        -[NSMutableDictionary setSafeObject:forKey:](v6, "setSafeObject:forKey:", v12, v13);
      }

      id v9 = [v7 countByEnumeratingWithState:&v27 objects:v32 count:16];
    }

    while (v9);
  }

  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v14 = v6;
  id v15 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v14,  "countByEnumeratingWithState:objects:count:",  &v23,  v31,  16LL);
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = *(void *)v24;
    do
    {
      for (j = 0LL; j != v16; j = (char *)j + 1)
      {
        if (*(void *)v24 != v17) {
          objc_enumerationMutation(v14);
        }
        uint64_t v19 = *(void *)(*((void *)&v23 + 1) + 8LL * (void)j);
        id v20 = objc_autoreleasePoolPush();
        uint64_t v21 = objc_opt_class(&OBJC_CLASS___MADAutoAssetControlManagerParam);
        id v22 = (void *)objc_claimAutoreleasedReturnValue( -[NSMutableDictionary safeObjectForKey:ofClass:]( v14,  "safeObjectForKey:ofClass:",  v19,  v21,  (void)v23));
        if (v22) {
          -[NSMutableArray addObject:](v5, "addObject:", v22);
        }

        objc_autoreleasePoolPop(v20);
      }

      id v16 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v14,  "countByEnumeratingWithState:objects:count:",  &v23,  v31,  16LL);
    }

    while (v16);
  }

  -[MADAutoAssetControlManager setDownloadManagerEventsAwaitingResumed:]( self,  "setDownloadManagerEventsAwaitingResumed:",  v5);
}

- (void)_requestDownloadManagerSync
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "[%{public}@] {_requestDownloadManagerSync} | No download manager available; unable to attempt sync as mitigation for"
    " potential lost sync",
    v4,
    v5,
    v6,
    v7,
    v8);

  OUTLINED_FUNCTION_10();
}

- (id)_updatePolicyForSelector:(id)a3
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3));
  uint64_t v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager defaultUpdatePolicy](self, "defaultUpdatePolicy"));
  uint64_t v7 = -[MADAutoAssetControlManager preferenceActivityIntervalSecs](self, "preferenceActivityIntervalSecs");
  if (v7 >= 1) {
    [v6 setCheckForNewerIntervalSecs:v7];
  }
  uint8_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager defaultUpdatePolicy](self, "defaultUpdatePolicy"));

  return v8;
}

- (void)loadPersistedDescriptors
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  [v5 loadPersistedState:@"loadPersistedDescriptors"];

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"loadPersistedDescriptors"]);

  if ([v7 count])
  {
    __int128 v51 = 0u;
    __int128 v52 = 0u;
    __int128 v49 = 0u;
    __int128 v50 = 0u;
    id v8 = v7;
    id v48 = [v8 countByEnumeratingWithState:&v49 objects:v59 count:16];
    if (v48)
    {
      __int128 v45 = v7;
      uint64_t v47 = *(void *)v50;
      id v46 = v8;
      while (1)
      {
        id v9 = 0LL;
        do
        {
          if (*(void *)v50 != v47) {
            objc_enumerationMutation(v8);
          }
          uint64_t v10 = *(void *)(*((void *)&v49 + 1) + 8LL * (void)v9);
          id v11 = objc_autoreleasePoolPush();
          uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
          __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedEntry:v10 fromLocation:@"loadPersistedDescriptors"]);

          if (!v13)
          {
            id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

            if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
              goto LABEL_33;
            }
            id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
            *(_DWORD *)int buf = 138543618;
            __int128 v54 = v18;
            __int16 v55 = 2114;
            uint64_t v56 = v10;
            _os_log_error_impl( &dword_0,  v16,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedDescriptors} unable to determine previous status | entryID:%{public}@",  buf,  0x16u);
            goto LABEL_32;
          }

          id v14 = [v13 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
          id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
          id v16 = v15;
          if (!v15)
          {
            __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

            if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
            {
              uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              *(_DWORD *)int buf = 138543618;
              __int128 v54 = v19;
              __int16 v55 = 2114;
              uint64_t v56 = v10;
              _os_log_error_impl( &dword_0,  v18,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedDescriptors} unable to load auto-asset-descriptor | entryID:%{public}@",  buf,  0x16u);
              goto LABEL_23;
            }

- (void)loadPersistedSetConfigurations
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetConfigurations](self, "persistedKnownSetConfigurations"));
  [v5 loadPersistedState:@"loadPersistedSetConfigurations"];

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetConfigurations](self, "persistedKnownSetConfigurations"));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"loadPersistedSetConfigurations"]);

  if ([v7 count])
  {
    __int128 v45 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    __int128 v55 = 0u;
    __int128 v56 = 0u;
    __int128 v44 = v7;
    id v8 = v7;
    id v9 = [v8 countByEnumeratingWithState:&v53 objects:v62 count:16];
    if (v9)
    {
      id v10 = v9;
      id v11 = @"loadPersistedSetConfigurations";
      id obj = *(id *)v54;
      do
      {
        uint64_t v12 = 0LL;
        id v46 = v10;
        do
        {
          if (*(id *)v54 != obj) {
            objc_enumerationMutation(v8);
          }
          __int128 v13 = *(const __CFString **)(*((void *)&v53 + 1) + 8LL * (void)v12);
          id v14 = objc_autoreleasePoolPush();
          id v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
          id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 persistedEntry:v13 fromLocation:v11]);

          if (v13) {
            BOOL v17 = v16 == 0LL;
          }
          else {
            BOOL v17 = 1;
          }
          if (v17)
          {
            id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

            if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            {
              uint64_t v20 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              uint64_t v21 = (void *)v20;
              *(_DWORD *)int buf = 138543618;
              id v22 = @"N";
              if (v13) {
                id v22 = v13;
              }
              uint64_t v59 = v20;
              __int16 v60 = 2114;
              id v61 = v22;
              _os_log_error_impl( &dword_0,  v19,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedSetConfigurations} unable to determine previous status | entryID:%{public}@",  buf,  0x16u);
            }
          }

          else
          {
            id v23 = [v16 secureCodedObjectForKey:@"setConfiguration" ofClass:objc_opt_class(MADAutoSetConfiguration)];
            uint64_t v24 = objc_claimAutoreleasedReturnValue(v23);
            uint64_t v19 = (os_log_s *)v24;
            if (v24)
            {
              -[MADAutoAssetControlManager setConfigurationLoadedFromPersisted:persistedEntryID:]( self,  "setConfigurationLoadedFromPersisted:persistedEntryID:",  v24,  v13);
            }

            else
            {
              __int128 v25 = v11;
              id v26 = v8;
              __int128 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              __int128 v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

              if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
              {
                __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                *(_DWORD *)int buf = 138543618;
                uint64_t v59 = (uint64_t)v29;
                __int16 v60 = 2114;
                id v61 = v13;
                _os_log_error_impl( &dword_0,  v28,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedSetConfigurations} unable to load set-configuration | entryID:%{public}@",  buf,  0x16u);
              }

              -[NSMutableArray addObject:](v45, "addObject:", v13);
              id v8 = v26;
              id v11 = v25;
              id v10 = v46;
            }
          }

          objc_autoreleasePoolPop(v14);
          uint64_t v12 = (char *)v12 + 1;
        }

        while (v10 != v12);
        id v10 = [v8 countByEnumeratingWithState:&v53 objects:v62 count:16];
      }

      while (v10);
    }

    __int128 v51 = 0u;
    __int128 v52 = 0u;
    __int128 v49 = 0u;
    __int128 v50 = 0u;
    __int128 v30 = v45;
    id v31 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v30,  "countByEnumeratingWithState:objects:count:",  &v49,  v57,  16LL);
    if (v31)
    {
      id v32 = v31;
      uint64_t v33 = *(void *)v50;
      id obja = v30;
      do
      {
        for (os_log_t i = 0LL; i != v32; os_log_t i = (char *)i + 1)
        {
          if (*(void *)v50 != v33) {
            objc_enumerationMutation(obja);
          }
          uint64_t v35 = *(void *)(*((void *)&v49 + 1) + 8LL * (void)i);
          uint64_t v36 = objc_autoreleasePoolPush();
          id v37 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
          uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue( [v37 persistedEntry:v35 fromLocation:@"loadPersistedSetConfigurations"]);

          id v39 = [v38 secureCodedObjectForKey:@"setConfiguration" ofClass:objc_opt_class(MADAutoSetConfiguration)];
          unsigned int v40 = (void *)objc_claimAutoreleasedReturnValue(v39);
          unsigned int v41 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
          [v41 removePersistedEntry:v35 fromLocation:@"loadPersistedSetConfigurations"];

          -[MADAutoAssetControlManager _logPersistedSetConfigurationRemoved:removedPersistedEntryID:removedSetConfiguration:message:]( self,  "_logPersistedSetConfigurationRemoved:removedPersistedEntryID:removedSetConfiguration:message:",  @"loadPersistedSetConfigurations",  v35,  v40,  @"dropped while loading persisted-state");
          objc_autoreleasePoolPop(v36);
        }

        __int128 v30 = obja;
        id v32 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obja,  "countByEnumeratingWithState:objects:count:",  &v49,  v57,  16LL);
      }

      while (v32);
    }

    uint64_t v7 = v44;
  }

  else
  {
    id v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int128 v30 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([v42 oslog]);

    if (os_log_type_enabled((os_log_t)v30, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      *(_DWORD *)int buf = 138543362;
      uint64_t v59 = (uint64_t)v43;
      _os_log_impl( &dword_0,  (os_log_t)v30,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {loadPersistedSetConfigurations} no persisted set-configurations to be resumed",  buf,  0xCu);
    }
  }

  -[MADAutoAssetControlManager _logPersistedSetConfigurationTableOfContents:]( self,  "_logPersistedSetConfigurationTableOfContents:",  @"loadPersistedSetConfigurations");
}

- (void)loadPersistedSetAtomicInstances
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
  [v5 loadPersistedState:@"loadPersistedSetAtomicInstances"];

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"loadPersistedSetAtomicInstances"]);

  if ([v7 count])
  {
    context = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v57 = 0u;
    __int128 v58 = 0u;
    __int128 v59 = 0u;
    __int128 v60 = 0u;
    id v46 = v7;
    id v8 = v7;
    id v9 = [v8 countByEnumeratingWithState:&v57 objects:v66 count:16];
    id v10 = self;
    __int128 v50 = self;
    if (v9)
    {
      id v11 = v9;
      uint64_t v12 = *(void *)v58;
      do
      {
        __int128 v13 = 0LL;
        do
        {
          if (*(void *)v58 != v12) {
            objc_enumerationMutation(v8);
          }
          id v14 = *(const __CFString **)(*((void *)&v57 + 1) + 8LL * (void)v13);
          id v15 = objc_autoreleasePoolPush();
          id v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( v10,  "persistedKnownSetAtomicInstances"));
          BOOL v17 = (void *)objc_claimAutoreleasedReturnValue( [v16 persistedEntry:v14 fromLocation:@"loadPersistedSetAtomicInstances"]);

          if (v14) {
            BOOL v18 = v17 == 0LL;
          }
          else {
            BOOL v18 = 1;
          }
          if (v18)
          {
            uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v10, "logger"));
            uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

            if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
            {
              uint64_t v26 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v10, "_updateLatestSummary"));
              __int128 v27 = (void *)v26;
              *(_DWORD *)int buf = 138543618;
              __int128 v28 = @"N";
              if (v14) {
                __int128 v28 = v14;
              }
              uint64_t v63 = v26;
              __int16 v64 = 2114;
              uint64_t v65 = v28;
              _os_log_error_impl( &dword_0,  v20,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedSetAtomicInstances} unable to determine previous status | entryID:%{public}@",  buf,  0x16u);
            }

            if (v14) {
              -[NSMutableArray addObject:](context, "addObject:", v14);
            }
          }

          else
          {
            id v21 = [v17 secureCodedObjectForKey:@"setAtomicInstance" ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
            uint64_t v22 = objc_claimAutoreleasedReturnValue(v21);
            id v23 = (void *)v22;
            if (v22)
            {
              -[MADAutoAssetControlManager atomicInstanceLoadedFromPersisted:persistedEntryID:]( v10,  "atomicInstanceLoadedFromPersisted:persistedEntryID:",  v22,  v14);
            }

            else
            {
              uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v10, "logger"));
              __int128 v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

              if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
              {
                __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v50, "_updateLatestSummary"));
                *(_DWORD *)int buf = 138543618;
                uint64_t v63 = (uint64_t)v29;
                __int16 v64 = 2114;
                uint64_t v65 = v14;
                _os_log_error_impl( &dword_0,  v25,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedSetAtomicInstances} unable to load set-atomic-instance | entryID:%{public}@",  buf,  0x16u);
              }

              -[NSMutableArray addObject:](context, "addObject:", v14);
              id v10 = v50;
            }
          }

          objc_autoreleasePoolPop(v15);
          __int128 v13 = (char *)v13 + 1;
        }

        while (v11 != v13);
        id v30 = [v8 countByEnumeratingWithState:&v57 objects:v66 count:16];
        id v11 = v30;
      }

      while (v30);
    }

    __int128 v55 = 0u;
    __int128 v56 = 0u;
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    id v31 = context;
    id v49 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v31,  "countByEnumeratingWithState:objects:count:",  &v53,  v61,  16LL);
    if (v49)
    {
      id obj = v31;
      uint64_t v48 = *(void *)v54;
      do
      {
        for (os_log_t i = 0LL; i != v49; os_log_t i = (char *)i + 1)
        {
          if (*(void *)v54 != v48) {
            objc_enumerationMutation(obj);
          }
          uint64_t v33 = *(void *)(*((void *)&v53 + 1) + 8LL * (void)i);
          contexta = objc_autoreleasePoolPush();
          id v34 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( v10,  "persistedKnownSetAtomicInstances"));
          uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue( [v34 persistedEntry:v33 fromLocation:@"loadPersistedSetAtomicInstances"]);

          id v36 = [v35 secureCodedObjectForKey:@"setAtomicInstance" ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
          id v37 = (void *)objc_claimAutoreleasedReturnValue(v36);
          uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( v10,  "persistedKnownSetAtomicInstances"));
          [v38 removePersistedEntry:v33 fromLocation:@"loadPersistedSetAtomicInstances"];

          id v39 = (void *)objc_claimAutoreleasedReturnValue([v37 instanceEntries]);
          id v40 = [v39 count];
          unsigned int v41 = (void *)objc_claimAutoreleasedReturnValue([v37 clientDomainName]);
          id v42 = (void *)objc_claimAutoreleasedReturnValue([v37 assetSetIdentifier]);
          __int128 v43 = (void *)objc_claimAutoreleasedReturnValue([v37 atomicInstanceUUID]);
          id v10 = v50;
          +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:usageCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:usageCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:",  320LL,  2LL,  1LL,  v40,  v41,  v42,  v43);

          -[MADAutoAssetControlManager _logPersistedSetAtomicInstanceRemoved:removedPersistedEntryID:removedSetAtomicInstance:message:]( v50,  "_logPersistedSetAtomicInstanceRemoved:removedPersistedEntryID:removedSetAtomicInstance:message:",  @"loadPersistedSetAtomicInstances",  v33,  v37,  @"dropped while loading persisted-state");
          objc_autoreleasePoolPop(contexta);
        }

        id v31 = obj;
        id v49 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v53,  v61,  16LL);
      }

      while (v49);
    }

    uint64_t v7 = v46;
  }

  else
  {
    __int128 v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v31 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([v44 oslog]);

    id v10 = self;
    if (os_log_type_enabled((os_log_t)v31, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      *(_DWORD *)int buf = 138543362;
      uint64_t v63 = (uint64_t)v45;
      _os_log_impl( &dword_0,  (os_log_t)v31,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {loadPersistedSetAtomicInstances} no persisted set-atomic-instances to be resumed",  buf,  0xCu);
    }
  }

  -[MADAutoAssetControlManager _logPersistedSetAtomicInstanceTableOfContents:]( v10,  "_logPersistedSetAtomicInstanceTableOfContents:",  @"loadPersistedSetAtomicInstances");
}

- (void)loadPersistedSetDownloadedDescriptors
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_9_0(a1, a2), "_updateLatestSummary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_15((uint64_t)v3, 5.8381e-34);
  OUTLINED_FUNCTION_4_1(&dword_0, v4, v5, "[%{public}@] {loadPersistedSetDownloadedDescriptors} no entryID");

  OUTLINED_FUNCTION_11();
}

- (void)loadPersistedSetActiveJobDescriptors
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
  [v5 loadPersistedState:@"loadPersistedSetActiveJobDescriptors"];

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"loadPersistedSetActiveJobDescriptors"]);

  if (![v7 count])
  {
    char v66 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    unsigned int v67 = (os_log_s *)objc_claimAutoreleasedReturnValue([v66 oslog]);

    if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v68 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      *(_DWORD *)int buf = 138543362;
      uint64_t v114 = (uint64_t)v68;
      _os_log_impl( &dword_0,  v67,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {loadPersistedSetActiveJobDescriptors} no persisted auto-asset-set-jobs to be resumed | MA_MILESTONE",  buf,  0xCu);
    }

    goto LABEL_83;
  }

  __int128 v102 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v108 = 0u;
  __int128 v109 = 0u;
  __int128 v110 = 0u;
  __int128 v111 = 0u;
  uint64_t v92 = v7;
  id obj = v7;
  id v8 = [obj countByEnumeratingWithState:&v108 objects:v119 count:16];
  if (!v8)
  {
    uint64_t v93 = 0LL;
    goto LABEL_64;
  }

  id v9 = v8;
  uint64_t v93 = 0LL;
  uint64_t v10 = *(void *)v109;
  uint64_t v96 = *(void *)v109;
  do
  {
    id v11 = 0LL;
    do
    {
      if (*(void *)v109 != v10) {
        objc_enumerationMutation(obj);
      }
      uint64_t v12 = *(const __CFString **)(*((void *)&v108 + 1) + 8LL * (void)v11);
      __int128 v13 = objc_autoreleasePoolPush();
      if (v12)
      {
        id v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
        id v15 = (void *)objc_claimAutoreleasedReturnValue( [v14 persistedEntry:v12 fromLocation:@"loadPersistedSetActiveJobDescriptors"]);

        if (v15)
        {
          id v16 = [v15 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
          BOOL v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
          BOOL v18 = v17;
          if (v17)
          {
            uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSetIdentifier]);

            if (v19)
            {
              uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v18 discoveredAtomicInstance]);

              if (v20)
              {
                id v21 = (void *)objc_claimAutoreleasedReturnValue([v18 discoveredAtomicEntries]);

                if (v21)
                {
                  if ([v18 isOnFilesystem]
                    && ![v18 onFilesystemIncomplete])
                  {
                    goto LABEL_36;
                  }

                  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v18 clientDomainName]);
                  id v23 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSetIdentifier]);
                  uint64_t v98 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v22,  v23));

                  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v18 discoveredAtomicInstance]);
                  __int16 v99 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetAtomicInstanceByInstanceUUID:]( self,  "locateSetAtomicInstanceByInstanceUUID:",  v24));

                  __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v18 discoveredAtomicInstance]);
                  uint64_t v26 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v25));

                  __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v18 discoveredAtomicInstance]);
                  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorActiveJobByAtomicInstanceUUID:]( self,  "locateSetDescriptorActiveJobByAtomicInstanceUUID:",  v27));

                  id v100 = (void *)v26;
                  __int128 v97 = v28;
                  if (v26)
                  {
                    __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                    id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

                    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
                    {
                      os_log_t log = (os_log_t)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                      id v31 = (void *)objc_claimAutoreleasedReturnValue([v18 summary]);
                      uint64_t v32 = objc_claimAutoreleasedReturnValue([v100 summary]);
                      *(_DWORD *)int buf = 138543874;
                      uint64_t v114 = (uint64_t)log;
                      __int16 v115 = 2114;
                      uint64_t v116 = (uint64_t)v31;
                      __int16 v117 = 2114;
                      uint64_t v118 = v32;
                      uint64_t v33 = (void *)v32;
                      _os_log_impl( &dword_0,  v30,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {loadPersistedSetActiveJobDescriptors} not considering resuming active-set-job sinc e have already downloaded set-descriptor | setJobDescriptor:%{public}@ | downloadedSetDescriptor:%{public}@",  buf,  0x20u);
                      goto LABEL_18;
                    }

                    goto LABEL_41;
                  }

                  if (v28)
                  {
                    uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                    id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v47 oslog]);

                    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
                    {
                      os_log_t log = (os_log_t)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                      id v31 = (void *)objc_claimAutoreleasedReturnValue([v18 summary]);
                      uint64_t v62 = objc_claimAutoreleasedReturnValue([v97 summary]);
                      *(_DWORD *)int buf = 138543874;
                      uint64_t v114 = (uint64_t)log;
                      __int16 v115 = 2114;
                      uint64_t v116 = (uint64_t)v31;
                      __int16 v117 = 2114;
                      uint64_t v118 = v62;
                      uint64_t v33 = (void *)v62;
                      _os_log_error_impl( &dword_0,  v30,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedSetActiveJobDescriptors} active-set-job set-descriptor repeated (alre ady adopted set-job) | dropping repeated setJobDescriptor:%{public}@ | already tracking active s etJobDescriptor:%{public}@",  buf,  0x20u);
LABEL_18:
                    }

- (void)loadPersistedSetTargets
{
  id v2 = self;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](v2, "persistedSetTargets"));
  [v5 loadPersistedState:@"loadPersistedSetTargets"];

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](v2, "persistedSetTargets"));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedConfig]);
  uint64_t v8 = objc_claimAutoreleasedReturnValue([v7 stringForKey:@"bootedOSVersion"]);

  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](v2, "persistedSetTargets"));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedConfig]);
  uint64_t v11 = objc_claimAutoreleasedReturnValue([v10 stringForKey:@"bootedBuildVersion"]);

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](v2, "persistedSetTargets"));
  __int16 v87 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedEntryIDs:@"loadPersistedSetTargets"]);

  BOOL v85 = (void *)v8;
  uint64_t v86 = (void *)v11;
  if (v8) {
    BOOL v13 = v11 == 0;
  }
  else {
    BOOL v13 = 1;
  }
  int v14 = !v13;
  __int16 v99 = v2;
  if (v13)
  {
    uint64_t v35 = @"previous MA daemon execution was running version prior to having support for set-targets";
LABEL_30:
    id v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](v2, "persistedSetTargets"));
    id v37 = (void *)objc_claimAutoreleasedReturnValue([v36 persistedConfig]);
    uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager bootedOSVersion](v2, "bootedOSVersion"));
    [v37 persistString:v38 forKey:@"bootedOSVersion"];

    id v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](v2, "persistedSetTargets"));
    id v40 = (void *)objc_claimAutoreleasedReturnValue([v39 persistedConfig]);
    unsigned int v41 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager bootedOBuildVersion](v2, "bootedOBuildVersion"));
    [v40 persistString:v41 forKey:@"bootedBuildVersion"];

    if (!v14) {
      goto LABEL_66;
    }
    id v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager bootedOSVersion](v2, "bootedOSVersion"));
    uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager restoreVersionFromOSVersion:]( &OBJC_CLASS___MADAutoAssetControlManager,  "restoreVersionFromOSVersion:",  v42));

    if (![v87 count]) {
      goto LABEL_65;
    }
    uint64_t v84 = v35;
    __int128 v107 = 0u;
    __int128 v108 = 0u;
    __int128 v105 = 0u;
    __int128 v106 = 0u;
    id v44 = v87;
    id v102 = [v44 countByEnumeratingWithState:&v105 objects:v113 count:16];
    if (!v102) {
      goto LABEL_64;
    }
    uint64_t v101 = *(void *)v106;
    id v98 = v44;
    while (1)
    {
      __int128 v45 = 0LL;
      do
      {
        if (*(void *)v106 != v101) {
          objc_enumerationMutation(v44);
        }
        id v46 = *(void **)(*((void *)&v105 + 1) + 8LL * (void)v45);
        uint64_t v47 = objc_autoreleasePoolPush();
        uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](v2, "persistedSetTargets"));
        id v49 = (void *)objc_claimAutoreleasedReturnValue([v48 persistedEntry:v46 fromLocation:@"loadPersistedSetTargets"]);

        if (v49)
        {
          id obja = v47;
          id v50 = [v49 secureCodedObjectForKey:@"setTarget" ofClass:objc_opt_class(MADAutoSetTarget)];
          __int128 v51 = (void *)objc_claimAutoreleasedReturnValue(v50);
          __int128 v52 = v51;
          if (!v51)
          {
            __int128 v72 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v2, "logger"));
            __int128 v55 = (os_log_s *)objc_claimAutoreleasedReturnValue([v72 oslog]);

            if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)int buf = 138543362;
              __int16 v115 = v46;
              _os_log_error_impl( &dword_0,  v55,  OS_LOG_TYPE_ERROR,  "{loadPersistedSetTargets} | no set-taget entry found for entry:%{public}@",  buf,  0xCu);
            }

            uint64_t v47 = obja;
            goto LABEL_57;
          }

          __int128 v53 = (void *)objc_claimAutoreleasedReturnValue([v51 clientDomainName]);
          __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v52 assetSetIdentifier]);
          __int128 v55 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( v2,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v53,  v54));

          if (v55)
          {
            __int128 v56 = (void *)objc_claimAutoreleasedReturnValue([v52 minTargetOSVersion]);
            __int128 v57 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager restoreVersionFromOSVersion:]( &OBJC_CLASS___MADAutoAssetControlManager,  "restoreVersionFromOSVersion:",  v56));

            __int128 v58 = (void *)objc_claimAutoreleasedReturnValue([v52 maxTargetOSVersion]);
            __int128 v59 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager restoreVersionFromOSVersion:]( &OBJC_CLASS___MADAutoAssetControlManager,  "restoreVersionFromOSVersion:",  v58));

            id v100 = v59;
            if ([v57 isComparable:v43]
              && [v59 isComparable:v43])
            {
              __int128 v60 = (char *)[v57 compare:v43];
              id v61 = [v59 compare:v43];
              uint64_t v47 = obja;
              if (v60 == (_BYTE *)&dword_0 + 1)
              {
                id v44 = v98;
                id v2 = v99;
                goto LABEL_56;
              }

              id v44 = v98;
              if (v61 == (id)-1LL)
              {
                id v2 = v99;
                goto LABEL_56;
              }

              uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([v52 autoAssetEntries]);
              id v63 = [v62 count];

              if (v63)
              {
                id v2 = v99;
                if (!-[MADAutoAssetControlManager setTargetEntries:matchSetConfiguration:]( v99,  "setTargetEntries:matchSetConfiguration:",  v52,  v55))
                {
                  uint64_t v92 = objc_alloc(&OBJC_CLASS___MADAutoSetConfiguration);
                  id v91 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s clientDomainName](v55, "clientDomainName"));
                  __int128 v94 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s autoAssetSetClientName](v55, "autoAssetSetClientName"));
                  id v88 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetSetIdentifier](v55, "assetSetIdentifier"));
                  uint32_t v90 = (void *)objc_claimAutoreleasedReturnValue([v52 autoAssetEntries]);
                  __int16 v64 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s latestAtomicInstanceToVend](v55, "latestAtomicInstanceToVend"));
                  unsigned int v89 = -[os_log_s inhibitImpliedScheduling](v55, "inhibitImpliedScheduling");
                  unsigned __int8 v65 = -[os_log_s haveReceivedLookupResponse](v55, "haveReceivedLookupResponse");
                  BYTE1(v83) = -[os_log_s vendingAtomicInstanceForConfiguredEntries]( v55,  "vendingAtomicInstanceForConfiguredEntries");
                  LOBYTE(v83) = v65;
                  id v66 = -[MADAutoSetConfiguration initForClientDomainName:forSetClientName:forAssetSetIdentifier:withAutoAssetEntries:withLatestAtomicInstanceToVend:inhibitingImpliedScheduling:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:]( v92,  "initForClientDomainName:forSetClientName:forAssetSetIdentifier:withAutoAssetEntries:withLatest AtomicInstanceToVend:inhibitingImpliedScheduling:havingReceivedLookupResponse:vendingAtomicIns tanceForConfiguredEntries:",  v91,  v94,  v88,  v90,  v64,  v89,  v83);

                  unsigned int v67 = (NSString *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationNewEntryIDForSetConfiguration:]( v99,  "setConfigurationNewEntryIDForSetConfiguration:",  v66));
                  [v49 persistSecureCodedObject:v66 forKey:@"setConfiguration"];
                  id v95 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( v99,  "persistedKnownSetConfigurations"));
                  __int128 v68 = (void *)objc_claimAutoreleasedReturnValue([v66 summary]);
                  objc_msgSend(v95, "storePersistedEntry:withEntrySummary:fromLocation:", v67);

                  id v69 = objc_alloc(&OBJC_CLASS___NSString);
                  uint64_t v96 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s summary](v55, "summary"));
                  uint64_t v93 = (void *)objc_claimAutoreleasedReturnValue([v52 summary]);
                  id v70 = -[NSString initWithFormat:]( v69,  "initWithFormat:",  @"altered set-configuration auto-asset-entries to align with set-target | setConfiguration:%@ | setTarget:%@",  v96,  v93);
                  uint64_t v47 = obja;
                  -[MADAutoAssetControlManager _logPersistedSetConfiguration:operation:forPersistedEntryID:withSetConfiguration:historyOperation:message:]( v99,  "_logPersistedSetConfiguration:operation:forPersistedEntryID:withSetConfiguration:historyOperation:message:",  @"loadPersistedSetTargets",  @"ENTRY_MODIFY",  v67,  v66,  447LL,  v70);

                  id v44 = v98;
                  __int128 v97 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetConfigurationsByIdentifier]( v99,  "knownSetConfigurationsByIdentifier"));
                  [v97 setSafeObject:v66 forKey:v67];

                  goto LABEL_55;
                }

- (void)loadPersistedSetLookupResults
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
  [v5 loadPersistedState:@"loadPersistedSetLookupResults"];

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedConfig]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 stringForKey:@"lookupBootedOSVersion"]);

  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedConfig]);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 stringForKey:@"lookupBootedBuildVersion"]);

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
  BOOL v13 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedEntryIDs:@"loadPersistedSetLookupResults"]);

  int v14 = @"previous MA daemon execution was running version prior to having support for set-lookup-results";
  if (!v8 || !v11) {
    goto LABEL_24;
  }
  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager bootedOSVersion](self, "bootedOSVersion"));
  if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v8, v15) & 1) == 0)
  {

    goto LABEL_23;
  }

  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager bootedOBuildVersion](self, "bootedOBuildVersion"));
  unsigned int v17 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v11, v16);

  if (!v17)
  {
LABEL_23:
    int v14 = @"previous MA daemon execution was running from different OS version than booted OS version";
LABEL_24:
    id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
    [v34 removeAllPersistedEntries:v14];

    goto LABEL_25;
  }

  if ([v13 count])
  {
    id v39 = v11;
    id v40 = v8;
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    uint64_t v38 = v13;
    id v18 = v13;
    id v41 = [v18 countByEnumeratingWithState:&v42 objects:v50 count:16];
    if (v41)
    {
      uint64_t v19 = *(void *)v43;
      do
      {
        id v20 = 0LL;
        do
        {
          if (*(void *)v43 != v19) {
            objc_enumerationMutation(v18);
          }
          uint64_t v21 = *(void *)(*((void *)&v42 + 1) + 8LL * (void)v20);
          uint64_t v22 = objc_autoreleasePoolPush();
          uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
          uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v23 persistedEntry:v21 fromLocation:@"loadPersistedSetTargets"]);

          if (v24)
          {
            id v25 = [v24 secureCodedObjectForKey:@"setLookupResult" ofClass:objc_opt_class(MADAutoSetLookupResult)];
            uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
            if (v26)
            {
              -[MADAutoAssetControlManager _logPersistedSetLookupResult:operation:forPersistedEntryID:withSetLookupResult:message:]( self,  "_logPersistedSetLookupResult:operation:forPersistedEntryID:withSetLookupResult:message:",  @"loadPersistedSetLookupResults",  @"ENTRY_LOAD",  v21,  v26,  @"set-lookup-result validated");
            }

            else
            {
              uint64_t v29 = v19;
              id v30 = v18;
              id v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              uint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 oslog]);

              if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
              {
                uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                *(_DWORD *)int buf = 138543618;
                uint64_t v47 = v33;
                __int16 v48 = 2114;
                uint64_t v49 = v21;
                _os_log_error_impl( &dword_0,  v32,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedSetLookupResults} unable to load set-lookup-result | entryID:%{public}@",  buf,  0x16u);
              }

              id v18 = v30;
              uint64_t v19 = v29;
            }
          }

          else
          {
            id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            {
              __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              *(_DWORD *)int buf = 138543618;
              uint64_t v47 = v28;
              __int16 v48 = 2114;
              uint64_t v49 = v21;
              _os_log_error_impl( &dword_0,  v26,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedSetLookupResults} unable to determine previous status | entryID:%{public}@",  buf,  0x16u);
            }
          }

          objc_autoreleasePoolPop(v22);
          id v20 = (char *)v20 + 1;
        }

        while (v41 != v20);
        id v41 = [v18 countByEnumeratingWithState:&v42 objects:v50 count:16];
      }

      while (v41);
    }

    uint64_t v11 = v39;
    uint64_t v8 = v40;
    BOOL v13 = v38;
  }

  else
  {
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
    {
      id v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      *(_DWORD *)int buf = 138543362;
      uint64_t v47 = v37;
      _os_log_impl( &dword_0,  v36,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {loadPersistedSetLookupResults} no persisted set-lookup-results to be resumed",  buf,  0xCu);
    }
  }

- (void)loadPersistedActiveJobs
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
  [v5 loadPersistedState:@"loadPersistedActiveJobs"];

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"loadPersistedActiveJobs"]);

  uint64_t v8 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  unsigned int v67 = v7;
  if ([v7 count])
  {
    __int128 v68 = v8;
    __int128 v81 = 0u;
    __int128 v82 = 0u;
    __int128 v79 = 0u;
    __int128 v80 = 0u;
    id obj = v7;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    id v73 = [obj countByEnumeratingWithState:&v79 objects:v90 count:16];
    if (v73)
    {
      uint64_t v72 = *(void *)v80;
      do
      {
        uint64_t v10 = 0LL;
        do
        {
          if (*(void *)v80 != v72) {
            objc_enumerationMutation(obj);
          }
          uint64_t v11 = *(const __CFString **)(*((void *)&v79 + 1) + 8LL * (void)v10);
          uint64_t v12 = objc_autoreleasePoolPush();
          BOOL v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
          int v14 = (void *)objc_claimAutoreleasedReturnValue([v13 persistedEntry:v11 fromLocation:@"loadPersistedActiveJobs"]);

          if (v11) {
            BOOL v15 = v14 == 0LL;
          }
          else {
            BOOL v15 = 1;
          }
          if (v15)
          {
            id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            unsigned int v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 oslog]);

            if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
              goto LABEL_35;
            }
            uint64_t v18 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
            uint64_t v19 = (os_log_s *)v18;
            *(_DWORD *)int buf = 138543618;
            id v20 = @"N";
            if (v11) {
              id v20 = v11;
            }
            uint64_t v85 = v18;
            __int16 v86 = 2114;
            __int16 v87 = v20;
            _os_log_error_impl( &dword_0,  v17,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedActiveJobs} unable to determine previous status | entryID:%{public}@",  buf,  0x16u);
            goto LABEL_34;
          }

          id v21 = [v14 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(p_ivars[223])];
          uint64_t v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
          unsigned int v17 = v22;
          if (v22)
          {
            if (-[os_log_s isBlankEntry](v22, "isBlankEntry"))
            {
              uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

              if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                *(_DWORD *)int buf = 138543618;
                uint64_t v85 = (uint64_t)v24;
                __int16 v86 = 2114;
                __int16 v87 = v11;
                id v25 = v19;
                uint64_t v26 = "[%{public}@] {loadPersistedActiveJobs} encountered blank previously active-job | entryID:%{public}@";
                goto LABEL_32;
              }
            }

            else
            {
              __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetVersion](v17, "assetVersion"));

              if (v28)
              {
                if (!-[MADAutoAssetControlManager jobDescriptorInFlightNowOnFilesystem:]( self,  "jobDescriptorInFlightNowOnFilesystem:",  v17)) {
                  goto LABEL_35;
                }
                uint64_t v29 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
                id v30 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetType](v17, "assetType"));
                id v31 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetSpecifier](v17, "assetSpecifier"));
                uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetVersion](v17, "assetVersion"));
                uint64_t v19 = (os_log_s *)-[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v29,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v30,  v31,  v32);

                id v69 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v19));
                if (v69)
                {
                  uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                  id v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

                  if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
                  {
                    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                    id v36 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s summary](v17, "summary"));
                    *(_DWORD *)int buf = 138543874;
                    uint64_t v85 = (uint64_t)v35;
                    __int16 v86 = 2114;
                    __int16 v87 = v11;
                    __int16 v88 = 2114;
                    unsigned int v89 = v36;
                    _os_log_impl( &dword_0,  v34,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {loadPersistedActiveJobs} previously in-flight now on filesystem validated | entryID: %{public}@, adoptedDescriptor:%{public}@",  buf,  0x20u);
                  }

                  -[MADAutoAssetControlManager _statsIncrementPreviouslyDownloadedForDescriptor:]( self,  "_statsIncrementPreviouslyDownloadedForDescriptor:",  v17);
                  -[os_log_s setIsOnFilesystem:](v17, "setIsOnFilesystem:", 1LL);
                  id v37 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s metadata](v17, "metadata"));
                  id v38 = [v37 safeIntegerForKey:@"_UnarchivedSize"];

                  if ((uint64_t)v38 >= 1)
                  {
                    -[os_log_s setDownloadedNetworkBytes:](v17, "setDownloadedNetworkBytes:", v38);
                    -[os_log_s setDownloadedFilesystemBytes:](v17, "setDownloadedFilesystemBytes:", v38);
                  }

                  -[MADAutoAssetControlManager trackDescriptor:persisting:fromLocation:changedWhileTerminated:changedNeverBeenLocked:historyOperation:firstClientName:]( self,  "trackDescriptor:persisting:fromLocation:changedWhileTerminated:changedNeverBeenLocked:historyOperati on:firstClientName:",  v17,  1LL,  @"loadPersistedActiveJobs",  1LL,  0LL,  0LL,  0LL);
                  -[MADAutoAssetControlManager _logPersistedEntry:forComponentType:operation:forPersistedEntryID:forClientRequest:withJobUUID:withAssetDescriptor:baseForPatchDescriptor:message:]( self,  "_logPersistedEntry:forComponentType:operation:forPersistedEntryID:forClientRequest:withJobUUID:withA ssetDescriptor:baseForPatchDescriptor:message:",  @"loadPersistedActiveJobs",  @"DOWNLOADED_DESCRIPTORS",  @"ENTRY_LOAD",  v11,  0LL,  0LL,  v17,  0LL,  @"previously in-flight now on filesystem validated",  v67);
                  -[NSMutableArray addObject:](v68, "addObject:", v11);
                  p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
                }

                else
                {
                  id v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
                  id v41 = (void *)objc_claimAutoreleasedReturnValue([v40 diag]);
                  __int128 v42 = objc_alloc(&OBJC_CLASS___NSString);
                  __int128 v43 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s summary](v19, "summary"));
                  __int128 v44 = -[NSString initWithFormat:]( v42,  "initWithFormat:",  @"{loadPersistedActiveJobs} nil jobSelectorKey | assetSelector:%@",  v43);
                  [v41 trackAnomaly:@"AUTO-CONTROL" forReason:v44 withResult:6103 withError:0];

                  p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
                }
              }

              else
              {
                id v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v39 oslog]);

                if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                  *(_DWORD *)int buf = 138543618;
                  uint64_t v85 = (uint64_t)v24;
                  __int16 v86 = 2114;
                  __int16 v87 = v11;
                  id v25 = v19;
                  uint64_t v26 = "[%{public}@] {loadPersistedActiveJobs} encountered active-job descriptor without asset-version -"
                        " not reloaded | entryID:%{public}@";
LABEL_32:
                  _os_log_impl(&dword_0, v25, OS_LOG_TYPE_DEFAULT, v26, buf, 0x16u);
LABEL_33:
                }
              }
            }
          }

          else
          {
            id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

            if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            {
              uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              *(_DWORD *)int buf = 138543618;
              uint64_t v85 = (uint64_t)v24;
              __int16 v86 = 2114;
              __int16 v87 = v11;
              _os_log_error_impl( &dword_0,  v19,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedActiveJobs} unable to previously active-job | entryID:%{public}@",  buf,  0x16u);
              goto LABEL_33;
            }
          }

- (void)loadPersistedCrossCheckTrim
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v5 = (NSArray *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager locateSetDescriptorsDownloaded](self, "locateSetDescriptorsDownloaded"));
  if (!v5) {
    uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSArray);
  }
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetLocker eliminateAllPreviousSetLocksNoLongerTracked:]( &OBJC_CLASS___MADAutoAssetLocker,  "eliminateAllPreviousSetLocksNoLongerTracked:",  v5));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 oslog]);

  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v9)
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      *(_DWORD *)int buf = 138543618;
      uint64_t v23 = v10;
      __int16 v24 = 2048;
      id v25 = [v6 count];
      _os_log_impl( &dword_0,  v8,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {loadPersistedCrossCheckTrim} just unlocked selectors:%ld",  buf,  0x16u);
    }

    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    uint64_t v8 = v6;
    id v11 = -[os_log_s countByEnumeratingWithState:objects:count:]( v8,  "countByEnumeratingWithState:objects:count:",  &v17,  v21,  16LL);
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v18;
      do
      {
        for (os_log_t i = 0LL; i != v12; os_log_t i = (char *)i + 1)
        {
          if (*(void *)v18 != v13) {
            objc_enumerationMutation(v8);
          }
          BOOL v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  *(void *)(*((void *)&v17 + 1) + 8LL * (void)i),  (void)v17));
          if (v15) {
            -[MADAutoAssetControlManager secureCheckUngraft:forDescriptorNoLongerLocked:]( self,  "secureCheckUngraft:forDescriptorNoLongerLocked:",  @"sloadPersistedCrossCheckTrim",  v15);
          }
        }

        id v12 = -[os_log_s countByEnumeratingWithState:objects:count:]( v8,  "countByEnumeratingWithState:objects:count:",  &v17,  v21,  16LL);
      }

      while (v12);
    }
  }

  else if (v9)
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    *(_DWORD *)int buf = 138543362;
    uint64_t v23 = v16;
    _os_log_impl( &dword_0,  v8,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {loadPersistedCrossCheckTrim} no selectors just unlocked",  buf,  0xCu);
  }

  -[MADAutoAssetControlManager _removeSetDeterminedToBeIncomplete:]( self,  "_removeSetDeterminedToBeIncomplete:",  @"loadPersistedCrossCheckTrim");
  -[MADAutoAssetControlManager loadPersistedCrossCheckTrimAtomicInstances]( self,  "loadPersistedCrossCheckTrimAtomicInstances");
  -[MADAutoAssetControlManager loadPersistedCrossCheckTrimSetDescriptors]( self,  "loadPersistedCrossCheckTrimSetDescriptors");
}

- (void)loadPersistedCrossCheckTrimAtomicInstances
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 persistedEntryIDs:@"loadPersistedCrossCheckTrimAtomicInstances"]);

  if (![v6 count]) {
    goto LABEL_80;
  }
  id v100 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v94 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v102 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  __int128 v113 = 0u;
  __int128 v114 = 0u;
  __int128 v115 = 0u;
  __int128 v116 = 0u;
  uint32_t v90 = v6;
  id obj = v6;
  id v8 = [obj countByEnumeratingWithState:&v113 objects:v125 count:16];
  id v95 = v7;
  if (!v8) {
    goto LABEL_65;
  }
  id v9 = v8;
  id v10 = *(id *)v114;
  id v96 = *(id *)v114;
  do
  {
    id v11 = 0LL;
    id v103 = v9;
    do
    {
      if (*(id *)v114 != v10) {
        objc_enumerationMutation(obj);
      }
      id v12 = *(const __CFString **)(*((void *)&v113 + 1) + 8LL * (void)v11);
      uint64_t v13 = objc_autoreleasePoolPush();
      int v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
      BOOL v15 = (void *)objc_claimAutoreleasedReturnValue( [v14 persistedEntry:v12 fromLocation:@"loadPersistedCrossCheckTrimAtomicInstances"]);

      if (v12) {
        BOOL v16 = v15 == 0LL;
      }
      else {
        BOOL v16 = 1;
      }
      if (!v16)
      {
        id v19 = [v15 secureCodedObjectForKey:@"setAtomicInstance" ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
        __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
        uint64_t v21 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceNewIdentifierForSetAtomicInstance:]( self,  "atomicInstanceNewIdentifierForSetAtomicInstance:",  v20));
        uint64_t v22 = (void *)v21;
        if (v20) {
          BOOL v23 = v21 == 0;
        }
        else {
          BOOL v23 = 1;
        }
        if (v23)
        {
          __int16 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

          if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
          {
            uint64_t v49 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
            *(_DWORD *)int buf = 138543618;
            __int128 v120 = v49;
            __int16 v121 = 2114;
            id v122 = v12;
            _os_log_error_impl( &dword_0,  v25,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [REMOVAL] {loadPersistedCrossCheckTrimAtomicInstances} unable to load set-atomic-instance | entryID:%{public}@",  buf,  0x16u);
          }

          -[NSMutableArray addObject:](v100, "addObject:", v12);
          goto LABEL_48;
        }

        uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v20 clientDomainName]);
        unsigned int v27 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v26,  @"FROM_STAGED_FOR_ALL");

        if (v27)
        {
          __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v20 atomicInstanceUUID]);
          uint64_t v29 = (NSMutableArray *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v28));

          if (v29)
          {
            if (!-[MADAutoAssetControlManager isAnyAssetEntryOnFilesystemForSetDescriptor:forSetDescriptor:]( self,  "isAnyAssetEntryOnFilesystemForSetDescriptor:forSetDescriptor:",  @"loadPersistedCrossCheckTrimAtomicInstances",  v29))
            {
              id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v31 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 oslog]);

              if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
              {
                __int128 v58 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                *(_DWORD *)int buf = 138543618;
                __int128 v120 = v58;
                __int16 v121 = 2114;
                id v122 = v12;
                _os_log_error_impl( &dword_0,  v31,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [REMOVAL] {loadPersistedCrossCheckTrimAtomicInstances} staged-now-downloaded atomic-instance with no a sset-entries on filesystem | entryID:%{public}@",  buf,  0x16u);
              }

              -[NSMutableArray addObject:](v100, "addObject:", v12);
              uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray latestDownloadedAtomicInstance](v29, "latestDownloadedAtomicInstance"));
              -[NSMutableArray addObject:](v94, "addObject:", v32);

              goto LABEL_46;
            }
          }

          else
          {
            __int128 v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v45 = (os_log_s *)objc_claimAutoreleasedReturnValue([v44 oslog]);

            if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
            {
              __int128 v57 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              *(_DWORD *)int buf = 138543618;
              __int128 v120 = v57;
              __int16 v121 = 2114;
              id v122 = v12;
              _os_log_error_impl( &dword_0,  v45,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [REMOVAL] {loadPersistedCrossCheckTrimAtomicInstances} staged-now-downloaded atomic-instance without bac king set-descriptor | entryID:%{public}@",  buf,  0x16u);
            }

            -[NSMutableArray addObject:](v100, "addObject:", v12);
LABEL_46:
            uint64_t v7 = v95;
          }

- (void)loadPersistedCrossCheckTrimSetDescriptors
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_9_0(a1, a2), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_15((uint64_t)v3, 5.8381e-34);
  OUTLINED_FUNCTION_4_1( &dword_0,  v4,  v5,  "{loadPersistedCrossCheckTrimSetDescriptors} [DROP-SET-DESCRIPTOR] set-descriptor without set-configuration | setDesc riptor:%{public}@");

  OUTLINED_FUNCTION_11();
}

- (void)considerSetDescriptorsForLatestToVend
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_9_0(a1, a2), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_15((uint64_t)v3, 5.8381e-34);
  OUTLINED_FUNCTION_4_1( &dword_0,  v4,  v5,  "{considerSetDescriptorsForLatestToVend} [IGNORE-SET-DESCRIPTOR] set-descriptor without set-configuration | setDescriptor:%{public}@");

  OUTLINED_FUNCTION_11();
}

- (void)decideSetDescriptorAsLatestToVend:(id)a3 currentlyVendingSetDescriptor:(id)a4 withOtherCandidateSetDescriptors:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  if (![v10 count]) {
    goto LABEL_88;
  }
  if (v9)
  {
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
    unsigned __int8 v14 = -[MADAutoAssetControlManager doesSetDescriptor:satisfyAllAutoAssetEntries:]( self,  "doesSetDescriptor:satisfyAllAutoAssetEntries:",  v9,  v13);

    if ((v14 & 1) != 0) {
      goto LABEL_89;
    }
  }

  id v96 = self;
  id v86 = v9;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  BOOL v16 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v109 = 0u;
  __int128 v110 = 0u;
  __int128 v111 = 0u;
  __int128 v112 = 0u;
  id obj = v10;
  id v17 = [obj countByEnumeratingWithState:&v109 objects:v120 count:16];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v110;
    do
    {
      for (os_log_t i = 0LL; i != v18; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v110 != v19) {
          objc_enumerationMutation(obj);
        }
        uint64_t v21 = *(void *)(*((void *)&v109 + 1) + 8LL * (void)i);
        if (v21)
        {
          uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
          unsigned int v23 = -[MADAutoAssetControlManager doesSetDescriptor:satisfyAllAutoAssetEntries:]( v96,  "doesSetDescriptor:satisfyAllAutoAssetEntries:",  v21,  v22);

          if (v23) {
            -[NSMutableArray addObject:](v16, "addObject:", v21);
          }
        }
      }

      id v18 = [obj countByEnumeratingWithState:&v109 objects:v120 count:16];
    }

    while (v18);
  }

  if ((uint64_t)-[NSMutableArray count](v16, "count") <= 0)
  {

    id v9 = v86;
    self = v96;
    goto LABEL_88;
  }

  id v85 = v10;
  __int128 v107 = 0u;
  __int128 v108 = 0u;
  __int128 v105 = 0u;
  __int128 v106 = 0u;
  __int16 v24 = v16;
  id v93 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v24,  "countByEnumeratingWithState:objects:count:",  &v105,  v119,  16LL);
  id v95 = v8;
  uint32_t v90 = v24;
  if (!v93)
  {

    id v40 = 0LL;
    id v9 = v86;
    self = v96;
    goto LABEL_41;
  }

  id v25 = 0LL;
  uint64_t v26 = *(void *)v106;
  unsigned int v27 = &MobileAssetKeyManager__metaData.ivars;
  uint64_t v88 = *(void *)v106;
  do
  {
    for (j = 0LL; j != v93; j = (char *)j + 1)
    {
      if (*(void *)v106 != v26) {
        objc_enumerationMutation(v90);
      }
      uint64_t v29 = *(void **)(*((void *)&v105 + 1) + 8LL * (void)j);
      if (!v25)
      {
        id v25 = v29;
        goto LABEL_31;
      }

      id v30 = v27;
      id v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v105 + 1) + 8 * (void)j) catalogLastTimeChecked]);
      uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v25 catalogLastTimeChecked]);
      id v33 = (char *)[v31 compare:v32];

      if (v33 == (char *)-1LL)
      {
        unsigned int v27 = v30;
        goto LABEL_31;
      }

      unsigned int v27 = v30;
      if (v33 == (_BYTE *)&dword_0 + 1)
      {
        id v34 = v29;

        id v25 = v34;
        goto LABEL_31;
      }

      uint64_t v35 = v30[155];
      id v36 = (void *)objc_claimAutoreleasedReturnValue([v25 clientDomainName]);
      if (-[__objc2_ivar_list stringIsEqual:to:]( v35,  "stringIsEqual:to:",  v36,  @"FROM_STAGED_FOR_ALL"))
      {
        id v37 = v25;

LABEL_29:
        id v25 = v29;

        goto LABEL_30;
      }

      BOOL v38 = v30[155];
      id v37 = v25;
      id v39 = (void *)objc_claimAutoreleasedReturnValue([v25 assetSetIdentifier]);
      LODWORD(v38) = -[__objc2_ivar_list stringIsEqual:to:]( v38,  "stringIsEqual:to:",  v39,  @"FROM_STAGED_FOR_ALL");

      unsigned int v27 = v30;
      if ((_DWORD)v38) {
        goto LABEL_29;
      }
LABEL_30:
      uint64_t v26 = v88;
LABEL_31:
      id v8 = v95;
    }

    __int16 v24 = v90;
    id v93 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v90,  "countByEnumeratingWithState:objects:count:",  &v105,  v119,  16LL);
  }

  while (v93);

  id v9 = v86;
  if (!v25)
  {
    id v40 = 0LL;
    self = v96;
    p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
    if (!v86) {
      goto LABEL_46;
    }
    goto LABEL_44;
  }

  id v40 = v25;
  self = v96;
  id v41 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v96, "logger"));
  __int128 v42 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 oslog]);

  p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
  if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v43 = (void *)objc_claimAutoreleasedReturnValue([v25 summary]);
    __int128 v44 = (void *)objc_claimAutoreleasedReturnValue([v95 summary]);
    *(_DWORD *)int buf = 138543618;
    __int128 v116 = v43;
    __int16 v117 = 2114;
    uint64_t v118 = v44;
    _os_log_impl( &dword_0,  v42,  OS_LOG_TYPE_DEFAULT,  "{loadPersistedSetDescriptorAsLatestToVend} considering satisfying | mostRecentSetDescriptor:%{public}@ | setConfig uration:%{public}@",  buf,  0x16u);
  }

  if (-[MADAutoAssetControlManager setConfigurationPotentialLatestToVend:forSetDescriptor:forSetConfiguration:]( v96,  "setConfigurationPotentialLatestToVend:forSetDescriptor:forSetConfiguration:",  @"loadPersistedSetDescriptorAsLatestToVend",  v25,  v95)
    && -[MADAutoAssetControlManager setConfigurationAdoptLatestToVend:fromSetDescriptor:toSetConfiguration:]( v96,  "setConfigurationAdoptLatestToVend:fromSetDescriptor:toSetConfiguration:",  @"loadPersistedSetDescriptorAsLatestToVend",  v25,  v95))
  {

    id v10 = v85;
    goto LABEL_85;
  }

- (void)loadPersistedAtomicInstancesSupportingShortTermLocking
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v22 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
  id v6 = [v5 countByEnumeratingWithState:&v27 objects:v32 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v28;
    do
    {
      id v9 = 0LL;
      do
      {
        if (*(void *)v28 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v27 + 1) + 8LL * (void)v9);
        id v11 = objc_autoreleasePoolPush();
        id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager knownSetAtomicInstancesByInstance]( self,  "knownSetAtomicInstancesByInstance"));
        id v13 = [v12 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
        unsigned __int8 v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

        if ([v14 lockedSupportingShortTermLocking])
        {
          BOOL v15 = (void *)objc_claimAutoreleasedReturnValue([v14 atomicInstanceUUID]);
          BOOL v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v15));

          if (v16) {
            -[NSMutableArray addObject:](v22, "addObject:", v16);
          }
        }

        objc_autoreleasePoolPop(v11);
        id v9 = (char *)v9 + 1;
      }

      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v27 objects:v32 count:16];
    }

    while (v7);
  }

  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  id v17 = v22;
  id v18 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v17,  "countByEnumeratingWithState:objects:count:",  &v23,  v31,  16LL);
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = *(void *)v24;
    do
    {
      uint64_t v21 = 0LL;
      do
      {
        if (*(void *)v24 != v20) {
          objc_enumerationMutation(v17);
        }
        if (*(void *)(*((void *)&v23 + 1) + 8LL * (void)v21)) {
          -[MADAutoAssetControlManager trackShortTermLockedSetDescriptor:](self, "trackShortTermLockedSetDescriptor:");
        }
        uint64_t v21 = (char *)v21 + 1;
      }

      while (v19 != v21);
      id v19 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v17,  "countByEnumeratingWithState:objects:count:",  &v23,  v31,  16LL);
    }

    while (v19);
  }
}

- (id)atomicInstanceOverflowRemove:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (char *)[v4 count];
  if ((uint64_t)v5 < 1)
  {
    id v7 = 0LL;
    goto LABEL_8;
  }

  id v6 = v5;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 objectAtIndex:0]);
  if (v6 != (_BYTE *)&dword_0 + 1)
  {
    uint64_t v8 = 0LL;
    uint64_t v10 = 1LL;
    while (1)
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v4 objectAtIndex:v10]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 instanceEntries]);
      id v13 = [v12 count];
      if (v13)
      {
        uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v11 instanceEntries]);
        if (![v3 count]) {
          goto LABEL_23;
        }
      }

      if ([v7 allContentDownloaded]
        && ![v11 allContentDownloaded]
        || [v7 lockedSupportingShortTermLocking]
        && ![v11 lockedSupportingShortTermLocking]
        || [v7 lockedSupportingShortTermLocking]
        && ![v11 lockedSupportingShortTermLocking]
        || ([v7 awaitingLastReferenceNewerFound] & 1) == 0
        && ([v11 awaitingLastReferenceNewerFound] & 1) != 0
        || ([v7 awaitingLastReferenceAltered] & 1) == 0
        && ([v11 awaitingLastReferenceAltered] & 1) != 0)
      {
        break;
      }

      uint64_t v17 = v8;
      id v15 = [v7 instanceCreationIndex];
      id v16 = [v11 instanceCreationIndex];
      if (v13) {

      }
      if ((uint64_t)v15 <= (uint64_t)v16)
      {
        uint64_t v8 = v17;
        goto LABEL_26;
      }

- (void)atomicInstanceTrimOverflowAfterPersisting:(id)a3
{
  id v101 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"atomicInstanceTrimOverflowAfterPersisting"]);

  if ([v7 count])
  {
    uint64_t v8 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v100 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v9 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v10 = v9;
    __int128 v98 = v8;
    if (v8 && v100 && v9)
    {
      id v94 = v9;
      __int128 v110 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
      __int128 v120 = 0u;
      __int128 v121 = 0u;
      __int128 v122 = 0u;
      __int128 v123 = 0u;
      id v93 = v7;
      id obj = v7;
      id v11 = [obj countByEnumeratingWithState:&v120 objects:v132 count:16];
      __int128 v111 = self;
      if (!v11) {
        goto LABEL_57;
      }
      id v13 = v11;
      id v107 = *(id *)v121;
      p_ivars = &MobileAssetKeyManager__metaData.ivars;
      *(void *)&__int128 v12 = 138543874LL;
      __int128 v92 = v12;
      while (1)
      {
        id v15 = 0LL;
        id v99 = v13;
        do
        {
          if (*(id *)v121 != v107) {
            objc_enumerationMutation(obj);
          }
          id v16 = *(const __CFString **)(*((void *)&v120 + 1) + 8LL * (void)v15);
          uint64_t v17 = objc_autoreleasePoolPush();
          id v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
          id v19 = (void *)objc_claimAutoreleasedReturnValue( [v18 persistedEntry:v16 fromLocation:@"atomicInstanceTrimOverflowAfterPersisting"]);

          if (v16) {
            BOOL v20 = v19 == 0LL;
          }
          else {
            BOOL v20 = 1;
          }
          if (!v20)
          {
            id v105 = v17;
            id v24 = [v19 secureCodedObjectForKey:@"setAtomicInstance" ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
            __int128 v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
            __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v25 atomicInstanceUUID]);
            uint64_t v27 = objc_claimAutoreleasedReturnValue([v101 atomicInstanceUUID]);
            if (v26 == (void *)v27)
            {

              goto LABEL_29;
            }

            __int128 v28 = (void *)v27;
            __int128 v103 = v19;
            __int128 v104 = v26;
            __int128 v29 = self;
            __int128 v30 = p_ivars[155];
            id v31 = (void *)objc_claimAutoreleasedReturnValue([v25 clientDomainName]);
            uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v101 clientDomainName]);
            if (!-[__objc2_ivar_list stringIsEqual:to:](v30, "stringIsEqual:to:", v31, v32))
            {

              id v13 = v99;
              self = v29;
              uint64_t v17 = v105;
              id v19 = v103;
              goto LABEL_28;
            }

            id v33 = p_ivars[155];
            id v34 = (void *)objc_claimAutoreleasedReturnValue([v25 assetSetIdentifier]);
            uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v101 assetSetIdentifier]);
            LODWORD(v33) = -[__objc2_ivar_list stringIsEqual:to:](v33, "stringIsEqual:to:", v34, v35);

            self = v111;
            id v13 = v99;
            uint64_t v17 = v105;
            id v19 = v103;
            if ((_DWORD)v33)
            {
              uint64_t v36 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceNewIdentifierForSetAtomicInstance:]( v111,  "atomicInstanceNewIdentifierForSetAtomicInstance:",  v25));
              id v37 = v25;
              if (v25 && v36)
              {
                __int128 v104 = (void *)v36;
                -[NSMutableArray addObject:](v98, "addObject:", v25);
                if ((unint64_t)-[NSMutableArray count](v98, "count") < 7
                  || +[MADAutoAssetControlManager preferenceAutoAssetNoPersistedOverflowLimit]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceAutoAssetNoPersistedOverflowLimit"))
                {
LABEL_28:
                  __int128 v26 = v104;
                  goto LABEL_29;
                }

                uint64_t v44 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceOverflowRemove:]( v111,  "atomicInstanceOverflowRemove:",  v98));
                __int128 v97 = (void *)v44;
                if (v44)
                {
                  id v45 = (void *)v44;
                  uint64_t v96 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager atomicInstanceNewEntryIDForSetAtomicInstance:]( v111,  "atomicInstanceNewEntryIDForSetAtomicInstance:",  v44));
                  if (v96)
                  {
                    unsigned int v46 = (void *)objc_claimAutoreleasedReturnValue([v45 atomicInstanceUUID]);
                    id v95 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( v111,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v46));

                    id v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v111, "logger"));
                    id v48 = (os_log_s *)objc_claimAutoreleasedReturnValue([v47 oslog]);

                    id v49 = v95;
                    BOOL v50 = os_log_type_enabled(v48, OS_LOG_TYPE_ERROR);
                    if (v95)
                    {
                      if (v50)
                      {
                        id v61 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v111, "_updateLatestSummary"));
                        uint64_t v62 = (__CFString *)objc_claimAutoreleasedReturnValue([v97 summary]);
                        id v63 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s summary](v95, "summary"));
                        *(_DWORD *)int buf = v92;
                        uint64_t v127 = (uint64_t)v61;
                        __int16 v128 = 2114;
                        id v129 = v62;
                        __int16 v130 = 2114;
                        id v131 = v63;
                        _os_log_error_impl( &dword_0,  v48,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [OVERFLOW-TRIM] {atomicInstanceTrimOverflowAfterPersisting} [WARNING] over threshold for atomi c-instances by set-identifier (trimming) | setAtomicInstance:%{public}@ | setDescriptor:%{public}@",  buf,  0x20u);

                        self = v111;
                        id v19 = v103;

                        id v49 = v95;
                      }

                      __int128 v51 = (os_log_s *)v96;
                      -[NSMutableArray addObject:](v100, "addObject:", v96);
                      uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s latestDownloadedAtomicInstance](v49, "latestDownloadedAtomicInstance"));
                      -[NSMutableArray addObject:](v94, "addObject:", v52);

                      id v49 = v95;
LABEL_53:

LABEL_54:
                      __int128 v25 = v37;
                      goto LABEL_55;
                    }

                    if (v50)
                    {
                      id v64 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v111, "_updateLatestSummary"));
                      id v65 = (__CFString *)objc_claimAutoreleasedReturnValue([v45 summary]);
                      *(_DWORD *)int buf = 138543618;
                      uint64_t v127 = (uint64_t)v64;
                      __int16 v128 = 2114;
                      id v129 = v65;
                      _os_log_error_impl( &dword_0,  v48,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [OVERFLOW-TRIM] {atomicInstanceTrimOverflowAfterPersisting} atomic-instance without backing set- descriptor | removedOverflowAtomicInstance:%{public}@",  buf,  0x16u);

                      id v19 = v103;
                      id v49 = 0LL;
                    }

                    -[NSMutableArray addObject:](v100, "addObject:", v16);
                  }

                  else
                  {
                    id v57 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v111, "logger"));
                    __int128 v58 = (os_log_s *)objc_claimAutoreleasedReturnValue([v57 oslog]);

                    id v49 = v58;
                    if (os_log_type_enabled(v58, OS_LOG_TYPE_ERROR))
                    {
                      uint64_t v59 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v111, "_updateLatestSummary"));
                      __int128 v60 = (__CFString *)objc_claimAutoreleasedReturnValue([v97 summary]);
                      *(_DWORD *)int buf = 138543618;
                      uint64_t v127 = (uint64_t)v59;
                      __int16 v128 = 2114;
                      id v129 = v60;
                      _os_log_error_impl( &dword_0,  v58,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [OVERFLOW-TRIM] {atomicInstanceTrimOverflowAfterPersisting} unable to determine persisted-set-at omic-instance file | setAtomicInstance:%{public}@",  buf,  0x16u);

                      id v19 = v103;
                      id v49 = v58;
                    }
                  }

                  __int128 v51 = (os_log_s *)v96;
                  goto LABEL_53;
                }

                __int128 v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v111, "logger"));
                __int128 v51 = (os_log_s *)objc_claimAutoreleasedReturnValue([v53 oslog]);

                if (!os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_54;
                }
                unsigned int v54 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v111, "_updateLatestSummary"));
                id v55 = (__CFString *)objc_claimAutoreleasedReturnValue([v25 summary]);
                *(_DWORD *)int buf = 138543618;
                uint64_t v127 = (uint64_t)v54;
                __int16 v128 = 2114;
                id v129 = v55;
                _os_log_error_impl( &dword_0,  v51,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [OVERFLOW-TRIM] {atomicInstanceTrimOverflowAfterPersisting} over threshold for atomic-instances by set -identifier (unable to reduce) | setAtomicInstance:%{public}@",  buf,  0x16u);

                id v19 = v103;
LABEL_55:
                __int128 v26 = v104;
              }

              else
              {
                BOOL v38 = (void *)v36;
                id v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v111, "logger", v92));
                id v40 = (os_log_s *)objc_claimAutoreleasedReturnValue([v39 oslog]);

                if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
                {
                  id v56 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v111, "_updateLatestSummary"));
                  *(_DWORD *)int buf = 138543618;
                  uint64_t v127 = (uint64_t)v56;
                  __int16 v128 = 2114;
                  id v129 = v16;
                  _os_log_error_impl( &dword_0,  v40,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [OVERFLOW-TRIM] {atomicInstanceTrimOverflowAfterPersisting} unable to load set-atomic-instance | entryID:%{public}@",  buf,  0x16u);
                }

                -[NSMutableArray addObject:](v100, "addObject:", v16);
                id v19 = v103;
                __int128 v26 = v38;
              }

- (BOOL)atomicInstanceHasDownloadedSetDescriptor:(id)a3 verboseLogging:(BOOL)a4
{
  BOOL v4 = a4;
  id v99 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedEntryIDs:@"atomicInstanceHasDownloadedSetDescriptor"]);

  if ([v9 count])
  {
    __int128 v109 = 0u;
    __int128 v110 = 0u;
    __int128 v107 = 0u;
    __int128 v108 = 0u;
    id obj = v9;
    id v10 = -[os_log_s countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v107,  v120,  16LL);
    if (!v10) {
      goto LABEL_27;
    }
    id v11 = v10;
    __int128 v92 = v9;
    BOOL v95 = v4;
    __int128 v12 = @"atomicInstanceHasDownloadedSetDescriptor";
    uint64_t v13 = *(void *)v108;
LABEL_4:
    uint64_t v14 = 0LL;
    while (1)
    {
      if (*(void *)v108 != v13) {
        objc_enumerationMutation(obj);
      }
      id v15 = *(void **)(*((void *)&v107 + 1) + 8 * v14);
      id v16 = objc_autoreleasePoolPush();
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 persistedEntry:v15 fromLocation:v12]);

      if (!v18)
      {
        id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        uint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 oslog]);

        if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
        {
          uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          *(_DWORD *)int buf = 138543618;
          __int128 v113 = v36;
          __int16 v114 = 2114;
          __int128 v115 = v15;
          _os_log_error_impl( &dword_0,  v35,  OS_LOG_TYPE_ERROR,  "[%{public}@] {atomicInstanceHasDownloadedSetDescriptor} unable to determine previous status (downloaded set- descriptors) | entryID:%{public}@",  buf,  0x16u);
        }

        goto LABEL_21;
      }

      __int128 v97 = v15;
      id v19 = [v18 secureCodedObjectForKey:@"assetSetDescriptor" ofClass:objc_opt_class(MADAutoSetDescriptor)];
      BOOL v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
      id v101 = v20;
      if (v20)
      {
        uint64_t v21 = v18;
        uint64_t v22 = v13;
        __int128 v23 = v16;
        id v24 = v12;
        __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v20 latestDownloadedAtomicInstance]);
        __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v99 atomicInstanceUUID]);
        unsigned int v27 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v25, v26);

        if (v27)
        {
          id v75 = v23;
          if (v95)
          {
            id v76 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            BOOL v77 = (os_log_s *)objc_claimAutoreleasedReturnValue([v76 oslog]);

            if (os_log_type_enabled(v77, OS_LOG_TYPE_DEFAULT))
            {
              id v78 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              id v79 = (void *)objc_claimAutoreleasedReturnValue([v99 summary]);
              __int128 v80 = (void *)objc_claimAutoreleasedReturnValue([v101 summary]);
              *(_DWORD *)int buf = 138544130;
              __int128 v113 = v78;
              __int16 v114 = 2114;
              __int128 v115 = v79;
              __int16 v116 = 2114;
              __int128 v117 = v97;
              __int16 v118 = 2114;
              uint64_t v119 = (uint64_t)v80;
              _os_log_impl( &dword_0,  v77,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {atomicInstanceHasDownloadedSetDescriptor} [VERBOSE] DownloadedSetDescriptors matched | set AtomicInstance:%{public}@ | entryID:%{public}@ | nextSetDescriptor:%{public}@",  buf,  0x2Au);
            }
          }

          uint64_t v81 = v75;
LABEL_65:
          objc_autoreleasePoolPop(v81);
          BOOL v74 = 1;
LABEL_66:
          uint64_t v44 = obj;
LABEL_67:
          __int128 v43 = v44;
LABEL_68:

          goto LABEL_69;
        }

        if (!v95)
        {
          __int128 v12 = v24;
          id v16 = v23;
          uint64_t v13 = v22;
          id v18 = v21;
          goto LABEL_20;
        }

        __int128 v28 = self;
        __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        __int128 v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
        {
          id v93 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          id v31 = (void *)objc_claimAutoreleasedReturnValue([v99 summary]);
          uint64_t v32 = objc_claimAutoreleasedReturnValue([v101 summary]);
          *(_DWORD *)int buf = 138544130;
          __int128 v113 = v93;
          __int16 v114 = 2114;
          __int128 v115 = v31;
          __int16 v116 = 2114;
          __int128 v117 = v97;
          __int16 v118 = 2114;
          uint64_t v119 = v32;
          id v33 = (void *)v32;
          _os_log_impl( &dword_0,  v30,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {atomicInstanceHasDownloadedSetDescriptor} [VERBOSE] DownloadedSetDescriptors no match | setAto micInstance:%{public}@ | entryID:%{public}@ | nextSetDescriptor:%{public}@",  buf,  0x2Au);
        }

        __int128 v12 = v24;
        self = v28;
        id v16 = v23;
        uint64_t v13 = v22;
        id v18 = v21;
      }

      else
      {
        id v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        __int128 v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 oslog]);

        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
        {
          BOOL v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          *(_DWORD *)int buf = 138543618;
          __int128 v113 = v38;
          __int16 v114 = 2114;
          __int128 v115 = v97;
          _os_log_error_impl( &dword_0,  v30,  OS_LOG_TYPE_ERROR,  "[%{public}@] {atomicInstanceHasDownloadedSetDescriptor} unable to load set-descriptor (downloaded) | entryID:%{public}@",  buf,  0x16u);
        }
      }

LABEL_20:
      uint64_t v35 = (os_log_s *)v101;
LABEL_21:

      objc_autoreleasePoolPop(v16);
      if (v11 == (id)++v14)
      {
        id v11 = -[os_log_s countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v107,  v120,  16LL);
        if (!v11)
        {
          BOOL v4 = v95;
          id v9 = v92;
          goto LABEL_27;
        }

        goto LABEL_4;
      }
    }
  }

  if (v4)
  {
    id v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v40 = (os_log_s *)objc_claimAutoreleasedReturnValue([v39 oslog]);

    id obj = v40;
    if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      *(_DWORD *)int buf = 138543362;
      __int128 v113 = v41;
      _os_log_impl( &dword_0,  v40,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {atomicInstanceHasDownloadedSetDescriptor} [VERBOSE] DownloadedSetDescriptors no persistedEntryIDs",  buf,  0xCu);
    }

- (void)resumeJobsWhenBeforeFirstUnlock:(BOOL)a3
{
  BOOL v3 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = objc_alloc(&OBJC_CLASS___NSString);
  uint64_t v8 = @"Y";
  if (!v3) {
    uint64_t v8 = @"N";
  }
  id v9 = -[NSString initWithFormat:](v7, "initWithFormat:", @"resumeJobsWhenBeforeFirstUnlock:%@", v8);
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 persistedEntryIDs:v9]);

  __int128 v12 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  if (![v11 count])
  {
    __int128 v122 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int128 v123 = (os_log_s *)objc_claimAutoreleasedReturnValue([v122 oslog]);

    if (os_log_type_enabled(v123, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v124 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      *(_DWORD *)int buf = 138543618;
      uint64_t v195 = (uint64_t)v124;
      __int16 v196 = 2114;
      v197 = v9;
      _os_log_impl( &dword_0,  v123,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@} no persisted auto-asset-jobs to be resumed | MA_MILESTONE",  buf,  0x16u);
    }

    goto LABEL_140;
  }

  __int128 v155 = v12;
  __int128 v154 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int16 v177 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v188 = 0u;
  __int128 v189 = 0u;
  __int128 v190 = 0u;
  __int128 v191 = 0u;
  __int128 v152 = v11;
  id obj = v11;
  id v13 = [obj countByEnumeratingWithState:&v188 objects:v204 count:16];
  __int16 v179 = v9;
  if (!v13)
  {
    uint64_t v153 = 0LL;
    goto LABEL_121;
  }

  id v14 = v13;
  BOOL v151 = v3;
  uint64_t v153 = 0LL;
  uint64_t v15 = *(void *)v189;
  uint64_t v174 = *(void *)v189;
  do
  {
    id v16 = 0LL;
    id v175 = v14;
    do
    {
      if (*(void *)v189 != v15) {
        objc_enumerationMutation(obj);
      }
      uint64_t v17 = *(const __CFString **)(*((void *)&v188 + 1) + 8LL * (void)v16);
      id v18 = objc_autoreleasePoolPush();
      if (v17)
      {
        id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
        BOOL v20 = (void *)objc_claimAutoreleasedReturnValue([v19 persistedEntry:v17 fromLocation:v9]);

        if (v20)
        {
          id v21 = [v20 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
          uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
          id v23 = [v20 secureCodedObjectForKey:@"assetSelector" ofClass:objc_opt_class(MAAutoAssetSelector)];
          id v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
          if (v22)
          {
            if ([v22 isBlankEntry])
            {
              __int128 v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              __int128 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

              if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
              {
                unsigned int v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                *(_DWORD *)int buf = 138543874;
                uint64_t v195 = (uint64_t)v27;
                __int16 v196 = 2114;
                v197 = v9;
                __int16 v198 = 2114;
                uint64_t v199 = (uint64_t)v17;
                __int128 v28 = v26;
                __int128 v29 = "[%{public}@] {%{public}@} encountered blank auto-asset-descriptor | entryID:%{public}@";
                goto LABEL_42;
              }

- (void)resumeSetJobsWhenBeforeFirstUnlock:(BOOL)a3
{
  BOOL v3 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (-[MADAutoAssetControlManager persistedActiveSetJobsLoaded](self, "persistedActiveSetJobsLoaded"))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 oslog]);

    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      id v10 = (void *)v9;
      id v11 = @"N";
      if (v3) {
        id v11 = @"Y";
      }
      *(_DWORD *)int buf = 138543618;
      uint64_t v133 = v9;
      __int16 v134 = 2112;
      char v135 = (void *)v11;
      _os_log_impl( &dword_0,  v8,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {resumeSetJobsWhenBeforeFirstUnlock:%@} called when persisted active set-jobs loaded earlier",  buf,  0x16u);
    }

    goto LABEL_104;
  }

  -[MADAutoAssetControlManager setPersistedActiveSetJobsLoaded:](self, "setPersistedActiveSetJobsLoaded:", 1LL);
  __int128 v12 = objc_alloc(&OBJC_CLASS___NSString);
  id v13 = @"Y";
  if (!v3) {
    id v13 = @"N";
  }
  uint64_t v8 = -[NSString initWithFormat:](v12, "initWithFormat:", @"resumeSetJobsWhenBeforeFirstUnlock:%@", v13);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 persistedEntryIDs:v8]);

  if ([v15 count])
  {
    BOOL v111 = v3;
    __int128 v122 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v128 = 0u;
    __int128 v129 = 0u;
    __int128 v130 = 0u;
    __int128 v131 = 0u;
    __int128 v110 = v15;
    id obj = v15;
    id v16 = [obj countByEnumeratingWithState:&v128 objects:v143 count:16];
    __int128 v123 = v8;
    if (!v16)
    {
      uint64_t v112 = 0LL;
      goto LABEL_70;
    }

    id v17 = v16;
    uint64_t v112 = 0LL;
    uint64_t v18 = *(void *)v129;
    uint64_t v116 = *(void *)v129;
    while (1)
    {
      id v19 = 0LL;
      do
      {
        if (*(void *)v129 != v18) {
          objc_enumerationMutation(obj);
        }
        BOOL v20 = *(const __CFString **)(*((void *)&v128 + 1) + 8LL * (void)v19);
        id v21 = objc_autoreleasePoolPush();
        if (v20)
        {
          uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
          id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 persistedEntry:v20 fromLocation:v8]);

          if (v23)
          {
            id v24 = [v23 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
            __int128 v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
            __int128 v26 = v25;
            if (v25)
            {
              unsigned int v27 = (void *)objc_claimAutoreleasedReturnValue([v25 assetSetIdentifier]);

              if (v27)
              {
                __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v26 discoveredAtomicInstance]);

                if (v28)
                {
                  __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v26 discoveredAtomicEntries]);

                  if (v29)
                  {
                    if (([v26 isOnFilesystem] & 1) == 0)
                    {
                      __int128 v30 = (void *)objc_claimAutoreleasedReturnValue([v26 clientDomainName]);
                      id v31 = (void *)objc_claimAutoreleasedReturnValue([v26 assetSetIdentifier]);
                      uint64_t v119 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v30,  v31));

                      uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v26 discoveredAtomicInstance]);
                      __int16 v118 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetAtomicInstanceByInstanceUUID:]( self,  "locateSetAtomicInstanceByInstanceUUID:",  v32));

                      id v33 = (void *)objc_claimAutoreleasedReturnValue([v26 discoveredAtomicInstance]);
                      uint64_t v34 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v33));

                      uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v26 discoveredAtomicInstance]);
                      uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorActiveJobByAtomicInstanceUUID:]( self,  "locateSetDescriptorActiveJobByAtomicInstanceUUID:",  v35));

                      __int128 v120 = (void *)v34;
                      __int128 v117 = v36;
                      if (v34)
                      {
                        id v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                        BOOL v38 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 oslog]);

                        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
                        {
                          os_log_t log = (os_log_t)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _updateLatestSummary]( self,  "_updateLatestSummary"));
                          uint64_t v39 = objc_claimAutoreleasedReturnValue([v26 summary]);
                          uint64_t v40 = objc_claimAutoreleasedReturnValue([v120 summary]);
                          *(_DWORD *)int buf = 138544130;
                          uint64_t v133 = (uint64_t)log;
                          __int16 v134 = 2114;
                          char v135 = v123;
                          __int16 v136 = 2114;
                          uint64_t v41 = (void *)v39;
                          uint64_t v137 = v39;
                          __int16 v138 = 2114;
                          uint64_t v139 = v40;
                          __int128 v42 = (void *)v40;
                          _os_log_impl( &dword_0,  v38,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@} not considering resuming active-set-job since have already downloa ded set-descriptor | setJobDescriptor:%{public}@ | downloadedSetDescriptor:%{public}@",  buf,  0x2Au);
                          goto LABEL_24;
                        }

                        goto LABEL_47;
                      }

                      if (v36)
                      {
                        id v56 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                        BOOL v38 = (os_log_s *)objc_claimAutoreleasedReturnValue([v56 oslog]);

                        if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
                        {
                          os_log_t log = (os_log_t)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _updateLatestSummary]( self,  "_updateLatestSummary"));
                          uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue([v26 summary]);
                          uint64_t v68 = objc_claimAutoreleasedReturnValue([v117 summary]);
                          *(_DWORD *)int buf = 138544130;
                          uint64_t v133 = (uint64_t)log;
                          __int16 v134 = 2114;
                          char v135 = v123;
                          __int16 v136 = 2114;
                          uint64_t v137 = (uint64_t)v41;
                          __int16 v138 = 2114;
                          uint64_t v139 = v68;
                          __int128 v42 = (void *)v68;
                          _os_log_error_impl( &dword_0,  v38,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@} active-set-job set-descriptor repeated (already adopted set-job) | dropping repeated setJobDescriptor:%{public}@ | already tracking active setJobDescriptor:%{public}@",  buf,  0x2Au);
LABEL_24:
                        }

- (void)_moveFromAwaitingResumedInto:(id)a3 forSelector:(id)a4
{
  uint64_t v22 = (NSMutableArray *)a3;
  id v21 = a4;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v8 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  uint64_t v9 = self;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadManagerEventsAwaitingResumed]( self,  "downloadManagerEventsAwaitingResumed"));
  id v10 = [obj countByEnumeratingWithState:&v24 objects:v28 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v25;
    do
    {
      id v13 = 0LL;
      do
      {
        if (*(void *)v25 != v12) {
          objc_enumerationMutation(obj);
        }
        id v14 = *(void **)(*((void *)&v24 + 1) + 8LL * (void)v13);
        uint64_t v15 = objc_autoreleasePoolPush();
        if (v14)
        {
          id v16 = (void *)objc_claimAutoreleasedReturnValue([v14 autoAssetJobID]);
          id v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:fromLocation:notFoundCode:notFoundReason:]( v9,  "currentJobByUUID:fromLocation:notFoundCode:notFoundReason:",  v16,  @"_moveFromAwaitingResumedInto",  0LL,  0LL));

          uint64_t v18 = v8;
          if (v17)
          {
            id v19 = (void *)objc_claimAutoreleasedReturnValue([v17 autoAssetSelector]);
            unsigned int v20 = [v19 isEqual:v21];

            if (v20) {
              uint64_t v18 = v22;
            }
            else {
              uint64_t v18 = v8;
            }
          }

          -[NSMutableArray addObject:](v18, "addObject:", v14);
        }

        objc_autoreleasePoolPop(v15);
        id v13 = (char *)v13 + 1;
      }

      while (v11 != v13);
      id v11 = [obj countByEnumeratingWithState:&v24 objects:v28 count:16];
    }

    while (v11);
  }

  -[MADAutoAssetControlManager setDownloadManagerEventsAwaitingResumed:]( v9,  "setDownloadManagerEventsAwaitingResumed:",  v8);
}

- (BOOL)_inDownloadsInFlight:(id)a3
{
  id v20 = a3;
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager downloadManagerInFlightTasks](self, "downloadManagerInFlightTasks"));
  id v7 = [v6 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v22;
    do
    {
      for (os_log_t i = 0LL; i != v8; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = *(void **)(*((void *)&v21 + 1) + 8LL * (void)i);
        uint64_t v12 = objc_autoreleasePoolPush();
        if (v11)
        {
          if ([v11 containsString:v20])
          {
            objc_autoreleasePoolPop(v12);
            BOOL v18 = 1;
            goto LABEL_13;
          }
        }

        else
        {
          id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
          id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 diag]);
          uint64_t v15 = objc_alloc(&OBJC_CLASS___NSString);
          id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          id v17 = -[NSString initWithFormat:]( v15,  "initWithFormat:",  @"{_inDownloadsInFlight} nil taskDescriptor encountered on downloadManagerInFlightTasks | %@",  v16);
          [v14 trackAnomaly:@"AUTO-CONTROL" forReason:v17 withResult:6108 withError:0];
        }

        objc_autoreleasePoolPop(v12);
      }

      id v8 = [v6 countByEnumeratingWithState:&v21 objects:v25 count:16];
    }

    while (v8);
  }

  BOOL v18 = 0;
LABEL_13:

  return v18;
}

- (BOOL)_inMatchedTaskDescriptors:(id)a3 addingMatchingJobUUID:(id)a4
{
  id v6 = a3;
  id v25 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager downloadManagerInFlightTasks](self, "downloadManagerInFlightTasks"));
  id v10 = [v9 countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v10)
  {
    id v11 = v10;
    __int128 v24 = v6;
    uint64_t v12 = *(void *)v27;
    while (2)
    {
      for (os_log_t i = 0LL; i != v11; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v27 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)i);
        uint64_t v15 = objc_autoreleasePoolPush();
        if (v14)
        {
          if ([v14 containsString:v25])
          {
            id v6 = v24;
            unsigned __int8 v22 = -[MADAutoAssetControlManager _taskDescriptorEncountered:inMatchedDescriptors:]( self,  "_taskDescriptorEncountered:inMatchedDescriptors:",  v14,  v24);
            BOOL v21 = v22;
            if ((v22 & 1) == 0) {
              [v24 addObject:v14];
            }
            objc_autoreleasePoolPop(v15);
            goto LABEL_17;
          }
        }

        else
        {
          id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 diag]);
          BOOL v18 = objc_alloc(&OBJC_CLASS___NSString);
          id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          id v20 = -[NSString initWithFormat:]( v18,  "initWithFormat:",  @"{_inMatchedTaskDescriptors} nil taskDescriptor encountered on downloadManagerInFlightTasks | %@",  v19);
          [v17 trackAnomaly:@"AUTO-CONTROL" forReason:v20 withResult:6108 withError:0];
        }

        objc_autoreleasePoolPop(v15);
      }

      id v11 = [v9 countByEnumeratingWithState:&v26 objects:v30 count:16];
      if (v11) {
        continue;
      }
      break;
    }

    BOOL v21 = 0;
    id v6 = v24;
  }

  else
  {
    BOOL v21 = 0;
  }

- (BOOL)_taskDescriptorEncountered:(id)a3 inMatchedDescriptors:(id)a4
{
  id v5 = a3;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  id v6 = a4;
  id v7 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v12;
    while (2)
    {
      for (os_log_t i = 0LL; i != v7; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v12 != v8) {
          objc_enumerationMutation(v6);
        }
        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v5,  *(void *)(*((void *)&v11 + 1) + 8LL * (void)i),  (void)v11) & 1) != 0)
        {
          LOBYTE(v7) = 1;
          goto LABEL_11;
        }
      }

      id v7 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }

- (id)_newTrimmedToAutoAssetsInFlight:(id)a3
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager downloadManagerInFlightTasks](self, "downloadManagerInFlightTasks", 0LL));
  id v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v15;
    do
    {
      __int128 v11 = 0LL;
      do
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void *)(*((void *)&v14 + 1) + 8LL * (void)v11);
        if (v12
          && [*(id *)(*((void *)&v14 + 1) + 8 * (void)v11) containsString:@".auto."])
        {
          -[NSMutableArray addObject:](v6, "addObject:", v12);
        }

        __int128 v11 = (char *)v11 + 1;
      }

      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }

    while (v9);
  }

  if (!-[NSMutableArray count](v6, "count"))
  {

    return 0LL;
  }

  return v6;
}

- (void)_removeJobFromDownloadsInFlight:(id)a3
{
  id v12 = a3;
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager downloadManagerInFlightTasks](self, "downloadManagerInFlightTasks"));
  id v7 = [v6 count];

  if ((uint64_t)v7 >= 1)
  {
    uint64_t v8 = 0LL;
    while (1)
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager downloadManagerInFlightTasks](self, "downloadManagerInFlightTasks"));
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectAtIndex:v8]);

      if (v10)
      {
      }

      if (v7 == (id)++v8) {
        goto LABEL_8;
      }
    }

    __int128 v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager downloadManagerInFlightTasks](self, "downloadManagerInFlightTasks"));
    [v11 removeObjectAtIndex:v8];
  }

- (id)jobControlInformationForSelector:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager simulateOperationsBySelector](self, "simulateOperationsBySelector"));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 persistedEntryID]);
  id v9 = [v7 safeObjectForKey:v8 ofClass:objc_opt_class(MANAutoAssetInfoControl)];
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  if (v10)
  {
    __int128 v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
      __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
      int v28 = 138543874;
      __int128 v29 = v13;
      __int16 v30 = 2114;
      id v31 = v14;
      __int16 v32 = 2114;
      id v33 = v15;
      _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {jobControlInformationForSelector} SIMULATE | found control information | assetSelector:%{public}@ | associatedControlInfo:%{public}@",  (uint8_t *)&v28,  0x20u);
    }

- (id)jobControlInformationForSetConfiguration:(id)a3
{
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM", a3));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  return 0LL;
}

- (void)_removeFromPersistedActiveJobs:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 persistedEntryIDs:@"_removeFromPersistedActiveJobs"]);

  if ([v8 count])
  {
    __int128 v43 = 0u;
    __int128 v44 = 0u;
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    uint64_t v36 = v8;
    id obj = v8;
    id v40 = [obj countByEnumeratingWithState:&v41 objects:v49 count:16];
    if (!v40) {
      goto LABEL_30;
    }
    uint64_t v39 = *(void *)v42;
    id v37 = v4;
    while (1)
    {
      id v9 = 0LL;
      do
      {
        if (*(void *)v42 != v39) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void *)(*((void *)&v41 + 1) + 8LL * (void)v9);
        __int128 v11 = objc_autoreleasePoolPush();
        id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
        __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedEntry:v10 fromLocation:@"_removeFromPersistedActiveJobs"]);

        if (v13)
        {
          id v14 = [v13 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
          __int128 v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
          id v16 = [v13 secureCodedObjectForKey:@"assetSelector" ofClass:objc_opt_class(MAAutoAssetSelector)];
          __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
          if (v15)
          {
            if ([v15 isBlankEntry])
            {
              BOOL v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
              [v18 removePersistedEntry:v10 fromLocation:@"_removeFromPersistedActiveJobs"];

              -[MADAutoAssetControlManager _logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:]( self,  "_logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:",  @"_removeFromPersistedActiveJobs",  @"ACTIVE-JOBS",  v10,  v15,  @"removed blank auto-asset-descriptor");
              id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

              if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
              {
                id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                *(_DWORD *)int buf = 138543618;
                id v46 = v21;
                __int16 v47 = 2114;
                uint64_t v48 = v10;
                _os_log_impl( &dword_0,  v20,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_removeFromPersistedActiveJobs} removed blank auto-asset-descriptor | entryID:%{public}@",  buf,  0x16u);
                goto LABEL_12;
              }

              goto LABEL_16;
            }

            id v25 = (void *)objc_claimAutoreleasedReturnValue([v15 assetType]);
            unsigned int v26 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v25, v4);

            if (v26)
            {
              if (v17)
              {
                __int128 v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 persistedEntryID]);
                int v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](self, "currentJobsBySelector"));
                id v29 = [v28 safeObjectForKey:v27 ofClass:objc_opt_class(MADAutoAssetJob)];
                __int16 v30 = (void *)objc_claimAutoreleasedReturnValue(v29);

                if (v30)
                {
                  id v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](self, "currentJobsBySelector"));
                  [v31 removeObjectForKey:v27];
                }

                id v4 = v37;
              }

              else
              {
                __int16 v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                __int128 v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v32 oslog]);

                if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
                {
                  uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                  *(_DWORD *)int buf = 138543618;
                  id v46 = v34;
                  __int16 v47 = 2114;
                  uint64_t v48 = v10;
                  _os_log_error_impl( &dword_0,  v27,  OS_LOG_TYPE_ERROR,  "[%{public}@] {_removeFromPersistedActiveJobs} unable to load auto-asset-selector | entryID:%{public}@",  buf,  0x16u);
                }
              }

              id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
              [v33 removePersistedEntry:v10 fromLocation:@"_removeFromPersistedActiveJobs"];

              -[MADAutoAssetControlManager _logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:]( self,  "_logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:",  @"_removeFromPersistedActiveJobs",  @"ACTIVE-JOBS",  v10,  v15,  @"removed auto-asset-descriptor for previously active job");
            }
          }

          else
          {
            __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

            if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
            {
              id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              *(_DWORD *)int buf = 138543618;
              id v46 = v21;
              __int16 v47 = 2114;
              uint64_t v48 = v10;
              _os_log_error_impl( &dword_0,  v20,  OS_LOG_TYPE_ERROR,  "[%{public}@] {_removeFromPersistedActiveJobs} unable to load auto-asset-descriptor | entryID:%{public}@",  buf,  0x16u);
LABEL_12:
            }

- (void)_scheduleSelector:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (!+[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock"))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updatePolicyForSelector:](self, "_updatePolicyForSelector:", v4));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 persistedEntryID]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager alreadyScheduledSelectors](self, "alreadyScheduledSelectors"));
    [v9 setSafeObject:v4 forKey:v8];

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int128 v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
      int v15 = 138543874;
      id v16 = v12;
      __int16 v17 = 2114;
      BOOL v18 = v13;
      __int16 v19 = 2114;
      id v20 = v14;
      _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_scheduleSelector} scheduling selector | autoAssetSelector:%{public}@, autoUpdatePolicy:%{public}@",  (uint8_t *)&v15,  0x20u);
    }

    +[MADAutoAssetScheduler scheduleSelector:triggeringAtIntervalSecs:]( MADAutoAssetScheduler,  "scheduleSelector:triggeringAtIntervalSecs:",  v4,  [v7 checkForNewerIntervalSecs]);
  }
}

- (void)_schedulePushNotifications:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 oslog]);

  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v4 safeSummary]);
    int v11 = 138543618;
    id v12 = v9;
    __int16 v13 = 2114;
    id v14 = v10;
    _os_log_impl( &dword_0,  v8,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {CLOUDCHANNELS:_schedulePushNotifications} scheduling pushes | pushNotificationsBySelector:%{public}@",  (uint8_t *)&v11,  0x16u);
  }

  +[MADAutoAssetScheduler schedulePushNotifications:]( &OBJC_CLASS___MADAutoAssetScheduler,  "schedulePushNotifications:",  v4);
}

- (BOOL)_haveSetAssetEntriesForSchedulerTriggered:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);

    if (v9)
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
      int v11 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v10,  v11));

      if (v12)
      {
        __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([v12 autoAssetEntries]);
        id v14 = [v13 count];

        if (v14)
        {
          BOOL v15 = 1;
LABEL_13:

          goto LABEL_14;
        }

        id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        __int16 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          BOOL v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          __int16 v19 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
          id v21 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
          int v23 = 138543874;
          __int128 v24 = v18;
          __int16 v25 = 2114;
          unsigned int v26 = v19;
          __int16 v27 = 2112;
          int v28 = v21;
          _os_log_impl( &dword_0,  v17,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_haveSetAssetEntriesForSchedulerTriggered} empty set-configuration | schedulerTriggered:%{publ ic}@ | setConfiguration:%@",  (uint8_t *)&v23,  0x20u);

          goto LABEL_11;
        }
      }

      else
      {
        id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        __int16 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 oslog]);

        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          BOOL v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          __int16 v19 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
          int v23 = 138543618;
          __int128 v24 = v18;
          __int16 v25 = 2114;
          unsigned int v26 = v19;
          _os_log_impl( &dword_0,  v17,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_haveSetAssetEntriesForSchedulerTriggered} no set-configuration | schedulerTriggered:%{public}@",  (uint8_t *)&v23,  0x16u);
LABEL_11:
        }
      }

      BOOL v15 = 0;
      goto LABEL_13;
    }
  }

  BOOL v15 = 0;
LABEL_14:

  return v15;
}

void __45__MADAutoAssetControlManager_stagerSetPolicy__block_invoke(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetSetPolicy);
  id v2 = (void *)stagerSetPolicy___stagerSetPolicy;
  stagerSetPolicy___stagerSetPolicy = (uint64_t)v1;

  [(id)stagerSetPolicy___stagerSetPolicy setUserInitiated:1];
  [(id)stagerSetPolicy___stagerSetPolicy setLockInhibitsEmergencyRemoval:0];
  [(id)stagerSetPolicy___stagerSetPolicy setAllowCheckDownloadOnBattery:1];
  [(id)stagerSetPolicy___stagerSetPolicy setAllowCheckDownloadWhenBatteryLow:0];
  [(id)stagerSetPolicy___stagerSetPolicy setAllowCheckDownloadWhenCPUHigh:1];
  [(id)stagerSetPolicy___stagerSetPolicy setAllowCheckDownloadOverExpensive:0];
  [(id)stagerSetPolicy___stagerSetPolicy setAllowCheckDownloadOverCellular:1];
  [(id)stagerSetPolicy___stagerSetPolicy setBlockCheckDownload:0];
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 oslog]);

  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([(id)stagerSetPolicy___stagerSetPolicy summary]);
    int v6 = 138543362;
    uint64_t v7 = v5;
    _os_log_impl( &dword_0,  v4,  OS_LOG_TYPE_DEFAULT,  "AUTO-CONTROL:{autoControlManager} initialized the fixed stager-set-policy | stagerSetPolicy:%{public}@",  (uint8_t *)&v6,  0xCu);
  }
}

- (void)removePreviouslyStagedSetDescriptors
{
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  __int16 v27 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int16 v30 = self;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v5 = [obj countByEnumeratingWithState:&v35 objects:v40 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v29 = *(void *)v36;
    do
    {
      for (os_log_t i = 0LL; i != v6; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v36 != v29) {
          objc_enumerationMutation(obj);
        }
        uint64_t v8 = *(void *)(*((void *)&v35 + 1) + 8LL * (void)i);
        id v9 = objc_autoreleasePoolPush();
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( v30,  "downloadedSetDescriptorsByInstance"));
        id v11 = [v10 safeObjectForKey:v8 ofClass:objc_opt_class(MADAutoSetDescriptor)];
        id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

        if (v8)
        {
          __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([v12 clientDomainName]);
          if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v13,  @"FROM_STAGED_FOR_ALL") & 1) != 0)
          {
            id v14 = v6;
            BOOL v15 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSetIdentifier]);
            unsigned int v16 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v15,  @"FROM_STAGED_FOR_ALL");

            id v6 = v14;
            if (v16) {
              -[NSMutableArray addObject:](v27, "addObject:", v8);
            }
          }

          else
          {
          }
        }

        objc_autoreleasePoolPop(v9);
      }

      id v6 = [obj countByEnumeratingWithState:&v35 objects:v40 count:16];
    }

    while (v6);
  }

  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int16 v17 = v27;
  id v18 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v17,  "countByEnumeratingWithState:objects:count:",  &v31,  v39,  16LL);
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = *(void *)v32;
    do
    {
      for (j = 0LL; j != v19; j = (char *)j + 1)
      {
        if (*(void *)v32 != v20) {
          objc_enumerationMutation(v17);
        }
        uint64_t v22 = *(void *)(*((void *)&v31 + 1) + 8LL * (void)j);
        int v23 = objc_autoreleasePoolPush();
        __int128 v24 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( v30,  "downloadedSetDescriptorsByInstance"));
        id v25 = [v24 safeObjectForKey:v22 ofClass:objc_opt_class(MADAutoSetDescriptor)];
        unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue(v25);

        -[MADAutoAssetControlManager removeSetDescriptorDownloaded:fromLocation:checkingByInstance:regardlessOfLatest:historyOperationAI:historyOperationSD:]( v30,  "removeSetDescriptorDownloaded:fromLocation:checkingByInstance:regardlessOfLatest:historyOperationAI:historyOperationSD:",  v26,  @"removePreviouslyStagedSetDescriptors",  1LL,  1LL,  331LL,  375LL);
        objc_autoreleasePoolPop(v23);
      }

      id v19 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v17,  "countByEnumeratingWithState:objects:count:",  &v31,  v39,  16LL);
    }

    while (v19);
  }
}

- (void)promoteAnyPreviouslyStagedNowDownloaded:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (v4)
  {
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    __int128 v14 = 0u;
    __int128 v15 = 0u;
    id v7 = v4;
    id v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v15;
      do
      {
        id v11 = 0LL;
        do
        {
          if (*(void *)v15 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = *(void *)(*((void *)&v14 + 1) + 8LL * (void)v11);
          __int16 v13 = objc_autoreleasePoolPush();
          -[MADAutoAssetControlManager _promotePreviouslyStagedNowDownloaded:forHistoryOperation:]( self,  "_promotePreviouslyStagedNowDownloaded:forHistoryOperation:",  v12,  205LL,  (void)v14);
          objc_autoreleasePoolPop(v13);
          id v11 = (char *)v11 + 1;
        }

        while (v9 != v11);
        id v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }

      while (v9);
    }
  }
}

- (void)_promotePreviouslyStagedNowDownloaded:(id)a3 forHistoryOperation:(int64_t)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  [v6 setIsOnFilesystem:1];
  if (-[MADAutoAssetControlManager isDescriptorManagedAsSet:](self, "isDescriptorManagedAsSet:", v6)) {
    [v6 setFoundByLookupWithoutAssetVersion:1];
  }
  if (-[MADAutoAssetControlManager jobDescriptorOnFilesystemValidated:]( self,  "jobDescriptorOnFilesystemValidated:",  v6))
  {
    if (+[MADAutoAssetSecure doesDescriptorInvolvePersonalization:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "doesDescriptorInvolvePersonalization:forDescriptor:",  @"PROMOTE-PREVIOUSLY-STAGED",  v6))
    {
      +[MADAutoAssetSecure isPersonalizationRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationRequired:forDescriptor:",  @"PROMOTE-PREVIOUSLY-STAGED",  v6);
    }

    id v9 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSpecifier]);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v6 assetVersion]);
    __int16 v47 = (os_log_s *)-[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v9,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v10,  v11,  v12);

    __int16 v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int128 v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 oslog]);

    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
      *(_DWORD *)int buf = 138543618;
      uint64_t v49 = v15;
      __int16 v50 = 2114;
      __int128 v51 = v16;
      _os_log_impl( &dword_0,  v14,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_promotePreviouslyStagedNowDownloaded} content on filesystem validated for promoted | descriptor:%{public}@",  buf,  0x16u);
    }

    -[MADAutoAssetControlManager _statsIncrementPromotedForDescriptor:]( self,  "_statsIncrementPromotedForDescriptor:",  v6);
    -[MADAutoAssetControlManager trackDescriptor:persisting:fromLocation:changedWhileTerminated:changedNeverBeenLocked:historyOperation:firstClientName:]( self,  "trackDescriptor:persisting:fromLocation:changedWhileTerminated:changedNeverBeenLocked:historyOperation:firstClientName:",  v6,  1LL,  @"_promotePreviouslyStagedNowDownloaded",  0LL,  0LL,  a4,  0LL);
    __int128 v17 = objc_alloc_init(&OBJC_CLASS___MAAutoAssetNotifications);
    -[MAAutoAssetNotifications setContentAvailableForUse:](v17, "setContentAvailableForUse:", 1LL);
    __int128 v44 = (void *)objc_claimAutoreleasedReturnValue([v6 metadata]);
    unsigned int v43 = [v6 neverBeenLocked];
    unsigned int v42 = [v6 downloadUserInitiated];
    id v45 = [v6 downloadedNetworkBytes];
    id v41 = [v6 downloadedFilesystemBytes];
    unsigned __int8 v40 = [v6 isPatch];
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v6 patchedFromBaseSelector]);
    id v19 = [v6 patchedFromBaseFilesystemBytes];
    unsigned __int8 v20 = [v6 patchingAttempted];
    unsigned __int8 v21 = [v6 stagedPriorToAvailable];
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v6 stagedFromOSVersion]);
    int v23 = (void *)objc_claimAutoreleasedReturnValue([v6 stagedFromBuildVersion]);
    __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v6 patchingAttemptError]);
    LOBYTE(v39) = 0;
    BYTE1(v38) = v21;
    LOBYTE(v38) = v20;
    LOBYTE(v37) = v40;
    id v36 = v45;
    id v25 = v47;
    id v46 = v17;
    id v26 = -[MADAutoAssetControlManager newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( self,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNev erBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesys temBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAt tempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLo ckUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v47,  v17,  v44,  0LL,  v43,  v42,  0LL,  v36,  v41,  v37,  v18,  v19,  v38,  v22,  v23,  v39,  0LL,  v24,  0LL);

    __int16 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentStatusBySelector](self, "currentStatusBySelector"));
    int v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v47));
    [v27 setSafeObject:v26 forKey:v28];

    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int16 v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([v26 summary]);
      *(_DWORD *)int buf = 138543618;
      uint64_t v49 = v31;
      __int16 v50 = 2114;
      __int128 v51 = v32;
      _os_log_impl( &dword_0,  v30,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n[ASSET_STATUS][PROMOTED] | currentStatus:%{public}@ | jobUUID:N",  buf,  0x16u);
    }

    __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
    __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSpecifier]);
    +[MADAutoAssetControlManager postNotificationName:forAssetType:forAssetSpecifier:fromModule:fromLocation:]( &OBJC_CLASS___MADAutoAssetControlManager,  "postNotificationName:forAssetType:forAssetSpecifier:fromModule:fromLocation:",  @"ASSET_VERSION_DOWNLOADED",  v33,  v34,  @"STAGER",  @"_promotePreviouslyStagedNowDownloaded");
  }

  else
  {
    [v6 setIsOnFilesystem:0];
    __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager _promotePreviouslyStagedNowDownloaded:forHistoryOperation:].cold.1();
    }
  }
}

- (id)verifySetLookupResultPreferringDownloaded:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v60 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v7 = v4;
  __int128 v65 = 0u;
  __int128 v66 = 0u;
  __int128 v67 = 0u;
  __int128 v68 = 0u;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 discoveredAtomicEntries]);
  id v64 = [v8 countByEnumeratingWithState:&v65 objects:v75 count:16];
  if (v64)
  {
    char v62 = 0;
    uint64_t v63 = *(void *)v66;
    id v58 = v7;
    uint64_t v59 = v7;
    id obj = v8;
    do
    {
      for (os_log_t i = 0LL; i != v64; os_log_t i = (char *)i + 1)
      {
        if (*(void *)v66 != v63) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void **)(*((void *)&v65 + 1) + 8LL * (void)i);
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 fullAssetSelector]);
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 assetType]);
        __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([v10 fullAssetSelector]);
        __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSpecifier]);
        __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v10 fullAssetSelector]);
        __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v15 assetVersion]);
        __int128 v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:]( self,  "_latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:",  @"verifySetLookupResultPreferringDownloaded",  v12,  v14,  v16));

        if (v17)
        {
          if (v10
            && (id v18 = (void *)objc_claimAutoreleasedReturnValue([v10 assetID]),
                id v19 = (void *)objc_claimAutoreleasedReturnValue([v17 assetId]),
                unsigned int v20 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v18, v19),
                v19,
                v18,
                v20))
          {
            -[NSMutableArray addObject:](v60, "addObject:", v10);
          }

          else
          {
            unsigned __int8 v21 = (void *)objc_claimAutoreleasedReturnValue([v17 assetType]);
            uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v17 assetId]);
            id AutoLocalUrlFromTypeAndIdWithPurpose = getAutoLocalUrlFromTypeAndIdWithPurpose(v21, v22, 2LL, @"auto");
            __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(AutoLocalUrlFromTypeAndIdWithPurpose);

            if (v24)
            {
              id v25 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetAtomicEntry);
              id v26 = (void *)objc_claimAutoreleasedReturnValue([v10 fullAssetSelector]);
              __int16 v27 = (void *)objc_claimAutoreleasedReturnValue([v17 assetId]);
              int v28 = (void *)objc_claimAutoreleasedReturnValue([v17 metadata]);
              uint64_t v29 = -[MANAutoAssetSetAtomicEntry initWithFullAssetSelector:withAssetID:withLocalContentURL:withAssetAttributes:inhibitedFromEmergencyRemoval:]( v25,  "initWithFullAssetSelector:withAssetID:withLocalContentURL:withAssetAttributes:inhibitedFromEmergencyRemoval:",  v26,  v27,  v24,  v28,  0LL);

              __int16 v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              __int128 v31 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 oslog]);

              if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
              {
                __int128 v32 = (MANAutoAssetSetAtomicEntry *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _updateLatestSummary]( self,  "_updateLatestSummary"));
                __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v10 assetID]);
                __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v17 assetId]);
                *(_DWORD *)int buf = 138543874;
                id v70 = v32;
                __int16 v71 = 2114;
                uint64_t v72 = v33;
                __int16 v73 = 2114;
                id v74 = v34;
                _os_log_impl( &dword_0,  v31,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n {verifySetLookupResultPreferringDownloaded} replaced stager set-lookup-result | staged-assetID:%{publi c}@ | downloaded-assetID:%{public}@",  buf,  0x20u);
              }

              if (v29)
              {
                -[NSMutableArray addObject:](v60, "addObject:", v29);
                char v62 = 1;
              }

              else
              {
                unsigned int v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                __int128 v44 = (os_log_s *)objc_claimAutoreleasedReturnValue([v43 oslog]);

                if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
                {
                  id v45 = (MANAutoAssetSetAtomicEntry *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _updateLatestSummary]( self,  "_updateLatestSummary"));
                  id v46 = (void *)objc_claimAutoreleasedReturnValue([v10 assetID]);
                  __int16 v47 = (void *)objc_claimAutoreleasedReturnValue([v17 assetId]);
                  *(_DWORD *)int buf = 138543874;
                  id v70 = v45;
                  __int16 v71 = 2114;
                  uint64_t v72 = v46;
                  __int16 v73 = 2114;
                  id v74 = v47;
                  _os_log_error_impl( &dword_0,  v44,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n {verifySetLookupResultPreferringDownloaded} unable to allocate replacement entry | staged-assetID:%{ public}@ | downloaded-assetID:%{public}@",  buf,  0x20u);
                }
              }
            }

            else
            {
              uint64_t v39 = objc_alloc(&OBJC_CLASS___NSString);
              unsigned __int8 v40 = (void *)objc_claimAutoreleasedReturnValue([v17 summary]);
              uint64_t v29 = -[NSString initWithFormat:]( v39,  "initWithFormat:",  @"unable to get local content URL | downloadedDescriptor:%@",  v40);

              id v41 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              unsigned int v42 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 oslog]);

              if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)int buf = 138543362;
                id v70 = v29;
                _os_log_error_impl( &dword_0,  v42,  OS_LOG_TYPE_ERROR,  "[AUTO-ASSET] [LOCAL-CONTENT-URL] {verifySetLookupResultPreferringDownloaded} not adopting set-lookup-r esult - %{public}@",  buf,  0xCu);
              }

              uint64_t v59 = 0LL;
            }
          }
        }

        else
        {
          __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

          if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v37 = (MANAutoAssetSetAtomicEntry *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _updateLatestSummary]( self,  "_updateLatestSummary"));
            uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
            *(_DWORD *)int buf = 138543618;
            id v70 = v37;
            __int16 v71 = 2114;
            uint64_t v72 = v38;
            _os_log_impl( &dword_0,  v36,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n {verifySetLookupResultPreferringDownloaded} stager set-lookup-result with no downloaded descriptor (droppe d) | nextDiscoveredEntry:%{public}@",  buf,  0x16u);
          }

          char v62 = 1;
        }
      }

      id v64 = [obj countByEnumeratingWithState:&v65 objects:v75 count:16];
    }

    while (v64);

    uint64_t v48 = v59;
    if (((v59 != 0LL) & v62) != 1)
    {
      id v7 = v58;
      goto LABEL_32;
    }

    uint64_t v49 = objc_alloc(&OBJC_CLASS___MADAutoSetLookupResult);
    id v7 = v58;
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v58 assetType]);
    __int16 v50 = (void *)objc_claimAutoreleasedReturnValue([v58 catalogCachedAssetSetID]);
    __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v58 catalogDownloadedFromLive]);
    uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue([v58 catalogLastTimeChecked]);
    uint64_t v53 = (void *)objc_claimAutoreleasedReturnValue([v58 catalogPostedDate]);
    id v54 = (void *)objc_claimAutoreleasedReturnValue([v58 requestedAutoAssetEntries]);
    id v55 = (void *)objc_claimAutoreleasedReturnValue([v58 autoAssetSetCatalog]);
    id v56 = -[MADAutoSetLookupResult initForAssetType:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withRequestedAutoAssetEntries:withDiscoveredAtomicEntries:withCatalogFromPallasResponse:]( v49,  "initForAssetType:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCa talogPostedDate:withRequestedAutoAssetEntries:withDiscoveredAtomicEntries:withCatalogFromPallasResponse:",  v8,  v50,  v51,  v52,  v53,  v54,  v60,  v55);

    uint64_t v48 = v56;
  }

  else
  {
    uint64_t v48 = v7;
  }

LABEL_32:
  return v48;
}

+ (id)selectDispatchQueue:(id)a3
{
  id v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v5 = v3;
  id v6 = v5;
  if (!v5) {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 sharedDispatchQueue]);
  }

  return v6;
}

+ (void)persistForJobSelector:(id)a3 persistingJobDescriptor:(id)a4 withJobInformation:(id)a5 withFirstClientName:(id)a6
{
}

+ (void)persistForJobSelector:(id)a3 persistingJobDescriptor:(id)a4 justPatched:(BOOL)a5 withJobInformation:(id)a6 withFirstClientName:(id)a7
{
}

+ (void)persistForJobSelector:(id)a3 persistingJobDescriptor:(id)a4 justDownloaded:(BOOL)a5 justPatched:(BOOL)a6 withJobInformation:(id)a7 withFirstClientName:(id)a8
{
  id v13 = a3;
  id v14 = a4;
  id v15 = a7;
  id v16 = a8;
  __int128 v17 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 autoControlManagerFSM]);
  id v19 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v18 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __142__MADAutoAssetControlManager_persistForJobSelector_persistingJobDescriptor_justDownloaded_justPatched_withJobInformation_withFirstClientName___block_invoke;
  block[3] = &unk_34F4F8;
  BOOL v31 = a5;
  BOOL v32 = a6;
  id v26 = v14;
  id v27 = v17;
  id v28 = v16;
  id v29 = v13;
  id v30 = v15;
  id v20 = v15;
  id v21 = v13;
  id v22 = v16;
  id v23 = v17;
  id v24 = v14;
  dispatch_sync(v19, block);
}

void __142__MADAutoAssetControlManager_persistForJobSelector_persistingJobDescriptor_justDownloaded_justPatched_withJobInformation_withFirstClientName___block_invoke( uint64_t a1)
{
  if (*(_BYTE *)(a1 + 72))
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) assetType]);
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) assetId]);
    id AutoLocalUrlFromTypeAndIdWithPurpose = getAutoLocalUrlFromTypeAndIdWithPurpose(v2, v3, 2LL, @"auto");
    id v5 = (void *)objc_claimAutoreleasedReturnValue(AutoLocalUrlFromTypeAndIdWithPurpose);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 path]);

    if (*(_BYTE *)(a1 + 73)) {
      [*(id *)(a1 + 32) setIsPatch:1];
    }
    [*(id *)(a1 + 40) _statsIncrementDownloadedForDescriptor:*(void *)(a1 + 32)];
    if (v6)
    {
      id v7 = -[NSURL initFileURLWithPath:](objc_alloc(&OBJC_CLASS___NSURL), "initFileURLWithPath:", v6);
      updateClientUsageDate(v7);
    }

    else
    {
      id v7 = (NSURL *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) autoControlManagerFSM]);
      id v8 = (void *)objc_claimAutoreleasedReturnValue(-[NSURL diag](v7, "diag"));
      id v9 = objc_alloc(&OBJC_CLASS___NSString);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) summary]);
      id v11 = -[NSString initWithFormat:]( v9,  "initWithFormat:",  @"{persistForJobSelector} unable to determine local repository path for jobDescriptor:%@",  v10);
      [v8 trackAnomaly:@"AUTO-CONTROL" forReason:v11 withResult:6101 withError:0];
    }

    uint64_t v12 = *(void *)(a1 + 48);
    id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) assetId]);
    uint64_t v14 = *(void *)(a1 + 56);
    if (v12) {
      +[MADAutoAssetHistory recordOperation:toHistoryType:fromClient:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromClient:forAssetID:withSelector:",  100LL,  0LL,  v12,  v13,  v14);
    }
    else {
      +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  201LL,  0LL,  1LL,  v13,  v14);
    }

    [*(id *)(a1 + 40) _removeUnlockedForOlderSelectorsWithoutVersion:*(void *)(a1 + 32)];
  }

  [*(id *)(a1 + 40) trackDescriptor:*(void *)(a1 + 32) persisting:1 fromLocation:@"persistForJobSelector" changedWhileTerminated:0 changedNeverBeenLocked:0 historyOperation:0 firstClientName:*(void *)(a1 + 48)];
  uint64_t v15 = *(void *)(a1 + 64);
  if (v15)
  {
    id v22 = (id)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 40) _autoAssetJobProgressNewValidatedCurrentStatus:v15 requiringProgress:0]);
    id v16 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) assetType]);
    id v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) assetSpecifier]);
    id v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) assetVersion]);
    id v20 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v16,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v17,  v18,  v19);

    else {
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetVersion]);
    }
    [*(id *)(a1 + 40) updateAutoAssetStatus:v20 forActiveJobUUID:0 withLatestJobStatus:v22 matchingAssetVersion:v21 fromLocation:@"persistForJobSelector"];
  }

+ (BOOL)persistSetJobDescriptor:(id)a3 withCurrentSetStatus:(id)a4 withFirstClientName:(id)a5
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a5;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v24 = 0LL;
  id v25 = &v24;
  uint64_t v26 = 0x2020000000LL;
  char v27 = 0;
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 autoControlManagerFSM]);
  uint64_t v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __95__MADAutoAssetControlManager_persistSetJobDescriptor_withCurrentSetStatus_withFirstClientName___block_invoke;
  block[3] = &unk_34F520;
  id v19 = v10;
  id v20 = v7;
  id v22 = v9;
  id v23 = &v24;
  id v21 = v8;
  id v13 = v9;
  id v14 = v8;
  id v15 = v7;
  id v16 = v10;
  dispatch_sync(v12, block);

  LOBYTE(v11) = *((_BYTE *)v25 + 24);
  _Block_object_dispose(&v24, 8);
  return (char)v11;
}

void __95__MADAutoAssetControlManager_persistSetJobDescriptor_withCurrentSetStatus_withFirstClientName___block_invoke( uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) alreadyHaveSetDescriptorMatching:*(void *)(a1 + 40)]);
  if (v2)
  {
    if ([*(id *)(a1 + 40) isOnFilesystem]
      && ([*(id *)(a1 + 40) onFilesystemIncomplete] & 1) == 0)
    {
      id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logger]);
      id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 oslog]);

      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        id v5 = (void *)objc_claimAutoreleasedReturnValue([v2 latestDownloadedAtomicInstance]);
        *(_DWORD *)int buf = 138543362;
        id v64 = v5;
        _os_log_impl( &dword_0,  v4,  OS_LOG_TYPE_DEFAULT,  "{persistSetJobDescriptor}: found existing-atomic instance representing assets in job descriptor: %{public}@",  buf,  0xCu);
      }

      id v6 = *(void **)(a1 + 32);
      id v7 = (void *)objc_claimAutoreleasedReturnValue([v2 clientDomainName]);
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v2 assetSetIdentifier]);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 locateSetConfigurationByClientDomain:v7 forAssetSetIdentifier:v8]);

      if (v9)
      {
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v2 latestDownloadedAtomicInstance]);
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 latestAtomicInstanceToVend]);
        unsigned __int8 v12 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v10, v11);

        id v13 = *(void **)(a1 + 32);
        if ((v12 & 1) != 0)
        {
          id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 logger]);
          id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

          if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          {
            id v16 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
            *(_DWORD *)int buf = 138412290;
            id v64 = v16;
            _os_log_impl( &dword_0,  v15,  OS_LOG_TYPE_DEFAULT,  "{persistSetJobDescriptor}: set already has existing atomic-instance as LATEST-TO-VEND. Set-configuration: %@",  buf,  0xCu);
          }
        }

        else
        {
          [v13 setConfigurationAdoptLatestToVend:@"persistSetJobDescriptor" fromSetDescriptor:v2 toSetConfiguration:v9];
          *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL) = 1;
        }
      }

      else
      {
        uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) autoControlManagerFSM]);
        uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v48 diag]);
        __int16 v50 = objc_alloc(&OBJC_CLASS___NSString);
        __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v2 summary]);
        uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) knownSetConfigurationsByIdentifier]);
        uint64_t v53 = (void *)objc_claimAutoreleasedReturnValue([v52 allKeys]);
        id v54 = -[NSString initWithFormat:]( v50,  "initWithFormat:",  @"set-configuration is nil while trying to update LATEST-TO-VEND to existing atomic-instance:\n %@\nAll known setConfigurations are: %@",  v51,  v53);
        [v49 trackAnomaly:@"AUTO-CONTROL" forReason:v54 withResult:6102 withError:0];
      }

+ (id)loadDescriptorsForJobSelector:(id)a3 promotingIfCurrentlyStaged:(id)a4 immediatelyPromotedDescriptor:(id *)a5
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v29 = 0LL;
  id v30 = &v29;
  uint64_t v31 = 0x3032000000LL;
  uint64_t v32 = __Block_byref_object_copy__12;
  __int128 v33 = __Block_byref_object_dispose__12;
  id v34 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000LL;
  unsigned __int8 v26 = __Block_byref_object_copy__12;
  char v27 = __Block_byref_object_dispose__12;
  id v28 = 0LL;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 autoControlManagerFSM]);
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __117__MADAutoAssetControlManager_loadDescriptorsForJobSelector_promotingIfCurrentlyStaged_immediatelyPromotedDescriptor___block_invoke;
  block[3] = &unk_34F548;
  id v12 = v8;
  id v18 = v12;
  id v21 = &v23;
  id v13 = v9;
  id v19 = v13;
  id v14 = v7;
  id v20 = v14;
  id v22 = &v29;
  dispatch_sync(v11, block);

  if (a5) {
    *a5 = (id) v24[5];
  }
  id v15 = (id)v30[5];

  _Block_object_dispose(&v23, 8);
  _Block_object_dispose(&v29, 8);

  return v15;
}

void __117__MADAutoAssetControlManager_loadDescriptorsForJobSelector_promotingIfCurrentlyStaged_immediatelyPromotedDescriptor___block_invoke( uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = objc_claimAutoreleasedReturnValue( +[MADAutoAssetStager controlConvertStagedToDownloaded:]( &OBJC_CLASS___MADAutoAssetStager,  "controlConvertStagedToDownloaded:"));
    uint64_t v3 = *(void *)(*(void *)(a1 + 56) + 8LL);
    id v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = v2;

    uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
    if (v5) {
      [*(id *)(a1 + 40) _promotePreviouslyStagedNowDownloaded:v5 forHistoryOperation:204];
    }
  }

  id obj = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) locateDownloadedNewAllBySelector]);
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  id v7 = v6;
  id v8 = [v7 countByEnumeratingWithState:&v33 objects:v37 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v34;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v29 = *(void *)v34;
    id v30 = v7;
    do
    {
      id v12 = 0LL;
      id v31 = v9;
      do
      {
        uint64_t v13 = v10;
        if (*(void *)v34 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v14 = *(void *)(*((void *)&v33 + 1) + 8LL * (void)v12);
        uint64_t v32 = objc_autoreleasePoolPush();
        id v15 = [v7 safeObjectForKey:v14 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
        __int128 v17 = p_ivars[155];
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v16 assetType]);
        id v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) assetType]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v17, "stringIsEqual:to:", v18, v19) & 1) == 0)
        {

          unsigned __int8 v26 = v32;
          uint64_t v10 = v13;
          goto LABEL_18;
        }

        id v20 = p_ivars[155];
        id v21 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSpecifier]);
        id v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) assetSpecifier]);
        if (!-[__objc2_ivar_list stringIsEqual:to:](v20, "stringIsEqual:to:", v21, v22))
        {

          uint64_t v10 = v29;
          id v7 = v30;
          id v9 = v31;
          unsigned __int8 v26 = v32;
          goto LABEL_18;
        }

        uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) assetVersion]);
        if (!v23)
        {

          uint64_t v10 = v29;
          id v7 = v30;
          id v9 = v31;
          unsigned __int8 v26 = v32;
LABEL_17:
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);
          -[NSMutableDictionary setSafeObject:forKey:](obj, "setSafeObject:forKey:", v16, v18);
LABEL_18:

          goto LABEL_19;
        }

        id v28 = p_ivars[155];
        uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) assetVersion]);
        LOBYTE(v28) = -[__objc2_ivar_list stringIsEqual:to:](v28, "stringIsEqual:to:", v24, v25);

        p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        uint64_t v10 = v29;
        id v7 = v30;
        id v9 = v31;
        unsigned __int8 v26 = v32;
LABEL_19:

        objc_autoreleasePoolPop(v26);
        id v12 = (char *)v12 + 1;
      }

      while (v9 != v12);
      id v9 = [v7 countByEnumeratingWithState:&v33 objects:v37 count:16];
    }

    while (v9);
  }

  if (-[NSMutableDictionary count](obj, "count")) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL), obj);
  }
}

- (void)removeActiveJobForFullSelector:(id)a3 removingFullSelector:(id)a4 alsoRemovingNoVersionSelector:(id)a5
{
  id v46 = a3;
  id v8 = a4;
  id v9 = a5;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  if (v8)
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedEntryID]);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v8));
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
    unsigned int v15 = [v14 persistedEntryAlreadyExists:v12 fromLocation:v46];

    if (v15)
    {
      id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
      __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v16 persistedEntry:v12 fromLocation:v46]);

      id v18 = [v17 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
      id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
      if (v17)
      {
        id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
        [v20 removePersistedEntry:v12 fromLocation:v46];

        id v21 = objc_alloc(&OBJC_CLASS___NSString);
        id v22 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
        uint64_t v23 = -[NSString initWithFormat:]( v21,  "initWithFormat:",  @"removed descriptor for fullSelector:%@ from previously active jobs",  v22);
        -[MADAutoAssetControlManager _logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:]( self,  "_logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:",  v46,  @"ACTIVE-JOBS",  v12,  v19,  v23);
      }

      else
      {
        id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        uint64_t v23 = (NSString *)objc_claimAutoreleasedReturnValue([v22 diag]);
        __int128 v44 = v19;
        uint64_t v24 = objc_alloc(&OBJC_CLASS___NSString);
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
        unsigned __int8 v26 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"{%@:removeActiveJobForFullSelector} | no persistedEntryID for fullSelector:%@",  v46,  v25);
        -[NSString trackAnomaly:forReason:withResult:withError:]( v23,  "trackAnomaly:forReason:withResult:withError:",  @"AUTO-CONTROL",  v26,  6110LL,  0LL);

        id v19 = v44;
      }
    }

    char v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](self, "currentJobsBySelector"));
    [v27 removeObjectForKey:v13];
  }

  if (v9)
  {
    id v28 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntryID]);
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v9));
    id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
    unsigned int v31 = [v30 persistedEntryAlreadyExists:v28 fromLocation:v46];

    if (v31)
    {
      uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
      __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v32 persistedEntry:v28 fromLocation:v46]);

      id v34 = [v33 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
      __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
      if (v33)
      {
        __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
        [v36 removePersistedEntry:v28 fromLocation:v46];

        uint64_t v37 = objc_alloc(&OBJC_CLASS___NSString);
        uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
        uint64_t v39 = -[NSString initWithFormat:]( v37,  "initWithFormat:",  @"removed descriptor for noVersionSelector:%@ from previously active jobs",  v38);
        -[MADAutoAssetControlManager _logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:]( self,  "_logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:",  v46,  @"ACTIVE-JOBS",  v28,  v35,  v39);
      }

      else
      {
        uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        uint64_t v39 = (NSString *)objc_claimAutoreleasedReturnValue([v38 diag]);
        id v45 = v35;
        unsigned __int8 v40 = objc_alloc(&OBJC_CLASS___NSString);
        id v41 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
        unsigned int v42 = -[NSString initWithFormat:]( v40,  "initWithFormat:",  @"{%@:removeActiveJobForFullSelector} | no persistedEntryID for noVersionSelector:%@",  v46,  v41);
        -[NSString trackAnomaly:forReason:withResult:withError:]( v39,  "trackAnomaly:forReason:withResult:withError:",  @"AUTO-CONTROL",  v42,  6110LL,  0LL);

        __int128 v35 = v45;
      }
    }

    unsigned int v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](self, "currentJobsBySelector"));
    [v43 removeObjectForKey:v29];
  }
}

+ (id)newestDownloadedForSetDescriptor:(id)a3
{
  id v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v15 = 0LL;
  id v16 = &v15;
  uint64_t v17 = 0x3032000000LL;
  id v18 = __Block_byref_object_copy__12;
  id v19 = __Block_byref_object_dispose__12;
  id v20 = 0LL;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 autoControlManagerFSM]);
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __63__MADAutoAssetControlManager_newestDownloadedForSetDescriptor___block_invoke;
  block[3] = &unk_34E790;
  id v12 = v4;
  id v13 = v3;
  uint64_t v14 = &v15;
  id v7 = v3;
  id v8 = v4;
  dispatch_sync(v6, block);

  id v9 = (id)v16[5];
  _Block_object_dispose(&v15, 8);

  return v9;
}

void __63__MADAutoAssetControlManager_newestDownloadedForSetDescriptor___block_invoke(uint64_t a1)
{
  uint64_t v1 = a1;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentSetStatusByInstance]);
  id v2 = [obj countByEnumeratingWithState:&v31 objects:v35 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v32;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      id v6 = 0LL;
      do
      {
        if (*(void *)v32 != v4) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void *)(*((void *)&v31 + 1) + 8LL * (void)v6);
        id v8 = objc_autoreleasePoolPush();
        id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 32) locateSetStatusByInstance:v7]);
        uint64_t v10 = objc_claimAutoreleasedReturnValue([v9 latestDownloadedAtomicInstance]);
        if (v10)
        {
          id v11 = (void *)v10;
          id v30 = v8;
          id v12 = p_ivars[155];
          id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 40) clientDomainName]);
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v9 clientDomainName]);
          if ((-[__objc2_ivar_list stringIsEqual:to:](v12, "stringIsEqual:to:", v13, v14) & 1) != 0)
          {
            uint64_t v29 = p_ivars[155];
            uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 40) assetSetIdentifier]);
            id v16 = v3;
            uint64_t v17 = v1;
            uint64_t v18 = v4;
            id v19 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSetIdentifier]);
            LODWORD(v29) = -[__objc2_ivar_list stringIsEqual:to:](v29, "stringIsEqual:to:", v15, v19);

            uint64_t v4 = v18;
            uint64_t v1 = v17;
            id v3 = v16;

            p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            id v8 = v30;
            if ((_DWORD)v29)
            {
              uint64_t v20 = *(void *)(*(void *)(v1 + 48) + 8LL);
              uint64_t v23 = *(void *)(v20 + 40);
              id v21 = (id *)(v20 + 40);
              uint64_t v22 = v23;
              if (v23)
              {
                uint64_t v24 = objc_claimAutoreleasedReturnValue([*(id *)(v1 + 32) chooseNewerSetStatus:v22 comparingTo:v9]);
                uint64_t v25 = *(void *)(*(void *)(v1 + 48) + 8LL);
                unsigned __int8 v26 = *(void **)(v25 + 40);
                *(void *)(v25 + 40) = v24;
              }

              else
              {
                objc_storeStrong(v21, v9);
              }
            }
          }

          else
          {

            id v8 = v30;
          }
        }

        objc_autoreleasePoolPop(v8);
        id v6 = (char *)v6 + 1;
      }

      while (v3 != v6);
      id v27 = [obj countByEnumeratingWithState:&v31 objects:v35 count:16];
      id v3 = v27;
    }

    while (v27);
  }
}

+ (id)newAtomicInstancesDownloadedForSetIdentifier:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v15 = 0LL;
  id v16 = &v15;
  uint64_t v17 = 0x3032000000LL;
  uint64_t v18 = __Block_byref_object_copy__12;
  id v19 = __Block_byref_object_dispose__12;
  id v20 = 0LL;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 autoControlManagerFSM]);
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __75__MADAutoAssetControlManager_newAtomicInstancesDownloadedForSetIdentifier___block_invoke;
  block[3] = &unk_34DE88;
  id v13 = v3;
  uint64_t v14 = &v15;
  id v12 = v4;
  id v7 = v3;
  id v8 = v4;
  dispatch_sync(v6, block);

  id v9 = (id)v16[5];
  _Block_object_dispose(&v15, 8);

  return v9;
}

void __75__MADAutoAssetControlManager_newAtomicInstancesDownloadedForSetIdentifier___block_invoke( uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newAtomicInstancesDownloadedForSetIdentifier:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

+ (id)localAssetURLForDescriptor:(id)a3 fromLocation:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if ([v5 isMAAutoAsset]
    && (uint64_t v7 = objc_claimAutoreleasedReturnValue([v5 assetType])) != 0
    && (id v8 = (void *)v7,
        id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 assetId]),
        v9,
        v8,
        v9))
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v5 assetType]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 assetId]);
    id AutoLocalUrlFromTypeAndIdWithPurpose = getAutoLocalUrlFromTypeAndIdWithPurpose(v10, v11, 2LL, @"auto");
    id v13 = (void *)objc_claimAutoreleasedReturnValue(AutoLocalUrlFromTypeAndIdWithPurpose);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 path]);

    uint64_t v15 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"/%@",  @"AssetData");
    id v16 = -[NSString length](v15, "length");
    uint64_t v17 = [v14 length];
    uint64_t v18 = 0LL;
  }

  else
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
    uint64_t v15 = (NSString *)objc_claimAutoreleasedReturnValue([v14 autoControlManagerFSM]);
    id v19 = (void *)objc_claimAutoreleasedReturnValue(-[NSString diag](v15, "diag"));
    id v20 = objc_alloc(&OBJC_CLASS___NSString);
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v5 summary]);
    uint64_t v22 = -[NSString initWithFormat:]( v20,  "initWithFormat:",  @"{%@} unable to construct local URL from descriptor:%@",  v6,  v21);
    [v19 trackAnomaly:@"AUTO-CONTROL" forReason:v22 withResult:6111 withError:0];

    uint64_t v18 = 0LL;
  }

  return v18;
}

+ (id)localAssetURLForAtomicEntry:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 fullAssetSelector]);
  uint64_t v5 = objc_claimAutoreleasedReturnValue([v4 assetType]);
  if (!v5)
  {

    goto LABEL_7;
  }

  id v6 = (void *)v5;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 assetID]);

  if (!v7)
  {
LABEL_7:
    id v13 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
    uint64_t v14 = (NSString *)objc_claimAutoreleasedReturnValue([v13 autoControlManagerFSM]);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[NSString diag](v14, "diag"));
    id v19 = objc_alloc(&OBJC_CLASS___NSString);
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v3 summary]);
    id v21 = -[NSString initWithFormat:]( v19,  "initWithFormat:",  @"unable to construct local URL from atomicEntry:%@",  v20);
    [v18 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v21 withResult:6111 withError:0];

    uint64_t v17 = 0LL;
    goto LABEL_8;
  }

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 fullAssetSelector]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 assetType]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 assetID]);
  id AutoLocalUrlFromTypeAndIdWithPurpose = getAutoLocalUrlFromTypeAndIdWithPurpose(v9, v10, 2LL, @"auto");
  id v12 = (void *)objc_claimAutoreleasedReturnValue(AutoLocalUrlFromTypeAndIdWithPurpose);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 path]);

  uint64_t v14 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"/%@",  @"AssetData");
  uint64_t v15 = -[NSString length](v14, "length");
  id v16 = [v13 length];
  uint64_t v17 = 0LL;
LABEL_8:

  return v17;
}

+ (id)restoreVersionFromOSVersion:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 componentsSeparatedByString:@"."]);
  id v5 = [v4 count];
  if ((uint64_t)v5 <= 0)
  {
    id v13 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"%@.0.0.0.0,0", v3);
    if (!v13) {
      goto LABEL_17;
    }
  }

  else
  {
    unint64_t v6 = (unint64_t)v5;
    if ((unint64_t)v5 > 4)
    {
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
      id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 oslog]);

      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        +[MADAutoAssetControlManager restoreVersionFromOSVersion:].cold.1();
      }

      id v13 = 0LL;
      goto LABEL_17;
    }

    uint64_t v7 = objc_alloc(&OBJC_CLASS___NSMutableString);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 objectAtIndexedSubscript:0]);
    id v9 = -[NSMutableString initWithString:](v7, "initWithString:", v8);

    if (v6 >= 2)
    {
      for (uint64_t i = 1LL; i != v6; ++i)
      {
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v4 objectAtIndexedSubscript:i]);
        -[NSMutableString appendFormat:](v9, "appendFormat:", @".%@", v11);
      }
    }

    else {
      uint64_t v12 = 5 - v6;
    }
    do
    {
      -[NSMutableString appendString:](v9, "appendString:", @".0");
      --v12;
    }

    while (v12);
    id v13 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"%@,0", v9);

    if (!v13)
    {
LABEL_17:
      id v14 = 0LL;
      goto LABEL_18;
    }
  }

  id v14 = [[SUCoreRestoreVersion alloc] initWithRestoreVersion:v13];
LABEL_18:

  return v14;
}

- (void)trackDescriptor:(id)a3 persisting:(BOOL)a4 fromLocation:(id)a5 changedWhileTerminated:(BOOL)a6 changedNeverBeenLocked:(BOOL)a7 historyOperation:(int64_t)a8 firstClientName:(id)a9
{
  BOOL v87 = a7;
  BOOL v10 = a6;
  BOOL v12 = a4;
  id v14 = a3;
  id v15 = a5;
  id v16 = a9;
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  if (v14 && ![v14 isBlankEntry])
  {
    id v85 = v16;
    id v86 = v15;
    uint64_t v24 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
    unsigned __int8 v26 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSpecifier]);
    id v27 = (void *)objc_claimAutoreleasedReturnValue([v14 assetVersion]);
    id v28 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v24,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v25,  v26,  v27);

    if (![v14 isOnFilesystem])
    {
      id v30 = 0LL;
      uint64_t v81 = 0LL;
      int v35 = 1;
      __int128 v36 = @"job has just updated status";
      __int128 v31 = v28;
      id v16 = v85;
      id v15 = v86;
      goto LABEL_41;
    }

    uint64_t v29 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager locateDownloadedByFullSelector:](self, "locateDownloadedByFullSelector:", v28));
    id v30 = (void *)v29;
    __int128 v31 = v28;
    if (v12)
    {
      id v78 = (void *)v29;
      __int128 v32 = objc_alloc(&OBJC_CLASS___NSString);
      if (v10) {
        __int128 v33 = @"previously in-flight";
      }
      else {
        __int128 v33 = @"just";
      }
      id v16 = v85;
      id v15 = v86;
      if (v87)
      {
        __int128 v34 = @"first-locked";
      }

      else if ([v14 foundAsPreInstalled])
      {
        __int128 v34 = @"migrated-preinstalled";
      }

      else
      {
        unsigned int v37 = [v14 isPatch];
        __int128 v34 = @"downloaded(full)";
        if (v37) {
          __int128 v34 = @"patched";
        }
      }

      uint64_t v83 = -[NSString initWithFormat:]( v32,  "initWithFormat:",  @"%@ %@ auto-asset-descriptor status update",  v33,  v34);
      uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      uint64_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue([v38 oslog]);

      id v30 = v78;
      if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
      {
        id v40 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        id v41 = v31;
        if (v78) {
          id v82 = (__CFString *)objc_claimAutoreleasedReturnValue([v78 summary]);
        }
        else {
          id v82 = @"N";
        }
        unsigned int v42 = (void *)objc_claimAutoreleasedReturnValue([v14 summary]);
        *(_DWORD *)int buf = 138544386;
        id v89 = v40;
        __int16 v90 = 2114;
        id v91 = v86;
        __int16 v92 = 2114;
        id v93 = v83;
        __int16 v94 = 2114;
        BOOL v95 = v82;
        __int16 v96 = 2114;
        __int128 v97 = v42;
        _os_log_impl( &dword_0,  v39,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:trackDescriptor} %{public}@ | previousDescriptor:%{public}@ | recentDescriptor:%{public}@",  buf,  0x34u);
        if (v78) {

        }
        __int128 v31 = v41;
        id v15 = v86;
      }

      uint64_t v81 = @"DOWNLOADED_DESCRIPTORS";
      __int128 v36 = v83;
      if (!a8)
      {
LABEL_30:
        if (v30)
        {
          if (([v30 isOnFilesystem] & 1) != 0
            || ([v14 isOnFilesystem] & 1) != 0)
          {
            unsigned __int8 v44 = 0;
          }

          else
          {
            unsigned __int8 v44 = -[MADAutoAssetControlManager _updateTrackedDescriptor:fromLatestDescriptor:]( self,  "_updateTrackedDescriptor:fromLatestDescriptor:",  v30,  v14);
          }

          int v35 = 0;
          if ((v44 & 1) == 0 && !v12)
          {
            id v45 = v30;
            id v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            __int16 v47 = (os_log_s *)objc_claimAutoreleasedReturnValue([v46 oslog]);

            if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              uint64_t v49 = (__CFString *)objc_claimAutoreleasedReturnValue([v31 summary]);
              *(_DWORD *)int buf = 138543874;
              id v89 = v48;
              __int16 v90 = 2114;
              id v91 = v15;
              __int16 v92 = 2114;
              id v93 = v49;
              _os_log_impl( &dword_0,  v47,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:trackDescriptor} update to descriptor not performed (nothing changed) | selector:%{public}@",  buf,  0x20u);
            }

            id v30 = v45;
LABEL_77:

            goto LABEL_78;
          }
        }

        else
        {
          int v35 = 1;
        }

- (BOOL)trackSetDescriptor:(id)a3 fromLocation:(id)a4 forLatestDownloaded:(BOOL)a5 forSpecificAtomicInstance:(id)a6 withCurrentSetStatus:(id)a7 changedWhileTerminated:(BOOL)a8 changedNeverBeenLocked:(BOOL)a9 notifyingIfJustDownloaded:(BOOL)a10 latestToVend:(BOOL)a11 historyOperation:(int64_t)a12 firstClientName:(id)a13
{
  id v16 = a3;
  id v17 = a7;
  id v18 = a4;
  id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v20 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v19 extendedStateQueue]);
  dispatch_assert_queue_V2(v20);

  id v21 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:trackSetDescriptor",  v18);
  if (v16)
  {
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v16 clientDomainName]);
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSetIdentifier]);
    id v130 = -[MADAutoAssetControlManager newSetEntryIDForClientDomain:forAssetSetIdentifier:]( self,  "newSetEntryIDForClientDomain:forAssetSetIdentifier:",  v22,  v23);

    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v16 clientDomainName]);
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSetIdentifier]);
    __int128 v129 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorActiveJobByClientDomain:forAssetSetIdentifier:]( self,  "locateSetDescriptorActiveJobByClientDomain:forAssetSetIdentifier:",  v24,  v25));

    unsigned __int8 v26 = (void *)objc_claimAutoreleasedReturnValue([v16 discoveredAtomicInstance]);
    id v27 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorActiveJobByAtomicInstanceUUID:]( self,  "locateSetDescriptorActiveJobByAtomicInstanceUUID:",  v26));

    id v28 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDownloadedAtomicInstance]);
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorActiveJobByAtomicInstanceUUID:]( self,  "locateSetDescriptorActiveJobByAtomicInstanceUUID:",  v28));

    id v30 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
    __int128 v31 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDownloadedAtomicInstance]);
    id v32 = [v30 safeObjectForKey:v31 ofClass:objc_opt_class(MADAutoSetDescriptor)];
    __int128 v33 = (void *)objc_claimAutoreleasedReturnValue(v32);

    __int128 v131 = self;
    if (v33)
    {
      __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v16 clientDomainName]);
      int v35 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSetIdentifier]);
      __int128 v36 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationForClientDomain:forAssetSetIdentifier:]( self,  "setConfigurationForClientDomain:forAssetSetIdentifier:",  v34,  v35));

      -[MADAutoAssetControlManager persistSetDescriptorDownloadedJob:fromLocation:]( self,  "persistSetDescriptorDownloadedJob:fromLocation:",  v16,  v21);
      unsigned int v37 = (void *)objc_claimAutoreleasedReturnValue([v36 latestAtomicInstanceToVend]);

      if (v37)
      {
        uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v36 latestAtomicInstanceToVend]);
        __int128 v124 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v38));

        uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager chooseNewerSetDescriptor:considering:]( self,  "chooseNewerSetDescriptor:considering:",  v16,  v124));
        __int128 v126 = v33;
        id v40 = v29;
        id v41 = (void *)objc_claimAutoreleasedReturnValue([v39 latestDownloadedAtomicInstance]);
        unsigned int v42 = v27;
        id v43 = v17;
        unsigned __int8 v44 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDownloadedAtomicInstance]);
        unsigned int v45 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v41, v44);

        id v17 = v43;
        id v27 = v42;

        int v46 = v45 | a11;
        uint64_t v29 = v40;
        __int128 v33 = v126;
      }

      else
      {
        int v46 = 1;
      }

      BOOL v54 = 0;
      uint64_t v55 = v131;
    }

    else
    {
      if (![v16 isOnFilesystem]
        || ([v16 onFilesystemIncomplete] & 1) != 0)
      {
        __int128 v51 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager activeSetDescriptorsByIdentifier]( self,  "activeSetDescriptorsByIdentifier"));
        [v51 setSafeObject:v16 forKey:v130];

        uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager activeSetDescriptorsByInstance]( self,  "activeSetDescriptorsByInstance"));
        uint64_t v53 = (void *)objc_claimAutoreleasedReturnValue([v16 discoveredAtomicInstance]);
        [v52 setSafeObject:v16 forKey:v53];

        -[MADAutoAssetControlManager persistSetDescriptorActiveJob:fromLocation:]( self,  "persistSetDescriptorActiveJob:fromLocation:",  v16,  v21);
        BOOL v50 = 0;
LABEL_23:

        goto LABEL_24;
      }

      unsigned int v72 = 0;
      __int128 v125 = 0LL;
      __int16 v73 = v29;
      if (v17)
      {
        int v46 = a11;
        if (a10)
        {
          id v74 = (void *)objc_claimAutoreleasedReturnValue([v17 clientDomainName]);
          id v75 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSetIdentifier]);
          __int128 v125 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationForClientDomain:forAssetSetIdentifier:]( v131,  "setConfigurationForClientDomain:forAssetSetIdentifier:",  v74,  v75));

          id v76 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDownloadedAtomicInstance]);
          unsigned int v72 = -[MADAutoAssetControlManager shouldAdoptJobFoundAllContent:forJobAtomicInstance:withCurrentSetStatus:]( v131,  "shouldAdoptJobFoundAllContent:forJobAtomicInstance:withCurrentSetStatus:",  v21,  v76,  v17);
        }
      }

      else
      {
        int v46 = a11;
      }

      if (v129)
      {
        BOOL v79 = (void *)objc_claimAutoreleasedReturnValue([v16 clientDomainName]);
        __int128 v80 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSetIdentifier]);
        -[MADAutoAssetControlManager removeSetDescriptorActiveJobByClientDomain:forAssetSetIdentifier:fromLocation:]( v131,  "removeSetDescriptorActiveJobByClientDomain:forAssetSetIdentifier:fromLocation:",  v79,  v80,  v21);
      }

      uint64_t v55 = v131;
      if (v27)
      {
        uint64_t v81 = (void *)objc_claimAutoreleasedReturnValue([v16 discoveredAtomicInstance]);
        -[MADAutoAssetControlManager removeSetDescriptorActiveJobByAtomicInstanceUUID:]( v131,  "removeSetDescriptorActiveJobByAtomicInstanceUUID:",  v81);
      }

      int64_t v82 = a12;
      if (v73)
      {
        uint64_t v83 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDownloadedAtomicInstance]);
        -[MADAutoAssetControlManager removeSetDescriptorActiveJobByAtomicInstanceUUID:]( v131,  "removeSetDescriptorActiveJobByAtomicInstanceUUID:",  v83);
      }

      id v121 = v73;
      id v122 = v17;
      if (v72)
      {
        int64_t v120 = a12;
        BOOL v84 = (__CFString *)objc_claimAutoreleasedReturnValue([v17 latestDownloadedAtomicInstance]);
        id v85 = (void *)objc_claimAutoreleasedReturnValue([v17 latestDowloadedAtomicInstanceEntries]);
        id v86 = v85;
        if (v84 && v85 && [v85 count])
        {
          uint64_t v87 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setAtomicEntriesRemoveDuplicates:dedupingAtomicEntries:]( v131,  "setAtomicEntriesRemoveDuplicates:dedupingAtomicEntries:",  v21,  v86));

          uint64_t v88 = (void *)objc_claimAutoreleasedReturnValue([v125 autoAssetEntries]);
          [v16 setRequestedAutoAssetEntries:v88];

          id v89 = (void *)objc_claimAutoreleasedReturnValue([v17 catalogCachedAssetSetID]);
          [v16 setCatalogCachedAssetSetID:v89];

          __int16 v90 = (void *)objc_claimAutoreleasedReturnValue([v17 catalogDownloadedFromLive]);
          [v16 setCatalogDownloadedFromLive:v90];

          id v91 = (void *)objc_claimAutoreleasedReturnValue([v17 catalogLastTimeChecked]);
          [v16 setCatalogLastTimeChecked:v91];

          __int16 v92 = (void *)objc_claimAutoreleasedReturnValue([v17 catalogPostedDate]);
          [v16 setCatalogPostedDate:v92];

          id v93 = (void *)objc_claimAutoreleasedReturnValue([v17 downloadedCatalogCachedAssetSetID]);
          [v16 setDownloadedCatalogCachedAssetSetID:v93];

          __int16 v94 = (void *)objc_claimAutoreleasedReturnValue([v17 downloadedCatalogDownloadedFromLive]);
          [v16 setDownloadedCatalogDownloadedFromLive:v94];

          BOOL v95 = (void *)objc_claimAutoreleasedReturnValue([v17 downloadedCatalogLastTimeChecked]);
          [v16 setDownloadedCatalogLastTimeChecked:v95];

          __int16 v96 = (void *)objc_claimAutoreleasedReturnValue([v17 downloadedCatalogPostedDate]);
          [v16 setDownloadedCatalogPostedDate:v96];

          __int128 v97 = (void *)objc_claimAutoreleasedReturnValue([v17 newerDiscoveredAtomicEntries]);
          [v16 setDiscoveredAtomicEntries:v97];

          [v16 setLatestDownloadedAtomicInstance:v84];
          id v86 = (void *)v87;
          [v16 setLatestDowloadedAtomicInstanceEntries:v87];
          __int128 v98 = v84;
          id v99 = v17;
          int v100 = 1;
          [v16 setIsOnFilesystem:1];
          [v16 setIsDiscoveredFullyDownloaded:1];
          [v16 setAtomicInstanceDownloadedNotified:0];
          [v16 setNeverBeenLocked:1];
          id v101 = (void *)objc_claimAutoreleasedReturnValue([v99 assetSetIdentifier]);
          __int128 v102 = v99;
          BOOL v84 = v98;
          -[MADAutoAssetControlManager _updateCurrentSetStatus:forSetIdentifier:withSetStatus:]( v131,  "_updateCurrentSetStatus:forSetIdentifier:withSetStatus:",  v21,  v101,  v102);

          -[MADAutoAssetControlManager updateAutoAssetSetStatus:forSetDescriptor:]( v131,  "updateAutoAssetSetStatus:forSetDescriptor:",  v21,  v16);
          -[MADAutoAssetControlManager _removeAllUnlockedForOtherAtomicInstances:fromLocation:]( v131,  "_removeAllUnlockedForOtherAtomicInstances:fromLocation:",  v16,  v21);
          int64_t v120 = 356LL;
          __int128 v33 = 0LL;
        }

        else
        {
          __int128 v103 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v131, "logger"));
          __int128 v104 = (os_log_s *)objc_claimAutoreleasedReturnValue([v103 oslog]);

          __int128 v33 = 0LL;
          if (os_log_type_enabled(v104, OS_LOG_TYPE_DEFAULT))
          {
            __int128 v105 = v84;
            if (!v84) {
              BOOL v84 = @"N";
            }
            id v119 = [v86 count];
            uint32_t v106 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
            *(_DWORD *)int buf = 138544130;
            uint64_t v133 = v21;
            __int16 v134 = 2114;
            char v135 = v84;
            BOOL v84 = v105;
            __int16 v136 = 2048;
            id v137 = v119;
            __int16 v138 = 2114;
            uint64_t v139 = v106;
            _os_log_impl( &dword_0,  v104,  OS_LOG_TYPE_DEFAULT,  "{%{public}@} set-job current-set-status incomplete | downloadedAtomicInstance:%{public}@ | latestDownloade dEntries:%ld | setJobDescriptor:%{public}@",  buf,  0x2Au);
          }

          int v100 = 0;
        }

        uint64_t v55 = v131;
        int64_t v82 = v120;
      }

      else
      {
        int v100 = 0;
        __int128 v33 = 0LL;
      }

      unsigned int v107 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( v55,  "downloadedSetDescriptorsByInstance"));
      os_log_t v108 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDownloadedAtomicInstance]);
      [v107 setSafeObject:v16 forKey:v108];

      -[MADAutoAssetControlManager persistSetDescriptorDownloadedJob:fromLocation:]( v55,  "persistSetDescriptorDownloadedJob:fromLocation:",  v16,  v21);
      if (v82)
      {
        os_log_t v109 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDowloadedAtomicInstanceEntries]);
        id v110 = [v109 count];
        int v128 = v100;
        BOOL v111 = v27;
        uint64_t v112 = (void *)objc_claimAutoreleasedReturnValue([v16 clientDomainName]);
        int64_t v113 = v82;
        id v114 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSetIdentifier]);
        __int128 v115 = (void *)objc_claimAutoreleasedReturnValue([v16 discoveredAtomicInstance]);
        id v116 = v110;
        uint64_t v55 = v131;
        +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:usageCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:usageCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:",  v113,  2LL,  1LL,  v116,  v112,  v114,  v115);

        id v27 = v111;
        int v46 = a11;
        int v100 = v128;
      }

      BOOL v54 = v100 == 0;
      uint64_t v29 = v121;
      id v17 = v122;
    }

    BOOL v50 = 0;
    if (v54 || !v46) {
      goto LABEL_23;
    }
    __int128 v127 = v33;
    uint64_t v56 = v29;
    uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue([v16 clientDomainName]);
    id v58 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSetIdentifier]);
    __int128 v59 = v55;
    __int128 v60 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( v55,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v57,  v58));

    if (v60)
    {
      __int128 v61 = (void *)objc_claimAutoreleasedReturnValue([v60 latestAtomicInstanceToVend]);
      char v62 = (void *)objc_claimAutoreleasedReturnValue([v16 latestDownloadedAtomicInstance]);
      unsigned __int8 v63 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v61, v62);

      if ((v63 & 1) != 0)
      {
        BOOL v50 = 0;
        uint64_t v29 = v56;
        __int128 v33 = v127;
LABEL_22:

        goto LABEL_23;
      }

      __int128 v123 = v27;
      if ([v16 isOnFilesystem]
        && ([v16 onFilesystemIncomplete] & 1) == 0)
      {
        if (-[MADAutoAssetControlManager _doesSetDescriptorRequirePersonalization:forSetDescriptor:]( v131,  "_doesSetDescriptorRequirePersonalization:forSetDescriptor:",  v21,  v16))
        {
          BOOL v77 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v131, "logger"));
          id v64 = (os_log_s *)objc_claimAutoreleasedReturnValue([v77 oslog]);

          uint64_t v29 = v56;
          if (os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT))
          {
            id v78 = (__CFString *)objc_claimAutoreleasedReturnValue([v16 summary]);
            *(_DWORD *)int buf = 138543618;
            uint64_t v133 = v21;
            __int16 v134 = 2114;
            char v135 = v78;
            _os_log_impl( &dword_0,  v64,  OS_LOG_TYPE_DEFAULT,  "{%{public}@}\n [LATEST-TO-VEND] not setting latestAtomicInstanceToVend (requiresPersonalization) | setJobDescriptor:%{public}@",  buf,  0x16u);
          }

          BOOL v50 = 0;
        }

        else
        {
          -[MADAutoAssetControlManager setConfigurationAdoptLatestToVend:fromSetDescriptor:toSetConfiguration:]( v131,  "setConfigurationAdoptLatestToVend:fromSetDescriptor:toSetConfiguration:",  v21,  v16,  v60);
          __int128 v117 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v131, "logger"));
          id v64 = (os_log_s *)objc_claimAutoreleasedReturnValue([v117 oslog]);

          uint64_t v29 = v56;
          if (os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT))
          {
            __int16 v118 = (__CFString *)objc_claimAutoreleasedReturnValue([v60 summary]);
            *(_DWORD *)int buf = 138543618;
            uint64_t v133 = v21;
            __int16 v134 = 2114;
            char v135 = v118;
            _os_log_impl( &dword_0,  v64,  OS_LOG_TYPE_DEFAULT,  "{%{public}@}\n [LATEST-TO-VEND] replaced what had been latestAtomicInstanceToVend | setConfiguration:%{public}@",  buf,  0x16u);
          }

          BOOL v50 = 1;
        }

        goto LABEL_21;
      }

      id v64 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v131, "autoControlManagerFSM"));
      unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s diag](v64, "diag"));
      uint64_t v69 = objc_alloc(&OBJC_CLASS___NSString);
      __int128 v67 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
      __int128 v68 = -[NSString initWithFormat:]( v69,  "initWithFormat:",  @"{%@} about to adopt as latest-to-vend yet not on filesystem | setJobDescriptor:%@",  v21,  v67);
    }

    else
    {
      __int128 v123 = v27;
      id v64 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v59, "autoControlManagerFSM"));
      unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s diag](v64, "diag"));
      __int128 v66 = objc_alloc(&OBJC_CLASS___NSString);
      __int128 v67 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
      __int128 v68 = -[NSString initWithFormat:]( v66,  "initWithFormat:",  @"{%@} no setConfiguration | setJobDescriptor:%@",  v21,  v67);
    }

    id v70 = v68;
    [v65 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v68 withResult:6103 withError:0];

    BOOL v50 = 0;
    uint64_t v29 = v56;
LABEL_21:
    __int128 v33 = v127;

    id v27 = v123;
    goto LABEL_22;
  }

  __int16 v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([v47 diag]);
  uint64_t v49 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} nil setJobDescriptor",  v21);
  [v48 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v49 withResult:6103 withError:0];

  BOOL v50 = 0;
LABEL_24:

  return v50;
}

- (void)_logTrackedSetDescriptors:(id)a3 forSetJobDescriptor:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
    int v14 = 138543874;
    id v15 = v12;
    __int16 v16 = 2114;
    id v17 = v6;
    __int16 v18 = 2114;
    id v19 = v13;
    _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:_logTrackedSetDescriptors} setJobDesciptor:%{public}@",  (uint8_t *)&v14,  0x20u);
  }
}

- (void)trackDescriptorForgetAssetSelector:(id)a3 forHistoryOperation:(int64_t)a4 firstClientName:(id)a5
{
  id v8 = a3;
  id v9 = a5;
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  BOOL v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 oslog]);

  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
    *(_DWORD *)int buf = 138543618;
    __int16 v47 = v14;
    __int16 v48 = 2114;
    uint64_t v49 = v15;
    _os_log_impl( &dword_0,  v13,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {trackDescriptorForgetAssetSelector} forgetting | assetSelector:%{public}@",  buf,  0x16u);
  }

  __int16 v16 = (void *)objc_claimAutoreleasedReturnValue([v8 assetType]);
  if (v16)
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSpecifier]);

    if (v17)
    {
      __int16 v18 = (void *)objc_claimAutoreleasedReturnValue([v8 assetVersion]);

      if (v18)
      {
        uint64_t v19 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v8));
        if (v19)
        {
          id v20 = (void *)v19;
          else {
            uint64_t v21 = 5LL;
          }
        }

        else
        {
          uint64_t v27 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateActiveJobDescriptorBySelector:]( self,  "locateActiveJobDescriptorBySelector:",  v8));
          else {
            uint64_t v21 = 5LL;
          }
          if (!v27)
          {
            __int128 v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 oslog]);

            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
            {
              int v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
              *(_DWORD *)int buf = 138543618;
              __int16 v47 = v35;
              __int16 v48 = 2114;
              uint64_t v49 = v36;
              _os_log_impl( &dword_0,  v28,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {trackDescriptorForgetAssetSelector} no descriptor for asset-version | assetSelector:%{public}@",  buf,  0x16u);
            }

            id v20 = 0LL;
            char v32 = 0;
LABEL_29:

            unsigned int v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v8));
            if (v37)
            {
              uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v20 assetId]);
              if (v9) {
                +[MADAutoAssetHistory recordOperation:toHistoryType:fromClient:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromClient:forAssetID:withSelector:",  a4,  0LL,  v9,  v38,  v8);
              }
              else {
                +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  a4,  0LL,  v21,  v38,  v8);
              }
            }

            else
            {
              uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
              uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v38 diag]);
              id v40 = objc_alloc(&OBJC_CLASS___NSString);
              id v41 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
              unsigned int v42 = -[NSString initWithFormat:]( v40,  "initWithFormat:",  @"{trackDescriptorForgetAssetSelector} nil jobSelectorKey | assetSelector:%@",  v41);
              [v39 trackAnomaly:@"AUTO-CONTROL" forReason:v42 withResult:6103 withError:0];
            }

LABEL_36:
            id v43 = (void *)objc_claimAutoreleasedReturnValue([v8 assetType]);
            unsigned __int8 v44 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSpecifier]);
            unsigned int v45 = (void *)objc_claimAutoreleasedReturnValue([v8 assetVersion]);
            -[MADAutoAssetControlManager _logTrackedDescriptors:forAssetType:withAssetSpecifier:matchingAssetVersion:]( self,  "_logTrackedDescriptors:forAssetType:withAssetSpecifier:matchingAssetVersion:",  @"trackDescriptorForgetAssetSelector",  v43,  v44,  v45);

            goto LABEL_37;
          }

          id v20 = (void *)v27;
        }

        id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 persistedEntryID]);
        uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
        [v29 removePersistedEntry:v28 fromLocation:@"trackDescriptorForgetAssetSelector"];

        else {
          id v30 = @"JOB_DESCRIPTORS";
        }
        -[MADAutoAssetControlManager _logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:]( self,  "_logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:",  @"trackDescriptorForgetAssetSelector",  v30,  v28,  v20,  @"forget all auto-specific-assets associated with the given asset-selector");
        unsigned int v31 = [v20 isOnFilesystem];
        char v32 = v31;
        if (v31)
        {
          __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v20 assetId]);
          if (v9) {
            +[MADAutoAssetHistory recordOperation:toHistoryType:fromClient:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromClient:forAssetID:withSelector:",  a4,  0LL,  v9,  v33,  v8);
          }
          else {
            +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  a4,  0LL,  v21,  v33,  v8);
          }
        }

        goto LABEL_29;
      }

      id v20 = (void *)objc_claimAutoreleasedReturnValue([v8 assetType]);
      unsigned __int8 v26 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSpecifier]);
      -[MADAutoAssetControlManager trackDescriptorForgetAssetType:forAssetSpecifier:firstClientName:]( self,  "trackDescriptorForgetAssetType:forAssetSpecifier:firstClientName:",  v20,  v26,  v9);
    }

    else
    {
      id v20 = (void *)objc_claimAutoreleasedReturnValue([v8 assetType]);
      -[MADAutoAssetControlManager trackDescriptorForgetAssetType:firstClientName:]( self,  "trackDescriptorForgetAssetType:firstClientName:",  v20,  v9);
    }
  }

  else
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v20 diag]);
    uint64_t v23 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
    uint64_t v25 = -[NSString initWithFormat:]( v23,  "initWithFormat:",  @"{trackDescriptorForgetAssetSelector} nil assetType | assetSelector:%@",  v24);
    [v22 trackAnomaly:@"AUTO-CONTROL" forReason:v25 withResult:6103 withError:0];
  }

- (void)trackDescriptorForgetAssetType:(id)a3 forAssetSpecifier:(id)a4 firstClientName:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  BOOL v10 = v8;
  id v11 = v9;
  id v79 = a5;
  BOOL v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v13);

  int v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    *(_DWORD *)int buf = 138543874;
    __int128 v104 = v16;
    __int16 v105 = 2114;
    uint32_t v106 = v10;
    __int16 v107 = 2114;
    id v108 = v11;
    _os_log_impl( &dword_0,  v15,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {trackDescriptorForgetAssetType:forAssetSpecifier:} | assetType:%{public}@, assetSpecifier:%{public}@",  buf,  0x20u);
  }

  if (!v10 || !v11)
  {
    id v76 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    BOOL v77 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary diag](v76, "diag"));
    uint64_t v57 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{trackDescriptorForgetAssetType:forAssetSpecifier:} missing parameter assetType:%@ assetSpecifier:%@",  v10,  v11);
    [v77 trackAnomaly:@"AUTO-CONTROL" forReason:v57 withResult:6102 withError:0];
    goto LABEL_57;
  }

  uint64_t v81 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v87 = self;
  __int128 v96 = 0u;
  __int128 v97 = 0u;
  __int128 v98 = 0u;
  __int128 v99 = 0u;
  id v17 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewBySelectorForAssetType:]( self,  "locateDownloadedNewBySelectorForAssetType:",  v10));
  id v18 = [v17 countByEnumeratingWithState:&v96 objects:v102 count:16];
  id v85 = v11;
  id v86 = v10;
  if (!v18) {
    goto LABEL_26;
  }
  id v19 = v18;
  uint64_t v82 = *(void *)v97;
  do
  {
    for (uint64_t i = 0LL; i != v19; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v97 != v82) {
        objc_enumerationMutation(v17);
      }
      uint64_t v21 = *(void *)(*((void *)&v96 + 1) + 8LL * (void)i);
      uint64_t v22 = objc_autoreleasePoolPush();
      id v23 = [v17 safeObjectForKey:v21 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
      uint64_t v25 = v24;
      if (v24)
      {
        unsigned __int8 v26 = (void *)objc_claimAutoreleasedReturnValue([v24 assetSpecifier]);
        unsigned int v27 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v26, v11);

        if (!v27) {
          goto LABEL_24;
        }
        id v28 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
        uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v25 assetType]);
        id v30 = (void *)objc_claimAutoreleasedReturnValue([v25 assetSpecifier]);
        unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue([v25 assetVersion]);
        id v32 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v28,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v29,  v30,  v31);

        __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v32 persistedEntryID]);
        __int128 v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](v87, "persistedKnownDescriptors"));
        [v34 removePersistedEntry:v33 fromLocation:@"trackDescriptorForgetAssetType"];

        else {
          int v35 = @"JOB_DESCRIPTORS";
        }
        -[MADAutoAssetControlManager _logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:]( v87,  "_logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:",  @"trackDescriptorForgetAssetType",  v35,  v33,  v25,  @"forget all descriptors for the asset-type + asset-specifier");
        if ([v25 isOnFilesystem])
        {
          __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v25 assetId]);
          BOOL v10 = v86;
          if (v79) {
            +[MADAutoAssetHistory recordOperation:toHistoryType:fromClient:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromClient:forAssetID:withSelector:",  300LL,  0LL,  v79,  v36,  v32);
          }
          else {
            +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  300LL,  0LL,  1LL,  v36,  v32);
          }

          -[NSMutableDictionary setSafeObject:forKey:](v81, "setSafeObject:forKey:", v25, v33);
        }

        else
        {
          BOOL v10 = v86;
        }

        id v11 = v85;
      }

      else
      {
        id v32 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v87, "autoControlManagerFSM"));
        __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v32 diag]);
        unsigned int v37 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{trackDescriptorForgetAssetType:forAssetSpecifier:} unable to load descriptor | assetType:%@, assetSpecifier:%@",  v10,  v11);
        [v33 trackAnomaly:@"AUTO-CONTROL" forReason:v37 withResult:6103 withError:0];
      }

LABEL_24:
      objc_autoreleasePoolPop(v22);
    }

    id v19 = [v17 countByEnumeratingWithState:&v96 objects:v102 count:16];
  }

  while (v19);
LABEL_26:

  __int128 v80 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v92 = 0u;
  __int128 v93 = 0u;
  __int128 v94 = 0u;
  __int128 v95 = 0u;
  id v38 = v17;
  id v39 = [v38 countByEnumeratingWithState:&v92 objects:v101 count:16];
  id v78 = v38;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  if (v39)
  {
    id v41 = v39;
    uint64_t v83 = *(void *)v93;
    do
    {
      for (j = 0LL; j != v41; j = (char *)j + 1)
      {
        id v43 = v10;
        if (*(void *)v93 != v83) {
          objc_enumerationMutation(v38);
        }
        uint64_t v44 = *(void *)(*((void *)&v92 + 1) + 8LL * (void)j);
        unsigned int v45 = objc_autoreleasePoolPush();
        id v46 = [v38 safeObjectForKey:v44 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        __int16 v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
        __int16 v48 = p_ivars;
        uint64_t v49 = p_ivars[155];
        BOOL v50 = (void *)objc_claimAutoreleasedReturnValue([v47 assetType]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v49, "stringIsEqual:to:", v50, v43) & 1) != 0)
        {
          __int128 v51 = v48[155];
          uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue([v47 assetSpecifier]);
          LODWORD(v51) = -[__objc2_ivar_list stringIsEqual:to:](v51, "stringIsEqual:to:", v52, v85);

          BOOL v10 = v86;
          if ((_DWORD)v51)
          {
            uint64_t v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v87, "logger"));
            BOOL v54 = (os_log_s *)objc_claimAutoreleasedReturnValue([v53 oslog]);

            if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v87, "_updateLatestSummary"));
              uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue([v47 summary]);
              *(_DWORD *)int buf = 138543618;
              __int128 v104 = v55;
              __int16 v105 = 2114;
              uint32_t v106 = v56;
              _os_log_impl( &dword_0,  v54,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {trackDescriptorForgetAssetType:forAssetSpecifier:} removing from downloadedDescriptorsBySe lector | forgetDescriptor:%{public}@",  buf,  0x16u);

              BOOL v10 = v86;
            }

            -[MADAutoAssetControlManager _statsIncrementRemovedForDescriptor:]( v87,  "_statsIncrementRemovedForDescriptor:",  v47);
            -[NSMutableDictionary setSafeObject:forKey:](v80, "setSafeObject:forKey:", v47, v44);
            id v38 = v78;
          }
        }

        else
        {

          BOOL v10 = v43;
        }

        objc_autoreleasePoolPop(v45);
        p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
      }

      id v41 = [v38 countByEnumeratingWithState:&v92 objects:v101 count:16];
    }

    while (v41);
  }

  __int128 v90 = 0u;
  __int128 v91 = 0u;
  __int128 v88 = 0u;
  __int128 v89 = 0u;
  uint64_t v57 = v80;
  id v58 = -[NSString countByEnumeratingWithState:objects:count:]( v57,  "countByEnumeratingWithState:objects:count:",  &v88,  v100,  16LL);
  id v11 = v85;
  __int128 v59 = v87;
  if (v58)
  {
    id v60 = v58;
    uint64_t v84 = *(void *)v89;
    do
    {
      for (k = 0LL; k != v60; k = (char *)k + 1)
      {
        if (*(void *)v89 != v84) {
          objc_enumerationMutation(v57);
        }
        char v62 = *(void **)(*((void *)&v88 + 1) + 8LL * (void)k);
        id v63 = -[NSString safeObjectForKey:ofClass:]( v57,  "safeObjectForKey:ofClass:",  v62,  objc_opt_class(&OBJC_CLASS___MADAutoAssetDescriptor));
        id v64 = (void *)objc_claimAutoreleasedReturnValue(v63);
        unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v59, "logger"));
        __int128 v66 = (os_log_s *)objc_claimAutoreleasedReturnValue([v65 oslog]);

        if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
        {
          __int128 v67 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v59, "_updateLatestSummary"));
          *(_DWORD *)int buf = 138543618;
          __int128 v104 = v67;
          __int16 v105 = 2114;
          uint32_t v106 = v62;
          _os_log_impl( &dword_0,  v66,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {trackDescriptorForgetAssetType:forAssetSpecifier:} removed from downloadedDescriptorsBySelecto r | jobSelectorKey:%{public}@",  buf,  0x16u);
        }

        if ([v64 isOnFilesystem])
        {
          id v68 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v81,  "safeObjectForKey:ofClass:",  v62,  objc_opt_class(&OBJC_CLASS___MADAutoAssetDescriptor));
          uint64_t v69 = (void *)objc_claimAutoreleasedReturnValue(v68);
          if (!v69)
          {
            id v70 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
            __int16 v71 = (void *)objc_claimAutoreleasedReturnValue([v64 assetType]);
            unsigned int v72 = (void *)objc_claimAutoreleasedReturnValue([v64 assetSpecifier]);
            __int16 v73 = (void *)objc_claimAutoreleasedReturnValue([v64 assetVersion]);
            id v74 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v70,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v71,  v72,  v73);

            id v75 = (void *)objc_claimAutoreleasedReturnValue([v64 assetId]);
            if (v79) {
              +[MADAutoAssetHistory recordOperation:toHistoryType:fromClient:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromClient:forAssetID:withSelector:",  300LL,  0LL,  v79,  v75,  v74);
            }
            else {
              +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  300LL,  0LL,  1LL,  v75,  v74);
            }

            id v11 = v85;
            BOOL v10 = v86;
            __int128 v59 = v87;
          }
        }
      }

      id v60 = -[NSString countByEnumeratingWithState:objects:count:]( v57,  "countByEnumeratingWithState:objects:count:",  &v88,  v100,  16LL);
    }

    while (v60);
  }

  -[MADAutoAssetControlManager _logTrackedDescriptors:forAssetType:withAssetSpecifier:matchingAssetVersion:]( v59,  "_logTrackedDescriptors:forAssetType:withAssetSpecifier:matchingAssetVersion:",  @"trackDescriptorForgetAssetType",  v10,  v11,  0LL);
  id v76 = v81;
  BOOL v77 = v78;
LABEL_57:
}

- (void)trackDescriptorForgetAssetType:(id)a3 firstClientName:(id)a4
{
  id v6 = a3;
  id v64 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  if (v6)
  {
    uint64_t v69 = self;
    id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewBySelectorForAssetType:]( self,  "locateDownloadedNewBySelectorForAssetType:",  v6));
    unsigned int v65 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    __int128 v78 = 0u;
    __int128 v79 = 0u;
    __int128 v80 = 0u;
    __int128 v81 = 0u;
    id v10 = v9;
    id v11 = [v10 countByEnumeratingWithState:&v78 objects:v88 count:16];
    id v68 = v6;
    if (v11)
    {
      id v12 = v11;
      uint64_t v66 = *(void *)v79;
      do
      {
        for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v79 != v66) {
            objc_enumerationMutation(v10);
          }
          uint64_t v14 = *(void *)(*((void *)&v78 + 1) + 8LL * (void)i);
          id v15 = objc_autoreleasePoolPush();
          id v16 = [v10 safeObjectForKey:v14 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
          id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
          if (v17)
          {
            id v18 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
            id v19 = (void *)objc_claimAutoreleasedReturnValue([v17 assetType]);
            id v20 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSpecifier]);
            uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v17 assetVersion]);
            id v22 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v18,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v19,  v20,  v21);

            id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 persistedEntryID]);
            uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](v69, "persistedKnownDescriptors"));
            [v24 removePersistedEntry:v23 fromLocation:@"trackDescriptorForgetAssetType"];

            else {
              uint64_t v25 = @"JOB_DESCRIPTORS";
            }
            -[MADAutoAssetControlManager _logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:]( v69,  "_logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:",  @"trackDescriptorForgetAssetType",  v25,  v23,  v17,  @"forget all descriptors for the asset-type");
            if ([v17 isOnFilesystem])
            {
              unsigned __int8 v26 = (void *)objc_claimAutoreleasedReturnValue([v17 assetId]);
              if (v64) {
                +[MADAutoAssetHistory recordOperation:toHistoryType:fromClient:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromClient:forAssetID:withSelector:",  300LL,  0LL,  v64,  v26,  v22);
              }
              else {
                +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  300LL,  0LL,  1LL,  v26,  v22);
              }
              id v6 = v68;

              -[NSMutableDictionary setSafeObject:forKey:](v65, "setSafeObject:forKey:", v17, v23);
            }

            else
            {
              id v6 = v68;
            }
          }

          else
          {
            id v22 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v69, "autoControlManagerFSM"));
            id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
            unsigned int v27 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{trackDescriptorForgetAssetType} unable to load descriptor | assetType:%@",  v6);
            [v23 trackAnomaly:@"AUTO-CONTROL" forReason:v27 withResult:6103 withError:0];
          }

          objc_autoreleasePoolPop(v15);
        }

        id v12 = [v10 countByEnumeratingWithState:&v78 objects:v88 count:16];
      }

      while (v12);
    }

    char v62 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    __int128 v74 = 0u;
    __int128 v75 = 0u;
    __int128 v76 = 0u;
    __int128 v77 = 0u;
    id v28 = v10;
    id v29 = [v28 countByEnumeratingWithState:&v74 objects:v87 count:16];
    __int128 v67 = v28;
    if (v29)
    {
      id v30 = v29;
      uint64_t v31 = *(void *)v75;
      do
      {
        for (j = 0LL; j != v30; j = (char *)j + 1)
        {
          if (*(void *)v75 != v31) {
            objc_enumerationMutation(v28);
          }
          uint64_t v33 = *(void *)(*((void *)&v74 + 1) + 8LL * (void)j);
          __int128 v34 = objc_autoreleasePoolPush();
          id v35 = [v28 safeObjectForKey:v33 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
          __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
          unsigned int v37 = (void *)objc_claimAutoreleasedReturnValue([v36 assetType]);
          unsigned int v38 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v37, v6);

          if (v38)
          {
            id v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v69, "logger"));
            id v40 = (os_log_s *)objc_claimAutoreleasedReturnValue([v39 oslog]);

            if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
            {
              id v41 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v69, "_updateLatestSummary"));
              unsigned int v42 = (void *)objc_claimAutoreleasedReturnValue([v36 summary]);
              *(_DWORD *)int buf = 138543618;
              uint64_t v84 = v41;
              __int16 v85 = 2114;
              id v86 = v42;
              _os_log_impl( &dword_0,  v40,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {trackDescriptorForgetAssetType:} removing from downloadedDescriptorsBySelector | forgetDes criptor:%{public}@",  buf,  0x16u);

              id v6 = v68;
            }

            -[MADAutoAssetControlManager _statsIncrementRemovedForDescriptor:]( v69,  "_statsIncrementRemovedForDescriptor:",  v36);
            -[NSMutableDictionary setSafeObject:forKey:](v62, "setSafeObject:forKey:", v36, v33);
            id v28 = v67;
          }

          objc_autoreleasePoolPop(v34);
        }

        id v30 = [v28 countByEnumeratingWithState:&v74 objects:v87 count:16];
      }

      while (v30);
    }

    __int128 v72 = 0u;
    __int128 v73 = 0u;
    __int128 v70 = 0u;
    __int128 v71 = 0u;
    id v43 = v62;
    id v44 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v43,  "countByEnumeratingWithState:objects:count:",  &v70,  v82,  16LL);
    if (v44)
    {
      id v45 = v44;
      uint64_t v46 = *(void *)v71;
      uint64_t v63 = *(void *)v71;
      do
      {
        for (k = 0LL; k != v45; k = (char *)k + 1)
        {
          if (*(void *)v71 != v46) {
            objc_enumerationMutation(v43);
          }
          uint64_t v48 = *(void *)(*((void *)&v70 + 1) + 8LL * (void)k);
          id v49 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v43,  "safeObjectForKey:ofClass:",  v48,  objc_opt_class(&OBJC_CLASS___MADAutoAssetDescriptor));
          BOOL v50 = (void *)objc_claimAutoreleasedReturnValue(v49);
          if ([v50 isOnFilesystem])
          {
            id v51 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v65,  "safeObjectForKey:ofClass:",  v48,  objc_opt_class(&OBJC_CLASS___MADAutoAssetDescriptor));
            uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue(v51);
            if (!v52)
            {
              uint64_t v53 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
              BOOL v54 = (void *)objc_claimAutoreleasedReturnValue([v50 assetType]);
              uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v50 assetSpecifier]);
              uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue([v50 assetVersion]);
              id v57 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v53,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v54,  v55,  v56);

              id v58 = (void *)objc_claimAutoreleasedReturnValue([v50 assetId]);
              if (v64) {
                +[MADAutoAssetHistory recordOperation:toHistoryType:fromClient:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromClient:forAssetID:withSelector:",  300LL,  0LL,  v64,  v58,  v57);
              }
              else {
                +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  300LL,  0LL,  1LL,  v58,  v57);
              }

              id v6 = v68;
              uint64_t v46 = v63;
            }
          }
        }

        id v45 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v43,  "countByEnumeratingWithState:objects:count:",  &v70,  v82,  16LL);
      }

      while (v45);
    }

    -[MADAutoAssetControlManager _logTrackedDescriptors:forAssetType:withAssetSpecifier:matchingAssetVersion:]( v69,  "_logTrackedDescriptors:forAssetType:withAssetSpecifier:matchingAssetVersion:",  @"trackDescriptorForgetAssetType(done)",  v6,  0LL,  0LL);
  }

  else
  {
    __int128 v59 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v60 = (void *)objc_claimAutoreleasedReturnValue([v59 diag]);
    __int128 v61 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{trackDescriptorForgetAssetType} nil assetType");
    [v60 trackAnomaly:@"AUTO-CONTROL" forReason:v61 withResult:6103 withError:0];
  }
}

- (void)_trackActiveDescriptor:(id)a3 operation:(id)a4 usingSelector:(id)a5 withJobUUID:(id)a6 triggeredByClientMessage:(id)a7 downloadingDescriptor:(id)a8 baseForPatchDescriptor:(id)a9 message:(id)a10
{
  id v16 = a3;
  id v17 = a4;
  id v18 = a5;
  id v19 = a6;
  id v20 = a7;
  id v21 = a8;
  id v22 = a9;
  id v49 = a10;
  id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v24 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v23 extendedStateQueue]);
  dispatch_assert_queue_V2(v24);

  unsigned __int8 v25 = [v17 isEqualToString:@"ENTRY_ADD"];
  if (v21 || (v25 & 1) != 0)
  {
    id v48 = v17;
    id v29 = v16;
    id v30 = v20;
    uint64_t v31 = objc_claimAutoreleasedReturnValue([v18 persistedEntryID]);
    id v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
    uint64_t v33 = (void *)v31;
    __int16 v47 = v29;
    __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v32 persistedEntry:v31 fromLocation:v29]);

    if (v34)
    {
      if (v30) {
        [v34 persistSecureCodedObject:v30 forKey:@"clientRequestMessage"];
      }
      if (v18) {
        [v34 persistSecureCodedObject:v18 forKey:@"assetSelector"];
      }
      if (v19) {
        [v34 persistString:v19 forKey:@"autoAssetUUID"];
      }
      if (!v21) {
        id v21 = -[MADAutoAssetDescriptor initBlankEntry]( objc_alloc(&OBJC_CLASS___MADAutoAssetDescriptor),  "initBlankEntry");
      }
      id v45 = v19;
      [v34 persistSecureCodedObject:v21 forKey:@"assetDescriptor"];
      if (v22)
      {
        [v34 persistSecureCodedObject:v22 forKey:@"baseForPatchDescriptor"];
      }

      else
      {
        id v37 = -[MADAutoAssetDescriptor initBlankEntry]( objc_alloc(&OBJC_CLASS___MADAutoAssetDescriptor),  "initBlankEntry");
        [v34 persistSecureCodedObject:v37 forKey:@"baseForPatchDescriptor"];
      }

      id v38 = v22;
      id v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
      id v40 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
      [v39 storePersistedEntry:v33 withEntrySummary:v40 fromLocation:v29];

      id v20 = v30;
      id v16 = v29;
      -[MADAutoAssetControlManager _logPersistedEntry:forComponentType:operation:forPersistedEntryID:forClientRequest:withJobUUID:withAssetDescriptor:baseForPatchDescriptor:message:]( self,  "_logPersistedEntry:forComponentType:operation:forPersistedEntryID:forClientRequest:withJobUUID:withAssetDescript or:baseForPatchDescriptor:message:",  v29,  @"ACTIVE-JOBS",  v48,  v33,  v20,  v45,  v21,  v38,  v49);
      id v22 = v38;
      id v19 = v45;
    }

    else
    {
      id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      __int128 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

      id v20 = v30;
      id v16 = v47;
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
      {
        uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        id v44 = (id)objc_claimAutoreleasedReturnValue([v18 summary]);
        if (v20) {
          id v43 = (__CFString *)objc_claimAutoreleasedReturnValue([v20 messageName]);
        }
        else {
          id v43 = @"N";
        }
        if (v21) {
          unsigned int v42 = (__CFString *)objc_claimAutoreleasedReturnValue([v21 summary]);
        }
        else {
          unsigned int v42 = @"N";
        }
        if (v22) {
          id v41 = (__CFString *)objc_claimAutoreleasedReturnValue([v22 summary]);
        }
        else {
          id v41 = @"N";
        }
        *(_DWORD *)int buf = 138544898;
        id v51 = v46;
        __int16 v52 = 2114;
        id v53 = v47;
        __int16 v54 = 2114;
        id v55 = v44;
        __int16 v56 = 2114;
        id v57 = v19;
        __int16 v58 = 2114;
        __int128 v59 = v43;
        __int16 v60 = 2114;
        __int128 v61 = v42;
        __int16 v62 = 2114;
        uint64_t v63 = v41;
        _os_log_error_impl( &dword_0,  v36,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@:_trackActiveDescriptor} unable to create active persisted-state for selector:%{public }@ JobUUID:%{public}@ message:%{public}@ downloadingDescriptor:%{public}@ baseForPatchDescriptor:%{public}@",  buf,  0x48u);
        if (v22) {

        }
        if (v21) {
        if (v20)
        }
      }
    }

    id v17 = v48;
  }

  else
  {
    unsigned __int8 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v21 = (id)objc_claimAutoreleasedReturnValue([v26 oslog]);

    if (os_log_type_enabled((os_log_t)v21, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      id v28 = (void *)objc_claimAutoreleasedReturnValue([v18 summary]);
      *(_DWORD *)int buf = 138544130;
      id v51 = v27;
      __int16 v52 = 2114;
      id v53 = v16;
      __int16 v54 = 2114;
      id v55 = v28;
      __int16 v56 = 2114;
      id v57 = v19;
      _os_log_impl( &dword_0,  (os_log_t)v21,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@:_trackActiveDescriptor} early active-descriptor non-add tracking [before downloading] - not recording to active-job persisted-state for selector:%{public}@ JobUUID:%{public}@",  buf,  0x2Au);
    }
  }
}

- (void)_logTrackedDescriptors:(id)a3 forAssetType:(id)a4 withAssetSpecifier:(id)a5 matchingAssetVersion:(id)a6
{
  id v82 = a3;
  id v90 = a4;
  id v10 = (__CFString *)a5;
  id v11 = (__CFString *)a6;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v13);

  __int128 v81 = self;
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewAllBySelector]( self,  "locateDownloadedNewAllBySelector"));
  id v15 = v14;
  __int128 v89 = v10;
  uint64_t v83 = v11;
  if (v11)
  {
    __int128 v93 = 0u;
    __int128 v94 = 0u;
    __int128 v91 = 0u;
    __int128 v92 = 0u;
    id v16 = v14;
    id v17 = [v16 countByEnumeratingWithState:&v91 objects:v115 count:16];
    if (v17)
    {
      id v18 = v17;
      __int128 v78 = v15;
      uint64_t v19 = *(void *)v92;
      p_ivars = &MobileAssetKeyManager__metaData.ivars;
      id v21 = &MobileAssetKeyManager__metaData.ivars;
      id v85 = v16;
      while (1)
      {
        id v22 = 0LL;
        id v87 = v18;
        do
        {
          if (*(void *)v92 != v19) {
            objc_enumerationMutation(v16);
          }
          uint64_t v23 = *(void *)(*((void *)&v91 + 1) + 8LL * (void)v22);
          uint64_t v24 = objc_autoreleasePoolPush();
          id v25 = [v16 safeObjectForKey:v23 ofClass:objc_opt_class(p_ivars[223])];
          unsigned __int8 v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
          unsigned int v27 = v26;
          if (v26)
          {
            id v28 = v21;
            id v29 = v21[155];
            id v30 = (void *)objc_claimAutoreleasedReturnValue([v26 assetType]);
            uint64_t v31 = v19;
            id v32 = p_ivars;
            uint64_t v33 = v28[155];
            __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v27 assetSpecifier]);
            if ((-[__objc2_ivar_list stringIsEqual:to:](v33, "stringIsEqual:to:", v34, v89) & 1) == 0)
            {

              p_ivars = v32;
              uint64_t v19 = v31;
              id v16 = v85;
              id v18 = v87;
LABEL_13:

              id v21 = v28;
              goto LABEL_14;
            }

            id v35 = v28[155];
            __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v27 assetVersion]);
            LODWORD(v35) = -[__objc2_ivar_list stringIsEqual:to:](v35, "stringIsEqual:to:", v36, v83);

            p_ivars = v32;
            uint64_t v19 = v31;
            id v16 = v85;
            id v18 = v87;
            id v21 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            if ((_DWORD)v35)
            {

              objc_autoreleasePoolPop(v24);
              __int16 v58 = @"present";
              id v15 = v78;
              goto LABEL_37;
            }
          }

- (BOOL)jobDescriptorOnFilesystemValidated:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if ([v4 isOnFilesystem])
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager localAssetURLForDescriptor:fromLocation:]( &OBJC_CLASS___MADAutoAssetControlManager,  "localAssetURLForDescriptor:fromLocation:",  v4,  @"jobDescriptorOnFilesystemValidated"));
    if (v8 && ([v7 fileExistsAtPath:v8] & 1) != 0)
    {
      BOOL v9 = 1;
    }

    else
    {
      id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
        int v15 = 138543874;
        id v16 = v13;
        __int16 v17 = 2114;
        id v18 = v14;
        __int16 v19 = 2114;
        id v20 = v8;
        _os_log_error_impl( &dword_0,  v11,  OS_LOG_TYPE_ERROR,  "[%{public}@] {jobDescriptorOnFilesystemValidated} asset file does not exist | jobDescriptor:%{public}@, localU RLForDescriptor:%{public}@",  (uint8_t *)&v15,  0x20u);
      }

      BOOL v9 = 0;
    }
  }

  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

+ (BOOL)jobDescriptorOnFilesystemConfirmed:(id)a3
{
  id v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v14 = 0LL;
  int v15 = &v14;
  uint64_t v16 = 0x2020000000LL;
  char v17 = 0;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 autoControlManagerFSM]);
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __65__MADAutoAssetControlManager_jobDescriptorOnFilesystemConfirmed___block_invoke;
  block[3] = &unk_34DE88;
  id v12 = v3;
  id v13 = &v14;
  id v11 = v4;
  id v7 = v3;
  id v8 = v4;
  dispatch_sync(v6, block);

  LOBYTE(v5) = *((_BYTE *)v15 + 24);
  _Block_object_dispose(&v14, 8);
  return (char)v5;
}

id __65__MADAutoAssetControlManager_jobDescriptorOnFilesystemConfirmed___block_invoke(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) jobDescriptorOnFilesystemValidated:*(void *)(a1 + 40)];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

- (BOOL)jobDescriptorInFlightNowOnFilesystem:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if ([v4 isOnFilesystem])
  {
    BOOL v7 = -[MADAutoAssetControlManager jobDescriptorOnFilesystemValidated:]( self,  "jobDescriptorOnFilesystemValidated:",  v4);
  }

  else if (([v4 isBlankEntry] & 1) != 0 {
         || (id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 assetId]), v8, !v8))
  }
  {
    BOOL v7 = 0;
  }

  else
  {
    BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager localAssetURLForDescriptor:fromLocation:]( &OBJC_CLASS___MADAutoAssetControlManager,  "localAssetURLForDescriptor:fromLocation:",  v4,  @"jobDescriptorInFlightNowOnFilesystem"));
    if (v10 && [v9 fileExistsAtPath:v10])
    {
      BOOL v7 = 1;
      [v4 setIsOnFilesystem:1];
    }

    else
    {
      BOOL v7 = 0;
    }
  }

  return v7;
}

+ (id)fileManagerFailureErrorString
{
  id v2 = __error();
  uint64_t v3 = *v2;
  id v4 = strerror(*v2);
  id v5 = @"errno[0](no errror information from fileManager)";
  if ((_DWORD)v3)
  {
    id v6 = v4;
    BOOL v7 = objc_alloc(&OBJC_CLASS___NSString);
    if (v6) {
      id v8 = -[NSString initWithFormat:]( v7,  "initWithFormat:",  @"errno[%d](%@)",  v3,  @"errno[0](no errror information from fileManager)");
    }
    else {
      id v8 = -[NSString initWithFormat:](v7, "initWithFormat:", @"errno[%d](unknown to strerror)", v3, v10);
    }
    id v5 = v8;
  }

  return v5;
}

- (void)_eliminatePromotedNeverLocked:(id)a3 forAssetSelector:(id)a4
{
  id v72 = a3;
  id v6 = a4;
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v67 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewAllBySelector]( self,  "locateDownloadedNewAllBySelector"));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    id v13 = [v9 count];
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    *(_DWORD *)int buf = 138543874;
    uint64_t v84 = v12;
    __int16 v85 = 2048;
    id v86 = v13;
    __int16 v87 = 2114;
    id v88 = v14;
    _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_eliminatePromotedNeverLocked} reviewing all downloadedDescriptorsBySelector(%ld) | eliminateSelector:%{public}@",  buf,  0x20u);
  }

  __int128 v79 = 0u;
  __int128 v80 = 0u;
  __int128 v77 = 0u;
  __int128 v78 = 0u;
  id v15 = v9;
  id v16 = [v15 countByEnumeratingWithState:&v77 objects:v82 count:16];
  id v68 = v6;
  uint64_t v69 = v15;
  if (v16)
  {
    id v17 = v16;
    id obj = *(id *)v78;
    do
    {
      for (uint64_t i = 0LL; i != v17; uint64_t i = (char *)i + 1)
      {
        if (*(id *)v78 != obj) {
          objc_enumerationMutation(v15);
        }
        uint64_t v19 = *(void *)(*((void *)&v77 + 1) + 8LL * (void)i);
        id v20 = objc_autoreleasePoolPush();
        id v21 = [v15 safeObjectForKey:v19 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
        uint64_t v23 = v22;
        if (v22)
        {
          uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v22 assetType]);
          id v25 = (void *)objc_claimAutoreleasedReturnValue([v23 assetSpecifier]);
          unsigned int v26 = -[MADAutoAssetControlManager _doesEliminateSelector:matchAssetType:withAssetSpecifier:withAssetVersion:fromLocation:]( self,  "_doesEliminateSelector:matchAssetType:withAssetSpecifier:withAssetVersion:fromLocation:",  v6,  v24,  v25,  0LL,  @"_eliminatePromotedNeverLocked");

          if (v26
            && [v23 stagedPriorToAvailable]
            && [v23 neverBeenLocked])
          {
            unsigned int v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
            {
              id v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              id v30 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
              uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v23 summary]);
              *(_DWORD *)int buf = 138543874;
              uint64_t v84 = v29;
              __int16 v85 = 2114;
              id v86 = v30;
              __int16 v87 = 2114;
              id v88 = v31;
              _os_log_impl( &dword_0,  v28,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_eliminatePromotedNeverLocked} will eliminate | eliminateSelector:%{public}@, downloadedDe scriptor:%{public}@",  buf,  0x20u);

              id v15 = v69;
            }

            -[NSMutableArray addObject:](v67, "addObject:", v23);
          }

          else
          {
            id v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            uint64_t v33 = (os_log_s *)objc_claimAutoreleasedReturnValue([v32 oslog]);

            if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
            {
              __int128 v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              id v35 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
              __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v23 summary]);
              *(_DWORD *)int buf = 138543874;
              uint64_t v84 = v34;
              __int16 v85 = 2114;
              id v86 = v35;
              __int16 v87 = 2114;
              id v88 = v36;
              _os_log_impl( &dword_0,  v33,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_eliminatePromotedNeverLocked} will not eliminate | eliminateSelector:%{public}@, download edDescriptor:%{public}@",  buf,  0x20u);

              id v15 = v69;
            }
          }
        }

        else
        {
          id v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
          id v38 = (void *)objc_claimAutoreleasedReturnValue([v37 diag]);
          id v39 = objc_alloc(&OBJC_CLASS___NSString);
          uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          id v41 = v39;
          id v15 = v69;
          unsigned int v42 = -[NSString initWithFormat:]( v41,  "initWithFormat:",  @"{_eliminatePromotedNeverLocked} nil downloadedDescriptor on downloadedDescriptorsBySelector for jobSelectorKey:%@ | %@",  v19,  v40);
          [v38 trackAnomaly:@"AUTO-CONTROL" forReason:v42 withResult:6103 withError:0];

          id v6 = v68;
        }

        objc_autoreleasePoolPop(v20);
      }

      id v17 = [v15 countByEnumeratingWithState:&v77 objects:v82 count:16];
    }

    while (v17);
  }

  __int128 v75 = 0u;
  __int128 v76 = 0u;
  __int128 v73 = 0u;
  __int128 v74 = 0u;
  id obja = v67;
  id v43 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obja,  "countByEnumeratingWithState:objects:count:",  &v73,  v81,  16LL);
  if (v43)
  {
    id v44 = v43;
    uint64_t v45 = *(void *)v74;
    do
    {
      for (j = 0LL; j != v44; j = (char *)j + 1)
      {
        if (*(void *)v74 != v45) {
          objc_enumerationMutation(obja);
        }
        uint64_t v47 = *(void *)(*((void *)&v73 + 1) + 8LL * (void)j);
        id v48 = objc_autoreleasePoolPush();
        id v49 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageInstance:]( self,  "clientRequestMessageInstance:",  v72));
        BOOL v50 = (void *)objc_claimAutoreleasedReturnValue([v49 autoAssetClientName]);
        if (v50) {
          uint64_t v51 = objc_claimAutoreleasedReturnValue([v49 autoAssetClientName]);
        }
        else {
          uint64_t v51 = objc_claimAutoreleasedReturnValue([v49 clientProcessName]);
        }
        __int16 v52 = (void *)v51;

        -[MADAutoAssetControlManager _removeDescriptorFromFilesystem:droppingDescriptor:forHistoryOperation:firstClientName:]( self,  "_removeDescriptorFromFilesystem:droppingDescriptor:forHistoryOperation:firstClientName:",  @"_eliminatePromotedNeverLocked",  v47,  301LL,  v52);
        objc_autoreleasePoolPop(v48);
      }

      id v44 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obja,  "countByEnumeratingWithState:objects:count:",  &v73,  v81,  16LL);
    }

    while (v44);
  }

  id v53 = (void *)objc_claimAutoreleasedReturnValue([v72 clientRequest]);
  __int16 v54 = (void *)objc_claimAutoreleasedReturnValue([v53 clientReplyCompletion]);

  if (v54)
  {
    id v55 = (void *)objc_claimAutoreleasedReturnValue([v72 clientRequest]);
    uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue([v55 clientRequestMessage]);
    id v57 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v56));
    __int16 v58 = (void *)objc_claimAutoreleasedReturnValue([v72 clientRequest]);
    __int128 v59 = (void *)objc_claimAutoreleasedReturnValue([v58 clientRequestMessage]);
    id v60 = (void *)objc_claimAutoreleasedReturnValue([v59 clientID]);
    id v61 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v57,  @"com.apple.MAAutoControl",  v60,  0LL,  0LL));

    id v62 = (void *)objc_claimAutoreleasedReturnValue([v72 clientRequest]);
    -[MADAutoAssetControlManager issueResponseToClientRequest:issuingResponseMessage:withResponseError:]( self,  "issueResponseToClientRequest:issuingResponseMessage:withResponseError:",  v62,  v61,  0LL);
    uint64_t v63 = v68;
  }

  else
  {
    id v61 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v62 = (void *)objc_claimAutoreleasedReturnValue([v61 diag]);
    uint64_t v64 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v63 = v68;
    unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue([v68 summary]);
    uint64_t v66 = -[NSString initWithFormat:]( v64,  "initWithFormat:",  @"{_eliminatePromotedNeverLocked} no client reply completion | eliminateSelector:%@",  v65);
    [v62 trackAnomaly:@"AUTO-CONTROL" forReason:v66 withResult:6111 withError:0];
  }
}

- (void)_eliminateBegin:(id)a3 forAssetSelector:(id)a4 limitingToActivity:(BOOL)a5 fromLocation:(id)a6
{
  BOOL v7 = a5;
  id v10 = a3;
  id v11 = a4;
  id v12 = a6;
  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 extendedStateQueue]);
  dispatch_assert_queue_V2(v14);

  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
  __int128 v96 = v11;
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v11 persistedEntryID]);
  id v17 = [v15 safeObjectForKey:v16 ofClass:objc_opt_class(MADAutoAssetEliminate)];
  id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

  if (v18)
  {
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v10,  6113LL,  @"_eliminateBegin",  @"already performing eliminate operation for the specified asset-selector");

    goto LABEL_58;
  }

  uint64_t v19 = objc_alloc(&OBJC_CLASS___MADAutoAssetEliminate);
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v10 clientRequest]);
  id v21 = -[MADAutoAssetEliminate initWithClientRequest:](v19, "initWithClientRequest:", v20);

  if (!v21)
  {
    if (v7) {
      __int128 v75 = @"handleClientCancelActivityForSelectorRequest";
    }
    else {
      __int128 v75 = @"handleClientEliminateAllForSelectorRequest";
    }
    -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( self,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v10,  6101LL,  v75,  @"unable to allocate eliminate operation tracking entry");
    goto LABEL_58;
  }

  BOOL v92 = v7;
  if (!v7)
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetLocker lockedSelectorsForEliminate:]( &OBJC_CLASS___MADAutoAssetLocker,  "lockedSelectorsForEliminate:",  v11));
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetEliminate summary](v21, "summary"));
      *(_DWORD *)int buf = 138543874;
      uint64_t v112 = v25;
      __int16 v113 = 2114;
      id v114 = v26;
      __int16 v115 = 2048;
      id v116 = [v22 count];
      _os_log_impl( &dword_0,  v24,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_eliminateBegin} | eliminateTracker:%{public}@, lockedEliminateSelectors:%ld",  buf,  0x20u);
    }

    __int128 v107 = 0u;
    __int128 v108 = 0u;
    __int128 v105 = 0u;
    __int128 v106 = 0u;
    id v27 = v22;
    id v28 = [v27 countByEnumeratingWithState:&v105 objects:v110 count:16];
    if (v28)
    {
      id v29 = v28;
      uint64_t v30 = *(void *)v106;
      do
      {
        for (uint64_t i = 0LL; i != v29; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v106 != v30) {
            objc_enumerationMutation(v27);
          }
          id v32 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  *(void *)(*((void *)&v105 + 1) + 8LL * (void)i)));
          if ([v32 secureOperationInProgress])
          {
            [v32 setSecureOperationEliminating:1];
            -[MADAutoAssetEliminate setAwaitingSecureOperations:]( v21,  "setAwaitingSecureOperations:",  -[MADAutoAssetEliminate awaitingSecureOperations](v21, "awaitingSecureOperations") + 1);
          }

          else
          {
            -[MADAutoAssetControlManager secureForceUngraft:forDescriptorBeingRemoved:]( self,  "secureForceUngraft:forDescriptorBeingRemoved:",  v12,  v32);
            if ([v32 secureOperationEliminating]) {
              -[MADAutoAssetControlManager eliminateUngraftDescriptor:forAutoAssetDescriptor:failingClientRequestForEventInfo:]( self,  "eliminateUngraftDescriptor:forAutoAssetDescriptor:failingClientRequestForEventInfo:",  v12,  v32,  0LL);
            }
          }
        }

        id v29 = [v27 countByEnumeratingWithState:&v105 objects:v110 count:16];
      }

      while (v29);
    }

    +[MADAutoAssetLocker forceGlobalUnlock:](&OBJC_CLASS___MADAutoAssetLocker, "forceGlobalUnlock:", v11);
    -[MADAutoAssetControlManager _removeAllContentForEliminateTracker:unlessCurrentlyLocked:]( self,  "_removeAllContentForEliminateTracker:unlessCurrentlyLocked:",  v21,  0LL);
    uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v11 assetVersion]);

    if (!v33)
    {
      -[MADAutoAssetEliminate setAwaitingSchedulerAck:](v21, "setAwaitingSchedulerAck:", 1LL);
      __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v11 persistedEntryID]);
      +[MADAutoAssetScheduler controlEliminateSelector:]( &OBJC_CLASS___MADAutoAssetScheduler,  "controlEliminateSelector:",  v11);
      if (v34)
      {
        id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager alreadyScheduledSelectors](self, "alreadyScheduledSelectors"));
        [v35 removeObjectForKey:v34];
      }
    }
  }

  id v93 = v10;
  id v94 = v12;
  __int128 v36 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v37 = (void *)objc_claimAutoreleasedReturnValue([v11 assetType]);
  id v38 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSpecifier]);
  id v98 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( v36,  "initForAssetType:withAssetSpecifier:",  v37,  v38);

  __int128 v95 = self;
  id v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobsBySelector](self, "currentJobsBySelector"));
  id v40 = [v39 copy];

  __int128 v103 = 0u;
  __int128 v104 = 0u;
  __int128 v101 = 0u;
  __int128 v102 = 0u;
  id v41 = v40;
  id v42 = [v41 countByEnumeratingWithState:&v101 objects:v109 count:16];
  __int128 v100 = v41;
  if (v42)
  {
    id v43 = v42;
    uint64_t v44 = *(void *)v102;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v99 = *(void *)v102;
    do
    {
      for (j = 0LL; j != v43; j = (char *)j + 1)
      {
        if (*(void *)v102 != v44) {
          objc_enumerationMutation(v41);
        }
        uint64_t v47 = *(void *)(*((void *)&v101 + 1) + 8LL * (void)j);
        id v48 = objc_autoreleasePoolPush();
        id v49 = [v41 safeObjectForKey:v47 ofClass:objc_opt_class(p_ivars[269])];
        BOOL v50 = (void *)objc_claimAutoreleasedReturnValue(v49);
        uint64_t v51 = v50;
        if (v50 && ([v50 autoAssetSetJob] & 1) == 0)
        {
          __int16 v52 = v21;
          id v53 = (void *)objc_claimAutoreleasedReturnValue([v51 autoAssetSelector]);
          __int16 v54 = (void *)objc_claimAutoreleasedReturnValue([v53 assetType]);
          id v55 = (void *)objc_claimAutoreleasedReturnValue([v11 assetType]);
          unsigned int v56 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v54, v55);

          if (!v56) {
            goto LABEL_36;
          }
          uint64_t v57 = objc_claimAutoreleasedReturnValue([v11 assetSpecifier]);
          if (v57)
          {
            __int16 v58 = (void *)v57;
            __int128 v59 = (void *)objc_claimAutoreleasedReturnValue([v51 autoAssetSelector]);
            id v60 = (void *)objc_claimAutoreleasedReturnValue([v59 assetSpecifier]);
            id v61 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSpecifier]);
            unsigned int v62 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v60, v61);

            id v11 = v96;
            if (!v62) {
              goto LABEL_36;
            }
          }

          uint64_t v63 = objc_claimAutoreleasedReturnValue([v11 assetVersion]);
          id v64 = v11;
          if (!v63) {
            goto LABEL_35;
          }
          unsigned int v65 = (void *)v63;
          uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([v51 autoAssetSelector]);
          __int128 v67 = (void *)objc_claimAutoreleasedReturnValue([v66 assetVersion]);
          id v68 = (void *)objc_claimAutoreleasedReturnValue([v11 assetVersion]);
          unsigned int v97 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v67, v68);

          id v64 = v11;
          if (v97)
          {
LABEL_35:
            id v21 = v52;
            uint64_t v69 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetEliminate activeJobsByUUID](v52, "activeJobsByUUID"));
            __int128 v70 = (void *)objc_claimAutoreleasedReturnValue([v51 autoAssetUUID]);
            __int128 v71 = (void *)objc_claimAutoreleasedReturnValue([v51 autoAssetUUID]);
            [v69 setSafeObject:v70 forKey:v71];

            -[MADAutoAssetControlManager removeActiveJobForFullSelector:removingFullSelector:alsoRemovingNoVersionSelector:]( v95,  "removeActiveJobForFullSelector:removingFullSelector:alsoRemovingNoVersionSelector:",  v94,  v64,  v98);
            [v51 cancelAutoAssetJob];
            id v98 = 0LL;
            id v11 = v64;
          }

          else
          {
LABEL_36:
            id v21 = v52;
          }

          uint64_t v44 = v99;
          id v41 = v100;
          p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        }

        objc_autoreleasePoolPop(v48);
      }

      id v43 = [v41 countByEnumeratingWithState:&v101 objects:v109 count:16];
    }

    while (v43);
  }

  id v12 = v94;
  id v72 = v95;
  if (v98) {
    -[MADAutoAssetControlManager removeActiveJobForFullSelector:removingFullSelector:alsoRemovingNoVersionSelector:]( v95,  "removeActiveJobForFullSelector:removingFullSelector:alsoRemovingNoVersionSelector:",  v94,  0LL,  v98);
  }
  id v10 = v93;
  if (v92)
  {
    id v73 = -[MADAutoAssetControlManagerParam initForAssetSelector:]( objc_alloc(&OBJC_CLASS___MADAutoAssetControlManagerParam),  "initForAssetSelector:",  v11);
    -[MADAutoAssetEliminate setAwaitingCancelActivityAck:](v21, "setAwaitingCancelActivityAck:", 1LL);
    -[MADAutoAssetEliminate setLimitedToCancelActivity:](v21, "setLimitedToCancelActivity:", 1LL);
    __int128 v74 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v95, "autoControlManagerFSM"));
    [v74 postEvent:@"CancelActivityAck" withInfo:v73];
  }

  else
  {
    -[MADAutoAssetEliminate setAwaitingStagerAck:](v21, "setAwaitingStagerAck:", 1LL);
    +[MADAutoAssetStager controlEliminateSelector:](&OBJC_CLASS___MADAutoAssetStager, "controlEliminateSelector:", v11);
  }

  if (-[MADAutoAssetEliminate eliminatingSet](v21, "eliminatingSet"))
  {
    __int128 v76 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v95, "autoControlManagerFSM"));
    __int128 v77 = (void *)objc_claimAutoreleasedReturnValue([v76 diag]);
    __int128 v78 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v79 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetEliminate summary](v21, "summary"));
    __int128 v80 = -[NSString initWithFormat:]( v78,  "initWithFormat:",  @"{_eliminateBegin} called for set eliminateTracker:%@",  v79);
    [v77 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v80 withResult:6103 withError:0];

    __int128 v81 = v96;
LABEL_54:

    id v72 = v95;
    goto LABEL_55;
  }

  id v82 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetEliminate assetSelector](v21, "assetSelector"));
  __int128 v76 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](v95, "jobSelectorKey:", v82));

  __int128 v81 = v96;
  if (v76)
  {
    uint64_t v83 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentStatusBySelector](v95, "currentStatusBySelector"));
    [v83 removeObjectForKey:v76];

    uint64_t v84 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v95, "logger"));
    __int128 v77 = (void *)objc_claimAutoreleasedReturnValue([v84 oslog]);

    if (os_log_type_enabled((os_log_t)v77, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v85 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v95, "_updateLatestSummary"));
      *(_DWORD *)int buf = 138543618;
      uint64_t v112 = v85;
      __int16 v113 = 2114;
      id v114 = v76;
      _os_log_impl( &dword_0,  (os_log_t)v77,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n[ASSET_STATUS][REMOVED] | eliminateSelectorKey:%{public}@",  buf,  0x16u);
    }

    goto LABEL_54;
  }

- (void)_removeAllContentForEliminateTracker:(id)a3 unlessCurrentlyLocked:(id)a4
{
  id v113 = a3;
  id v6 = a4;
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v107 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v122 = (void *)objc_claimAutoreleasedReturnValue([v113 assetSelector]);
  __int16 v118 = self;
  __int128 v141 = 0u;
  __int128 v142 = 0u;
  __int128 v143 = 0u;
  __int128 v144 = 0u;
  id v9 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewAllBySelector]( self,  "locateDownloadedNewAllBySelector"));
  id v110 = v9;
  __int16 v111 = v6;
  id v114 = [v9 countByEnumeratingWithState:&v141 objects:v160 count:16];
  if (v114)
  {
    uint64_t v112 = 0LL;
    uint64_t v10 = *(void *)v142;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v108 = *(void *)v142;
    while (1)
    {
      uint64_t v12 = 0LL;
      do
      {
        if (*(void *)v142 != v10) {
          objc_enumerationMutation(v9);
        }
        uint64_t v117 = v12;
        uint64_t v13 = *(void *)(*((void *)&v141 + 1) + 8 * v12);
        context = objc_autoreleasePoolPush();
        id v14 = [v9 safeObjectForKey:v13 ofClass:objc_opt_class(p_ivars[223])];
        id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
        id v16 = v15;
        if (v15)
        {
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v15 assetType]);
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSpecifier]);
          uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);
          unsigned int v20 = -[MADAutoAssetControlManager _doesEliminateSelector:matchAssetType:withAssetSpecifier:withAssetVersion:fromLocation:]( v118,  "_doesEliminateSelector:matchAssetType:withAssetSpecifier:withAssetVersion:fromLocation:",  v122,  v17,  v18,  v19,  @"_removeAllContentForEliminateTracker");

          if (v6 && v20)
          {
            __int128 v139 = 0u;
            __int128 v140 = 0u;
            __int128 v137 = 0u;
            __int128 v138 = 0u;
            id obj = v6;
            id v21 = v118;
            id v22 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            id v125 = [obj countByEnumeratingWithState:&v137 objects:v159 count:16];
            if (!v125) {
              goto LABEL_24;
            }
            uint64_t v23 = *(void *)v138;
            uint64_t v120 = *(void *)v138;
            while (1)
            {
              for (uint64_t i = 0LL; i != v125; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v138 != v23) {
                  objc_enumerationMutation(obj);
                }
                id v25 = *(void **)(*((void *)&v137 + 1) + 8LL * (void)i);
                unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v21, "logger"));
                id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

                if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
                {
                  id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v21, "_updateLatestSummary"));
                  id v29 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
                  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v122 summary]);
                  uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v25 summary]);
                  *(_DWORD *)int buf = 138544130;
                  __int128 v147 = v28;
                  __int16 v148 = 2112;
                  id v149 = v29;
                  __int16 v150 = 2114;
                  id v151 = v30;
                  __int16 v152 = 2114;
                  id v153 = v31;
                  _os_log_impl( &dword_0,  v27,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_removeAllContentForEliminateTracker} considering whether elimination blocked by lock | downloadedDescriptor:%{oublic}@, eliminateSelector:%{public}@, lockedSelector:%{public}@",  buf,  0x2Au);

                  id v22 = &MobileAssetKeyManager__metaData.ivars;
                }

                id v32 = v22[155];
                uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v16 assetType]);
                __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v25 assetType]);
                id v35 = v22[155];
                __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSpecifier]);
                id v37 = v22;
                id v38 = (void *)objc_claimAutoreleasedReturnValue([v25 assetSpecifier]);
                if (!-[__objc2_ivar_list stringIsEqual:to:](v35, "stringIsEqual:to:", v36, v38))
                {

                  id v22 = v37;
                  uint64_t v23 = v120;
LABEL_21:

                  continue;
                }

                id v39 = v37[155];
                id v40 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);
                id v41 = (void *)objc_claimAutoreleasedReturnValue([v25 assetVersion]);
                LODWORD(v39) = -[__objc2_ivar_list stringIsEqual:to:](v39, "stringIsEqual:to:", v40, v41);

                id v21 = v118;
                id v22 = v37;
                uint64_t v23 = v120;
                if ((_DWORD)v39)
                {
                  ++v112;

                  id v9 = v110;
                  id v6 = v111;
                  uint64_t v10 = v108;
                  p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
                  goto LABEL_28;
                }
              }

              id v125 = [obj countByEnumeratingWithState:&v137 objects:v159 count:16];
              if (!v125)
              {
LABEL_24:

                id v9 = v110;
                id v6 = v111;
                uint64_t v10 = v108;
                p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
                goto LABEL_27;
              }
            }
          }

          if (v20) {
LABEL_27:
          }
            -[NSMutableArray addObject:](v107, "addObject:", v16);
        }

        else
        {
          id v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v118, "autoControlManagerFSM"));
          id v43 = (void *)objc_claimAutoreleasedReturnValue([v42 diag]);
          uint64_t v44 = objc_alloc(&OBJC_CLASS___NSString);
          uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v118, "_updateLatestSummary"));
          id v46 = -[NSString initWithFormat:]( v44,  "initWithFormat:",  @"{_removeAllContentForEliminateTracker} nil downloadedDescriptor on downloadedDescriptorsBySelector for jobSelectorKey:%@ | %@",  v13,  v45);
          [v43 trackAnomaly:@"AUTO-CONTROL" forReason:v46 withResult:6103 withError:0];
        }

- (void)_removeUnlockedForOlderSelectorsWithoutVersion:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v42 = +[MADAutoAssetLocker copyOfLocksBySelector](&OBJC_CLASS___MADAutoAssetLocker, "copyOfLocksBySelector");
  id v7 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 assetVersion]);
  id v43 = [v7 initWithRestoreVersion:v8];

  id v41 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v44 = self;
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  id v9 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewAllBySelector]( self,  "locateDownloadedNewAllBySelector"));
  id v47 = v4;
  uint64_t v45 = v9;
  id v49 = [v9 countByEnumeratingWithState:&v54 objects:v59 count:16];
  if (!v49) {
    goto LABEL_26;
  }
  uint64_t v10 = *(void *)v55;
  uint64_t v46 = *(void *)v55;
  do
  {
    id v11 = 0LL;
    do
    {
      if (*(void *)v55 != v10) {
        objc_enumerationMutation(v9);
      }
      uint64_t v12 = *(void *)(*((void *)&v54 + 1) + 8LL * (void)v11);
      uint64_t v13 = objc_autoreleasePoolPush();
      id v14 = [v9 safeObjectForKey:v12 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
      id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      id v16 = v15;
      if (v15)
      {
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v15 assetType]);
        id v18 = (id)objc_claimAutoreleasedReturnValue([v47 assetType]);
        id v48 = v17;
        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSpecifier]);
        unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v47 assetSpecifier]);
        if (!+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v19, v20))
        {

LABEL_18:
          uint64_t v10 = v46;
          id v17 = v48;
LABEL_19:

          goto LABEL_20;
        }

        id v21 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);
        id v22 = (void *)objc_claimAutoreleasedReturnValue([v47 assetVersion]);
        unsigned __int8 v23 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v21, v22);

        id v9 = v45;
        uint64_t v10 = v46;
        if ((v23 & 1) == 0
          && !-[MADAutoAssetControlManager _isDownloadedDescriptorPartOfLatestToVend:fromLocation:]( v44,  "_isDownloadedDescriptorPartOfLatestToVend:fromLocation:",  v16,  @"_removeUnlockedForOlderSelectorsWithoutVersion"))
        {
          id v24 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
          id v25 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);
          id v26 = [v24 initWithRestoreVersion:v25];

          if ([v26 isComparable:v43])
          {
            id v17 = v26;
            if ([v43 compare:v26] == (char *)&dword_0 + 1)
            {
              id v48 = v26;
              id v27 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
              id v28 = (void *)objc_claimAutoreleasedReturnValue([v16 assetType]);
              id v29 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSpecifier]);
              uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);
              id v18 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v27,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v28,  v29,  v30);

              uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedEntryID]);
              id v32 = [v42 safeObjectForKey:v31 ofClass:objc_opt_class(MAAutoAssetLock)];
              uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v32);

              if (!v19) {
                -[NSMutableArray addObject:](v41, "addObject:", v16);
              }
              id v9 = v45;
              goto LABEL_18;
            }

            id v9 = v45;
          }

          else
          {
            id v9 = v45;
            id v17 = v26;
          }

- (void)_removeDescriptorFromFilesystem:(id)a3 droppingDescriptor:(id)a4 forHistoryOperation:(int64_t)a5 firstClientName:(id)a6
{
  id v9 = a4;
  id v10 = a6;
  id v11 = a3;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v13);

  id v14 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_removeDescriptorFromFilesystem",  v11);
  id v15 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSpecifier]);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v9 assetVersion]);
  id v19 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v15,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v16,  v17,  v18);

  unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager localAssetURLForDescriptor:fromLocation:]( &OBJC_CLASS___MADAutoAssetControlManager,  "localAssetURLForDescriptor:fromLocation:",  v9,  v14));
  id v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  if (+[MADAutoAssetSecure isSecureAsset:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isSecureAsset:forDescriptor:",  v14,  v9))
  {
    -[MADAutoAssetControlManager secureForceUngraft:forDescriptorBeingRemoved:]( self,  "secureForceUngraft:forDescriptorBeingRemoved:",  v14,  v9);
    +[MADAutoAssetSecure depersonalizeIfSecure:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "depersonalizeIfSecure:forDescriptor:",  v14,  v9);
  }

  if (v20)
  {
    id v43 = v19;
    id v44 = v10;
    id v22 = -[NSURL initFileURLWithPath:](objc_alloc(&OBJC_CLASS___NSURL), "initFileURLWithPath:", v20);
    if ([v21 fileExistsAtPath:v20])
    {
      id ControlManager = getControlManager();
      id v24 = (void *)objc_claimAutoreleasedReturnValue(ControlManager);
      id v25 = (void *)objc_claimAutoreleasedReturnValue([v24 getSAFRegistrationBundleID:v22]);

      id v45 = 0LL;
      [v21 removeItemAtPath:v20 error:&v45];
      id v26 = v45;
    }

    else
    {
      uint64_t v30 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"dropping descriptor when no item exists at path:%@",  v20);
      id v26 = (id)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6110LL,  v14,  0LL,  v30));

      id v25 = 0LL;
    }

    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v32 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 oslog]);

    if (v26)
    {
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
      {
        id v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        uint64_t v33 = objc_claimAutoreleasedReturnValue([v9 summary]);
        uint64_t v34 = objc_claimAutoreleasedReturnValue( +[MADAutoAssetClientRequest responseErrorSummary:]( &OBJC_CLASS___MADAutoAssetClientRequest,  "responseErrorSummary:",  v26));
        *(_DWORD *)int buf = 138544130;
        id v47 = v42;
        __int16 v48 = 2114;
        id v49 = v14;
        __int16 v50 = 2114;
        id v35 = (void *)v33;
        uint64_t v51 = v33;
        __int16 v52 = 2114;
        uint64_t v53 = v34;
        id v36 = (void *)v34;
        _os_log_error_impl( &dword_0,  v32,  OS_LOG_TYPE_ERROR,  "[%{public}@] {%{public}@} unable to remove from filesystem | dropDescriptor:%{public}@, error:%{public}@",  buf,  0x2Au);
      }
    }

    else
    {
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        id v40 = v22;
        uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        id v38 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
        *(_DWORD *)int buf = 138543874;
        id v47 = v37;
        __int16 v48 = 2114;
        id v49 = v14;
        __int16 v50 = 2114;
        uint64_t v51 = (uint64_t)v38;
        _os_log_impl( &dword_0,  v32,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {%{public}@} removed from filesystem | dropDescriptor:%{public}@ ",  buf,  0x20u);

        id v22 = v40;
      }

      -[MADAutoAssetControlManager _statsIncrementRemovedForDescriptor:]( self,  "_statsIncrementRemovedForDescriptor:",  v9);
      -[MADAutoAssetControlManager trackDescriptorForgetAssetSelector:forHistoryOperation:firstClientName:]( self,  "trackDescriptorForgetAssetSelector:forHistoryOperation:firstClientName:",  v43,  a5,  v44);
      id v39 = getControlManager();
      id v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
      -[os_log_s updateSpaceAttributionForBundleID:assetPath:doRegistration:]( v32,  "updateSpaceAttributionForBundleID:assetPath:doRegistration:",  v25,  v22,  0LL);
    }

    id v19 = v43;
    id v10 = v44;
  }

  else
  {
    id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v28 = (void *)objc_claimAutoreleasedReturnValue([v27 diag]);
    id v29 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} unable to determine local URL for descriptor:%@",  v14,  v9);
    [v28 trackAnomaly:@"AUTO-CONTROL" forReason:v29 withResult:6101 withError:0];
  }
}

- (void)_removeAllUnlockedForOtherAtomicInstances:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_removeAllUnlockedForOtherAtomicInstances",  v7);
  __int128 v77 = v6;
  -[MADAutoAssetControlManager _reclaimDownloadedDescriptorsWhenJustDownloaded:fromLocation:]( self,  "_reclaimDownloadedDescriptorsWhenJustDownloaded:fromLocation:",  v6,  v10);
  id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 persistedEntryIDs:v10]);

  if ([v12 count])
  {
    id v73 = v7;
    uint64_t v13 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v91 = 0u;
    __int128 v92 = 0u;
    __int128 v93 = 0u;
    __int128 v94 = 0u;
    id v72 = v12;
    id obj = v12;
    __int128 v78 = v10;
    id v14 = self;
    uint64_t v83 = self;
    id context = [obj countByEnumeratingWithState:&v91 objects:v104 count:16];
    if (!context) {
      goto LABEL_36;
    }
    uint64_t v15 = *(void *)v92;
    __int128 v75 = v13;
    uint64_t v79 = *(void *)v92;
    while (1)
    {
      id v16 = 0LL;
      do
      {
        if (*(void *)v92 != v15) {
          objc_enumerationMutation(obj);
        }
        id v17 = *(const __CFString **)(*((void *)&v91 + 1) + 8LL * (void)v16);
        id v18 = objc_autoreleasePoolPush();
        id v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( v14,  "persistedDownloadedSetDescriptors"));
        unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v19 persistedEntry:v17 fromLocation:v10]);

        if (v17) {
          BOOL v21 = v20 == 0LL;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          id v24 = [v20 secureCodedObjectForKey:@"assetSetDescriptor" ofClass:objc_opt_class(MADAutoSetDescriptor)];
          id v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
          id v26 = v25;
          if (!v25)
          {
            id v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v14, "logger"));
            id v40 = (os_log_s *)objc_claimAutoreleasedReturnValue([v39 oslog]);

            if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
            {
              id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v14, "_updateLatestSummary"));
              *(_DWORD *)int buf = 138543874;
              uint64_t v97 = (uint64_t)v44;
              __int16 v98 = 2114;
              id v99 = v78;
              __int16 v100 = 2114;
              __int128 v101 = v17;
              _os_log_error_impl( &dword_0,  v40,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n[REMOVAL] {%{public}@} unable to load set-descriptor | entryID:%{public}@",  buf,  0x20u);
            }

            -[NSMutableArray addObject:](v13, "addObject:", v17);
            goto LABEL_29;
          }

          uint64_t v84 = v18;
          id v27 = (void *)objc_claimAutoreleasedReturnValue([v25 clientDomainName]);
          id v28 = (void *)objc_claimAutoreleasedReturnValue([v77 clientDomainName]);
          if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v27, v28) & 1) != 0)
          {
            id v29 = (void *)objc_claimAutoreleasedReturnValue([v26 assetSetIdentifier]);
            uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v77 assetSetIdentifier]);
            if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v29, v30))
            {
              uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v26 latestDownloadedAtomicInstance]);
              id v32 = (void *)objc_claimAutoreleasedReturnValue([v77 latestDownloadedAtomicInstance]);
              unsigned __int8 v74 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v31, v32);

              id v14 = v83;
              id v18 = v84;
              uint64_t v13 = v75;
              uint64_t v15 = v79;
              if ((v74 & 1) == 0
                && !-[MADAutoAssetControlManager setDescriptorLocked:](v83, "setDescriptorLocked:", v26))
              {
                uint64_t v33 = objc_alloc(&OBJC_CLASS___NSString);
                uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v77 summary]);
                id v35 = -[NSString initWithFormat:]( v33,  "initWithFormat:",  @"older set-descriptor found - dropped setDescriptor:%@",  v34);

                id v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v83, "logger"));
                uint64_t v37 = (os_log_s *)objc_claimAutoreleasedReturnValue([v36 oslog]);

                if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
                {
                  id v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v83, "_updateLatestSummary"));
                  *(_DWORD *)int buf = 138544130;
                  uint64_t v97 = (uint64_t)v38;
                  __int16 v98 = 2114;
                  id v99 = v78;
                  __int16 v100 = 2114;
                  __int128 v101 = (const __CFString *)v35;
                  __int16 v102 = 2114;
                  __int128 v103 = v17;
                  _os_log_impl( &dword_0,  v37,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n[REMOVAL] {%{public}@} %{public}@ | entryID:%{public}@",  buf,  0x2Au);
                }

                -[NSMutableArray addObject:](v75, "addObject:", v17);
                id v14 = v83;
              }

              goto LABEL_29;
            }

            id v14 = v83;
            uint64_t v13 = v75;
          }

          else
          {
          }

          uint64_t v15 = v79;
LABEL_29:

          id v10 = v78;
          goto LABEL_30;
        }

        id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v14, "logger"));
        unsigned __int8 v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        {
          uint64_t v41 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v14, "_updateLatestSummary"));
          id v42 = (void *)v41;
          *(_DWORD *)int buf = 138543874;
          id v43 = @"N";
          if (v17) {
            id v43 = v17;
          }
          uint64_t v97 = v41;
          __int16 v98 = 2114;
          id v99 = v10;
          __int16 v100 = 2114;
          __int128 v101 = v43;
          _os_log_error_impl( &dword_0,  v23,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n[REMOVAL] {%{public}@} unable to determine previous status | entryID:%{public}@",  buf,  0x20u);
        }

        if (v17) {
          -[NSMutableArray addObject:](v13, "addObject:", v17);
        }
LABEL_30:

        objc_autoreleasePoolPop(v18);
        id v16 = (char *)v16 + 1;
      }

      while (context != v16);
      id v45 = [obj countByEnumeratingWithState:&v91 objects:v104 count:16];
      id context = v45;
      if (!v45)
      {
LABEL_36:

        __int128 v89 = 0u;
        __int128 v90 = 0u;
        __int128 v87 = 0u;
        __int128 v88 = 0u;
        uint64_t v46 = v13;
        id obja = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v46,  "countByEnumeratingWithState:objects:count:",  &v87,  v95,  16LL);
        if (!obja) {
          goto LABEL_49;
        }
        uint64_t v80 = *(void *)v88;
        __int128 v76 = v46;
        while (1)
        {
          for (uint64_t i = 0LL; i != obja; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v88 != v80) {
              objc_enumerationMutation(v46);
            }
            uint64_t v48 = *(void *)(*((void *)&v87 + 1) + 8LL * (void)i);
            id v49 = objc_autoreleasePoolPush();
            __int16 v50 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( v14,  "persistedDownloadedSetDescriptors"));
            uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue([v50 persistedEntry:v48 fromLocation:v10]);

            id v52 = [v51 secureCodedObjectForKey:@"assetSetDescriptor" ofClass:objc_opt_class(MADAutoSetDescriptor)];
            uint64_t v53 = (void *)objc_claimAutoreleasedReturnValue(v52);
            __int128 v54 = v53;
            __int16 v85 = v51;
            if (v53)
            {
              __int128 v55 = (void *)objc_claimAutoreleasedReturnValue([v53 latestDownloadedAtomicInstance]);

              if (v55)
              {
                __int128 v56 = (void *)objc_claimAutoreleasedReturnValue([v54 latestDownloadedAtomicInstance]);
                -[MADAutoAssetControlManager atomicInstanceRemove:setAtomicInstanceUUID:removingForReason:historyOperation:]( v83,  "atomicInstanceRemove:setAtomicInstanceUUID:removingForReason:historyOperation:",  v10,  v56,  @"dropped older set-descriptor",  325LL);

                __int128 v57 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( v83,  "downloadedSetDescriptorsByInstance"));
                __int16 v58 = (void *)objc_claimAutoreleasedReturnValue([v54 latestDownloadedAtomicInstance]);
                [v57 removeObjectForKey:v58];

                uint64_t v59 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( v83,  "persistedDownloadedSetDescriptors"));
                [v59 removePersistedEntry:v48 fromLocation:v10];

                id v60 = (void *)objc_claimAutoreleasedReturnValue([v54 latestDowloadedAtomicInstanceEntries]);
                id v61 = [v60 count];
                unsigned int v62 = (void *)objc_claimAutoreleasedReturnValue([v54 clientDomainName]);
                uint64_t v63 = (void *)objc_claimAutoreleasedReturnValue([v54 assetSetIdentifier]);
                id v64 = (void *)objc_claimAutoreleasedReturnValue([v54 discoveredAtomicInstance]);
                id v14 = v83;
                +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:usageCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:usageCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:",  378LL,  2LL,  1LL,  v61,  v62,  v63,  v64);

                id v10 = v78;
                uint64_t v46 = v76;

                -[MADAutoAssetControlManager _logPersistedSetDescriptorRemoved:forComponentType:removedPersistedEntryID:removedSetDescriptor:message:]( v83,  "_logPersistedSetDescriptorRemoved:forComponentType:removedPersistedEntryID:removedSetDescriptor:message:",  v78,  @"SET_DOWNLOADED_DESCRIPTORS",  v48,  v54,  @"removing stale previously persisted downloaded-set-descriptor");
                goto LABEL_47;
              }

              unsigned int v65 = @"EntryID: %@. latestDownloadAtomicInstance in descriptor to be dropped is nil";
            }

            else
            {
              unsigned int v65 = @"EntryID: %@. descriptor to be dropped is nil";
            }

            uint64_t v66 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", v65, v48);
            __int128 v67 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v83, "autoControlManagerFSM"));
            id v68 = (void *)objc_claimAutoreleasedReturnValue([v67 diag]);
            [v68 trackAnomaly:v10 forReason:v66 withResult:6101 withError:0];

            id v14 = v83;
LABEL_47:

            objc_autoreleasePoolPop(v49);
          }

          id obja = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v46,  "countByEnumeratingWithState:objects:count:",  &v87,  v95,  16LL);
          if (!obja)
          {
LABEL_49:

            uint64_t v12 = v72;
            id v7 = v73;
            goto LABEL_52;
          }
        }
      }
    }
  }

  id v69 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  uint64_t v46 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([v69 oslog]);

  if (os_log_type_enabled((os_log_t)v46, OS_LOG_TYPE_ERROR))
  {
    __int128 v70 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
    id v71 = (__CFString *)objc_claimAutoreleasedReturnValue([v77 summary]);
    *(_DWORD *)int buf = 138543874;
    uint64_t v97 = (uint64_t)v70;
    __int16 v98 = 2114;
    id v99 = v10;
    __int16 v100 = 2114;
    __int128 v101 = v71;
    _os_log_error_impl( &dword_0,  (os_log_t)v46,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [CONSIDER-REMOVAL] {%{public}@} no persisted set-descriptors when should have at least setJobDescriptor:%{public}@",  buf,  0x20u);
  }

- (void)_removeSetDeterminedToBeIncomplete:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  __int128 v54 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_removeSetDeterminedToBeIncomplete",  v4);
  uint64_t v7 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager descriptorsDroppedOnStartup](self, "descriptorsDroppedOnStartup"));
  if (!v7) {
    goto LABEL_45;
  }
  id v8 = (void *)v7;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager descriptorsDroppedOnStartup](self, "descriptorsDroppedOnStartup"));
  id v10 = [v9 count];

  if (!v10) {
    goto LABEL_45;
  }
  id v48 = v4;
  __int16 v50 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 persistedEntryIDs:@"setDescriptorEliminate"]);

  id v49 = v12;
  if (![v12 count]) {
    goto LABEL_35;
  }
  __int128 v65 = 0u;
  __int128 v66 = 0u;
  __int128 v63 = 0u;
  __int128 v64 = 0u;
  id v13 = v12;
  id v14 = [v13 countByEnumeratingWithState:&v63 objects:v73 count:16];
  if (!v14) {
    goto LABEL_34;
  }
  id v15 = v14;
  uint64_t v16 = *(void *)v64;
  uint64_t v51 = *(void *)v64;
  do
  {
    id v17 = 0LL;
    id v52 = v15;
    do
    {
      if (*(void *)v64 != v16) {
        objc_enumerationMutation(v13);
      }
      uint64_t v18 = *(void *)(*((void *)&v63 + 1) + 8LL * (void)v17);
      id v19 = objc_autoreleasePoolPush();
      if (v18)
      {
        unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
        BOOL v21 = (void *)objc_claimAutoreleasedReturnValue([v20 persistedEntry:v18 fromLocation:v54]);

        if (v21)
        {
          id v22 = [v21 secureCodedObjectForKey:@"assetSetDescriptor" ofClass:objc_opt_class(MADAutoSetDescriptor)];
          unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
          if (!v23)
          {
            uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

            if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)int buf = 138543618;
              __int128 v70 = v54;
              __int16 v71 = 2114;
              uint64_t v72 = v18;
              _os_log_error_impl( &dword_0,  v24,  OS_LOG_TYPE_ERROR,  "{%{public}@} unable to load set-descriptor | entryID:%{public}@",  buf,  0x16u);
            }

            goto LABEL_29;
          }

          __int128 v61 = 0u;
          __int128 v62 = 0u;
          __int128 v59 = 0u;
          __int128 v60 = 0u;
          id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager descriptorsDroppedOnStartup]( self,  "descriptorsDroppedOnStartup"));
          id v25 = -[os_log_s countByEnumeratingWithState:objects:count:]( v24,  "countByEnumeratingWithState:objects:count:",  &v59,  v68,  16LL);
          if (v25)
          {
            id v26 = v25;
            id v27 = v13;
            uint64_t v28 = *(void *)v60;
            while (2)
            {
              for (uint64_t i = 0LL; i != v26; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v60 != v28) {
                  objc_enumerationMutation(v24);
                }
                if (-[MADAutoAssetControlManager doesSetDescriptor:referenceAssetDescriptor:]( self,  "doesSetDescriptor:referenceAssetDescriptor:",  v23,  *(void *)(*((void *)&v59 + 1) + 8LL * (void)i)))
                {
                  id v32 = (void *)objc_claimAutoreleasedReturnValue([v23 latestDownloadedAtomicInstance]);
                  -[NSMutableDictionary setSafeObject:forKey:](v50, "setSafeObject:forKey:", v23, v32);

                  goto LABEL_26;
                }
              }

              id v26 = -[os_log_s countByEnumeratingWithState:objects:count:]( v24,  "countByEnumeratingWithState:objects:count:",  &v59,  v68,  16LL);
              if (v26) {
                continue;
              }
              break;
            }

- (void)_removeDownloadedDescriptorsWithNewerDownloaded:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 persistedEntryIDs:@"_removeDownloadedDescriptorsWithNewerDownloaded"]);

  id v35 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v32 = v4;
  id v9 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_removeDownloadedDescriptorsWithNewerDownloaded",  v4);
  uint64_t v33 = v8;
  if ([v8 count])
  {
    __int128 v43 = 0u;
    __int128 v44 = 0u;
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    id obj = v8;
    id v10 = [obj countByEnumeratingWithState:&v41 objects:v50 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v42;
      do
      {
        id v13 = 0LL;
        do
        {
          if (*(void *)v42 != v12) {
            objc_enumerationMutation(obj);
          }
          id v14 = *(void **)(*((void *)&v41 + 1) + 8LL * (void)v13);
          id v15 = objc_autoreleasePoolPush();
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 persistedEntry:v14 fromLocation:v9]);

          if (v17)
          {
            id v18 = [v17 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
            id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
            -[MADAutoAssetControlManager _decideRemoveDescriptorWithNewerDownloaded:maintainingRemoveDescriptors:fromLocation:]( self,  "_decideRemoveDescriptorWithNewerDownloaded:maintainingRemoveDescriptors:fromLocation:",  v19,  v35,  v9);
          }

          else
          {
            unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

            if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            {
              BOOL v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              *(_DWORD *)int buf = 138543618;
              id v47 = v21;
              __int16 v48 = 2114;
              id v49 = v14;
              _os_log_error_impl( &dword_0,  v19,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [CONSIDER-REMOVAL] {_removeDownloadedDescriptorsWithNewerDownloaded} unable to determine previous status | entryID:%{public}@",  buf,  0x16u);
            }
          }

          objc_autoreleasePoolPop(v15);
          id v13 = (char *)v13 + 1;
        }

        while (v11 != v13);
        id v11 = [obj countByEnumeratingWithState:&v41 objects:v50 count:16];
      }

      while (v11);
    }
  }

  __int128 v39 = 0u;
  __int128 v40 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  id v36 = v35;
  id v22 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v36,  "countByEnumeratingWithState:objects:count:",  &v37,  v45,  16LL);
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = *(void *)v38;
    do
    {
      for (uint64_t i = 0LL; i != v23; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v38 != v24) {
          objc_enumerationMutation(v36);
        }
        id v26 = *(void **)(*((void *)&v37 + 1) + 8LL * (void)i);
        id v27 = objc_autoreleasePoolPush();
        uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 oslog]);

        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v26 summary]);
          *(_DWORD *)int buf = 138543618;
          id v47 = v30;
          __int16 v48 = 2114;
          id v49 = v31;
          _os_log_impl( &dword_0,  v29,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n [REMOVAL] {_removeDownloadedDescriptorsWithNewerDownloaded} removing | removeDescriptor:%{public}@",  buf,  0x16u);
        }

        -[MADAutoAssetControlManager _removeDescriptorFromFilesystem:droppingDescriptor:forHistoryOperation:firstClientName:]( self,  "_removeDescriptorFromFilesystem:droppingDescriptor:forHistoryOperation:firstClientName:",  v9,  v26,  402LL,  0LL);
        objc_autoreleasePoolPop(v27);
      }

      id v23 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v36,  "countByEnumeratingWithState:objects:count:",  &v37,  v45,  16LL);
    }

    while (v23);
  }
}

- (void)_removeDownloadedSetDescriptorWithNewerDownloaded:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_removeDownloadedSetDescriptorWithNewerDownloaded",  v7);
  uint64_t v31 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  if (!-[MADAutoAssetControlManager _isDownloadedSetDescriptorLatestToVend:fromLocation:]( self,  "_isDownloadedSetDescriptorLatestToVend:fromLocation:",  v6,  v10))
  {
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDowloadedAtomicInstanceEntries]);
    id v12 = [v11 countByEnumeratingWithState:&v37 objects:v48 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v38;
      while (2)
      {
        for (uint64_t i = 0LL; i != v13; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v38 != v14) {
            objc_enumerationMutation(v11);
          }
          uint64_t v16 = objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v37 + 1) + 8 * (void)i) fullAssetSelector]);
          id v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v16));

          LOBYTE(v16) = -[MADAutoAssetControlManager _decideRemoveDescriptorWithNewerDownloaded:maintainingRemoveDescriptors:fromLocation:]( self,  "_decideRemoveDescriptorWithNewerDownloaded:maintainingRemoveDescriptors:fromLocation:",  v17,  v31,  v10);
          if ((v16 & 1) != 0)
          {

            goto LABEL_21;
          }
        }

        id v13 = [v11 countByEnumeratingWithState:&v37 objects:v48 count:16];
        if (v13) {
          continue;
        }
        break;
      }
    }

    id v29 = v7;
    uint64_t v30 = v6;

    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v33 = 0u;
    __int128 v34 = 0u;
    id obj = v31;
    id v18 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v33,  v47,  16LL);
    if (v18)
    {
      id v19 = v18;
      uint64_t v20 = *(void *)v34;
      do
      {
        for (j = 0LL; j != v19; j = (char *)j + 1)
        {
          if (*(void *)v34 != v20) {
            objc_enumerationMutation(obj);
          }
          id v22 = *(void **)(*((void *)&v33 + 1) + 8LL * (void)j);
          id v23 = objc_autoreleasePoolPush();
          uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
            id v27 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
            *(_DWORD *)int buf = 138543874;
            __int128 v42 = v26;
            __int16 v43 = 2114;
            __int128 v44 = v10;
            __int16 v45 = 2114;
            id v46 = v27;
            _os_log_impl( &dword_0,  v25,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n[REMOVAL] {%{public}@} removing | removeDescriptor:%{public}@",  buf,  0x20u);
          }

          -[MADAutoAssetControlManager _removeDescriptorFromFilesystem:droppingDescriptor:forHistoryOperation:firstClientName:]( self,  "_removeDescriptorFromFilesystem:droppingDescriptor:forHistoryOperation:firstClientName:",  v10,  v22,  402LL,  0LL);
          objc_autoreleasePoolPop(v23);
        }

        id v19 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v33,  v47,  16LL);
      }

      while (v19);
    }

    id v6 = v30;
    uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v30 latestDownloadedAtomicInstance]);
    id v7 = v29;
    -[MADAutoAssetControlManager atomicInstanceRemove:setAtomicInstanceUUID:removingForReason:historyOperation:]( self,  "atomicInstanceRemove:setAtomicInstanceUUID:removingForReason:historyOperation:",  v29,  v28,  @"downloaded set-descriptor no longer referencing content on the filesystem (newer exists)",  322LL);

    -[MADAutoAssetControlManager removeSetDescriptorDownloaded:fromLocation:checkingByInstance:regardlessOfLatest:historyOperationAI:historyOperationSD:]( self,  "removeSetDescriptorDownloaded:fromLocation:checkingByInstance:regardlessOfLatest:historyOperationAI:historyOperationSD:",  v30,  v29,  1LL,  0LL,  322LL,  376LL);
  }

- (BOOL)_decideRemoveDescriptorWithNewerDownloaded:(id)a3 maintainingRemoveDescriptors:(id)a4 fromLocation:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:%@",  v10,  @"_decideRemoveDescriptorWithNewerDownloaded");
  if (!v8)
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager _decideRemoveDescriptorWithNewerDownloaded:maintainingRemoveDescriptors:fromLocation:].cold.1();
    }
    goto LABEL_20;
  }

  if ([v8 isBlankEntry])
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
      *(_DWORD *)int buf = 138543874;
      __int128 v39 = v16;
      __int16 v40 = 2114;
      __int128 v41 = v13;
      __int16 v42 = 2114;
      __int16 v43 = v17;
      _os_log_impl( &dword_0,  v15,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n [REMOVAL] {%{public}@} encountered blank auto-asset-descriptor - removing | downloadedAssetDescriptor:%{public}@",  buf,  0x20u);
    }

    [v9 addObject:v8];
    goto LABEL_21;
  }

  if (![v8 isOnFilesystem])
  {
    __int128 v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
      __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v8 summary]);
      *(_DWORD *)int buf = 138543874;
      __int128 v39 = v35;
      __int16 v40 = 2114;
      __int128 v41 = v13;
      __int16 v42 = 2114;
      __int16 v43 = v36;
      _os_log_error_impl( &dword_0,  v19,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [CONSIDER-REMOVAL] {%{public}@} encountered downloaded descriptor not on the filesystem - ignored | downloadedAs setDescriptor:%{public}@",  buf,  0x20u);
    }

- (void)_reclaimDownloadedDescriptorsWhenJustDownloaded:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  uint64_t v53 = v7;
  id v10 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_reclaimDownloadedDescriptorsWhenJustDownloaded",  v7);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 persistedEntryIDs:@"_reclaimDownloadedDescriptorsWhenJustDownloaded"]);

  __int128 v60 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v54 = v12;
  if ([v12 count])
  {
    id v51 = v6;
    id v13 = -[MADAutoAssetControlManager _newAtomicEntryIDsOtherThanDescriptor:]( self,  "_newAtomicEntryIDsOtherThanDescriptor:",  v6);
    __int128 v68 = 0u;
    __int128 v69 = 0u;
    __int128 v70 = 0u;
    __int128 v71 = 0u;
    id obj = v12;
    id v14 = [obj countByEnumeratingWithState:&v68 objects:v81 count:16];
    if (!v14) {
      goto LABEL_39;
    }
    id v15 = v14;
    uint64_t v16 = *(void *)v69;
    id v61 = v13;
    uint64_t v62 = *(void *)v69;
    while (1)
    {
      id v17 = 0LL;
      do
      {
        if (*(void *)v69 != v16) {
          objc_enumerationMutation(obj);
        }
        id v18 = *(void **)(*((void *)&v68 + 1) + 8LL * (void)v17);
        id v19 = objc_autoreleasePoolPush();
        if (v18 && [v13 containsObject:v18])
        {
          uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
          BOOL v21 = (void *)objc_claimAutoreleasedReturnValue([v20 persistedEntry:v18 fromLocation:v10]);

          if (v21)
          {
            id v22 = [v21 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
            id v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
            id v24 = v23;
            if (v23)
            {
              if ([v23 isBlankEntry])
              {
                id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

                if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
                {
                  BOOL v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                  *(_DWORD *)int buf = 138543874;
                  unsigned __int8 v74 = v27;
                  __int16 v75 = 2114;
                  __int128 v76 = v10;
                  __int16 v77 = 2114;
                  __int128 v78 = v18;
                  _os_log_impl( &dword_0,  v26,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n [REMOVAL] {%{public}@} encountered blank auto-asset-descriptor - removing | entryID:%{public}@",  buf,  0x20u);
                  goto LABEL_14;
                }

                goto LABEL_32;
              }

              if ([v24 isOnFilesystem])
              {
                if ([v24 foundByLookupWithoutAssetVersion]
                  && !-[MADAutoAssetControlManager _isDownloadedDescriptorPartOfLatestToVend:fromLocation:]( self,  "_isDownloadedDescriptorPartOfLatestToVend:fromLocation:",  v24,  v10))
                {
                  __int128 v58 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
                  os_log_t loga = (os_log_t)objc_claimAutoreleasedReturnValue([v24 assetType]);
                  id v32 = (void *)objc_claimAutoreleasedReturnValue([v24 assetSpecifier]);
                  __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v24 assetVersion]);
                  id v34 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v58,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  loga,  v32,  v33);

                  id v29 = v34;
                  id v13 = v61;

                  __int128 v35 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetLocker lockedSelectorsForEliminate:]( &OBJC_CLASS___MADAutoAssetLocker,  "lockedSelectorsForEliminate:",  v34));
                  if (![v35 count])
                  {
                    __int128 v36 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _newestVersionDownloaded:]( self,  "_newestVersionDownloaded:",  v24));
                    if (v36)
                    {
                      id v59 = v36;
                      id v52 = v29;
                      os_log_t logb = (os_log_t)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
                      __int128 v37 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[os_log_s oslog](logb, "oslog"));

                      os_log_t log = v37;
                      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
                      {
                        __int16 v50 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                        id v49 = (void *)objc_claimAutoreleasedReturnValue([v24 summary]);
                        __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([v59 summary]);
                        *(_DWORD *)int buf = 138544130;
                        unsigned __int8 v74 = v50;
                        __int16 v75 = 2114;
                        __int128 v76 = v10;
                        __int16 v77 = 2114;
                        __int128 v78 = v49;
                        __int16 v79 = 2114;
                        uint64_t v80 = v38;
                        _os_log_impl( &dword_0,  log,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n [REMOVAL] {%{public}@} removing older downloaded descriptor | removingDescriptor:%{public}@, k eepingDescriptor:%{public}@",  buf,  0x2Au);

                        id v13 = v61;
                      }

                      -[NSMutableArray addObject:](v60, "addObject:", v24);
                      id v29 = v52;
                      __int128 v36 = v59;
                    }
                  }

LABEL_30:
                }

                goto LABEL_34;
              }

              __int128 v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v39 oslog]);

              if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
              {
                BOOL v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
                *(_DWORD *)int buf = 138543874;
                unsigned __int8 v74 = v27;
                __int16 v75 = 2114;
                __int128 v76 = v10;
                __int16 v77 = 2114;
                __int128 v78 = v18;
                _os_log_error_impl( &dword_0,  v26,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n [REMOVAL] {%{public}@} encountered downloaded descriptor not on the filesystem - removing | entryID:%{public}@",  buf,  0x20u);
LABEL_14:
              }

- (id)_newAtomicEntryIDsOtherThanDescriptor:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v31 = [obj countByEnumeratingWithState:&v36 objects:v41 count:16];
  if (v31)
  {
    uint64_t v30 = *(void *)v37;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v28 = self;
    do
    {
      for (uint64_t i = 0LL; i != v31; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v37 != v30) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void *)(*((void *)&v36 + 1) + 8LL * (void)i);
        id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance",  v28));
        id v12 = [v11 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoSetDescriptor)];
        id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

        id v14 = p_ivars[155];
        id v15 = (void *)objc_claimAutoreleasedReturnValue([v13 clientDomainName]);
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v14, "stringIsEqual:to:", v15, v16) & 1) != 0)
        {
          id v17 = p_ivars[155];
          id v18 = v4;
          id v19 = (void *)objc_claimAutoreleasedReturnValue([v13 latestDownloadedAtomicInstance]);
          uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v18 latestDownloadedAtomicInstance]);
          LOBYTE(v17) = -[__objc2_ivar_list stringIsEqual:to:](v17, "stringIsEqual:to:", v19, v20);

          id v4 = v18;
          p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);

          __int128 v34 = 0u;
          __int128 v35 = 0u;
          __int128 v32 = 0u;
          __int128 v33 = 0u;
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v13 latestDowloadedAtomicInstanceEntries]);
          id v21 = [v15 countByEnumeratingWithState:&v32 objects:v40 count:16];
          if (v21)
          {
            id v22 = v21;
            uint64_t v23 = *(void *)v33;
            do
            {
              for (j = 0LL; j != v22; j = (char *)j + 1)
              {
                if (*(void *)v33 != v23) {
                  objc_enumerationMutation(v15);
                }
                id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 persistedEntryID]);
              }

              id v22 = [v15 countByEnumeratingWithState:&v32 objects:v40 count:16];
            }

            while (v22);
            self = v28;
            p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            id v4 = v18;
          }
        }

        else
        {
        }

LABEL_21:
      }

      id v31 = [obj countByEnumeratingWithState:&v36 objects:v41 count:16];
    }

    while (v31);
  }

  if (!-[NSMutableArray count](v7, "count"))
  {

    id v7 = 0LL;
  }

  return v7;
}

- (id)_newestVersionDownloaded:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 persistedEntryIDs:@"_newestVersionDownloaded"]);

  if ([v8 count])
  {
    id v9 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v4 assetType]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSpecifier]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v4 assetVersion]);
    id v57 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v9,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v10,  v11,  v12);

    id v13 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
    id v53 = v4;
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v4 assetVersion]);
    id v55 = [v13 initWithRestoreVersion:v14];

    __int128 v66 = 0u;
    __int128 v67 = 0u;
    __int128 v64 = 0u;
    __int128 v65 = 0u;
    id v52 = v8;
    id v15 = v8;
    id v63 = [v15 countByEnumeratingWithState:&v64 objects:v72 count:16];
    if (!v63)
    {
      __int128 v56 = 0LL;
      __int128 v54 = 0LL;
      id v17 = v57;
      goto LABEL_41;
    }

    __int128 v56 = 0LL;
    __int128 v54 = 0LL;
    uint64_t v62 = *(void *)v65;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    id v17 = v57;
    __int128 v60 = self;
    id v61 = v15;
    while (1)
    {
      id v18 = 0LL;
      do
      {
        if (*(void *)v65 != v62) {
          objc_enumerationMutation(v15);
        }
        uint64_t v19 = *(void *)(*((void *)&v64 + 1) + 8LL * (void)v18);
        uint64_t v20 = objc_autoreleasePoolPush();
        id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
        id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 persistedEntry:v19 fromLocation:@"_newestVersionDownloaded"]);

        if (!v22)
        {
          id v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

          if (!os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
            goto LABEL_29;
          }
          BOOL v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          *(_DWORD *)int buf = 138543618;
          __int128 v69 = v27;
          __int16 v70 = 2114;
          uint64_t v71 = v19;
          _os_log_error_impl( &dword_0,  v25,  OS_LOG_TYPE_ERROR,  "[%{public}@] {_newestVersionDownloaded} unable to determine previous status | entryID:%{public}@",  buf,  0x16u);
          goto LABEL_28;
        }

        id v23 = [v22 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
        id v25 = v24;
        if (!v24)
        {
          uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          BOOL v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 oslog]);

          if (!os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
            goto LABEL_27;
          }
          uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          *(_DWORD *)int buf = 138543618;
          __int128 v69 = v28;
          __int16 v70 = 2114;
          uint64_t v71 = v19;
          _os_log_error_impl( &dword_0,  v27,  OS_LOG_TYPE_ERROR,  "[%{public}@] {_newestVersionDownloaded} unable to load auto-asset-descriptor | entryID:%{public}@",  buf,  0x16u);
          goto LABEL_12;
        }

        if (-[os_log_s isBlankEntry](v24, "isBlankEntry"))
        {
          id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          BOOL v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

          if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
            *(_DWORD *)int buf = 138543618;
            __int128 v69 = v28;
            __int16 v70 = 2114;
            uint64_t v71 = v19;
            _os_log_impl( &dword_0,  v27,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] {_newestVersionDownloaded} encountered blank auto-asset-descriptor | entryID:%{public}@",  buf,  0x16u);
LABEL_12:
          }
        }

        else
        {
          id v31 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
          __int128 v32 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetType](v25, "assetType"));
          __int128 v33 = p_ivars;
          __int128 v34 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetSpecifier](v25, "assetSpecifier"));
          __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetVersion](v25, "assetVersion"));
          BOOL v27 = (os_log_s *)-[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v31,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v32,  v34,  v35);

          __int128 v36 = v33[155];
          id v37 = (id)objc_claimAutoreleasedReturnValue(-[os_log_s assetType](v27, "assetType"));
          id v38 = (id)objc_claimAutoreleasedReturnValue([v17 assetType]);
          if (!-[__objc2_ivar_list stringIsEqual:to:](v36, "stringIsEqual:to:", v37, v38))
          {
            self = v60;
            id v15 = v61;
            goto LABEL_25;
          }

          __int128 v58 = v38;
          id v59 = v37;
          __int128 v39 = v33[155];
          __int16 v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[os_log_s assetSpecifier](v27, "assetSpecifier"));
          id v41 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSpecifier]);
          if (!-[__objc2_ivar_list stringIsEqual:to:](v39, "stringIsEqual:to:", v40, v41))
          {

            self = v60;
            id v15 = v61;
            uint64_t v45 = v40;
            id v37 = v59;
            id v38 = v58;
            goto LABEL_24;
          }

          __int16 v42 = v33[155];
          id v43 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetVersion](v27, "assetVersion"));
          id v44 = (void *)objc_claimAutoreleasedReturnValue([v17 assetVersion]);
          LOBYTE(v42) = -[__objc2_ivar_list stringIsEqual:to:](v42, "stringIsEqual:to:", v43, v44);

          if ((v42 & 1) == 0)
          {
            id v46 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
            uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetVersion](v25, "assetVersion"));
            id v37 = [v46 initWithRestoreVersion:v47];

            self = v60;
            id v15 = v61;
            if ([v37 isComparable:v55])
            {
              id v38 = v56;
              id v17 = v57;
              __int128 v56 = v38;
              if (!v38) {
                id v38 = v55;
              }
              if ([v37 compare:v38] == (char *)&dword_0 + 1)
              {
                id v37 = v37;

                __int16 v48 = v25;
                uint64_t v45 = v54;
                __int128 v56 = v37;
                __int128 v54 = v48;
LABEL_24:
              }

- (void)_removeAllQueuedForEliminateSelector:(id)a3
{
  id v69 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  id v63 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v65 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v83 = 0u;
  __int128 v84 = 0u;
  __int128 v85 = 0u;
  __int128 v86 = 0u;
  __int16 v70 = self;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsAwaitingSync](self, "clientRequestsAwaitingSync"));
  id v6 = [obj countByEnumeratingWithState:&v83 objects:v90 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v84;
    uint64_t v61 = *(void *)v84;
    do
    {
      id v9 = 0LL;
      do
      {
        if (*(void *)v84 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void *)(*((void *)&v83 + 1) + 8LL * (void)v9);
        id v11 = objc_autoreleasePoolPush();
        if (v10)
        {
          id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageInstance:]( v70,  "clientRequestMessageInstance:",  v10));
          id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 clientAssetSelector]);
          if (!-[MADAutoAssetControlManager _isClientRequestSubjectToElimination:]( v70,  "_isClientRequestSubjectToElimination:",  v10)) {
            goto LABEL_9;
          }
          id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 assetType]);
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSpecifier]);
          id v16 = v7;
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v13 assetVersion]);
          unsigned __int8 v18 = -[MADAutoAssetControlManager _doesEliminateSelector:matchAssetType:withAssetSpecifier:withAssetVersion:fromLocation:]( v70,  "_doesEliminateSelector:matchAssetType:withAssetSpecifier:withAssetVersion:fromLocation:",  v69,  v14,  v15,  v17,  @"_removeAllQueuedForEliminateSelector");

          id v7 = v16;
          uint64_t v8 = v61;

          uint64_t v19 = v63;
          if ((v18 & 1) == 0) {
LABEL_9:
          }
            uint64_t v19 = v65;
          -[NSMutableArray addObject:](v19, "addObject:", v10);
        }

        else
        {
          id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v70, "autoControlManagerFSM"));
          id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 diag]);
          uint64_t v20 = objc_alloc(&OBJC_CLASS___NSString);
          id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v70, "_updateLatestSummary"));
          id v22 = -[NSString initWithFormat:]( v20,  "initWithFormat:",  @"{_removeAllQueuedForEliminateSelector:} nil jobParam encountered on clientRequestsAwaitingSync | %@",  v21);
          [v13 trackAnomaly:@"AUTO-CONTROL" forReason:v22 withResult:6102 withError:0];
        }

        objc_autoreleasePoolPop(v11);
        id v9 = (char *)v9 + 1;
      }

      while (v7 != v9);
      id v7 = [obj countByEnumeratingWithState:&v83 objects:v90 count:16];
    }

    while (v7);
  }

  __int128 v81 = 0u;
  __int128 v82 = 0u;
  __int128 v79 = 0u;
  __int128 v80 = 0u;
  id v23 = v63;
  id v24 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v23,  "countByEnumeratingWithState:objects:count:",  &v79,  v89,  16LL);
  if (v24)
  {
    id v25 = v24;
    uint64_t v26 = *(void *)v80;
    do
    {
      BOOL v27 = 0LL;
      do
      {
        if (*(void *)v80 != v26) {
          objc_enumerationMutation(v23);
        }
        uint64_t v28 = *(void *)(*((void *)&v79 + 1) + 8LL * (void)v27);
        id v29 = objc_autoreleasePoolPush();
        uint64_t v30 = objc_alloc(&OBJC_CLASS___NSString);
        id v31 = (void *)objc_claimAutoreleasedReturnValue([v69 summary]);
        __int128 v32 = -[NSString initWithFormat:]( v30,  "initWithFormat:",  @"queued job no longer relevant due to elimination of associated asset-selector | eliminateSelector:%@",  v31);
        -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( v70,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v28,  6114LL,  @"_removeAllQueuedForEliminateSelector",  v32);

        objc_autoreleasePoolPop(v29);
        BOOL v27 = (char *)v27 + 1;
      }

      while (v25 != v27);
      id v25 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v23,  "countByEnumeratingWithState:objects:count:",  &v79,  v89,  16LL);
    }

    while (v25);
  }

  -[MADAutoAssetControlManager setClientRequestsAwaitingSync:](v70, "setClientRequestsAwaitingSync:", v65);
  uint64_t v62 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);

  __int128 v64 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v77 = 0u;
  __int128 v78 = 0u;
  __int128 v75 = 0u;
  __int128 v76 = 0u;
  id v66 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestsAwaitingFirstUnlock](v70, "clientRequestsAwaitingFirstUnlock"));
  id v33 = [v66 countByEnumeratingWithState:&v75 objects:v88 count:16];
  if (v33)
  {
    id v34 = v33;
    uint64_t v35 = *(void *)v76;
    do
    {
      __int128 v36 = 0LL;
      do
      {
        if (*(void *)v76 != v35) {
          objc_enumerationMutation(v66);
        }
        uint64_t v37 = *(void *)(*((void *)&v75 + 1) + 8LL * (void)v36);
        id v38 = objc_autoreleasePoolPush();
        if (v37)
        {
          __int128 v39 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager clientRequestMessageInstance:]( v70,  "clientRequestMessageInstance:",  v37));
          __int16 v40 = (void *)objc_claimAutoreleasedReturnValue([v39 clientAssetSelector]);
          if (!-[MADAutoAssetControlManager _isClientRequestSubjectToElimination:]( v70,  "_isClientRequestSubjectToElimination:",  v37)) {
            goto LABEL_29;
          }
          id v41 = (void *)objc_claimAutoreleasedReturnValue([v40 assetType]);
          id obja = v38;
          id v42 = v34;
          id v43 = (void *)objc_claimAutoreleasedReturnValue([v40 assetSpecifier]);
          uint64_t v44 = v35;
          uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue([v40 assetVersion]);
          unsigned __int8 v46 = -[MADAutoAssetControlManager _doesEliminateSelector:matchAssetType:withAssetSpecifier:withAssetVersion:fromLocation:]( v70,  "_doesEliminateSelector:matchAssetType:withAssetSpecifier:withAssetVersion:fromLocation:",  v69,  v41,  v43,  v45,  @"_removeAllQueuedForEliminateSelector");

          uint64_t v35 = v44;
          id v34 = v42;
          id v38 = obja;

          uint64_t v47 = v62;
          if ((v46 & 1) == 0) {
LABEL_29:
          }
            uint64_t v47 = v64;
          -[NSMutableArray addObject:](v47, "addObject:", v37);
        }

        else
        {
          __int128 v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v70, "autoControlManagerFSM"));
          __int16 v40 = (void *)objc_claimAutoreleasedReturnValue([v39 diag]);
          __int16 v48 = objc_alloc(&OBJC_CLASS___NSString);
          id v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](v70, "_updateLatestSummary"));
          __int16 v50 = -[NSString initWithFormat:]( v48,  "initWithFormat:",  @"{_removeAllQueuedForEliminateSelector:} nil jobParam encountered on clientRequestsAwaitingFirstUnlock | %@",  v49);
          [v40 trackAnomaly:@"AUTO-CONTROL" forReason:v50 withResult:6102 withError:0];
        }

        objc_autoreleasePoolPop(v38);
        __int128 v36 = (char *)v36 + 1;
      }

      while (v34 != v36);
      id v34 = [v66 countByEnumeratingWithState:&v75 objects:v88 count:16];
    }

    while (v34);
  }

  __int128 v73 = 0u;
  __int128 v74 = 0u;
  __int128 v71 = 0u;
  __int128 v72 = 0u;
  id v51 = v62;
  id v52 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v51,  "countByEnumeratingWithState:objects:count:",  &v71,  v87,  16LL);
  if (v52)
  {
    id v53 = v52;
    uint64_t v54 = *(void *)v72;
    do
    {
      id v55 = 0LL;
      do
      {
        if (*(void *)v72 != v54) {
          objc_enumerationMutation(v51);
        }
        uint64_t v56 = *(void *)(*((void *)&v71 + 1) + 8LL * (void)v55);
        id v57 = objc_autoreleasePoolPush();
        __int128 v58 = objc_alloc(&OBJC_CLASS___NSString);
        id v59 = (void *)objc_claimAutoreleasedReturnValue([v69 summary]);
        __int128 v60 = -[NSString initWithFormat:]( v58,  "initWithFormat:",  @"queued job no longer relevant due to elimination of associated asset-selector | eliminateSelector:%@",  v59);
        -[MADAutoAssetControlManager issueResponseForEventInfo:withErrorCode:fromAction:withDescription:]( v70,  "issueResponseForEventInfo:withErrorCode:fromAction:withDescription:",  v56,  6114LL,  @"_removeAllQueuedForEliminateSelector",  v60);

        objc_autoreleasePoolPop(v57);
        id v55 = (char *)v55 + 1;
      }

      while (v53 != v55);
      id v53 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v51,  "countByEnumeratingWithState:objects:count:",  &v71,  v87,  16LL);
    }

    while (v53);
  }

  -[MADAutoAssetControlManager setClientRequestsAwaitingFirstUnlock:](v70, "setClientRequestsAwaitingFirstUnlock:", v64);
}

- (BOOL)_selectorBeingEliminated:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v25 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
  id v24 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v24)
  {
    uint64_t v23 = *(void *)v27;
    while (2)
    {
      for (uint64_t i = 0LL; i != v24; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v27 != v23) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void *)(*((void *)&v26 + 1) + 8LL * (void)i);
        id v11 = objc_autoreleasePoolPush();
        id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
        id v13 = [v12 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoAssetEliminate)];
        id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

        id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSelector]);
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSpecifier]);
        unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue([v6 assetVersion]);
        unsigned __int8 v19 = -[MADAutoAssetControlManager _doesEliminateSelector:matchAssetType:withAssetSpecifier:withAssetVersion:fromLocation:]( self,  "_doesEliminateSelector:matchAssetType:withAssetSpecifier:withAssetVersion:fromLocation:",  v15,  v16,  v17,  v18,  v25);

        objc_autoreleasePoolPop(v11);
        if ((v19 & 1) != 0)
        {
          BOOL v20 = 1;
          goto LABEL_11;
        }
      }

      id v24 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
      if (v24) {
        continue;
      }
      break;
    }
  }

  BOOL v20 = 0;
LABEL_11:

  return v20;
}

- (BOOL)_setInstanceBeingEliminated:(id)a3 fromLocation:(id)a4
{
  id v32 = a3;
  id v6 = a4;
  id v7 = self;
  id v30 = v6;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
  id v35 = [obj countByEnumeratingWithState:&v36 objects:v40 count:16];
  char v10 = 0;
  if (v35)
  {
    uint64_t v11 = *(void *)v37;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    id v13 = &MobileAssetKeyManager__metaData.ivars;
    id v14 = v32;
    id v31 = v7;
    uint64_t v33 = *(void *)v37;
    do
    {
      for (uint64_t i = 0LL; i != v35; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v37 != v11) {
          objc_enumerationMutation(obj);
        }
        uint64_t v16 = *(void *)(*((void *)&v36 + 1) + 8LL * (void)i);
        id v17 = objc_autoreleasePoolPush();
        unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](v7, "activelyEliminatingSelectors"));
        id v19 = [v18 safeObjectForKey:v16 ofClass:objc_opt_class(p_ivars[325])];
        BOOL v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

        if ([v20 eliminatingSet])
        {
          id v21 = v14;
          id v22 = v13[155];
          uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v20 clientDomainName]);
          id v24 = (void *)objc_claimAutoreleasedReturnValue([v21 clientDomainName]);
          if (-[__objc2_ivar_list stringIsEqual:to:](v22, "stringIsEqual:to:", v23, v24))
          {
            id v25 = v13[155];
            __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSetIdentifier]);
            __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v21 assetSetIdentifier]);
            unsigned __int8 v28 = -[__objc2_ivar_list stringIsEqual:to:](v25, "stringIsEqual:to:", v26, v27);

            id v14 = v32;
            id v7 = v31;
          }

          else
          {
            unsigned __int8 v28 = 0;
            id v14 = v21;
          }

          uint64_t v11 = v33;
          p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        }

        else
        {
          unsigned __int8 v28 = 0;
        }

        v10 |= v28;

        objc_autoreleasePoolPop(v17);
        id v13 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
      }

      id v35 = [obj countByEnumeratingWithState:&v36 objects:v40 count:16];
    }

    while (v35);
  }

  else
  {
    id v14 = v32;
  }

  return v10 & 1;
}

- (void)_eliminateSecureOperationFinished:(id)a3 forEliminateDescriptor:(id)a4
{
  id v9 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  if ((int)[v9 awaitingSecureOperations] >= 1
    && [v6 secureOperationEliminating])
  {
    objc_msgSend(v9, "setAwaitingSecureOperations:", objc_msgSend(v9, "awaitingSecureOperations") - 1);
    [v6 setSecureOperationEliminating:0];
  }

  -[MADAutoAssetControlManager _eliminateCompleteIfAllDone:](self, "_eliminateCompleteIfAllDone:", v9);
}

- (void)_eliminateSecureOperationFinished:(id)a3 forEliminateSetDescriptor:(id)a4
{
  id v9 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  if ((int)[v9 awaitingSecureOperations] >= 1
    && [v6 secureOperationEliminating])
  {
    objc_msgSend(v9, "setAwaitingSecureOperations:", objc_msgSend(v9, "awaitingSecureOperations") - 1);
    [v6 setSecureOperationEliminating:0];
  }

  -[MADAutoAssetControlManager _eliminateCompleteIfAllDone:](self, "_eliminateCompleteIfAllDone:", v9);
}

- (void)_eliminateCompleteIfAllDone:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (v4)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](self, "activelyEliminatingSelectors"));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSelector]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedEntryID]);
    id v10 = [v7 safeObjectForKey:v9 ofClass:objc_opt_class(MADAutoAssetEliminate)];
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 oslog]);

    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
      *(_DWORD *)int buf = 138543362;
      uint64_t v145 = v14;
      _os_log_impl( &dword_0,  v13,  OS_LOG_TYPE_DEFAULT,  "\n [ELIMINATE] {_eliminateCompleteIfAllDone} checking whether done with elimination | eliminateTracker:%{public}@",  buf,  0xCu);
    }

    if (!v11)
    {
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 diag]);
      unsigned __int8 v18 = objc_alloc(&OBJC_CLASS___NSString);
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
      BOOL v20 = -[NSString initWithFormat:]( v18,  "initWithFormat:",  @"{_eliminateCompleteIfAllDone} untracked eliminateTracker:%@",  v19);
      [v17 trackAnomaly:@"AUTO-CONTROL" forReason:v20 withResult:6103 withError:0];

LABEL_15:
      goto LABEL_16;
    }

    if (([v4 awaitingSchedulerAck] & 1) != 0
      || ([v4 awaitingCancelActivityAck] & 1) != 0
      || ([v4 awaitingStagerAck] & 1) != 0
      || ([v4 awaitingUnlocked] & 1) != 0)
    {
      goto LABEL_13;
    }

    id v15 = (void *)objc_claimAutoreleasedReturnValue([v4 activeJobsByUUID]);
    if ([v15 count])
    {

      goto LABEL_13;
    }

    int v21 = [v4 awaitingSecureOperations];

    if (v21 > 0)
    {
LABEL_13:
      id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v22 oslog]);

      if (os_log_type_enabled((os_log_t)v16, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
        *(_DWORD *)int buf = 138543362;
        uint64_t v145 = v23;
        _os_log_impl( &dword_0,  (os_log_t)v16,  OS_LOG_TYPE_DEFAULT,  "\n[ELIMINATE] {_eliminateCompleteIfAllDone} not yet complete | eliminateTracker:%{public}@",  buf,  0xCu);
      }

      goto LABEL_15;
    }

    id v24 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSelector]);
    uint64_t v25 = objc_claimAutoreleasedReturnValue([v24 persistedEntryID]);

    __int128 v130 = v4;
    __int128 v131 = self;
    id v125 = (void *)v25;
    if ([v4 eliminatingSet])
    {
      __int128 v124 = v11;
      __int128 v126 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      id v127 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
      __int128 v140 = 0u;
      __int128 v141 = 0u;
      __int128 v142 = 0u;
      __int128 v143 = 0u;
      id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](self, "currentSetStatusByInstance"));
      id v26 = [obj countByEnumeratingWithState:&v140 objects:v150 count:16];
      if (!v26) {
        goto LABEL_30;
      }
      id v27 = v26;
      uint64_t v129 = *(void *)v141;
      p_ivars = &MobileAssetKeyManager__metaData.ivars;
      while (1)
      {
        for (uint64_t i = 0LL; i != v27; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v141 != v129) {
            objc_enumerationMutation(obj);
          }
          uint64_t v30 = *(void *)(*((void *)&v140 + 1) + 8LL * (void)i);
          id v31 = objc_autoreleasePoolPush();
          id v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentSetStatusByInstance](v131, "currentSetStatusByInstance"));
          id v33 = [v32 safeObjectForKey:v30 ofClass:objc_opt_class(MANAutoAssetSetStatus)];
          id v34 = (void *)objc_claimAutoreleasedReturnValue(v33);

          id v35 = p_ivars[155];
          __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v34 clientDomainName]);
          __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
          if ((-[__objc2_ivar_list stringIsEqual:to:](v35, "stringIsEqual:to:", v36, v37) & 1) != 0)
          {
            __int128 v38 = p_ivars[155];
            __int128 v39 = (void *)objc_claimAutoreleasedReturnValue([v34 assetSetIdentifier]);
            __int16 v40 = (void *)objc_claimAutoreleasedReturnValue([v130 assetSetIdentifier]);
            LODWORD(v38) = -[__objc2_ivar_list stringIsEqual:to:](v38, "stringIsEqual:to:", v39, v40);

            id v4 = v130;
            if (!(_DWORD)v38) {
              goto LABEL_28;
            }
            id v41 = (void *)objc_claimAutoreleasedReturnValue([v34 clientDomainName]);
            id v42 = (void *)objc_claimAutoreleasedReturnValue([v34 assetSetIdentifier]);
            id v43 = (void *)objc_claimAutoreleasedReturnValue([v34 latestDownloadedAtomicInstance]);
            __int128 v36 = (void *)objc_claimAutoreleasedReturnValue( +[MANAutoAssetSetStatus shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:]( &OBJC_CLASS___MANAutoAssetSetStatus,  "shortTermLockFilename:forAssetSetIdentifier:forSetAtomicInstance:",  v41,  v42,  v43));

            id v4 = v130;
            -[NSMutableArray addObject:](v126, "addObject:", v30);
            id v44 =  -[MADAutoAssetControlManager _shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:]( v131,  "_shortTermSharedLockRemove:removingSharedLockFilename:usingFileManager:removingDescription:",  @"_eliminateCompleteIfAllDone",  v36,  v127,  @"atomic-instance shared lock file removed (eliminated set-identifier)");
          }

          else
          {
          }

LABEL_28:
          objc_autoreleasePoolPop(v31);
          p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        }

        id v27 = [obj countByEnumeratingWithState:&v140 objects:v150 count:16];
        if (!v27)
        {
LABEL_30:

          __int128 v138 = 0u;
          __int128 v139 = 0u;
          __int128 v136 = 0u;
          __int128 v137 = 0u;
          uint64_t v45 = v126;
          id v46 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v45,  "countByEnumeratingWithState:objects:count:",  &v136,  v149,  16LL);
          uint64_t v11 = v124;
          if (v46)
          {
            id v47 = v46;
            uint64_t v48 = *(void *)v137;
            do
            {
              for (j = 0LL; j != v47; j = (char *)j + 1)
              {
                if (*(void *)v137 != v48) {
                  objc_enumerationMutation(v45);
                }
                uint64_t v50 = *(void *)(*((void *)&v136 + 1) + 8LL * (void)j);
                if (v50)
                {
                  id v51 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentSetStatusByInstance]( v131,  "currentSetStatusByInstance"));
                  [v51 removeObjectForKey:v50];
                }
              }

              id v47 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v45,  "countByEnumeratingWithState:objects:count:",  &v136,  v149,  16LL);
            }

            while (v47);
          }

          __int128 v134 = 0u;
          __int128 v135 = 0u;
          __int128 v132 = 0u;
          __int128 v133 = 0u;
          id v52 = (void *)objc_claimAutoreleasedReturnValue([v4 downloadedSetDescriptors]);
          id v53 = [v52 countByEnumeratingWithState:&v132 objects:v148 count:16];
          if (v53)
          {
            id v54 = v53;
            uint64_t v55 = *(void *)v133;
            do
            {
              for (k = 0LL; k != v54; k = (char *)k + 1)
              {
                if (*(void *)v133 != v55) {
                  objc_enumerationMutation(v52);
                }
                uint64_t v57 = *(void *)(*((void *)&v132 + 1) + 8LL * (void)k);
                id v58 =  +[MADAutoAssetLocker eliminateAllPreviousSetLocksByClient:forSetDescriptor:]( &OBJC_CLASS___MADAutoAssetLocker,  "eliminateAllPreviousSetLocksByClient:forSetDescriptor:",  @"ALL_INSTANCES",  v57);
                -[MADAutoAssetControlManager secureForceUngraftAll:forSetDescriptorBeingRemoved:]( v131,  "secureForceUngraftAll:forSetDescriptorBeingRemoved:",  @"_eliminateCompleteIfAllDone",  v57);
              }

              id v54 = [v52 countByEnumeratingWithState:&v132 objects:v148 count:16];
            }

            while (v54);
          }

          id v4 = v130;
          self = v131;
          goto LABEL_74;
        }
      }
    }

    if (([v4 limitedToCancelActivity] & 1) == 0)
    {
      id v59 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
      unsigned int v60 = [v59 persistedEntryAlreadyExists:v25 fromLocation:@"_eliminateCompleteIfAllDone"];

      if (v60)
      {
        uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
        uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([v61 persistedEntry:v25 fromLocation:@"_eliminateCompleteIfAllDone"]);

        if (v62)
        {
          id v63 = [v62 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
          __int128 v64 = (void *)objc_claimAutoreleasedReturnValue(v63);
          __int128 v65 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
          [v65 removePersistedEntry:v25 fromLocation:@"_eliminateCompleteIfAllDone"];

          else {
            id v66 = @"JOB_DESCRIPTORS";
          }
          -[MADAutoAssetControlManager _logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:]( self,  "_logPersistedRemovedEntry:forComponentType:removedPersistedEntryID:removedDescriptor:message:",  @"_eliminateCompleteIfAllDone",  v66,  v25,  v64,  @"removed persisted descriptor entry (no remaining pending operations)");
          if ([v64 isOnFilesystem])
          {
            __int128 v67 = v11;
            __int128 v68 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequest]);
            id v69 = (void *)objc_claimAutoreleasedReturnValue([v68 clientRequestMessage]);

            __int16 v70 = (void *)objc_claimAutoreleasedReturnValue([v69 message]);
            id v71 = [v70 safeObjectForKey:@"instance" ofClass:objc_opt_class(MAAutoAssetInfoInstance)];
            __int128 v72 = (void *)objc_claimAutoreleasedReturnValue(v71);
            __int128 v73 = (void *)objc_claimAutoreleasedReturnValue([v72 autoAssetClientName]);
            if (v73) {
              uint64_t v74 = objc_claimAutoreleasedReturnValue([v72 autoAssetClientName]);
            }
            else {
              uint64_t v74 = objc_claimAutoreleasedReturnValue([v72 clientProcessName]);
            }
            __int128 v76 = (void *)v74;

            __int128 v77 = (void *)objc_claimAutoreleasedReturnValue([v64 assetId]);
            __int128 v78 = (void *)objc_claimAutoreleasedReturnValue([v130 assetSelector]);
            if (v76) {
              +[MADAutoAssetHistory recordOperation:toHistoryType:fromClient:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromClient:forAssetID:withSelector:",  300LL,  0LL,  v76,  v77,  v78);
            }
            else {
              +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  300LL,  0LL,  1LL,  v77,  v78);
            }

            id v4 = v130;
            uint64_t v11 = v67;
          }
        }

        else
        {
          __int128 v75 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          __int128 v64 = (void *)objc_claimAutoreleasedReturnValue([v75 oslog]);

          if (os_log_type_enabled((os_log_t)v64, OS_LOG_TYPE_ERROR)) {
            -[MADAutoAssetControlManager _eliminateCompleteIfAllDone:].cold.1(v4);
          }
        }

        __int128 v79 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSelector]);
        __int128 v80 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager jobSelectorKey:](self, "jobSelectorKey:", v79));

        if (v80)
        {
          __int128 v81 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentStatusBySelector](self, "currentStatusBySelector"));
          [v81 removeObjectForKey:v80];

          __int128 v82 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          __int128 v83 = (os_log_s *)objc_claimAutoreleasedReturnValue([v82 oslog]);

          if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT))
          {
            __int128 v84 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
            *(_DWORD *)int buf = 138543618;
            uint64_t v145 = v84;
            __int16 v146 = 2114;
            __int128 v147 = v80;
            _os_log_impl( &dword_0,  v83,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n[ASSET_STATUS][REMOVED] | statusKey:%{public}@ | jobUUID:N",  buf,  0x16u);
          }

          id v4 = v130;
        }
      }
    }

    __int128 v85 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSelector]);
    uint64_t v45 = (NSMutableArray *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager currentJobBySelector:](self, "currentJobBySelector:", v85));

    if (v45)
    {
      __int128 v86 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      __int128 v87 = v4;
      __int128 v88 = (void *)objc_claimAutoreleasedReturnValue([v86 diag]);
      __int128 v89 = objc_alloc(&OBJC_CLASS___NSString);
      __int128 v90 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray summary](v45, "summary"));
      __int128 v91 = (void *)objc_claimAutoreleasedReturnValue([v87 summary]);
      __int128 v92 = -[NSString initWithFormat:]( v89,  "initWithFormat:",  @"{_eliminateCompleteIfAllDone} unexpected current job by-selector | autoJob:%@ eliminateTracker:%@",  v90,  v91);
      [v88 trackAnomaly:@"AUTO-CONTROL" forReason:v92 withResult:6103 withError:0];

      __int128 v93 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray autoAssetUUID](v45, "autoAssetUUID"));
      __int128 v94 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager currentJobByUUID:fromLocation:notFoundCode:notFoundReason:]( self,  "currentJobByUUID:fromLocation:notFoundCode:notFoundReason:",  v93,  @"_eliminateCompleteIfAllDone",  0LL,  0LL));

      if (v94)
      {
        __int128 v95 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
        __int128 v96 = (void *)objc_claimAutoreleasedReturnValue([v95 diag]);
        uint64_t v97 = objc_alloc(&OBJC_CLASS___NSString);
        __int16 v98 = (void *)objc_claimAutoreleasedReturnValue([v94 summary]);
        id v99 = (void *)objc_claimAutoreleasedReturnValue([v87 summary]);
        __int16 v100 = -[NSString initWithFormat:]( v97,  "initWithFormat:",  @"{_eliminateCompleteIfAllDone} unexpected current job by-UUID | activeJob:%@ eliminateTracker:%@",  v98,  v99);
        [v96 trackAnomaly:@"AUTO-CONTROL" forReason:v100 withResult:6103 withError:0];

        self = v131;
      }

      id v4 = v87;
    }

    if (([v4 limitedToCancelActivity] & 1) == 0) {
      -[MADAutoAssetControlManager _removeAllContentForEliminateTracker:unlessCurrentlyLocked:]( self,  "_removeAllContentForEliminateTracker:unlessCurrentlyLocked:",  v4,  0LL);
    }
LABEL_74:

    __int128 v101 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequest]);
    __int16 v102 = (void *)objc_claimAutoreleasedReturnValue([v101 clientReplyCompletion]);

    if (!v102)
    {
      __int16 v109 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      id v116 = (void *)objc_claimAutoreleasedReturnValue([v109 diag]);
      uint64_t v117 = objc_alloc(&OBJC_CLASS___NSString);
      __int16 v118 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
      id v119 = -[NSString initWithFormat:]( v117,  "initWithFormat:",  @"{_eliminateCompleteIfAllDone} no client reply completion | eliminateTracker:%@",  v118);
      [v116 trackAnomaly:@"AUTO-CONTROL" forReason:v119 withResult:6111 withError:0];
      goto LABEL_85;
    }

    __int128 v103 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequest]);
    __int128 v104 = (void *)objc_claimAutoreleasedReturnValue([v103 clientRequestMessage]);
    __int128 v105 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v104));
    id v106 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequest]);
    __int128 v107 = (void *)objc_claimAutoreleasedReturnValue([v106 clientRequestMessage]);
    uint64_t v108 = (void *)objc_claimAutoreleasedReturnValue([v107 clientID]);
    __int16 v109 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v105,  @"com.apple.MAAutoControl",  v108,  0LL,  0LL));

    id v4 = v130;
    id v110 = (void *)objc_claimAutoreleasedReturnValue([v130 clientRequest]);
    -[MADAutoAssetControlManager issueResponseToClientRequest:issuingResponseMessage:withResponseError:]( v131,  "issueResponseToClientRequest:issuingResponseMessage:withResponseError:",  v110,  v109,  0LL);

    LODWORD(v110) = [v130 eliminatingSet];
    __int16 v111 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v131, "logger"));
    uint64_t v112 = (os_log_s *)objc_claimAutoreleasedReturnValue([v111 oslog]);

    BOOL v113 = os_log_type_enabled(v112, OS_LOG_TYPE_DEFAULT);
    if ((_DWORD)v110)
    {
      if (v113)
      {
        id v114 = (void *)objc_claimAutoreleasedReturnValue([v130 summary]);
        *(_DWORD *)int buf = 138543362;
        uint64_t v145 = v114;
        __int16 v115 = "\n"
               "[SET-ELIMINATE] {_eliminateCompleteIfAllDone} [SUCCESS] done with set-identifier elimination | eliminateT"
               "racker:%{public}@";
LABEL_81:
        _os_log_impl(&dword_0, v112, OS_LOG_TYPE_DEFAULT, v115, buf, 0xCu);
      }
    }

    else if (v113)
    {
      id v114 = (void *)objc_claimAutoreleasedReturnValue([v130 summary]);
      *(_DWORD *)int buf = 138543362;
      uint64_t v145 = v114;
      __int16 v115 = "\n"
             "[ELIMINATE] {_eliminateCompleteIfAllDone} [SUCCESS] done with asset-selector elimination | eliminateTracker"
             ":%{public}@ | MA_MILESTONE";
      goto LABEL_81;
    }

    uint64_t v120 = (void *)objc_claimAutoreleasedReturnValue([v130 assetSelector]);
    id v116 = (void *)objc_claimAutoreleasedReturnValue([v120 persistedEntryID]);

    if (v116)
    {
      __int16 v118 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager activelyEliminatingSelectors](v131, "activelyEliminatingSelectors"));
      [v118 removeObjectForKey:v116];
LABEL_86:

      uint64_t v16 = v125;
      goto LABEL_15;
    }

    __int16 v118 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v131, "autoControlManagerFSM"));
    id v119 = (NSString *)objc_claimAutoreleasedReturnValue([v118 diag]);
    id v121 = objc_alloc(&OBJC_CLASS___NSString);
    id v122 = (void *)objc_claimAutoreleasedReturnValue([v130 summary]);
    __int128 v123 = -[NSString initWithFormat:]( v121,  "initWithFormat:",  @"{_eliminateCompleteIfAllDone} nil persistedEntryID | eliminateTracker:%@",  v122);
    -[NSString trackAnomaly:forReason:withResult:withError:]( v119,  "trackAnomaly:forReason:withResult:withError:",  @"AUTO-CONTROL",  v123,  6111LL,  0LL);

LABEL_85:
    goto LABEL_86;
  }

- (BOOL)_doesEliminateSelector:(id)a3 matchAssetType:(id)a4 withAssetSpecifier:(id)a5 withAssetVersion:(id)a6 fromLocation:(id)a7
{
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v15 extendedStateQueue]);
  dispatch_assert_queue_V2(v16);

  id v17 = (void *)objc_claimAutoreleasedReturnValue([v11 assetVersion]);
  if (v17)
  {
    unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue([v11 assetType]);
    if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v12, v18))
    {
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSpecifier]);
      if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v13, v19))
      {
        BOOL v20 = (void *)objc_claimAutoreleasedReturnValue([v11 assetVersion]);
        unsigned __int8 v21 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v14, v20);
      }

      else
      {
        unsigned __int8 v21 = 0;
      }

      goto LABEL_13;
    }

    unsigned __int8 v21 = 0;
  }

  else
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSpecifier]);

    unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue([v11 assetType]);
    unsigned int v23 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v12, v18);
    if (v22) {
      unsigned __int8 v21 = 0;
    }
    else {
      unsigned __int8 v21 = v23;
    }
    if (v22 && v23)
    {
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSpecifier]);
      unsigned __int8 v21 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v13, v19);
LABEL_13:
    }
  }

  return v21;
}

- (BOOL)timerStartForRequest:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  char v44 = 0;
  uint64_t v10 = -[MADAutoAssetControlManager clientRequestTimeoutSecs:timeoutWasSpecified:]( self,  "clientRequestTimeoutSecs:timeoutWasSpecified:",  v6,  &v44);
  if (v10 == -2 || !v44)
  {
    if (+[MADAutoAssetControlManager isDeviceConsideredBeforeFirstUnlock]( &OBJC_CLASS___MADAutoAssetControlManager,  "isDeviceConsideredBeforeFirstUnlock"))
    {
      uint64_t v10 = +[MADAutoAssetControlManager preferenceBeforeFirstDefaultTimeoutSecs]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceBeforeFirstDefaultTimeoutSecs");
      if (v10 < 0)
      {
        uint64_t v10 = 600LL;
LABEL_6:
        id v11 = -[MADAutoAssetTimed initForRequest:withTimeout:]( objc_alloc(&OBJC_CLASS___MADAutoAssetTimed),  "initForRequest:withTimeout:",  v6,  v10);
        if (!v11)
        {
          id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          unsigned __int8 v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
          {
            id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
            __int128 v36 = (__CFString *)objc_claimAutoreleasedReturnValue([v6 summaryWithResponseMessage:0]);
            *(_DWORD *)int buf = 138544898;
            id v46 = v35;
            __int16 v47 = 2114;
            uint64_t v48 = @">----->";
            __int16 v49 = 2114;
            id v50 = v7;
            __int16 v51 = 2114;
            id v52 = @"AFAIL";
            __int16 v53 = 2114;
            id v54 = @"AFAIL";
            __int16 v55 = 2114;
            uint64_t v56 = v36;
            __int16 v57 = 2114;
            id v58 = @"<-----<";
            _os_log_error_impl( &dword_0,  v28,  OS_LOG_TYPE_ERROR,  "[%{public}@]\n #_CLTMR:%{public}@ {%{public}@}\n #_CLTMR:(%{public}@) failed to create timedOperation\n #_CLTMR:(%{public}@) clientRequest:%{public}@\n #_CLTMR:%{public}@",  buf,  0x48u);
          }

          BOOL v26 = 1;
          goto LABEL_21;
        }

        id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager timedOperations](self, "timedOperations"));
        id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 timerUUID]);
        [v12 setSafeObject:v11 forKey:v13];

        double v14 = (double)v10;
        __int128 v37 = _NSConcreteStackBlock;
        uint64_t v38 = 3221225472LL;
        __int128 v39 = __64__MADAutoAssetControlManager_timerStartForRequest_fromLocation___block_invoke;
        __int16 v40 = &unk_34F570;
        id v41 = self;
        id v15 = v11;
        id v42 = v15;
        id v16 = v7;
        id v43 = v16;
        id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSTimer timerWithTimeInterval:repeats:block:]( &OBJC_CLASS___NSTimer,  "timerWithTimeInterval:repeats:block:",  0LL,  &v37,  v14));
        objc_msgSend(v15, "setTimerInstance:", v17, v37, v38, v39, v40, v41);

        unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue([v15 timerInstance]);
        if (v18)
        {
          id v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSRunLoop mainRunLoop](&OBJC_CLASS___NSRunLoop, "mainRunLoop"));

          if (v19)
          {
            [v6 setTimedTracker:v15];
            BOOL v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            unsigned __int8 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
            {
              id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
              unsigned int v23 = (__CFString *)objc_claimAutoreleasedReturnValue([v6 summaryWithResponseMessage:0]);
              *(_DWORD *)int buf = 138544642;
              id v46 = v22;
              __int16 v47 = 2114;
              uint64_t v48 = @">----->";
              __int16 v49 = 2114;
              id v50 = v16;
              __int16 v51 = 2114;
              id v52 = @"START";
              __int16 v53 = 2114;
              id v54 = v23;
              __int16 v55 = 2114;
              uint64_t v56 = @"<-----<";
              _os_log_impl( &dword_0,  v21,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n #_CLTMR:%{public}@ {%{public}@}\n #_CLTMR:(%{public}@) clientRequest:%{public}@\n #_CLTMR:%{public}@",  buf,  0x3Eu);
            }

            id v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSRunLoop mainRunLoop](&OBJC_CLASS___NSRunLoop, "mainRunLoop"));
            uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v15 timerInstance]);
            [v24 addTimer:v25 forMode:NSDefaultRunLoopMode];

            BOOL v26 = 1;
            goto LABEL_20;
          }

          id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v24 = (void *)objc_claimAutoreleasedReturnValue([v33 oslog]);

          if (!os_log_type_enabled((os_log_t)v24, OS_LOG_TYPE_ERROR))
          {
LABEL_19:
            BOOL v26 = 0;
LABEL_20:

LABEL_21:
            goto LABEL_22;
          }

          uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          id v31 = (__CFString *)objc_claimAutoreleasedReturnValue([v6 summaryWithResponseMessage:0]);
          *(_DWORD *)int buf = 138544898;
          id v46 = v30;
          __int16 v47 = 2114;
          uint64_t v48 = @">----->";
          __int16 v49 = 2114;
          id v50 = v16;
          __int16 v51 = 2114;
          id v52 = @"CFAIL";
          __int16 v53 = 2114;
          id v54 = @"CFAIL";
          __int16 v55 = 2114;
          uint64_t v56 = v31;
          __int16 v57 = 2114;
          id v58 = @"<-----<";
          id v32 = "[%{public}@]\n"
                "#_CLTMR:%{public}@ {%{public}@}\n"
                "#_CLTMR:(%{public}@) unable to add timer to run loop\n"
                "#_CLTMR:(%{public}@) clientRequest:%{public}@\n"
                "#_CLTMR:%{public}@";
        }

        else
        {
          __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v24 = (void *)objc_claimAutoreleasedReturnValue([v29 oslog]);

          if (!os_log_type_enabled((os_log_t)v24, OS_LOG_TYPE_ERROR)) {
            goto LABEL_19;
          }
          uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
          id v31 = (__CFString *)objc_claimAutoreleasedReturnValue([v6 summaryWithResponseMessage:0]);
          *(_DWORD *)int buf = 138544898;
          id v46 = v30;
          __int16 v47 = 2114;
          uint64_t v48 = @">----->";
          __int16 v49 = 2114;
          id v50 = v16;
          __int16 v51 = 2114;
          id v52 = @"CFAIL";
          __int16 v53 = 2114;
          id v54 = @"CFAIL";
          __int16 v55 = 2114;
          uint64_t v56 = v31;
          __int16 v57 = 2114;
          id v58 = @"<-----<";
          id v32 = "[%{public}@]\n"
                "#_CLTMR:%{public}@ {%{public}@}\n"
                "#_CLTMR:(%{public}@) unable to create timer\n"
                "#_CLTMR:(%{public}@) clientRequest:%{public}@\n"
                "#_CLTMR:%{public}@";
        }

        _os_log_error_impl(&dword_0, (os_log_t)v24, OS_LOG_TYPE_ERROR, v32, buf, 0x48u);

        goto LABEL_19;
      }
    }
  }

  if (v10 >= 1) {
    goto LABEL_6;
  }
  BOOL v26 = 1;
LABEL_22:

  return v26;
}

void __64__MADAutoAssetControlManager_timerStartForRequest_fromLocation___block_invoke(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) autoControlManagerFSM]);
  uint64_t v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v2 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __64__MADAutoAssetControlManager_timerStartForRequest_fromLocation___block_invoke_2;
  block[3] = &unk_34DB70;
  id v4 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v6 = v4;
  id v7 = *(id *)(a1 + 48);
  dispatch_async(v3, block);
}

void __64__MADAutoAssetControlManager_timerStartForRequest_fromLocation___block_invoke_2(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) timedOperations]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) timerUUID]);
  id v4 = [v2 safeObjectForKey:v3 ofClass:objc_opt_class(MADAutoAssetTimed)];
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 requestBeingTimed]);
  if (([*(id *)(a1 + 40) timerInvalidated] & 1) == 0
    && v5
    && (id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 clientReplyCompletion]), v7, v7))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logger]);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _updateLatestSummary]);
      uint64_t v11 = *(void *)(a1 + 48);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v6 summaryWithResponseMessage:0]);
      *(_DWORD *)int buf = 138544642;
      id v46 = v10;
      __int16 v47 = 2114;
      uint64_t v48 = @">----->";
      __int16 v49 = 2114;
      uint64_t v50 = v11;
      __int16 v51 = 2114;
      id v52 = @"FIRED";
      __int16 v53 = 2114;
      id v54 = v12;
      __int16 v55 = 2114;
      uint64_t v56 = @"<-----<";
      _os_log_impl( &dword_0,  v9,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n #_CLTMR:%{public}@ {%{public}@}\n #_CLTMR:(%{public}@) clientRequest:%{public}@\n #_CLTMR:%{public}@",  buf,  0x3Eu);
    }

    id v13 = (void *)objc_claimAutoreleasedReturnValue([v6 responseError]);
    if (!v13)
    {
      double v14 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 messageName]);

      id v16 = +[MADAutoAssetControlManager allocIntervalString:]( MADAutoAssetControlManager,  "allocIntervalString:",  [*(id *)(a1 + 40) timeoutSecs]);
      if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v15,  @"MA-AUTO:CHECK_FOR_NEWER") & 1) != 0)
      {
        id v17 = @"checkForNewer";
        uint64_t v18 = 6208LL;
        id v19 = @"check job (in the background)";
      }

      else
      {
        unsigned int v30 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v15,  @"MA-AUTO:LOCK_CONTENT");
        if (v30) {
          id v19 = @"reduced job (attempting download but will not lock)";
        }
        else {
          id v19 = @"decoupled job";
        }
        if (v30) {
          id v17 = @"lockContent";
        }
        else {
          id v17 = @"operation";
        }
        if (v30) {
          uint64_t v18 = 6505LL;
        }
        else {
          uint64_t v18 = 6105LL;
        }
      }

      id v31 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"requested %@ unable to complete after waiting %@ | (TIMEOUT) continuing %@",  v17,  v16,  v19);
      id v32 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  v18,  *(void *)(a1 + 48),  0LL,  v31));
      [v6 setResponseError:v32];
    }

    id v33 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
    id v34 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v33));
    id v35 = (void *)objc_claimAutoreleasedReturnValue([v6 clientID]);
    __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v6 responseError]);
    __int128 v37 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager createSeverMessageWithName:sender:clientID:response:error:]( &OBJC_CLASS___MADAutoAssetControlManager,  "createSeverMessageWithName:sender:clientID:response:error:",  v34,  @"com.apple.MAAutoControl",  v35,  0LL,  v36));
    [v6 setResponseMessage:v37];

    uint64_t v38 = *(void **)(a1 + 32);
    __int128 v39 = (void *)objc_claimAutoreleasedReturnValue([v6 responseMessage]);
    __int16 v40 = (void *)objc_claimAutoreleasedReturnValue([v6 responseError]);
    [v38 issueResponseToClientRequest:v6 issuingResponseMessage:v39 withResponseError:v40];

    [*(id *)(a1 + 40) setTimerInvalidated:1];
  }

  else
  {
    BOOL v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logger]);
    unsigned __int8 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      id v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _updateLatestSummary]);
      uint64_t v23 = *(void *)(a1 + 48);
      id v24 = (void *)objc_claimAutoreleasedReturnValue([v6 summaryWithResponseMessage:0]);
      *(_DWORD *)int buf = 138544642;
      id v46 = v22;
      __int16 v47 = 2114;
      uint64_t v48 = @">----->";
      __int16 v49 = 2114;
      uint64_t v50 = v23;
      __int16 v51 = 2114;
      id v52 = @"INVAL";
      __int16 v53 = 2114;
      id v54 = v24;
      __int16 v55 = 2114;
      uint64_t v56 = @"<-----<";
      _os_log_impl( &dword_0,  v21,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]\n #_CLTMR:%{public}@ {%{public}@}\n #_CLTMR:(%{public}@) clientRequest:%{public}@\n #_CLTMR:%{public}@",  buf,  0x3Eu);
    }

    [*(id *)(a1 + 40) setTimerInvalidated:1];
    if (!v5)
    {
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) autoControlManagerFSM]);
      BOOL v26 = (void *)objc_claimAutoreleasedReturnValue([v25 diag]);
      id v27 = objc_alloc(&OBJC_CLASS___NSString);
      unsigned __int8 v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) summary]);
      __int128 v29 = -[NSString initWithFormat:]( v27,  "initWithFormat:",  @"{timerStartForRequest} untracked timer fired | timedOperation:%@",  v28);
LABEL_27:
      char v44 = v29;
      [v26 trackAnomaly:@"AUTO-CONTROL" forReason:v29 withResult:6111 withError:0];

      goto LABEL_28;
    }
  }

  id v41 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) timerUUID]);

  id v42 = *(void **)(a1 + 32);
  if (!v41)
  {
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v42 autoControlManagerFSM]);
    BOOL v26 = (void *)objc_claimAutoreleasedReturnValue([v25 diag]);
    id v43 = objc_alloc(&OBJC_CLASS___NSString);
    unsigned __int8 v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) summary]);
    __int128 v29 = -[NSString initWithFormat:]( v43,  "initWithFormat:",  @"{timerStartForRequest} nil timerUUID | timedOperation:%@",  v28);
    goto LABEL_27;
  }

  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v42 timedOperations]);
  BOOL v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) timerUUID]);
  [v25 removeObjectForKey:v26];
LABEL_28:
}

- (int64_t)clientRequestTimeoutSecs:(id)a3 timeoutWasSpecified:(BOOL *)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageDesire:](self, "clientRequestMessageDesire:", v9));

  if (!v10)
  {
    uint64_t v11 = 0LL;
    goto LABEL_14;
  }

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v6 clientReplyCompletion]);

  if (!v11)
  {
    BOOL v14 = 0;
    if (!a4) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager clientRequestMessageName:](self, "clientRequestMessageName:", v6));
  if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO:CHECK_FOR_NEWER"))
  {
    id v13 = [v10 checkWaitTimeoutSecs];
LABEL_10:
    uint64_t v11 = v13;
    BOOL v14 = 1;
    goto LABEL_12;
  }

  if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO:LOCK_CONTENT"))
  {
    id v13 = [v10 lockWaitTimeoutSecs];
    goto LABEL_10;
  }

  BOOL v14 = 0;
  uint64_t v11 = 0LL;
LABEL_12:

  if (a4) {
LABEL_13:
  }
    *a4 = v14;
LABEL_14:

  return (int64_t)v11;
}

+ (BOOL)preferenceScheduledAlwaysNonDiscretionary
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferenceScheduledAlwaysNonDiscretionary];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

+ (BOOL)preferenceScheduledBackupTriggersDisabled
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferenceScheduledBackupTriggersDisabled];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

+ (id)preferenceSessionIDBase
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([v2 preferenceSessionIDBase]);
  }
  else {
    unsigned __int8 v4 = 0LL;
  }

  return v4;
}

+ (int64_t)preferenceConnectorInitialWaitSecs
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceConnectorInitialWaitSecs];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (id)preferenceConnectorBackoffRetryTimes
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 preferenceConnectorBackoffRetryTimes]);
  }
  else {
    int64_t v4 = 0LL;
  }

  return v4;
}

+ (int64_t)preferenceConnectorWaitBeforeRetrySecs
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceConnectorWaitBeforeRetrySecs];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (BOOL)preferenceAutoAssetObserverIgnoreNetworkStatus
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferenceAutoAssetObserverIgnoreNetworkStatus];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

+ (BOOL)preferenceAutoAssetLogSetCompare
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferenceAutoAssetLogSetCompare];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

+ (BOOL)preferenceAutoAssetNoPersistedOverflowLimit
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferenceAutoAssetNoPersistedOverflowLimit];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

+ (int64_t)preferenceMaxStagerDeterminingSecs
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceMaxStagerDeterminingSecs];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (int64_t)preferenceStagerDeterminePallasResponseFewer
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceStagerDeterminePallasResponseFewer];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (BOOL)preferenceStagerDownloadFirstNotInCatalog
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferenceStagerDownloadFirstNotInCatalog];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

+ (id)preferenceAsIfBootedOSIsOSVersion
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([v2 preferenceAsIfBootedOSIsOSVersion]);
  }
  else {
    unsigned __int8 v4 = 0LL;
  }

  return v4;
}

+ (id)preferenceAsIfBootedOSIsBuildVersion
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([v2 preferenceAsIfBootedOSIsBuildVersion]);
  }
  else {
    unsigned __int8 v4 = 0LL;
  }

  return v4;
}

+ (BOOL)preferenceAsIfBackgroundOrUse:(BOOL)a3
{
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v5 = v4;

  return a3;
}

+ (BOOL)preferenceAsIfRampOrUse:(BOOL)a3
{
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  id v5 = v4;

  return a3;
}

+ (BOOL)preferenceAlwaysPromoteStagedAssets
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferenceAlwaysPromoteStagedAssets];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

+ (BOOL)preferenceScheduledAsIfNotInternal
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferenceScheduledAsIfNotInternal];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

+ (int64_t)preferenceActivityTickerSecs
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceActivityTickerSecs];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (int64_t)preferencePushActivityIntervalSecs
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferencePushActivityIntervalSecs];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (int64_t)preferenceActivityHeightenedIntervalSecs
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceActivityHeightenedIntervalSecs];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (int64_t)preferenceActivityAggressiveIntervalSecs
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceActivityAggressiveIntervalSecs];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (id)preferenceActivityHeightenedAssetType
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 preferenceActivityHeightenedAssetType]);
  }
  else {
    int64_t v4 = 0LL;
  }

  return v4;
}

+ (id)preferenceActivityAggressiveAssetType
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 preferenceActivityAggressiveAssetType]);
  }
  else {
    int64_t v4 = 0LL;
  }

  return v4;
}

+ (int64_t)preferenceLookupCacheAssetSelectorValidSecs
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceLookupCacheAssetSelectorValidSecs];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (int64_t)preferenceLookupCacheSetConfigurationValidSecs
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceLookupCacheSetConfigurationValidSecs];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (int64_t)preferenceBeforeFirstPollSecs
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceBeforeFirstPollSecs];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (int64_t)preferenceBeforeFirstDefaultTimeoutSecs
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceBeforeFirstDefaultTimeoutSecs];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (BOOL)preferenceSecureSimulateRequireAll
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferenceSecureSimulateRequireAll];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

+ (BOOL)preferenceSecureSimulateFailureAll
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferenceSecureSimulateFailureAll];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

+ (int64_t)preferenceSimulatedDownloadFailureResult
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceSimulatedDownloadFailureResult];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (int64_t)preferenceSimulatedStagingLookupFailureResult
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    int64_t v4 = (int64_t)[v2 preferenceSimulatedStagingLookupFailureResult];
  }
  else {
    int64_t v4 = -1LL;
  }

  return v4;
}

+ (BOOL)preferencePersistedTableLoggingEnabled
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferencePersistedTableLoggingEnabled];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

+ (BOOL)preferenceStagingLookupFlipRequiredOptional
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferenceStagingLookupFlipRequiredOptional];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

+ (BOOL)preferenceStartupSimulateFirstBoot
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager autoControlManager]( &OBJC_CLASS___MADAutoAssetControlManager,  "autoControlManager"));
  uint64_t v3 = v2;
  if (v2) {
    unsigned __int8 v4 = [v2 preferenceStartupSimulateFirstBoot];
  }
  else {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

- (void)_logPersistedEntry:(id)a3 forComponentType:(id)a4 operation:(id)a5 forPersistedEntryID:(id)a6 forClientRequest:(id)a7 withJobUUID:(id)a8 withAssetDescriptor:(id)a9 baseForPatchDescriptor:(id)a10 message:(id)a11
{
  id v51 = a3;
  id v17 = a4;
  id v18 = a5;
  id v19 = a6;
  id v53 = a7;
  id v20 = a8;
  id v21 = a9;
  id v22 = a10;
  id v23 = a11;
  id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v25 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v24 extendedStateQueue]);
  dispatch_assert_queue_V2(v25);

  id v52 = v19;
  if (v19)
  {
    id v48 = v23;
    id v49 = v21;
    __int16 v47 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  v18));
    BOOL v26 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  v17));
    id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    unsigned __int8 v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

    BOOL v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);
    if (v22)
    {
      unsigned int v30 = v51;
      if (v53)
      {
        if (v20)
        {
          if (v29)
          {
            id v31 = [v21 newSummaryWithoutSelector];
            id v32 = +[MADAutoAssetControlManager newSummaryForRequestMessage:includingSelector:]( &OBJC_CLASS___MADAutoAssetControlManager,  "newSummaryForRequestMessage:includingSelector:",  v53,  0LL);
            *(_DWORD *)int buf = 138548738;
            __int16 v55 = @"PERSISTED";
            __int16 v56 = 2114;
            id v57 = v17;
            __int16 v58 = 2114;
            id v59 = v18;
            __int16 v60 = 2114;
            uint64_t v61 = v26;
            __int16 v62 = 2114;
            id v63 = @">----->";
            __int16 v64 = 2114;
            id v65 = v51;
            __int16 v66 = 2114;
            id v67 = v48;
            __int16 v68 = 2114;
            id v69 = v26;
            __int16 v70 = 2114;
            id v71 = v47;
            __int16 v72 = 2114;
            id v73 = v19;
            __int16 v74 = 2114;
            id v75 = v31;
            __int16 v76 = 2114;
            __int128 v77 = v26;
            __int16 v78 = 2114;
            __int128 v79 = v47;
            __int16 v80 = 2114;
            id v81 = v32;
            __int16 v82 = 2114;
            __int128 v83 = v26;
            __int16 v84 = 2114;
            __int128 v85 = v47;
            __int16 v86 = 2114;
            id v87 = v20;
            __int16 v88 = 2114;
            __int128 v89 = v26;
            __int16 v90 = 2114;
            __int128 v91 = v47;
            __int16 v92 = 2114;
            uint64_t v93 = objc_claimAutoreleasedReturnValue([v22 summary]);
            id v33 = (void *)v93;
            __int16 v94 = 2114;
            __int128 v95 = v26;
            __int16 v96 = 2114;
            uint64_t v97 = @"<-----<";
            _os_log_impl( &dword_0,  v28,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:(%{public}@) clientRequest:%{public}@\n #_%{public}@:(%{public}@) jobUUID:%{public}@\n #_%{public}@:(%{public}@) basePatch:%{public}@\n #_%{public}@:%{public}@",  buf,  0xDEu);
          }

          goto LABEL_28;
        }

        if (v29)
        {
          id v39 = [v21 newSummaryWithoutSelector];
          id v44 = +[MADAutoAssetControlManager newSummaryForRequestMessage:includingSelector:]( &OBJC_CLASS___MADAutoAssetControlManager,  "newSummaryForRequestMessage:includingSelector:",  v53,  0LL);
          uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
          *(_DWORD *)int buf = 138547970;
          __int16 v55 = @"PERSISTED";
          __int16 v56 = 2114;
          id v57 = v17;
          __int16 v58 = 2114;
          id v59 = v18;
          __int16 v60 = 2114;
          uint64_t v61 = v26;
          __int16 v62 = 2114;
          id v63 = @">----->";
          __int16 v64 = 2114;
          id v65 = v51;
          __int16 v66 = 2114;
          id v67 = v48;
          __int16 v68 = 2114;
          id v69 = v26;
          __int16 v70 = 2114;
          id v71 = v47;
          __int16 v72 = 2114;
          id v73 = v52;
          __int16 v74 = 2114;
          id v75 = v39;
          __int16 v76 = 2114;
          __int128 v77 = v26;
          __int16 v78 = 2114;
          __int128 v79 = v47;
          __int16 v80 = 2114;
          id v81 = v44;
          __int16 v82 = 2114;
          __int128 v83 = v26;
          __int16 v84 = 2114;
          __int128 v85 = v47;
          __int16 v86 = 2114;
          id v87 = v45;
          __int16 v88 = 2114;
          __int128 v89 = v26;
          __int16 v90 = 2114;
          __int128 v91 = @"<-----<";
          _os_log_impl( &dword_0,  v28,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:(%{public}@) clientRequest:%{public}@\n #_%{public}@:(%{public}@) basePatch:%{public}@\n #_%{public}@:%{public}@",  buf,  0xC0u);

LABEL_27:
          goto LABEL_28;
        }

        goto LABEL_28;
      }

      if (v20)
      {
        if (!v29) {
          goto LABEL_28;
        }
        id v39 = [v21 newSummaryWithoutSelector];
        id v40 = (id)objc_claimAutoreleasedReturnValue([v22 summary]);
        *(_DWORD *)int buf = 138547970;
        __int16 v55 = @"PERSISTED";
        __int16 v56 = 2114;
        id v57 = v17;
        __int16 v58 = 2114;
        id v59 = v18;
        __int16 v60 = 2114;
        uint64_t v61 = v26;
        __int16 v62 = 2114;
        id v63 = @">----->";
        __int16 v64 = 2114;
        id v65 = v51;
        __int16 v66 = 2114;
        id v67 = v48;
        __int16 v68 = 2114;
        id v69 = v26;
        __int16 v70 = 2114;
        id v71 = v47;
        __int16 v72 = 2114;
        id v73 = v52;
        __int16 v74 = 2114;
        id v75 = v39;
        __int16 v76 = 2114;
        __int128 v77 = v26;
        __int16 v78 = 2114;
        __int128 v79 = v47;
        __int16 v80 = 2114;
        id v81 = v20;
        __int16 v82 = 2114;
        __int128 v83 = v26;
        __int16 v84 = 2114;
        __int128 v85 = v47;
        __int16 v86 = 2114;
        id v87 = v40;
        __int16 v88 = 2114;
        __int128 v89 = v26;
        __int16 v90 = 2114;
        __int128 v91 = @"<-----<";
        id v41 = "[%{public}@][%{public}@][%{public}@]\n"
              "#_%{public}@:%{public}@ {%{public}@} %{public}@\n"
              "#_%{public}@:(%{public}@) [%{public}@] | %{public}@\n"
              "#_%{public}@:(%{public}@) jobUUID:%{public}@\n"
              "#_%{public}@:(%{public}@) baePatch:%{public}@\n"
              "#_%{public}@:%{public}@";
LABEL_15:
        id v42 = v28;
        uint32_t v43 = 192;
LABEL_26:
        _os_log_impl(&dword_0, v42, OS_LOG_TYPE_DEFAULT, v41, buf, v43);

        goto LABEL_27;
      }

      if (!v29) {
        goto LABEL_28;
      }
      id v39 = [v21 newSummaryWithoutSelector];
      id v40 = (id)objc_claimAutoreleasedReturnValue([v22 summary]);
      *(_DWORD *)int buf = 138547202;
      __int16 v55 = @"PERSISTED";
      __int16 v56 = 2114;
      id v57 = v17;
      __int16 v58 = 2114;
      id v59 = v18;
      __int16 v60 = 2114;
      uint64_t v61 = v26;
      __int16 v62 = 2114;
      id v63 = @">----->";
      __int16 v64 = 2114;
      id v65 = v51;
      __int16 v66 = 2114;
      id v67 = v48;
      __int16 v68 = 2114;
      id v69 = v26;
      __int16 v70 = 2114;
      id v71 = v47;
      __int16 v72 = 2114;
      id v73 = v52;
      __int16 v74 = 2114;
      id v75 = v39;
      __int16 v76 = 2114;
      __int128 v77 = v26;
      __int16 v78 = 2114;
      __int128 v79 = v47;
      __int16 v80 = 2114;
      id v81 = v40;
      __int16 v82 = 2114;
      __int128 v83 = v26;
      __int16 v84 = 2114;
      __int128 v85 = @"<-----<";
      id v41 = "[%{public}@][%{public}@][%{public}@]\n"
            "#_%{public}@:%{public}@ {%{public}@} %{public}@\n"
            "#_%{public}@:(%{public}@) [%{public}@] | %{public}@\n"
            "#_%{public}@:(%{public}@) basePatch:%{public}@\n"
            "#_%{public}@:%{public}@";
    }

    else
    {
      unsigned int v30 = v51;
      if (!v53)
      {
        if (!v20)
        {
          if (v29)
          {
            id v46 = [v21 newSummaryWithoutSelector];
            *(_DWORD *)int buf = 138546434;
            __int16 v55 = @"PERSISTED";
            __int16 v56 = 2114;
            id v57 = v17;
            __int16 v58 = 2114;
            id v59 = v18;
            __int16 v60 = 2114;
            uint64_t v61 = v26;
            __int16 v62 = 2114;
            id v63 = @">----->";
            __int16 v64 = 2114;
            id v65 = v51;
            __int16 v66 = 2114;
            id v67 = v23;
            __int16 v68 = 2114;
            id v69 = v26;
            __int16 v70 = 2114;
            id v71 = v47;
            __int16 v72 = 2114;
            id v73 = v19;
            __int16 v74 = 2114;
            id v75 = v46;
            __int16 v76 = 2114;
            __int128 v77 = v26;
            __int16 v78 = 2114;
            __int128 v79 = @"<-----<";
            _os_log_impl( &dword_0,  v28,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);

            unsigned int v30 = v51;
          }

          goto LABEL_28;
        }

        if (v29)
        {
          id v39 = [v21 newSummaryWithoutSelector];
          *(_DWORD *)int buf = 138547202;
          __int16 v55 = @"PERSISTED";
          __int16 v56 = 2114;
          id v57 = v17;
          __int16 v58 = 2114;
          id v59 = v18;
          __int16 v60 = 2114;
          uint64_t v61 = v26;
          __int16 v62 = 2114;
          id v63 = @">----->";
          __int16 v64 = 2114;
          id v65 = v51;
          __int16 v66 = 2114;
          id v67 = v23;
          __int16 v68 = 2114;
          id v69 = v26;
          __int16 v70 = 2114;
          id v71 = v47;
          __int16 v72 = 2114;
          id v73 = v52;
          __int16 v74 = 2114;
          id v75 = v39;
          __int16 v76 = 2114;
          __int128 v77 = v26;
          __int16 v78 = 2114;
          __int128 v79 = v47;
          __int16 v80 = 2114;
          id v81 = v20;
          __int16 v82 = 2114;
          __int128 v83 = v26;
          __int16 v84 = 2114;
          __int128 v85 = @"<-----<";
          _os_log_impl( &dword_0,  v28,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:(%{public}@) jobUUID:%{public}@\n #_%{public}@:%{public}@",  buf,  0xA2u);
          goto LABEL_27;
        }

- (void)_logPersistedRemovedEntry:(id)a3 forComponentType:(id)a4 removedPersistedEntryID:(id)a5 removedDescriptor:(id)a6 message:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  id v19 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  @"ENTRY_REMOVE"));
  id v20 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  v13));
  if (v14)
  {
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

    BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);
    if (v15)
    {
      if (v23)
      {
        id v24 = (__CFString *)[v15 newSummaryWithoutSelector];
        *(_DWORD *)int buf = 138546434;
        id v33 = @"PERSISTED";
        __int16 v34 = 2114;
        id v35 = v13;
        __int16 v36 = 2114;
        __int128 v37 = @"ENTRY_REMOVE";
        __int16 v38 = 2114;
        id v39 = v20;
        __int16 v40 = 2114;
        id v41 = @">----->";
        __int16 v42 = 2114;
        id v43 = v12;
        __int16 v44 = 2114;
        id v45 = v16;
        __int16 v46 = 2114;
        __int16 v47 = v20;
        __int16 v48 = 2114;
        id v49 = v19;
        __int16 v50 = 2114;
        id v51 = v14;
        __int16 v52 = 2114;
        id v53 = v24;
        __int16 v54 = 2114;
        __int16 v55 = v20;
        __int16 v56 = 2114;
        id v57 = @"<-----<";
        _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
      }
    }

    else if (v23)
    {
      *(_DWORD *)int buf = 138546178;
      id v33 = @"PERSISTED";
      __int16 v34 = 2114;
      id v35 = v13;
      __int16 v36 = 2114;
      __int128 v37 = @"ENTRY_REMOVE";
      __int16 v38 = 2114;
      id v39 = v20;
      __int16 v40 = 2114;
      id v41 = @">----->";
      __int16 v42 = 2114;
      id v43 = v12;
      __int16 v44 = 2114;
      id v45 = v16;
      __int16 v46 = 2114;
      __int16 v47 = v20;
      __int16 v48 = 2114;
      id v49 = v19;
      __int16 v50 = 2114;
      id v51 = v14;
      __int16 v52 = 2114;
      id v53 = v20;
      __int16 v54 = 2114;
      __int16 v55 = @"<-----<";
      _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@]\n #_%{public}@:%{public}@",  buf,  0x7Au);
    }
  }

  else
  {
    id v31 = v19;
    id v25 = v12;
    BOOL v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v27 = (void *)objc_claimAutoreleasedReturnValue([v26 diag]);
    unsigned __int8 v28 = objc_alloc(&OBJC_CLASS___NSString);
    if (v15) {
      BOOL v29 = (__CFString *)objc_claimAutoreleasedReturnValue([v15 summary]);
    }
    else {
      BOOL v29 = @"N";
    }
    unsigned int v30 = -[NSString initWithFormat:]( v28,  "initWithFormat:",  @"{%@:_logPersistedRemovedEntry} %@ | no persistedEntryID to remove | %@ | removedDescriptor:%@",  v25,  v13,  v16,  v29);
    [v27 trackAnomaly:@"AUTO-CONTROL" forReason:v30 withResult:6110 withError:0];

    if (v15) {
    id v12 = v25;
    }
    id v19 = v31;
  }
}

- (void)_logPersistedTableOfContents:(id)a3 forComponentType:(id)a4
{
  id v6 = (__CFString *)a3;
  id v7 = (__CFString *)a4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  uint64_t v10 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  v7));
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  __int16 v50 = v6;
  if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v7, @"ACTIVE-JOBS"))
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
LABEL_13:
    id v13 = v12;
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedEntryIDs:v6]);
    goto LABEL_14;
  }

  if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  @"KNOWN_DESCRIPTORS"))
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
    goto LABEL_13;
  }

  if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  @"SET_ACTIVE_JOB_DESCRIPTORS"))
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
    goto LABEL_13;
  }

  if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  @"SET_DOWNLOADED_DESCRIPTORS"))
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
    goto LABEL_13;
  }

  if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v7, @"SET_TARGETS"))
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
    goto LABEL_13;
  }

  if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  @"SET_LOOKUP_RESULTS"))
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
    goto LABEL_13;
  }

  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  __int16 v46 = (void *)objc_claimAutoreleasedReturnValue([v13 diag]);
  __int16 v47 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:_logPersistedTableOfContents} unknown componentType:%@",  v6,  v7);
  [v46 trackAnomaly:@"AUTO-CONTROL" forReason:v47 withResult:6110 withError:0];

  id v6 = v50;
  id v14 = 0LL;
LABEL_14:

  if ([v14 count])
  {
    id v15 = (__CFString *)[v14 count];
    id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 oslog]);

    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138544642;
      id v53 = @"PERSISTED";
      __int16 v54 = 2114;
      __int16 v55 = v7;
      __int16 v56 = 2114;
      id v57 = @"ENTRY_LOAD";
      __int16 v58 = 2114;
      id v59 = v10;
      __int16 v60 = 2114;
      uint64_t v61 = @">----->";
      __int16 v62 = 2114;
      id v63 = v6;
      _os_log_impl( &dword_0,  v17,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} table-of-contents...",  buf,  0x3Eu);
    }

    id v49 = v10;

    if ((uint64_t)v15 >= 1)
    {
      uint64_t v18 = 0LL;
      id v51 = v14;
      do
      {
        id v19 = objc_autoreleasePoolPush();
        id v20 = (__CFString *)objc_claimAutoreleasedReturnValue([v14 objectAtIndexedSubscript:v18]);
        if (-[__objc2_ivar_list stringIsEqual:to:]( p_ivars[155],  "stringIsEqual:to:",  v7,  @"ACTIVE-JOBS"))
        {
          id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
        }

        else if (-[__objc2_ivar_list stringIsEqual:to:]( p_ivars[155],  "stringIsEqual:to:",  v7,  @"KNOWN_DESCRIPTORS"))
        {
          id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
        }

        else if (-[__objc2_ivar_list stringIsEqual:to:]( p_ivars[155],  "stringIsEqual:to:",  v7,  @"SET_ACTIVE_JOB_DESCRIPTORS"))
        {
          id v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
        }

        else if (-[__objc2_ivar_list stringIsEqual:to:]( p_ivars[155],  "stringIsEqual:to:",  v7,  @"SET_DOWNLOADED_DESCRIPTORS"))
        {
          id v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
        }

        else if (-[__objc2_ivar_list stringIsEqual:to:]( p_ivars[155],  "stringIsEqual:to:",  v7,  @"SET_TARGETS"))
        {
          id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
        }

        else
        {
          if (!-[__objc2_ivar_list stringIsEqual:to:]( p_ivars[155],  "stringIsEqual:to:",  v7,  @"SET_LOOKUP_RESULTS"))
          {
            __int16 v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
            id v35 = (void *)objc_claimAutoreleasedReturnValue([v34 diag]);
            __int16 v36 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:_logPersistedTableOfContents} second component type check - unknown componentType:%@",  v6,  v7);
            [v35 trackAnomaly:@"AUTO-CONTROL" forReason:v36 withResult:6110 withError:0];

            p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
LABEL_50:
            __int128 v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            BOOL v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 oslog]);

            if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
            {
              __int16 v38 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager summary](self, "summary"));
              *(_DWORD *)int buf = 138544130;
              id v53 = v6;
              __int16 v54 = 2114;
              __int16 v55 = v7;
              __int16 v56 = 2114;
              id v57 = v38;
              __int16 v58 = 2114;
              id v59 = v20;
              _os_log_error_impl( &dword_0,  v23,  OS_LOG_TYPE_ERROR,  "{%{public}@:_logPersistedTableOfContents} | (%{public}@) %{public}@ | unable to load entry:%{public}@",  buf,  0x2Au);
            }

            goto LABEL_52;
          }

          id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
        }

        id v22 = v21;
        BOOL v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 persistedEntry:v20 fromLocation:v6]);

        if (!v23) {
          goto LABEL_50;
        }
        if ((-[__objc2_ivar_list stringIsEqual:to:]( p_ivars[155],  "stringIsEqual:to:",  v7,  @"ACTIVE-JOBS") & 1) != 0 || -[__objc2_ivar_list stringIsEqual:to:]( p_ivars[155],  "stringIsEqual:to:",  v7,  @"KNOWN_DESCRIPTORS"))
        {
          id v24 = -[os_log_s secureCodedObjectForKey:ofClass:]( v23,  "secureCodedObjectForKey:ofClass:",  @"assetDescriptor",  objc_opt_class(&OBJC_CLASS___MADAutoAssetDescriptor));
          id v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
          BOOL v26 = (__CFString *)[v25 newSummaryWithoutSelector];
        }

        else
        {
          if ((-[__objc2_ivar_list stringIsEqual:to:]( p_ivars[155],  "stringIsEqual:to:",  v7,  @"SET_ACTIVE_JOB_DESCRIPTORS") & 1) != 0 || -[__objc2_ivar_list stringIsEqual:to:]( p_ivars[155],  "stringIsEqual:to:",  v7,  @"SET_DOWNLOADED_DESCRIPTORS"))
          {
            uint64_t v27 = objc_opt_class(&OBJC_CLASS___MADAutoSetDescriptor);
            unsigned __int8 v28 = v23;
            BOOL v29 = @"assetSetDescriptor";
          }

          else if (-[__objc2_ivar_list stringIsEqual:to:]( p_ivars[155],  "stringIsEqual:to:",  v7,  @"SET_TARGETS"))
          {
            uint64_t v27 = objc_opt_class(&OBJC_CLASS___MADAutoSetTarget);
            unsigned __int8 v28 = v23;
            BOOL v29 = @"setTarget";
          }

          else
          {
            if (!-[__objc2_ivar_list stringIsEqual:to:]( p_ivars[155],  "stringIsEqual:to:",  v7,  @"SET_LOOKUP_RESULTS"))
            {
              id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
              __int16 v48 = (void *)objc_claimAutoreleasedReturnValue([v25 diag]);
              id v39 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:_logPersistedTableOfContents} third component type check - unknown componentType:%@",  v6,  v7);
              [v48 trackAnomaly:@"AUTO-CONTROL" forReason:v39 withResult:6110 withError:0];

              unsigned int v30 = 0LL;
              goto LABEL_40;
            }

            uint64_t v27 = objc_opt_class(&OBJC_CLASS___MADAutoSetLookupResult);
            unsigned __int8 v28 = v23;
            BOOL v29 = @"setLookupResult";
          }

          id v25 = (void *)objc_claimAutoreleasedReturnValue( -[os_log_s secureCodedObjectForKey:ofClass:]( v28,  "secureCodedObjectForKey:ofClass:",  v29,  v27));
          BOOL v26 = (__CFString *)[v25 newSummaryWithoutEntryID];
        }

        unsigned int v30 = v26;
LABEL_40:

        id v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
        id v32 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 oslog]);

        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 138544642;
          id v33 = @"NO SUMMARY";
          if (v30) {
            id v33 = v30;
          }
          id v53 = v49;
          __int16 v54 = 2114;
          __int16 v55 = @"E_LOD";
          __int16 v56 = 2048;
          id v57 = (const __CFString *)(v18 + 1);
          __int16 v58 = 2048;
          id v59 = v15;
          __int16 v60 = 2114;
          uint64_t v61 = v20;
          __int16 v62 = 2114;
          id v63 = v33;
          _os_log_impl( &dword_0,  v32,  OS_LOG_TYPE_DEFAULT,  "\n#_%{public}@:%{public}@ (%ld of %ld) [%{public}@] | %{public}@",  buf,  0x3Eu);
        }

        id v6 = v50;
        p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
LABEL_52:

        objc_autoreleasePoolPop(v19);
        ++v18;
        id v14 = v51;
      }

      while (v15 != (__CFString *)v18);
    }

    __int16 v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue([v40 oslog]);

    if (!os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = (__CFString *)v49;
      goto LABEL_61;
    }

    *(_DWORD *)int buf = 138544642;
    id v53 = @"PERSISTED";
    __int16 v54 = 2114;
    __int16 v55 = v7;
    __int16 v56 = 2114;
    id v57 = @"ENTRY_LOAD";
    __int16 v58 = 2114;
    uint64_t v10 = (__CFString *)v49;
    id v59 = (__CFString *)v49;
    __int16 v60 = 2114;
    uint64_t v61 = @"<-----<";
    __int16 v62 = 2114;
    id v63 = v6;
    __int16 v42 = "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} ...table-of-contents";
    id v43 = v41;
    uint32_t v44 = 62;
    goto LABEL_59;
  }

  id v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue([v45 oslog]);

  if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 138545410;
    id v53 = @"PERSISTED";
    __int16 v54 = 2114;
    __int16 v55 = v7;
    __int16 v56 = 2114;
    id v57 = @"ENTRY_LOAD";
    __int16 v58 = 2114;
    id v59 = v10;
    __int16 v60 = 2114;
    uint64_t v61 = @">----->";
    __int16 v62 = 2114;
    id v63 = v6;
    __int16 v64 = 2114;
    id v65 = @"empty table-of-contents";
    __int16 v66 = 2114;
    id v67 = v10;
    __int16 v68 = 2114;
    id v69 = @"<-----<";
    __int16 v42 = "[%{public}@][%{public}@][%{public}@]\n"
          "#_%{public}@:%{public}@ {%{public}@} %{public}@\n"
          "#_%{public}@:%{public}@";
    id v43 = v41;
    uint32_t v44 = 92;
LABEL_59:
    _os_log_impl(&dword_0, v43, OS_LOG_TYPE_DEFAULT, v42, buf, v44);
  }

- (void)_logPersistedSetConfiguration:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withSetConfiguration:(id)a6 historyOperation:(int64_t)a7 message:(id)a8
{
}

- (void)_logPersistedSetConfiguration:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withSetConfiguration:(id)a6 historyOperation:(int64_t)a7 recordingSpecifiers:(BOOL)a8 message:(id)a9
{
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  id v19 = a9;
  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v21 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v20 extendedStateQueue]);
  dispatch_assert_queue_V2(v21);

  if (v17)
  {
    BOOL v51 = a8;
    id v53 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  v16));
    __int16 v52 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"SET_CONFIGURATIONS"));
    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    BOOL v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      id v24 = [v18 newSummaryWithoutEntryID];
      *(_DWORD *)int buf = 138546434;
      __int16 v55 = @"PERSISTED";
      __int16 v56 = 2114;
      id v57 = @"SET_CONFIGURATIONS";
      __int16 v58 = 2114;
      id v59 = v16;
      __int16 v60 = 2114;
      uint64_t v61 = v52;
      __int16 v62 = 2114;
      id v63 = @">----->";
      __int16 v64 = 2114;
      id v65 = v15;
      __int16 v66 = 2114;
      id v67 = v19;
      __int16 v68 = 2114;
      id v69 = v52;
      __int16 v70 = 2114;
      id v71 = v53;
      __int16 v72 = 2114;
      id v73 = v17;
      __int16 v74 = 2114;
      id v75 = v24;
      __int16 v76 = 2114;
      __int128 v77 = v52;
      __int16 v78 = 2114;
      __int128 v79 = @"<-----<";
      _os_log_impl( &dword_0,  v23,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
    }

    -[MADAutoAssetControlManager _logSetConfigurationEntries:forSetConfiguration:]( self,  "_logSetConfigurationEntries:forSetConfiguration:",  v15,  v18);
    if (a7 != 9999)
    {
      int64_t v49 = a7;
      id v50 = v19;
      id v25 = (void *)objc_claimAutoreleasedReturnValue([v18 latestAtomicInstanceToVend]);
      BOOL v26 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( self,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v25));

      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v18 latestAtomicInstanceToVend]);
      unsigned __int8 v28 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetAtomicInstanceByInstanceUUID:]( self,  "locateSetAtomicInstanceByInstanceUUID:",  v27));

      __int16 v46 = (void *)objc_claimAutoreleasedReturnValue([v18 autoAssetEntries]);
      id v43 = [v46 count];
      id v45 = (void *)objc_claimAutoreleasedReturnValue([v26 requestedAutoAssetEntries]);
      id v42 = [v45 count];
      __int16 v48 = v26;
      uint32_t v44 = (void *)objc_claimAutoreleasedReturnValue([v26 discoveredAtomicEntries]);
      id v41 = [v44 count];
      __int16 v47 = v28;
      BOOL v29 = (void *)objc_claimAutoreleasedReturnValue([v28 instanceEntries]);
      id v30 = [v29 count];
      id v31 = (void *)objc_claimAutoreleasedReturnValue([v18 clientDomainName]);
      id v32 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSetIdentifier]);
      uint64_t v33 = objc_claimAutoreleasedReturnValue([v18 latestAtomicInstanceToVend]);
      __int16 v34 = (void *)v33;
      if (v51)
      {
        id v35 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _specifierVersionNamesForSetConfiguration:]( self,  "_specifierVersionNamesForSetConfiguration:",  v18));
        +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:configuredCount:requestedCount:fromPallasCount:vendingCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:withAddendumMessage:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:configuredCount:requestedCount:fromPallasCount:vendingCount:forClientD omainName:forAssetSetIdentifier:forAtomicInstance:withAddendumMessage:",  v49,  2LL,  1LL,  v43,  v42,  v41,  v30,  v31,  v32,  v34,  v35);
      }

      else
      {
        +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:configuredCount:requestedCount:fromPallasCount:vendingCount:forClientDomainName:forAssetSetIdentifier:forAtomicInstance:withAddendumMessage:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:configuredCount:requestedCount:fromPallasCount:vendingCount:forClientD omainName:forAssetSetIdentifier:forAtomicInstance:withAddendumMessage:",  v49,  2LL,  1LL,  v43,  v42,  v41,  v30,  v31,  v32,  v33,  v15);
      }

      id v19 = v50;
    }
  }

  else
  {
    __int16 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v36 diag]);
    __int16 v38 = objc_alloc(&OBJC_CLASS___NSString);
    id v39 = (void *)objc_claimAutoreleasedReturnValue([v18 summary]);
    __int16 v40 = -[NSString initWithFormat:]( v38,  "initWithFormat:",  @"{%@:_logPersistedSetConfiguration} %@:%@ | no persistedEntryID | %@ | setConfiguration:%@",  v15,  @"SET_CONFIGURATIONS",  v16,  v19,  v39);
    [v37 trackAnomaly:@"AUTO-CONTROL" forReason:v40 withResult:6110 withError:0];
  }
}

- (void)_logPersistedSetConfigurationRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedSetConfiguration:(id)a5 message:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  id v16 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  @"ENTRY_REMOVE"));
  id v17 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"SET_CONFIGURATIONS"));
  if (v11)
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
    if (v12)
    {
      if (v20)
      {
        id v21 = (__CFString *)[v12 newSummaryWithoutEntryID];
        *(_DWORD *)int buf = 138546434;
        id v30 = @"PERSISTED";
        __int16 v31 = 2114;
        id v32 = @"SET_CONFIGURATIONS";
        __int16 v33 = 2114;
        __int16 v34 = @"ENTRY_REMOVE";
        __int16 v35 = 2114;
        __int16 v36 = v17;
        __int16 v37 = 2114;
        __int16 v38 = @">----->";
        __int16 v39 = 2114;
        id v40 = v10;
        __int16 v41 = 2114;
        id v42 = v13;
        __int16 v43 = 2114;
        uint32_t v44 = v17;
        __int16 v45 = 2114;
        __int16 v46 = v16;
        __int16 v47 = 2114;
        id v48 = v11;
        __int16 v49 = 2114;
        id v50 = v21;
        __int16 v51 = 2114;
        __int16 v52 = v17;
        __int16 v53 = 2114;
        __int16 v54 = @"<-----<";
        _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
      }
    }

    else if (v20)
    {
      *(_DWORD *)int buf = 138546178;
      id v30 = @"PERSISTED";
      __int16 v31 = 2114;
      id v32 = @"SET_CONFIGURATIONS";
      __int16 v33 = 2114;
      __int16 v34 = @"ENTRY_REMOVE";
      __int16 v35 = 2114;
      __int16 v36 = v17;
      __int16 v37 = 2114;
      __int16 v38 = @">----->";
      __int16 v39 = 2114;
      id v40 = v10;
      __int16 v41 = 2114;
      id v42 = v13;
      __int16 v43 = 2114;
      uint32_t v44 = v17;
      __int16 v45 = 2114;
      __int16 v46 = v16;
      __int16 v47 = 2114;
      id v48 = v11;
      __int16 v49 = 2114;
      id v50 = v17;
      __int16 v51 = 2114;
      __int16 v52 = @"<-----<";
      _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@]\n #_%{public}@:%{public}@",  buf,  0x7Au);
    }
  }

  else
  {
    unsigned __int8 v28 = v16;
    id v22 = v10;
    BOOL v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 diag]);
    id v25 = objc_alloc(&OBJC_CLASS___NSString);
    if (v12) {
      BOOL v26 = (__CFString *)objc_claimAutoreleasedReturnValue([v12 summary]);
    }
    else {
      BOOL v26 = @"N";
    }
    uint64_t v27 = -[NSString initWithFormat:]( v25,  "initWithFormat:",  @"{%@:_logPersistedSetConfigurationRemoved} %@ | no persistedEntryID to remove | %@ | removedSetConfiguration:%@",  v22,  @"SET_CONFIGURATIONS",  v13,  v26);
    [v24 trackAnomaly:@"AUTO-CONTROL" forReason:v27 withResult:6110 withError:0];

    if (v12) {
    id v10 = v22;
    }
    id v16 = v28;
  }
}

- (void)_logPersistedSetConfigurationTableOfContents:(id)a3
{
  unsigned __int8 v4 = (__CFString *)a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = v4;
  uint64_t v8 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"SET_CONFIGURATIONS"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetConfigurations](self, "persistedKnownSetConfigurations"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntryIDs:v4]);

  __int16 v34 = v10;
  if ([v10 count])
  {
    __int16 v35 = (__CFString *)[v10 count];
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138544642;
      __int16 v37 = @"PERSISTED";
      __int16 v38 = 2114;
      __int16 v39 = @"SET_CONFIGURATIONS";
      __int16 v40 = 2114;
      __int16 v41 = @"ENTRY_LOAD";
      __int16 v42 = 2114;
      __int16 v43 = v8;
      __int16 v44 = 2114;
      __int16 v45 = @">----->";
      __int16 v46 = 2114;
      __int16 v47 = v7;
      _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} table-of-contents...",  buf,  0x3Eu);
    }

    __int16 v33 = v8;

    id v14 = v10;
    if ((uint64_t)v35 >= 1)
    {
      uint64_t v15 = 0LL;
      *(void *)&__int128 v13 = 138544130LL;
      __int128 v32 = v13;
      do
      {
        id v16 = objc_autoreleasePoolPush();
        id v17 = (__CFString *)objc_claimAutoreleasedReturnValue([v14 objectAtIndexedSubscript:v15]);
        id v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( self,  "persistedKnownSetConfigurations"));
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedEntry:v17 fromLocation:v7]);

        if (v19)
        {
          id v20 = [v19 secureCodedObjectForKey:@"setConfiguration" ofClass:objc_opt_class(MADAutoSetConfiguration)];
          id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
          id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          BOOL v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
          {
            id v24 = (__CFString *)[v21 newSummaryWithoutEntryID];
            *(_DWORD *)int buf = 138544642;
            __int16 v37 = v33;
            __int16 v38 = 2114;
            __int16 v39 = @"E_LOD";
            __int16 v40 = 2048;
            __int16 v41 = (const __CFString *)(v15 + 1);
            __int16 v42 = 2048;
            id v14 = v34;
            __int16 v43 = v35;
            __int16 v44 = 2114;
            __int16 v45 = v17;
            __int16 v46 = 2114;
            __int16 v47 = v24;
            _os_log_impl( &dword_0,  v23,  OS_LOG_TYPE_DEFAULT,  "\n#_%{public}@:%{public}@ (%ld of %ld) [%{public}@] | %{public}@",  buf,  0x3Eu);
          }
        }

        else
        {
          id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v21 = (void *)objc_claimAutoreleasedReturnValue([v25 oslog]);

          if (!os_log_type_enabled((os_log_t)v21, OS_LOG_TYPE_ERROR)) {
            goto LABEL_11;
          }
          BOOL v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager summary](self, "summary"));
          *(_DWORD *)int buf = v32;
          __int16 v37 = v7;
          __int16 v38 = 2114;
          __int16 v39 = @"SET_CONFIGURATIONS";
          __int16 v40 = 2114;
          __int16 v41 = (const __CFString *)v23;
          __int16 v42 = 2114;
          __int16 v43 = v17;
          _os_log_error_impl( &dword_0,  (os_log_t)v21,  OS_LOG_TYPE_ERROR,  "{%{public}@:_logPersistedSetConfigurationTableOfContents} | (%{public}@) %{public}@ | unable to load entry:%{public}@",  buf,  0x2Au);
        }

LABEL_11:
        objc_autoreleasePoolPop(v16);
        ++v15;
      }

      while (v35 != (__CFString *)v15);
    }

    BOOL v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger", v32));
    uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

    if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = (__CFString *)v33;
      goto LABEL_20;
    }

    *(_DWORD *)int buf = 138544642;
    __int16 v37 = @"PERSISTED";
    __int16 v38 = 2114;
    __int16 v39 = @"SET_CONFIGURATIONS";
    __int16 v40 = 2114;
    __int16 v41 = @"ENTRY_LOAD";
    __int16 v42 = 2114;
    uint64_t v8 = (__CFString *)v33;
    __int16 v43 = (__CFString *)v33;
    __int16 v44 = 2114;
    __int16 v45 = @"<-----<";
    __int16 v46 = 2114;
    __int16 v47 = v7;
    unsigned __int8 v28 = "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} ...table-of-contents";
    BOOL v29 = v27;
    uint32_t v30 = 62;
    goto LABEL_18;
  }

  __int16 v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 oslog]);

  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 138545410;
    __int16 v37 = @"PERSISTED";
    __int16 v38 = 2114;
    __int16 v39 = @"SET_CONFIGURATIONS";
    __int16 v40 = 2114;
    __int16 v41 = @"ENTRY_LOAD";
    __int16 v42 = 2114;
    __int16 v43 = v8;
    __int16 v44 = 2114;
    __int16 v45 = @">----->";
    __int16 v46 = 2114;
    __int16 v47 = v7;
    __int16 v48 = 2114;
    __int16 v49 = @"empty table-of-contents";
    __int16 v50 = 2114;
    __int16 v51 = v8;
    __int16 v52 = 2114;
    __int16 v53 = @"<-----<";
    unsigned __int8 v28 = "[%{public}@][%{public}@][%{public}@]\n"
          "#_%{public}@:%{public}@ {%{public}@} %{public}@\n"
          "#_%{public}@:%{public}@";
    BOOL v29 = v27;
    uint32_t v30 = 92;
LABEL_18:
    _os_log_impl(&dword_0, v29, OS_LOG_TYPE_DEFAULT, v28, buf, v30);
  }

- (void)_logPersistedSetAtomicInstance:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withSetAtomicInstance:(id)a6 message:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  if (v14)
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  v13));
    id v20 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"SET_ATOMIC_INSTANCES"));
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      id v23 = [v15 newSummaryWithoutEntryID];
      *(_DWORD *)int buf = 138546434;
      uint32_t v30 = @"PERSISTED";
      __int16 v31 = 2114;
      __int128 v32 = @"SET_ATOMIC_INSTANCES";
      __int16 v33 = 2114;
      id v34 = v13;
      __int16 v35 = 2114;
      __int16 v36 = v20;
      __int16 v37 = 2114;
      __int16 v38 = @">----->";
      __int16 v39 = 2114;
      id v40 = v12;
      __int16 v41 = 2114;
      id v42 = v16;
      __int16 v43 = 2114;
      __int16 v44 = v20;
      __int16 v45 = 2114;
      __int16 v46 = v19;
      __int16 v47 = 2114;
      id v48 = v14;
      __int16 v49 = 2114;
      id v50 = v23;
      __int16 v51 = 2114;
      __int16 v52 = v20;
      __int16 v53 = 2114;
      __int16 v54 = @"<-----<";
      _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
    }

    -[MADAutoAssetControlManager _logAtomicInstanceEntries:forAtomicInstance:]( self,  "_logAtomicInstanceEntries:forAtomicInstance:",  v12,  v15);
  }

  else
  {
    id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v24 diag]);
    BOOL v26 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
    unsigned __int8 v28 = -[NSString initWithFormat:]( v26,  "initWithFormat:",  @"{%@:_logPersistedSetAtomicInstance} %@:%@ | no persistedEntryID | %@ | setAtomicInstance:%@",  v12,  @"SET_ATOMIC_INSTANCES",  v13,  v16,  v27);
    [v25 trackAnomaly:@"AUTO-CONTROL" forReason:v28 withResult:6110 withError:0];
  }
}

- (void)_logPersistedSetAtomicInstanceRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedSetAtomicInstance:(id)a5 message:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  id v16 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  @"ENTRY_REMOVE"));
  id v17 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"SET_ATOMIC_INSTANCES"));
  if (v11)
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
    if (v12)
    {
      if (v20)
      {
        id v21 = (__CFString *)[v12 newSummaryWithoutEntryID];
        *(_DWORD *)int buf = 138546434;
        uint32_t v30 = @"PERSISTED";
        __int16 v31 = 2114;
        __int128 v32 = @"SET_ATOMIC_INSTANCES";
        __int16 v33 = 2114;
        id v34 = @"ENTRY_REMOVE";
        __int16 v35 = 2114;
        __int16 v36 = v17;
        __int16 v37 = 2114;
        __int16 v38 = @">----->";
        __int16 v39 = 2114;
        id v40 = v10;
        __int16 v41 = 2114;
        id v42 = v13;
        __int16 v43 = 2114;
        __int16 v44 = v17;
        __int16 v45 = 2114;
        __int16 v46 = v16;
        __int16 v47 = 2114;
        id v48 = v11;
        __int16 v49 = 2114;
        id v50 = v21;
        __int16 v51 = 2114;
        __int16 v52 = v17;
        __int16 v53 = 2114;
        __int16 v54 = @"<-----<";
        _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
      }
    }

    else if (v20)
    {
      *(_DWORD *)int buf = 138546178;
      uint32_t v30 = @"PERSISTED";
      __int16 v31 = 2114;
      __int128 v32 = @"SET_ATOMIC_INSTANCES";
      __int16 v33 = 2114;
      id v34 = @"ENTRY_REMOVE";
      __int16 v35 = 2114;
      __int16 v36 = v17;
      __int16 v37 = 2114;
      __int16 v38 = @">----->";
      __int16 v39 = 2114;
      id v40 = v10;
      __int16 v41 = 2114;
      id v42 = v13;
      __int16 v43 = 2114;
      __int16 v44 = v17;
      __int16 v45 = 2114;
      __int16 v46 = v16;
      __int16 v47 = 2114;
      id v48 = v11;
      __int16 v49 = 2114;
      id v50 = v17;
      __int16 v51 = 2114;
      __int16 v52 = @"<-----<";
      _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@]\n #_%{public}@:%{public}@",  buf,  0x7Au);
    }
  }

  else
  {
    unsigned __int8 v28 = v16;
    id v22 = v10;
    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 diag]);
    id v25 = objc_alloc(&OBJC_CLASS___NSString);
    if (v12) {
      BOOL v26 = (__CFString *)objc_claimAutoreleasedReturnValue([v12 summary]);
    }
    else {
      BOOL v26 = @"N";
    }
    uint64_t v27 = -[NSString initWithFormat:]( v25,  "initWithFormat:",  @"{%@:_logPersistedSetAtomicInstanceRemoved} %@ | no persistedEntryID to remove | %@ | removedSetAtomicInstance:%@",  v22,  @"SET_ATOMIC_INSTANCES",  v13,  v26);
    [v24 trackAnomaly:@"AUTO-CONTROL" forReason:v27 withResult:6110 withError:0];

    if (v12) {
    id v10 = v22;
    }
    id v16 = v28;
  }
}

- (void)_logPersistedSetAtomicInstanceTableOfContents:(id)a3
{
  unsigned __int8 v4 = (__CFString *)a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = v4;
  uint64_t v8 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"SET_ATOMIC_INSTANCES"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntryIDs:v4]);

  id v34 = v10;
  if ([v10 count])
  {
    __int16 v35 = (__CFString *)[v10 count];
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138544642;
      __int16 v37 = @"PERSISTED";
      __int16 v38 = 2114;
      __int16 v39 = @"SET_ATOMIC_INSTANCES";
      __int16 v40 = 2114;
      __int16 v41 = @"ENTRY_LOAD";
      __int16 v42 = 2114;
      __int16 v43 = v8;
      __int16 v44 = 2114;
      __int16 v45 = @">----->";
      __int16 v46 = 2114;
      __int16 v47 = v7;
      _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} table-of-contents...",  buf,  0x3Eu);
    }

    __int16 v33 = v8;

    id v14 = v10;
    if ((uint64_t)v35 >= 1)
    {
      uint64_t v15 = 0LL;
      *(void *)&__int128 v13 = 138544130LL;
      __int128 v32 = v13;
      do
      {
        id v16 = objc_autoreleasePoolPush();
        id v17 = (__CFString *)objc_claimAutoreleasedReturnValue([v14 objectAtIndexedSubscript:v15]);
        id v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetAtomicInstances]( self,  "persistedKnownSetAtomicInstances"));
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedEntry:v17 fromLocation:v7]);

        if (v19)
        {
          id v20 = [v19 secureCodedObjectForKey:@"setAtomicInstance" ofClass:objc_opt_class(MADAutoSetAtomicInstance)];
          id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
          id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
          {
            id v24 = (__CFString *)[v21 newSummaryWithoutEntryID];
            *(_DWORD *)int buf = 138544642;
            __int16 v37 = v33;
            __int16 v38 = 2114;
            __int16 v39 = @"E_LOD";
            __int16 v40 = 2048;
            __int16 v41 = (const __CFString *)(v15 + 1);
            __int16 v42 = 2048;
            id v14 = v34;
            __int16 v43 = v35;
            __int16 v44 = 2114;
            __int16 v45 = v17;
            __int16 v46 = 2114;
            __int16 v47 = v24;
            _os_log_impl( &dword_0,  v23,  OS_LOG_TYPE_DEFAULT,  "\n#_%{public}@:%{public}@ (%ld of %ld) [%{public}@] | %{public}@",  buf,  0x3Eu);
          }
        }

        else
        {
          id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v21 = (void *)objc_claimAutoreleasedReturnValue([v25 oslog]);

          if (!os_log_type_enabled((os_log_t)v21, OS_LOG_TYPE_ERROR)) {
            goto LABEL_11;
          }
          id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager summary](self, "summary"));
          *(_DWORD *)int buf = v32;
          __int16 v37 = v7;
          __int16 v38 = 2114;
          __int16 v39 = @"SET_ATOMIC_INSTANCES";
          __int16 v40 = 2114;
          __int16 v41 = (const __CFString *)v23;
          __int16 v42 = 2114;
          __int16 v43 = v17;
          _os_log_error_impl( &dword_0,  (os_log_t)v21,  OS_LOG_TYPE_ERROR,  "{%{public}@:_logPersistedSetAtomicInstanceTableOfContents} | (%{public}@) %{public}@ | unable to load entry:%{public}@",  buf,  0x2Au);
        }

LABEL_11:
        objc_autoreleasePoolPop(v16);
        ++v15;
      }

      while (v35 != (__CFString *)v15);
    }

    BOOL v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger", v32));
    uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

    if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = (__CFString *)v33;
      goto LABEL_20;
    }

    *(_DWORD *)int buf = 138544642;
    __int16 v37 = @"PERSISTED";
    __int16 v38 = 2114;
    __int16 v39 = @"SET_ATOMIC_INSTANCES";
    __int16 v40 = 2114;
    __int16 v41 = @"ENTRY_LOAD";
    __int16 v42 = 2114;
    uint64_t v8 = (__CFString *)v33;
    __int16 v43 = (__CFString *)v33;
    __int16 v44 = 2114;
    __int16 v45 = @"<-----<";
    __int16 v46 = 2114;
    __int16 v47 = v7;
    unsigned __int8 v28 = "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} ...table-of-contents";
    BOOL v29 = v27;
    uint32_t v30 = 62;
    goto LABEL_18;
  }

  __int16 v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 oslog]);

  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 138545410;
    __int16 v37 = @"PERSISTED";
    __int16 v38 = 2114;
    __int16 v39 = @"SET_ATOMIC_INSTANCES";
    __int16 v40 = 2114;
    __int16 v41 = @"ENTRY_LOAD";
    __int16 v42 = 2114;
    __int16 v43 = v8;
    __int16 v44 = 2114;
    __int16 v45 = @">----->";
    __int16 v46 = 2114;
    __int16 v47 = v7;
    __int16 v48 = 2114;
    __int16 v49 = @"empty table-of-contents";
    __int16 v50 = 2114;
    __int16 v51 = v8;
    __int16 v52 = 2114;
    __int16 v53 = @"<-----<";
    unsigned __int8 v28 = "[%{public}@][%{public}@][%{public}@]\n"
          "#_%{public}@:%{public}@ {%{public}@} %{public}@\n"
          "#_%{public}@:%{public}@";
    BOOL v29 = v27;
    uint32_t v30 = 92;
LABEL_18:
    _os_log_impl(&dword_0, v29, OS_LOG_TYPE_DEFAULT, v28, buf, v30);
  }

- (void)_logPersistedSetDescriptor:(id)a3 forComponentType:(id)a4 operation:(id)a5 forPersistedEntryID:(id)a6 forClientRequest:(id)a7 withJobUUID:(id)a8 withSetDescriptor:(id)a9 message:(id)a10
{
  id v46 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  id v47 = a7;
  id v19 = a8;
  id v20 = a9;
  id v21 = a10;
  id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v23 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v22 extendedStateQueue]);
  dispatch_assert_queue_V2(v23);

  __int16 v48 = v18;
  if (v18)
  {
    id v44 = v17;
    uint64_t v24 = objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  v17));
    id v45 = v16;
    id v25 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  v16));
    BOOL v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

    BOOL v28 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);
    BOOL v29 = v47;
    __int16 v43 = self;
    if (v47)
    {
      uint32_t v30 = v46;
      __int16 v31 = (__CFString *)v24;
      if (v19)
      {
        if (v28)
        {
          __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([v20 summary]);
          id v33 = +[MADAutoAssetControlManager newSummaryForSetRequestMessage:includingSetAtomicInstance:]( &OBJC_CLASS___MADAutoAssetControlManager,  "newSummaryForSetRequestMessage:includingSetAtomicInstance:",  v47,  0LL);
          *(_DWORD *)int buf = 138547970;
          __int16 v50 = @"PERSISTED";
          __int16 v51 = 2114;
          id v52 = v45;
          __int16 v53 = 2114;
          id v54 = v44;
          __int16 v55 = 2114;
          __int16 v56 = v25;
          __int16 v57 = 2114;
          __int16 v58 = @">----->";
          __int16 v59 = 2114;
          id v60 = v46;
          __int16 v61 = 2114;
          id v62 = v21;
          __int16 v63 = 2114;
          __int16 v64 = v25;
          __int16 v65 = 2114;
          __int16 v66 = v31;
          __int16 v67 = 2114;
          id v68 = v48;
          __int16 v69 = 2114;
          __int16 v70 = v32;
          __int16 v71 = 2114;
          __int16 v72 = v25;
          __int16 v73 = 2114;
          __int16 v74 = v31;
          __int16 v75 = 2114;
          id v76 = v33;
          __int16 v77 = 2114;
          __int16 v78 = v25;
          __int16 v79 = 2114;
          __int16 v80 = v31;
          __int16 v81 = 2114;
          id v82 = v19;
          __int16 v83 = 2114;
          __int16 v84 = v25;
          __int16 v85 = 2114;
          __int16 v86 = @"<-----<";
          id v34 = "[%{public}@][%{public}@][%{public}@]\n"
                "#_%{public}@:%{public}@ {%{public}@} %{public}@\n"
                "#_%{public}@:(%{public}@) [%{public}@] | %{public}@\n"
                "#_%{public}@:(%{public}@) clientRequest:%{public}@\n"
                "#_%{public}@:(%{public}@) jobUUID:%{public}@\n"
                "#_%{public}@:%{public}@";
          __int16 v35 = v27;
          uint32_t v36 = 192;
LABEL_12:
          _os_log_impl(&dword_0, v35, OS_LOG_TYPE_DEFAULT, v34, buf, v36);

          goto LABEL_13;
        }
      }

      else if (v28)
      {
        __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([v20 summary]);
        id v33 = +[MADAutoAssetControlManager newSummaryForSetRequestMessage:includingSetAtomicInstance:]( &OBJC_CLASS___MADAutoAssetControlManager,  "newSummaryForSetRequestMessage:includingSetAtomicInstance:",  v47,  0LL);
        *(_DWORD *)int buf = 138547202;
        __int16 v50 = @"PERSISTED";
        __int16 v51 = 2114;
        id v52 = v45;
        __int16 v53 = 2114;
        id v54 = v44;
        __int16 v55 = 2114;
        __int16 v56 = v25;
        __int16 v57 = 2114;
        __int16 v58 = @">----->";
        __int16 v59 = 2114;
        id v60 = v46;
        __int16 v61 = 2114;
        id v62 = v21;
        __int16 v63 = 2114;
        __int16 v64 = v25;
        __int16 v65 = 2114;
        __int16 v66 = v31;
        __int16 v67 = 2114;
        id v68 = v48;
        __int16 v69 = 2114;
        __int16 v70 = v32;
        __int16 v71 = 2114;
        __int16 v72 = v25;
        __int16 v73 = 2114;
        __int16 v74 = v31;
        __int16 v75 = 2114;
        id v76 = v33;
        __int16 v77 = 2114;
        __int16 v78 = v25;
        __int16 v79 = 2114;
        __int16 v80 = @"<-----<";
        id v34 = "[%{public}@][%{public}@][%{public}@]\n"
              "#_%{public}@:%{public}@ {%{public}@} %{public}@\n"
              "#_%{public}@:(%{public}@) [%{public}@] | %{public}@\n"
              "#_%{public}@:(%{public}@) clientRequest:%{public}@\n"
              "#_%{public}@:%{public}@";
        __int16 v35 = v27;
        uint32_t v36 = 162;
        goto LABEL_12;
      }
    }

    else
    {
      uint32_t v30 = v46;
      if (!v19)
      {
        __int16 v31 = (__CFString *)v24;
        if (v28)
        {
          __int16 v42 = (void *)objc_claimAutoreleasedReturnValue([v20 summary]);
          *(_DWORD *)int buf = 138546434;
          __int16 v50 = @"PERSISTED";
          __int16 v51 = 2114;
          id v52 = v45;
          __int16 v53 = 2114;
          id v54 = v44;
          __int16 v55 = 2114;
          __int16 v56 = v25;
          __int16 v57 = 2114;
          __int16 v58 = @">----->";
          __int16 v59 = 2114;
          id v60 = v46;
          __int16 v61 = 2114;
          id v62 = v21;
          __int16 v63 = 2114;
          __int16 v64 = v25;
          __int16 v65 = 2114;
          __int16 v66 = (__CFString *)v24;
          __int16 v67 = 2114;
          id v68 = v18;
          __int16 v69 = 2114;
          __int16 v70 = v42;
          __int16 v71 = 2114;
          __int16 v72 = v25;
          __int16 v73 = 2114;
          __int16 v74 = @"<-----<";
          _os_log_impl( &dword_0,  v27,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);

          BOOL v29 = 0LL;
          __int16 v31 = (__CFString *)v24;
          uint32_t v30 = v46;
        }

        goto LABEL_14;
      }

      __int16 v31 = (__CFString *)v24;
      if (v28)
      {
        __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([v20 summary]);
        *(_DWORD *)int buf = 138547202;
        __int16 v50 = @"PERSISTED";
        __int16 v51 = 2114;
        id v52 = v45;
        __int16 v53 = 2114;
        id v54 = v44;
        __int16 v55 = 2114;
        __int16 v56 = v25;
        __int16 v57 = 2114;
        __int16 v58 = @">----->";
        __int16 v59 = 2114;
        id v60 = v46;
        __int16 v61 = 2114;
        id v62 = v21;
        __int16 v63 = 2114;
        __int16 v64 = v25;
        __int16 v65 = 2114;
        __int16 v66 = v31;
        __int16 v67 = 2114;
        id v68 = v18;
        __int16 v69 = 2114;
        __int16 v70 = v32;
        __int16 v71 = 2114;
        __int16 v72 = v25;
        __int16 v73 = 2114;
        __int16 v74 = v31;
        __int16 v75 = 2114;
        id v76 = v19;
        __int16 v77 = 2114;
        __int16 v78 = v25;
        __int16 v79 = 2114;
        __int16 v80 = @"<-----<";
        _os_log_impl( &dword_0,  v27,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:(%{public}@) jobUUID:%{public}@\n #_%{public}@:%{public}@",  buf,  0xA2u);
LABEL_13:
      }
    }

- (void)_logPersistedSetDescriptorRemoved:(id)a3 forComponentType:(id)a4 removedPersistedEntryID:(id)a5 removedSetDescriptor:(id)a6 message:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  id v19 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  @"ENTRY_REMOVE"));
  id v20 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  v13));
  if (v14)
  {
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

    BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);
    if (v15)
    {
      if (v23)
      {
        uint64_t v24 = (__CFString *)[v15 newSummaryWithoutEntryID];
        *(_DWORD *)int buf = 138546434;
        id v33 = @"PERSISTED";
        __int16 v34 = 2114;
        id v35 = v13;
        __int16 v36 = 2114;
        __int16 v37 = @"ENTRY_REMOVE";
        __int16 v38 = 2114;
        __int16 v39 = v20;
        __int16 v40 = 2114;
        __int16 v41 = @">----->";
        __int16 v42 = 2114;
        id v43 = v12;
        __int16 v44 = 2114;
        id v45 = v16;
        __int16 v46 = 2114;
        id v47 = v20;
        __int16 v48 = 2114;
        __int16 v49 = v19;
        __int16 v50 = 2114;
        id v51 = v14;
        __int16 v52 = 2114;
        __int16 v53 = v24;
        __int16 v54 = 2114;
        __int16 v55 = v20;
        __int16 v56 = 2114;
        __int16 v57 = @"<-----<";
        _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
      }
    }

    else if (v23)
    {
      *(_DWORD *)int buf = 138546178;
      id v33 = @"PERSISTED";
      __int16 v34 = 2114;
      id v35 = v13;
      __int16 v36 = 2114;
      __int16 v37 = @"ENTRY_REMOVE";
      __int16 v38 = 2114;
      __int16 v39 = v20;
      __int16 v40 = 2114;
      __int16 v41 = @">----->";
      __int16 v42 = 2114;
      id v43 = v12;
      __int16 v44 = 2114;
      id v45 = v16;
      __int16 v46 = 2114;
      id v47 = v20;
      __int16 v48 = 2114;
      __int16 v49 = v19;
      __int16 v50 = 2114;
      id v51 = v14;
      __int16 v52 = 2114;
      __int16 v53 = v20;
      __int16 v54 = 2114;
      __int16 v55 = @"<-----<";
      _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@]\n #_%{public}@:%{public}@",  buf,  0x7Au);
    }
  }

  else
  {
    __int16 v31 = v19;
    id v25 = v12;
    BOOL v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v26 diag]);
    BOOL v28 = objc_alloc(&OBJC_CLASS___NSString);
    if (v15) {
      BOOL v29 = (__CFString *)objc_claimAutoreleasedReturnValue([v15 summary]);
    }
    else {
      BOOL v29 = @"N";
    }
    uint32_t v30 = -[NSString initWithFormat:]( v28,  "initWithFormat:",  @"{%@:_logPersistedSetDescriptorRemoved} %@ | no persistedEntryID to remove | %@ | removedSetDescriptor:%@",  v25,  v13,  v16,  v29);
    [v27 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v30 withResult:6110 withError:0];

    if (v15) {
    id v12 = v25;
    }
    id v19 = v31;
  }
}

- (void)_logPersistedSetDescriptorTableOfContents:(id)a3 forComponentType:(id)a4
{
  id v6 = (__CFString *)a3;
  id v7 = (__CFString *)a4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int16 v39 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  v7));
  unsigned int v10 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  @"SET_ACTIVE_JOB_DESCRIPTORS");
  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
  }

  else
  {
    if (!+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v7,  @"SET_DOWNLOADED_DESCRIPTORS"))
    {
LABEL_22:
      uint32_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      __int16 v31 = (void *)objc_claimAutoreleasedReturnValue([v30 diag]);
      __int128 v32 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:_logPersistedSetDescriptorTableOfContents} | no persisted-state for componentType:%@",  v6,  v7);
      [v31 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v32 withResult:6110 withError:0];

      goto LABEL_30;
    }

    id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
  }

  id v12 = v11;
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 persistedEntryIDs:v6]);

  if (!v13) {
    goto LABEL_22;
  }
  if ([v13 count])
  {
    id v14 = (__CFString *)[v13 count];
    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 oslog]);

    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138544642;
      id v43 = @"PERSISTED";
      __int16 v44 = 2114;
      id v45 = v7;
      __int16 v46 = 2114;
      id v47 = @"ENTRY_LOAD";
      __int16 v48 = 2114;
      __int16 v49 = v39;
      __int16 v50 = 2114;
      id v51 = @">----->";
      __int16 v52 = 2114;
      __int16 v53 = v6;
      _os_log_impl( &dword_0,  v16,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} table-of-contents...",  buf,  0x3Eu);
    }

    __int16 v37 = v7;

    if ((uint64_t)v14 >= 1)
    {
      uint64_t v17 = 0LL;
      __int16 v38 = v14;
      do
      {
        id v18 = objc_autoreleasePoolPush();
        uint64_t v19 = objc_claimAutoreleasedReturnValue([v13 objectAtIndexedSubscript:v17]);
        if (v10) {
          id v20 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedActiveJobSetDescriptors]( self,  "persistedActiveJobSetDescriptors"));
        }
        else {
          id v20 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
        }
        id v21 = v20;
        __int16 v41 = (__CFString *)v19;
        id v22 = (void *)objc_claimAutoreleasedReturnValue([v20 persistedEntry:v19 fromLocation:v6]);

        if (v22)
        {
          __int16 v40 = v18;
          id v23 = [v22 secureCodedObjectForKey:@"assetSetDescriptor" ofClass:objc_opt_class(MADAutoSetDescriptor)];
          uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
          id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          BOOL v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

          if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v27 = (__CFString *)[v24 newSummaryWithoutEntryID];
            *(_DWORD *)int buf = 138544642;
            id v43 = v39;
            __int16 v44 = 2114;
            id v45 = @"E_LOD";
            __int16 v46 = 2048;
            id v47 = (const __CFString *)(v17 + 1);
            id v14 = v38;
            __int16 v48 = 2048;
            __int16 v49 = v38;
            __int16 v50 = 2114;
            id v51 = v41;
            __int16 v52 = 2114;
            __int16 v53 = v27;
            _os_log_impl( &dword_0,  v26,  OS_LOG_TYPE_DEFAULT,  "\n#_%{public}@:%{public}@ (%ld of %ld) [%{public}@] | %{public}@",  buf,  0x3Eu);
          }

          id v18 = v40;
        }

        else
        {
          BOOL v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v28 oslog]);

          if (os_log_type_enabled((os_log_t)v24, OS_LOG_TYPE_ERROR))
          {
            BOOL v29 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager summary](self, "summary"));
            *(_DWORD *)int buf = 138544130;
            id v43 = v6;
            __int16 v44 = 2114;
            id v45 = v37;
            __int16 v46 = 2114;
            id v47 = v29;
            __int16 v48 = 2114;
            __int16 v49 = v41;
            _os_log_error_impl( &dword_0,  (os_log_t)v24,  OS_LOG_TYPE_ERROR,  "{%{public}@:_logPersistedSetDescriptorTableOfContents} | (%{public}@) %{public}@ | unable to load entry:%{public}@",  buf,  0x2Au);
          }
        }

        objc_autoreleasePoolPop(v18);
        ++v17;
      }

      while (v14 != (__CFString *)v17);
    }

    id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int16 v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

    id v7 = (__CFString *)v37;
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138544642;
      id v43 = @"PERSISTED";
      __int16 v44 = 2114;
      id v45 = v37;
      __int16 v46 = 2114;
      id v47 = @"ENTRY_LOAD";
      __int16 v48 = 2114;
      __int16 v49 = v39;
      __int16 v50 = 2114;
      id v51 = @"<-----<";
      __int16 v52 = 2114;
      __int16 v53 = v6;
      _os_log_impl( &dword_0,  v34,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} ...table-of-contents",  buf,  0x3Eu);
    }
  }

  else
  {
    id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int16 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138545410;
      id v43 = @"PERSISTED";
      __int16 v44 = 2114;
      id v45 = v7;
      __int16 v46 = 2114;
      id v47 = @"ENTRY_LOAD";
      __int16 v48 = 2114;
      __int16 v49 = v39;
      __int16 v50 = 2114;
      id v51 = @">----->";
      __int16 v52 = 2114;
      __int16 v53 = v6;
      __int16 v54 = 2114;
      __int16 v55 = @"empty table-of-contents";
      __int16 v56 = 2114;
      __int16 v57 = v39;
      __int16 v58 = 2114;
      __int16 v59 = @"<-----<";
      _os_log_impl( &dword_0,  v36,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} %{public}@\n#_%{public}@:%{public}@",  buf,  0x5Cu);
    }
  }

LABEL_30:
}

- (id)locateDownloadedByFullSelector:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 persistedEntryID]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  LODWORD(OUTLINED_FUNCTION_0( &dword_0,  v0,  v1,  "{_initializeAutoControl} AutoControlManager FSM has already been initialized | MA_MILESTONE",  v2,  v3,  v4,  v5, v6) = [v8 persistedEntryAlreadyExists:v7 fromLocation:@"locateDownloadedByFullSelector"];

  if ((_DWORD)v6)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntry:v7 fromLocation:@"locateDownloadedByFullSelector"]);

    if (!v10)
    {
      id v14 = 0LL;
LABEL_13:

      goto LABEL_14;
    }

    id v11 = [v10 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
    id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    id v13 = v12;
    if (v12)
    {
      if ([v12 isOnFilesystem])
      {
        id v14 = v13;
LABEL_12:

        goto LABEL_13;
      }
    }

    else
    {
      id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 oslog]);

      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager locateDownloadedByFullSelector:].cold.1();
      }
    }

    id v14 = 0LL;
    goto LABEL_12;
  }

  id v14 = 0LL;
LABEL_14:

  return v14;
}

- (id)locateDownloadedNewBySelectorForAssetType:(id)a3
{
  id v27 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"locateDownloadedNewAllBySelector"]);

  BOOL v26 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  if ([v7 count])
  {
    __int128 v31 = 0u;
    __int128 v32 = 0u;
    __int128 v29 = 0u;
    __int128 v30 = 0u;
    id v25 = v7;
    id obj = v7;
    id v8 = [obj countByEnumeratingWithState:&v29 objects:v35 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v30;
      do
      {
        for (uint64_t i = 0LL; i != v9; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v30 != v10) {
            objc_enumerationMutation(obj);
          }
          uint64_t v12 = *(void *)(*((void *)&v29 + 1) + 8LL * (void)i);
          id v13 = objc_autoreleasePoolPush();
          id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
          id v15 = (void *)objc_claimAutoreleasedReturnValue( [v14 persistedEntry:v12 fromLocation:@"locateDownloadedNewBySelectorForAssetType"]);

          if (v15)
          {
            id v16 = [v15 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
            uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
            id v18 = v17;
            if (v17)
            {
              if ([v17 isOnFilesystem])
              {
                uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 assetType]);
                unsigned int v20 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v19, v27);

                if (v20) {
                  -[NSMutableDictionary setSafeObject:forKey:](v26, "setSafeObject:forKey:", v18, v12);
                }
              }
            }

            else
            {
              id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

              if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)int buf = 138543362;
                uint64_t v34 = v12;
                _os_log_error_impl( &dword_0,  v23,  OS_LOG_TYPE_ERROR,  "{locateDownloadedNewBySelectorForAssetType} | no auto-asset-descriptor entry found for entry:%{public}@",  buf,  0xCu);
              }
            }
          }

          else
          {
            id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v18 = (void *)objc_claimAutoreleasedReturnValue([v21 oslog]);

            if (os_log_type_enabled((os_log_t)v18, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)int buf = 138543362;
              uint64_t v34 = v12;
              _os_log_error_impl( &dword_0,  (os_log_t)v18,  OS_LOG_TYPE_ERROR,  "{locateDownloadedNewBySelectorForAssetType} | unable to determine previous status for entry:%{public}@",  buf,  0xCu);
            }
          }

          objc_autoreleasePoolPop(v13);
        }

        id v9 = [obj countByEnumeratingWithState:&v29 objects:v35 count:16];
      }

      while (v9);
    }

    id v7 = v25;
  }

  return v26;
}

- (id)locateDownloadedNewAllBySelector
{
  return -[MADAutoAssetControlManager locateDownloadedNewBySelectorLimitedToStaging:]( self,  "locateDownloadedNewBySelectorLimitedToStaging:",  0LL);
}

- (id)locateDownloadedNewBySelectorLimitedToStaging:(BOOL)a3
{
  BOOL v27 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"locateDownloadedNewAllBySelector"]);

  BOOL v26 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  if ([v7 count])
  {
    __int128 v32 = 0u;
    __int128 v33 = 0u;
    __int128 v30 = 0u;
    __int128 v31 = 0u;
    id v25 = v7;
    id v8 = v7;
    id v29 = [v8 countByEnumeratingWithState:&v30 objects:v36 count:16];
    if (v29)
    {
      id v9 = @"locateDownloadedNewAllBySelector";
      uint64_t v10 = *(void *)v31;
      uint64_t v28 = *(void *)v31;
      do
      {
        for (uint64_t i = 0LL; i != v29; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v31 != v10) {
            objc_enumerationMutation(v8);
          }
          uint64_t v12 = *(void *)(*((void *)&v30 + 1) + 8LL * (void)i);
          id v13 = objc_autoreleasePoolPush();
          id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 persistedEntry:v12 fromLocation:v9]);

          if (v15)
          {
            id v16 = [v15 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
            uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
            id v18 = v17;
            if (v17)
            {
              if ([v17 isOnFilesystem]
                && (!v27 || [v18 preSoftwareUpdateAssetStaging]))
              {
                -[NSMutableDictionary setSafeObject:forKey:](v26, "setSafeObject:forKey:", v18, v12);
              }
            }

            else
            {
              unsigned int v20 = v9;
              id v21 = v8;
              id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
              id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

              if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)int buf = 138543362;
                uint64_t v35 = v12;
                _os_log_error_impl( &dword_0,  v23,  OS_LOG_TYPE_ERROR,  "{locateDownloadedNewAllBySelector} | no auto-asset-descriptor entry found for entry:%{public}@",  buf,  0xCu);
              }

              id v8 = v21;
              id v9 = v20;
              uint64_t v10 = v28;
            }
          }

          else
          {
            uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v18 = (void *)objc_claimAutoreleasedReturnValue([v19 oslog]);

            if (os_log_type_enabled((os_log_t)v18, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)int buf = 138543362;
              uint64_t v35 = v12;
              _os_log_error_impl( &dword_0,  (os_log_t)v18,  OS_LOG_TYPE_ERROR,  "{locateDownloadedNewAllBySelector} | unable to determine previous status for entry:%{public}@",  buf,  0xCu);
            }
          }

          objc_autoreleasePoolPop(v13);
        }

        id v29 = [v8 countByEnumeratingWithState:&v30 objects:v36 count:16];
      }

      while (v29);
    }

    id v7 = v25;
  }

  return v26;
}

- (id)locateActiveJobDescriptorBySelector:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 persistedEntryID]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
  LODWORD(OUTLINED_FUNCTION_0( &dword_0,  v0,  v1,  "{_initializeAutoControl} AutoControlManager FSM has already been initialized | MA_MILESTONE",  v2,  v3,  v4,  v5, v6) = [v8 persistedEntryAlreadyExists:v7 fromLocation:@"locateActiveJobDescriptorBySelector"];

  if ((_DWORD)v6)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedActiveJobs](self, "persistedActiveJobs"));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntry:v7 fromLocation:@"locateActiveJobDescriptorBySelector"]);

    if (v10)
    {
      id v11 = [v10 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    }

    else
    {
      id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 diag]);
      id v15 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{locateActiveJobDescriptorBySelector} no jobPersistedState | persistedEntryID:%@",  v7);
      [v14 trackAnomaly:@"AUTO-CONTROL" forReason:v15 withResult:6101 withError:0];

      uint64_t v12 = 0LL;
    }
  }

  else
  {
    uint64_t v12 = 0LL;
  }

  return v12;
}

- (id)_specifierVersionNamesForSetDescriptor:(id)a3
{
  id v3 = a3;
  id v4 = (id)objc_claimAutoreleasedReturnValue([v3 latestDowloadedAtomicInstanceEntries]);
  if (v4 || (id v4 = (id)objc_claimAutoreleasedReturnValue([v3 discoveredAtomicEntries])) != 0)
  {
    id v19 = v3;
    id v5 = -[NSMutableString initWithString:](objc_alloc(&OBJC_CLASS___NSMutableString), "initWithString:", @"(");
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    __int128 v23 = 0u;
    id v4 = v4;
    id v6 = [v4 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v21;
      char v9 = 1;
      do
      {
        for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v21 != v8) {
            objc_enumerationMutation(v4);
          }
          id v11 = *(void **)(*((void *)&v20 + 1) + 8LL * (void)i);
          if (v11)
          {
            if ((v9 & 1) == 0) {
              -[NSMutableString appendString:](v5, "appendString:", @",");
            }
            uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 fullAssetSelector]);
            id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 assetVersion]);

            id v14 = (void *)objc_claimAutoreleasedReturnValue([v11 fullAssetSelector]);
            id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSpecifier]);
            if (v13)
            {
              id v16 = (void *)objc_claimAutoreleasedReturnValue([v11 fullAssetSelector]);
              uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);
              -[NSMutableString appendFormat:](v5, "appendFormat:", @"%@<%@>", v15, v17);
            }

            else
            {
              -[NSMutableString appendString:](v5, "appendString:", v15);
            }

            char v9 = 0;
          }
        }

        id v7 = [v4 countByEnumeratingWithState:&v20 objects:v24 count:16];
      }

      while (v7);
    }

    -[NSMutableString appendString:](v5, "appendString:", @""));
    id v3 = v19;
  }

  else
  {
    id v5 = 0LL;
  }

  return v5;
}

- (id)_specifierVersionNamesForAtomicInstance:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a3 instanceEntries]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _specifierVersionNamesForSetEntries:]( self,  "_specifierVersionNamesForSetEntries:",  v4));

  return v5;
}

- (id)_specifierVersionNamesForSetConfiguration:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a3 autoAssetEntries]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _specifierVersionNamesForSetEntries:]( self,  "_specifierVersionNamesForSetEntries:",  v4));

  return v5;
}

- (id)_specifierVersionNamesForSetEntries:(id)a3
{
  id v3 = a3;
  if (v3)
  {
    id v4 = -[NSMutableString initWithString:](objc_alloc(&OBJC_CLASS___NSMutableString), "initWithString:", @"(");
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    __int128 v23 = 0u;
    id v19 = v3;
    id v5 = v3;
    id v6 = [v5 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v21;
      char v9 = 1;
      do
      {
        for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v21 != v8) {
            objc_enumerationMutation(v5);
          }
          id v11 = *(void **)(*((void *)&v20 + 1) + 8LL * (void)i);
          if (v11)
          {
            if ((v9 & 1) == 0) {
              -[NSMutableString appendString:](v4, "appendString:", @",");
            }
            uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSelector]);
            id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 assetVersion]);

            id v14 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSelector]);
            id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSpecifier]);
            if (v13)
            {
              id v16 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSelector]);
              uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);
              -[NSMutableString appendFormat:](v4, "appendFormat:", @"%@(%@)", v15, v17);
            }

            else
            {
              -[NSMutableString appendString:](v4, "appendString:", v15);
            }

            char v9 = 0;
          }
        }

        id v7 = [v5 countByEnumeratingWithState:&v20 objects:v24 count:16];
      }

      while (v7);
    }

    -[NSMutableString appendString:](v4, "appendString:", @""));
    id v3 = v19;
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

- (void)_logPersistedSetTarget:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withSetTarget:(id)a6 message:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  if (v14)
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  v13));
    __int128 v20 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"SET_TARGETS"));
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int128 v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      id v23 = [v15 newSummaryWithoutEntryID];
      *(_DWORD *)int buf = 138546434;
      uint64_t v28 = @"PERSISTED";
      __int16 v29 = 2114;
      __int128 v30 = @"SET_TARGETS";
      __int16 v31 = 2114;
      id v32 = v13;
      __int16 v33 = 2114;
      uint64_t v34 = v20;
      __int16 v35 = 2114;
      __int16 v36 = @">----->";
      __int16 v37 = 2114;
      id v38 = v12;
      __int16 v39 = 2114;
      id v40 = v16;
      __int16 v41 = 2114;
      __int16 v42 = v20;
      __int16 v43 = 2114;
      __int16 v44 = v19;
      __int16 v45 = 2114;
      id v46 = v14;
      __int16 v47 = 2114;
      id v48 = v23;
      __int16 v49 = 2114;
      __int16 v50 = v20;
      __int16 v51 = 2114;
      __int16 v52 = @"<-----<";
      _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
    }
  }

  else
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v19 diag]);
    uint64_t v24 = objc_alloc(&OBJC_CLASS___NSString);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
    BOOL v26 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"{%@:_logPersistedSetTarget} %@:%@ | no persistedEntryID | %@ | setTarget:%@",  v12,  @"SET_TARGETS",  v13,  v16,  v25);
    [v20 trackAnomaly:@"AUTO-CONTROL" forReason:v26 withResult:6110 withError:0];
  }
}

- (void)_logPersistedSetTargetRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedSetTarget:(id)a5 message:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  id v16 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  @"ENTRY_REMOVE"));
  uint64_t v17 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"SET_TARGETS"));
  if (v11)
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
    if (v12)
    {
      if (v20)
      {
        __int128 v21 = (__CFString *)[v12 newSummaryWithoutEntryID];
        *(_DWORD *)int buf = 138546434;
        __int128 v30 = @"PERSISTED";
        __int16 v31 = 2114;
        id v32 = @"SET_TARGETS";
        __int16 v33 = 2114;
        uint64_t v34 = @"ENTRY_REMOVE";
        __int16 v35 = 2114;
        __int16 v36 = v17;
        __int16 v37 = 2114;
        id v38 = @">----->";
        __int16 v39 = 2114;
        id v40 = v10;
        __int16 v41 = 2114;
        id v42 = v13;
        __int16 v43 = 2114;
        __int16 v44 = v17;
        __int16 v45 = 2114;
        id v46 = v16;
        __int16 v47 = 2114;
        id v48 = v11;
        __int16 v49 = 2114;
        __int16 v50 = v21;
        __int16 v51 = 2114;
        __int16 v52 = v17;
        __int16 v53 = 2114;
        __int16 v54 = @"<-----<";
        _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
      }
    }

    else if (v20)
    {
      *(_DWORD *)int buf = 138546178;
      __int128 v30 = @"PERSISTED";
      __int16 v31 = 2114;
      id v32 = @"SET_TARGETS";
      __int16 v33 = 2114;
      uint64_t v34 = @"ENTRY_REMOVE";
      __int16 v35 = 2114;
      __int16 v36 = v17;
      __int16 v37 = 2114;
      id v38 = @">----->";
      __int16 v39 = 2114;
      id v40 = v10;
      __int16 v41 = 2114;
      id v42 = v13;
      __int16 v43 = 2114;
      __int16 v44 = v17;
      __int16 v45 = 2114;
      id v46 = v16;
      __int16 v47 = 2114;
      id v48 = v11;
      __int16 v49 = 2114;
      __int16 v50 = v17;
      __int16 v51 = 2114;
      __int16 v52 = @"<-----<";
      _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@]\n #_%{public}@:%{public}@",  buf,  0x7Au);
    }
  }

  else
  {
    uint64_t v28 = v16;
    id v22 = v10;
    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v23 diag]);
    id v25 = objc_alloc(&OBJC_CLASS___NSString);
    if (v12) {
      BOOL v26 = (__CFString *)objc_claimAutoreleasedReturnValue([v12 summary]);
    }
    else {
      BOOL v26 = @"N";
    }
    BOOL v27 = -[NSString initWithFormat:]( v25,  "initWithFormat:",  @"{%@:_logPersistedSetConfigurationRemoved} %@ | no persistedEntryID to remove | %@ | removedSetTarget:%@",  v22,  @"SET_TARGETS",  v13,  v26);
    [v24 trackAnomaly:@"AUTO-CONTROL" forReason:v27 withResult:6110 withError:0];

    if (v12) {
    id v10 = v22;
    }
    id v16 = v28;
  }
}

- (void)_logPersistedSetTargetTableOfContents:(id)a3
{
  id v4 = (__CFString *)a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = v4;
  uint64_t v8 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"SET_TARGETS"));
  char v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntryIDs:v4]);

  uint64_t v34 = v10;
  if ([v10 count])
  {
    __int16 v35 = (__CFString *)[v10 count];
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138544642;
      __int16 v37 = @"PERSISTED";
      __int16 v38 = 2114;
      __int16 v39 = @"SET_TARGETS";
      __int16 v40 = 2114;
      __int16 v41 = @"ENTRY_LOAD";
      __int16 v42 = 2114;
      __int16 v43 = v8;
      __int16 v44 = 2114;
      __int16 v45 = @">----->";
      __int16 v46 = 2114;
      __int16 v47 = v7;
      _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} table-of-contents...",  buf,  0x3Eu);
    }

    __int16 v33 = v8;

    id v14 = v10;
    if ((uint64_t)v35 >= 1)
    {
      uint64_t v15 = 0LL;
      *(void *)&__int128 v13 = 138544130LL;
      __int128 v32 = v13;
      do
      {
        id v16 = objc_autoreleasePoolPush();
        uint64_t v17 = (__CFString *)objc_claimAutoreleasedReturnValue([v14 objectAtIndexedSubscript:v15]);
        id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetTargets](self, "persistedSetTargets"));
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedEntry:v17 fromLocation:v7]);

        if (v19)
        {
          id v20 = [v19 secureCodedObjectForKey:@"setTarget" ofClass:objc_opt_class(MADAutoSetTarget)];
          __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
          id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v24 = (__CFString *)[v21 newSummaryWithoutEntryID];
            *(_DWORD *)int buf = 138544642;
            __int16 v37 = v33;
            __int16 v38 = 2114;
            __int16 v39 = @"E_LOD";
            __int16 v40 = 2048;
            __int16 v41 = (const __CFString *)(v15 + 1);
            __int16 v42 = 2048;
            id v14 = v34;
            __int16 v43 = v35;
            __int16 v44 = 2114;
            __int16 v45 = v17;
            __int16 v46 = 2114;
            __int16 v47 = v24;
            _os_log_impl( &dword_0,  v23,  OS_LOG_TYPE_DEFAULT,  "\n#_%{public}@:%{public}@ (%ld of %ld) [%{public}@] | %{public}@",  buf,  0x3Eu);
          }
        }

        else
        {
          id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v25 oslog]);

          if (!os_log_type_enabled((os_log_t)v21, OS_LOG_TYPE_ERROR)) {
            goto LABEL_11;
          }
          id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager summary](self, "summary"));
          *(_DWORD *)int buf = v32;
          __int16 v37 = v7;
          __int16 v38 = 2114;
          __int16 v39 = @"SET_TARGETS";
          __int16 v40 = 2114;
          __int16 v41 = (const __CFString *)v23;
          __int16 v42 = 2114;
          __int16 v43 = v17;
          _os_log_error_impl( &dword_0,  (os_log_t)v21,  OS_LOG_TYPE_ERROR,  "{%{public}@:_logPersistedSetTargetTableOfContents} | (%{public}@) %{public}@ | unable to load entry:%{public}@",  buf,  0x2Au);
        }

LABEL_11:
        objc_autoreleasePoolPop(v16);
        ++v15;
      }

      while (v35 != (__CFString *)v15);
    }

    BOOL v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger", v32));
    BOOL v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

    if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = (__CFString *)v33;
      goto LABEL_20;
    }

    *(_DWORD *)int buf = 138544642;
    __int16 v37 = @"PERSISTED";
    __int16 v38 = 2114;
    __int16 v39 = @"SET_TARGETS";
    __int16 v40 = 2114;
    __int16 v41 = @"ENTRY_LOAD";
    __int16 v42 = 2114;
    uint64_t v8 = (__CFString *)v33;
    __int16 v43 = (__CFString *)v33;
    __int16 v44 = 2114;
    __int16 v45 = @"<-----<";
    __int16 v46 = 2114;
    __int16 v47 = v7;
    uint64_t v28 = "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} ...table-of-contents";
    __int16 v29 = v27;
    uint32_t v30 = 62;
    goto LABEL_18;
  }

  __int16 v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  BOOL v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 oslog]);

  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 138545410;
    __int16 v37 = @"PERSISTED";
    __int16 v38 = 2114;
    __int16 v39 = @"SET_TARGETS";
    __int16 v40 = 2114;
    __int16 v41 = @"ENTRY_LOAD";
    __int16 v42 = 2114;
    __int16 v43 = v8;
    __int16 v44 = 2114;
    __int16 v45 = @">----->";
    __int16 v46 = 2114;
    __int16 v47 = v7;
    __int16 v48 = 2114;
    __int16 v49 = @"empty table-of-contents";
    __int16 v50 = 2114;
    __int16 v51 = v8;
    __int16 v52 = 2114;
    __int16 v53 = @"<-----<";
    uint64_t v28 = "[%{public}@][%{public}@][%{public}@]\n"
          "#_%{public}@:%{public}@ {%{public}@} %{public}@\n"
          "#_%{public}@:%{public}@";
    __int16 v29 = v27;
    uint32_t v30 = 92;
LABEL_18:
    _os_log_impl(&dword_0, v29, OS_LOG_TYPE_DEFAULT, v28, buf, v30);
  }

- (void)_logPersistedSetLookupResult:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withSetLookupResult:(id)a6 message:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  if (v14)
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  v13));
    id v20 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"SET_LOOKUP_RESULTS"));
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      id v23 = [v15 newSummaryWithoutEntryID];
      *(_DWORD *)int buf = 138546434;
      uint64_t v28 = @"PERSISTED";
      __int16 v29 = 2114;
      uint32_t v30 = @"SET_LOOKUP_RESULTS";
      __int16 v31 = 2114;
      id v32 = v13;
      __int16 v33 = 2114;
      uint64_t v34 = v20;
      __int16 v35 = 2114;
      __int16 v36 = @">----->";
      __int16 v37 = 2114;
      id v38 = v12;
      __int16 v39 = 2114;
      id v40 = v16;
      __int16 v41 = 2114;
      __int16 v42 = v20;
      __int16 v43 = 2114;
      __int16 v44 = v19;
      __int16 v45 = 2114;
      id v46 = v14;
      __int16 v47 = 2114;
      id v48 = v23;
      __int16 v49 = 2114;
      __int16 v50 = v20;
      __int16 v51 = 2114;
      __int16 v52 = @"<-----<";
      _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
    }
  }

  else
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 diag]);
    uint64_t v24 = objc_alloc(&OBJC_CLASS___NSString);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
    BOOL v26 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"{%@:_logPersistedSetLookupResult} %@:%@ | no persistedEntryID | %@ | setLookupResult:%@",  v12,  @"SET_LOOKUP_RESULTS",  v13,  v16,  v25);
    [v20 trackAnomaly:@"AUTO-CONTROL" forReason:v26 withResult:6110 withError:0];
  }
}

- (void)_logPersistedSetLookupResultRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedSetLookupResult:(id)a5 message:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  id v16 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  @"ENTRY_REMOVE"));
  uint64_t v17 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"SET_LOOKUP_RESULTS"));
  if (v11)
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
    if (v12)
    {
      if (v20)
      {
        __int128 v21 = (__CFString *)[v12 newSummaryWithoutEntryID];
        *(_DWORD *)int buf = 138546434;
        uint32_t v30 = @"PERSISTED";
        __int16 v31 = 2114;
        id v32 = @"SET_LOOKUP_RESULTS";
        __int16 v33 = 2114;
        uint64_t v34 = @"ENTRY_REMOVE";
        __int16 v35 = 2114;
        __int16 v36 = v17;
        __int16 v37 = 2114;
        id v38 = @">----->";
        __int16 v39 = 2114;
        id v40 = v10;
        __int16 v41 = 2114;
        id v42 = v13;
        __int16 v43 = 2114;
        __int16 v44 = v17;
        __int16 v45 = 2114;
        id v46 = v16;
        __int16 v47 = 2114;
        id v48 = v11;
        __int16 v49 = 2114;
        __int16 v50 = v21;
        __int16 v51 = 2114;
        __int16 v52 = v17;
        __int16 v53 = 2114;
        __int16 v54 = @"<-----<";
        _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
      }
    }

    else if (v20)
    {
      *(_DWORD *)int buf = 138546178;
      uint32_t v30 = @"PERSISTED";
      __int16 v31 = 2114;
      id v32 = @"SET_LOOKUP_RESULTS";
      __int16 v33 = 2114;
      uint64_t v34 = @"ENTRY_REMOVE";
      __int16 v35 = 2114;
      __int16 v36 = v17;
      __int16 v37 = 2114;
      id v38 = @">----->";
      __int16 v39 = 2114;
      id v40 = v10;
      __int16 v41 = 2114;
      id v42 = v13;
      __int16 v43 = 2114;
      __int16 v44 = v17;
      __int16 v45 = 2114;
      id v46 = v16;
      __int16 v47 = 2114;
      id v48 = v11;
      __int16 v49 = 2114;
      __int16 v50 = v17;
      __int16 v51 = 2114;
      __int16 v52 = @"<-----<";
      _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@]\n #_%{public}@:%{public}@",  buf,  0x7Au);
    }
  }

  else
  {
    uint64_t v28 = v16;
    id v22 = v10;
    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v23 diag]);
    id v25 = objc_alloc(&OBJC_CLASS___NSString);
    if (v12) {
      BOOL v26 = (__CFString *)objc_claimAutoreleasedReturnValue([v12 summary]);
    }
    else {
      BOOL v26 = @"N";
    }
    BOOL v27 = -[NSString initWithFormat:]( v25,  "initWithFormat:",  @"{%@:_logPersistedSetLookupResultRemoved} %@ | no persistedEntryID to remove | %@ | removedSetLookupResult:%@",  v22,  @"SET_LOOKUP_RESULTS",  v13,  v26);
    [v24 trackAnomaly:@"AUTO-CONTROL" forReason:v27 withResult:6110 withError:0];

    if (v12) {
    id v10 = v22;
    }
    id v16 = v28;
  }
}

- (void)_logPersistedSetLookupResultTableOfContents:(id)a3
{
  id v4 = (__CFString *)a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = v4;
  uint64_t v8 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"SET_LOOKUP_RESULTS"));
  char v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 persistedEntryIDs:v4]);

  uint64_t v34 = v10;
  if ([v10 count])
  {
    __int16 v35 = (__CFString *)[v10 count];
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 138544642;
      __int16 v37 = @"PERSISTED";
      __int16 v38 = 2114;
      __int16 v39 = @"SET_LOOKUP_RESULTS";
      __int16 v40 = 2114;
      __int16 v41 = @"ENTRY_LOAD";
      __int16 v42 = 2114;
      __int16 v43 = v8;
      __int16 v44 = 2114;
      __int16 v45 = @">----->";
      __int16 v46 = 2114;
      __int16 v47 = v7;
      _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} table-of-contents...",  buf,  0x3Eu);
    }

    __int16 v33 = v8;

    id v14 = v10;
    if ((uint64_t)v35 >= 1)
    {
      uint64_t v15 = 0LL;
      *(void *)&__int128 v13 = 138544130LL;
      __int128 v32 = v13;
      do
      {
        id v16 = objc_autoreleasePoolPush();
        uint64_t v17 = (__CFString *)objc_claimAutoreleasedReturnValue([v14 objectAtIndexedSubscript:v15]);
        id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedSetLookupResults](self, "persistedSetLookupResults"));
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedEntry:v17 fromLocation:v7]);

        if (v19)
        {
          id v20 = [v19 secureCodedObjectForKey:@"setLookupResult" ofClass:objc_opt_class(MADAutoSetLookupResult)];
          __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
          id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v24 = (__CFString *)[v21 newSummaryWithoutEntryID];
            *(_DWORD *)int buf = 138544642;
            __int16 v37 = v33;
            __int16 v38 = 2114;
            __int16 v39 = @"E_LOD";
            __int16 v40 = 2048;
            __int16 v41 = (const __CFString *)(v15 + 1);
            __int16 v42 = 2048;
            id v14 = v34;
            __int16 v43 = v35;
            __int16 v44 = 2114;
            __int16 v45 = v17;
            __int16 v46 = 2114;
            __int16 v47 = v24;
            _os_log_impl( &dword_0,  v23,  OS_LOG_TYPE_DEFAULT,  "\n#_%{public}@:%{public}@ (%ld of %ld) [%{public}@] | %{public}@",  buf,  0x3Eu);
          }
        }

        else
        {
          id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v25 oslog]);

          if (!os_log_type_enabled((os_log_t)v21, OS_LOG_TYPE_ERROR)) {
            goto LABEL_11;
          }
          id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager summary](self, "summary"));
          *(_DWORD *)int buf = v32;
          __int16 v37 = v7;
          __int16 v38 = 2114;
          __int16 v39 = @"SET_LOOKUP_RESULTS";
          __int16 v40 = 2114;
          __int16 v41 = (const __CFString *)v23;
          __int16 v42 = 2114;
          __int16 v43 = v17;
          _os_log_error_impl( &dword_0,  (os_log_t)v21,  OS_LOG_TYPE_ERROR,  "{%{public}@:_logPersistedSetLookupResultTableOfContents} | (%{public}@) %{public}@ | unable to load entry:%{public}@",  buf,  0x2Au);
        }

LABEL_11:
        objc_autoreleasePoolPop(v16);
        ++v15;
      }

      while (v35 != (__CFString *)v15);
    }

    BOOL v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger", v32));
    BOOL v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

    if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = (__CFString *)v33;
      goto LABEL_20;
    }

    *(_DWORD *)int buf = 138544642;
    __int16 v37 = @"PERSISTED";
    __int16 v38 = 2114;
    __int16 v39 = @"SET_LOOKUP_RESULTS";
    __int16 v40 = 2114;
    __int16 v41 = @"ENTRY_LOAD";
    __int16 v42 = 2114;
    uint64_t v8 = (__CFString *)v33;
    __int16 v43 = (__CFString *)v33;
    __int16 v44 = 2114;
    __int16 v45 = @"<-----<";
    __int16 v46 = 2114;
    __int16 v47 = v7;
    uint64_t v28 = "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} ...table-of-contents";
    __int16 v29 = v27;
    uint32_t v30 = 62;
    goto LABEL_18;
  }

  __int16 v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  BOOL v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 oslog]);

  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 138545410;
    __int16 v37 = @"PERSISTED";
    __int16 v38 = 2114;
    __int16 v39 = @"SET_LOOKUP_RESULTS";
    __int16 v40 = 2114;
    __int16 v41 = @"ENTRY_LOAD";
    __int16 v42 = 2114;
    __int16 v43 = v8;
    __int16 v44 = 2114;
    __int16 v45 = @">----->";
    __int16 v46 = 2114;
    __int16 v47 = v7;
    __int16 v48 = 2114;
    __int16 v49 = @"empty table-of-contents";
    __int16 v50 = 2114;
    __int16 v51 = v8;
    __int16 v52 = 2114;
    __int16 v53 = @"<-----<";
    uint64_t v28 = "[%{public}@][%{public}@][%{public}@]\n"
          "#_%{public}@:%{public}@ {%{public}@} %{public}@\n"
          "#_%{public}@:%{public}@";
    __int16 v29 = v27;
    uint32_t v30 = 92;
LABEL_18:
    _os_log_impl(&dword_0, v29, OS_LOG_TYPE_DEFAULT, v28, buf, v30);
  }

- (void)_logSetConfigurationEntries:(id)a3 forSetConfiguration:(id)a4
{
  id v24 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  char v9 = -[NSMutableString initWithString:](objc_alloc(&OBJC_CLASS___NSMutableString), "initWithString:", @"{\n");
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 autoAssetEntries]);
  id v11 = [v10 countByEnumeratingWithState:&v25 objects:v39 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v26;
    do
    {
      for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v26 != v13) {
          objc_enumerationMutation(v10);
        }
        uint64_t v15 = *(void **)(*((void *)&v25 + 1) + 8LL * (void)i);
        if (v15)
        {
          id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSelector]);
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _shortNameForSelector:](self, "_shortNameForSelector:", v16));
          -[NSMutableString appendFormat:](v9, "appendFormat:", @"  %@\n", v17);
        }
      }

      id v12 = [v10 countByEnumeratingWithState:&v25 objects:v39 count:16];
    }

    while (v12);
  }

  -[NSMutableString appendString:](v9, "appendString:", @"}");
  id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v6 latestAtomicInstanceToVend]);
    if (v20) {
      __int128 v21 = (__CFString *)objc_claimAutoreleasedReturnValue([v6 latestAtomicInstanceToVend]);
    }
    else {
      __int128 v21 = @"N";
    }
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSetIdentifier]);
    id v23 = (void *)objc_claimAutoreleasedReturnValue([v6 firstEntryAssetType]);
    *(_DWORD *)int buf = 138544386;
    id v30 = v24;
    __int16 v31 = 2114;
    __int128 v32 = v21;
    __int16 v33 = 2114;
    uint64_t v34 = v22;
    __int16 v35 = 2114;
    __int16 v36 = v23;
    __int16 v37 = 2114;
    __int16 v38 = v9;
    _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "{%{public}@} [AI:%{public}@] assetSetIdentifier:%{public}@ | assetType:%{public}@ | instanceEntries:\n%{public}@",  buf,  0x34u);

    if (v20) {
  }
    }
}

- (void)_logAtomicInstanceEntries:(id)a3 forAtomicInstance:(id)a4
{
  id v27 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  char v9 = -[NSMutableString initWithString:](objc_alloc(&OBJC_CLASS___NSMutableString), "initWithString:", @"{\n");
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v26 = v6;
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 instanceEntries]);
  id v11 = [v10 countByEnumeratingWithState:&v28 objects:v42 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = 0LL;
    uint64_t v14 = *(void *)v29;
    do
    {
      for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v29 != v14) {
          objc_enumerationMutation(v10);
        }
        id v16 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)i);
        if (v16)
        {
          if (!v13)
          {
            uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v28 + 1) + 8 * (void)i) assetSelector]);
            uint64_t v13 = (__CFString *)objc_claimAutoreleasedReturnValue([v17 assetType]);
          }

          id v18 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSelector]);
          id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _shortNameForSelector:](self, "_shortNameForSelector:", v18));
          -[NSMutableString appendFormat:](v9, "appendFormat:", @"  %@\n", v19);
        }
      }

      id v12 = [v10 countByEnumeratingWithState:&v28 objects:v42 count:16];
    }

    while (v12);
  }

  else
  {
    uint64_t v13 = 0LL;
  }

  -[NSMutableString appendString:](v9, "appendString:", @"}");
  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v26 atomicInstanceUUID]);
    uint64_t v23 = objc_claimAutoreleasedReturnValue([v26 assetSetIdentifier]);
    id v24 = (void *)v23;
    *(_DWORD *)int buf = 138544386;
    __int128 v25 = @"N";
    id v33 = v27;
    if (v13) {
      __int128 v25 = v13;
    }
    __int16 v34 = 2114;
    __int16 v35 = v22;
    __int16 v36 = 2114;
    uint64_t v37 = v23;
    __int16 v38 = 2114;
    __int16 v39 = v25;
    __int16 v40 = 2114;
    __int16 v41 = v9;
    _os_log_impl( &dword_0,  v21,  OS_LOG_TYPE_DEFAULT,  "{%{public}@} [AI:%{public}@] assetSetIdentifier:%{public}@ | assetType:%{public}@ | instanceEntries:\n%{public}@",  buf,  0x34u);
  }
}

- (void)_logSetDescriptorEntries:(id)a3 forSetDescriptor:(id)a4
{
  id v31 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  char v9 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDownloadedAtomicInstance]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 latestDowloadedAtomicInstanceEntries]);
  id v11 = -[NSMutableString initWithString:](objc_alloc(&OBJC_CLASS___NSMutableString), "initWithString:", @"{\n");
  __int128 v30 = v6;
  if (v10)
  {
    __int128 v28 = @"latestDowloaded";
    __int128 v29 = v9;
  }

  else
  {
    uint64_t v12 = objc_claimAutoreleasedReturnValue([v6 discoveredAtomicInstance]);

    id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 discoveredAtomicEntries]);
    __int128 v28 = @"discovered";
    __int128 v29 = (void *)v12;
  }

  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  id v13 = v10;
  id v14 = [v13 countByEnumeratingWithState:&v32 objects:v48 count:16];
  if (v14)
  {
    id v15 = v14;
    id v16 = 0LL;
    uint64_t v17 = *(void *)v33;
    do
    {
      for (uint64_t i = 0LL; i != v15; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v33 != v17) {
          objc_enumerationMutation(v13);
        }
        id v19 = *(void **)(*((void *)&v32 + 1) + 8LL * (void)i);
        if (v19)
        {
          if (!v16)
          {
            id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v32 + 1) + 8 * (void)i) fullAssetSelector]);
            id v16 = (__CFString *)objc_claimAutoreleasedReturnValue([v20 assetType]);
          }

          __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v19 fullAssetSelector]);
          id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _shortNameForSelector:](self, "_shortNameForSelector:", v21));
          -[NSMutableString appendFormat:](v11, "appendFormat:", @"  %@\n", v22);
        }
      }

      id v15 = [v13 countByEnumeratingWithState:&v32 objects:v48 count:16];
    }

    while (v15);
  }

  else
  {
    id v16 = 0LL;
  }

  -[NSMutableString appendString:](v11, "appendString:", @"}");
  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v25 = objc_claimAutoreleasedReturnValue([v30 assetSetIdentifier]);
    __int128 v26 = (void *)v25;
    *(_DWORD *)int buf = 138544642;
    id v27 = @"N";
    id v37 = v31;
    if (v16) {
      id v27 = v16;
    }
    __int16 v38 = 2114;
    __int16 v39 = v29;
    __int16 v40 = 2114;
    __int16 v41 = v28;
    __int16 v42 = 2114;
    uint64_t v43 = v25;
    __int16 v44 = 2114;
    __int16 v45 = v27;
    __int16 v46 = 2114;
    __int16 v47 = v11;
    _os_log_impl( &dword_0,  v24,  OS_LOG_TYPE_DEFAULT,  "{%{public}@} [AI:%{public}@](%{public}@) assetSetIdentifier:%{public}@ | assetType:%{public}@ | instanceEntries:\n %{public}@",  buf,  0x3Eu);
  }
}

- (id)_shortNameForSelector:(id)a3
{
  id v3 = a3;
  if (__isPlatformVersionAtLeast(3, 18, 0, 0))
  {
    if ((objc_opt_respondsToSelector(v3, "shortName") & 1) == 0)
    {
      id v5 = 0LL;
      goto LABEL_7;
    }

    uint64_t v4 = objc_claimAutoreleasedReturnValue([v3 shortName]);
  }

  else
  {
    uint64_t v4 = objc_claimAutoreleasedReturnValue([v3 persistedEntryID]);
  }

  id v5 = (void *)v4;
LABEL_7:

  return v5;
}

- (void)_logLookupGrantObtained:(id)a3 ofLookupGrant:(id)a4 message:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 oslog]);

  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
    int v16 = 138544386;
    uint64_t v17 = @">----->";
    __int16 v18 = 2114;
    id v19 = v8;
    __int16 v20 = 2114;
    id v21 = v10;
    __int16 v22 = 2114;
    uint64_t v23 = v15;
    __int16 v24 = 2114;
    uint64_t v25 = @"<-----<";
    _os_log_impl( &dword_0,  v14,  OS_LOG_TYPE_DEFAULT,  "[LOOKUP-GRANT][OBTAINED]\n #_GRANT:%{public}@ {%{public}@} %{public}@\n #_GRANT:(OBTAN) %{public}@\n #_GRANT:%{public}@",  (uint8_t *)&v16,  0x34u);
  }
}

- (void)_logLookupGrantAwaiting:(id)a3 ofLookupGrant:(id)a4 message:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 oslog]);

  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
    int v16 = 138544386;
    uint64_t v17 = @">----->";
    __int16 v18 = 2114;
    id v19 = v8;
    __int16 v20 = 2114;
    id v21 = v10;
    __int16 v22 = 2114;
    uint64_t v23 = v15;
    __int16 v24 = 2114;
    uint64_t v25 = @"<-----<";
    _os_log_impl( &dword_0,  v14,  OS_LOG_TYPE_DEFAULT,  "[LOOKUP-GRANT][AWAITING]\n #_GRANT:%{public}@ {%{public}@} %{public}@\n #_GRANT:(AWAIT) %{public}@\n #_GRANT:%{public}@",  (uint8_t *)&v16,  0x34u);
  }
}

- (void)_logLookupGrantReleased:(id)a3 ofLookupGrant:(id)a4 message:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 oslog]);

  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
    int v16 = 138544386;
    uint64_t v17 = @">----->";
    __int16 v18 = 2114;
    id v19 = v8;
    __int16 v20 = 2114;
    id v21 = v10;
    __int16 v22 = 2114;
    uint64_t v23 = v15;
    __int16 v24 = 2114;
    uint64_t v25 = @"<-----<";
    _os_log_impl( &dword_0,  v14,  OS_LOG_TYPE_DEFAULT,  "[LOOKUP-GRANT][RELEASED]\n #_GRANT:%{public}@ {%{public}@} %{public}@\n #_GRANT:(RELES) %{public}@\n #_GRANT:%{public}@",  (uint8_t *)&v16,  0x34u);
  }
}

- (id)newAssetStatusForSelector:(id)a3 withNotifications:(id)a4 withAvailableForUseAttributes:(id)a5 withNewerVersionAttributes:(id)a6 withNeverBeenLocked:(BOOL)a7 withDownloadUserInitiated:(BOOL)a8 withDownloadProgress:(id)a9 withDownloadedNetworkBytes:(int64_t)a10 withDownloadedFilesystemBytes:(int64_t)a11 withDownloadedAsPatch:(BOOL)a12 withPatchedFromBaseSelector:(id)a13 withPatchedFromBaseFilesystemBytes:(int64_t)a14 withPatchingAttempted:(BOOL)a15 withStagedPriorToAvailable:(BOOL)a16 withStagedFromOSVersion:(id)a17 withStagedFromBuildVersion:(id)a18 extendingWithCurrentLockUsage:(BOOL)a19 withAvailableForUseError:(id)a20 withPatchingAttemptError:(id)a21 withNewerVersionError:(id)a22
{
  BOOL v43 = a7;
  BOOL v44 = a8;
  id v48 = a3;
  id v25 = a4;
  id v26 = a5;
  id v27 = a6;
  id v46 = a9;
  id v28 = a13;
  id v29 = a17;
  id v30 = a18;
  id v31 = a20;
  id v32 = a21;
  id v33 = a22;
  __int128 v34 = (MAAutoAssetNotifications *)v25;
  __int128 v35 = v34;
  if (!v34) {
    __int128 v34 = objc_alloc_init(&OBJC_CLASS___MAAutoAssetNotifications);
  }
  __int16 v47 = v27;
  __int16 v42 = v28;
  __int16 v41 = v34;
  if (a19) {
    id v36 = +[MADAutoAssetLocker newCurrentLockUsageForSelector:]( &OBJC_CLASS___MADAutoAssetLocker,  "newCurrentLockUsageForSelector:",  v48);
  }
  else {
    id v36 = 0LL;
  }
  else {
    id v37 = 0LL;
  }
  LOWORD(v40) = __PAIR16__(a16, a15);
  LOBYTE(v39) = a12;
  __int16 v45 = -[MAAutoAssetStatus initWithAssetSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:withCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( objc_alloc(&OBJC_CLASS___MAAutoAssetStatus),  "initWithAssetSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeen Locked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes :withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:wi thStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:withCurrentLockUsage:withAvailable ForUseError:withPatchingAttemptError:withNewerVersionError:",  v48,  v41,  v26,  v47,  v43,  v44,  v46,  a10,  a11,  v39,  v42,  a14,  v40,  v29,  v30,  v37,  v31,  v32,  v33);

  return v45;
}

- (id)_newAtomicInstancesDownloadedForSetIdentifier:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v25 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
  id v28 = [obj countByEnumeratingWithState:&v29 objects:v33 count:16];
  if (!v28) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)v30;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  id v9 = &MobileAssetKeyManager__metaData.ivars;
  uint64_t v26 = *(void *)v30;
  do
  {
    for (uint64_t i = 0LL; i != v28; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v30 != v7) {
        objc_enumerationMutation(obj);
      }
      uint64_t v11 = *(void *)(*((void *)&v29 + 1) + 8LL * (void)i);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager downloadedSetDescriptorsByInstance]( self,  "downloadedSetDescriptorsByInstance"));
      id v13 = [v12 safeObjectForKey:v11 ofClass:objc_opt_class(p_ivars[218])];
      id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

      id v15 = v9[155];
      int v16 = (void *)objc_claimAutoreleasedReturnValue([v14 clientDomainName]);
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
      if ((-[__objc2_ivar_list stringIsEqual:to:](v15, "stringIsEqual:to:", v16, v17) & 1) != 0)
      {
        __int16 v18 = self;
        id v19 = v9[155];
        __int16 v20 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSetIdentifier]);
        id v21 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);
        if (-[__objc2_ivar_list stringIsEqual:to:](v19, "stringIsEqual:to:", v20, v21))
        {
          __int16 v22 = (void *)objc_claimAutoreleasedReturnValue([v14 latestDownloadedAtomicInstance]);

          self = v18;
          uint64_t v7 = v26;
          p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
          if (!v22) {
            goto LABEL_13;
          }
          int v16 = (void *)objc_claimAutoreleasedReturnValue([v14 latestDownloadedAtomicInstance]);
          -[NSMutableArray addObject:](v25, "addObject:", v16);
        }

        else
        {

          self = v18;
          uint64_t v7 = v26;
          p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        }
      }

      else
      {
      }

LABEL_13:
      id v9 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
    }

    id v28 = [obj countByEnumeratingWithState:&v29 objects:v33 count:16];
  }

  while (v28);
LABEL_15:

  if (-[NSMutableArray count](v25, "count")) {
    uint64_t v23 = v25;
  }
  else {
    uint64_t v23 = 0LL;
  }

  return v23;
}

- (id)firstAssetTypeForSetEntries:(id)a3
{
  id v3 = a3;
  if ([v3 count])
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectAtIndex:0]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSelector]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 assetType]);
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

- (id)currentSetStatusFromJobInformation:(id)a3
{
  id v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 foundContent]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 currentSetStatus]);

  if (!v5) {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 currentSetStatus]);
  }

  return v5;
}

- (id)newAssetSetStatus:(id)a3 forReason:(id)a4 forClientDomain:(id)a5 forAssetSetIdentifier:(id)a6 withAtomicInstancesDownloaded:(id)a7 withCatalogCachedAssetSetID:(id)a8 withCatalogDownloadedFromLive:(id)a9 withCatalogLastTimeChecked:(id)a10 withCatalogPostedDate:(id)a11 withNewerAtomicInstanceDiscovered:(id)a12 withNewerDiscoveredAtomicEntries:(id)a13 withLatestDownloadedAtomicInstance:(id)a14 withLatestDowloadedAtomicInstanceEntries:(id)a15 withDownloadedCatalogCachedAssetSetID:(id)a16 withDownloadedCatalogDownloadedFromLive:(id)a17 withDownloadedCatalogLastTimeChecked:(id)a18 withDownloadedCatalogPostedDate:(id)a19 withCurrentNotifications:(id)a20 withCurrentNeedPolicy:(id)a21 withSchedulerPolicy:(id)a22 withStagerPolicy:(id)a23 havingReceivedLookupResponse:(BOOL)a24 vendingAtomicInstanceForConfiguredEntries:(BOOL)a25 withDownloadUserInitiated:(BOOL)a26 withDownloadProgress:(id)a27 withDownloadedNetworkBytes:(int64_t)a28 withDownloadedFilesystemBytes:(int64_t)a29 extendingWithCurrentLockUsage:(BOOL)a30 withSelectorsForStaging:(id)a31 withAvailableForUseError:(id)a32 withNewerVersionError:(id)a33
{
  id v84 = a5;
  id v85 = a6;
  id v83 = a7;
  id v82 = a8;
  id v81 = a9;
  id v80 = a10;
  id v62 = a11;
  id v76 = a12;
  id v79 = a13;
  id v78 = a14;
  id v77 = a15;
  id v75 = a16;
  id v63 = a17;
  id v74 = a18;
  id v64 = a19;
  id v37 = a20;
  id v66 = a21;
  id v38 = a22;
  id v68 = a23;
  id v69 = a27;
  id v70 = a31;
  id v65 = a32;
  id v61 = a33;
  uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v40 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v39 extendedStateQueue]);
  dispatch_assert_queue_V2(v40);

  __int16 v41 = (MANAutoAssetSetNotifications *)v37;
  __int16 v42 = v41;
  if (!v41) {
    __int16 v41 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetSetNotifications);
  }
  __int16 v72 = v41;
  id v60 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetStatus);
  BOOL v43 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setConfigurationAssetEntries:forAssetSetIdentifier:]( self,  "setConfigurationAssetEntries:forAssetSetIdentifier:",  v84,  v85));
  __int16 v71 = v42;
  __int16 v67 = v38;
  if (a30)
  {
    __int16 v59 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager setLockUsageMapForClientDomain:forSetIdentifier:]( self,  "setLockUsageMapForClientDomain:forSetIdentifier:",  v84,  v85));
    BOOL v44 = v42;
    __int16 v45 = v61;
    id v46 = v65;
    __int16 v47 = v70;
    id v48 = v69;
    BYTE2(v58) = a26;
    LOWORD(v58) = __PAIR16__(a25, a24);
    __int16 v49 = v68;
    id v56 = v38;
    __int16 v50 = v66;
    __int16 v52 = v63;
    __int16 v51 = v64;
    __int16 v53 = v62;
    id v73 = -[MANAutoAssetSetStatus initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( v60,  "initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:wit hCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:with NewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatest DowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive :withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNe edPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfigure dEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemB ytes:withCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  v84,  v85,  v43,  v83,  v82,  v81,  v80,  v62,  v76,  v79,  v78,  v77,  v75,  v63,  v74,  v64,  v44,  v66,  v56,  v68,  v58,  v69,  a28,  a29,  v59,  v70,  v65,  v61);
  }

  else
  {
    __int16 v54 = v42;
    __int16 v45 = v61;
    id v46 = v65;
    __int16 v47 = v70;
    id v48 = v69;
    BYTE2(v58) = a26;
    LOWORD(v58) = __PAIR16__(a25, a24);
    __int16 v49 = v68;
    id v57 = v38;
    __int16 v50 = v66;
    __int16 v52 = v63;
    __int16 v51 = v64;
    __int16 v53 = v62;
    id v73 = -[MANAutoAssetSetStatus initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withNewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatestDowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive:withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNeedPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:]( v60,  "initStatusForClientDomain:forAssetSetIdentifier:withConfiguredAssetEntries:withAtomicInstancesDownloaded:wit hCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:with NewerAtomicInstanceDiscovered:withNewerDiscoveredAtomicEntries:withLatestDownloadedAtomicInstance:withLatest DowloadedAtomicInstanceEntries:withDownloadedCatalogCachedAssetSetID:withDownloadedCatalogDownloadedFromLive :withDownloadedCatalogLastTimeChecked:withDownloadedCatalogPostedDate:withCurrentNotifications:withCurrentNe edPolicy:withSchedulerPolicy:withStagerPolicy:havingReceivedLookupResponse:vendingAtomicInstanceForConfigure dEntries:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemB ytes:withCurrentLockUsage:withSelectorsForStaging:withAvailableForUseError:withNewerVersionError:",  v84,  v85,  v43,  v83,  v82,  v81,  v80,  v62,  v76,  v79,  v78,  v77,  v75,  v63,  v74,  v64,  v54,  v66,  v57,  v68,  v58,  v69,  a28,  a29,  0LL,  v70,  v65,  v61);
  }

  return v73;
}

- (id)autoAssetDescriptorsForSet:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "latestDowloadedAtomicInstanceEntries", 0));
  id v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      uint64_t v12 = 0LL;
      do
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v16 + 1) + 8 * (void)v12) fullAssetSelector]);
        id v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedByFullSelector:]( self,  "locateDownloadedByFullSelector:",  v13));

        if (v14) {
          -[NSMutableArray addObject:](v7, "addObject:", v14);
        }

        uint64_t v12 = (char *)v12 + 1;
      }

      while (v10 != v12);
      id v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }

    while (v10);
  }

  return v7;
}

- (id)alreadyHaveSetDescriptorMatching:(id)a3
{
  id v59 = a3;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v59 latestDowloadedAtomicInstanceEntries]);
  id v4 = [v3 count];

  id v60 = v4;
  if ((uint64_t)v4 < 1)
  {
    os_log_t log = 0LL;
    goto LABEL_60;
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 persistedEntryIDs:@"alreadyHaveSetDescriptorMatching"]);

  if (![v6 count])
  {
    os_log_t log = 0LL;
    goto LABEL_59;
  }

  __int128 v92 = 0u;
  __int128 v93 = 0u;
  __int128 v90 = 0u;
  __int128 v91 = 0u;
  id obj = v6;
  id v67 = [obj countByEnumeratingWithState:&v90 objects:v101 count:16];
  if (!v67)
  {
LABEL_54:
    os_log_t log = 0LL;
    goto LABEL_58;
  }

  uint64_t v66 = *(void *)v91;
  uint64_t v58 = v6;
LABEL_5:
  id v7 = 0LL;
  while (1)
  {
    if (*(void *)v91 != v66) {
      objc_enumerationMutation(obj);
    }
    id v69 = (char *)v7;
    id v8 = *(void **)(*((void *)&v90 + 1) + 8LL * (void)v7);
    id context = objc_autoreleasePoolPush();
    if (!v8)
    {
      __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      __int16 v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

      id v70 = v20;
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager alreadyHaveSetDescriptorMatching:].cold.1((uint64_t)v100, (uint64_t)self);
      }
      id v21 = v69;
      goto LABEL_52;
    }

    id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedDownloadedSetDescriptors]( self,  "persistedDownloadedSetDescriptors"));
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 persistedEntry:v8 fromLocation:@"alreadyHaveSetDescriptorMatching"]);

    id v70 = v10;
    if (!v10)
    {
      __int16 v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      uint64_t v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

      os_log_t log = v23;
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      {
        __int16 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        *(_DWORD *)int buf = 138543618;
        uint64_t v97 = v24;
        __int16 v98 = 2114;
        id v99 = v8;
        _os_log_error_impl( &dword_0,  v23,  OS_LOG_TYPE_ERROR,  "[%{public}@] {alreadyHaveSetDescriptorMatching} unable to determine previous status | entryID:%{public}@",  buf,  0x16u);
      }

      goto LABEL_48;
    }

    id v11 = -[os_log_s secureCodedObjectForKey:ofClass:]( v10,  "secureCodedObjectForKey:ofClass:",  @"assetSetDescriptor",  objc_opt_class(&OBJC_CLASS___MADAutoSetDescriptor));
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    os_log_t log = v12;
    if (!v12)
    {
      id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

      os_log_t v65 = v26;
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager _updateLatestSummary](self, "_updateLatestSummary"));
        *(_DWORD *)int buf = 138543618;
        uint64_t v97 = v27;
        __int16 v98 = 2114;
        id v99 = v8;
        _os_log_error_impl( &dword_0,  v26,  OS_LOG_TYPE_ERROR,  "[%{public}@] {alreadyHaveSetDescriptorMatching} unable to load set-descriptor | entryID:%{public}@",  buf,  0x16u);
      }

      goto LABEL_50;
    }

    id v13 = v12;
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s clientDomainName](v12, "clientDomainName"));
    unsigned int v15 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v14,  @"FROM_STAGED_FOR_ALL");

    if (v15)
    {
      __int128 v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      __int128 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 oslog]);

      os_log_t v65 = v17;
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s summary](log, "summary"));
        *(_DWORD *)int buf = 138543362;
        uint64_t v97 = v18;
        _os_log_impl( &dword_0,  v17,  OS_LOG_TYPE_DEFAULT,  "{alreadyHaveSetDescriptorMatching} skipping set-descriptor because it's staged. Descriptor: %{public}@",  buf,  0xCu);
      }

- (BOOL)_haveReceivedLookupResponseForSetDescriptor:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);

  LOBYTE(self) = -[MADAutoAssetControlManager _haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:]( self,  "_haveReceivedLookupResponseForClientDomainName:forAssetSetIdentifier:",  v5,  v6);
  return (char)self;
}

- (BOOL)_haveReceivedLookupResponseForClientDomainName:(id)a3 forAssetSetIdentifier:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v7,  v6));
  if (v10) {
    unsigned __int8 v11 = [v10 haveReceivedLookupResponse];
  }
  else {
    unsigned __int8 v11 = 0;
  }

  return v11;
}

- (BOOL)_vendingAtomicInstanceForConfiguredEntriesForSetDescriptor:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);

  LOBYTE(self) = -[MADAutoAssetControlManager _vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:]( self,  "_vendingAtomicInstanceForConfiguredEntriesForClientDomainName:forAssetSetIdentifier:",  v5,  v6);
  return (char)self;
}

- (BOOL)_vendingAtomicInstanceForConfiguredEntriesForClientDomainName:(id)a3 forAssetSetIdentifier:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetConfigurationByClientDomain:forAssetSetIdentifier:]( self,  "locateSetConfigurationByClientDomain:forAssetSetIdentifier:",  v7,  v6));
  if (v10) {
    unsigned __int8 v11 = [v10 vendingAtomicInstanceForConfiguredEntries];
  }
  else {
    unsigned __int8 v11 = 0;
  }

  return v11;
}

- (BOOL)jobToBeIncluded:(id)a3 basedOnControl:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = v6;
  if (v6
    && (id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 limitedToAssetTypes]), v8, v8))
  {
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 limitedToAssetTypes]);
    id v10 = [v9 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v10)
    {
      __int128 v17 = v7;
      uint64_t v11 = *(void *)v19;
      while (2)
      {
        for (uint64_t i = 0LL; i != v10; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v19 != v11) {
            objc_enumerationMutation(v9);
          }
          uint64_t v13 = *(void *)(*((void *)&v18 + 1) + 8LL * (void)i);
          id v14 = (void *)objc_claimAutoreleasedReturnValue([v5 autoAssetSelector]);
          unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
          LOBYTE(v13) = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v15,  v13);

          if ((v13 & 1) != 0)
          {
            LOBYTE(v10) = 1;
            goto LABEL_14;
          }
        }

        id v10 = [v9 countByEnumeratingWithState:&v18 objects:v22 count:16];
        if (v10) {
          continue;
        }
        break;
      }

+ (BOOL)selectorToBeIncluded:(id)a3 basedOnControl:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = v6;
  if (v6
    && (id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 limitedToAssetTypes]), v8, v8))
  {
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "limitedToAssetTypes", 0));
    id v10 = [v9 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v10)
    {
      uint64_t v11 = *(void *)v17;
      while (2)
      {
        for (uint64_t i = 0LL; i != v10; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v17 != v11) {
            objc_enumerationMutation(v9);
          }
          uint64_t v13 = *(void *)(*((void *)&v16 + 1) + 8LL * (void)i);
          id v14 = (void *)objc_claimAutoreleasedReturnValue([v5 assetType]);
          LOBYTE(v13) = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v14,  v13);

          if ((v13 & 1) != 0)
          {
            LOBYTE(v10) = 1;
            goto LABEL_14;
          }
        }

        id v10 = [v9 countByEnumeratingWithState:&v16 objects:v20 count:16];
        if (v10) {
          continue;
        }
        break;
      }
    }

+ (BOOL)descriptorToBeIncluded:(id)a3 basedOnControl:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = v6;
  if (v6
    && (id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 limitedToAssetTypes]), v8, v8))
  {
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "limitedToAssetTypes", 0));
    id v10 = [v9 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v10)
    {
      uint64_t v11 = *(void *)v17;
      while (2)
      {
        for (uint64_t i = 0LL; i != v10; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v17 != v11) {
            objc_enumerationMutation(v9);
          }
          uint64_t v13 = *(void *)(*((void *)&v16 + 1) + 8LL * (void)i);
          id v14 = (void *)objc_claimAutoreleasedReturnValue([v5 assetType]);
          LOBYTE(v13) = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v14,  v13);

          if ((v13 & 1) != 0)
          {
            LOBYTE(v10) = 1;
            goto LABEL_14;
          }
        }

        id v10 = [v9 countByEnumeratingWithState:&v16 objects:v20 count:16];
        if (v10) {
          continue;
        }
        break;
      }
    }

- (id)_preInstalledAtomicInstanceDescriptors
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 persistedEntryIDs:@"_preInstalledAtomicInstanceDescriptors"]);

  id v25 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  if ([v6 count])
  {
    __int128 v29 = 0u;
    __int128 v30 = 0u;
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    __int16 v24 = v6;
    id obj = v6;
    id v7 = [obj countByEnumeratingWithState:&v27 objects:v33 count:16];
    if (!v7) {
      goto LABEL_23;
    }
    id v8 = v7;
    uint64_t v9 = *(void *)v28;
    while (1)
    {
      id v10 = 0LL;
      do
      {
        if (*(void *)v28 != v9) {
          objc_enumerationMutation(obj);
        }
        uint64_t v11 = *(void *)(*((void *)&v27 + 1) + 8LL * (void)v10);
        uint64_t v12 = objc_autoreleasePoolPush();
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownDescriptors](self, "persistedKnownDescriptors"));
        id v14 = (void *)objc_claimAutoreleasedReturnValue( [v13 persistedEntry:v11 fromLocation:@"_preInstalledAtomicInstanceDescriptors"]);

        if (v14)
        {
          id v15 = [v14 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
          __int128 v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
          __int128 v17 = v16;
          if (!v16)
          {
            __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            __int128 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

            if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)int buf = 138543362;
              uint64_t v32 = v11;
              _os_log_error_impl( &dword_0,  v19,  OS_LOG_TYPE_ERROR,  "[AUTO-PRE-INSTALLED] {_preInstalledAtomicInstanceDescriptors} unable to load auto-asset-descriptor | entryID:%{public}@",  buf,  0xCu);
            }

            goto LABEL_16;
          }

          if ([v16 isBlankEntry])
          {
            __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            __int128 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

            if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)int buf = 138543362;
              uint64_t v32 = v11;
              _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[AUTO-PRE-INSTALLED] {_preInstalledAtomicInstanceDescriptors} encountered blank auto-asset-descriptor - removing | entryID:%{public}@",  buf,  0xCu);
            }

- (id)_preInstalledSetAtomicEntriesFromInstanceEntries:(id)a3
{
  id v3 = a3;
  id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v55 = 0u;
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  id v5 = v3;
  id v47 = [v5 countByEnumeratingWithState:&v55 objects:v62 count:16];
  id obj = v5;
  if (!v47)
  {

    id v6 = 0LL;
LABEL_38:
    uint64_t v39 = v4;
    goto LABEL_39;
  }

  id v6 = 0LL;
  uint64_t v46 = *(void *)v56;
  char v42 = 1;
  __int16 v45 = v4;
  do
  {
    for (uint64_t i = 0LL; i != v47; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v56 != v46) {
        objc_enumerationMutation(obj);
      }
      __int16 v50 = *(void **)(*((void *)&v55 + 1) + 8LL * (void)i);
      id v8 = objc_autoreleasePoolPush();
      if (!v6)
      {
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v50 assetSelector]);
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);
        id v6 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateDownloadedNewBySelectorForAssetType:]( self,  "locateDownloadedNewBySelectorForAssetType:",  v10));
      }

      __int128 v53 = 0u;
      __int128 v54 = 0u;
      __int128 v51 = 0u;
      __int128 v52 = 0u;
      id v6 = v6;
      id v11 = [v6 countByEnumeratingWithState:&v51 objects:v61 count:16];
      if (v11)
      {
        id v12 = v11;
        id v48 = v8;
        __int16 v49 = i;
        uint64_t v13 = *(void *)v52;
LABEL_10:
        uint64_t v14 = 0LL;
        while (1)
        {
          if (*(void *)v52 != v13) {
            objc_enumerationMutation(v6);
          }
          uint64_t v15 = *(void *)(*((void *)&v51 + 1) + 8 * v14);
          __int128 v16 = objc_autoreleasePoolPush();
          id v17 = [v6 safeObjectForKey:v15 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
          __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
          if ([v18 foundAsPreInstalled])
          {
            __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSpecifier]);
            __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v50 assetSelector]);
            __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSpecifier]);
            unsigned __int8 v22 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v19, v21);

            if ((v22 & 1) != 0) {
              break;
            }
          }

          objc_autoreleasePoolPop(v16);
          if (v12 == (id)++v14)
          {
            id v12 = [v6 countByEnumeratingWithState:&v51 objects:v61 count:16];
            if (v12) {
              goto LABEL_10;
            }
            __int128 v18 = v6;
            id v4 = v45;
            id v8 = v48;
            uint64_t i = v49;
            goto LABEL_32;
          }
        }

        objc_autoreleasePoolPop(v16);

        if (!v18)
        {
          id v4 = v45;
          id v8 = v48;
          uint64_t i = v49;
          goto LABEL_33;
        }

        uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v18 assetType]);
        __int16 v24 = (void *)objc_claimAutoreleasedReturnValue([v18 assetId]);
        id AutoLocalUrlFromTypeAndIdWithPurpose = getAutoLocalUrlFromTypeAndIdWithPurpose(v23, v24, 2LL, @"auto");
        uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(AutoLocalUrlFromTypeAndIdWithPurpose);

        id v4 = v45;
        if (v26)
        {
          __int128 v27 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
          __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v18 assetType]);
          __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSpecifier]);
          __int128 v30 = (void *)objc_claimAutoreleasedReturnValue([v18 assetVersion]);
          uint64_t v31 = (os_log_s *)-[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v27,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v28,  v29,  v30);

          uint64_t v32 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetAtomicEntry);
          uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v18 assetId]);
          __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v18 metadata]);
          __int128 v35 = -[MANAutoAssetSetAtomicEntry initWithFullAssetSelector:withAssetID:withLocalContentURL:withAssetAttributes:inhibitedFromEmergencyRemoval:]( v32,  "initWithFullAssetSelector:withAssetID:withLocalContentURL:withAssetAttributes:inhibitedFromEmergencyRemoval:",  v31,  v33,  v26,  v34,  0LL);

          if (v35)
          {
            -[NSMutableArray addObject:](v45, "addObject:", v35);
          }

          else
          {
            id v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
            id v38 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 oslog]);

            if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
              -[MADAutoAssetControlManager _preInstalledSetAtomicEntriesFromInstanceEntries:].cold.2( (uint64_t)v59,  (uint64_t)v18);
            }

            char v42 = 0;
          }

          id v8 = v48;
          uint64_t i = v49;
        }

        else
        {
          id v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
          uint64_t v31 = (os_log_s *)objc_claimAutoreleasedReturnValue([v36 oslog]);

          if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
            -[MADAutoAssetControlManager _preInstalledSetAtomicEntriesFromInstanceEntries:].cold.1( (uint64_t)v60,  (uint64_t)v18);
          }
          char v42 = 0;
          id v8 = v48;
          uint64_t i = v49;
        }
      }

      else
      {
        __int128 v18 = v6;
      }

- (void)_preInstalledMakeDescriptorAvailable:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSpecifier]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v6 assetVersion]);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:]( self,  "_latestDownloadedDescriptor:forAssetType:withAssetSpecifier:matchingAssetVersion:",  @"IssueClientReplyJobResponse",  v10,  v11,  v12));

  if (v13)
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 diag]);
    __int128 v16 = objc_alloc(&OBJC_CLASS___NSString);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    __int128 v18 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
    __int128 v19 = -[NSString initWithFormat:]( v16,  "initWithFormat:",  @"{%@:_preInstalledMakeDescriptorAvailable} already migrated | availableToMigrate:%@, alreadyAvailable:%@",  v7,  v17,  v18);
    [v15 trackAnomaly:@"AUTO-CONTROL" forReason:v19 withResult:6109 withError:0];

LABEL_9:
    goto LABEL_10;
  }

  [v6 setIsOnFilesystem:1];
  if (!-[MADAutoAssetControlManager jobDescriptorOnFilesystemValidated:]( self,  "jobDescriptorOnFilesystemValidated:",  v6))
  {
    [v6 setIsOnFilesystem:0];
    __int128 v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v34 oslog]);

    if (os_log_type_enabled((os_log_t)v14, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetControlManager _preInstalledMakeDescriptorAvailable:fromLocation:].cold.1();
    }
    goto LABEL_9;
  }

  __int128 v20 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
  unsigned __int8 v22 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSpecifier]);
  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v6 assetVersion]);
  id v24 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v20,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v21,  v22,  v23);

  id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    *(_DWORD *)int buf = 138543618;
    id v39 = v7;
    __int16 v40 = 2114;
    __int16 v41 = v27;
    _os_log_impl( &dword_0,  v26,  OS_LOG_TYPE_DEFAULT,  "[AUTO-PRE-INSTALLED] {%{public}@:_preInstalledMakeDescriptorAvailable} content on filesystem validated for migrati on | descriptor:%{public}@",  buf,  0x16u);
  }

  -[MADAutoAssetControlManager trackDescriptor:persisting:fromLocation:changedWhileTerminated:changedNeverBeenLocked:historyOperation:firstClientName:]( self,  "trackDescriptor:persisting:fromLocation:changedWhileTerminated:changedNeverBeenLocked:historyOperation:firstClientName:",  v6,  1LL,  @"_preInstalledMakeDescriptorAvailable",  0LL,  0LL,  0LL,  0LL);
  __int128 v28 = objc_opt_new(&OBJC_CLASS___MAAutoAssetNotifications);
  -[MAAutoAssetNotifications setContentAvailableForUse:](v28, "setContentAvailableForUse:", 1LL);
  __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v6 metadata]);
  LOBYTE(v37) = 0;
  LOWORD(v36) = 0;
  LOBYTE(v35) = 0;
  id v30 = -[MADAutoAssetControlManager newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( self,  "newAssetStatusForSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNever BeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemB ytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempte d:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:extendingWithCurrentLockUsage: withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v24,  v28,  v29,  0LL,  1LL,  0LL,  0LL,  -1LL,  -1LL,  v35,  0LL,  -1LL,  v36,  0LL,  0LL,  v37,  0LL,  0LL,  0LL);

  uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v24 assetVersion]);
  -[MADAutoAssetControlManager updateAutoAssetStatus:forActiveJobUUID:withLatestJobStatus:matchingAssetVersion:fromLocation:]( self,  "updateAutoAssetStatus:forActiveJobUUID:withLatestJobStatus:matchingAssetVersion:fromLocation:",  v24,  0LL,  v30,  v31,  @"_preInstalledMakeDescriptorAvailable");

  uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
  uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSpecifier]);
  +[MADAutoAssetControlManager postNotificationName:forAssetType:forAssetSpecifier:fromModule:fromLocation:]( &OBJC_CLASS___MADAutoAssetControlManager,  "postNotificationName:forAssetType:forAssetSpecifier:fromModule:fromLocation:",  @"ASSET_VERSION_DOWNLOADED",  v32,  v33,  @"PRE-INSTALLED",  @"_preInstalledMakeDescriptorAvailable");

LABEL_10:
}

- (id)_preInstalledRelocateAutoAssets
{
  id v2 = self;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id RepositoryPath = getRepositoryPath(@"/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs");
  id v6 = (char *)objc_claimAutoreleasedReturnValue(RepositoryPath);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v123 = 0LL;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 contentsOfDirectoryAtPath:v6 error:&v123]);
  id v9 = v123;

  if (v8) {
    BOOL v10 = v9 == 0LL;
  }
  else {
    BOOL v10 = 0;
  }
  if (v10)
  {
    __int16 v98 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    __int128 v119 = 0u;
    __int128 v120 = 0u;
    __int128 v121 = 0u;
    __int128 v122 = 0u;
    __int128 v93 = v8;
    id v13 = v8;
    id v14 = [v13 countByEnumeratingWithState:&v119 objects:v133 count:16];
    if (v14)
    {
      id v15 = v14;
      p_ivars = &MobileAssetKeyManager__metaData.ivars;
      uint64_t v17 = *(void *)v120;
      __int128 v104 = v6;
      uint64_t v108 = v2;
      uint64_t v94 = *(void *)v120;
      id v95 = v13;
      do
      {
        __int128 v18 = 0LL;
        id v96 = v15;
        do
        {
          if (*(void *)v120 != v17) {
            objc_enumerationMutation(v13);
          }
          __int128 v19 = *(char **)(*((void *)&v119 + 1) + 8LL * (void)v18);
          if (isWellFormedNormalizedAssetType(v19))
          {
            id v20 = assetTypeFromNormalized(v19);
            os_log_t log = (os_log_t)objc_claimAutoreleasedReturnValue(v20);
            id PreInstalledAssets = getPreInstalledAssets(v6, log, 0LL, 0LL);
            unsigned __int8 v22 = (void *)objc_claimAutoreleasedReturnValue(PreInstalledAssets);
            uint64_t v23 = v22;
            if (v22 && [v22 count])
            {
              __int128 v117 = 0u;
              __int128 v118 = 0u;
              __int128 v115 = 0u;
              __int128 v116 = 0u;
              id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 allKeys]);
              id v111 = [v24 countByEnumeratingWithState:&v115 objects:v132 count:16];
              if (!v111) {
                goto LABEL_59;
              }
              id obj = v24;
              uint64_t v97 = v18;
              uint64_t v109 = *(void *)v116;
              id v110 = v23;
              os_log_t v25 = log;
              while (1)
              {
                uint64_t v26 = 0LL;
                do
                {
                  if (*(void *)v116 != v109) {
                    objc_enumerationMutation(obj);
                  }
                  __int128 v27 = *(void **)(*((void *)&v115 + 1) + 8LL * (void)v26);
                  __int128 v28 = objc_autoreleasePoolPush();
                  __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v23 objectForKeyedSubscript:v27]);
                  id PathToAssetWithPurpose = getPathToAssetWithPurpose(v6, v25, v27, 0LL);
                  uint64_t v31 = (char *)objc_claimAutoreleasedReturnValue(PathToAssetWithPurpose);
                  uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v31 lastPathComponent]);
                  if (-[__objc2_ivar_list isAutoAssetMetadata:]( p_ivars[223],  "isAutoAssetMetadata:",  v29))
                  {
                    id v33 = objc_alloc((Class)p_ivars[223]);
                    id v114 = 0LL;
                    id v34 = [v33 initForAssetType:v25 fromMetadata:v29 invalidReasons:&v114];
                    uint64_t v35 = (os_log_s *)v114;
                    if (v34)
                    {
                      if ([v34 isMAAutoAsset])
                      {
                        if ([v31 isFileURL])
                        {
                          uint64_t v36 = v31;
                        }

                        else
                        {
                          __int16 v45 = (void *)objc_claimAutoreleasedReturnValue([v31 absoluteURL]);
                          uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue([v45 path]);
                          uint64_t v36 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSURL fileURLWithPath:isDirectory:]( &OBJC_CLASS___NSURL,  "fileURLWithPath:isDirectory:",  v46,  1LL));
                        }

                        id DownloadManager = getDownloadManager();
                        id v48 = (void *)objc_claimAutoreleasedReturnValue(DownloadManager);
                        id v49 = [v48 decryptContentEncryptedAssetAtPathIfRequired:v36];

                        if (v49 == &loc_7530)
                        {
                          __int128 v101 = v36;
                          __int16 v50 = repositoryPath(log);
                          __int128 v51 = (void *)objc_claimAutoreleasedReturnValue(v50);
                          id AutoLocalUrlFromTypeGivenDefaultRepoWithPurpose = getAutoLocalUrlFromTypeGivenDefaultRepoWithPurpose( log,  1LL,  v51,  @"auto");
                          __int128 v53 = (void *)objc_claimAutoreleasedReturnValue(AutoLocalUrlFromTypeGivenDefaultRepoWithPurpose);

                          __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v53 path]);
                          id v55 = ensureDirectory(v54);

                          __int128 v56 = (os_log_s *)objc_claimAutoreleasedReturnValue([v53 URLByAppendingPathComponent:v32]);
                          uint64_t v57 = objc_claimAutoreleasedReturnValue([v31 path]);
                          id v106 = v56;
                          uint64_t v58 = objc_claimAutoreleasedReturnValue(-[os_log_s path](v56, "path"));
                          id v59 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
                          id v113 = 0LL;
                          __int128 v105 = (void *)v57;
                          __int16 v102 = (os_log_s *)v58;
                          [v59 moveItemAtPath:v57 toPath:v58 error:&v113];
                          id v60 = v113;

                          __int128 v103 = v28;
                          if (v60)
                          {
                            id v61 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v108, "logger"));
                            uint64_t v62 = (os_log_s *)objc_claimAutoreleasedReturnValue([v61 oslog]);

                            if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
                            {
                              __int16 v100 = (char *)objc_claimAutoreleasedReturnValue([v34 summary]);
                              uint64_t v80 = objc_claimAutoreleasedReturnValue([v60 checkedDescription]);
                              *(_DWORD *)int buf = 138544130;
                              id v125 = (os_log_s *)v100;
                              __int16 v126 = 2114;
                              id v127 = v105;
                              __int16 v128 = 2114;
                              uint64_t v129 = v102;
                              __int16 v130 = 2114;
                              uint64_t v131 = v80;
                              id v81 = (void *)v80;
                              _os_log_error_impl( &dword_0,  v62,  OS_LOG_TYPE_ERROR,  "[AUTO-PRE-INSTALLED] {_preInstalledRelocateAutoAssets} Attempted to move auto-asset but failed | descriptor:%{public}@ | fromPath:%{public}@ | toPath:%{public}@ | error:%{public}@",  buf,  0x2Au);
                            }

                            id v99 = v60;

                            uint64_t v63 = (void *)objc_claimAutoreleasedReturnValue( +[NSFileManager defaultManager]( &OBJC_CLASS___NSFileManager,  "defaultManager"));
                            [v63 removeItemAtPath:v102 error:0];

                            id v64 = (void *)objc_claimAutoreleasedReturnValue( +[NSFileManager defaultManager]( &OBJC_CLASS___NSFileManager,  "defaultManager"));
                            os_log_t v65 = v105;
                            [v64 removeItemAtPath:v105 error:0];
                            uint64_t v66 = v102;
                            id v67 = v104;
                          }

                          else
                          {
                            [v34 setFoundAsPreInstalled:1];
                            -[NSMutableArray addObject:](v98, "addObject:", v34);
                            id ControlManager = getControlManager();
                            __int16 v71 = (void *)objc_claimAutoreleasedReturnValue(ControlManager);
                            uint64_t v72 = objc_claimAutoreleasedReturnValue([v71 getSAFRegistrationBundleID:v106]);

                            id v73 = getControlManager();
                            id v74 = (void *)objc_claimAutoreleasedReturnValue(v73);
                            [v74 updateSpaceAttributionForBundleID:v72 assetPath:v31 doRegistration:0];

                            id v75 = getControlManager();
                            unsigned int v76 = (void *)objc_claimAutoreleasedReturnValue(v75);
                            id v99 = (void *)v72;
                            [v76 updateSpaceAttributionForBundleID:v72 assetPath:v106 doRegistration:1];

                            id v77 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v108, "logger"));
                            id v64 = (void *)objc_claimAutoreleasedReturnValue([v77 oslog]);

                            if (os_log_type_enabled((os_log_t)v64, OS_LOG_TYPE_DEFAULT))
                            {
                              id v78 = (void *)objc_claimAutoreleasedReturnValue([v34 summary]);
                              *(_DWORD *)int buf = 138543618;
                              uint64_t v66 = v102;
                              id v125 = v102;
                              __int16 v126 = 2114;
                              id v127 = v78;
                              _os_log_impl( &dword_0,  (os_log_t)v64,  OS_LOG_TYPE_DEFAULT,  "[AUTO-PRE-INSTALLED] {_preInstalledRelocateAutoAssets} Added descriptor for pre-installe d asset | path:%{public}@ | descriptor:%{public}@ ",  buf,  0x16u);

                              id v67 = v104;
                              os_log_t v65 = v105;
                            }

                            else
                            {
                              id v67 = v104;
                              os_log_t v65 = v105;
                              uint64_t v66 = v102;
                            }
                          }

                          BOOL v44 = v106;
                          id v6 = v67;
                          __int128 v28 = v103;
                          uint64_t v36 = v101;
                        }

                        else
                        {
                          id v68 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v108, "logger"));
                          id v69 = (os_log_s *)objc_claimAutoreleasedReturnValue([v68 oslog]);

                          BOOL v44 = v69;
                          if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR))
                          {
                            uint64_t v79 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 summary]);
                            *(_DWORD *)int buf = 138543874;
                            id v125 = (os_log_s *)v31;
                            __int16 v126 = 2114;
                            id v127 = log;
                            __int16 v128 = 2114;
                            uint64_t v129 = v79;
                            _os_log_error_impl( &dword_0,  v69,  OS_LOG_TYPE_ERROR,  "[AUTO-PRE-INSTALLED] {_preInstalledRelocateAutoAssets} Failed to decrypt contentEncrypted asset at | path:%{public}@ | assetType:%{public}@ | descriptor:%{public}@",  buf,  0x20u);

                            BOOL v44 = v69;
                          }

                          id v6 = v104;
                        }

- (void)_preInstalledMigrateAssets
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v31 = self;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v5 oslog]);

  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int buf = 0;
    _os_log_impl( &dword_0,  v6,  OS_LOG_TYPE_DEFAULT,  "[AUTO-PRE-INSTALLED] {_preInstalledMigrateAssets} Starting pre-installed asset migration...",  buf,  2u);
  }

  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  unsigned int v9 = [v8 fileExistsAtPath:@"/private/var/MobileSoftwareUpdate/.MAAMigrated.plist"];

  if (v9)
  {
    BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "[AUTO-PRE-INSTALLED] {_preInstalledMigrateAssets} Already migrated assets, no need to run again",  buf,  2u);
    }
  }

  else
  {
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager _preInstalledRelocateAutoAssets]( self,  "_preInstalledRelocateAutoAssets"));
    id v30 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    if (v11 && -[os_log_s count](v11, "count"))
    {
      -[MADAutoAssetControlManager setMigratedFromPreinstalled:](self, "setMigratedFromPreinstalled:", 1LL);
      __int128 v34 = 0u;
      __int128 v35 = 0u;
      __int128 v32 = 0u;
      __int128 v33 = 0u;
      __int128 v28 = v11;
      id obj = v11;
      id v12 = -[os_log_s countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v32,  v37,  16LL);
      if (v12)
      {
        id v13 = v12;
        uint64_t v14 = *(void *)v33;
        do
        {
          for (uint64_t i = 0LL; i != v13; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v33 != v14) {
              objc_enumerationMutation(obj);
            }
            __int128 v16 = *(void **)(*((void *)&v32 + 1) + 8LL * (void)i);
            uint64_t v17 = objc_autoreleasePoolPush();
            __int128 v18 = (void *)objc_claimAutoreleasedReturnValue([v16 assetType]);
            __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v16 assetVersion]);
            id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@|%@",  v18,  v19));

            -[MADAutoAssetControlManager _preInstalledMakeDescriptorAvailable:fromLocation:]( v31,  "_preInstalledMakeDescriptorAvailable:fromLocation:",  v16,  @"_preInstalledMigrateAssets");
            -[NSMutableDictionary setSafeObject:forKey:](v30, "setSafeObject:forKey:", @"Migrated", v20);

            objc_autoreleasePoolPop(v17);
          }

          id v13 = -[os_log_s countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v32,  v37,  16LL);
        }

        while (v13);
      }

      __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v31, "logger"));
      unsigned __int8 v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

      p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "[AUTO-PRE-INSTALLED] {_preInstalledMigrateAssets} ...Finishing pre-installed asset migration",  buf,  2u);
      }

      id v11 = v28;
    }

    else
    {
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      unsigned __int8 v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "[AUTO-PRE-INSTALLED] {_preInstalledMigrateAssets} no descriptors found to migrate",  buf,  2u);
      }
    }

    -[NSMutableDictionary writeToFile:atomically:]( v30,  "writeToFile:atomically:",  @"/private/var/MobileSoftwareUpdate/.MAAMigrated.plist",  1LL);
    id v24 = (void *)objc_claimAutoreleasedReturnValue(-[__objc2_ivar_list defaultManager](p_ivars[187], "defaultManager"));
    unsigned __int8 v25 = [v24 fileExistsAtPath:@"/private/var/MobileSoftwareUpdate/.MAAMigrated.plist"];

    if ((v25 & 1) == 0)
    {
      uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v31, "autoControlManagerFSM"));
      __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v26 diag]);
      [v27 trackAnomaly:@"[AUTO-PRE-INSTALLED]" forReason:@"Failed to write cookie file" withResult:*__error() withError:0];
    }
  }
}

- (void)secureCheckUngraft:(id)a3 forDescriptorNoLongerLocked:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned int v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  if (+[MADAutoAssetSecure isSecureAsset:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isSecureAsset:forDescriptor:",  v6,  v7))
  {
    unsigned int v10 = -[MADAutoAssetControlManager isDescriptorCurrentlyLocked:forDescriptor:]( self,  "isDescriptorCurrentlyLocked:forDescriptor:",  v6,  v7);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
    if (v10)
    {
      if (v13)
      {
        *(_DWORD *)int buf = 138543362;
        id v21 = v6;
        _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "\n{%{public}@:secureCheckUngraft} [AUTO-SECURE] NOT ungrafting (currently locked)",  buf,  0xCu);
      }

      goto LABEL_14;
    }

    if (v13)
    {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
      *(_DWORD *)int buf = 138543618;
      id v21 = v6;
      __int16 v22 = 2114;
      uint64_t v23 = v14;
      _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-GRAFT-REMOVE][SINGLETON-CONTROL] {%{public}@:secureCheckUngraft} | ungrafting|unmounting (NOT curr ently locked) | downloadedDescriptor:%{public}@",  buf,  0x16u);
    }

    [v7 setSecureOperationInProgress:1];
    id v19 = 0LL;
    +[MADAutoAssetSecure ungraft:forDescriptor:ungraftingError:]( &OBJC_CLASS___MADAutoAssetSecure,  "ungraft:forDescriptor:ungraftingError:",  v6,  v7,  &v19);
    id v12 = (os_log_s *)v19;
    [v7 setSecureOperationInProgress:0];
    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int128 v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 oslog]);

    if (v12)
    {
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s checkedDescription](v12, "checkedDescription"));
        __int128 v18 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
        *(_DWORD *)int buf = 138543874;
        id v21 = v6;
        __int16 v22 = 2114;
        uint64_t v23 = v17;
        __int16 v24 = 2114;
        unsigned __int8 v25 = v18;
        _os_log_error_impl( &dword_0,  v16,  OS_LOG_TYPE_ERROR,  "\n [SECURE][AUTO-GRAFT-REMOVE][SINGLETON-CONTROL] {%{public}@:secureCheckUngraft} | ungraft|unmount ERROR | error :%{public}@ | downloadedDescriptor:%{public}@",  buf,  0x20u);

LABEL_12:
      }
    }

    else if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
      *(_DWORD *)int buf = 138543618;
      id v21 = v6;
      __int16 v22 = 2114;
      uint64_t v23 = v17;
      _os_log_impl( &dword_0,  v16,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-GRAFT-REMOVE][SINGLETON-CONTROL] {%{public}@:secureCheckUngraft} | ungraft|unmount SUCCESS | downl oadedDescriptor:%{public}@",  buf,  0x16u);
      goto LABEL_12;
    }

LABEL_14:
  }
}

- (void)secureForceUngraft:(id)a3 forDescriptorBeingRemoved:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned int v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  if (+[MADAutoAssetSecure isSecureAsset:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isSecureAsset:forDescriptor:",  v6,  v7))
  {
    unsigned int v10 = -[MADAutoAssetControlManager isDescriptorCurrentlyLocked:forDescriptor:]( self,  "isDescriptorCurrentlyLocked:forDescriptor:",  v6,  v7);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (v10)
    {
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetControlManager secureForceUngraft:forDescriptorBeingRemoved:].cold.1();
      }
    }

    else if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v13 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
      *(_DWORD *)int buf = 138543618;
      id v21 = v6;
      __int16 v22 = 2114;
      uint64_t v23 = v13;
      _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-GRAFT-REMOVE][SINGLETON-CONTROL] {%{public}@:secureForceUngraft} | ungrafting|unmounting (NOT curr ently locked) | downloadedDescriptor:%{public}@",  buf,  0x16u);
    }

    [v7 setSecureOperationInProgress:1];
    id v19 = 0LL;
    +[MADAutoAssetSecure ungraft:forDescriptor:ungraftingError:]( &OBJC_CLASS___MADAutoAssetSecure,  "ungraft:forDescriptor:ungraftingError:",  v6,  v7,  &v19);
    id v14 = v19;
    [v7 setSecureOperationInProgress:0];
    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
    __int128 v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 oslog]);

    if (v14)
    {
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v14 checkedDescription]);
        __int128 v18 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
        *(_DWORD *)int buf = 138543874;
        id v21 = v6;
        __int16 v22 = 2114;
        uint64_t v23 = v17;
        __int16 v24 = 2114;
        unsigned __int8 v25 = v18;
        _os_log_error_impl( &dword_0,  v16,  OS_LOG_TYPE_ERROR,  "\n [SECURE][AUTO-GRAFT-REMOVE][SINGLETON-CONTROL] {%{public}@:secureForceUngraft} | ungraft|unmount ERROR | error :%{public}@ | downloadedDescriptor:%{public}@",  buf,  0x20u);

LABEL_12:
      }
    }

    else if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
      *(_DWORD *)int buf = 138543618;
      id v21 = v6;
      __int16 v22 = 2114;
      uint64_t v23 = v17;
      _os_log_impl( &dword_0,  v16,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-GRAFT-REMOVE][SINGLETON-CONTROL] {%{public}@:secureForceUngraft} | ungraft|unmount SUCCESS | downl oadedDescriptor:%{public}@",  buf,  0x16u);
      goto LABEL_12;
    }
  }
}

- (void)secureCheckUngraftAll:(id)a3 forSetDescriptorNoLongerLocked:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned int v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  id v10 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager autoAssetDescriptorsForSet:]( self,  "autoAssetDescriptorsForSet:",  v7));
  id v11 = [v10 countByEnumeratingWithState:&v32 objects:v42 count:16];
  if (v11)
  {
    id v12 = v11;
    id v30 = v7;
    int v13 = 0;
    uint64_t v14 = *(void *)v33;
    int v15 = 1;
    do
    {
      for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v33 != v14) {
          objc_enumerationMutation(v10);
        }
        uint64_t v17 = *(void *)(*((void *)&v32 + 1) + 8LL * (void)i);
        __int128 v18 = objc_autoreleasePoolPush();
        v13 |= +[MADAutoAssetSecure isSecureAsset:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isSecureAsset:forDescriptor:",  v6,  v17);
        v15 &= !-[MADAutoAssetControlManager isDescriptorCurrentlyLocked:forDescriptor:]( self,  "isDescriptorCurrentlyLocked:forDescriptor:",  v6,  v17);
        objc_autoreleasePoolPop(v18);
      }

      id v12 = [v10 countByEnumeratingWithState:&v32 objects:v42 count:16];
    }

    while (v12);

    id v7 = v30;
    if ((v13 & v15) == 1)
    {
      id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        id v21 = (__CFString *)objc_claimAutoreleasedReturnValue([v30 summary]);
        *(_DWORD *)int buf = 138543618;
        id v37 = v6;
        __int16 v38 = 2114;
        BOOL v39 = v21;
        _os_log_impl( &dword_0,  v20,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-GRAFT-REMOVE-ALL][SET-CONTROL] {%{public}@:secureCheckUngraftAll} | ungrafting ALL | containsSec ureAssets:Y | allAssetsOfSetUnlocked:Y | setDescriptor:%{public}@",  buf,  0x16u);
      }

      id v31 = 0LL;
      +[MADAutoAssetSecure ungraftAll:forSetDescriptor:withAutoAssetDescriptors:ungraftingError:]( &OBJC_CLASS___MADAutoAssetSecure,  "ungraftAll:forSetDescriptor:withAutoAssetDescriptors:ungraftingError:",  v6,  v30,  v10,  &v31);
      id v22 = v31;
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger"));
      __int16 v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

      if (v22)
      {
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        {
          unsigned __int8 v25 = (__CFString *)objc_claimAutoreleasedReturnValue([v22 checkedDescription]);
          uint64_t v26 = (__CFString *)objc_claimAutoreleasedReturnValue([v30 summary]);
          *(_DWORD *)int buf = 138543874;
          id v37 = v6;
          __int16 v38 = 2114;
          BOOL v39 = v25;
          __int16 v40 = 2114;
          __int16 v41 = v26;
          _os_log_error_impl( &dword_0,  v24,  OS_LOG_TYPE_ERROR,  "\n [SECURE][AUTO-GRAFT-REMOVE-ALL][SET-CONTROL] {%{public}@:secureCheckUngraftAll} | ungraft|unmount ERROR | er ror:%{public}@ | setDescriptor:%{public}@",  buf,  0x20u);

LABEL_24:
        }
      }

      else if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        unsigned __int8 v25 = (__CFString *)objc_claimAutoreleasedReturnValue([v30 summary]);
        *(_DWORD *)int buf = 138543618;
        id v37 = v6;
        __int16 v38 = 2114;
        BOOL v39 = v25;
        _os_log_impl( &dword_0,  v24,  OS_LOG_TYPE_DEFAULT,  "\n [SECURE][AUTO-GRAFT-REMOVE-ALL][SET-CONTROL] {%{public}@:secureCheckUngraftAll} | ungraft|unmount SUCCESS | se tDescriptor:%{public}@",  buf,  0x16u);
        goto LABEL_24;
      }

      goto LABEL_26;
    }
  }

  else
  {

    LOBYTE(v13) = 0;
    int v15 = 1;
  }

  __int128 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](self, "logger", v30));
  id v22 = (id)objc_claimAutoreleasedReturnValue([v27 oslog]);

  if (os_log_type_enabled((os_log_t)v22, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v28 = @"N";
    if ((v13 & 1) != 0) {
      __int128 v29 = @"Y";
    }
    else {
      __int128 v29 = @"N";
    }
    *(_DWORD *)int buf = 138543874;
    id v37 = v6;
    __int16 v38 = 2114;
    BOOL v39 = v29;
    if (v15) {
      __int128 v28 = @"Y";
    }
    __int16 v40 = 2114;
    __int16 v41 = v28;
    _os_log_impl( &dword_0,  (os_log_t)v22,  OS_LOG_TYPE_DEFAULT,  "\n {%{public}@:secureCheckUngraftAll} [AUTO-SECURE] NOT ungrafting | containsSecureAssets:%{public}@ | allAssetsOfSet Unlocked:%{public}@",  buf,  0x20u);
  }

- (void)secureForceUngraftAll:(id)a3 forSetDescriptorBeingRemoved:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  unsigned int v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  id v10 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager autoAssetDescriptorsForSet:]( self,  "autoAssetDescriptorsForSet:",  v7));
  id v11 = [v10 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v18;
    do
    {
      uint64_t v14 = 0LL;
      do
      {
        if (*(void *)v18 != v13) {
          objc_enumerationMutation(v10);
        }
        uint64_t v15 = *(void *)(*((void *)&v17 + 1) + 8LL * (void)v14);
        __int128 v16 = objc_autoreleasePoolPush();
        if (+[MADAutoAssetSecure isSecureAsset:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isSecureAsset:forDescriptor:",  v6,  v15,  (void)v17)
          && -[MADAutoAssetControlManager isDescriptorCurrentlyLocked:forDescriptor:]( self,  "isDescriptorCurrentlyLocked:forDescriptor:",  v6,  v15))
        {
          -[MADAutoAssetControlManager secureForceUngraft:forDescriptorBeingRemoved:]( self,  "secureForceUngraft:forDescriptorBeingRemoved:",  v6,  v15);
        }

        objc_autoreleasePoolPop(v16);
        uint64_t v14 = (char *)v14 + 1;
      }

      while (v12 != v14);
      id v12 = [v10 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }

    while (v12);
  }
}

- (void)secureClearInsecureLatestAtomicInstances
{
  id v2 = self;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](self, "autoControlManagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager persistedKnownSetConfigurations](v2, "persistedKnownSetConfigurations"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 persistedEntryIDs:@"secureClearInsecureLatestAtomicInstances"]);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v2, "logger"));
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 oslog]);

  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 138543618;
    __int128 v83 = @"secureClearInsecureLatestAtomicInstances";
    __int16 v84 = 2048;
    id v85 = [v6 count];
    _os_log_impl( &dword_0,  v8,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-SECURE][AUTO-VALIDATE][SET-CONTROL][STARTUP] {%{public}@} | post secure startup self-healing - validating al l latest-to-vend | persistedEntryIDs Count:%llu",  buf,  0x16u);
  }

  if ([v6 count])
  {
    id v68 = +[MADAutoAssetLocker copyOfLocksBySelector](&OBJC_CLASS___MADAutoAssetLocker, "copyOfLocksBySelector");
    __int128 v76 = 0u;
    __int128 v77 = 0u;
    __int128 v78 = 0u;
    __int128 v79 = 0u;
    id v59 = v6;
    id v9 = v6;
    id v10 = [v9 countByEnumeratingWithState:&v76 objects:v81 count:16];
    if (!v10) {
      goto LABEL_53;
    }
    id v11 = v10;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v64 = *(void *)v77;
    uint64_t v13 = &MobileAssetKeyManager__metaData.ivars;
    id v60 = v9;
    id v70 = v2;
    while (1)
    {
      uint64_t v14 = 0LL;
      id v61 = v11;
      do
      {
        if (*(void *)v77 != v64) {
          objc_enumerationMutation(v9);
        }
        uint64_t v15 = *(void **)(*((void *)&v76 + 1) + 8LL * (void)v14);
        id context = objc_autoreleasePoolPush();
        __int128 v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager persistedKnownSetConfigurations]( v2,  "persistedKnownSetConfigurations"));
        __int128 v17 = (void *)objc_claimAutoreleasedReturnValue( [v16 persistedEntry:v15 fromLocation:@"secureClearInsecureLatestAtomicInstances"]);

        __int16 v71 = v17;
        if (v17)
        {
          id v18 = [v17 secureCodedObjectForKey:@"setConfiguration" ofClass:objc_opt_class(p_ivars[211])];
          __int128 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
          __int128 v20 = v19;
          if (v19)
          {
            id v21 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s latestAtomicInstanceToVend](v19, "latestAtomicInstanceToVend"));
            uint64_t v22 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetDescriptorDownloadedByAtomicInstanceUUID:]( v2,  "locateSetDescriptorDownloadedByAtomicInstanceUUID:",  v21));

            os_log_t log = (os_log_s *)v22;
            if (v22)
            {
              uint64_t v62 = v20;
              uint64_t v63 = v14;
              __int128 v74 = 0u;
              __int128 v75 = 0u;
              __int128 v72 = 0u;
              __int128 v73 = 0u;
              uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager autoAssetDescriptorsForSet:]( v2,  "autoAssetDescriptorsForSet:",  v22));
              id v24 = [v23 countByEnumeratingWithState:&v72 objects:v80 count:16];
              if (v24)
              {
                id v25 = v24;
                char v67 = 0;
                char v69 = 0;
                uint64_t v26 = *(void *)v73;
                do
                {
                  for (uint64_t i = 0LL; i != v25; uint64_t i = (char *)i + 1)
                  {
                    __int128 v28 = v13;
                    if (*(void *)v73 != v26) {
                      objc_enumerationMutation(v23);
                    }
                    __int128 v29 = *(void **)(*((void *)&v72 + 1) + 8LL * (void)i);
                    id v30 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
                    id v31 = (void *)objc_claimAutoreleasedReturnValue([v29 assetType]);
                    __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([v29 assetSpecifier]);
                    __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v29 assetVersion]);
                    id v34 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v30,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v31,  v32,  v33);

                    uint64_t v13 = v28;
                    if (-[__objc2_ivar_list isPersonalizationOrGraftingRequired:forDescriptor:]( v28[195],  "isPersonalizationOrGraftingRequired:forDescriptor:",  @"secureClearInsecureLatestAtomicInstances",  v29))
                    {
                      if (-[__objc2_ivar_list isPersonalizationRequired:forDescriptor:]( v28[195],  "isPersonalizationRequired:forDescriptor:",  @"secureClearInsecureLatestAtomicInstances",  v29))
                      {
                        __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v70, "logger"));
                        uint64_t v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

                        if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
                        {
                          BOOL v43 = (void *)objc_claimAutoreleasedReturnValue([v34 summary]);
                          *(_DWORD *)int buf = 138543618;
                          __int128 v83 = @"secureClearInsecureLatestAtomicInstances";
                          __int16 v84 = 2114;
                          id v85 = v43;
                          _os_log_error_impl( &dword_0,  v36,  OS_LOG_TYPE_ERROR,  "\n [AUTO-SECURE][AUTO-VALIDATE][SET-CONTROL][STARTUP] {%{public}@} | personalization required a fter startup secure-healing | downloadedSelector:%{public}@",  buf,  0x16u);
                        }

                        char v69 = 1;
                      }

                      else
                      {
                        __int16 v38 = (void *)objc_claimAutoreleasedReturnValue([v34 persistedEntryID]);
                        id v39 = [v68 safeObjectForKey:v38 ofClass:objc_opt_class(MAAutoAssetLock)];
                        uint64_t v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);

                        __int16 v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v70, "logger"));
                        __int16 v41 = (os_log_s *)objc_claimAutoreleasedReturnValue([v40 oslog]);

                        if (v36)
                        {
                          if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
                          {
                            BOOL v44 = (void *)objc_claimAutoreleasedReturnValue([v34 summary]);
                            *(_DWORD *)int buf = 138543618;
                            __int128 v83 = @"secureClearInsecureLatestAtomicInstances";
                            __int16 v84 = 2114;
                            id v85 = v44;
                            _os_log_error_impl( &dword_0,  v41,  OS_LOG_TYPE_ERROR,  "\n [AUTO-SECURE][AUTO-VALIDATE][SET-CONTROL][STARTUP] {%{public}@} | unable to re-graft durin g startup secure-healing | downloadedSelector:%{public}@",  buf,  0x16u);
                          }

                          char v67 = 1;
                        }

                        else if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
                        {
                          uint32_t v42 = (void *)objc_claimAutoreleasedReturnValue([v34 summary]);
                          *(_DWORD *)int buf = 138543618;
                          __int128 v83 = @"secureClearInsecureLatestAtomicInstances";
                          __int16 v84 = 2114;
                          id v85 = v42;
                          _os_log_impl( &dword_0,  v41,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-SECURE][AUTO-VALIDATE][SET-CONTROL][STARTUP] {%{public}@} | latest-to-vend includes pe rsonalized-not-grafted|mounted (acceptable since not currently locked) | downloadedSelector:%{public}@",  buf,  0x16u);
                        }
                      }

                      id v37 = v71;

                      uint64_t v13 = v28;
                    }

                    else
                    {
                      id v37 = v71;
                    }
                  }

                  id v25 = [v23 countByEnumeratingWithState:&v72 objects:v80 count:16];
                }

                while (v25);
              }

              else
              {
                char v67 = 0;
                char v69 = 0;
                id v37 = v71;
              }

              if ((v69 & 1) == 0 && (v67 & 1) == 0)
              {
                id v2 = v70;
                id v9 = v60;
                id v11 = v61;
                p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
                __int128 v20 = v62;
                uint64_t v14 = v63;
                goto LABEL_50;
              }

              __int128 v20 = v62;
              id v49 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s latestAtomicInstanceToVend](v62, "latestAtomicInstanceToVend"));
              id v2 = v70;
              __int16 v50 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetControlManager locateSetAtomicInstanceByInstanceUUID:]( v70,  "locateSetAtomicInstanceByInstanceUUID:",  v49));

              __int128 v51 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v70, "logger"));
              __int128 v52 = (os_log_s *)objc_claimAutoreleasedReturnValue([v51 oslog]);

              id v9 = v60;
              id v11 = v61;
              p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
              if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
              {
                uint64_t v58 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s summary](v62, "summary"));
                *(_DWORD *)int buf = 138543618;
                __int128 v83 = @"secureClearInsecureLatestAtomicInstances";
                __int16 v84 = 2114;
                id v85 = v58;
                _os_log_error_impl( &dword_0,  v52,  OS_LOG_TYPE_ERROR,  "\n [AUTO-SECURE][AUTO-VALIDATE][SET-CONTROL][STARTUP] {%{public}@} unable to self-heal, clearing latest-t o-vend | setConfiguration:%{public}@",  buf,  0x16u);
              }

              -[MADAutoAssetControlManager setConfigurationForceUnlocked:forSetConfiguration:]( v70,  "setConfigurationForceUnlocked:forSetConfiguration:",  @"secureClearInsecureLatestAtomicInstances",  v62);
              if (v50)
              {
                -[MADAutoAssetControlManager _clearSetConfigurationLatestToVend:forSetDesriptor:forSetAtomicInstance:fromLocation:]( v70,  "_clearSetConfigurationLatestToVend:forSetDesriptor:forSetAtomicInstance:fromLocation:",  v62,  log,  v50,  @"secureClearInsecureLatestAtomicInstances");
              }

              else
              {
                __int128 v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager autoControlManagerFSM](v70, "autoControlManagerFSM"));
                __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v53 diag]);
                id v55 = objc_alloc(&OBJC_CLASS___NSString);
                __int128 v56 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s summary](v62, "summary"));
                uint64_t v57 = -[NSString initWithFormat:]( v55,  "initWithFormat:",  @"{%@} no set-atomic-instance for set-configuration latest-to-vend | setConfiguration:%@",  @"secureClearInsecureLatestAtomicInstances",  v56);
                [v54 trackAnomaly:@"AUTO-SET-CONTROL" forReason:v57 withResult:6111 withError:0];

                p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
              }

              uint64_t v14 = v63;
            }
          }

          else
          {
            id v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v2, "logger"));
            id v48 = (os_log_s *)objc_claimAutoreleasedReturnValue([v47 oslog]);

            os_log_t log = v48;
            if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)int buf = 138543618;
              __int128 v83 = @"secureClearInsecureLatestAtomicInstances";
              __int16 v84 = 2114;
              id v37 = v71;
              id v85 = v71;
              _os_log_error_impl( &dword_0,  log,  OS_LOG_TYPE_ERROR,  "\n [AUTO-SECURE][AUTO-VALIDATE][SET-CONTROL][STARTUP] {%{public}@} | unable to load set-configuration | per sistedEntry:%{public}@",  buf,  0x16u);
LABEL_50:

              goto LABEL_51;
            }
          }

          id v37 = v71;
          goto LABEL_50;
        }

        __int16 v45 = v14;
        uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetControlManager logger](v2, "logger"));
        __int128 v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v46 oslog]);

        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int buf = 138543618;
          __int128 v83 = @"secureClearInsecureLatestAtomicInstances";
          __int16 v84 = 2114;
          id v85 = v15;
          _os_log_error_impl( &dword_0,  v20,  OS_LOG_TYPE_ERROR,  "\n [AUTO-SECURE][AUTO-VALIDATE][SET-CONTROL][STARTUP] {%{public}@} | unable to load persisted-state entry | entryID:%{public}@",  buf,  0x16u);
        }

        uint64_t v14 = v45;
        id v37 = 0LL;
LABEL_51:

        objc_autoreleasePoolPop(context);
        uint64_t v14 = (char *)v14 + 1;
      }

      while (v14 != v11);
      id v11 = [v9 countByEnumeratingWithState:&v76 objects:v81 count:16];
      if (!v11)
      {
LABEL_53:

        id v6 = v59;
        break;
      }
    }
  }
}

+ (id)buildDirectivesSummary
{
  id v2 = -[NSMutableString initWithString:](objc_alloc(&OBJC_CLASS___NSMutableString), "initWithString:", &stru_355768);
  -[NSMutableString appendString:](v2, "appendString:", @"|BUILDING_DAEMON");
  -[NSMutableString appendString:](v2, "appendString:", @"|TARGET_OS_MAC");
  -[NSMutableString appendString:](v2, "appendString:", @"|TARGET_OS_IPHONE");
  -[NSMutableString appendString:](v2, "appendString:", @"|TARGET_OS_TV");
  if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v2, &stru_355768))
  {
    id v3 = -[NSMutableString initWithString:]( objc_alloc(&OBJC_CLASS___NSMutableString),  "initWithString:",  @"(NO_TARGETS_DEFINED)");

    id v2 = v3;
  }

  else
  {
    -[NSMutableString appendString:](v2, "appendString:", @"|");
  }

  return v2;
}

- (OS_dispatch_queue)sharedDispatchQueue
{
  return self->_sharedDispatchQueue;
}

- (void)setServerConnectionPolicy:(id)a3
{
}

- (void)setConnectionServer:(id)a3
{
}

- (void)setAutoControlManagerFSM:(id)a3
{
}

- (void)setPersistedActiveJobs:(id)a3
{
}

- (void)setPersistedKnownDescriptors:(id)a3
{
}

- (void)setCurrentStatusBySelector:(id)a3
{
}

- (void)setCurrentJobsBySelector:(id)a3
{
}

- (void)setCurrentJobsByUUID:(id)a3
{
}

- (BOOL)stagerResumed
{
  return self->_stagerResumed;
}

- (void)setStagerResumed:(BOOL)a3
{
  self->_stagerResumed = a3;
}

- (MADAutoAssetJob)stagerCurrentJob
{
  return self->_stagerCurrentJob;
}

- (void)setStagerCurrentJob:(id)a3
{
}

- (MADAutoAssetJob)stagerBondedToAutoJob
{
  return self->_stagerBondedToAutoJob;
}

- (void)setStagerBondedToAutoJob:(id)a3
{
}

- (NSString)stagerCurrentJobUUID
{
  return self->_stagerCurrentJobUUID;
}

- (void)setStagerCurrentJobUUID:(id)a3
{
}

- (MADAutoSetConfiguration)stagerFormedSetConfiguration
{
  return self->_stagerFormedSetConfiguration;
}

- (void)setStagerFormedSetConfiguration:(id)a3
{
}

- (MAAutoAssetSelector)stagerDownloadingSelector
{
  return self->_stagerDownloadingSelector;
}

- (void)setStagerDownloadingSelector:(id)a3
{
}

- (void)setLookupGrantsByAssetType:(id)a3
{
}

- (MAAutoAssetUpdatePolicy)defaultUpdatePolicy
{
  return self->_defaultUpdatePolicy;
}

- (NSMutableDictionary)alreadyScheduledSelectors
{
  return self->_alreadyScheduledSelectors;
}

- (void)setAlreadyScheduledSelectors:(id)a3
{
}

- (void)setTimedOperations:(id)a3
{
}

- (void)setClientRequestsBeingTracked:(id)a3
{
}

- (void)setClientRequestsAwaitingSync:(id)a3
{
}

- (void)setClientRequestsAwaitingFirstUnlock:(id)a3
{
}

- (void)setDownloadManagerEventsAwaitingResumed:(id)a3
{
}

- (NSMutableArray)downloadManagerInFlightTasks
{
  return self->_downloadManagerInFlightTasks;
}

- (void)setDownloadManagerInFlightTasks:(id)a3
{
}

- (NSTimer)beyondFirstUnlockPollTimer
{
  return self->_beyondFirstUnlockPollTimer;
}

- (void)setBeyondFirstUnlockPollTimer:(id)a3
{
}

- (NSTimer)awaitDownloadManagerSyncTimer
{
  return self->_awaitDownloadManagerSyncTimer;
}

- (void)setAwaitDownloadManagerSyncTimer:(id)a3
{
}

- (BOOL)receivedDownloadManagerSync
{
  return self->_receivedDownloadManagerSync;
}

- (void)setReceivedDownloadManagerSync:(BOOL)a3
{
  self->_receivedDownloadManagerSync = a3;
}

- (BOOL)maintainingActiveJobStatus
{
  return self->_maintainingActiveJobStatus;
}

- (void)setMaintainingActiveJobStatus:(BOOL)a3
{
  self->_maintainingActiveJobStatus = a3;
}

- (NSMutableDictionary)activelyEliminatingSelectors
{
  return self->_activelyEliminatingSelectors;
}

- (void)setActivelyEliminatingSelectors:(id)a3
{
}

- (void)setStatistics:(id)a3
{
}

- (void)setStatisticsNextMaintenanceReport:(double)a3
{
  self->_statisticsNextMaintenanceReport = a3;
}

- (NSDictionary)locksPriorToSecureHealing
{
  return self->_locksPriorToSecureHealing;
}

- (void)setLocksPriorToSecureHealing:(id)a3
{
}

- (NSMutableArray)descriptorsRequiringPersonalization
{
  return self->_descriptorsRequiringPersonalization;
}

- (void)setDescriptorsRequiringPersonalization:(id)a3
{
}

- (NSMutableArray)descriptorsRequiringGrafting
{
  return self->_descriptorsRequiringGrafting;
}

- (void)setDescriptorsRequiringGrafting:(id)a3
{
}

- (NSMutableArray)prePersonalizedSelectors
{
  return self->_prePersonalizedSelectors;
}

- (void)setPrePersonalizedSelectors:(id)a3
{
}

- (BOOL)secureHealingPersonalizationAttempted
{
  return self->_secureHealingPersonalizationAttempted;
}

- (void)setSecureHealingPersonalizationAttempted:(BOOL)a3
{
  self->_secureHealingPersonalizationAttempted = a3;
}

- (BOOL)firstDaemonStartupSinceDeviceBoot
{
  return self->_firstDaemonStartupSinceDeviceBoot;
}

- (void)setFirstDaemonStartupSinceDeviceBoot:(BOOL)a3
{
  self->_firstDaemonStartupSinceDeviceBoot = a3;
}

- (void)setCurrentSetJobsByIdentifier:(id)a3
{
}

- (void)setCurrentSetStatusByInstance:(id)a3
{
}

- (void)setKnownSetConfigurationsByIdentifier:(id)a3
{
}

- (void)setKnownSetAtomicInstancesByInstance:(id)a3
{
}

- (void)setDownloadedSetDescriptorsByInstance:(id)a3
{
}

- (NSMutableDictionary)activeSetDescriptorsByIdentifier
{
  return self->_activeSetDescriptorsByIdentifier;
}

- (void)setActiveSetDescriptorsByIdentifier:(id)a3
{
}

- (NSMutableDictionary)activeSetDescriptorsByInstance
{
  return self->_activeSetDescriptorsByInstance;
}

- (void)setActiveSetDescriptorsByInstance:(id)a3
{
}

- (NSMutableDictionary)shortTermLockedLatestByIdentifier
{
  return self->_shortTermLockedLatestByIdentifier;
}

- (void)setShortTermLockedLatestByIdentifier:(id)a3
{
}

- (NSMutableDictionary)shortTermLockedByAtomicInstance
{
  return self->_shortTermLockedByAtomicInstance;
}

- (void)setShortTermLockedByAtomicInstance:(id)a3
{
}

- (NSMutableArray)descriptorsDroppedOnStartup
{
  return self->_descriptorsDroppedOnStartup;
}

- (void)setDescriptorsDroppedOnStartup:(id)a3
{
}

- (BOOL)persistedActiveSetJobsLoaded
{
  return self->_persistedActiveSetJobsLoaded;
}

- (void)setPersistedActiveSetJobsLoaded:(BOOL)a3
{
  self->_persistedActiveSetJobsLoaded = a3;
}

- (void)setPersistedKnownSetConfigurations:(id)a3
{
}

- (void)setPersistedKnownSetAtomicInstances:(id)a3
{
}

- (void)setPersistedActiveJobSetDescriptors:(id)a3
{
}

- (void)setPersistedDownloadedSetDescriptors:(id)a3
{
}

- (MADAutoAssetPersisted)persistedSetTargets
{
  return self->_persistedSetTargets;
}

- (void)setPersistedSetTargets:(id)a3
{
}

- (MADAutoAssetPersisted)persistedSetLookupResults
{
  return self->_persistedSetLookupResults;
}

- (void)setPersistedSetLookupResults:(id)a3
{
}

- (void)setSetLockUsageMap:(id)a3
{
}

- (BOOL)preferenceScheduledAlwaysNonDiscretionary
{
  return self->_preferenceScheduledAlwaysNonDiscretionary;
}

- (void)setPreferenceScheduledAlwaysNonDiscretionary:(BOOL)a3
{
  self->_preferenceScheduledAlwaysNonDiscretionary = a3;
}

- (BOOL)preferenceScheduledBackupTriggersDisabled
{
  return self->_preferenceScheduledBackupTriggersDisabled;
}

- (void)setPreferenceScheduledBackupTriggersDisabled:(BOOL)a3
{
  self->_preferenceScheduledBackupTriggersDisabled = a3;
}

- (NSString)preferenceSessionIDBase
{
  return self->_preferenceSessionIDBase;
}

- (void)setPreferenceSessionIDBase:(id)a3
{
}

- (int64_t)preferenceConnectorInitialWaitSecs
{
  return self->_preferenceConnectorInitialWaitSecs;
}

- (void)setPreferenceConnectorInitialWaitSecs:(int64_t)a3
{
  self->_preferenceConnectorInitialWaitSecs = a3;
}

- (NSArray)preferenceConnectorBackoffRetryTimes
{
  return self->_preferenceConnectorBackoffRetryTimes;
}

- (void)setPreferenceConnectorBackoffRetryTimes:(id)a3
{
}

- (int64_t)preferenceConnectorWaitBeforeRetrySecs
{
  return self->_preferenceConnectorWaitBeforeRetrySecs;
}

- (void)setPreferenceConnectorWaitBeforeRetrySecs:(int64_t)a3
{
  self->_preferenceConnectorWaitBeforeRetrySecs = a3;
}

- (BOOL)preferenceAutoAssetObserverIgnoreNetworkStatus
{
  return self->_preferenceAutoAssetObserverIgnoreNetworkStatus;
}

- (void)setPreferenceAutoAssetObserverIgnoreNetworkStatus:(BOOL)a3
{
  self->_preferenceAutoAssetObserverIgnoreNetworkStatus = a3;
}

- (BOOL)preferenceAutoAssetLogSetCompare
{
  return self->_preferenceAutoAssetLogSetCompare;
}

- (void)setPreferenceAutoAssetLogSetCompare:(BOOL)a3
{
  self->_preferenceAutoAssetLogSetCompare = a3;
}

- (BOOL)preferenceAutoAssetNoPersistedOverflowLimit
{
  return self->_preferenceAutoAssetNoPersistedOverflowLimit;
}

- (void)setPreferenceAutoAssetNoPersistedOverflowLimit:(BOOL)a3
{
  self->_preferenceAutoAssetNoPersistedOverflowLimit = a3;
}

- (int64_t)preferenceMaxStagerDeterminingSecs
{
  return self->_preferenceMaxStagerDeterminingSecs;
}

- (void)setPreferenceMaxStagerDeterminingSecs:(int64_t)a3
{
  self->_preferenceMaxStagerDeterminingSecs = a3;
}

- (int64_t)preferenceStagerDeterminePallasResponseFewer
{
  return self->_preferenceStagerDeterminePallasResponseFewer;
}

- (void)setPreferenceStagerDeterminePallasResponseFewer:(int64_t)a3
{
  self->_preferenceStagerDeterminePallasResponseFewer = a3;
}

- (BOOL)preferenceStagerDownloadFirstNotInCatalog
{
  return self->_preferenceStagerDownloadFirstNotInCatalog;
}

- (void)setPreferenceStagerDownloadFirstNotInCatalog:(BOOL)a3
{
  self->_preferenceStagerDownloadFirstNotInCataos_log_t log = a3;
}

- (NSString)preferenceAsIfBootedOSIsOSVersion
{
  return self->_preferenceAsIfBootedOSIsOSVersion;
}

- (void)setPreferenceAsIfBootedOSIsOSVersion:(id)a3
{
}

- (NSString)preferenceAsIfBootedOSIsBuildVersion
{
  return self->_preferenceAsIfBootedOSIsBuildVersion;
}

- (void)setPreferenceAsIfBootedOSIsBuildVersion:(id)a3
{
}

- (BOOL)preferenceAsIfBackgroundSpecified
{
  return self->_preferenceAsIfBackgroundSpecified;
}

- (void)setPreferenceAsIfBackgroundSpecified:(BOOL)a3
{
  self->_preferenceAsIfBackgroundSpecified = a3;
}

- (BOOL)preferenceAsIfBackground
{
  return self->_preferenceAsIfBackground;
}

- (void)setPreferenceAsIfBackground:(BOOL)a3
{
  self->_preferenceAsIfBackground = a3;
}

- (BOOL)preferenceAsIfRampSpecified
{
  return self->_preferenceAsIfRampSpecified;
}

- (void)setPreferenceAsIfRampSpecified:(BOOL)a3
{
  self->_preferenceAsIfRampSpecified = a3;
}

- (BOOL)preferenceAsIfRamp
{
  return self->_preferenceAsIfRamp;
}

- (void)setPreferenceAsIfRamp:(BOOL)a3
{
  self->_preferenceAsIfRamp = a3;
}

- (BOOL)preferenceAlwaysPromoteStagedAssets
{
  return self->_preferenceAlwaysPromoteStagedAssets;
}

- (void)setPreferenceAlwaysPromoteStagedAssets:(BOOL)a3
{
  self->_preferenceAlwaysPromoteStagedAssets = a3;
}

- (BOOL)preferenceScheduledAsIfNotInternal
{
  return self->_preferenceScheduledAsIfNotInternal;
}

- (void)setPreferenceScheduledAsIfNotInternal:(BOOL)a3
{
  self->_preferenceScheduledAsIfNotInternal = a3;
}

- (int64_t)preferenceActivityTickerSecs
{
  return self->_preferenceActivityTickerSecs;
}

- (void)setPreferenceActivityTickerSecs:(int64_t)a3
{
  self->_preferenceActivityTickerSecs = a3;
}

- (void)setPreferenceActivityIntervalSecs:(int64_t)a3
{
  self->_preferenceActivityIntervalSecs = a3;
}

- (int64_t)preferencePushActivityIntervalSecs
{
  return self->_preferencePushActivityIntervalSecs;
}

- (void)setPreferencePushActivityIntervalSecs:(int64_t)a3
{
  self->_preferencePushActivityIntervalSecs = a3;
}

- (int64_t)preferenceActivityHeightenedIntervalSecs
{
  return self->_preferenceActivityHeightenedIntervalSecs;
}

- (void)setPreferenceActivityHeightenedIntervalSecs:(int64_t)a3
{
  self->_preferenceActivityHeightenedIntervalSecs = a3;
}

- (int64_t)preferenceActivityAggressiveIntervalSecs
{
  return self->_preferenceActivityAggressiveIntervalSecs;
}

- (void)setPreferenceActivityAggressiveIntervalSecs:(int64_t)a3
{
  self->_preferenceActivityAggressiveIntervalSecs = a3;
}

- (NSString)preferenceActivityHeightenedAssetType
{
  return self->_preferenceActivityHeightenedAssetType;
}

- (void)setPreferenceActivityHeightenedAssetType:(id)a3
{
}

- (NSString)preferenceActivityAggressiveAssetType
{
  return self->_preferenceActivityAggressiveAssetType;
}

- (void)setPreferenceActivityAggressiveAssetType:(id)a3
{
}

- (int64_t)preferenceLookupCacheAssetSelectorValidSecs
{
  return self->_preferenceLookupCacheAssetSelectorValidSecs;
}

- (void)setPreferenceLookupCacheAssetSelectorValidSecs:(int64_t)a3
{
  self->_preferenceLookupCacheAssetSelectorValidSecs = a3;
}

- (int64_t)preferenceLookupCacheSetConfigurationValidSecs
{
  return self->_preferenceLookupCacheSetConfigurationValidSecs;
}

- (void)setPreferenceLookupCacheSetConfigurationValidSecs:(int64_t)a3
{
  self->_preferenceLookupCacheSetConfigurationValidSecs = a3;
}

- (int64_t)preferenceBeforeFirstPollSecs
{
  return self->_preferenceBeforeFirstPollSecs;
}

- (void)setPreferenceBeforeFirstPollSecs:(int64_t)a3
{
  self->_preferenceBeforeFirstPollSecs = a3;
}

- (int64_t)preferenceBeforeFirstDefaultTimeoutSecs
{
  return self->_preferenceBeforeFirstDefaultTimeoutSecs;
}

- (void)setPreferenceBeforeFirstDefaultTimeoutSecs:(int64_t)a3
{
  self->_preferenceBeforeFirstDefaultTimeoutSecs = a3;
}

- (BOOL)preferenceSecureSimulateRequireAll
{
  return self->_preferenceSecureSimulateRequireAll;
}

- (void)setPreferenceSecureSimulateRequireAll:(BOOL)a3
{
  self->_preferenceSecureSimulateRequireAll = a3;
}

- (BOOL)preferenceSecureSimulateFailureAll
{
  return self->_preferenceSecureSimulateFailureAll;
}

- (void)setPreferenceSecureSimulateFailureAll:(BOOL)a3
{
  self->_preferenceSecureSimulateFailureAll = a3;
}

- (int64_t)preferenceSimulatedDownloadFailureResult
{
  return self->_preferenceSimulatedDownloadFailureResult;
}

- (void)setPreferenceSimulatedDownloadFailureResult:(int64_t)a3
{
  self->_preferenceSimulatedDownloadFailureResult = a3;
}

- (int64_t)preferenceSimulatedStagingLookupFailureResult
{
  return self->_preferenceSimulatedStagingLookupFailureResult;
}

- (void)setPreferenceSimulatedStagingLookupFailureResult:(int64_t)a3
{
  self->_preferenceSimulatedStagingLookupFailureResult = a3;
}

- (BOOL)preferencePersistedTableLoggingEnabled
{
  return self->_preferencePersistedTableLoggingEnabled;
}

- (void)setPreferencePersistedTableLoggingEnabled:(BOOL)a3
{
  self->_preferencePersistedTableLoggingEnabled = a3;
}

- (BOOL)preferenceStagingLookupFlipRequiredOptional
{
  return self->_preferenceStagingLookupFlipRequiredOptional;
}

- (void)setPreferenceStagingLookupFlipRequiredOptional:(BOOL)a3
{
  self->_preferenceStagingLookupFlipRequiredOptional = a3;
}

- (BOOL)preferenceStartupSimulateFirstBoot
{
  return self->_preferenceStartupSimulateFirstBoot;
}

- (void)setPreferenceStartupSimulateFirstBoot:(BOOL)a3
{
  self->_preferenceStartupSimulateFirstBoot = a3;
}

- (BOOL)migratedFromPreinstalled
{
  return self->_migratedFromPreinstalled;
}

- (void)setMigratedFromPreinstalled:(BOOL)a3
{
  self->_migratedFromPreinstalled = a3;
}

- (NSString)bootedOSVersion
{
  return self->_bootedOSVersion;
}

- (void)setBootedOSVersion:(id)a3
{
}

- (NSString)bootedOBuildVersion
{
  return self->_bootedOBuildVersion;
}

- (void)setBootedOBuildVersion:(id)a3
{
}

- (BOOL)operatingBeforeFirstUnlock
{
  return self->_operatingBeforeFirstUnlock;
}

- (void)setOperatingBeforeFirstUnlock:(BOOL)a3
{
  self->_operatingBeforeFirstUnlock = a3;
}

- (BOOL)operatingBeforeResumed
{
  return self->_operatingBeforeResumed;
}

- (void)setOperatingBeforeResumed:(BOOL)a3
{
  self->_operatingBeforeResumed = a3;
}

- (BOOL)simulateOperationRequested
{
  return self->_simulateOperationRequested;
}

- (void)setSimulateOperationRequested:(BOOL)a3
{
  self->_simulateOperationRequested = a3;
}

- (NSMutableDictionary)simulateOperationsBySelector
{
  return self->_simulateOperationsBySelector;
}

- (void)setSimulateOperationsBySelector:(id)a3
{
}

- (MADAnalyticsManager)analyticsManager
{
  return self->_analyticsManager;
}

- (void).cxx_destruct
{
}

  ;
}

  ;
}

- (void)handleMessage:(char)a1 proxyObject:(char)a2 reply:(os_log_s *)a3 .cold.1(char a1, char a2, os_log_s *a3)
{
  id v3 = @"Y";
  if ((a1 & 1) != 0) {
    id v4 = @"N";
  }
  else {
    id v4 = @"Y";
  }
  if ((a2 & 1) != 0) {
    id v3 = @"N";
  }
  int v5 = 138543618;
  id v6 = v4;
  __int16 v7 = 2114;
  id v8 = v3;
  OUTLINED_FUNCTION_3_1( &dword_0,  a3,  (uint64_t)a3,  "AUTO-CONTROL:{handleMessage} received message indication missing required fields | message:%{public}@, reply:%{public}@",  (uint8_t *)&v5);
  OUTLINED_FUNCTION_12();
}

- (void)_autoAssetJobProgressNewValidatedCurrentStatus:requiringProgress:.cold.1()
{
}

+ (void)autoAssetJobIssueReply:(uint64_t)a1 forAutoAssetSelector:withAutoAssetUUID:fromAutoAssetJob:withOriginalSelector:withJobInformation:withResponseError:.cold.1( uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetClientRequest responseErrorSummary:]( &OBJC_CLASS___MADAutoAssetClientRequest,  "responseErrorSummary:",  a1));
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "{autoAssetJobIssueReply} | unable to build response message | error:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)action_StartUnlockPollingTimer:(void *)a1 error:.cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 _updateLatestSummary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "[%{public}@] {StartUnlockPollingTimer} | Unable to create first-unlock polling timer",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)action_ResumeJobs:(void *)a1 error:.cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 checkedDescription]);
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_0_0( &dword_0,  v2,  v3,  "{ResumeJobs} | Failed post-write existence check after writing STARTUP_ACTIVATED cookie file [%{public}@] | stashError:%@",  v4,  v5,  v6,  v7,  2u);

  OUTLINED_FUNCTION_10();
}

- (void)action_ResumeJobs:(void *)a1 error:.cold.2(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 checkedDescription]);
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_0_0( &dword_0,  v2,  v3,  "{ResumeJobs} | Failed to write STARTUP_ACTIVATED cookie file [%{public}@] | stashError:%@",  v4,  v5,  v6,  v7,  2u);

  OUTLINED_FUNCTION_10();
}

- (void)action_ResumeJobs:(void *)a1 error:.cold.3(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 _updateLatestSummary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "[%{public}@]\n[DEVICE-BOOT] {ResumeJobs} migrated pre-installed assets",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)action_QueueClientRequest:(void *)a1 error:.cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 clientRequest]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v3,  v4,  "\n [SET-ELIMINATE]{QueueClientRequest} [EliminationInProgress] in-progress elimination blocking new set-request | clien tRequest:%{public}@",  v5,  v6,  v7,  v8,  v9);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_QueueClientRequest:(void *)a1 error:.cold.2(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 clientRequest]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v3,  v4,  "\n [ELIMINATE]{QueueClientRequest} [EliminationInProgress] in-progress elimination blocking new request | clientRequest:%{public}@",  v5,  v6,  v7,  v8,  v9);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_QueueClientRequestBefore1st:(void *)a1 error:.cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 clientRequest]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v3,  v4,  "\n [SET-ELIMINATE]{QueueClientRequestBefore1st} [EliminationInProgress] in-progress elimination blocking new set-reques t | clientRequest:%{public}@",  v5,  v6,  v7,  v8,  v9);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_QueueClientRequestBefore1st:(void *)a1 error:.cold.2(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 clientRequest]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v3,  v4,  "\n [ELIMINATE]{QueueClientRequestBefore1st} [EliminationInProgress] in-progress elimination blocking new request | clie ntRequest:%{public}@",  v5,  v6,  v7,  v8,  v9);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_RouteClientRequest:(void *)a1 error:.cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 clientRequest]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v3,  v4,  "\n [SET-ELIMINATE]{RouteClientRequest} [EliminationInProgress] in-progress elimination blocking new set-request | clien tRequest:%{public}@",  v5,  v6,  v7,  v8,  v9);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_RouteClientRequest:(void *)a1 error:.cold.2(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 clientRequest]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v3,  v4,  "\n [ELIMINATE]{RouteClientRequest} [EliminationInProgress] in-progress elimination blocking new request | clientRequest:%{public}@",  v5,  v6,  v7,  v8,  v9);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_QueueDownloadManager:(void *)a1 error:.cold.1(void *a1)
{
  id v3 = [(id)OUTLINED_FUNCTION_8() downloadManagerEventsAwaitingResumed];
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  OUTLINED_FUNCTION_24(v4, v5);
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_0_0( &dword_0,  v6,  v7,  "[%{public}@] {QueueDownloadManager} | unable to reduce downloadManagerEventsAwaitingResumed (excessive auto-asset-jo bs in-flight) | awaitingCount:%ld",  v8,  v9,  v10,  v11,  2u);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_ObtainLookupGrant:error:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@:LOOKUP-GRANT] {ObtainLookupGrant} | job obtain-lookup-grant without asset-selector | event:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_ObtainLookupGrant:error:.cold.2()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@:LOOKUP-GRANT] {ObtainLookupGrant} | job obtain-lookup-grant without asset-type | event:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_ReleaseLookupGrant:error:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@:LOOKUP-GRANT] {ReleaseLookupGrant} | job release-lookup-grant without asset-selector | event:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_ReleaseLookupGrant:error:.cold.2()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@:LOOKUP-GRANT] {ReleaseLookupGrant} | job release-lookup-grant without asset-type | event:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_ProvidePersistedForJob:error:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {ProvidePersistedForJob} | job requesting persist without asset-selector | event:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_ProvidePersistedForJob:error:.cold.2()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {ProvidePersistedForJob} | job requesting persist without asset-version | event:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_ProvidePersistedForJob:error:.cold.3()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {ProvidePersistedForJob} | job requesting persist without downloading-descriptor | event:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_SetJobLookupResponseRcvd:error:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {SetJobLookupResponseRcvd} | job indicating lookup response received yet no set-configuation | event:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

void __71__MADAutoAssetControlManager_action_IssueClientReplyJobResponse_error___block_invoke_2_1540_cold_1()
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*v1 checkedDescription]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*v0 summary]);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "\n [SECURE][AUTO-GRAFT][SINGLETON-CONTROL] {IssueClientReplyJobResponse} | graft|mount ERROR | error: %{public}@ | chos enDownloadedDescriptor:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_IssueClientReplySetJob:(void *)a1 error:.cold.1(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 clientRequest]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v3,  v4,  "\n [SET-ELIMINATE]{IssueClientReplySetJob} [EliminationInProgress] set-identifier is being eliminated | clientRequest:%{public}@",  v5,  v6,  v7,  v8,  v9);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_IssueClientReplySetJob:(void *)a1 error:.cold.2(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 clientRequest]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v3,  v4,  "\n [SET-ELIMINATE]{IssueClientReplySetJob} [SecureOperationInProgress] set-identifier already performing a secure-opera tion | clientRequest:%{public}@",  v5,  v6,  v7,  v8,  v9);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_IssueClientReplySetJob:(void *)a1 error:.cold.3(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 clientRequest]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v3,  v4,  "{IssueClientReplySetJob} unable to allocate basis for response message | clientRequest:%{public}@",  v5,  v6,  v7,  v8,  v9);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_DecideNeedPersonalize:error:.cold.1()
{
  id v3 = [(id)OUTLINED_FUNCTION_8() prePersonalizedSelectors];
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  OUTLINED_FUNCTION_24(v4, v5);
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_0_0( &dword_0,  v6,  v7,  "\n [SECURE][AUTO-PERSONALIZATION-COMMIT][STARTUP] {DecideNeedPersonalize} | commit pre-personalized asset-selectors ERR OR | error:%{public}@ | prePersonalizedSelectors:%ld",  v8,  v9,  v10,  v11,  2u);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_DecideNeedGraft:error:.cold.1()
{
  id v3 = [(id)OUTLINED_FUNCTION_8() prePersonalizedSelectors];
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  OUTLINED_FUNCTION_24(v4, v5);
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_0_0( &dword_0,  v6,  v7,  "\n [SECURE][AUTO-PERSONALIZATION-COMMIT][STARTUP] {DecideNeedGraft} | commit pre-personalized asset-selectors ERROR | e rror:%{public}@ | prePersonalizedSelectors:%ld",  v8,  v9,  v10,  v11,  2u);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_PersonalizeSuccessDecideMore:error:.cold.1()
{
  id v3 = [(id)OUTLINED_FUNCTION_8() prePersonalizedSelectors];
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  OUTLINED_FUNCTION_24(v4, v5);
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_0_0( &dword_0,  v6,  v7,  "\n [SECURE][AUTO-PERSONALIZATION-COMMIT][STARTUP] {PersonalizeSuccessDecideMore} | commit pre-personalized asset-select ors ERROR | error:%{public}@ | prePersonalizedSelectors:%ld",  v8,  v9,  v10,  v11,  2u);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_EliminateStagerSetDone:(void *)a1 error:.cold.1(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 setConfiguration]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v3,  v4,  "\n[SET-ELIMINATE]{EliminateStagerSetDone} [InvalidInstance] not tracking eliminate for setConfiguration:%{public}@",  v5,  v6,  v7,  v8,  v9);

  OUTLINED_FUNCTION_2_0();
}

- (void)action_EliminateStagerSetDone:(void *)a1 error:.cold.2(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "\n [SET-ELIMINATE]{EliminateStagerSetDone} [TooManyEntries] duplicate stager indication for eliminateTracker:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)updateAutoAssetStatus:forActiveJobUUID:withLatestJobStatus:matchingAssetVersion:fromLocation:.cold.1()
{
}

- (void)updateCurrentAssetStatus:currentStatus:forAssetSelector:forActiveJobUUID:matchingAssetVersion:downloadingDescriptor:baseForPatchDescriptor:.cold.1()
{
}

- (void)notifyLockerJustLockedDescriptor:forClientInstance:withClientDesire:respondingToClientRequest:withClientCompletion:.cold.1()
{
}

- (void)notifyLockerAsIndicatedByJob:.cold.1()
{
}

- (void)notifyLockerAsIndicatedBySetJob:withSetInstance:withSetDesire:forSetDescriptor:withClientReplyCompletion:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() checkedDescription];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {notifyLockerAsIndicatedBySetJob} [SET-NOTIFY-LOCKER] final response error:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)handleClientLockContent:forAutoJob:instance:desire:fromLocation:.cold.1()
{
}

- (void)buildFoundResponseMessage:forClientRequest:withFoundDescriptor:withInstance:withDesire:fromLocation:error:.cold.1()
{
}

- (void)handleClientAlterLockOperation:forAutoJob:.cold.1()
{
}

- (void)handleClientEliminateAllForSelectorRequest:(void *)a1 .cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "\n [ELIMINATE]{handleClientEliminateAllForSelectorRequest} no auto-asset-instance provided in client eliminate request | eventInfo:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)handleClientEliminateAllForSelectorRequest:(void *)a1 .cold.2(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "\n [ELIMINATE]{handleClientEliminateAllForSelectorRequest} asset-selector missing asset-specifier when required for eli minate request | eventInfo:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)handleClientEliminateAllForAssetTypeRequest:(void *)a1 .cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "\n [ELIMINATE]{handleClientEliminateAllForAssetTypeRequest} no auto-asset-instance provided in client eliminate request | eventInfo:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)handleClientEliminatePromotedNeverLockedForSelectorRequest:(void *)a1 .cold.1( void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "\n [ELIMINATE]{handleClientEliminatePromotedNeverLockedForSelectorRequest} [MissingParameter] no auto-asset-instance pr ovided in client eliminate request | eventInfo:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)handleClientEliminatePromotedNeverLockedForSelectorRequest:(void *)a1 .cold.2( void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "\n [ELIMINATE]{handleClientEliminatePromotedNeverLockedForSelectorRequest} [MissingParameter] asset-selector missing as set-specifier when required for eliminate request | eventInfo:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)handleClientEliminatePromotedNeverLockedForSelectorRequest:(void *)a1 .cold.3( void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "\n [ELIMINATE]{handleClientEliminatePromotedNeverLockedForSelectorRequest} [MissingParameter] asset-selector with asset -version not supported for eliminate request | eventInfo:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)handleSetClientCheckAtomic:forAutoJob:instance:desire:fromLocation:.cold.1()
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_5_0(v0, v1), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "{%{public}@} check-atomic found newer(PSUS) and latest - unable to create from PSUS (vending latest) | newerDownload edSetDescriptor:%{public}@",  v6,  v7,  v8,  v9,  2u);

  OUTLINED_FUNCTION_2_0();
}

- (void)handleSetClientLockAtomic:forAutoJob:instance:desire:fromLocation:.cold.1()
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_5_0(v0, v1), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "{%{public}@} lock-atomic found newer(PSUS) and latest - unable to create from PSUS (vending latest) | newerDownloade dSetDescriptor:%{public}@",  v6,  v7,  v8,  v9,  2u);

  OUTLINED_FUNCTION_2_0();
}

- (void)handleSetClientAlterEntriesRepresentingAtomicRequest:forAutoJob:alteringFromSetConfiguration:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {handleSetClientAlterEntriesRepresentingAtomicRequest} [ALTER] unable to load persisted-set-configurati on file | set-eventInfo:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)handleSetClientEliminateAtomicRequest:(void *)a1 forAutoJob:.cold.1(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "\n [SET-ELIMINATE]{handleSetClientEliminateAtomicRequest} [MissingParameter] no instance provided in client eliminate r equest | eventInfo:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)handleSetClientEliminateAtomicRequest:(void *)a1 forAutoJob:.cold.2(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "\n [SET-ELIMINATE]{handleSetClientEliminateAtomicRequest} [MissingParameter] instance missing client-domain-name when r equired for eliminate request | eventInfo:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)handleSetClientEliminateAtomicRequest:(void *)a1 forAutoJob:.cold.3(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "\n [SET-ELIMINATE]{handleSetClientEliminateAtomicRequest} [MissingParameter] instance missing asset-set-identifier when required for eliminate request | eventInfo:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)setJobInstanceKeyFromSetDescriptor:forLatestDownloaded:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {setJobInstanceKey} no assetSetIdentifier | autoSetDescriptor:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)setJobInstanceKeyFromSetDescriptor:forLatestDownloaded:.cold.2()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {setJobInstanceKey} no latestDownloadedAtomicInstance | autoSetDescriptor:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)setJobInstanceKeyFromSetDescriptor:forLatestDownloaded:.cold.3()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {setJobInstanceKey} no newerAtomicInstanceDiscovered | autoSetDescriptor:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)setJobInstanceKeyFromSetStatus:forLatestDownloaded:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {setJobInstanceKey} no assetSetIdentifier | autoSetStatus:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)setJobInstanceKeyFromSetStatus:forLatestDownloaded:.cold.2()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {setJobInstanceKey} no latestDownloadedAtomicInstance | autoSetStatus:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)setJobInstanceKeyFromSetStatus:forLatestDownloaded:.cold.3()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {setJobInstanceKey} no newerAtomicInstanceDiscovered | autoSetStatus:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)setJobInstanceKeyForSetInstance:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {setJobInstanceKeyForSetInstance} no assetSetIdentifier | setInstance:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)issueResponseToFailedAutoAssetLockRequest:forEventInfo:withResponseError:forAttemptedDescriptor:.cold.1()
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_5_0(v0, v1), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "{%{public}@} | unable to build response message | eventInfo:%{public}@",  v6,  v7,  v8,  v9,  2u);

  OUTLINED_FUNCTION_2_0();
}

- (void)clientRequestMessageInstance:(void *)a1 .cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 _updateLatestSummary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "[%{public}@] {clientRequestMessageInstance} MAAutoAssetInfoInstance of unexpected class",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)clientRequestMessageInstance:.cold.2()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([v0 _updateLatestSummary]);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_0_0( &dword_0,  v2,  v3,  "[%{public}@] {clientRequestMessageInstance} invalid MAAutoAssetInfoInstance | missing:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_2_0();
}

- (void)clientRequestMessageDesire:(void *)a1 .cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 _updateLatestSummary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "[%{public}@] {clientRequestMessageDesire} MAAutoAssetInfoDesire of unexpected class",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)clientRequestMessageSetDesire:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {clientRequestMessageSetDesire} MISSING:desire | clientRequest:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)clientRequestMessageSetPolicy:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {clientRequestMessageSetPolicy} MISSING:desire | clientRequestMessage:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)clientRequestMessageSetEnd:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {clientRequestMessageSetEnd} MISSING:end | clientRequest:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)setConfigurationVendingDescriptor:(uint64_t)a1 managedAsSet:(uint64_t)a2 .cold.1( uint64_t a1,  uint64_t a2)
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_9_0(a1, a2), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_15((uint64_t)v3, 5.8381e-34);
  OUTLINED_FUNCTION_4_1( &dword_0,  v4,  v5,  "{setConfigurationVendingDescriptor} unable to load set descriptor for latest-to-vend | setConfiguration:%{public}@");

  OUTLINED_FUNCTION_11();
}

- (void)setConfigurationReferencesDescriptor:(uint64_t)a1 .cold.1(uint64_t a1, uint64_t a2)
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_9_0(a1, a2), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_15((uint64_t)v3, 5.8381e-34);
  OUTLINED_FUNCTION_4_1( &dword_0,  v4,  v5,  "{setConfigurationReferencesDescriptor} unable to load set descriptor for latest-to-vend | setConfiguration:%{public}@");

  OUTLINED_FUNCTION_11();
}

- (void)_isSetDescriptorAvailableToClient:forSetDescriptor:.cold.1()
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_5_0(v0, v1), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "{%{public}@:_isSetDescriptorAvailableToClient} unable to locate asset-descriptor | nextAtomicEntry:%{public}@",  v6,  v7,  v8,  v9,  2u);

  OUTLINED_FUNCTION_2_0();
}

- (void)_doesSetDescriptorRequirePersonalization:forSetDescriptor:.cold.1()
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_5_0(v0, v1), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "{%{public}@:_doesSetDescriptorRequirePersonalization} unable to locate asset-descriptor | nextAtomicEntry:%{public}@",  v6,  v7,  v8,  v9,  2u);

  OUTLINED_FUNCTION_2_0();
}

- (void)_shortTermChangeAtomicInstance:forAtomicInstance:toShortTermSupported:.cold.1()
{
}

- (void)_shortTermChangeAtomicInstance:forAtomicInstance:toShortTermSupported:.cold.2()
{
}

- (void)setDescriptorDownloadedLoadedFromPersisted:persistedEntryID:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {setDescriptorDownloadedLoadedFromPersisted} downloaded-by-instance set-descriptor already known | setD escriptor:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)setDescriptorAddedPreInstalled:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {setDescriptorAddedPreInstalled} downloaded-by-instance set-descriptor already known | setDescriptor:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)setDescriptorEliminate:triggeredByClient:forClientDomainName:forAssetSetIdentifier:awaitingUnlocked:.cold.1()
{
}

- (void)setDescriptorEliminate:triggeredByClient:forClientDomainName:forAssetSetIdentifier:awaitingUnlocked:.cold.2()
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_5_0(v0, v1), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "\n [SET-ELIMINATE]{%{public}@:setDescriptorEliminate} [BusyPerformingOperation] hard-eliminate (pending soft-eliminate should also have completed) | eliminateTracker:%{public}@",  v6,  v7,  v8,  v9,  2u);

  OUTLINED_FUNCTION_2_0();
}

- (void)atomicInstanceTrimOverflowAfterPersisting:(void *)a1 .cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 _updateLatestSummary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "[%{public}@]\n[OVERFLOW-TRIM] {atomicInstanceTrimOverflowAfterPersisting} unable to allocate required resources",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)_promotePreviouslyStagedNowDownloaded:forHistoryOperation:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[%{public}@] {_promotePreviouslyStagedNowDownloaded} attempted to promote but not on filesystem | descriptor:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

+ (void)restoreVersionFromOSVersion:.cold.1()
{
}

- (void)_decideRemoveDescriptorWithNewerDownloaded:maintainingRemoveDescriptors:fromLocation:.cold.1()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([v0 _updateLatestSummary]);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_0_0( &dword_0,  v2,  v3,  "[%{public}@]\n[CONSIDER-REMOVAL] {%{public}@} nil downloadedAssetDescriptor",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_2_0();
}

- (void)_eliminateCompleteIfAllDone:(void *)a1 .cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "\n [ELIMINATE] {_eliminateCompleteIfAllDone} no persisted descriptor entry yet entry already exists | eliminateTracker:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)locateDownloadedByFullSelector:.cold.1()
{
}

- (void)alreadyHaveSetDescriptorMatching:(uint64_t)a1 .cold.1(uint64_t a1, uint64_t a2)
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_9_0(a1, a2), "_updateLatestSummary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_15((uint64_t)v3, 5.8381e-34);
  OUTLINED_FUNCTION_4_1(&dword_0, v4, v5, "[%{public}@] {alreadyHaveSetDescriptorMatching} no entryID");

  OUTLINED_FUNCTION_11();
}

- (void)_preInstalledSetAtomicEntriesFromInstanceEntries:(uint64_t)a1 .cold.1( uint64_t a1,  uint64_t a2)
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_9_0(a1, a2), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_15((uint64_t)v3, 5.8381e-34);
  OUTLINED_FUNCTION_4_1( &dword_0,  v4,  v5,  "[AUTO-PRE-INSTALLED] [LOCAL-CONTENT-URL] {_preInstalledSetAtomicEntriesFromInstanceEntries} unable to get local cont ent URL | nextDescriptor:%{public}@");

  OUTLINED_FUNCTION_11();
}

- (void)_preInstalledSetAtomicEntriesFromInstanceEntries:(uint64_t)a1 .cold.2( uint64_t a1,  uint64_t a2)
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_9_0(a1, a2), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_15((uint64_t)v3, 5.8381e-34);
  OUTLINED_FUNCTION_4_1( &dword_0,  v4,  v5,  "[AUTO-PRE-INSTALLED] {_preInstalledSetAtomicEntriesFromInstanceEntries} unable to allocate set-atomic-entry | nextDe scriptor:%{public}@");

  OUTLINED_FUNCTION_11();
}

- (void)_preInstalledMakeDescriptorAvailable:fromLocation:.cold.1()
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_5_0(v0, v1), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[AUTO-PRE-INSTALLED] {%{public}@:_preInstalledMakeDescriptorAvailable} attempted to migrate asset but not on filesys tem | descriptor:%{public}@",  v6,  v7,  v8,  v9,  2u);

  OUTLINED_FUNCTION_2_0();
}

- (void)_preInstalledRelocateAutoAssets
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_5_0(v0, v1), "checkedDescription");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "[AUTO-PRE-INSTALLED] {_preInstalledRelocateAutoAssets} Failed to read directories at path to pre-installed assets | path:%{public}@ | error:%{public}@",  v6,  v7,  v8,  v9,  2u);

  OUTLINED_FUNCTION_2_0();
}

- (void)secureForceUngraft:forDescriptorBeingRemoved:.cold.1()
{
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_5_0(v0, v1), "summary");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "\n [SECURE][AUTO-GRAFT-REMOVE][SINGLETON-CONTROL] {%{public}@:secureForceUngraft} | forcing ungraft of asset-descriptor that is currently locked | downloadedDescriptor:%{public}@",  v6,  v7,  v8,  v9,  2u);

  OUTLINED_FUNCTION_2_0();
}

@end