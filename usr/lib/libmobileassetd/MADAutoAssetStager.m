@interface MADAutoAssetStager
+ (id)_getAutoAssetStagerStateTable;
+ (id)autoAssetStager;
+ (id)controlConvertStagedToDownloaded:(id)a3;
+ (id)controlCopyCurrentStagedDescriptors;
+ (id)migrateMismatchedPersistedAvailableForStagingPromotionVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5;
+ (id)migrateMismatchedPersistedSetPromotionVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5;
+ (id)migrateMismatchedPersistedStateVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5;
+ (id)migrateMismatchedPersistedTargetPromotionVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5;
+ (int64_t)persistedStagedCount;
+ (void)autoAssetStagerJobDetermineDone:(id)a3 withBaseForStagingDescriptors:(id)a4 withDetermineError:(id)a5;
+ (void)autoAssetStagerJobDownloadDone:(id)a3 withDownloadedDescriptor:(id)a4 withDownloadError:(id)a5;
+ (void)autoAssetStagerJobDownloadProgress:(id)a3 withProgressError:(id)a4;
+ (void)autoAssetStagerJobFailedToStart:(id)a3;
+ (void)clientCancelOperation:(id)a3;
+ (void)clientDetermineAllAvailable:(id)a3;
+ (void)clientDetermineGroupsAvailable:(id)a3;
+ (void)clientDownloadAll:(id)a3;
+ (void)clientDownloadGroups:(id)a3;
+ (void)clientEraseAll:(id)a3;
+ (void)clientPurgeAll:(id)a3;
+ (void)controlAlreadyDownloadedDescriptors:(id)a3 withSetConfigurations:(id)a4 withSetTargets:(id)a5 withScheduledJobs:(id)a6;
+ (void)controlCopyCurrentStagedDescriptors;
+ (void)controlEliminateSelector:(id)a3;
+ (void)controlEliminateSetConfiguration:(id)a3;
+ (void)controlForcePurge:(id)a3;
+ (void)controlStatisticsClientRepliesSuccess:(id *)a3 clientRepliesFailure:(id *)a4 totalStaged:(id *)a5 totalUnstaged:(id *)a6 clearingAfter:(BOOL)a7;
+ (void)extendSummaryWithAvailableForStagingAssets:(id)a3;
+ (void)extendSummaryWithDeterminedAssets:(id)a3 basedOnControl:(id)a4;
+ (void)extendSummaryWithStagedAssets:(id)a3 basedOnControl:(id)a4;
+ (void)extendSummaryWithStagingAssets:(id)a3 basedOnControl:(id)a4;
+ (void)garbageCollectEliminateSelector:(id)a3;
+ (void)persistedStagedCount;
+ (void)resumeFromPersisted;
+ (void)setPersistedStateCaching:(BOOL)a3;
+ (void)shutdown;
- (BOOL)_doesSelector:(id)a3 matchDescriptor:(id)a4;
- (BOOL)_doesSelectorMatchCurrentJob:(id)a3;
- (BOOL)_formCandidateSetLookupArray:(id)a3 involvingRequired:(BOOL)a4 involvingOptional:(BOOL)a5 providingOptional:(BOOL)a6;
- (BOOL)_isAssetSetEntry:(id)a3 blockedBySetTarget:(id)a4;
- (BOOL)_isAssetTypeInvolvedInStaging:(id)a3;
- (BOOL)_isAssetTypeManagedAsSet:(id)a3;
- (BOOL)_isDescriptorAssetTypeManagedAsSet:(id)a3;
- (BOOL)_isOtherTargetAvailable;
- (BOOL)_isSetConfigurationApplicableToRequired:(id)a3;
- (BOOL)_isSetTargetWithinRange:(id)a3 asCandidate:(BOOL)a4;
- (BOOL)_isStagingClientRequestForActiveTarget:(id)a3 fromLocation:(id)a4;
- (BOOL)_maDownloadErrorConsideredFatal:(int64_t)a3;
- (BOOL)_setConfigurationHasEntriesWhenTargeting:(id)a3;
- (BOOL)alwaysPromoteStagedAssets;
- (BOOL)doesStagingInvolveOptional;
- (BOOL)doesStagingInvolveRequired;
- (BOOL)firstDownloadedAsIfNotInCatalog;
- (BOOL)isAnyAvailableForStagingByGroup:(id)a3;
- (BOOL)isAssetType:(id)a3 representedInAssetDescriptors:(id)a4;
- (BOOL)stagingClientChosen;
- (BOOL)stagingClientCompleteOnceRequired;
- (BOOL)stagingClientUsingGroups;
- (MADAutoAssetClientRequest)stagingClientDownloadRequest;
- (MADAutoAssetClientRequest)stagingClientRequest;
- (MADAutoAssetDescriptor)activeJobDescriptor;
- (MADAutoAssetPersisted)persistedAvailableForStagingByTarget;
- (MADAutoAssetPersisted)persistedSetLookupResults;
- (MADAutoAssetPersisted)persistedState;
- (MADAutoAssetPersisted)persistedTargetLookupResults;
- (MADAutoAssetStager)init;
- (MADAutoSetConfiguration)activeSetJobConfiguration;
- (MADAutoSetConfiguration)eliminationSetConfigurationCurrentJob;
- (MANAutoAssetControlStatisticsByCommand)statisticsClientRepliesFailure;
- (MANAutoAssetControlStatisticsByCommand)statisticsClientRepliesSuccess;
- (MANAutoAssetControlStatisticsBySize)statisticsStaged;
- (MANAutoAssetControlStatisticsBySize)statisticsUnstaged;
- (NSArray)alreadyDownloadedDescriptors;
- (NSArray)assetTargetGroupNames;
- (NSArray)scheduledJobs;
- (NSArray)setConfigurations;
- (NSArray)setTargets;
- (NSDictionary)activeTargetUpdateAttributes;
- (NSDictionary)stateTable;
- (NSMutableArray)availableForStaging;
- (NSMutableArray)awaitingStagingAttempt;
- (NSMutableArray)baseForStagingDescriptors;
- (NSMutableArray)candidateSetConfigurations;
- (NSMutableArray)candidatesForStaging;
- (NSMutableDictionary)availableForStagingOptionalByTarget;
- (NSMutableDictionary)availableForStagingRequiredByTarget;
- (NSMutableDictionary)candidateSetConfigurationsOptionalByTarget;
- (NSMutableDictionary)candidateSetConfigurationsRequiredByTarget;
- (NSMutableDictionary)candidatesForStagingOptionalByTarget;
- (NSMutableDictionary)candidatesForStagingRequiredByTarget;
- (NSMutableDictionary)determiningBySelector;
- (NSMutableDictionary)eliminationSelectors;
- (NSMutableDictionary)eliminationSelectorsAcknowledged;
- (NSMutableDictionary)setLookupResults;
- (NSMutableDictionary)stagingClientDetermineRequests;
- (NSMutableDictionary)successfullyStaged;
- (NSMutableDictionary)targetLookupResults;
- (NSString)assetTargetBuildVersion;
- (NSString)assetTargetOSVersion;
- (NSString)assetTargetRestoreVersion;
- (NSString)assetTargetTrainName;
- (NSString)determineTimeoutUUID;
- (NSString)latestSafeSummary;
- (NSString)stagingClientName;
- (NSString)stagingFromBuildVersion;
- (NSString)stagingFromOSVersion;
- (SUCoreFSM)autoStagerFSM;
- (SUCoreLog)logger;
- (id)_adjustPallasResponseBasedOnPreferences:(id)a3;
- (id)_allEliminationSelectors;
- (id)_controlConvertStagedToDownloaded:(id)a3;
- (id)_newStagingInfoAvailable:(id)a3 fromAvailableForStaging:(id)a4 providingTotalExpectedBytes:(unint64_t *)a5;
- (id)_persistRebuildTrackingNewHandedOffDescriptors:(id)a3;
- (id)_setConfigurationForAssetType:(id)a3 forAssetSpecifier:(id)a4;
- (id)_setTargetForAssetType:(id)a3;
- (id)_setTargetForSetConfiguration:(id)a3;
- (id)_stagingClientMessageDesire:(id)a3 forClientRequest:(id)a4;
- (id)_stagingClientMessageStagingClientProcessName:(id)a3;
- (id)_stagingClientRequestDetermineClear:(id)a3 forStagingTargetName:(id)a4 replyingToCleared:(BOOL)a5;
- (id)_stagingClientRequestDetermineLocate:(id)a3 forStagingTargetName:(id)a4;
- (id)_stagingClientRequestDownloadClear:(id)a3 forStagingTargetName:(id)a4 replyingToCleared:(BOOL)a5;
- (id)_stagingClientRequestDownloadCurrent:(id)a3 forStagingTargetName:(id)a4;
- (id)_stagingClientRequestGeneralClear:(id)a3 replyingToCleared:(BOOL)a4;
- (id)_stagingClientRequestGeneralCurrent:(id)a3;
- (id)_targetName:(id)a3 forOSVersion:(id)a4 forBuildVersion:(id)a5 forTrainName:(id)a6 forRestoreVersion:(id)a7;
- (id)_targetNameActive;
- (id)_targetNameActive:(id)a3;
- (id)_targetNameActiveClient;
- (id)_targetNameActiveOptional;
- (id)_targetNameActiveRequired;
- (id)_targetNameAvailableForStaging:(id)a3;
- (id)_targetNameLookupResults:(id)a3;
- (id)_trimConsideringToLatestDownloaded:(id)a3;
- (id)_updateAttributesFromStagingRequest:(id)a3 fromLocation:(id)a4;
- (id)_updateLatestSummary;
- (id)adoptTargetFromUpdateAttributes:(id)a3 fromUpdateAttributes:(id)a4 forGroupDetermine:(BOOL)a5;
- (id)assetMetadataFromAssetCatalog:(id)a3 forAssetype:(id)a4 forAssetSpecifier:(id)a5 preferringBestFormat:(BOOL)a6;
- (id)baseForPatchingToSelector:(id)a3;
- (id)description;
- (id)newAssetMetadataFromAssetCatalog:(id)a3 forAssetype:(id)a4 forAssetSpecifier:(id)a5;
- (id)newSetLookupResult:(id)a3 forSetCatalog:(id)a4;
- (id)newSetLookupResultsForTargetOS;
- (id)newStagedInfoWithAllSuccessfullyStaged:(id)a3;
- (id)newStagedInfoWithGroupsSuccessfullyStaged:(id)a3 indicatingHaveStaged:(BOOL)a4;
- (id)newStagingInfoWithAllAvailableForStaging:(id)a3;
- (id)newStagingInfoWithGroupsAvailableForStaging:(id)a3 indicatingHaveAvailable:(BOOL)a4;
- (id)newStagingInfoWithGroupsAvailableForStaging:(id)a3 indicatingHaveAvailable:(BOOL)a4 usingTargetLookupKey:(id)a5;
- (id)newTargetLookupResultsForTargetTrainName:(id)a3 forTargetRestoreVersion:(id)a4;
- (id)splitOutAvailableForStagingByGroup:(id)a3;
- (id)summary;
- (id)targetLookupResultsKeyForTrainName:(id)a3 withRestoreVersion:(id)a4;
- (id)targetLookupResultsKeyForTrainName:(id)a3 withRestoreVersion:(id)a4 withTargetBuildVersion:(id)a5;
- (int64_t)_countOfEntriesDictionaryOfArray:(id)a3;
- (int64_t)_persistDescriptor:(id)a3 operation:(id)a4 persistingDescriptor:(id)a5 withRepresentation:(int64_t)a6 message:(id)a7;
- (int64_t)actionUnknownAction:(id)a3 error:(id *)a4;
- (int64_t)action_AddToAvailableDecideAnyAvailable:(id)a3 error:(id *)a4;
- (int64_t)action_AddToAvailableDecideMoreCandidates:(id)a3 error:(id *)a4;
- (int64_t)action_AddToAvailableDecideRequiredAvailable:(id)a3 error:(id *)a4;
- (int64_t)action_AddToStaged:(id)a3 error:(id *)a4;
- (int64_t)action_AddToStagedDecideMoreAvailable:(id)a3 error:(id *)a4;
- (int64_t)action_CancelActiveJob:(id)a3 error:(id *)a4;
- (int64_t)action_ClientAcceptAllDetermine:(id)a3 error:(id *)a4;
- (int64_t)action_ClientAcceptCancelActiveJob:(id)a3 error:(id *)a4;
- (int64_t)action_ClientAcceptEraseActiveJob:(id)a3 error:(id *)a4;
- (int64_t)action_ClientAcceptNextAvailableBeginDownload:(id)a3 error:(id *)a4;
- (int64_t)action_ClientAcceptRemoveAllReplyErased:(id)a3 error:(id *)a4;
- (int64_t)action_ClientAcceptRemoveAllReplyPurged:(id)a3 error:(id *)a4;
- (int64_t)action_ClientCancelDesireForCompletion:(id)a3 error:(id *)a4;
- (int64_t)action_ClientCheckGroupsDecideAlreadyDetermined:(id)a3 error:(id *)a4;
- (int64_t)action_ClientCheckGroupsReplyAlreadyDetermined:(id)a3 error:(id *)a4;
- (int64_t)action_ClientCheckLatchGroupsDetermine:(id)a3 error:(id *)a4;
- (int64_t)action_ClientContinueRestartingMaxDetermining:(id)a3 error:(id *)a4;
- (int64_t)action_ClientContinueUsingLatestRequest:(id)a3 error:(id *)a4;
- (int64_t)action_ClientDecideGroupTargetAvailable:(id)a3 error:(id *)a4;
- (int64_t)action_ClientDecideGroupTargetAvailablePurge:(id)a3 error:(id *)a4;
- (int64_t)action_ClientEraseDecideStagingClient:(id)a3 error:(id *)a4;
- (int64_t)action_ClientFailAlreadyDetermining:(id)a3 error:(id *)a4;
- (int64_t)action_ClientFailByGroupAlreadyDownloading:(id)a3 error:(id *)a4;
- (int64_t)action_ClientFailGroupDetermining:(id)a3 error:(id *)a4;
- (int64_t)action_ClientFailNoGroupsStaged:(id)a3 error:(id *)a4;
- (int64_t)action_ClientFailWrongMode:(id)a3 error:(id *)a4;
- (int64_t)action_ClientHaveStagedContent:(id)a3 error:(id *)a4;
- (int64_t)action_ClientInvalidStagingPhase:(id)a3 error:(id *)a4;
- (int64_t)action_ClientNewerReplyEmptyDetermine:(id)a3 error:(id *)a4;
- (int64_t)action_ClientNewerReplyEmptyDownload:(id)a3 error:(id *)a4;
- (int64_t)action_ClientNewerReplySameOrEmptyDetermine:(id)a3 error:(id *)a4;
- (int64_t)action_ClientNewerReplySameOrEmptyDownload:(id)a3 error:(id *)a4;
- (int64_t)action_ClientNothingStaged:(id)a3 error:(id *)a4;
- (int64_t)action_ClientPurgeDecideStagingClient:(id)a3 error:(id *)a4;
- (int64_t)action_ClientRequestAlreadyDownloaded:(id)a3 error:(id *)a4;
- (int64_t)action_ControlUnstagedDecideCancelJob:(id)a3 error:(id *)a4;
- (int64_t)action_ControlUnstagedDecideRemoveAll:(id)a3 error:(id *)a4;
- (int64_t)action_DecideEmptyHaveAvailable:(id)a3 error:(id *)a4;
- (int64_t)action_DecideHaveAvailableOtherTargets:(id)a3 error:(id *)a4;
- (int64_t)action_DecideHaveRequiredCandidates:(id)a3 error:(id *)a4;
- (int64_t)action_DecideMoreAvailable:(id)a3 error:(id *)a4;
- (int64_t)action_DecideMoreCandidates:(id)a3 error:(id *)a4;
- (int64_t)action_DecideMoreOptionalAvailable:(id)a3 error:(id *)a4;
- (int64_t)action_DecideMoreRequiredAvailable:(id)a3 error:(id *)a4;
- (int64_t)action_DecideRequiredErrorBlocksOTA:(id)a3 error:(id *)a4;
- (int64_t)action_DecideTimerDeterminingValid:(id)a3 error:(id *)a4;
- (int64_t)action_DoneAvailableDecideAnyStaged:(id)a3 error:(id *)a4;
- (int64_t)action_DoneCandidatesDecideAnyAvailable:(id)a3 error:(id *)a4;
- (int64_t)action_DoneCandidatesRequiredDecideOptional:(id)a3 error:(id *)a4;
- (int64_t)action_EliminateAvailableDecideEmpty:(id)a3 error:(id *)a4;
- (int64_t)action_EliminateCancelActiveJob:(id)a3 error:(id *)a4;
- (int64_t)action_EliminateDecideMatch:(id)a3 error:(id *)a4;
- (int64_t)action_EliminateDeterminingDecideMatch:(id)a3 error:(id *)a4;
- (int64_t)action_EliminateDone:(id)a3 error:(id *)a4;
- (int64_t)action_EliminateDoneDecideMoreCandidates:(id)a3 error:(id *)a4;
- (int64_t)action_EliminateDoneDecideMoreDownload:(id)a3 error:(id *)a4;
- (int64_t)action_EliminateDoneStagedDecideEmpty:(id)a3 error:(id *)a4;
- (int64_t)action_FailRequiredDetermineBlocksOTA:(id)a3 error:(id *)a4;
- (int64_t)action_FormCandidatesDecideDetermine:(id)a3 error:(id *)a4;
- (int64_t)action_IgnoreFailureDecideRequiredAvailable:(id)a3 error:(id *)a4;
- (int64_t)action_LoadPersistedDecideResume:(id)a3 error:(id *)a4;
- (int64_t)action_NextAwaitingBeginDownload:(id)a3 error:(id *)a4;
- (int64_t)action_NextCandidateBeginDetermine:(id)a3 error:(id *)a4;
- (int64_t)action_RememberEliminateDone:(id)a3 error:(id *)a4;
- (int64_t)action_RememberSetEliminateDone:(id)a3 error:(id *)a4;
- (int64_t)action_RemoveAllReplyErased:(id)a3 error:(id *)a4;
- (int64_t)action_RemoveAllReplyPurged:(id)a3 error:(id *)a4;
- (int64_t)action_ReplyFailRequiredDownload:(id)a3 error:(id *)a4;
- (int64_t)action_ReplyHaveAvailable:(id)a3 error:(id *)a4;
- (int64_t)action_ReplyHaveStaged:(id)a3 error:(id *)a4;
- (int64_t)action_ReplyNoCandidates:(id)a3 error:(id *)a4;
- (int64_t)action_ReplyNoCandidatesHaveOtherTarget:(id)a3 error:(id *)a4;
- (int64_t)action_ReplyNoCandidatesPurgeAll:(id)a3 error:(id *)a4;
- (int64_t)action_ReplyNothingStaged:(id)a3 error:(id *)a4;
- (int64_t)action_ReplyNothingStagedPurgeAll:(id)a3 error:(id *)a4;
- (int64_t)action_ReplyTargetNotAvailable:(id)a3 error:(id *)a4;
- (int64_t)action_ReportStagingProgressToClient:(id)a3 error:(id *)a4;
- (int64_t)action_RequestAlreadyDownloaded:(id)a3 error:(id *)a4;
- (int64_t)action_ResumingNextAvailableBeginDownload:(id)a3 error:(id *)a4;
- (int64_t)action_SetEliminateAvailableDecideEmpty:(id)a3 error:(id *)a4;
- (int64_t)action_SetEliminateDecideMatch:(id)a3 error:(id *)a4;
- (int64_t)action_SetEliminateDeterminingDecideMatch:(id)a3 error:(id *)a4;
- (int64_t)action_SetEliminateDone:(id)a3 error:(id *)a4;
- (int64_t)action_SetEliminateDoneStagedDecideEmpty:(id)a3 error:(id *)a4;
- (int64_t)currentStagedLastWrittenBytes;
- (int64_t)currentStagedRemainingBytes;
- (int64_t)overallStagedDownloadedSoFarBytes;
- (int64_t)overallStagedTotalExpectedBytes;
- (int64_t)performAction:(id)a3 onEvent:(id)a4 inState:(id)a5 withInfo:(id)a6 nextState:(id)a7 error:(id *)a8;
- (void)_acceptStagingClientRequest:(id)a3 fromLocation:(id)a4;
- (void)_acknowledgeEliminatedForCurrentJob;
- (void)_acknowlegdeAndClearAllEliminations;
- (void)_addDescriptor:(id)a3 withRepresentation:(int64_t)a4 toSummary:(id)a5;
- (void)_addDescriptor:(id)a3 withRepresentation:(int64_t)a4 toSummary:(id)a5 withStageGroupType:(unint64_t)a6 withTargetOS:(id)a7;
- (void)_addToStaged:(id)a3 addingFromStagerParam:(id)a4;
- (void)_blendOptionalCandidates:(id)a3 intoRequired:(id)a4;
- (void)_cancelCurrentJob;
- (void)_clearAllTrackingOfActiveOperations:(id)a3 alsoPerformingPurgeAll:(BOOL)a4 removingDetermined:(BOOL)a5;
- (void)_clearBeforeDetermineAvailable:(id)a3 removingDetermined:(BOOL)a4;
- (void)_clearRemoveByGroupTargets:(id)a3 removingDetermined:(BOOL)a4;
- (void)_extendLookupByAssetType:(id)a3 fromSource:(id)a4 withAssetType:(id)a5 withAssetSpecifier:(id)a6;
- (void)_extendLookupByAssetType:(id)a3 fromSource:(id)a4 withAssetType:(id)a5 withAssetSpecifier:(id)a6 withDownloadDecryptionKey:(id)a7;
- (void)_extendLookupByAssetTypeWithDownloadedDescriptors:(id)a3;
- (void)_extendLookupByAssetTypeWithSetConfigurations:(id)a3;
- (void)_extendSummaryWithAvailableForStagingAssets:(id)a3;
- (void)_extendSummaryWithDeterminedAssets:(id)a3 basedOnControl:(id)a4;
- (void)_extendSummaryWithStagedAssets:(id)a3 basedOnControl:(id)a4;
- (void)_extendSummaryWithStagingAssets:(id)a3 basedOnControl:(id)a4;
- (void)_logMilestoneFromLocation:(id)a3 resultingInEvent:(id)a4 forMilestoneActivity:(id)a5;
- (void)_logPersistedAvailableForStagingByTarget:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withAvailableForStaging:(id)a6 message:(id)a7;
- (void)_logPersistedAvailableForStagingByTargetRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedAvailableForStaging:(id)a5 message:(id)a6;
- (void)_logPersistedAvailableForStagingByTargetTableOfContents:(id)a3;
- (void)_logPersistedConfigLoad:(id)a3 lastStagingFromOSVersion:(id)a4 lastStagingFromBuildVersion:(id)a5 assetTargetOSVersion:(id)a6 assetTargetBuildVersion:(id)a7 usingModeByGroups:(BOOL)a8 candidateAssetCount:(unint64_t)a9 determinedAvailableAssetCount:(unint64_t)a10 activelyStagingAssetCount:(unint64_t)a11 awaitingStagingAssetCount:(unint64_t)a12 stagedAssetCount:(unint64_t)a13 stagedAssetTotalContentBytes:(unint64_t)a14 message:(id)a15;
- (void)_logPersistedConfigSet:(id)a3 message:(id)a4;
- (void)_logPersistedEntry:(id)a3 operation:(id)a4 persistingDescriptor:(id)a5 withRepresentation:(int64_t)a6 message:(id)a7;
- (void)_logPersistedRemovedEntry:(id)a3 removedDescriptor:(id)a4 message:(id)a5;
- (void)_logPersistedSetLookupResult:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withSetLookupResult:(id)a6 message:(id)a7;
- (void)_logPersistedSetLookupResultRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedSetLookupResult:(id)a5 message:(id)a6;
- (void)_logPersistedSetLookupResultsTableOfContents:(id)a3;
- (void)_logPersistedTableOfContents:(id)a3;
- (void)_logPersistedTargetLookupResults:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withTargetLookupResults:(id)a6 message:(id)a7;
- (void)_logPersistedTargetLookupResultsRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedTargetLookupResults:(id)a5 message:(id)a6;
- (void)_logPersistedTargetLookupResultsTableOfContents:(id)a3;
- (void)_logStagingDetails:(id)a3 forStagedInfo:(id)a4;
- (void)_logStagingDetails:(id)a3 forStagingInfo:(id)a4;
- (void)_lookupCachePersistResult:(id)a3 fromLocation:(id)a4;
- (void)_lookupCachePersistResultByGroup:(id)a3 fromLocation:(id)a4;
- (void)_maintainLatestCandidate:(id)a3 candidateDescriptor:(id)a4;
- (void)_persistLastStagingFrom;
- (void)_persistRemoveAll:(id)a3 message:(id)a4 removingDetermined:(BOOL)a5 loggingConfig:(BOOL)a6;
- (void)_removeAllStagedContent;
- (void)_removeDescriptorFromSuccessfullyStaged:(id)a3 message:(id)a4;
- (void)_removeEliminatedFromCandidatesAndAvaliable;
- (void)_removeEliminatedFromStaged;
- (void)_removeStagedAssetFromFilesystem:(id)a3 forHistoryOperation:(int64_t)a4;
- (void)_replyHaveStagedContent:(id)a3;
- (void)_replyNoCandidates:(id)a3;
- (void)_replyNoCandidates:(id)a3 replyingToStagingRequest:(id)a4;
- (void)_replyNothingStaged:(id)a3;
- (void)_replyNothingStaged:(id)a3 replyingToStagingRequest:(id)a4;
- (void)_replyToStagingClient:(id)a3 replyingToRequest:(id)a4 withErrorCode:(int64_t)a5 withUnderlyingError:(id)a6 withDescription:(id)a7;
- (void)_replyToStagingClient:(id)a3 withStagedInfo:(id)a4 replyingToStagingRequest:(id)a5 recordingOperation:(int64_t)a6;
- (void)_replyToStagingClient:(id)a3 withStagingInfo:(id)a4 replyingToStagingRequest:(id)a5 recordingOperation:(int64_t)a6;
- (void)_replyToStagingClientOperationSuccess;
- (void)_replyWithAlreadyDetermined:(id)a3 forEventInfo:(id)a4 orFollowupDetermineStart:(BOOL)a5;
- (void)_replyWrongMode:(id)a3;
- (void)_setupAwaitingStagingAndBeginFirstDownload;
- (void)_stagingClientRequestDetermineClearAll:(id)a3;
- (void)_stagingClientRequestDetermineTrack:(id)a3 trackingRequest:(id)a4 forStagingTargetName:(id)a5;
- (void)_stagingClientRequestDownloadPurged:(id)a3;
- (void)_stagingClientRequestDownloadTrack:(id)a3 trackingRequest:(id)a4 forStagingTargetName:(id)a5;
- (void)_stagingClientRequestGeneralTrack:(id)a3 trackingRequest:(id)a4;
- (void)_startDetermineJobForNextCandidate:(id)a3;
- (void)_trackReloadedDescriptorAvailableForStaging:(id)a3;
- (void)_updateDescriptor:(id)a3 withLatestJobStatus:(id)a4;
- (void)addToAvailableForStaging:(id)a3;
- (void)availableForStagingLoadedFromPersisted:(id)a3 persistedEntryID:(id)a4;
- (void)init;
- (void)loadPersistedAvailableForStagingByTarget;
- (void)loadPersistedSetLookupResults;
- (void)loadPersistedTargetLookupResults;
- (void)lookupCacheUpdateWithDetermineResult:(id)a3 fromLocation:(id)a4;
- (void)notifyControlManagerEliminateDone:(id)a3 forAssetSelector:(id)a4;
- (void)notifyControlManagerEliminateDone:(id)a3 forSetConfiguration:(id)a4;
- (void)purgeAlreadyStagedNotApplicableForRequiredByTarget:(id)a3 andNotApplicableForOptionalByTarget:(id)a4;
- (void)setActiveJobDescriptor:(id)a3;
- (void)setActiveSetJobConfiguration:(id)a3;
- (void)setActiveTargetUpdateAttributes:(id)a3;
- (void)setAlreadyDownloadedDescriptors:(id)a3;
- (void)setAlwaysPromoteStagedAssets:(BOOL)a3;
- (void)setAssetTargetBuildVersion:(id)a3;
- (void)setAssetTargetGroupNames:(id)a3;
- (void)setAssetTargetOSVersion:(id)a3;
- (void)setAssetTargetRestoreVersion:(id)a3;
- (void)setAssetTargetTrainName:(id)a3;
- (void)setAutoStagerFSM:(id)a3;
- (void)setAvailableForStaging:(id)a3;
- (void)setAvailableForStagingOptionalByTarget:(id)a3;
- (void)setAvailableForStagingRequiredByTarget:(id)a3;
- (void)setAwaitingStagingAttempt:(id)a3;
- (void)setBaseForStagingDescriptors:(id)a3;
- (void)setCandidateSetConfigurations:(id)a3;
- (void)setCandidateSetConfigurationsOptionalByTarget:(id)a3;
- (void)setCandidateSetConfigurationsRequiredByTarget:(id)a3;
- (void)setCandidatesForStaging:(id)a3;
- (void)setCandidatesForStagingOptionalByTarget:(id)a3;
- (void)setCandidatesForStagingRequiredByTarget:(id)a3;
- (void)setCurrentStagedLastWrittenBytes:(int64_t)a3;
- (void)setCurrentStagedRemainingBytes:(int64_t)a3;
- (void)setDetermineTimeoutUUID:(id)a3;
- (void)setDeterminingBySelector:(id)a3;
- (void)setEliminationSelectors:(id)a3;
- (void)setEliminationSelectorsAcknowledged:(id)a3;
- (void)setEliminationSetConfigurationCurrentJob:(id)a3;
- (void)setFirstDownloadedAsIfNotInCatalog:(BOOL)a3;
- (void)setLatestSafeSummary:(id)a3;
- (void)setLookupResultLoadedFromPersisted:(id)a3 persistedEntryID:(id)a4;
- (void)setOverallStagedDownloadedSoFarBytes:(int64_t)a3;
- (void)setOverallStagedTotalExpectedBytes:(int64_t)a3;
- (void)setPersistedSetLookupResults:(id)a3;
- (void)setScheduledJobs:(id)a3;
- (void)setSetConfigurations:(id)a3;
- (void)setSetLookupResults:(id)a3;
- (void)setSetTargets:(id)a3;
- (void)setStagingClientChosen:(BOOL)a3;
- (void)setStagingClientCompleteOnceRequired:(BOOL)a3;
- (void)setStagingClientDetermineRequests:(id)a3;
- (void)setStagingClientDownloadRequest:(id)a3;
- (void)setStagingClientName:(id)a3;
- (void)setStagingClientRequest:(id)a3;
- (void)setStagingClientUsingGroups:(BOOL)a3;
- (void)setStagingFromBuildVersion:(id)a3;
- (void)setStagingFromOSVersion:(id)a3;
- (void)setStatisticsClientRepliesFailure:(id)a3;
- (void)setStatisticsClientRepliesSuccess:(id)a3;
- (void)setStatisticsStaged:(id)a3;
- (void)setStatisticsUnstaged:(id)a3;
- (void)setSuccessfullyStaged:(id)a3;
- (void)setTargetLookupResults:(id)a3;
- (void)startMaxTimeSpentDeterminingTimer;
- (void)storeAvailableForStaging:(id)a3 fromLocation:(id)a4;
- (void)storeSetLookupResultsToTargetLookupResults;
- (void)targetLookupResultsLoadedFromPersisted:(id)a3 persistedEntryID:(id)a4;
- (void)updateLookupResultsJustStaged:(id)a3;
@end

@implementation MADAutoAssetStager

+ (void)clientPurgeAll:(id)a3
{
  id v3 = a3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  v5 = v4;
  if (v4)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
    v7 = -[MADAutoAssetStagerParam initWithStagingClientRequest:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithStagingClientRequest:",  v3);
    [v6 postEvent:@"ClientPurgeAll" withInfo:v7];
  }

  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    v6 = (void *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager clientPurgeAll:].cold.1();
    }
  }
}

+ (id)autoAssetStager
{
  if (autoAssetStager_dispatchOnceAutoAssetLocker != -1) {
    dispatch_once(&autoAssetStager_dispatchOnceAutoAssetLocker, &__block_literal_global_1038);
  }
  return (id)autoAssetStager___autoAssetStager;
}

- (SUCoreFSM)autoStagerFSM
{
  return self->_autoStagerFSM;
}

- (int64_t)performAction:(id)a3 onEvent:(id)a4 inState:(id)a5 withInfo:(id)a6 nextState:(id)a7 error:(id *)a8
{
  id v11 = a3;
  id v12 = a6;
  if (([v11 isEqualToString:kSUCoreFSMActionNoOp] & 1) == 0)
  {
    if ([v11 isEqualToString:@"LoadPersistedDecideResume"])
    {
      int64_t v14 = -[MADAutoAssetStager action_LoadPersistedDecideResume:error:]( self,  "action_LoadPersistedDecideResume:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ResumingNextAvailableBeginDownload"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ResumingNextAvailableBeginDownload:error:]( self,  "action_ResumingNextAvailableBeginDownload:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ControlUnstagedDecideCancelJob"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ControlUnstagedDecideCancelJob:error:]( self,  "action_ControlUnstagedDecideCancelJob:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ControlUnstagedDecideRemoveAll"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ControlUnstagedDecideRemoveAll:error:]( self,  "action_ControlUnstagedDecideRemoveAll:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientCheckLatchGroupsDetermine"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientCheckLatchGroupsDetermine:error:]( self,  "action_ClientCheckLatchGroupsDetermine:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientCheckGroupsDecideAlreadyDetermined"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientCheckGroupsDecideAlreadyDetermined:error:]( self,  "action_ClientCheckGroupsDecideAlreadyDetermined:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientCheckGroupsReplyAlreadyDetermined"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientCheckGroupsReplyAlreadyDetermined:error:]( self,  "action_ClientCheckGroupsReplyAlreadyDetermined:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientAcceptAllDetermine"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientAcceptAllDetermine:error:]( self,  "action_ClientAcceptAllDetermine:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientPurgeDecideStagingClient"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientPurgeDecideStagingClient:error:]( self,  "action_ClientPurgeDecideStagingClient:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientEraseDecideStagingClient"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientEraseDecideStagingClient:error:]( self,  "action_ClientEraseDecideStagingClient:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientContinueUsingLatestRequest"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientContinueUsingLatestRequest:error:]( self,  "action_ClientContinueUsingLatestRequest:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientRequestAlreadyDownloaded"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientRequestAlreadyDownloaded:error:]( self,  "action_ClientRequestAlreadyDownloaded:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientAcceptNextAvailableBeginDownload"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientAcceptNextAvailableBeginDownload:error:]( self,  "action_ClientAcceptNextAvailableBeginDownload:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientAcceptCancelActiveJob"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientAcceptCancelActiveJob:error:]( self,  "action_ClientAcceptCancelActiveJob:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientAcceptEraseActiveJob"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientAcceptEraseActiveJob:error:]( self,  "action_ClientAcceptEraseActiveJob:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientAcceptRemoveAllReplyPurged"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientAcceptRemoveAllReplyPurged:error:]( self,  "action_ClientAcceptRemoveAllReplyPurged:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientAcceptRemoveAllReplyErased"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientAcceptRemoveAllReplyErased:error:]( self,  "action_ClientAcceptRemoveAllReplyErased:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientNothingStaged"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientNothingStaged:error:](self, "action_ClientNothingStaged:error:", v12, a8);
    }

    else if ([v11 isEqualToString:@"ClientHaveStagedContent"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientHaveStagedContent:error:]( self,  "action_ClientHaveStagedContent:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientNewerReplyEmptyDetermine"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientNewerReplyEmptyDetermine:error:]( self,  "action_ClientNewerReplyEmptyDetermine:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientNewerReplySameOrEmptyDetermine"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientNewerReplySameOrEmptyDetermine:error:]( self,  "action_ClientNewerReplySameOrEmptyDetermine:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientNewerReplySameOrEmptyDownload"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientNewerReplySameOrEmptyDownload:error:]( self,  "action_ClientNewerReplySameOrEmptyDownload:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientNewerReplyEmptyDownload"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientNewerReplyEmptyDownload:error:]( self,  "action_ClientNewerReplyEmptyDownload:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientDecideGroupTargetAvailable"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientDecideGroupTargetAvailable:error:]( self,  "action_ClientDecideGroupTargetAvailable:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientDecideGroupTargetAvailablePurge"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientDecideGroupTargetAvailablePurge:error:]( self,  "action_ClientDecideGroupTargetAvailablePurge:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientInvalidStagingPhase"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientInvalidStagingPhase:error:]( self,  "action_ClientInvalidStagingPhase:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientFailAlreadyDetermining"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientFailAlreadyDetermining:error:]( self,  "action_ClientFailAlreadyDetermining:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientFailGroupDetermining"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientFailGroupDetermining:error:]( self,  "action_ClientFailGroupDetermining:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientFailByGroupAlreadyDownloading"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientFailByGroupAlreadyDownloading:error:]( self,  "action_ClientFailByGroupAlreadyDownloading:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientFailNoGroupsStaged"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientFailNoGroupsStaged:error:]( self,  "action_ClientFailNoGroupsStaged:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"ClientFailWrongMode"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientFailWrongMode:error:](self, "action_ClientFailWrongMode:error:", v12, a8);
    }

    else if ([v11 isEqualToString:@"ClientCancelDesireForCompletion"])
    {
      int64_t v14 = -[MADAutoAssetStager action_ClientCancelDesireForCompletion:error:]( self,  "action_ClientCancelDesireForCompletion:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"RequestAlreadyDownloaded"])
    {
      int64_t v14 = -[MADAutoAssetStager action_RequestAlreadyDownloaded:error:]( self,  "action_RequestAlreadyDownloaded:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"AddToAvailableDecideMoreCandidates"])
    {
      int64_t v14 = -[MADAutoAssetStager action_AddToAvailableDecideMoreCandidates:error:]( self,  "action_AddToAvailableDecideMoreCandidates:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"AddToAvailableDecideRequiredAvailable"])
    {
      int64_t v14 = -[MADAutoAssetStager action_AddToAvailableDecideRequiredAvailable:error:]( self,  "action_AddToAvailableDecideRequiredAvailable:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"IgnoreFailureDecideRequiredAvailable"])
    {
      int64_t v14 = -[MADAutoAssetStager action_IgnoreFailureDecideRequiredAvailable:error:]( self,  "action_IgnoreFailureDecideRequiredAvailable:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"DecideMoreCandidates"])
    {
      int64_t v14 = -[MADAutoAssetStager action_DecideMoreCandidates:error:]( self,  "action_DecideMoreCandidates:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"DecideHaveAvailableOtherTargets"])
    {
      int64_t v14 = -[MADAutoAssetStager action_DecideHaveAvailableOtherTargets:error:]( self,  "action_DecideHaveAvailableOtherTargets:error:",  v12,  a8);
    }

    else if ([v11 isEqualToString:@"DecideHaveRequiredCandidates"])
    {
      int64_t v14 = -[MADAutoAssetStager action_DecideHaveRequiredCandidates:error:]( self,  "action_DecideHaveRequiredCandidates:error:",  v12,  a8);
    }

    else
    {
      if (![v11 isEqualToString:@"DecideMoreOptionalAvailable"])
      {
        if ([v11 isEqualToString:@"DoneCandidatesRequiredDecideOptional"])
        {
          int64_t v14 = -[MADAutoAssetStager action_DoneCandidatesRequiredDecideOptional:error:]( self,  "action_DoneCandidatesRequiredDecideOptional:error:",  v12,  a8);
          goto LABEL_173;
        }

        if ([v11 isEqualToString:@"DecideRequiredErrorBlocksOTA"])
        {
          int64_t v14 = -[MADAutoAssetStager action_DecideRequiredErrorBlocksOTA:error:]( self,  "action_DecideRequiredErrorBlocksOTA:error:",  v12,  a8);
          goto LABEL_173;
        }

        if ([v11 isEqualToString:@"FailRequiredDetermineBlocksOTA"])
        {
          int64_t v14 = -[MADAutoAssetStager action_FailRequiredDetermineBlocksOTA:error:]( self,  "action_FailRequiredDetermineBlocksOTA:error:",  v12,  a8);
          goto LABEL_173;
        }

        if ([v11 isEqualToString:@"ReportStagingProgressToClient"])
        {
          int64_t v14 = -[MADAutoAssetStager action_ReportStagingProgressToClient:error:]( self,  "action_ReportStagingProgressToClient:error:",  v12,  a8);
          goto LABEL_173;
        }

        if ([v11 isEqualToString:@"DecideMoreRequiredAvailable"])
        {
          int64_t v14 = -[MADAutoAssetStager action_DecideMoreRequiredAvailable:error:]( self,  "action_DecideMoreRequiredAvailable:error:",  v12,  a8);
          goto LABEL_173;
        }

        if ([v11 isEqualToString:@"AddToStaged"])
        {
          int64_t v14 = -[MADAutoAssetStager action_AddToStaged:error:](self, "action_AddToStaged:error:", v12, a8);
          goto LABEL_173;
        }

        if ([v11 isEqualToString:@"AddToStagedDecideMoreAvailable"])
        {
          int64_t v14 = -[MADAutoAssetStager action_AddToStagedDecideMoreAvailable:error:]( self,  "action_AddToStagedDecideMoreAvailable:error:",  v12,  a8);
          goto LABEL_173;
        }

        if (![v11 isEqualToString:@"DecideMoreOptionalAvailable"])
        {
          if ([v11 isEqualToString:@"DecideMoreAvailable"])
          {
            int64_t v14 = -[MADAutoAssetStager action_DecideMoreAvailable:error:]( self,  "action_DecideMoreAvailable:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"ClientContinueRestartingMaxDetermining"])
          {
            int64_t v14 = -[MADAutoAssetStager action_ClientContinueRestartingMaxDetermining:error:]( self,  "action_ClientContinueRestartingMaxDetermining:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"AddToAvailableDecideAnyAvailable"])
          {
            int64_t v14 = -[MADAutoAssetStager action_AddToAvailableDecideAnyAvailable:error:]( self,  "action_AddToAvailableDecideAnyAvailable:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"DecideTimerDeterminingValid"])
          {
            int64_t v14 = -[MADAutoAssetStager action_DecideTimerDeterminingValid:error:]( self,  "action_DecideTimerDeterminingValid:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"FormCandidatesDecideDetermine"])
          {
            int64_t v14 = -[MADAutoAssetStager action_FormCandidatesDecideDetermine:error:]( self,  "action_FormCandidatesDecideDetermine:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"DoneCandidatesDecideAnyAvailable"])
          {
            int64_t v14 = -[MADAutoAssetStager action_DoneCandidatesDecideAnyAvailable:error:]( self,  "action_DoneCandidatesDecideAnyAvailable:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"NextCandidateBeginDetermine"])
          {
            int64_t v14 = -[MADAutoAssetStager action_NextCandidateBeginDetermine:error:]( self,  "action_NextCandidateBeginDetermine:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"NextAwaitingBeginDownload"])
          {
            int64_t v14 = -[MADAutoAssetStager action_NextAwaitingBeginDownload:error:]( self,  "action_NextAwaitingBeginDownload:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"DoneAvailableDecideAnyStaged"])
          {
            int64_t v14 = -[MADAutoAssetStager action_DoneAvailableDecideAnyStaged:error:]( self,  "action_DoneAvailableDecideAnyStaged:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"DecideEmptyHaveAvailable"])
          {
            int64_t v14 = -[MADAutoAssetStager action_DecideEmptyHaveAvailable:error:]( self,  "action_DecideEmptyHaveAvailable:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"ReplyHaveAvailable"])
          {
            int64_t v14 = -[MADAutoAssetStager action_ReplyHaveAvailable:error:]( self,  "action_ReplyHaveAvailable:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"ReplyNoCandidates"])
          {
            int64_t v14 = -[MADAutoAssetStager action_ReplyNoCandidates:error:]( self,  "action_ReplyNoCandidates:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"ReplyNoCandidatesPurgeAll"])
          {
            int64_t v14 = -[MADAutoAssetStager action_ReplyNoCandidatesPurgeAll:error:]( self,  "action_ReplyNoCandidatesPurgeAll:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"ReplyNothingStaged"])
          {
            int64_t v14 = -[MADAutoAssetStager action_ReplyNothingStaged:error:]( self,  "action_ReplyNothingStaged:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"ReplyNothingStagedPurgeAll"])
          {
            int64_t v14 = -[MADAutoAssetStager action_ReplyNothingStagedPurgeAll:error:]( self,  "action_ReplyNothingStagedPurgeAll:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"ReplyHaveStaged"])
          {
            int64_t v14 = -[MADAutoAssetStager action_ReplyHaveStaged:error:](self, "action_ReplyHaveStaged:error:", v12, a8);
          }

          else if ([v11 isEqualToString:@"ReplyFailRequiredDownload"])
          {
            int64_t v14 = -[MADAutoAssetStager action_ReplyFailRequiredDownload:error:]( self,  "action_ReplyFailRequiredDownload:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"ReplyNoCandidatesHaveOtherTarget"])
          {
            int64_t v14 = -[MADAutoAssetStager action_ReplyNoCandidatesHaveOtherTarget:error:]( self,  "action_ReplyNoCandidatesHaveOtherTarget:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"ReplyTargetNotAvailable"])
          {
            int64_t v14 = -[MADAutoAssetStager action_ReplyTargetNotAvailable:error:]( self,  "action_ReplyTargetNotAvailable:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"RemoveAllReplyPurged"])
          {
            int64_t v14 = -[MADAutoAssetStager action_RemoveAllReplyPurged:error:]( self,  "action_RemoveAllReplyPurged:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"RemoveAllReplyErased"])
          {
            int64_t v14 = -[MADAutoAssetStager action_RemoveAllReplyErased:error:]( self,  "action_RemoveAllReplyErased:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"CancelActiveJob"])
          {
            int64_t v14 = -[MADAutoAssetStager action_CancelActiveJob:error:](self, "action_CancelActiveJob:error:", v12, a8);
          }

          else if ([v11 isEqualToString:@"EliminateDone"])
          {
            int64_t v14 = -[MADAutoAssetStager action_EliminateDone:error:](self, "action_EliminateDone:error:", v12, a8);
          }

          else if ([v11 isEqualToString:@"SetEliminateDone"])
          {
            int64_t v14 = -[MADAutoAssetStager action_SetEliminateDone:error:](self, "action_SetEliminateDone:error:", v12, a8);
          }

          else if ([v11 isEqualToString:@"RememberEliminateDone"])
          {
            int64_t v14 = -[MADAutoAssetStager action_RememberEliminateDone:error:]( self,  "action_RememberEliminateDone:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"RememberSetEliminateDone"])
          {
            int64_t v14 = -[MADAutoAssetStager action_RememberSetEliminateDone:error:]( self,  "action_RememberSetEliminateDone:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"EliminateDecideMatch"])
          {
            int64_t v14 = -[MADAutoAssetStager action_EliminateDecideMatch:error:]( self,  "action_EliminateDecideMatch:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"SetEliminateDecideMatch"])
          {
            int64_t v14 = -[MADAutoAssetStager action_SetEliminateDecideMatch:error:]( self,  "action_SetEliminateDecideMatch:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"EliminateDeterminingDecideMatch"])
          {
            int64_t v14 = -[MADAutoAssetStager action_EliminateDeterminingDecideMatch:error:]( self,  "action_EliminateDeterminingDecideMatch:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"SetEliminateDeterminingDecideMatch"])
          {
            int64_t v14 = -[MADAutoAssetStager action_SetEliminateDeterminingDecideMatch:error:]( self,  "action_SetEliminateDeterminingDecideMatch:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"EliminateDoneDecideMoreCandidates"])
          {
            int64_t v14 = -[MADAutoAssetStager action_EliminateDoneDecideMoreCandidates:error:]( self,  "action_EliminateDoneDecideMoreCandidates:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"EliminateAvailableDecideEmpty"])
          {
            int64_t v14 = -[MADAutoAssetStager action_EliminateAvailableDecideEmpty:error:]( self,  "action_EliminateAvailableDecideEmpty:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"SetEliminateAvailableDecideEmpty"])
          {
            int64_t v14 = -[MADAutoAssetStager action_SetEliminateAvailableDecideEmpty:error:]( self,  "action_SetEliminateAvailableDecideEmpty:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"EliminateDoneDecideMoreDownload"])
          {
            int64_t v14 = -[MADAutoAssetStager action_EliminateDoneDecideMoreDownload:error:]( self,  "action_EliminateDoneDecideMoreDownload:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"EliminateDoneStagedDecideEmpty"])
          {
            int64_t v14 = -[MADAutoAssetStager action_EliminateDoneStagedDecideEmpty:error:]( self,  "action_EliminateDoneStagedDecideEmpty:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"SetEliminateDoneStagedDecideEmpty"])
          {
            int64_t v14 = -[MADAutoAssetStager action_SetEliminateDoneStagedDecideEmpty:error:]( self,  "action_SetEliminateDoneStagedDecideEmpty:error:",  v12,  a8);
          }

          else if ([v11 isEqualToString:@"EliminateCancelActiveJob"])
          {
            int64_t v14 = -[MADAutoAssetStager action_EliminateCancelActiveJob:error:]( self,  "action_EliminateCancelActiveJob:error:",  v12,  a8);
          }

          else
          {
            int64_t v14 = -[MADAutoAssetStager actionUnknownAction:error:](self, "actionUnknownAction:error:", v11, a8);
          }

          goto LABEL_173;
        }
      }

      int64_t v14 = -[MADAutoAssetStager action_DecideMoreOptionalAvailable:error:]( self,  "action_DecideMoreOptionalAvailable:error:",  v12,  a8);
    }

- (int64_t)action_ClientAcceptRemoveAllReplyPurged:(id)a3 error:(id *)a4
{
  id v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetStager _stagingClientRequestDownloadPurged:]( self,  "_stagingClientRequestDownloadPurged:",  @"ClientAcceptRemoveAllReplyPurged");
  v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);

  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v8,  @"ClientAcceptRemoveAllReplyPurged");
  -[MADAutoAssetStager _clearBeforeDetermineAvailable:removingDetermined:]( self,  "_clearBeforeDetermineAvailable:removingDetermined:",  @"ClientAcceptRemoveAllReplyPurged",  -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups") ^ 1);
  -[MADAutoAssetStager _clearRemoveByGroupTargets:removingDetermined:]( self,  "_clearRemoveByGroupTargets:removingDetermined:",  @"ClientAcceptRemoveAllReplyPurged",  -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups") ^ 1);
  -[MADAutoAssetStager _replyToStagingClientOperationSuccess](self, "_replyToStagingClientOperationSuccess");
  v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  803LL,  4LL,  4LL,  v9);

  return 0LL;
}

- (MADAutoAssetClientRequest)stagingClientRequest
{
  return self->_stagingClientRequest;
}

- (void)setStagingClientRequest:(id)a3
{
}

- (MADAutoAssetDescriptor)activeJobDescriptor
{
  return self->_activeJobDescriptor;
}

- (void)setCandidatesForStaging:(id)a3
{
}

- (void)setDeterminingBySelector:(id)a3
{
}

- (void)setAvailableForStaging:(id)a3
{
}

- (void)setAwaitingStagingAttempt:(id)a3
{
}

- (void)_acknowlegdeAndClearAllEliminations
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors", 0LL));
  id v6 = [v5 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v20;
    do
    {
      v9 = 0LL;
      do
      {
        if (*(void *)v20 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v19 + 1) + 8LL * (void)v9);
        id v11 = objc_autoreleasePoolPush();
        id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors"));
        id v13 = [v12 safeObjectForKey:v10 ofClass:objc_opt_class(MAAutoAssetSelector)];
        int64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

        v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
        unsigned __int8 v16 = -[MADAutoAssetStager _isAssetTypeManagedAsSet:](self, "_isAssetTypeManagedAsSet:", v15);

        if ((v16 & 1) == 0) {
          -[MADAutoAssetStager notifyControlManagerEliminateDone:forAssetSelector:]( self,  "notifyControlManagerEliminateDone:forAssetSelector:",  @"_acknowlegdeAndClearAllEliminations",  v14);
        }

        objc_autoreleasePoolPop(v11);
        v9 = (char *)v9 + 1;
      }

      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }

    while (v7);
  }

  v17 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setEliminationSelectors:](self, "setEliminationSelectors:", v17);

  v18 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setEliminationSelectorsAcknowledged:](self, "setEliminationSelectorsAcknowledged:", v18);
}

- (NSMutableDictionary)eliminationSelectors
{
  return self->_eliminationSelectors;
}

- (void)setEliminationSelectors:(id)a3
{
}

- (void)setEliminationSelectorsAcknowledged:(id)a3
{
}

- (void)_removeAllStagedContent
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  id v6 = [obj countByEnumeratingWithState:&v24 objects:v28 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v25;
    do
    {
      for (i = 0LL; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v25 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void *)(*((void *)&v24 + 1) + 8LL * (void)i);
        id v11 = objc_autoreleasePoolPush();
        id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
        id v13 = [v12 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        int64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

        if (v14)
        {
          v15 = v5;
          -[NSMutableArray addObject:](v5, "addObject:", v14);
          unsigned int v16 = [v14 isPatch];
          v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsUnstaged](self, "statisticsUnstaged"));
          v18 = v17;
          if (v16)
          {
            objc_msgSend(v17, "setPatchedAssets:", (char *)objc_msgSend(v17, "patchedAssets") + 1);

            __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsUnstaged](self, "statisticsUnstaged"));
            __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v14 metadata]);
            objc_msgSend( v19,  "setPatchedBytes:",  (char *)objc_msgSend(v20, "safeIntegerForKey:", @"_UnarchivedSize")
            + (void)[v19 patchedBytes]);
            __int128 v21 = @"removed previously staged auto-asset (patch)";
          }

          else
          {
            objc_msgSend(v17, "setFullAssets:", (char *)objc_msgSend(v17, "fullAssets") + 1);

            __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsUnstaged](self, "statisticsUnstaged"));
            __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v14 metadata]);
            objc_msgSend( v19,  "setFullBytes:",  (char *)objc_msgSend(v20, "safeIntegerForKey:", @"_UnarchivedSize")
            + (void)[v19 fullBytes]);
            __int128 v21 = @"removed previously staged auto-asset (full)";
          }

          -[MADAutoAssetStager _logPersistedRemovedEntry:removedDescriptor:message:]( self,  "_logPersistedRemovedEntry:removedDescriptor:message:",  @"_removeAllStagedContent",  v14,  v21);
          id v5 = v15;
        }

        objc_autoreleasePoolPop(v11);
      }

      id v7 = [obj countByEnumeratingWithState:&v24 objects:v28 count:16];
    }

    while (v7);
  }

  __int128 v22 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setSuccessfullyStaged:](self, "setSuccessfullyStaged:", v22);

  -[MADAutoAssetStager setOverallStagedTotalExpectedBytes:](self, "setOverallStagedTotalExpectedBytes:", 0LL);
  -[MADAutoAssetStager setOverallStagedDownloadedSoFarBytes:](self, "setOverallStagedDownloadedSoFarBytes:", 0LL);
  -[MADAutoAssetStager setCurrentStagedLastWrittenBytes:](self, "setCurrentStagedLastWrittenBytes:", 0LL);
  if (-[NSMutableArray count](v5, "count")) {
    +[MADAutoAssetControlManager stagerPurgeStagedContent:]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerPurgeStagedContent:",  v5);
  }
}

- (NSMutableDictionary)successfullyStaged
{
  return self->_successfullyStaged;
}

- (void)setSuccessfullyStaged:(id)a3
{
}

- (void)setOverallStagedTotalExpectedBytes:(int64_t)a3
{
  self->_overallStagedTotalExpectedBytes = a3;
}

- (void)setOverallStagedDownloadedSoFarBytes:(int64_t)a3
{
  self->_overallStagedDownloadedSoFarBytes = a3;
}

- (MADAutoAssetPersisted)persistedState
{
  return self->_persistedState;
}

- (void)_logPersistedConfigSet:(id)a3 message:(id)a4
{
  id v49 = a3;
  id v48 = a4;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  v9 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedConfig]);
  unsigned int v47 = [v9 BOOLeanForKey:@"modeByGroups"];

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 persistedConfig]);
  v46 = (void *)objc_claimAutoreleasedReturnValue([v11 stringForKey:@"lastStagingFromOSVersion"]);

  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedConfig]);
  int64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 stringForKey:@"lastStagingFromBuildVersion"]);

  v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([v15 persistedConfig]);
  v17 = (void *)objc_claimAutoreleasedReturnValue([v16 stringForKey:@"assetTargetOSVersion"]);

  v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedConfig]);
  __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v19 stringForKey:@"assetTargetBuildVersion"]);

  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v21 persistedConfig]);
  id v45 = [v22 ullForKey:@"candidateAssetCount"];

  v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v23 persistedConfig]);
  id v44 = [v24 ullForKey:@"determinedAvailableAssetCount"];

  __int128 v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v25 persistedConfig]);
  id v27 = [v26 ullForKey:@"activelyStagingAssetCount"];

  v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  v29 = (void *)objc_claimAutoreleasedReturnValue([v28 persistedConfig]);
  id v30 = [v29 ullForKey:@"awaitingStagingAssetCount"];

  v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  v32 = (void *)objc_claimAutoreleasedReturnValue([v31 persistedConfig]);
  id v33 = [v32 ullForKey:@"stagedAssetCount"];

  v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  v35 = (void *)objc_claimAutoreleasedReturnValue([v34 persistedConfig]);
  id v36 = [v35 ullForKey:@"stagedAssetTotalContentBytes"];

  v37 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"lastStagingFrom[OSVersion:%@,BuildVersion:%@] | assetTarget[OSVersion:%@,BuildVersion:%@]",  v46,  v14,  v17,  v20);
  v38 = objc_alloc(&OBJC_CLASS___NSString);
  v39 = @"ALL";
  if (v47) {
    v39 = @"BY-GROUP";
  }
  v40 = -[NSString initWithFormat:]( v38,  "initWithFormat:",  @"targetMode:%@ | candidate:%llu | determinedAvailable:%llu | activelyStaging:%llu | awaitingStaging:%llu | staged:%llu(totalContentBytes:%llu)",  v39,  v45,  v44,  v27,  v30,  v33,  v36);
  v41 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  @"CONFIG_SET"));
  v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  v43 = (os_log_s *)objc_claimAutoreleasedReturnValue([v42 oslog]);

  if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138546946;
    v51 = @"PERSISTED";
    __int16 v52 = 2114;
    v53 = @"AUTO-STAGER";
    __int16 v54 = 2114;
    v55 = @"CONFIG_SET";
    __int16 v56 = 2114;
    v57 = @"STAGR";
    __int16 v58 = 2114;
    v59 = @">----->";
    __int16 v60 = 2114;
    id v61 = v49;
    __int16 v62 = 2114;
    id v63 = v48;
    __int16 v64 = 2114;
    v65 = @"STAGR";
    __int16 v66 = 2114;
    v67 = v41;
    __int16 v68 = 2114;
    v69 = v37;
    __int16 v70 = 2114;
    v71 = @"STAGR";
    __int16 v72 = 2114;
    v73 = v41;
    __int16 v74 = 2114;
    v75 = v40;
    __int16 v76 = 2114;
    v77 = @"STAGR";
    __int16 v78 = 2114;
    v79 = @"<-----<";
    _os_log_impl( &dword_0,  v43,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) %{public}@\n #_%{public}@:(%{public}@) %{public}@\n #_%{public}@:%{public}@",  buf,  0x98u);
  }
}

- (SUCoreLog)logger
{
  return self->_logger;
}

- (void)_logPersistedTableOfContents:(id)a3
{
  v4 = (__CFString *)a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (+[MADAutoAssetControlManager preferencePersistedTableLoggingEnabled]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferencePersistedTableLoggingEnabled"))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 persistedEntryIDs:v4]);

    v9 = v8;
    if ([v8 count])
    {
      id v30 = (const __CFString *)[v8 count];
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138544642;
        v32 = @"PERSISTED";
        __int16 v33 = 2114;
        v34 = @"AUTO-STAGER";
        __int16 v35 = 2114;
        id v36 = @"ENTRY_LOAD";
        __int16 v37 = 2114;
        v38 = @"STAGR";
        __int16 v39 = 2114;
        v40 = @">----->";
        __int16 v41 = 2114;
        v42 = v4;
        _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} table-of-contents...",  buf,  0x3Eu);
      }

      v29 = v8;
      if ((uint64_t)v30 >= 1)
      {
        uint64_t v13 = 0LL;
        *(void *)&__int128 v12 = 138543874LL;
        __int128 v28 = v12;
        do
        {
          int64_t v14 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectAtIndexedSubscript:", v13, v28));
          v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
          unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([v15 persistedEntry:v14 fromLocation:v4]);

          if (v16)
          {
            id v17 = [v16 ullForKey:@"assetRepresentation"];
            id v18 = [v16 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
            __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
            __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
            {
              __int128 v22 = +[MASAutoAssetSummary newAssetRepresentationName:]( &OBJC_CLASS___MASAutoAssetSummary,  "newAssetRepresentationName:",  v17);
              v23 = (__CFString *)[v19 newSummaryWithoutSelector];
              *(_DWORD *)buf = 138544898;
              v32 = @"STAGR";
              __int16 v33 = 2114;
              v34 = @"E_LOD";
              __int16 v35 = 2048;
              id v36 = (const __CFString *)(v13 + 1);
              __int16 v37 = 2048;
              v9 = v29;
              v38 = v30;
              __int16 v39 = 2114;
              v40 = v14;
              __int16 v41 = 2114;
              v42 = v22;
              __int16 v43 = 2114;
              id v44 = v23;
              _os_log_impl( &dword_0,  v21,  OS_LOG_TYPE_DEFAULT,  "\n#_%{public}@:%{public}@ (%ld of %ld) [%{public}@] | (%{public}@) %{public}@",  buf,  0x48u);
            }
          }

          else
          {
            __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v24 oslog]);

            if (!os_log_type_enabled((os_log_t)v19, OS_LOG_TYPE_ERROR)) {
              goto LABEL_12;
            }
            __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            *(_DWORD *)buf = v28;
            v32 = v4;
            __int16 v33 = 2114;
            v34 = (const __CFString *)v21;
            __int16 v35 = 2114;
            id v36 = v14;
            _os_log_error_impl( &dword_0,  (os_log_t)v19,  OS_LOG_TYPE_ERROR,  "%{public}@\n[AUTO-STAGER] {%{public}@:_logPersistedTableOfContents} unable to load entry:%{public}@",  buf,  0x20u);
          }

LABEL_12:
          ++v13;
        }

        while (v30 != (const __CFString *)v13);
      }

      __int128 v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int128 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138544642;
        v32 = @"PERSISTED";
        __int16 v33 = 2114;
        v34 = @"AUTO-STAGER";
        __int16 v35 = 2114;
        id v36 = @"ENTRY_LOAD";
        __int16 v37 = 2114;
        v38 = @"STAGR";
        __int16 v39 = 2114;
        v40 = @"<-----<";
        __int16 v41 = 2114;
        v42 = v4;
        _os_log_impl( &dword_0,  v26,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} ...table-of-contents",  buf,  0x3Eu);
      }

      v9 = v29;
    }

    else
    {
      id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int128 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138545410;
        v32 = @"PERSISTED";
        __int16 v33 = 2114;
        v34 = @"AUTO-STAGER";
        __int16 v35 = 2114;
        id v36 = @"ENTRY_LOAD";
        __int16 v37 = 2114;
        v38 = @"STAGR";
        __int16 v39 = 2114;
        v40 = @">----->";
        __int16 v41 = 2114;
        v42 = v4;
        __int16 v43 = 2114;
        id v44 = @"empty table-of-contents";
        __int16 v45 = 2114;
        v46 = @"STAGR";
        __int16 v47 = 2114;
        id v48 = @"<-----<";
        _os_log_impl( &dword_0,  v26,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:%{public}@",  buf,  0x5Cu);
      }
    }
  }
}

- (void)_replyToStagingClientOperationSuccess
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestGeneralClear:replyingToCleared:]( self,  "_stagingClientRequestGeneralClear:replyingToCleared:",  @"_replyToStagingClientOperationSuccess",  0LL));
  id v6 = v5;
  if (v5)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 clientReplyCompletion]);

    if (v7)
    {
      uint64_t v8 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      v9 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v9));

      id v11 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
      __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v6 clientID]);
      uint64_t v13 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v11,  "initWithType:messageName:clientID:version:message:",  2LL,  v10,  v12,  0LL,  v8);

      int64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsClientRepliesSuccess](self, "statisticsClientRepliesSuccess"));
      v15 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
      unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([v15 messageName]);
      [v14 incrementForClientRequestMessage:v16];

      id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
        int v23 = 138543874;
        __int128 v24 = v19;
        __int16 v25 = 2114;
        __int128 v26 = v20;
        __int16 v27 = 2114;
        __int128 v28 = v10;
        _os_log_impl( &dword_0,  v18,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {_replyToStagingClientOperationSuccess} [STAGING-CLIENT-REPLY] %{public}@ reply to staging-client (operation success)",  (uint8_t *)&v23,  0x20u);
      }

      __int128 v21 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue([v6 clientReplyCompletion]);
      ((void (**)(void, SUCoreConnectMessage *, void))v21)[2](v21, v13, 0LL);
    }

    else
    {
      uint64_t v8 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary diag](v8, "diag"));
      [v22 trackAnomaly:@"AUTO-STAGER" forReason:@"{_replyToStagingClientOperationSuccess} | pending staging-client-request with no reply-completion" withResult:6111 withError:0];
    }
  }
}

- (MANAutoAssetControlStatisticsByCommand)statisticsClientRepliesSuccess
{
  return self->_statisticsClientRepliesSuccess;
}

- (id)summary
{
  unsigned int v3 = -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups");
  uint64_t v4 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromOSVersion](self, "stagingFromOSVersion"));
  v99 = (void *)v4;
  if (v3)
  {
    if (v4) {
      v97 = (const __CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromOSVersion](self, "stagingFromOSVersion"));
    }
    else {
      v97 = @"N";
    }
    uint64_t v5 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](self, "stagingFromBuildVersion"));
    if (v5) {
      id v6 = (const __CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](self, "stagingFromBuildVersion"));
    }
    else {
      id v6 = @"N";
    }
    v85 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
    if (v85) {
      v9 = (const __CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
    }
    else {
      v9 = @"N";
    }
    v81 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
    if (v81) {
      v95 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
    }
    else {
      v95 = @"N";
    }
    uint64_t v13 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
    v89 = (void *)v5;
    if (v13) {
      v93 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
    }
    else {
      v93 = @"N";
    }
    v15 = @"N";
    v77 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
    if (v77) {
      v91 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
    }
    else {
      v91 = @"N";
    }
    v75 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
    id v69 = [v75 count];
    v73 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDownloadRequest](self, "stagingClientDownloadRequest"));
    if (v73) {
      unsigned int v16 = @"Y";
    }
    else {
      unsigned int v16 = @"N";
    }
    v67 = v16;
    if (-[MADAutoAssetStager stagingClientChosen](self, "stagingClientChosen")) {
      id v17 = @"Y";
    }
    else {
      id v17 = @"N";
    }
    v65 = v17;
    if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups")) {
      id v18 = @"Y";
    }
    else {
      id v18 = @"N";
    }
    __int16 v62 = v18;
    if (-[MADAutoAssetStager stagingClientCompleteOnceRequired](self, "stagingClientCompleteOnceRequired")) {
      __int128 v19 = @"Y";
    }
    else {
      __int128 v19 = @"N";
    }
    __int16 v60 = v19;
    v87 = (__CFString *)v6;
    v84 = (__CFString *)v9;
    v79 = (void *)v13;
    v71 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    if (v71)
    {
      id v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
      v15 = (__CFString *)objc_claimAutoreleasedReturnValue([v48 summary]);
    }

    id v63 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingRequiredByTarget]( self,  "candidatesForStagingRequiredByTarget"));
    int64_t v55 = -[MADAutoAssetStager _countOfEntriesDictionaryOfArray:](self, "_countOfEntriesDictionaryOfArray:", v63);
    v59 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingOptionalByTarget]( self,  "candidatesForStagingOptionalByTarget"));
    int64_t v53 = -[MADAutoAssetStager _countOfEntriesDictionaryOfArray:](self, "_countOfEntriesDictionaryOfArray:", v59);
    __int16 v58 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidatesForStaging](self, "candidatesForStaging"));
    id v52 = [v58 count];
    v57 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager determiningBySelector](self, "determiningBySelector"));
    id v51 = [v57 count];
    __int16 v56 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingRequiredByTarget]( self,  "availableForStagingRequiredByTarget"));
    int64_t v50 = -[MADAutoAssetStager _countOfEntriesDictionaryOfArray:](self, "_countOfEntriesDictionaryOfArray:", v56);
    __int16 v54 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingOptionalByTarget]( self,  "availableForStagingOptionalByTarget"));
    int64_t v49 = -[MADAutoAssetStager _countOfEntriesDictionaryOfArray:](self, "_countOfEntriesDictionaryOfArray:", v54);
    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
    id v23 = [v22 count];
    __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
    id v25 = [v24 count];
    __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
    id v27 = [v26 count];
    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors"));
    id v29 = [v28 count];
    id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectorsAcknowledged](self, "eliminationSelectorsAcknowledged"));
    id v47 = v23;
    v31 = (__CFString *)v97;
    v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"[GROUP][fromOS:%@,fromBuild:%@,targetOS:%@,targetBuild:%@|targetTrain:%@|targetRestoreVersion:%@|determineRequests:%ld|downloadRequest:%@(chosen:%@,usingGroups:%@,OnceRequired:%@)|activeDescriptor:%@|candidates:(R:%ld,O:%ld,a:%ld),determining:%ld,available:(R:%ld,O:%ld,a:%ld)|awaitingStaging:%ld|staged:%ld|elimination:%ld,eliminationAck:%ld]",  v97,  v87,  v84,  v95,  v93,  v91,  v69,  v67,  v65,  v62,  v60,  v15,  v55,  v53,  v52,  v51,  v50,  v49,  v47,  v25,  v27,  v29,  [v30 count]));

    if (v71)
    {
    }

    __int16 v33 = v99;
    if (v77) {

    }
    v34 = v89;
    if (v79) {

    }
    if (v81) {
    if (v85)
    }

    if (v89) {
  }
    }

  else
  {
    if (v4) {
      v98 = (const __CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromOSVersion](self, "stagingFromOSVersion"));
    }
    else {
      v98 = @"N";
    }
    uint64_t v7 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](self, "stagingFromBuildVersion"));
    if (v7) {
      uint64_t v8 = (const __CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](self, "stagingFromBuildVersion"));
    }
    else {
      uint64_t v8 = @"N";
    }
    v83 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
    if (v83) {
      uint64_t v10 = (const __CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
    }
    else {
      uint64_t v10 = @"N";
    }
    uint64_t v11 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
    if (v11) {
      __int128 v12 = (const __CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
    }
    else {
      __int128 v12 = @"N";
    }
    uint64_t v14 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
    if (v14) {
      v94 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
    }
    else {
      v94 = @"N";
    }
    v96 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
    if (v96) {
      v92 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
    }
    else {
      v92 = @"N";
    }
    uint64_t v20 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientRequest](self, "stagingClientRequest"));
    __int128 v21 = @"Y";
    __int16 v74 = (void *)v20;
    if (!v20) {
      __int128 v21 = @"N";
    }
    __int16 v70 = v21;
    __int16 v72 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    v86 = (__CFString *)v8;
    v88 = (void *)v7;
    v80 = (void *)v11;
    v82 = (__CFString *)v10;
    __int16 v76 = (void *)v14;
    __int16 v78 = (__CFString *)v12;
    if (v72)
    {
      id v61 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
      v90 = (__CFString *)objc_claimAutoreleasedReturnValue([v61 summary]);
    }

    else
    {
      v90 = @"N";
    }

    __int16 v68 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidatesForStaging](self, "candidatesForStaging"));
    id v64 = [v68 count];
    __int16 v66 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager determiningBySelector](self, "determiningBySelector"));
    id v35 = [v66 count];
    id v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
    id v37 = [v36 count];
    v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
    id v39 = [v38 count];
    v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
    id v41 = [v40 count];
    v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors"));
    id v43 = [v42 count];
    id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectorsAcknowledged](self, "eliminationSelectorsAcknowledged"));
    id v46 = v43;
    v31 = (__CFString *)v98;
    v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"[ALL][fromOS:%@,fromBuild:%@,targetOS:%@,targetBuild:%@|targetTrain:%@|targetRestoreVersion:%@|clientRequest:%@|activeDescriptor:%@|candidates:%ld,determining:%ld,available:%ld|awaitingStaging:%ld|staged:%ld|elimination:%ld,eliminationAck:%ld]",  v98,  v86,  v82,  v78,  v94,  v92,  v70,  v90,  v64,  v35,  v37,  v39,  v41,  v46,  [v44 count]));

    if (v72)
    {
    }

    __int16 v33 = v99;
    v34 = v88;
    if (v96) {

    }
    if (v76) {
    if (v80)
    }

    if (v83) {
    if (v88)
    }
  }

  if (v33) {
  return v32;
  }
}

- (NSString)stagingFromOSVersion
{
  return self->_stagingFromOSVersion;
}

- (NSString)stagingFromBuildVersion
{
  return self->_stagingFromBuildVersion;
}

- (NSString)assetTargetOSVersion
{
  return self->_assetTargetOSVersion;
}

- (NSString)assetTargetBuildVersion
{
  return self->_assetTargetBuildVersion;
}

- (NSMutableArray)candidatesForStaging
{
  return self->_candidatesForStaging;
}

- (NSMutableDictionary)determiningBySelector
{
  return self->_determiningBySelector;
}

- (NSMutableArray)availableForStaging
{
  return self->_availableForStaging;
}

- (NSMutableArray)awaitingStagingAttempt
{
  return self->_awaitingStagingAttempt;
}

- (NSMutableDictionary)eliminationSelectorsAcknowledged
{
  return self->_eliminationSelectorsAcknowledged;
}

+ (id)_getAutoAssetStagerStateTable
{
  v1712[0] = @"ReadyToLoad";
  v1710[0] = @"ResumeFromPersisted";
  uint64_t v2 = kSUCoreActionKey;
  uint64_t v1708 = kSUCoreActionKey;
  v1709 = @"LoadPersistedDecideResume";
  v575 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1709,  &v1708,  1LL));
  v1711[0] = v575;
  v1710[1] = @"ResumeNothingAvailable";
  uint64_t v3 = kSUCoreNextStateKey;
  uint64_t v1706 = kSUCoreNextStateKey;
  v1707 = @"NothingAvailable";
  v574 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1707,  &v1706,  1LL));
  v1711[1] = v574;
  v1710[2] = @"ResumeGroupsAvailable";
  uint64_t v1704 = v3;
  v1705 = @"GroupsAvailableContent";
  v573 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1705,  &v1704,  1LL));
  v1711[2] = v573;
  v1710[3] = @"ResumeAllAvailable";
  uint64_t v1702 = v3;
  v1703 = @"AllAvailableContent";
  v572 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1703,  &v1702,  1LL));
  v1711[3] = v572;
  v1710[4] = @"ResumeStaged";
  uint64_t v1700 = v3;
  v1701 = @"StagedContent";
  v571 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1701,  &v1700,  1LL));
  v1711[4] = v571;
  v1710[5] = @"ResumePurging";
  v1698[0] = v3;
  v1698[1] = v2;
  v1699[0] = @"NothingAvailable";
  v1699[1] = @"RemoveAllReplyPurged";
  v570 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1699,  v1698,  2LL));
  v1711[5] = v570;
  v1710[6] = @"ResumeRunningTargetVersion";
  v1696[0] = v3;
  v1696[1] = v2;
  v1697[0] = @"NothingAvailable";
  v1697[1] = @"RemoveAllReplyPurged";
  v569 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1697,  v1696,  2LL));
  v1711[6] = v569;
  v1710[7] = @"ResumePromotingAllStaged";
  v1694[0] = v3;
  v1694[1] = v2;
  v1695[0] = @"NothingAvailable";
  v1695[1] = @"RemoveAllReplyPurged";
  v568 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1695,  v1694,  2LL));
  v1711[7] = v568;
  v567 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1711,  v1710,  8LL));
  v1713[0] = v567;
  v1712[1] = @"NothingAvailable";
  v1692[0] = @"ControlForceUnstage";
  uint64_t v1690 = v2;
  uint64_t v4 = kSUCoreFSMActionNoOp;
  uint64_t v1691 = kSUCoreFSMActionNoOp;
  v566 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1691,  &v1690,  1LL));
  v1693[0] = v566;
  v1692[1] = @"ControlEliminateAssetSelector";
  uint64_t v1688 = v2;
  v1689 = @"EliminateDone";
  v565 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1689,  &v1688,  1LL));
  v1693[1] = v565;
  v1692[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1686 = v2;
  v1687 = @"SetEliminateDone";
  v564 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1687,  &v1686,  1LL));
  v1693[2] = v564;
  v1692[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1684 = v2;
  v1685 = @"ClientCheckLatchGroupsDetermine";
  v563 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1685,  &v1684,  1LL));
  v1693[3] = v563;
  v1692[4] = @"ClientDetermineAllAvailable";
  uint64_t v1682 = v2;
  v1683 = @"ClientAcceptAllDetermine";
  v562 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1683,  &v1682,  1LL));
  v1693[4] = v562;
  v1692[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1680 = v2;
  v1681 = @"ClientNothingStaged";
  v561 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1681,  &v1680,  1LL));
  v1693[5] = v561;
  v1692[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1678 = v2;
  v1679 = @"ClientNewerReplySameOrEmptyDownload";
  v560 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1679,  &v1678,  1LL));
  v1693[6] = v560;
  v1692[7] = @"ClientDownloadAllAvailable";
  uint64_t v1676 = v2;
  v1677 = @"ClientNothingStaged";
  v559 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1677,  &v1676,  1LL));
  v1693[7] = v559;
  v1692[8] = @"ClientCancelCompletion";
  uint64_t v1674 = v2;
  v1675 = @"ClientCancelDesireForCompletion";
  v558 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1675,  &v1674,  1LL));
  v1693[8] = v558;
  v1692[9] = @"ClientPurgeAll";
  uint64_t v1672 = v2;
  v1673 = @"ClientAcceptRemoveAllReplyPurged";
  v557 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1673,  &v1672,  1LL));
  v1693[9] = v557;
  v1692[10] = @"ClientEraseAll";
  uint64_t v1670 = v2;
  v1671 = @"ClientAcceptRemoveAllReplyErased";
  v556 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1671,  &v1670,  1LL));
  v1693[10] = v556;
  v1692[11] = @"LastStagedJustPromoted";
  uint64_t v1668 = v2;
  uint64_t v1669 = v4;
  v555 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1669,  &v1668,  1LL));
  v1693[11] = v555;
  v1692[12] = @"TimeoutDetermining";
  uint64_t v1666 = v2;
  uint64_t v1667 = v4;
  v554 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1667,  &v1666,  1LL));
  v1693[12] = v554;
  v1692[13] = @"ModeGroupsDetermineStart";
  v1664[0] = v3;
  v1664[1] = v2;
  v1665[0] = @"GroupsRequestingDownloaded";
  v1665[1] = @"RequestAlreadyDownloaded";
  v553 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1665,  v1664,  2LL));
  v1693[13] = v553;
  v1692[14] = @"ModeAllDetermineStart";
  v1662[0] = v3;
  v1662[1] = v2;
  v1663[0] = @"AllRequestingDownloaded";
  v1663[1] = @"RequestAlreadyDownloaded";
  v552 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1663,  v1662,  2LL));
  v1693[14] = v552;
  v551 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1693,  v1692,  15LL));
  v1713[1] = v551;
  v1712[2] = @"GroupsRequestingDownloaded";
  v1660[0] = @"ControlForceUnstage";
  uint64_t v1658 = v3;
  v1659 = @"CancelingRequestDownloaded";
  v550 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1659,  &v1658,  1LL));
  v1661[0] = v550;
  v1660[1] = @"ControlAlreadyDownloaded";
  uint64_t v1656 = v2;
  v1657 = @"FormCandidatesDecideDetermine";
  v549 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1657,  &v1656,  1LL));
  v1661[1] = v549;
  v1660[2] = @"ControlEliminateAssetSelector";
  uint64_t v1654 = v2;
  v1655 = @"RememberEliminateDone";
  v548 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1655,  &v1654,  1LL));
  v1661[2] = v548;
  v1660[3] = @"ControlEliminateSetIdentifier";
  uint64_t v1652 = v2;
  v1653 = @"RememberSetEliminateDone";
  v547 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1653,  &v1652,  1LL));
  v1661[3] = v547;
  v1660[4] = @"ClientDetermineGroupsAvailable";
  uint64_t v1650 = v2;
  v1651 = @"ClientNewerReplySameOrEmptyDetermine";
  v546 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1651,  &v1650,  1LL));
  v1661[4] = v546;
  v1660[5] = @"ClientDetermineAllAvailable";
  uint64_t v1648 = v2;
  v1649 = @"ClientFailWrongMode";
  v545 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1649,  &v1648,  1LL));
  v1661[5] = v545;
  v1660[6] = @"ClientDownloadAlreadyStaged";
  uint64_t v1646 = v2;
  v1647 = @"ClientNothingStaged";
  v544 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1647,  &v1646,  1LL));
  v1661[6] = v544;
  v1660[7] = @"ClientDownloadGroupsAvailable";
  uint64_t v1644 = v2;
  v1645 = @"ClientNewerReplyEmptyDownload";
  v543 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1645,  &v1644,  1LL));
  v1661[7] = v543;
  v1660[8] = @"ClientDownloadAllAvailable";
  uint64_t v1642 = v2;
  v1643 = @"ClientNothingStaged";
  v542 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1643,  &v1642,  1LL));
  v1661[8] = v542;
  v1660[9] = @"ClientCancelCompletion";
  uint64_t v1640 = v2;
  v1641 = @"ClientCancelDesireForCompletion";
  v541 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1641,  &v1640,  1LL));
  v1661[9] = v541;
  v1660[10] = @"ClientPurgeAll";
  uint64_t v1638 = v2;
  v1639 = @"ClientPurgeDecideStagingClient";
  v540 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1639,  &v1638,  1LL));
  v1661[10] = v540;
  v1660[11] = @"ClientEraseAll";
  uint64_t v1636 = v2;
  v1637 = @"ClientEraseDecideStagingClient";
  v539 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1637,  &v1636,  1LL));
  v1661[11] = v539;
  v1660[12] = @"LastStagedJustPromoted";
  uint64_t v1634 = v2;
  uint64_t v1635 = v4;
  v538 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1635,  &v1634,  1LL));
  v1661[12] = v538;
  v1660[13] = @"TimeoutDetermining";
  uint64_t v1632 = v2;
  uint64_t v1633 = v4;
  v537 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1633,  &v1632,  1LL));
  v1661[13] = v537;
  v1660[14] = @"DetermineHaveCandidates";
  uint64_t v1630 = v2;
  v1631 = @"DecideHaveRequiredCandidates";
  v536 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1631,  &v1630,  1LL));
  v1661[14] = v536;
  v1660[15] = @"DetermineHaveRequired";
  v1628[0] = v3;
  v1628[1] = v2;
  v1629[0] = @"RequiredDeterminingAvailable";
  v1629[1] = @"NextCandidateBeginDetermine";
  v535 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1629,  v1628,  2LL));
  v1661[15] = v535;
  v1660[16] = @"DetermineHaveOptional";
  v1626[0] = v3;
  v1626[1] = v2;
  v1627[0] = @"OptionalDeterminingAvailable";
  v1627[1] = @"NextCandidateBeginDetermine";
  v534 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1627,  v1626,  2LL));
  v1661[16] = v534;
  v1660[17] = @"DetermineNoCandidates";
  uint64_t v1624 = v2;
  v1625 = @"DecideHaveAvailableOtherTargets";
  v533 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1625,  &v1624,  1LL));
  v1661[17] = v533;
  v1660[18] = @"HaveOtherTargetAvailable";
  v1622[0] = v3;
  v1622[1] = v2;
  v1623[0] = @"GroupsAvailableContent";
  v1623[1] = @"ReplyNoCandidatesHaveOtherTarget";
  v532 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1623,  v1622,  2LL));
  v1661[18] = v532;
  v1660[19] = @"NoOtherTargetAvailable";
  v1620[0] = v3;
  v1620[1] = v2;
  v1621[0] = @"NothingAvailable";
  v1621[1] = @"ReplyNoCandidatesPurgeAll";
  v531 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1621,  v1620,  2LL));
  v1661[19] = v531;
  v1660[20] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v1618 = v2;
  v1619 = @"RemoveAllReplyPurged";
  v530 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1619,  &v1618,  1LL));
  v1661[20] = v530;
  v1660[21] = @"PurgeAcceptedRemoveAll";
  uint64_t v1616 = v3;
  v1617 = @"CancelingRequestDownloaded";
  v529 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1617,  &v1616,  1LL));
  v1661[21] = v529;
  v1660[22] = @"EraseAcceptedRemoveAll";
  uint64_t v1614 = v3;
  v1615 = @"ErasingRequestDownloaded";
  v528 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1615,  &v1614,  1LL));
  v1661[22] = v528;
  v527 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1661,  v1660,  23LL));
  v1713[2] = v527;
  v1712[3] = @"AllRequestingDownloaded";
  v1612[0] = @"ControlForceUnstage";
  uint64_t v1610 = v3;
  v1611 = @"CancelingRequestDownloaded";
  v526 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1611,  &v1610,  1LL));
  v1613[0] = v526;
  v1612[1] = @"ControlAlreadyDownloaded";
  uint64_t v1608 = v2;
  v1609 = @"FormCandidatesDecideDetermine";
  v525 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1609,  &v1608,  1LL));
  v1613[1] = v525;
  v1612[2] = @"ControlEliminateAssetSelector";
  uint64_t v1606 = v2;
  v1607 = @"RememberEliminateDone";
  v524 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1607,  &v1606,  1LL));
  v1613[2] = v524;
  v1612[3] = @"ControlEliminateSetIdentifier";
  uint64_t v1604 = v2;
  v1605 = @"RememberSetEliminateDone";
  v523 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1605,  &v1604,  1LL));
  v1613[3] = v523;
  v1612[4] = @"ClientDetermineGroupsAvailable";
  uint64_t v1602 = v2;
  v1603 = @"ClientNewerReplySameOrEmptyDetermine";
  v522 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1603,  &v1602,  1LL));
  v1613[4] = v522;
  v1612[5] = @"ClientDetermineAllAvailable";
  uint64_t v1600 = v2;
  v1601 = @"ClientContinueUsingLatestRequest";
  v521 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1601,  &v1600,  1LL));
  v1613[5] = v521;
  v1612[6] = @"ClientDownloadAlreadyStaged";
  uint64_t v1598 = v2;
  v1599 = @"ClientNothingStaged";
  v520 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1599,  &v1598,  1LL));
  v1613[6] = v520;
  v1612[7] = @"ClientDownloadGroupsAvailable";
  uint64_t v1596 = v2;
  v1597 = @"ClientNewerReplyEmptyDownload";
  v519 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1597,  &v1596,  1LL));
  v1613[7] = v519;
  v1612[8] = @"ClientDownloadAllAvailable";
  uint64_t v1594 = v2;
  v1595 = @"ClientInvalidStagingPhase";
  v518 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1595,  &v1594,  1LL));
  v1613[8] = v518;
  v1612[9] = @"ClientCancelCompletion";
  uint64_t v1592 = v2;
  v1593 = @"ClientCancelDesireForCompletion";
  v517 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1593,  &v1592,  1LL));
  v1613[9] = v517;
  v1612[10] = @"ClientPurgeAll";
  v1590[0] = v3;
  v1590[1] = v2;
  v1591[0] = @"CancelingRequestDownloaded";
  v1591[1] = @"ClientAcceptCancelActiveJob";
  v516 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1591,  v1590,  2LL));
  v1613[10] = v516;
  v1612[11] = @"ClientEraseAll";
  v1588[0] = v3;
  v1588[1] = v2;
  v1589[0] = @"ErasingRequestDownloaded";
  v1589[1] = @"ClientAcceptEraseActiveJob";
  v515 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1589,  v1588,  2LL));
  v1613[11] = v515;
  v1612[12] = @"LastStagedJustPromoted";
  uint64_t v1586 = v2;
  uint64_t v1587 = v4;
  v514 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1587,  &v1586,  1LL));
  v1613[12] = v514;
  v1612[13] = @"TimeoutDetermining";
  uint64_t v1584 = v2;
  uint64_t v1585 = v4;
  v513 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1585,  &v1584,  1LL));
  v1613[13] = v513;
  v1612[14] = @"DetermineHaveCandidates";
  v1582[0] = v3;
  v1582[1] = v2;
  v1583[0] = @"AllDeterminingAvailable";
  v1583[1] = @"NextCandidateBeginDetermine";
  v512 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1583,  v1582,  2LL));
  v1613[14] = v512;
  v1612[15] = @"DetermineNoCandidates";
  v1580[0] = v3;
  v1580[1] = v2;
  v1581[0] = @"NothingAvailable";
  v1581[1] = @"ReplyNoCandidatesPurgeAll";
  v511 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1581,  v1580,  2LL));
  v1613[15] = v511;
  v510 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1613,  v1612,  16LL));
  v1713[3] = v510;
  v1712[4] = @"RequiredDeterminingAvailable";
  v1578[0] = @"ControlForceUnstage";
  uint64_t v1576 = v2;
  v1577 = @"ControlUnstagedDecideCancelJob";
  v509 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1577,  &v1576,  1LL));
  v1579[0] = v509;
  v1578[1] = @"ControlEliminateAssetSelector";
  uint64_t v1574 = v2;
  v1575 = @"EliminateDeterminingDecideMatch";
  v508 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1575,  &v1574,  1LL));
  v1579[1] = v508;
  v1578[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1572 = v2;
  v1573 = @"SetEliminateDeterminingDecideMatch";
  v507 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1573,  &v1572,  1LL));
  v1579[2] = v507;
  v1578[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1570 = v2;
  v1571 = @"ClientNewerReplySameOrEmptyDetermine";
  v506 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1571,  &v1570,  1LL));
  v1579[3] = v506;
  v1578[4] = @"ClientDetermineAllAvailable";
  uint64_t v1568 = v2;
  v1569 = @"ClientFailWrongMode";
  v505 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1569,  &v1568,  1LL));
  v1579[4] = v505;
  v1578[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1566 = v2;
  v1567 = @"ClientNothingStaged";
  v504 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1567,  &v1566,  1LL));
  v1579[5] = v504;
  v1578[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1564 = v2;
  v1565 = @"ClientNewerReplyEmptyDownload";
  v503 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1565,  &v1564,  1LL));
  v1579[6] = v503;
  v1578[7] = @"ClientDownloadAllAvailable";
  uint64_t v1562 = v2;
  v1563 = @"ClientInvalidStagingPhase";
  v502 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1563,  &v1562,  1LL));
  v1579[7] = v502;
  v1578[8] = @"ClientCancelCompletion";
  uint64_t v1560 = v2;
  v1561 = @"ClientCancelDesireForCompletion";
  v501 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1561,  &v1560,  1LL));
  v1579[8] = v501;
  v1578[9] = @"ClientPurgeAll";
  uint64_t v1558 = v2;
  v1559 = @"ClientPurgeDecideStagingClient";
  v500 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1559,  &v1558,  1LL));
  v1579[9] = v500;
  v1578[10] = @"ClientEraseAll";
  v1556[0] = v3;
  v1556[1] = v2;
  v1557[0] = @"ErasingDetermine";
  v1557[1] = @"ClientAcceptEraseActiveJob";
  v499 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1557,  v1556,  2LL));
  v1579[10] = v499;
  v1578[11] = @"JobFailedToStart";
  uint64_t v1554 = v2;
  v1555 = @"FailRequiredDetermineBlocksOTA";
  v498 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1555,  &v1554,  1LL));
  v1579[11] = v498;
  v1578[12] = @"DetermineAvailableSuccess";
  uint64_t v1552 = v2;
  v1553 = @"AddToAvailableDecideMoreCandidates";
  v497 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1553,  &v1552,  1LL));
  v1579[12] = v497;
  v1578[13] = @"DetermineAvailableFailure";
  uint64_t v1550 = v2;
  v1551 = @"DecideRequiredErrorBlocksOTA";
  v496 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1551,  &v1550,  1LL));
  v1579[13] = v496;
  v1578[14] = @"LastStagedJustPromoted";
  uint64_t v1548 = v2;
  uint64_t v1549 = v4;
  v495 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1549,  &v1548,  1LL));
  v1579[14] = v495;
  v1578[15] = @"TimeoutDetermining";
  uint64_t v1546 = v2;
  v1547 = @"DecideTimerDeterminingValid";
  v494 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1547,  &v1546,  1LL));
  v1579[15] = v494;
  v1578[16] = @"RequiredErrorNonFatal";
  uint64_t v1544 = v2;
  v1545 = @"DecideMoreCandidates";
  v493 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1545,  &v1544,  1LL));
  v1579[16] = v493;
  v1578[17] = @"RequiredErrorBlocksOTA";
  uint64_t v1542 = v2;
  v1543 = @"FailRequiredDetermineBlocksOTA";
  v492 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1543,  &v1542,  1LL));
  v1579[17] = v492;
  v1578[18] = @"DetermineMoreCandidates";
  uint64_t v1540 = v2;
  v1541 = @"NextCandidateBeginDetermine";
  v491 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1541,  &v1540,  1LL));
  v1579[18] = v491;
  v1578[19] = @"DetermineDoneCandidates";
  uint64_t v1538 = v2;
  v1539 = @"DoneCandidatesRequiredDecideOptional";
  v490 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1539,  &v1538,  1LL));
  v1579[19] = v490;
  v1578[20] = @"DeterminedRequiredWithOptional";
  uint64_t v1536 = v3;
  v1537 = @"OptionalDeterminingAvailable";
  v489 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1537,  &v1536,  1LL));
  v1579[20] = v489;
  v1578[21] = @"DetermineNothingAvailable";
  v1534[0] = v3;
  v1534[1] = v2;
  v1535[0] = @"NothingAvailable";
  v1535[1] = @"ReplyNoCandidatesPurgeAll";
  v488 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1535,  v1534,  2LL));
  v1579[21] = v488;
  v1578[22] = @"DetermineNothingOtherAvailable";
  v1532[0] = v3;
  v1532[1] = v2;
  v1533[0] = @"GroupsAvailableContent";
  v1533[1] = @"ReplyNoCandidatesHaveOtherTarget";
  v487 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1533,  v1532,  2LL));
  v1579[22] = v487;
  v1578[23] = @"DetermineHaveAvailable";
  v1530[0] = v3;
  v1530[1] = v2;
  v1531[0] = @"GroupsAvailableContent";
  v1531[1] = @"ReplyHaveAvailable";
  v486 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1531,  v1530,  2LL));
  v1579[23] = v486;
  v1578[24] = @"ControlUnstagedCancelJob";
  uint64_t v1528 = v2;
  v1529 = @"RemoveAllReplyPurged";
  v485 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1529,  &v1528,  1LL));
  v1579[24] = v485;
  v1578[25] = @"DetermineTimedOut";
  uint64_t v1526 = v3;
  v1527 = @"RequiredDeterminingLast";
  v484 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1527,  &v1526,  1LL));
  v1579[25] = v484;
  v1578[26] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v1524 = v2;
  v1525 = @"RemoveAllReplyPurged";
  v483 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1525,  &v1524,  1LL));
  v1579[26] = v483;
  v1578[27] = @"PurgeAcceptedRemoveAll";
  uint64_t v1522 = v2;
  v1523 = @"CancelActiveJob";
  v482 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1523,  &v1522,  1LL));
  v1579[27] = v482;
  v481 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1579,  v1578,  28LL));
  v1713[4] = v481;
  v1712[5] = @"OptionalDeterminingAvailable";
  v1520[0] = @"ControlForceUnstage";
  uint64_t v1518 = v2;
  v1519 = @"ControlUnstagedDecideCancelJob";
  v480 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1519,  &v1518,  1LL));
  v1521[0] = v480;
  v1520[1] = @"ControlEliminateAssetSelector";
  uint64_t v1516 = v2;
  v1517 = @"EliminateDeterminingDecideMatch";
  v479 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1517,  &v1516,  1LL));
  v1521[1] = v479;
  v1520[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1514 = v2;
  v1515 = @"SetEliminateDeterminingDecideMatch";
  v478 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1515,  &v1514,  1LL));
  v1521[2] = v478;
  v1520[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1512 = v2;
  v1513 = @"ClientNewerReplySameOrEmptyDetermine";
  v477 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1513,  &v1512,  1LL));
  v1521[3] = v477;
  v1520[4] = @"ClientDetermineAllAvailable";
  uint64_t v1510 = v2;
  v1511 = @"ClientFailWrongMode";
  v476 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1511,  &v1510,  1LL));
  v1521[4] = v476;
  v1520[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1508 = v2;
  v1509 = @"ClientNothingStaged";
  v475 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1509,  &v1508,  1LL));
  v1521[5] = v475;
  v1520[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1506 = v2;
  v1507 = @"ClientNewerReplyEmptyDownload";
  v474 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1507,  &v1506,  1LL));
  v1521[6] = v474;
  v1520[7] = @"ClientDownloadAllAvailable";
  uint64_t v1504 = v2;
  v1505 = @"ClientInvalidStagingPhase";
  v473 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1505,  &v1504,  1LL));
  v1521[7] = v473;
  v1520[8] = @"ClientCancelCompletion";
  uint64_t v1502 = v2;
  v1503 = @"ClientCancelDesireForCompletion";
  v472 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1503,  &v1502,  1LL));
  v1521[8] = v472;
  v1520[9] = @"ClientPurgeAll";
  uint64_t v1500 = v2;
  v1501 = @"ClientPurgeDecideStagingClient";
  v471 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1501,  &v1500,  1LL));
  v1521[9] = v471;
  v1520[10] = @"ClientEraseAll";
  v1498[0] = v3;
  v1498[1] = v2;
  v1499[0] = @"ErasingDetermine";
  v1499[1] = @"ClientAcceptEraseActiveJob";
  v470 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1499,  v1498,  2LL));
  v1521[10] = v470;
  v1520[11] = @"JobFailedToStart";
  uint64_t v1496 = v2;
  v1497 = @"DecideMoreCandidates";
  v469 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1497,  &v1496,  1LL));
  v1521[11] = v469;
  v1520[12] = @"DetermineAvailableSuccess";
  uint64_t v1494 = v2;
  v1495 = @"AddToAvailableDecideMoreCandidates";
  v468 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1495,  &v1494,  1LL));
  v1521[12] = v468;
  v1520[13] = @"DetermineAvailableFailure";
  uint64_t v1492 = v2;
  v1493 = @"DecideMoreCandidates";
  v467 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1493,  &v1492,  1LL));
  v1521[13] = v467;
  v1520[14] = @"LastStagedJustPromoted";
  uint64_t v1490 = v2;
  uint64_t v1491 = v4;
  v466 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1491,  &v1490,  1LL));
  v1521[14] = v466;
  v1520[15] = @"TimeoutDetermining";
  uint64_t v1488 = v2;
  v1489 = @"DecideTimerDeterminingValid";
  v465 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1489,  &v1488,  1LL));
  v1521[15] = v465;
  v1520[16] = @"DetermineMoreCandidates";
  uint64_t v1486 = v2;
  v1487 = @"NextCandidateBeginDetermine";
  v464 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1487,  &v1486,  1LL));
  v1521[16] = v464;
  v1520[17] = @"DetermineDoneCandidates";
  uint64_t v1484 = v2;
  v1485 = @"DoneCandidatesDecideAnyAvailable";
  v463 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1485,  &v1484,  1LL));
  v1521[17] = v463;
  v1520[18] = @"DetermineNothingAvailable";
  v1482[0] = v3;
  v1482[1] = v2;
  v1483[0] = @"NothingAvailable";
  v1483[1] = @"ReplyNoCandidatesPurgeAll";
  v462 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1483,  v1482,  2LL));
  v1521[18] = v462;
  v1520[19] = @"DetermineNothingOtherAvailable";
  v1480[0] = v3;
  v1480[1] = v2;
  v1481[0] = @"GroupsAvailableContent";
  v1481[1] = @"ReplyNoCandidates";
  v461 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1481,  v1480,  2LL));
  v1521[19] = v461;
  v1520[20] = @"DetermineHaveAvailable";
  v1478[0] = v3;
  v1478[1] = v2;
  v1479[0] = @"GroupsAvailableContent";
  v1479[1] = @"ReplyHaveAvailable";
  v460 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1479,  v1478,  2LL));
  v1521[20] = v460;
  v1520[21] = @"ControlUnstagedCancelJob";
  v1476[0] = v3;
  v1476[1] = v2;
  v1477[0] = @"CancelingDetermine";
  v1477[1] = @"CancelActiveJob";
  v459 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1477,  v1476,  2LL));
  v1521[21] = v459;
  v1520[22] = @"DetermineTimedOut";
  uint64_t v1474 = v3;
  v1475 = @"OptionalDeterminingLast";
  v458 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1475,  &v1474,  1LL));
  v1521[22] = v458;
  v1520[23] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v1472 = v2;
  v1473 = @"RemoveAllReplyPurged";
  v457 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1473,  &v1472,  1LL));
  v1521[23] = v457;
  v1520[24] = @"PurgeAcceptedRemoveAll";
  v1470[0] = v3;
  v1470[1] = v2;
  v1471[0] = @"CancelingDetermine";
  v1471[1] = @"CancelActiveJob";
  v456 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1471,  v1470,  2LL));
  v1521[24] = v456;
  v455 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1521,  v1520,  25LL));
  v1713[5] = v455;
  v1712[6] = @"AllDeterminingAvailable";
  v1468[0] = @"ControlForceUnstage";
  uint64_t v1466 = v2;
  v1467 = @"ControlUnstagedDecideCancelJob";
  v454 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1467,  &v1466,  1LL));
  v1469[0] = v454;
  v1468[1] = @"ControlEliminateAssetSelector";
  uint64_t v1464 = v2;
  v1465 = @"EliminateDeterminingDecideMatch";
  v453 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1465,  &v1464,  1LL));
  v1469[1] = v453;
  v1468[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1462 = v2;
  v1463 = @"SetEliminateDeterminingDecideMatch";
  v452 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1463,  &v1462,  1LL));
  v1469[2] = v452;
  v1468[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1460 = v2;
  v1461 = @"ClientNewerReplyEmptyDetermine";
  v451 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1461,  &v1460,  1LL));
  v1469[3] = v451;
  v1468[4] = @"ClientDetermineAllAvailable";
  uint64_t v1458 = v2;
  v1459 = @"ClientContinueUsingLatestRequest";
  v450 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1459,  &v1458,  1LL));
  v1469[4] = v450;
  v1468[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1456 = v2;
  v1457 = @"ClientNothingStaged";
  v449 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1457,  &v1456,  1LL));
  v1469[5] = v449;
  v1468[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1454 = v2;
  v1455 = @"ClientNewerReplyEmptyDownload";
  v448 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1455,  &v1454,  1LL));
  v1469[6] = v448;
  v1468[7] = @"ClientDownloadAllAvailable";
  uint64_t v1452 = v2;
  v1453 = @"ClientInvalidStagingPhase";
  v447 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1453,  &v1452,  1LL));
  v1469[7] = v447;
  v1468[8] = @"ClientCancelCompletion";
  uint64_t v1450 = v2;
  v1451 = @"ClientCancelDesireForCompletion";
  v446 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1451,  &v1450,  1LL));
  v1469[8] = v446;
  v1468[9] = @"ClientPurgeAll";
  v1448[0] = v3;
  v1448[1] = v2;
  v1449[0] = @"CancelingDetermine";
  v1449[1] = @"ClientAcceptCancelActiveJob";
  v445 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1449,  v1448,  2LL));
  v1469[9] = v445;
  v1468[10] = @"ClientEraseAll";
  v1446[0] = v3;
  v1446[1] = v2;
  v1447[0] = @"ErasingDetermine";
  v1447[1] = @"ClientAcceptEraseActiveJob";
  v444 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1447,  v1446,  2LL));
  v1469[10] = v444;
  v1468[11] = @"JobFailedToStart";
  uint64_t v1444 = v2;
  v1445 = @"DecideMoreCandidates";
  v443 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1445,  &v1444,  1LL));
  v1469[11] = v443;
  v1468[12] = @"DetermineAvailableSuccess";
  uint64_t v1442 = v2;
  v1443 = @"AddToAvailableDecideMoreCandidates";
  v442 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1443,  &v1442,  1LL));
  v1469[12] = v442;
  v1468[13] = @"DetermineAvailableFailure";
  uint64_t v1440 = v2;
  v1441 = @"DecideMoreCandidates";
  v441 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1441,  &v1440,  1LL));
  v1469[13] = v441;
  v1468[14] = @"LastStagedJustPromoted";
  uint64_t v1438 = v2;
  uint64_t v1439 = v4;
  v440 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1439,  &v1438,  1LL));
  v1469[14] = v440;
  v1468[15] = @"TimeoutDetermining";
  uint64_t v1436 = v2;
  v1437 = @"DecideTimerDeterminingValid";
  v439 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1437,  &v1436,  1LL));
  v1469[15] = v439;
  v1468[16] = @"DetermineMoreCandidates";
  uint64_t v1434 = v2;
  v1435 = @"NextCandidateBeginDetermine";
  v438 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1435,  &v1434,  1LL));
  v1469[16] = v438;
  v1468[17] = @"DetermineDoneCandidates";
  uint64_t v1432 = v2;
  v1433 = @"DoneCandidatesDecideAnyAvailable";
  v437 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1433,  &v1432,  1LL));
  v1469[17] = v437;
  v1468[18] = @"DetermineNothingAvailable";
  v1430[0] = v3;
  v1430[1] = v2;
  v1431[0] = @"NothingAvailable";
  v1431[1] = @"ReplyNoCandidatesPurgeAll";
  v436 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1431,  v1430,  2LL));
  v1469[18] = v436;
  v1468[19] = @"DetermineHaveAvailable";
  v1428[0] = v3;
  v1428[1] = v2;
  v1429[0] = @"AllAvailableContent";
  v1429[1] = @"ReplyHaveAvailable";
  v435 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1429,  v1428,  2LL));
  v1469[19] = v435;
  v1468[20] = @"ControlUnstagedCancelJob";
  v1426[0] = v3;
  v1426[1] = v2;
  v1427[0] = @"CancelingDetermine";
  v1427[1] = @"CancelActiveJob";
  v434 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1427,  v1426,  2LL));
  v1469[20] = v434;
  v1468[21] = @"DetermineTimedOut";
  uint64_t v1424 = v3;
  v1425 = @"AllDeterminingLast";
  v433 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1425,  &v1424,  1LL));
  v1469[21] = v433;
  v432 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1469,  v1468,  22LL));
  v1713[6] = v432;
  v1712[7] = @"RequiredDeterminingLast";
  v1422[0] = @"ControlForceUnstage";
  uint64_t v1420 = v2;
  v1421 = @"ControlUnstagedDecideCancelJob";
  v431 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1421,  &v1420,  1LL));
  v1423[0] = v431;
  v1422[1] = @"ControlEliminateAssetSelector";
  uint64_t v1418 = v2;
  v1419 = @"EliminateDeterminingDecideMatch";
  v430 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1419,  &v1418,  1LL));
  v1423[1] = v430;
  v1422[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1416 = v2;
  v1417 = @"SetEliminateDeterminingDecideMatch";
  v429 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1417,  &v1416,  1LL));
  v1423[2] = v429;
  v1422[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1414 = v2;
  v1415 = @"ClientNewerReplySameOrEmptyDetermine";
  v428 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1415,  &v1414,  1LL));
  v1423[3] = v428;
  v1422[4] = @"ClientDetermineAllAvailable";
  uint64_t v1412 = v2;
  v1413 = @"ClientFailWrongMode";
  v427 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1413,  &v1412,  1LL));
  v1423[4] = v427;
  v1422[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1410 = v2;
  v1411 = @"ClientNothingStaged";
  v426 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1411,  &v1410,  1LL));
  v1423[5] = v426;
  v1422[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1408 = v2;
  v1409 = @"ClientNewerReplyEmptyDownload";
  v425 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1409,  &v1408,  1LL));
  v1423[6] = v425;
  v1422[7] = @"ClientDownloadAllAvailable";
  uint64_t v1406 = v2;
  v1407 = @"ClientInvalidStagingPhase";
  v424 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1407,  &v1406,  1LL));
  v1423[7] = v424;
  v1422[8] = @"ClientCancelCompletion";
  uint64_t v1404 = v2;
  v1405 = @"ClientCancelDesireForCompletion";
  v423 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1405,  &v1404,  1LL));
  v1423[8] = v423;
  v1422[9] = @"ClientPurgeAll";
  uint64_t v1402 = v2;
  v1403 = @"ClientPurgeDecideStagingClient";
  v422 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1403,  &v1402,  1LL));
  v1423[9] = v422;
  v1422[10] = @"ClientEraseAll";
  v1400[0] = v3;
  v1400[1] = v2;
  v1401[0] = @"ErasingDetermine";
  v1401[1] = @"ClientAcceptEraseActiveJob";
  v421 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1401,  v1400,  2LL));
  v1423[10] = v421;
  v1422[11] = @"JobFailedToStart";
  uint64_t v1398 = v2;
  v1399 = @"FailRequiredDetermineBlocksOTA";
  v420 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1399,  &v1398,  1LL));
  v1423[11] = v420;
  v1422[12] = @"DetermineAvailableSuccess";
  uint64_t v1396 = v2;
  v1397 = @"AddToAvailableDecideRequiredAvailable";
  v419 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1397,  &v1396,  1LL));
  v1423[12] = v419;
  v1422[13] = @"DetermineAvailableFailure";
  uint64_t v1394 = v2;
  v1395 = @"DecideRequiredErrorBlocksOTA";
  v418 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1395,  &v1394,  1LL));
  v1423[13] = v418;
  v1422[14] = @"LastStagedJustPromoted";
  uint64_t v1392 = v2;
  uint64_t v1393 = v4;
  v417 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1393,  &v1392,  1LL));
  v1423[14] = v417;
  v1422[15] = @"TimeoutDetermining";
  uint64_t v1390 = v2;
  uint64_t v1391 = v4;
  v416 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1391,  &v1390,  1LL));
  v1423[15] = v416;
  v1422[16] = @"RequiredErrorNonFatal";
  uint64_t v1388 = v2;
  v1389 = @"IgnoreFailureDecideRequiredAvailable";
  v415 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1389,  &v1388,  1LL));
  v1423[16] = v415;
  v1422[17] = @"RequiredErrorBlocksOTA";
  uint64_t v1386 = v2;
  v1387 = @"FailRequiredDetermineBlocksOTA";
  v414 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1387,  &v1386,  1LL));
  v1423[17] = v414;
  v1422[18] = @"DetermineDoneCandidates";
  uint64_t v1384 = v2;
  v1385 = @"DoneCandidatesDecideAnyAvailable";
  v413 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1385,  &v1384,  1LL));
  v1423[18] = v413;
  v1422[19] = @"DetermineNothingAvailable";
  v1382[0] = v3;
  v1382[1] = v2;
  v1383[0] = @"NothingAvailable";
  v1383[1] = @"ReplyNoCandidatesPurgeAll";
  v412 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1383,  v1382,  2LL));
  v1423[19] = v412;
  v1422[20] = @"DetermineNothingOtherAvailable";
  v1380[0] = v3;
  v1380[1] = v2;
  v1381[0] = @"GroupsAvailableContent";
  v1381[1] = @"ReplyNoCandidates";
  v411 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1381,  v1380,  2LL));
  v1423[20] = v411;
  v1422[21] = @"DetermineHaveRequiredMore";
  uint64_t v1378 = v3;
  v1379 = @"OptionalDeterminingAvailable";
  v410 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1379,  &v1378,  1LL));
  v1423[21] = v410;
  v1422[22] = @"DetermineHaveAvailable";
  v1376[0] = v3;
  v1376[1] = v2;
  v1377[0] = @"GroupsAvailableContent";
  v1377[1] = @"ReplyHaveAvailable";
  v409 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1377,  v1376,  2LL));
  v1423[22] = v409;
  v1422[23] = @"ControlUnstagedCancelJob";
  v1374[0] = v3;
  v1374[1] = v2;
  v1375[0] = @"CancelingDetermine";
  v1375[1] = @"CancelActiveJob";
  v408 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1375,  v1374,  2LL));
  v1423[23] = v408;
  v1422[24] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v1372 = v2;
  v1373 = @"RemoveAllReplyPurged";
  v407 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1373,  &v1372,  1LL));
  v1423[24] = v407;
  v1422[25] = @"PurgeAcceptedRemoveAll";
  v1370[0] = v3;
  v1370[1] = v2;
  v1371[0] = @"CancelingDetermine";
  v1371[1] = @"CancelActiveJob";
  v406 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1371,  v1370,  2LL));
  v1423[25] = v406;
  v405 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1423,  v1422,  26LL));
  v1713[7] = v405;
  v1712[8] = @"OptionalDeterminingLast";
  v1368[0] = @"ControlForceUnstage";
  uint64_t v1366 = v2;
  v1367 = @"ControlUnstagedDecideCancelJob";
  v404 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1367,  &v1366,  1LL));
  v1369[0] = v404;
  v1368[1] = @"ControlEliminateAssetSelector";
  uint64_t v1364 = v2;
  v1365 = @"EliminateDeterminingDecideMatch";
  v403 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1365,  &v1364,  1LL));
  v1369[1] = v403;
  v1368[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1362 = v2;
  v1363 = @"SetEliminateDeterminingDecideMatch";
  v402 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1363,  &v1362,  1LL));
  v1369[2] = v402;
  v1368[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1360 = v2;
  v1361 = @"ClientNewerReplySameOrEmptyDetermine";
  v401 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1361,  &v1360,  1LL));
  v1369[3] = v401;
  v1368[4] = @"ClientDetermineAllAvailable";
  uint64_t v1358 = v2;
  v1359 = @"ClientFailWrongMode";
  v400 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1359,  &v1358,  1LL));
  v1369[4] = v400;
  v1368[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1356 = v2;
  v1357 = @"ClientNothingStaged";
  v399 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1357,  &v1356,  1LL));
  v1369[5] = v399;
  v1368[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1354 = v2;
  v1355 = @"ClientNewerReplyEmptyDownload";
  v398 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1355,  &v1354,  1LL));
  v1369[6] = v398;
  v1368[7] = @"ClientDownloadAllAvailable";
  uint64_t v1352 = v2;
  v1353 = @"ClientInvalidStagingPhase";
  v397 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1353,  &v1352,  1LL));
  v1369[7] = v397;
  v1368[8] = @"ClientCancelCompletion";
  uint64_t v1350 = v2;
  v1351 = @"ClientCancelDesireForCompletion";
  v396 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1351,  &v1350,  1LL));
  v1369[8] = v396;
  v1368[9] = @"ClientPurgeAll";
  uint64_t v1348 = v2;
  v1349 = @"ClientPurgeDecideStagingClient";
  v395 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1349,  &v1348,  1LL));
  v1369[9] = v395;
  v1368[10] = @"ClientEraseAll";
  v1346[0] = v3;
  v1346[1] = v2;
  v1347[0] = @"ErasingDetermine";
  v1347[1] = @"ClientAcceptEraseActiveJob";
  v394 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1347,  v1346,  2LL));
  v1369[10] = v394;
  v1368[11] = @"JobFailedToStart";
  uint64_t v1344 = v2;
  v1345 = @"DoneCandidatesDecideAnyAvailable";
  v393 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1345,  &v1344,  1LL));
  v1369[11] = v393;
  v1368[12] = @"DetermineAvailableSuccess";
  uint64_t v1342 = v2;
  v1343 = @"AddToAvailableDecideAnyAvailable";
  v392 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1343,  &v1342,  1LL));
  v1369[12] = v392;
  v1368[13] = @"DetermineAvailableFailure";
  uint64_t v1340 = v2;
  v1341 = @"DoneCandidatesDecideAnyAvailable";
  v391 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1341,  &v1340,  1LL));
  v1369[13] = v391;
  v1368[14] = @"LastStagedJustPromoted";
  uint64_t v1338 = v2;
  uint64_t v1339 = v4;
  v390 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1339,  &v1338,  1LL));
  v1369[14] = v390;
  v1368[15] = @"TimeoutDetermining";
  uint64_t v1336 = v2;
  uint64_t v1337 = v4;
  v389 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1337,  &v1336,  1LL));
  v1369[15] = v389;
  v1368[16] = @"DetermineNothingAvailable";
  v1334[0] = v3;
  v1334[1] = v2;
  v1335[0] = @"NothingAvailable";
  v1335[1] = @"ReplyNoCandidatesPurgeAll";
  v388 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1335,  v1334,  2LL));
  v1369[16] = v388;
  v1368[17] = @"DetermineNothingOtherAvailable";
  v1332[0] = v3;
  v1332[1] = v2;
  v1333[0] = @"GroupsAvailableContent";
  v1333[1] = @"ReplyNoCandidates";
  v387 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1333,  v1332,  2LL));
  v1369[17] = v387;
  v1368[18] = @"DetermineHaveAvailable";
  v1330[0] = v3;
  v1330[1] = v2;
  v1331[0] = @"GroupsAvailableContent";
  v1331[1] = @"ReplyHaveAvailable";
  v386 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1331,  v1330,  2LL));
  v1369[18] = v386;
  v1368[19] = @"ControlUnstagedCancelJob";
  v1328[0] = v3;
  v1328[1] = v2;
  v1329[0] = @"CancelingDetermine";
  v1329[1] = @"CancelActiveJob";
  v385 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1329,  v1328,  2LL));
  v1369[19] = v385;
  v1368[20] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v1326 = v2;
  v1327 = @"RemoveAllReplyPurged";
  v384 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1327,  &v1326,  1LL));
  v1369[20] = v384;
  v1368[21] = @"PurgeAcceptedRemoveAll";
  v1324[0] = v3;
  v1324[1] = v2;
  v1325[0] = @"CancelingDetermine";
  v1325[1] = @"CancelActiveJob";
  v383 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1325,  v1324,  2LL));
  v1369[21] = v383;
  v382 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1369,  v1368,  22LL));
  v1713[8] = v382;
  v1712[9] = @"AllDeterminingLast";
  v1322[0] = @"ControlForceUnstage";
  uint64_t v1320 = v2;
  v1321 = @"ControlUnstagedDecideCancelJob";
  v381 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1321,  &v1320,  1LL));
  v1323[0] = v381;
  v1322[1] = @"ControlEliminateAssetSelector";
  uint64_t v1318 = v2;
  v1319 = @"EliminateDeterminingDecideMatch";
  v380 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1319,  &v1318,  1LL));
  v1323[1] = v380;
  v1322[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1316 = v2;
  v1317 = @"SetEliminateDeterminingDecideMatch";
  v379 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1317,  &v1316,  1LL));
  v1323[2] = v379;
  v1322[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1314 = v2;
  v1315 = @"ClientNewerReplyEmptyDetermine";
  v378 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1315,  &v1314,  1LL));
  v1323[3] = v378;
  v1322[4] = @"ClientDetermineAllAvailable";
  uint64_t v1312 = v2;
  v1313 = @"ClientContinueRestartingMaxDetermining";
  v377 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1313,  &v1312,  1LL));
  v1323[4] = v377;
  v1322[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1310 = v2;
  v1311 = @"ClientNothingStaged";
  v376 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1311,  &v1310,  1LL));
  v1323[5] = v376;
  v1322[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1308 = v2;
  v1309 = @"ClientNewerReplyEmptyDownload";
  v375 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1309,  &v1308,  1LL));
  v1323[6] = v375;
  v1322[7] = @"ClientDownloadAllAvailable";
  uint64_t v1306 = v2;
  v1307 = @"ClientInvalidStagingPhase";
  v374 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1307,  &v1306,  1LL));
  v1323[7] = v374;
  v1322[8] = @"ClientCancelCompletion";
  uint64_t v1304 = v2;
  v1305 = @"ClientCancelDesireForCompletion";
  v373 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1305,  &v1304,  1LL));
  v1323[8] = v373;
  v1322[9] = @"ClientPurgeAll";
  v1302[0] = v3;
  v1302[1] = v2;
  v1303[0] = @"CancelingDetermine";
  v1303[1] = @"ClientAcceptCancelActiveJob";
  v372 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1303,  v1302,  2LL));
  v1323[9] = v372;
  v1322[10] = @"ClientEraseAll";
  v1300[0] = v3;
  v1300[1] = v2;
  v1301[0] = @"ErasingDetermine";
  v1301[1] = @"ClientAcceptEraseActiveJob";
  v371 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1301,  v1300,  2LL));
  v1323[10] = v371;
  v1322[11] = @"JobFailedToStart";
  uint64_t v1298 = v2;
  v1299 = @"DoneCandidatesDecideAnyAvailable";
  v370 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1299,  &v1298,  1LL));
  v1323[11] = v370;
  v1322[12] = @"DetermineAvailableSuccess";
  uint64_t v1296 = v2;
  v1297 = @"AddToAvailableDecideAnyAvailable";
  v369 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1297,  &v1296,  1LL));
  v1323[12] = v369;
  v1322[13] = @"DetermineAvailableFailure";
  uint64_t v1294 = v2;
  v1295 = @"DoneCandidatesDecideAnyAvailable";
  v368 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1295,  &v1294,  1LL));
  v1323[13] = v368;
  v1322[14] = @"LastStagedJustPromoted";
  uint64_t v1292 = v2;
  uint64_t v1293 = v4;
  v367 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1293,  &v1292,  1LL));
  v1323[14] = v367;
  v1322[15] = @"TimeoutDetermining";
  uint64_t v1290 = v2;
  uint64_t v1291 = v4;
  v366 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1291,  &v1290,  1LL));
  v1323[15] = v366;
  v1322[16] = @"DetermineNothingAvailable";
  v1288[0] = v3;
  v1288[1] = v2;
  v1289[0] = @"NothingAvailable";
  v1289[1] = @"ReplyNoCandidatesPurgeAll";
  v365 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1289,  v1288,  2LL));
  v1323[16] = v365;
  v1322[17] = @"DetermineHaveAvailable";
  v1286[0] = v3;
  v1286[1] = v2;
  v1287[0] = @"AllAvailableContent";
  v1287[1] = @"ReplyHaveAvailable";
  v364 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1287,  v1286,  2LL));
  v1323[17] = v364;
  v1322[18] = @"ControlUnstagedCancelJob";
  v1284[0] = v3;
  v1284[1] = v2;
  v1285[0] = @"CancelingDetermine";
  v1285[1] = @"CancelActiveJob";
  v363 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1285,  v1284,  2LL));
  v1323[18] = v363;
  v362 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1323,  v1322,  19LL));
  v1713[9] = v362;
  v1712[10] = @"GroupsAvailableContent";
  v1282[0] = @"ControlForceUnstage";
  uint64_t v1280 = v2;
  v1281 = @"RemoveAllReplyPurged";
  v361 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1281,  &v1280,  1LL));
  v1283[0] = v361;
  v1282[1] = @"ControlEliminateAssetSelector";
  uint64_t v1278 = v2;
  v1279 = @"EliminateAvailableDecideEmpty";
  v360 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1279,  &v1278,  1LL));
  v1283[1] = v360;
  v1282[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1276 = v2;
  v1277 = @"SetEliminateAvailableDecideEmpty";
  v359 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1277,  &v1276,  1LL));
  v1283[2] = v359;
  v1282[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1274 = v2;
  v1275 = @"ClientCheckGroupsDecideAlreadyDetermined";
  v358 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1275,  &v1274,  1LL));
  v1283[3] = v358;
  v1282[4] = @"ClientDetermineAllAvailable";
  uint64_t v1272 = v2;
  v1273 = @"ClientFailWrongMode";
  v357 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1273,  &v1272,  1LL));
  v1283[4] = v357;
  v1282[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1270 = v2;
  v1271 = @"ClientNothingStaged";
  v356 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1271,  &v1270,  1LL));
  v1283[5] = v356;
  v1282[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1268 = v2;
  v1269 = @"ClientDecideGroupTargetAvailable";
  v355 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1269,  &v1268,  1LL));
  v1283[6] = v355;
  v1282[7] = @"ClientDownloadAllAvailable";
  uint64_t v1266 = v2;
  v1267 = @"ClientInvalidStagingPhase";
  v354 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1267,  &v1266,  1LL));
  v1283[7] = v354;
  v1282[8] = @"ClientCancelCompletion";
  uint64_t v1264 = v2;
  v1265 = @"ClientCancelDesireForCompletion";
  v353 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1265,  &v1264,  1LL));
  v1283[8] = v353;
  v1282[9] = @"ClientPurgeAll";
  uint64_t v1262 = v2;
  v1263 = @"ClientPurgeDecideStagingClient";
  v352 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1263,  &v1262,  1LL));
  v1283[9] = v352;
  v1282[10] = @"ClientEraseAll";
  uint64_t v1260 = v2;
  v1261 = @"ClientEraseDecideStagingClient";
  v351 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1261,  &v1260,  1LL));
  v1283[10] = v351;
  v1282[11] = @"LastStagedJustPromoted";
  uint64_t v1258 = v2;
  uint64_t v1259 = v4;
  v350 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1259,  &v1258,  1LL));
  v1283[11] = v350;
  v1282[12] = @"TimeoutDetermining";
  uint64_t v1256 = v2;
  uint64_t v1257 = v4;
  v349 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1257,  &v1256,  1LL));
  v1283[12] = v349;
  v1282[13] = @"ModeGroupsDetermineStart";
  v1254[0] = v3;
  v1254[1] = v2;
  v1255[0] = @"GroupsRequestingDownloaded";
  v1255[1] = @"RequestAlreadyDownloaded";
  v348 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1255,  v1254,  2LL));
  v1283[13] = v348;
  v1282[14] = @"ModeAllDetermineStart";
  v1252[0] = v3;
  v1252[1] = v2;
  v1253[0] = @"AllRequestingDownloaded";
  v1253[1] = @"RequestAlreadyDownloaded";
  v347 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1253,  v1252,  2LL));
  v1283[14] = v347;
  v1282[15] = @"GroupTargetAvailableRequired";
  uint64_t v1250 = v3;
  v1251 = @"RequiredDownloading";
  v346 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1251,  &v1250,  1LL));
  v1283[15] = v346;
  v1282[16] = @"GroupTargetAvailableOptional";
  uint64_t v1248 = v3;
  v1249 = @"OptionalDownloading";
  v345 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1249,  &v1248,  1LL));
  v1283[16] = v345;
  v1282[17] = @"GroupTargetNotAvailable";
  uint64_t v1246 = v2;
  v1247 = @"ReplyTargetNotAvailable";
  v344 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1247,  &v1246,  1LL));
  v1283[17] = v344;
  v1282[18] = @"EliminateNowEmpty";
  uint64_t v1244 = v2;
  uint64_t v1245 = v4;
  v343 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1245,  &v1244,  1LL));
  v1283[18] = v343;
  v1282[19] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v1242 = v2;
  v1243 = @"RemoveAllReplyPurged";
  v342 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1243,  &v1242,  1LL));
  v1283[19] = v342;
  v1282[20] = @"PurgeAcceptedRemoveAll";
  v1240[0] = v3;
  v1240[1] = v2;
  v1241[0] = @"NothingAvailable";
  v1241[1] = @"RemoveAllReplyErased";
  v341 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1241,  v1240,  2LL));
  v1283[20] = v341;
  v1282[21] = @"EraseAcceptedRemoveAll";
  v1238[0] = v3;
  v1238[1] = v2;
  v1239[0] = @"NothingAvailable";
  v1239[1] = @"RemoveAllReplyErased";
  v340 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1239,  v1238,  2LL));
  v1283[21] = v340;
  v339 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1283,  v1282,  22LL));
  v1713[10] = v339;
  v1712[11] = @"AllAvailableContent";
  v1236[0] = @"ControlForceUnstage";
  v1234[0] = v3;
  v1234[1] = v2;
  v1235[0] = @"NothingAvailable";
  v1235[1] = @"RemoveAllReplyPurged";
  v338 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1235,  v1234,  2LL));
  v1237[0] = v338;
  v1236[1] = @"ControlEliminateAssetSelector";
  uint64_t v1232 = v2;
  v1233 = @"EliminateAvailableDecideEmpty";
  v337 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1233,  &v1232,  1LL));
  v1237[1] = v337;
  v1236[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1230 = v2;
  v1231 = @"SetEliminateAvailableDecideEmpty";
  v336 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1231,  &v1230,  1LL));
  v1237[2] = v336;
  v1236[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1228 = v2;
  v1229 = @"ClientNewerReplyEmptyDetermine";
  v335 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1229,  &v1228,  1LL));
  v1237[3] = v335;
  v1236[4] = @"ClientDetermineAllAvailable";
  v1226[0] = v3;
  v1226[1] = v2;
  v1227[0] = @"AllRequestingDownloaded";
  v1227[1] = @"ClientRequestAlreadyDownloaded";
  v334 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1227,  v1226,  2LL));
  v1237[4] = v334;
  v1236[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1224 = v2;
  v1225 = @"ClientNothingStaged";
  v333 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1225,  &v1224,  1LL));
  v1237[5] = v333;
  v1236[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1222 = v2;
  v1223 = @"ClientNewerReplyEmptyDownload";
  v332 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1223,  &v1222,  1LL));
  v1237[6] = v332;
  v1236[7] = @"ClientDownloadAllAvailable";
  v1220[0] = v3;
  v1220[1] = v2;
  v1221[0] = @"AllDownloading";
  v1221[1] = @"ClientAcceptNextAvailableBeginDownload";
  v331 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1221,  v1220,  2LL));
  v1237[7] = v331;
  v1236[8] = @"ClientCancelCompletion";
  uint64_t v1218 = v2;
  v1219 = @"ClientCancelDesireForCompletion";
  v330 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1219,  &v1218,  1LL));
  v1237[8] = v330;
  v1236[9] = @"ClientPurgeAll";
  v1216[0] = v3;
  v1216[1] = v2;
  v1217[0] = @"NothingAvailable";
  v1217[1] = @"ClientAcceptRemoveAllReplyPurged";
  v329 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1217,  v1216,  2LL));
  v1237[9] = v329;
  v1236[10] = @"ClientEraseAll";
  v1214[0] = v3;
  v1214[1] = v2;
  v1215[0] = @"NothingAvailable";
  v1215[1] = @"ClientAcceptRemoveAllReplyErased";
  v328 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1215,  v1214,  2LL));
  v1237[10] = v328;
  v1236[11] = @"LastStagedJustPromoted";
  uint64_t v1212 = v2;
  uint64_t v1213 = v4;
  v327 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1213,  &v1212,  1LL));
  v1237[11] = v327;
  v1236[12] = @"TimeoutDetermining";
  uint64_t v1210 = v2;
  uint64_t v1211 = v4;
  v326 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1211,  &v1210,  1LL));
  v1237[12] = v326;
  v1236[13] = @"EliminateNowEmpty";
  uint64_t v1208 = v3;
  v1209 = @"NothingAvailable";
  v325 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1209,  &v1208,  1LL));
  v1237[13] = v325;
  v324 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1237,  v1236,  14LL));
  v1713[11] = v324;
  v1712[12] = @"RequiredDownloading";
  v1206[0] = @"ControlForceUnstage";
  uint64_t v1204 = v2;
  v1205 = @"ControlUnstagedDecideCancelJob";
  v323 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1205,  &v1204,  1LL));
  v1207[0] = v323;
  v1206[1] = @"ControlEliminateAssetSelector";
  uint64_t v1202 = v2;
  v1203 = @"EliminateDecideMatch";
  v322 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1203,  &v1202,  1LL));
  v1207[1] = v322;
  v1206[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1200 = v2;
  v1201 = @"SetEliminateDecideMatch";
  v321 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1201,  &v1200,  1LL));
  v1207[2] = v321;
  v1206[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1198 = v2;
  v1199 = @"ClientCheckGroupsReplyAlreadyDetermined";
  v320 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1199,  &v1198,  1LL));
  v1207[3] = v320;
  v1206[4] = @"ClientDetermineAllAvailable";
  uint64_t v1196 = v2;
  v1197 = @"ClientInvalidStagingPhase";
  v319 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1197,  &v1196,  1LL));
  v1207[4] = v319;
  v1206[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1194 = v2;
  v1195 = @"ClientNothingStaged";
  v318 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1195,  &v1194,  1LL));
  v1207[5] = v318;
  v1206[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1192 = v2;
  v1193 = @"ClientNewerReplySameOrEmptyDownload";
  v317 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1193,  &v1192,  1LL));
  v1207[6] = v317;
  v1206[7] = @"ClientDownloadAllAvailable";
  uint64_t v1190 = v2;
  v1191 = @"ClientFailWrongMode";
  v316 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1191,  &v1190,  1LL));
  v1207[7] = v316;
  v1206[8] = @"ClientCancelCompletion";
  uint64_t v1188 = v2;
  v1189 = @"ClientCancelDesireForCompletion";
  v315 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1189,  &v1188,  1LL));
  v1207[8] = v315;
  v1206[9] = @"ClientPurgeAll";
  uint64_t v1186 = v2;
  v1187 = @"ClientPurgeDecideStagingClient";
  v314 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1187,  &v1186,  1LL));
  v1207[9] = v314;
  v1206[10] = @"ClientEraseAll";
  uint64_t v1184 = v2;
  v1185 = @"ClientEraseDecideStagingClient";
  v313 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1185,  &v1184,  1LL));
  v1207[10] = v313;
  v1206[11] = @"JobFailedToStart";
  v1182[0] = v3;
  v1182[1] = v2;
  v1183[0] = @"GroupsAvailableContent";
  v1183[1] = @"ReplyFailRequiredDownload";
  v312 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1183,  v1182,  2LL));
  v1207[11] = v312;
  v1206[12] = @"DownloadForStagingProgress";
  uint64_t v1180 = v2;
  v1181 = @"ReportStagingProgressToClient";
  v311 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1181,  &v1180,  1LL));
  v1207[12] = v311;
  v1206[13] = @"DownloadForStagingSuccess";
  uint64_t v1178 = v2;
  v1179 = @"AddToStaged";
  v310 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1179,  &v1178,  1LL));
  v1207[13] = v310;
  v1206[14] = @"DownloadForStagingFailure";
  uint64_t v1176 = v2;
  v1177 = @"DecideRequiredErrorBlocksOTA";
  v309 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1177,  &v1176,  1LL));
  v1207[14] = v309;
  v1206[15] = @"LastStagedJustPromoted";
  uint64_t v1174 = v2;
  uint64_t v1175 = v4;
  v308 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1175,  &v1174,  1LL));
  v1207[15] = v308;
  v1206[16] = @"TimeoutDetermining";
  uint64_t v1172 = v2;
  uint64_t v1173 = v4;
  v307 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1173,  &v1172,  1LL));
  v1207[16] = v307;
  v1206[17] = @"RequiredErrorNonFatal";
  uint64_t v1170 = v2;
  v1171 = @"DecideMoreRequiredAvailable";
  v306 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1171,  &v1170,  1LL));
  v1207[17] = v306;
  v1206[18] = @"RequiredErrorBlocksOTA";
  v1168[0] = v3;
  v1168[1] = v2;
  v1169[0] = @"GroupsAvailableContent";
  v1169[1] = @"ReplyFailRequiredDownload";
  v305 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1169,  v1168,  2LL));
  v1207[18] = v305;
  v1206[19] = @"DownloadMoreAvailable";
  uint64_t v1166 = v2;
  v1167 = @"NextAwaitingBeginDownload";
  v304 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1167,  &v1166,  1LL));
  v1207[19] = v304;
  v1206[20] = @"DecideMoreAvailable";
  uint64_t v1164 = v2;
  v1165 = @"DecideMoreRequiredAvailable";
  v303 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1165,  &v1164,  1LL));
  v1207[20] = v303;
  v1206[21] = @"DownloadOptionalAvailable";
  v1162[0] = v3;
  v1162[1] = v2;
  v1163[0] = @"OptionalDownloading";
  v1163[1] = @"NextAwaitingBeginDownload";
  v302 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1163,  v1162,  2LL));
  v1207[21] = v302;
  v1206[22] = @"DownloadDoneAvailable";
  uint64_t v1160 = v2;
  v1161 = @"DoneAvailableDecideAnyStaged";
  v301 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1161,  &v1160,  1LL));
  v1207[22] = v301;
  v1206[23] = @"DownloadNothingStaged";
  v1158[0] = v3;
  v1158[1] = v2;
  v1159[0] = @"GroupsAvailableContent";
  v1159[1] = @"ReplyNothingStaged";
  v300 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1159,  v1158,  2LL));
  v1207[23] = v300;
  v1206[24] = @"DownloadNothingStagedEmpty";
  v1156[0] = v3;
  v1156[1] = v2;
  v1157[0] = @"NothingAvailable";
  v1157[1] = @"ReplyNothingStagedPurgeAll";
  v299 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1157,  v1156,  2LL));
  v1207[24] = v299;
  v1206[25] = @"DownloadHaveStaged";
  v1154[0] = v3;
  v1154[1] = v2;
  v1155[0] = @"StagedContent";
  v1155[1] = @"ReplyHaveStaged";
  v298 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1155,  v1154,  2LL));
  v1207[25] = v298;
  v1206[26] = @"ControlUnstagedCancelJob";
  v1152[0] = v3;
  v1152[1] = v2;
  v1153[0] = @"CancelingDownload";
  v1153[1] = @"CancelActiveJob";
  v297 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1153,  v1152,  2LL));
  v1207[26] = v297;
  v1206[27] = @"EliminateCurrentJob";
  v1150[0] = v3;
  v1150[1] = v2;
  v1151[0] = @"RequiredDownloadEliminating";
  v1151[1] = @"EliminateCancelActiveJob";
  v296 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1151,  v1150,  2LL));
  v1207[27] = v296;
  v1206[28] = @"PurgeAcceptedRemoveDownloaded";
  v1148[0] = v3;
  v1148[1] = v2;
  v1149[0] = @"CancelingDownload";
  v1149[1] = @"CancelActiveJob";
  v295 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1149,  v1148,  2LL));
  v1207[28] = v295;
  v1206[29] = @"PurgeAcceptedRemoveAll";
  v1146[0] = v3;
  v1146[1] = v2;
  v1147[0] = @"CancelingDownload";
  v1147[1] = @"CancelActiveJob";
  v294 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1147,  v1146,  2LL));
  v1207[29] = v294;
  v1206[30] = @"EraseAcceptedRemoveAll";
  v1144[0] = v3;
  v1144[1] = v2;
  v1145[0] = @"ErasingDownload";
  v1145[1] = @"CancelActiveJob";
  v293 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1145,  v1144,  2LL));
  v1207[30] = v293;
  v292 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1207,  v1206,  31LL));
  v1713[12] = v292;
  v1712[13] = @"OptionalDownloading";
  v1142[0] = @"ControlForceUnstage";
  uint64_t v1140 = v2;
  v1141 = @"ControlUnstagedDecideCancelJob";
  v291 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1141,  &v1140,  1LL));
  v1143[0] = v291;
  v1142[1] = @"ControlEliminateAssetSelector";
  uint64_t v1138 = v2;
  v1139 = @"EliminateDecideMatch";
  v290 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1139,  &v1138,  1LL));
  v1143[1] = v290;
  v1142[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1136 = v2;
  v1137 = @"SetEliminateDecideMatch";
  v289 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1137,  &v1136,  1LL));
  v1143[2] = v289;
  v1142[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1134 = v2;
  v1135 = @"ClientCheckGroupsReplyAlreadyDetermined";
  v288 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1135,  &v1134,  1LL));
  v1143[3] = v288;
  v1142[4] = @"ClientDetermineAllAvailable";
  uint64_t v1132 = v2;
  v1133 = @"ClientInvalidStagingPhase";
  v287 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1133,  &v1132,  1LL));
  v1143[4] = v287;
  v1142[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1130 = v2;
  v1131 = @"ClientNothingStaged";
  v286 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1131,  &v1130,  1LL));
  v1143[5] = v286;
  v1142[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1128 = v2;
  v1129 = @"ClientNewerReplySameOrEmptyDownload";
  v285 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1129,  &v1128,  1LL));
  v1143[6] = v285;
  v1142[7] = @"ClientDownloadAllAvailable";
  uint64_t v1126 = v2;
  v1127 = @"ClientFailWrongMode";
  v284 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1127,  &v1126,  1LL));
  v1143[7] = v284;
  v1142[8] = @"ClientCancelCompletion";
  uint64_t v1124 = v2;
  v1125 = @"ClientCancelDesireForCompletion";
  v283 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1125,  &v1124,  1LL));
  v1143[8] = v283;
  v1142[9] = @"ClientPurgeAll";
  uint64_t v1122 = v2;
  v1123 = @"ClientPurgeDecideStagingClient";
  v282 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1123,  &v1122,  1LL));
  v1143[9] = v282;
  v1142[10] = @"ClientEraseAll";
  uint64_t v1120 = v2;
  v1121 = @"ClientEraseDecideStagingClient";
  v281 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1121,  &v1120,  1LL));
  v1143[10] = v281;
  v1142[11] = @"JobFailedToStart";
  uint64_t v1118 = v2;
  v1119 = @"DecideMoreOptionalAvailable";
  v280 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1119,  &v1118,  1LL));
  v1143[11] = v280;
  v1142[12] = @"DownloadForStagingProgress";
  uint64_t v1116 = v2;
  v1117 = @"ReportStagingProgressToClient";
  v279 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1117,  &v1116,  1LL));
  v1143[12] = v279;
  v1142[13] = @"DownloadForStagingSuccess";
  uint64_t v1114 = v2;
  v1115 = @"AddToStaged";
  v278 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1115,  &v1114,  1LL));
  v1143[13] = v278;
  v1142[14] = @"DownloadForStagingFailure";
  uint64_t v1112 = v2;
  v1113 = @"DecideMoreOptionalAvailable";
  v277 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1113,  &v1112,  1LL));
  v1143[14] = v277;
  v1142[15] = @"LastStagedJustPromoted";
  uint64_t v1110 = v2;
  uint64_t v1111 = v4;
  v276 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1111,  &v1110,  1LL));
  v1143[15] = v276;
  v1142[16] = @"TimeoutDetermining";
  uint64_t v1108 = v2;
  uint64_t v1109 = v4;
  v275 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1109,  &v1108,  1LL));
  v1143[16] = v275;
  v1142[17] = @"DownloadMoreAvailable";
  uint64_t v1106 = v2;
  v1107 = @"NextAwaitingBeginDownload";
  v274 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1107,  &v1106,  1LL));
  v1143[17] = v274;
  v1142[18] = @"DecideMoreAvailable";
  uint64_t v1104 = v2;
  v1105 = @"DecideMoreOptionalAvailable";
  v273 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1105,  &v1104,  1LL));
  v1143[18] = v273;
  v1142[19] = @"DownloadDoneAvailable";
  uint64_t v1102 = v2;
  v1103 = @"DoneAvailableDecideAnyStaged";
  v272 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1103,  &v1102,  1LL));
  v1143[19] = v272;
  v1142[20] = @"DownloadNothingStaged";
  v1100[0] = v3;
  v1100[1] = v2;
  v1101[0] = @"GroupsAvailableContent";
  v1101[1] = @"ReplyNothingStaged";
  v271 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1101,  v1100,  2LL));
  v1143[20] = v271;
  v1142[21] = @"DownloadNothingStagedEmpty";
  v1098[0] = v3;
  v1098[1] = v2;
  v1099[0] = @"NothingAvailable";
  v1099[1] = @"ReplyNothingStagedPurgeAll";
  v270 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1099,  v1098,  2LL));
  v1143[21] = v270;
  v1142[22] = @"DownloadHaveStaged";
  v1096[0] = v3;
  v1096[1] = v2;
  v1097[0] = @"StagedContent";
  v1097[1] = @"ReplyHaveStaged";
  v269 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1097,  v1096,  2LL));
  v1143[22] = v269;
  v1142[23] = @"ControlUnstagedCancelJob";
  v1094[0] = v3;
  v1094[1] = v2;
  v1095[0] = @"CancelingDownload";
  v1095[1] = @"CancelActiveJob";
  v268 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1095,  v1094,  2LL));
  v1143[23] = v268;
  v1142[24] = @"EliminateCurrentJob";
  v1092[0] = v3;
  v1092[1] = v2;
  v1093[0] = @"OptionalDownloadEliminating";
  v1093[1] = @"EliminateCancelActiveJob";
  v267 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1093,  v1092,  2LL));
  v1143[24] = v267;
  v1142[25] = @"PurgeAcceptedRemoveDownloaded";
  v1090[0] = v3;
  v1090[1] = v2;
  v1091[0] = @"CancelingDownload";
  v1091[1] = @"CancelActiveJob";
  v266 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1091,  v1090,  2LL));
  v1143[25] = v266;
  v1142[26] = @"PurgeAcceptedRemoveAll";
  v1088[0] = v3;
  v1088[1] = v2;
  v1089[0] = @"CancelingDownload";
  v1089[1] = @"CancelActiveJob";
  v265 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1089,  v1088,  2LL));
  v1143[26] = v265;
  v1142[27] = @"EraseAcceptedRemoveAll";
  v1086[0] = v3;
  v1086[1] = v2;
  v1087[0] = @"ErasingDownload";
  v1087[1] = @"CancelActiveJob";
  v264 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1087,  v1086,  2LL));
  v1143[27] = v264;
  v263 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1143,  v1142,  28LL));
  v1713[13] = v263;
  v1712[14] = @"AllDownloading";
  v1084[0] = @"ControlForceUnstage";
  uint64_t v1082 = v2;
  v1083 = @"ControlUnstagedDecideCancelJob";
  v262 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1083,  &v1082,  1LL));
  v1085[0] = v262;
  v1084[1] = @"ControlEliminateAssetSelector";
  uint64_t v1080 = v2;
  v1081 = @"EliminateDecideMatch";
  v261 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1081,  &v1080,  1LL));
  v1085[1] = v261;
  v1084[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1078 = v2;
  v1079 = @"SetEliminateDecideMatch";
  v260 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1079,  &v1078,  1LL));
  v1085[2] = v260;
  v1084[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1076 = v2;
  v1077 = @"ClientNewerReplyEmptyDetermine";
  v259 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1077,  &v1076,  1LL));
  v1085[3] = v259;
  v1084[4] = @"ClientDetermineAllAvailable";
  uint64_t v1074 = v2;
  v1075 = @"ClientInvalidStagingPhase";
  v258 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1075,  &v1074,  1LL));
  v1085[4] = v258;
  v1084[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1072 = v2;
  v1073 = @"ClientNothingStaged";
  v257 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1073,  &v1072,  1LL));
  v1085[5] = v257;
  v1084[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1070 = v2;
  v1071 = @"ClientNewerReplySameOrEmptyDownload";
  v256 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1071,  &v1070,  1LL));
  v1085[6] = v256;
  v1084[7] = @"ClientDownloadAllAvailable";
  uint64_t v1068 = v2;
  v1069 = @"ClientFailWrongMode";
  v255 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1069,  &v1068,  1LL));
  v1085[7] = v255;
  v1084[8] = @"ClientCancelCompletion";
  uint64_t v1066 = v2;
  v1067 = @"ClientCancelDesireForCompletion";
  v254 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1067,  &v1066,  1LL));
  v1085[8] = v254;
  v1084[9] = @"ClientPurgeAll";
  v1064[0] = v3;
  v1064[1] = v2;
  v1065[0] = @"CancelingDownload";
  v1065[1] = @"ClientAcceptCancelActiveJob";
  v253 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1065,  v1064,  2LL));
  v1085[9] = v253;
  v1084[10] = @"ClientEraseAll";
  v1062[0] = v3;
  v1062[1] = v2;
  v1063[0] = @"ErasingDownload";
  v1063[1] = @"ClientAcceptEraseActiveJob";
  v252 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1063,  v1062,  2LL));
  v1085[10] = v252;
  v1084[11] = @"JobFailedToStart";
  uint64_t v1060 = v2;
  v1061 = @"DecideMoreAvailable";
  v251 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1061,  &v1060,  1LL));
  v1085[11] = v251;
  v1084[12] = @"DownloadForStagingProgress";
  uint64_t v1058 = v2;
  v1059 = @"ReportStagingProgressToClient";
  v250 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1059,  &v1058,  1LL));
  v1085[12] = v250;
  v1084[13] = @"DownloadForStagingSuccess";
  uint64_t v1056 = v2;
  v1057 = @"AddToStagedDecideMoreAvailable";
  v249 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1057,  &v1056,  1LL));
  v1085[13] = v249;
  v1084[14] = @"DownloadForStagingFailure";
  uint64_t v1054 = v2;
  v1055 = @"DecideMoreAvailable";
  v248 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1055,  &v1054,  1LL));
  v1085[14] = v248;
  v1084[15] = @"LastStagedJustPromoted";
  uint64_t v1052 = v2;
  uint64_t v1053 = v4;
  v247 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1053,  &v1052,  1LL));
  v1085[15] = v247;
  v1084[16] = @"TimeoutDetermining";
  uint64_t v1050 = v2;
  uint64_t v1051 = v4;
  v246 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1051,  &v1050,  1LL));
  v1085[16] = v246;
  v1084[17] = @"DownloadMoreAvailable";
  uint64_t v1048 = v2;
  v1049 = @"NextAwaitingBeginDownload";
  v245 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1049,  &v1048,  1LL));
  v1085[17] = v245;
  v1084[18] = @"DownloadDoneAvailable";
  uint64_t v1046 = v2;
  v1047 = @"DoneAvailableDecideAnyStaged";
  v244 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1047,  &v1046,  1LL));
  v1085[18] = v244;
  v1084[19] = @"DownloadNothingStaged";
  v1044[0] = v3;
  v1044[1] = v2;
  v1045[0] = @"AllAvailableContent";
  v1045[1] = @"ReplyNothingStaged";
  v243 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1045,  v1044,  2LL));
  v1085[19] = v243;
  v1084[20] = @"DownloadNothingStagedEmpty";
  v1042[0] = v3;
  v1042[1] = v2;
  v1043[0] = @"NothingAvailable";
  v1043[1] = @"ReplyNothingStagedPurgeAll";
  v242 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1043,  v1042,  2LL));
  v1085[20] = v242;
  v1084[21] = @"DownloadHaveStaged";
  v1040[0] = v3;
  v1040[1] = v2;
  v1041[0] = @"StagedContent";
  v1041[1] = @"ReplyHaveStaged";
  v241 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1041,  v1040,  2LL));
  v1085[21] = v241;
  v1084[22] = @"ControlUnstagedCancelJob";
  v1038[0] = v3;
  v1038[1] = v2;
  v1039[0] = @"CancelingDownload";
  v1039[1] = @"CancelActiveJob";
  v240 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1039,  v1038,  2LL));
  v1085[22] = v240;
  v1084[23] = @"EliminateCurrentJob";
  v1036[0] = v3;
  v1036[1] = v2;
  v1037[0] = @"AllDownloadEliminating";
  v1037[1] = @"EliminateCancelActiveJob";
  v239 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1037,  v1036,  2LL));
  v1085[23] = v239;
  v238 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1085,  v1084,  24LL));
  v1713[14] = v238;
  v1712[15] = @"RequiredDownloadEliminating";
  v1034[0] = @"ControlForceUnstage";
  uint64_t v1032 = v2;
  v1033 = @"ControlUnstagedDecideCancelJob";
  v237 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1033,  &v1032,  1LL));
  v1035[0] = v237;
  v1034[1] = @"ControlEliminateAssetSelector";
  uint64_t v1030 = v2;
  v1031 = @"EliminateDecideMatch";
  v236 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1031,  &v1030,  1LL));
  v1035[1] = v236;
  v1034[2] = @"ControlEliminateSetIdentifier";
  uint64_t v1028 = v2;
  v1029 = @"SetEliminateDecideMatch";
  v235 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1029,  &v1028,  1LL));
  v1035[2] = v235;
  v1034[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v1026 = v2;
  v1027 = @"ClientCheckGroupsReplyAlreadyDetermined";
  v234 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1027,  &v1026,  1LL));
  v1035[3] = v234;
  v1034[4] = @"ClientDetermineAllAvailable";
  uint64_t v1024 = v2;
  v1025 = @"ClientInvalidStagingPhase";
  v233 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1025,  &v1024,  1LL));
  v1035[4] = v233;
  v1034[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v1022 = v2;
  v1023 = @"ClientNothingStaged";
  v232 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1023,  &v1022,  1LL));
  v1035[5] = v232;
  v1034[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v1020 = v2;
  v1021 = @"ClientNewerReplySameOrEmptyDownload";
  v231 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1021,  &v1020,  1LL));
  v1035[6] = v231;
  v1034[7] = @"ClientDownloadAllAvailable";
  uint64_t v1018 = v2;
  v1019 = @"ClientFailWrongMode";
  v230 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1019,  &v1018,  1LL));
  v1035[7] = v230;
  v1034[8] = @"ClientCancelCompletion";
  uint64_t v1016 = v2;
  v1017 = @"ClientCancelDesireForCompletion";
  v229 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1017,  &v1016,  1LL));
  v1035[8] = v229;
  v1034[9] = @"ClientPurgeAll";
  uint64_t v1014 = v2;
  v1015 = @"ClientPurgeDecideStagingClient";
  v228 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1015,  &v1014,  1LL));
  v1035[9] = v228;
  v1034[10] = @"ClientEraseAll";
  uint64_t v1012 = v2;
  v1013 = @"ClientEraseDecideStagingClient";
  v227 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1013,  &v1012,  1LL));
  v1035[10] = v227;
  v1034[11] = @"JobFailedToStart";
  uint64_t v1010 = v2;
  v1011 = @"EliminateDoneDecideMoreDownload";
  v226 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1011,  &v1010,  1LL));
  v1035[11] = v226;
  v1034[12] = @"DownloadForStagingProgress";
  uint64_t v1008 = v2;
  uint64_t v1009 = v4;
  v225 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1009,  &v1008,  1LL));
  v1035[12] = v225;
  v1034[13] = @"DownloadForStagingSuccess";
  uint64_t v1006 = v2;
  v1007 = @"EliminateDoneDecideMoreDownload";
  v224 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1007,  &v1006,  1LL));
  v1035[13] = v224;
  v1034[14] = @"DownloadForStagingFailure";
  uint64_t v1004 = v2;
  v1005 = @"EliminateDoneDecideMoreDownload";
  v223 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1005,  &v1004,  1LL));
  v1035[14] = v223;
  v1034[15] = @"LastStagedJustPromoted";
  uint64_t v1002 = v2;
  uint64_t v1003 = v4;
  v222 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1003,  &v1002,  1LL));
  v1035[15] = v222;
  v1034[16] = @"TimeoutDetermining";
  uint64_t v1000 = v2;
  uint64_t v1001 = v4;
  v221 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v1001,  &v1000,  1LL));
  v1035[16] = v221;
  v1034[17] = @"DownloadMoreAvailable";
  v998[0] = v3;
  v998[1] = v2;
  v999[0] = @"RequiredDownloading";
  v999[1] = @"NextAwaitingBeginDownload";
  v220 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v999,  v998,  2LL));
  v1035[17] = v220;
  v1034[18] = @"DownloadMoreOptional";
  v996[0] = v3;
  v996[1] = v2;
  v997[0] = @"OptionalDownloading";
  v997[1] = @"NextAwaitingBeginDownload";
  v219 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v997,  v996,  2LL));
  v1035[18] = v219;
  v1034[19] = @"DownloadDoneAvailable";
  uint64_t v994 = v2;
  v995 = @"DoneAvailableDecideAnyStaged";
  v218 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v995,  &v994,  1LL));
  v1035[19] = v218;
  v1034[20] = @"DownloadNothingStaged";
  v992[0] = v3;
  v992[1] = v2;
  v993[0] = @"GroupsAvailableContent";
  v993[1] = @"ReplyNothingStaged";
  v217 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v993,  v992,  2LL));
  v1035[20] = v217;
  v1034[21] = @"DownloadNothingStagedEmpty";
  v990[0] = v3;
  v990[1] = v2;
  v991[0] = @"NothingAvailable";
  v991[1] = @"ReplyNothingStagedPurgeAll";
  v216 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v991,  v990,  2LL));
  v1035[21] = v216;
  v1034[22] = @"DownloadHaveStaged";
  v988[0] = v3;
  v988[1] = v2;
  v989[0] = @"StagedContent";
  v989[1] = @"ReplyHaveStaged";
  v215 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v989,  v988,  2LL));
  v1035[22] = v215;
  v1034[23] = @"ControlUnstagedCancelJob";
  v986[0] = v3;
  v986[1] = v2;
  v987[0] = @"CancelingDownload";
  v987[1] = @"CancelActiveJob";
  v214 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v987,  v986,  2LL));
  v1035[23] = v214;
  v1034[24] = @"EliminateCurrentJob";
  uint64_t v984 = v2;
  uint64_t v985 = v4;
  v213 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v985,  &v984,  1LL));
  v1035[24] = v213;
  v1034[25] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v982 = v3;
  v983 = @"CancelingDownload";
  v212 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v983,  &v982,  1LL));
  v1035[25] = v212;
  v1034[26] = @"PurgeAcceptedRemoveAll";
  uint64_t v980 = v3;
  v981 = @"CancelingDownload";
  v211 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v981,  &v980,  1LL));
  v1035[26] = v211;
  v1034[27] = @"EraseAcceptedRemoveAll";
  uint64_t v978 = v3;
  v979 = @"ErasingDownload";
  v210 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v979,  &v978,  1LL));
  v1035[27] = v210;
  v209 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1035,  v1034,  28LL));
  v1713[15] = v209;
  v1712[16] = @"OptionalDownloadEliminating";
  v976[0] = @"ControlForceUnstage";
  uint64_t v974 = v2;
  v975 = @"ControlUnstagedDecideCancelJob";
  v208 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v975,  &v974,  1LL));
  v977[0] = v208;
  v976[1] = @"ControlEliminateAssetSelector";
  uint64_t v972 = v2;
  v973 = @"EliminateDecideMatch";
  v207 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v973,  &v972,  1LL));
  v977[1] = v207;
  v976[2] = @"ControlEliminateSetIdentifier";
  uint64_t v970 = v2;
  v971 = @"SetEliminateDecideMatch";
  v206 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v971,  &v970,  1LL));
  v977[2] = v206;
  v976[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v968 = v2;
  v969 = @"ClientCheckGroupsReplyAlreadyDetermined";
  v205 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v969,  &v968,  1LL));
  v977[3] = v205;
  v976[4] = @"ClientDetermineAllAvailable";
  uint64_t v966 = v2;
  v967 = @"ClientInvalidStagingPhase";
  v204 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v967,  &v966,  1LL));
  v977[4] = v204;
  v976[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v964 = v2;
  v965 = @"ClientNothingStaged";
  v203 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v965,  &v964,  1LL));
  v977[5] = v203;
  v976[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v962 = v2;
  v963 = @"ClientNewerReplySameOrEmptyDownload";
  v202 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v963,  &v962,  1LL));
  v977[6] = v202;
  v976[7] = @"ClientDownloadAllAvailable";
  uint64_t v960 = v2;
  v961 = @"ClientFailWrongMode";
  v201 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v961,  &v960,  1LL));
  v977[7] = v201;
  v976[8] = @"ClientCancelCompletion";
  uint64_t v958 = v2;
  v959 = @"ClientCancelDesireForCompletion";
  v200 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v959,  &v958,  1LL));
  v977[8] = v200;
  v976[9] = @"ClientPurgeAll";
  uint64_t v956 = v2;
  v957 = @"ClientPurgeDecideStagingClient";
  v199 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v957,  &v956,  1LL));
  v977[9] = v199;
  v976[10] = @"ClientEraseAll";
  uint64_t v954 = v2;
  v955 = @"ClientEraseDecideStagingClient";
  v198 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v955,  &v954,  1LL));
  v977[10] = v198;
  v976[11] = @"JobFailedToStart";
  uint64_t v952 = v2;
  v953 = @"EliminateDoneDecideMoreDownload";
  v197 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v953,  &v952,  1LL));
  v977[11] = v197;
  v976[12] = @"DownloadForStagingProgress";
  uint64_t v950 = v2;
  uint64_t v951 = v4;
  v196 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v951,  &v950,  1LL));
  v977[12] = v196;
  v976[13] = @"DownloadForStagingSuccess";
  uint64_t v948 = v2;
  v949 = @"EliminateDoneDecideMoreDownload";
  v195 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v949,  &v948,  1LL));
  v977[13] = v195;
  v976[14] = @"DownloadForStagingFailure";
  uint64_t v946 = v2;
  v947 = @"EliminateDoneDecideMoreDownload";
  v194 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v947,  &v946,  1LL));
  v977[14] = v194;
  v976[15] = @"LastStagedJustPromoted";
  uint64_t v944 = v2;
  uint64_t v945 = v4;
  v193 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v945,  &v944,  1LL));
  v977[15] = v193;
  v976[16] = @"TimeoutDetermining";
  uint64_t v942 = v2;
  uint64_t v943 = v4;
  v192 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v943,  &v942,  1LL));
  v977[16] = v192;
  v976[17] = @"DownloadMoreAvailable";
  v940[0] = v3;
  v940[1] = v2;
  v941[0] = @"OptionalDownloading";
  v941[1] = @"NextAwaitingBeginDownload";
  v191 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v941,  v940,  2LL));
  v977[17] = v191;
  v976[18] = @"DownloadDoneAvailable";
  uint64_t v938 = v2;
  v939 = @"DoneAvailableDecideAnyStaged";
  v190 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v939,  &v938,  1LL));
  v977[18] = v190;
  v976[19] = @"DownloadNothingStaged";
  v936[0] = v3;
  v936[1] = v2;
  v937[0] = @"GroupsAvailableContent";
  v937[1] = @"ReplyNothingStaged";
  v189 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v937,  v936,  2LL));
  v977[19] = v189;
  v976[20] = @"DownloadNothingStagedEmpty";
  v934[0] = v3;
  v934[1] = v2;
  v935[0] = @"NothingAvailable";
  v935[1] = @"ReplyNothingStagedPurgeAll";
  v188 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v935,  v934,  2LL));
  v977[20] = v188;
  v976[21] = @"DownloadHaveStaged";
  v932[0] = v3;
  v932[1] = v2;
  v933[0] = @"StagedContent";
  v933[1] = @"ReplyHaveStaged";
  v187 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v933,  v932,  2LL));
  v977[21] = v187;
  v976[22] = @"ControlUnstagedCancelJob";
  v930[0] = v3;
  v930[1] = v2;
  v931[0] = @"CancelingDownload";
  v931[1] = @"CancelActiveJob";
  v186 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v931,  v930,  2LL));
  v977[22] = v186;
  v976[23] = @"EliminateCurrentJob";
  uint64_t v928 = v2;
  uint64_t v929 = v4;
  v185 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v929,  &v928,  1LL));
  v977[23] = v185;
  v976[24] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v926 = v3;
  v927 = @"CancelingDownload";
  v184 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v927,  &v926,  1LL));
  v977[24] = v184;
  v976[25] = @"PurgeAcceptedRemoveAll";
  uint64_t v924 = v3;
  v925 = @"CancelingDownload";
  v183 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v925,  &v924,  1LL));
  v977[25] = v183;
  v976[26] = @"EraseAcceptedRemoveAll";
  uint64_t v922 = v3;
  v923 = @"ErasingDownload";
  v182 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v923,  &v922,  1LL));
  v977[26] = v182;
  v181 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v977,  v976,  27LL));
  v1713[16] = v181;
  v1712[17] = @"AllDownloadEliminating";
  v920[0] = @"ControlForceUnstage";
  uint64_t v918 = v2;
  v919 = @"ControlUnstagedDecideCancelJob";
  v180 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v919,  &v918,  1LL));
  v921[0] = v180;
  v920[1] = @"ControlEliminateAssetSelector";
  uint64_t v916 = v2;
  v917 = @"EliminateDecideMatch";
  v179 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v917,  &v916,  1LL));
  v921[1] = v179;
  v920[2] = @"ControlEliminateSetIdentifier";
  uint64_t v914 = v2;
  v915 = @"SetEliminateDecideMatch";
  v178 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v915,  &v914,  1LL));
  v921[2] = v178;
  v920[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v912 = v2;
  v913 = @"ClientNewerReplyEmptyDetermine";
  v177 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v913,  &v912,  1LL));
  v921[3] = v177;
  v920[4] = @"ClientDetermineAllAvailable";
  uint64_t v910 = v2;
  v911 = @"ClientInvalidStagingPhase";
  v176 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v911,  &v910,  1LL));
  v921[4] = v176;
  v920[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v908 = v2;
  v909 = @"ClientNothingStaged";
  v175 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v909,  &v908,  1LL));
  v921[5] = v175;
  v920[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v906 = v2;
  v907 = @"ClientNewerReplySameOrEmptyDownload";
  v174 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v907,  &v906,  1LL));
  v921[6] = v174;
  v920[7] = @"ClientDownloadAllAvailable";
  uint64_t v904 = v2;
  v905 = @"ClientContinueUsingLatestRequest";
  v173 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v905,  &v904,  1LL));
  v921[7] = v173;
  v920[8] = @"ClientCancelCompletion";
  uint64_t v902 = v2;
  v903 = @"ClientCancelDesireForCompletion";
  v172 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v903,  &v902,  1LL));
  v921[8] = v172;
  v920[9] = @"ClientPurgeAll";
  v900[0] = v3;
  v900[1] = v2;
  v901[0] = @"CancelingDownload";
  v901[1] = @"ClientAcceptCancelActiveJob";
  v171 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v901,  v900,  2LL));
  v921[9] = v171;
  v920[10] = @"ClientEraseAll";
  v898[0] = v3;
  v898[1] = v2;
  v899[0] = @"ErasingDownload";
  v899[1] = @"ClientAcceptCancelActiveJob";
  v170 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v899,  v898,  2LL));
  v921[10] = v170;
  v920[11] = @"JobFailedToStart";
  uint64_t v896 = v2;
  v897 = @"EliminateDoneDecideMoreDownload";
  v169 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v897,  &v896,  1LL));
  v921[11] = v169;
  v920[12] = @"DownloadForStagingProgress";
  uint64_t v894 = v2;
  uint64_t v895 = v4;
  v168 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v895,  &v894,  1LL));
  v921[12] = v168;
  v920[13] = @"DownloadForStagingSuccess";
  uint64_t v892 = v2;
  v893 = @"EliminateDoneDecideMoreDownload";
  v167 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v893,  &v892,  1LL));
  v921[13] = v167;
  v920[14] = @"DownloadForStagingFailure";
  uint64_t v890 = v2;
  v891 = @"EliminateDoneDecideMoreDownload";
  v166 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v891,  &v890,  1LL));
  v921[14] = v166;
  v920[15] = @"LastStagedJustPromoted";
  uint64_t v888 = v2;
  uint64_t v889 = v4;
  v165 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v889,  &v888,  1LL));
  v921[15] = v165;
  v920[16] = @"TimeoutDetermining";
  uint64_t v886 = v2;
  uint64_t v887 = v4;
  v164 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v887,  &v886,  1LL));
  v921[16] = v164;
  v920[17] = @"DownloadMoreAvailable";
  v884[0] = v3;
  v884[1] = v2;
  v885[0] = @"AllDownloading";
  v885[1] = @"NextAwaitingBeginDownload";
  v163 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v885,  v884,  2LL));
  v921[17] = v163;
  v920[18] = @"DownloadDoneAvailable";
  uint64_t v882 = v2;
  v883 = @"DoneAvailableDecideAnyStaged";
  v162 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v883,  &v882,  1LL));
  v921[18] = v162;
  v920[19] = @"DownloadNothingStaged";
  v880[0] = v3;
  v880[1] = v2;
  v881[0] = @"AllAvailableContent";
  v881[1] = @"ReplyNothingStaged";
  v161 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v881,  v880,  2LL));
  v921[19] = v161;
  v920[20] = @"DownloadNothingStagedEmpty";
  v878[0] = v3;
  v878[1] = v2;
  v879[0] = @"NothingAvailable";
  v879[1] = @"ReplyNothingStagedPurgeAll";
  v160 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v879,  v878,  2LL));
  v921[20] = v160;
  v920[21] = @"DownloadHaveStaged";
  v876[0] = v3;
  v876[1] = v2;
  v877[0] = @"StagedContent";
  v877[1] = @"ReplyHaveStaged";
  v159 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v877,  v876,  2LL));
  v921[21] = v159;
  v920[22] = @"ControlUnstagedCancelJob";
  v874[0] = v3;
  v874[1] = v2;
  v875[0] = @"CancelingDownload";
  v875[1] = @"CancelActiveJob";
  v158 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v875,  v874,  2LL));
  v921[22] = v158;
  v920[23] = @"EliminateCurrentJob";
  uint64_t v872 = v2;
  uint64_t v873 = v4;
  v157 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v873,  &v872,  1LL));
  v921[23] = v157;
  v156 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v921,  v920,  24LL));
  v1713[17] = v156;
  v1712[18] = @"StagedContent";
  v870[0] = @"ControlForceUnstage";
  uint64_t v868 = v2;
  v869 = @"ControlUnstagedDecideRemoveAll";
  v155 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v869,  &v868,  1LL));
  v871[0] = v155;
  v870[1] = @"ControlEliminateAssetSelector";
  uint64_t v866 = v2;
  v867 = @"EliminateDoneStagedDecideEmpty";
  v154 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v867,  &v866,  1LL));
  v871[1] = v154;
  v870[2] = @"ControlEliminateSetIdentifier";
  uint64_t v864 = v2;
  v865 = @"SetEliminateDoneStagedDecideEmpty";
  v153 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v865,  &v864,  1LL));
  v871[2] = v153;
  v870[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v862 = v2;
  v863 = @"ClientCheckGroupsReplyAlreadyDetermined";
  v152 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v863,  &v862,  1LL));
  v871[3] = v152;
  v870[4] = @"ClientDetermineAllAvailable";
  uint64_t v860 = v2;
  v861 = @"ClientInvalidStagingPhase";
  v151 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v861,  &v860,  1LL));
  v871[4] = v151;
  v870[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v858 = v2;
  v859 = @"ClientHaveStagedContent";
  v150 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v859,  &v858,  1LL));
  v871[5] = v150;
  v870[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v856 = v2;
  v857 = @"ClientDecideGroupTargetAvailablePurge";
  v149 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v857,  &v856,  1LL));
  v871[6] = v149;
  v870[7] = @"ClientDownloadAllAvailable";
  uint64_t v854 = v2;
  v855 = @"ClientInvalidStagingPhase";
  v148 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v855,  &v854,  1LL));
  v871[7] = v148;
  v870[8] = @"ClientCancelCompletion";
  uint64_t v852 = v2;
  v853 = @"ClientCancelDesireForCompletion";
  v147 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v853,  &v852,  1LL));
  v871[8] = v147;
  v870[9] = @"ClientPurgeAll";
  uint64_t v850 = v2;
  v851 = @"ClientPurgeDecideStagingClient";
  v146 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v851,  &v850,  1LL));
  v871[9] = v146;
  v870[10] = @"ClientEraseAll";
  uint64_t v848 = v2;
  v849 = @"ClientEraseDecideStagingClient";
  v145 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v849,  &v848,  1LL));
  v871[10] = v145;
  v870[11] = @"LastStagedJustPromoted";
  v846[0] = v3;
  v846[1] = v2;
  v847[0] = @"NothingAvailable";
  v847[1] = @"RemoveAllReplyPurged";
  v144 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v847,  v846,  2LL));
  v871[11] = v144;
  v870[12] = @"TimeoutDetermining";
  uint64_t v844 = v2;
  uint64_t v845 = v4;
  v143 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v845,  &v844,  1LL));
  v871[12] = v143;
  v870[13] = @"GroupTargetAvailableRequired";
  uint64_t v842 = v3;
  v843 = @"RequiredDownloading";
  v142 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v843,  &v842,  1LL));
  v871[13] = v142;
  v870[14] = @"GroupTargetAvailableOptional";
  uint64_t v840 = v3;
  v841 = @"OptionalDownloading";
  v141 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v841,  &v840,  1LL));
  v871[14] = v141;
  v870[15] = @"GroupTargetNotAvailable";
  uint64_t v838 = v2;
  v839 = @"ReplyTargetNotAvailable";
  v140 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v839,  &v838,  1LL));
  v871[15] = v140;
  v870[16] = @"ControlUnstagedRemoveAll";
  uint64_t v836 = v2;
  v837 = @"DecideEmptyHaveAvailable";
  v139 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v837,  &v836,  1LL));
  v871[16] = v139;
  v870[17] = @"EliminateNowEmpty";
  uint64_t v834 = v2;
  v835 = @"DecideEmptyHaveAvailable";
  v138 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v835,  &v834,  1LL));
  v871[17] = v138;
  v870[18] = @"PurgeAcceptedRemoveDownloaded";
  v832[0] = v3;
  v832[1] = v2;
  v833[0] = @"GroupsAvailableContent";
  v833[1] = @"RemoveAllReplyPurged";
  v137 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v833,  v832,  2LL));
  v871[18] = v137;
  v870[19] = @"PurgeAcceptedRemoveAll";
  v830[0] = v3;
  v830[1] = v2;
  v831[0] = @"NothingAvailable";
  v831[1] = @"RemoveAllReplyPurged";
  v136 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v831,  v830,  2LL));
  v871[19] = v136;
  v870[20] = @"EraseAcceptedRemoveAll";
  v828[0] = v3;
  v828[1] = v2;
  v829[0] = @"NothingAvailable";
  v829[1] = @"RemoveAllReplyErased";
  v135 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v829,  v828,  2LL));
  v871[20] = v135;
  v870[21] = @"EmptyHaveAvailable";
  v826[0] = v3;
  v826[1] = v2;
  v827[0] = @"GroupsAvailableContent";
  v827[1] = @"RemoveAllReplyPurged";
  v134 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v827,  v826,  2LL));
  v871[21] = v134;
  v870[22] = @"EmptyNothingAvailable";
  v824[0] = v3;
  v824[1] = v2;
  v825[0] = @"NothingAvailable";
  v825[1] = @"RemoveAllReplyPurged";
  v133 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v825,  v824,  2LL));
  v871[22] = v133;
  v132 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v871,  v870,  23LL));
  v1713[18] = v132;
  v1712[19] = @"CancelingRequestDownloaded";
  v822[0] = @"ControlForceUnstage";
  uint64_t v820 = v2;
  uint64_t v821 = v4;
  v131 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v821,  &v820,  1LL));
  v823[0] = v131;
  v822[1] = @"ControlAlreadyDownloaded";
  v818[0] = v3;
  v818[1] = v2;
  v819[0] = @"NothingAvailable";
  v819[1] = @"RemoveAllReplyPurged";
  v130 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v819,  v818,  2LL));
  v823[1] = v130;
  v822[2] = @"ControlEliminateAssetSelector";
  uint64_t v816 = v2;
  v817 = @"EliminateDecideMatch";
  v129 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v817,  &v816,  1LL));
  v823[2] = v129;
  v822[3] = @"ControlEliminateSetIdentifier";
  uint64_t v814 = v2;
  v815 = @"SetEliminateDecideMatch";
  v128 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v815,  &v814,  1LL));
  v823[3] = v128;
  v822[4] = @"ClientDetermineGroupsAvailable";
  uint64_t v812 = v2;
  v813 = @"ClientCheckGroupsReplyAlreadyDetermined";
  v127 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v813,  &v812,  1LL));
  v823[4] = v127;
  v822[5] = @"ClientDetermineAllAvailable";
  uint64_t v810 = v2;
  v811 = @"ClientInvalidStagingPhase";
  v125 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v811,  &v810,  1LL));
  v823[5] = v125;
  v822[6] = @"ClientDownloadAlreadyStaged";
  uint64_t v808 = v2;
  v809 = @"ClientInvalidStagingPhase";
  v124 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v809,  &v808,  1LL));
  v823[6] = v124;
  v822[7] = @"ClientDownloadGroupsAvailable";
  uint64_t v806 = v2;
  v807 = @"ClientNewerReplyEmptyDownload";
  v123 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v807,  &v806,  1LL));
  v823[7] = v123;
  v822[8] = @"ClientDownloadAllAvailable";
  uint64_t v804 = v2;
  v805 = @"ClientInvalidStagingPhase";
  v122 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v805,  &v804,  1LL));
  v823[8] = v122;
  v822[9] = @"ClientCancelCompletion";
  uint64_t v802 = v2;
  v803 = @"ClientCancelDesireForCompletion";
  v121 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v803,  &v802,  1LL));
  v823[9] = v121;
  v822[10] = @"ClientPurgeAll";
  uint64_t v800 = v2;
  v801 = @"ClientPurgeDecideStagingClient";
  v120 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v801,  &v800,  1LL));
  v823[10] = v120;
  v822[11] = @"ClientEraseAll";
  uint64_t v798 = v2;
  v799 = @"ClientEraseDecideStagingClient";
  v119 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v799,  &v798,  1LL));
  v823[11] = v119;
  v822[12] = @"LastStagedJustPromoted";
  uint64_t v796 = v2;
  uint64_t v797 = v4;
  v118 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v797,  &v796,  1LL));
  v823[12] = v118;
  v822[13] = @"TimeoutDetermining";
  uint64_t v794 = v2;
  uint64_t v795 = v4;
  v117 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v795,  &v794,  1LL));
  v823[13] = v117;
  v822[14] = @"EliminateCurrentJob";
  uint64_t v792 = v2;
  uint64_t v793 = v4;
  v116 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v793,  &v792,  1LL));
  v823[14] = v116;
  v822[15] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v790 = v2;
  uint64_t v791 = v4;
  v115 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v791,  &v790,  1LL));
  v823[15] = v115;
  v822[16] = @"PurgeAcceptedRemoveAll";
  uint64_t v788 = v2;
  uint64_t v789 = v4;
  v114 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v789,  &v788,  1LL));
  v823[16] = v114;
  v822[17] = @"EraseAcceptedRemoveAll";
  uint64_t v786 = v2;
  uint64_t v787 = v4;
  v113 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v787,  &v786,  1LL));
  v823[17] = v113;
  v112 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v823,  v822,  18LL));
  v1713[19] = v112;
  v1712[20] = @"CancelingDetermine";
  v784[0] = @"ControlForceUnstage";
  uint64_t v782 = v2;
  uint64_t v783 = v4;
  v111 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v783,  &v782,  1LL));
  v785[0] = v111;
  v784[1] = @"ControlEliminateAssetSelector";
  uint64_t v780 = v2;
  v781 = @"EliminateDecideMatch";
  v110 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v781,  &v780,  1LL));
  v785[1] = v110;
  v784[2] = @"ControlEliminateSetIdentifier";
  uint64_t v778 = v2;
  v779 = @"SetEliminateDecideMatch";
  v109 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v779,  &v778,  1LL));
  v785[2] = v109;
  v784[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v776 = v2;
  v777 = @"ClientCheckGroupsReplyAlreadyDetermined";
  v108 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v777,  &v776,  1LL));
  v785[3] = v108;
  v784[4] = @"ClientDetermineAllAvailable";
  uint64_t v774 = v2;
  v775 = @"ClientInvalidStagingPhase";
  v107 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v775,  &v774,  1LL));
  v785[4] = v107;
  v784[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v772 = v2;
  v773 = @"ClientInvalidStagingPhase";
  v106 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v773,  &v772,  1LL));
  v785[5] = v106;
  v784[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v770 = v2;
  v771 = @"ClientNewerReplyEmptyDownload";
  v105 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v771,  &v770,  1LL));
  v785[6] = v105;
  v784[7] = @"ClientDownloadAllAvailable";
  uint64_t v768 = v2;
  v769 = @"ClientInvalidStagingPhase";
  v104 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v769,  &v768,  1LL));
  v785[7] = v104;
  v784[8] = @"ClientCancelCompletion";
  uint64_t v766 = v2;
  v767 = @"ClientCancelDesireForCompletion";
  v103 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v767,  &v766,  1LL));
  v785[8] = v103;
  v784[9] = @"ClientPurgeAll";
  uint64_t v764 = v2;
  v765 = @"ClientPurgeDecideStagingClient";
  v102 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v765,  &v764,  1LL));
  v785[9] = v102;
  v784[10] = @"ClientEraseAll";
  uint64_t v762 = v2;
  v763 = @"ClientEraseDecideStagingClient";
  v101 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v763,  &v762,  1LL));
  v785[10] = v101;
  v784[11] = @"DetermineAvailableSuccess";
  v760[0] = v3;
  v760[1] = v2;
  v761[0] = @"NothingAvailable";
  v761[1] = @"RemoveAllReplyPurged";
  v100 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v761,  v760,  2LL));
  v785[11] = v100;
  v784[12] = @"DetermineAvailableFailure";
  v758[0] = v3;
  v758[1] = v2;
  v759[0] = @"NothingAvailable";
  v759[1] = @"RemoveAllReplyPurged";
  v99 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v759,  v758,  2LL));
  v785[12] = v99;
  v784[13] = @"LastStagedJustPromoted";
  uint64_t v756 = v2;
  uint64_t v757 = v4;
  v98 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v757,  &v756,  1LL));
  v785[13] = v98;
  v784[14] = @"TimeoutDetermining";
  uint64_t v754 = v2;
  uint64_t v755 = v4;
  v97 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v755,  &v754,  1LL));
  v785[14] = v97;
  v784[15] = @"EliminateCurrentJob";
  uint64_t v752 = v2;
  uint64_t v753 = v4;
  v96 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v753,  &v752,  1LL));
  v785[15] = v96;
  v784[16] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v750 = v2;
  uint64_t v751 = v4;
  v95 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v751,  &v750,  1LL));
  v785[16] = v95;
  v784[17] = @"PurgeAcceptedRemoveAll";
  uint64_t v748 = v2;
  uint64_t v749 = v4;
  v94 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v749,  &v748,  1LL));
  v785[17] = v94;
  v784[18] = @"EraseAcceptedRemoveAll";
  uint64_t v746 = v2;
  uint64_t v747 = v4;
  v93 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v747,  &v746,  1LL));
  v785[18] = v93;
  v92 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v785,  v784,  19LL));
  v1713[20] = v92;
  v1712[21] = @"CancelingDownload";
  v744[0] = @"ControlForceUnstage";
  uint64_t v742 = v2;
  uint64_t v743 = v4;
  v91 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v743,  &v742,  1LL));
  v745[0] = v91;
  v744[1] = @"ControlEliminateAssetSelector";
  uint64_t v740 = v2;
  v741 = @"EliminateDecideMatch";
  v90 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v741,  &v740,  1LL));
  v745[1] = v90;
  v744[2] = @"ControlEliminateSetIdentifier";
  uint64_t v738 = v2;
  v739 = @"SetEliminateDecideMatch";
  v89 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v739,  &v738,  1LL));
  v745[2] = v89;
  v744[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v736 = v2;
  v737 = @"ClientCheckGroupsReplyAlreadyDetermined";
  v88 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v737,  &v736,  1LL));
  v745[3] = v88;
  v744[4] = @"ClientDetermineAllAvailable";
  uint64_t v734 = v2;
  v735 = @"ClientInvalidStagingPhase";
  v87 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v735,  &v734,  1LL));
  v745[4] = v87;
  v744[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v732 = v2;
  v733 = @"ClientInvalidStagingPhase";
  v86 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v733,  &v732,  1LL));
  v745[5] = v86;
  v744[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v730 = v2;
  v731 = @"ClientNewerReplyEmptyDownload";
  v85 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v731,  &v730,  1LL));
  v745[6] = v85;
  v744[7] = @"ClientDownloadAllAvailable";
  uint64_t v728 = v2;
  v729 = @"ClientInvalidStagingPhase";
  v84 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v729,  &v728,  1LL));
  v745[7] = v84;
  v744[8] = @"ClientCancelCompletion";
  uint64_t v726 = v2;
  v727 = @"ClientCancelDesireForCompletion";
  v83 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v727,  &v726,  1LL));
  v745[8] = v83;
  v744[9] = @"ClientPurgeAll";
  uint64_t v724 = v2;
  v725 = @"ClientPurgeDecideStagingClient";
  v82 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v725,  &v724,  1LL));
  v745[9] = v82;
  v744[10] = @"ClientEraseAll";
  uint64_t v722 = v2;
  v723 = @"ClientEraseDecideStagingClient";
  v81 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v723,  &v722,  1LL));
  v745[10] = v81;
  v744[11] = @"JobFailedToStart";
  uint64_t v720 = v2;
  v721 = @"DecideEmptyHaveAvailable";
  v80 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v721,  &v720,  1LL));
  v745[11] = v80;
  v744[12] = @"DownloadForStagingProgress";
  uint64_t v718 = v2;
  uint64_t v719 = v4;
  v79 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v719,  &v718,  1LL));
  v745[12] = v79;
  v744[13] = @"DownloadForStagingSuccess";
  uint64_t v716 = v2;
  v717 = @"DecideEmptyHaveAvailable";
  __int16 v78 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v717,  &v716,  1LL));
  v745[13] = v78;
  v744[14] = @"DownloadForStagingFailure";
  uint64_t v714 = v2;
  v715 = @"DecideEmptyHaveAvailable";
  v77 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v715,  &v714,  1LL));
  v745[14] = v77;
  v744[15] = @"LastStagedJustPromoted";
  uint64_t v712 = v2;
  uint64_t v713 = v4;
  __int16 v76 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v713,  &v712,  1LL));
  v745[15] = v76;
  v744[16] = @"TimeoutDetermining";
  uint64_t v710 = v2;
  uint64_t v711 = v4;
  v75 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v711,  &v710,  1LL));
  v745[16] = v75;
  v744[17] = @"EliminateCurrentJob";
  uint64_t v708 = v2;
  uint64_t v709 = v4;
  __int16 v74 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v709,  &v708,  1LL));
  v745[17] = v74;
  v744[18] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v706 = v2;
  uint64_t v707 = v4;
  v73 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v707,  &v706,  1LL));
  v745[18] = v73;
  v744[19] = @"PurgeAcceptedRemoveAll";
  uint64_t v704 = v2;
  uint64_t v705 = v4;
  __int16 v72 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v705,  &v704,  1LL));
  v745[19] = v72;
  v744[20] = @"EraseAcceptedRemoveAll";
  uint64_t v702 = v2;
  uint64_t v703 = v4;
  v71 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v703,  &v702,  1LL));
  v745[20] = v71;
  v744[21] = @"EmptyHaveAvailable";
  v700[0] = v3;
  v700[1] = v2;
  v701[0] = @"GroupsAvailableContent";
  v701[1] = @"RemoveAllReplyPurged";
  __int16 v70 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v701,  v700,  2LL));
  v745[21] = v70;
  v744[22] = @"EmptyNothingAvailable";
  v698[0] = v3;
  v698[1] = v2;
  v699[0] = @"NothingAvailable";
  v699[1] = @"RemoveAllReplyPurged";
  id v69 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v699,  v698,  2LL));
  v745[22] = v69;
  __int16 v68 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v745,  v744,  23LL));
  v1713[21] = v68;
  v1712[22] = @"ErasingRequestDownloaded";
  v696[0] = @"ControlForceUnstage";
  uint64_t v694 = v2;
  uint64_t v695 = v4;
  v67 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v695,  &v694,  1LL));
  v697[0] = v67;
  v696[1] = @"ControlAlreadyDownloaded";
  v692[0] = v3;
  v692[1] = v2;
  v693[0] = @"NothingAvailable";
  v693[1] = @"RemoveAllReplyErased";
  __int16 v66 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v693,  v692,  2LL));
  v697[1] = v66;
  v696[2] = @"ControlEliminateAssetSelector";
  uint64_t v690 = v2;
  v691 = @"EliminateDecideMatch";
  v65 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v691,  &v690,  1LL));
  v697[2] = v65;
  v696[3] = @"ControlEliminateSetIdentifier";
  uint64_t v688 = v2;
  v689 = @"SetEliminateDecideMatch";
  id v64 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v689,  &v688,  1LL));
  v697[3] = v64;
  v696[4] = @"ClientDetermineGroupsAvailable";
  uint64_t v686 = v2;
  v687 = @"ClientCheckGroupsReplyAlreadyDetermined";
  id v63 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v687,  &v686,  1LL));
  v697[4] = v63;
  v696[5] = @"ClientDetermineAllAvailable";
  uint64_t v684 = v2;
  v685 = @"ClientInvalidStagingPhase";
  __int16 v62 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v685,  &v684,  1LL));
  v697[5] = v62;
  v696[6] = @"ClientDownloadAlreadyStaged";
  uint64_t v682 = v2;
  v683 = @"ClientInvalidStagingPhase";
  id v61 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v683,  &v682,  1LL));
  v697[6] = v61;
  v696[7] = @"ClientDownloadGroupsAvailable";
  uint64_t v680 = v2;
  v681 = @"ClientNewerReplyEmptyDownload";
  __int16 v60 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v681,  &v680,  1LL));
  v697[7] = v60;
  v696[8] = @"ClientDownloadAllAvailable";
  uint64_t v678 = v2;
  v679 = @"ClientInvalidStagingPhase";
  v59 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v679,  &v678,  1LL));
  v697[8] = v59;
  v696[9] = @"ClientCancelCompletion";
  uint64_t v676 = v2;
  v677 = @"ClientCancelDesireForCompletion";
  __int16 v58 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v677,  &v676,  1LL));
  v697[9] = v58;
  v696[10] = @"ClientPurgeAll";
  uint64_t v674 = v2;
  v675 = @"ClientPurgeDecideStagingClient";
  v57 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v675,  &v674,  1LL));
  v697[10] = v57;
  v696[11] = @"ClientEraseAll";
  uint64_t v672 = v2;
  v673 = @"ClientEraseDecideStagingClient";
  __int16 v56 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v673,  &v672,  1LL));
  v697[11] = v56;
  v696[12] = @"LastStagedJustPromoted";
  uint64_t v670 = v2;
  uint64_t v671 = v4;
  int64_t v55 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v671,  &v670,  1LL));
  v697[12] = v55;
  v696[13] = @"TimeoutDetermining";
  uint64_t v668 = v2;
  uint64_t v669 = v4;
  __int16 v54 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v669,  &v668,  1LL));
  v697[13] = v54;
  v696[14] = @"EliminateCurrentJob";
  uint64_t v666 = v2;
  uint64_t v667 = v4;
  int64_t v53 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v667,  &v666,  1LL));
  v697[14] = v53;
  v696[15] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v664 = v2;
  uint64_t v665 = v4;
  id v52 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v665,  &v664,  1LL));
  v697[15] = v52;
  v696[16] = @"PurgeAcceptedRemoveAll";
  uint64_t v662 = v2;
  uint64_t v663 = v4;
  id v51 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v663,  &v662,  1LL));
  v697[16] = v51;
  v696[17] = @"EraseAcceptedRemoveAll";
  uint64_t v660 = v2;
  uint64_t v661 = v4;
  int64_t v50 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v661,  &v660,  1LL));
  v697[17] = v50;
  int64_t v49 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v697,  v696,  18LL));
  v1713[22] = v49;
  v1712[23] = @"ErasingDetermine";
  v658[0] = @"ControlForceUnstage";
  uint64_t v656 = v2;
  uint64_t v657 = v4;
  id v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v657,  &v656,  1LL));
  v659[0] = v48;
  v658[1] = @"ControlEliminateAssetSelector";
  uint64_t v654 = v2;
  v655 = @"EliminateDecideMatch";
  id v47 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v655,  &v654,  1LL));
  v659[1] = v47;
  v658[2] = @"ControlEliminateSetIdentifier";
  uint64_t v652 = v2;
  v653 = @"SetEliminateDecideMatch";
  id v46 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v653,  &v652,  1LL));
  v659[2] = v46;
  v658[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v650 = v2;
  v651 = @"ClientCheckGroupsReplyAlreadyDetermined";
  __int16 v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v651,  &v650,  1LL));
  v659[3] = v45;
  v658[4] = @"ClientDetermineAllAvailable";
  uint64_t v648 = v2;
  v649 = @"ClientInvalidStagingPhase";
  id v44 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v649,  &v648,  1LL));
  v659[4] = v44;
  v658[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v646 = v2;
  v647 = @"ClientInvalidStagingPhase";
  id v43 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v647,  &v646,  1LL));
  v659[5] = v43;
  v658[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v644 = v2;
  v645 = @"ClientNewerReplyEmptyDownload";
  v42 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v645,  &v644,  1LL));
  v659[6] = v42;
  v658[7] = @"ClientDownloadAllAvailable";
  uint64_t v642 = v2;
  v643 = @"ClientInvalidStagingPhase";
  id v41 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v643,  &v642,  1LL));
  v659[7] = v41;
  v658[8] = @"ClientCancelCompletion";
  uint64_t v640 = v2;
  v641 = @"ClientCancelDesireForCompletion";
  v40 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v641,  &v640,  1LL));
  v659[8] = v40;
  v658[9] = @"ClientPurgeAll";
  uint64_t v638 = v2;
  v639 = @"ClientPurgeDecideStagingClient";
  id v39 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v639,  &v638,  1LL));
  v659[9] = v39;
  v658[10] = @"ClientEraseAll";
  uint64_t v636 = v2;
  v637 = @"ClientEraseDecideStagingClient";
  v38 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v637,  &v636,  1LL));
  v659[10] = v38;
  v658[11] = @"DetermineAvailableSuccess";
  v634[0] = v3;
  v634[1] = v2;
  v635[0] = @"NothingAvailable";
  v635[1] = @"RemoveAllReplyErased";
  id v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v635,  v634,  2LL));
  v659[11] = v37;
  v658[12] = @"DetermineAvailableFailure";
  v632[0] = v3;
  v632[1] = v2;
  v633[0] = @"NothingAvailable";
  v633[1] = @"RemoveAllReplyErased";
  id v36 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v633,  v632,  2LL));
  v659[12] = v36;
  v658[13] = @"LastStagedJustPromoted";
  uint64_t v630 = v2;
  uint64_t v631 = v4;
  id v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v631,  &v630,  1LL));
  v659[13] = v35;
  v658[14] = @"TimeoutDetermining";
  uint64_t v628 = v2;
  uint64_t v629 = v4;
  v34 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v629,  &v628,  1LL));
  v659[14] = v34;
  v658[15] = @"EliminateCurrentJob";
  uint64_t v626 = v2;
  uint64_t v627 = v4;
  __int16 v33 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v627,  &v626,  1LL));
  v659[15] = v33;
  v658[16] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v624 = v2;
  uint64_t v625 = v4;
  v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v625,  &v624,  1LL));
  v659[16] = v32;
  v658[17] = @"PurgeAcceptedRemoveAll";
  uint64_t v622 = v2;
  uint64_t v623 = v4;
  v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v623,  &v622,  1LL));
  v659[17] = v31;
  v658[18] = @"EraseAcceptedRemoveAll";
  uint64_t v620 = v2;
  uint64_t v621 = v4;
  id v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v621,  &v620,  1LL));
  v659[18] = v30;
  id v29 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v659,  v658,  19LL));
  v1713[23] = v29;
  v1712[24] = @"ErasingDownload";
  v618[0] = @"ControlForceUnstage";
  uint64_t v616 = v2;
  uint64_t v617 = v4;
  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v617,  &v616,  1LL));
  v619[0] = v28;
  v618[1] = @"ControlEliminateAssetSelector";
  uint64_t v614 = v2;
  v615 = @"EliminateDecideMatch";
  id v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v615,  &v614,  1LL));
  v619[1] = v27;
  v618[2] = @"ControlEliminateSetIdentifier";
  uint64_t v612 = v2;
  v613 = @"SetEliminateDecideMatch";
  __int128 v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v613,  &v612,  1LL));
  v619[2] = v26;
  v618[3] = @"ClientDetermineGroupsAvailable";
  uint64_t v610 = v2;
  v611 = @"ClientCheckGroupsReplyAlreadyDetermined";
  id v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v611,  &v610,  1LL));
  v619[3] = v25;
  v618[4] = @"ClientDetermineAllAvailable";
  uint64_t v608 = v2;
  v609 = @"ClientInvalidStagingPhase";
  __int128 v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v609,  &v608,  1LL));
  v619[4] = v24;
  v618[5] = @"ClientDownloadAlreadyStaged";
  uint64_t v606 = v2;
  v607 = @"ClientInvalidStagingPhase";
  id v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v607,  &v606,  1LL));
  v619[5] = v23;
  v618[6] = @"ClientDownloadGroupsAvailable";
  uint64_t v604 = v2;
  v605 = @"ClientNewerReplyEmptyDownload";
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v605,  &v604,  1LL));
  v619[6] = v22;
  v618[7] = @"ClientDownloadAllAvailable";
  uint64_t v602 = v2;
  v603 = @"ClientInvalidStagingPhase";
  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v603,  &v602,  1LL));
  v619[7] = v21;
  v618[8] = @"ClientCancelCompletion";
  uint64_t v600 = v2;
  v601 = @"ClientCancelDesireForCompletion";
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v601,  &v600,  1LL));
  v619[8] = v20;
  v618[9] = @"ClientPurgeAll";
  uint64_t v598 = v2;
  v599 = @"ClientPurgeDecideStagingClient";
  __int128 v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v599,  &v598,  1LL));
  v619[9] = v19;
  v618[10] = @"ClientEraseAll";
  uint64_t v596 = v2;
  v597 = @"ClientEraseDecideStagingClient";
  id v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v597,  &v596,  1LL));
  v619[10] = v18;
  v618[11] = @"JobFailedToStart";
  v594[0] = v3;
  v594[1] = v2;
  v595[0] = @"NothingAvailable";
  v595[1] = @"RemoveAllReplyErased";
  id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v595,  v594,  2LL));
  v619[11] = v17;
  v618[12] = @"DownloadForStagingProgress";
  uint64_t v592 = v2;
  uint64_t v593 = v4;
  unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v593,  &v592,  1LL));
  v619[12] = v16;
  v618[13] = @"DownloadForStagingSuccess";
  v590[0] = v3;
  v590[1] = v2;
  v591[0] = @"NothingAvailable";
  v591[1] = @"RemoveAllReplyErased";
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v591,  v590,  2LL));
  v619[13] = v5;
  v618[14] = @"DownloadForStagingFailure";
  v588[0] = v3;
  v588[1] = v2;
  v589[0] = @"NothingAvailable";
  v589[1] = @"RemoveAllReplyErased";
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v589,  v588,  2LL));
  v619[14] = v6;
  v618[15] = @"LastStagedJustPromoted";
  uint64_t v586 = v2;
  uint64_t v587 = v4;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v587,  &v586,  1LL));
  v619[15] = v7;
  v618[16] = @"TimeoutDetermining";
  uint64_t v584 = v2;
  uint64_t v585 = v4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v585,  &v584,  1LL));
  v619[16] = v8;
  v618[17] = @"EliminateCurrentJob";
  uint64_t v582 = v2;
  uint64_t v583 = v4;
  v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v583,  &v582,  1LL));
  v619[17] = v9;
  v618[18] = @"PurgeAcceptedRemoveDownloaded";
  uint64_t v580 = v2;
  uint64_t v581 = v4;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v581,  &v580,  1LL));
  v619[18] = v10;
  v618[19] = @"PurgeAcceptedRemoveAll";
  uint64_t v578 = v2;
  uint64_t v579 = v4;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v579,  &v578,  1LL));
  v619[19] = v11;
  v618[20] = @"EraseAcceptedRemoveAll";
  uint64_t v576 = v2;
  uint64_t v577 = v4;
  __int128 v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v577,  &v576,  1LL));
  v619[20] = v12;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v619,  v618,  21LL));
  v1713[24] = v13;
  v126 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v1713,  v1712,  25LL));

  uint64_t v14 = -[NSDictionary initWithDictionary:copyItems:]( objc_alloc(&OBJC_CLASS___NSDictionary),  "initWithDictionary:copyItems:",  v126,  1LL);
  return v14;
}

- (MADAutoAssetStager)init
{
  v105.receiver = self;
  v105.super_class = (Class)&OBJC_CLASS___MADAutoAssetStager;
  uint64_t v2 = -[MADAutoAssetStager init](&v105, "init");
  if (v2)
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager preferenceAsIfBootedOSIsOSVersion]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceAsIfBootedOSIsOSVersion"));
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager preferenceAsIfBootedOSIsBuildVersion]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceAsIfBootedOSIsBuildVersion"));
    uint64_t v5 = -[SUCoreLog initWithCategory:](objc_alloc(&OBJC_CLASS___SUCoreLog), "initWithCategory:", @"AUTO-STAGER");
    id v6 = (void *)*((void *)v2 + 2);
    *((void *)v2 + 2) = v5;

    id v7 = [(id)objc_opt_class(MADAutoAssetStager) _getAutoAssetStagerStateTable];
    uint64_t v8 = objc_claimAutoreleasedReturnValue(v7);
    v9 = (void *)*((void *)v2 + 3);
    *((void *)v2 + 3) = v8;

    uint64_t v10 = (void *)*((void *)v2 + 9);
    *((void *)v2 + 9) = @"INIT";

    if (v3)
    {
      id v11 = v3;
      __int128 v12 = (void *)*((void *)v2 + 10);
      *((void *)v2 + 10) = v11;
    }

    else
    {
      __int128 v12 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreDevice sharedDevice](&OBJC_CLASS___SUCoreDevice, "sharedDevice"));
      uint64_t v13 = objc_claimAutoreleasedReturnValue([v12 productVersion]);
      uint64_t v14 = (void *)*((void *)v2 + 10);
      *((void *)v2 + 10) = v13;
    }

    if (v4)
    {
      id v15 = v4;
      unsigned int v16 = (void *)*((void *)v2 + 11);
      *((void *)v2 + 11) = v15;
    }

    else
    {
      unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreDevice sharedDevice](&OBJC_CLASS___SUCoreDevice, "sharedDevice"));
      uint64_t v17 = objc_claimAutoreleasedReturnValue([v16 buildVersion]);
      id v18 = (void *)*((void *)v2 + 11);
      *((void *)v2 + 11) = v17;
    }

    v2[8] = +[MADAutoAssetControlManager preferenceAlwaysPromoteStagedAssets]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceAlwaysPromoteStagedAssets");
    __int128 v19 = (void *)*((void *)v2 + 12);
    *((void *)v2 + 12) = 0LL;

    uint64_t v20 = (void *)*((void *)v2 + 13);
    *((void *)v2 + 13) = 0LL;

    __int128 v21 = (void *)*((void *)v2 + 14);
    *((void *)v2 + 14) = 0LL;

    __int128 v22 = (void *)*((void *)v2 + 15);
    *((void *)v2 + 15) = 0LL;

    id v23 = (void *)*((void *)v2 + 16);
    *((void *)v2 + 16) = 0LL;

    __int128 v24 = (void *)*((void *)v2 + 17);
    *((void *)v2 + 17) = 0LL;

    id v25 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    __int128 v26 = (void *)*((void *)v2 + 18);
    *((void *)v2 + 18) = v25;

    id v27 = (void *)*((void *)v2 + 19);
    *((void *)v2 + 19) = 0LL;

    __int128 v28 = (void *)*((void *)v2 + 20);
    *((void *)v2 + 20) = 0LL;

    id v29 = (void *)*((void *)v2 + 21);
    *((void *)v2 + 21) = 0LL;

    id v30 = (void *)*((void *)v2 + 22);
    *((void *)v2 + 22) = 0LL;

    v31 = (void *)*((void *)v2 + 23);
    *((void *)v2 + 23) = 0LL;

    v32 = (void *)*((void *)v2 + 24);
    *((void *)v2 + 24) = 0LL;

    __int16 v33 = (void *)*((void *)v2 + 25);
    *((void *)v2 + 25) = 0LL;

    v34 = (void *)*((void *)v2 + 26);
    *((void *)v2 + 26) = 0LL;

    id v35 = (void *)*((void *)v2 + 27);
    *((void *)v2 + 27) = 0LL;

    id v36 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    id v37 = (void *)*((void *)v2 + 28);
    *((void *)v2 + 28) = v36;

    v38 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    id v39 = (void *)*((void *)v2 + 29);
    *((void *)v2 + 29) = v38;

    v40 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v41 = (void *)*((void *)v2 + 30);
    *((void *)v2 + 30) = v40;

    v42 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    id v43 = (void *)*((void *)v2 + 31);
    *((void *)v2 + 31) = v42;

    id v44 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    __int16 v45 = (void *)*((void *)v2 + 32);
    *((void *)v2 + 32) = v44;

    id v46 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v47 = (void *)*((void *)v2 + 33);
    *((void *)v2 + 33) = v46;

    id v48 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    int64_t v49 = (void *)*((void *)v2 + 34);
    *((void *)v2 + 34) = v48;

    int64_t v50 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    id v51 = (void *)*((void *)v2 + 35);
    *((void *)v2 + 35) = v50;

    id v52 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    int64_t v53 = (void *)*((void *)v2 + 36);
    *((void *)v2 + 36) = v52;

    __int16 v54 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    int64_t v55 = (void *)*((void *)v2 + 37);
    *((void *)v2 + 37) = v54;

    __int16 v56 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    v57 = (void *)*((void *)v2 + 38);
    *((void *)v2 + 38) = v56;

    __int16 v58 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    v59 = (void *)*((void *)v2 + 39);
    *((void *)v2 + 39) = v58;

    __int16 v60 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v61 = (void *)*((void *)v2 + 40);
    *((void *)v2 + 40) = v60;

    __int16 v62 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v63 = (void *)*((void *)v2 + 41);
    *((void *)v2 + 41) = v62;

    id v64 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    v65 = (void *)*((void *)v2 + 42);
    *((void *)v2 + 42) = v64;

    *((void *)v2 + 43) = 0LL;
    *((void *)v2 + 44) = 0LL;
    *((void *)v2 + 45) = 0LL;
    __int16 v66 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    v67 = (void *)*((void *)v2 + 47);
    *((void *)v2 + 47) = v66;

    __int16 v68 = (void *)*((void *)v2 + 48);
    *((void *)v2 + 48) = 0LL;

    id v69 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    __int16 v70 = (void *)*((void *)v2 + 49);
    *((void *)v2 + 49) = v69;

    v71 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetControlStatisticsByCommand);
    __int16 v72 = (void *)*((void *)v2 + 50);
    *((void *)v2 + 50) = v71;

    v73 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetControlStatisticsByCommand);
    __int16 v74 = (void *)*((void *)v2 + 51);
    *((void *)v2 + 51) = v73;

    v75 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetControlStatisticsBySize);
    __int16 v76 = (void *)*((void *)v2 + 52);
    *((void *)v2 + 52) = v75;

    v77 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetControlStatisticsBySize);
    __int16 v78 = (void *)*((void *)v2 + 53);
    *((void *)v2 + 53) = v77;

    *(_WORD *)(v2 + 9) = 0;
    v2[11] = 0;
    v79 = (void *)*((void *)v2 + 54);
    *((void *)v2 + 54) = @"NONE";

    v2[12] = 0;
    v80 = objc_alloc(&OBJC_CLASS___SUCoreFSM);
    v81 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"[%@]AutoAssetStager",  @"2.1.13");
    id v82 = -[SUCoreFSM initMachine:withTable:startingIn:usingDelegate:registeringAllInfoClass:]( v80,  "initMachine:withTable:startingIn:usingDelegate:registeringAllInfoClass:",  v81,  *((void *)v2 + 3),  @"ReadyToLoad",  v2,  objc_opt_class(&OBJC_CLASS___MADAutoAssetStagerParam));
    v83 = (void *)*((void *)v2 + 4);
    *((void *)v2 + 4) = v82;

    if (*((void *)v2 + 4))
    {
      v84 = objc_alloc(&OBJC_CLASS___MADAutoAssetPersisted);
      v85 = (void *)objc_claimAutoreleasedReturnValue([*((id *)v2 + 4) extendedStateQueue]);
      id v86 = -[MADAutoAssetPersisted initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:]( v84,  "initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:",  @"AutoAssetStager",  @"1.1",  v85,  *((void *)v2 + 2),  0LL,  &__block_literal_global_7);
      v87 = (void *)*((void *)v2 + 5);
      *((void *)v2 + 5) = v86;

      v88 = objc_alloc(&OBJC_CLASS___MADAutoAssetPersisted);
      v89 = (void *)objc_claimAutoreleasedReturnValue([*((id *)v2 + 4) extendedStateQueue]);
      id v90 = -[MADAutoAssetPersisted initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:]( v88,  "initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:",  @"AutoStagerTargetLookupResults",  @"1.0",  v89,  *((void *)v2 + 2),  0LL,  &__block_literal_global_1030);
      v91 = (void *)*((void *)v2 + 6);
      *((void *)v2 + 6) = v90;

      v92 = objc_alloc(&OBJC_CLASS___MADAutoAssetPersisted);
      v93 = (void *)objc_claimAutoreleasedReturnValue([*((id *)v2 + 4) extendedStateQueue]);
      id v94 = -[MADAutoAssetPersisted initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:]( v92,  "initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:",  @"AutoStagerSetLookupResults",  @"1.0",  v93,  *((void *)v2 + 2),  0LL,  &__block_literal_global_1033);
      v95 = (void *)*((void *)v2 + 7);
      *((void *)v2 + 7) = v94;

      v96 = objc_alloc(&OBJC_CLASS___MADAutoAssetPersisted);
      v97 = (void *)objc_claimAutoreleasedReturnValue([*((id *)v2 + 4) extendedStateQueue]);
      id v98 = -[MADAutoAssetPersisted initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:]( v96,  "initForModule:ofModuleVersion:usingDispatchQueue:usingLogger:loggingByName:withVersionMigrator:",  @"AutoStagerTargetAvailable",  @"1.0",  v97,  *((void *)v2 + 2),  0LL,  &__block_literal_global_1036);
      v99 = (void *)*((void *)v2 + 8);
      *((void *)v2 + 8) = v98;

      v100 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*((id *)v2 + 4) extendedStateQueue]);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = __26__MADAutoAssetStager_init__block_invoke_5;
      block[3] = &unk_34DBC0;
      v104 = v2;
      dispatch_sync(v100, block);

      v101 = v104;
    }

    else
    {
      v101 = (os_log_s *)objc_claimAutoreleasedReturnValue([*((id *)v2 + 2) oslog]);
      if (os_log_type_enabled(v101, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetStager init].cold.1();
      }
    }
  }

  return (MADAutoAssetStager *)v2;
}

NSDictionary *__cdecl __26__MADAutoAssetStager_init__block_invoke(id a1, NSString *a2, NSString *a3, NSDictionary *a4)
{
  return (NSDictionary *)+[MADAutoAssetStager migrateMismatchedPersistedStateVersion:forEntryID:withMismatchedState:]( &OBJC_CLASS___MADAutoAssetStager,  "migrateMismatchedPersistedStateVersion:forEntryID:withMismatchedState:",  a2,  a3,  a4);
}

NSDictionary *__cdecl __26__MADAutoAssetStager_init__block_invoke_2( id a1,  NSString *a2,  NSString *a3,  NSDictionary *a4)
{
  return (NSDictionary *)+[MADAutoAssetStager migrateMismatchedPersistedTargetPromotionVersion:forEntryID:withMismatchedState:]( &OBJC_CLASS___MADAutoAssetStager,  "migrateMismatchedPersistedTargetPromotionVersion:forEntryID:withMismatchedState:",  a2,  a3,  a4);
}

NSDictionary *__cdecl __26__MADAutoAssetStager_init__block_invoke_3( id a1,  NSString *a2,  NSString *a3,  NSDictionary *a4)
{
  return (NSDictionary *)+[MADAutoAssetStager migrateMismatchedPersistedSetPromotionVersion:forEntryID:withMismatchedState:]( &OBJC_CLASS___MADAutoAssetStager,  "migrateMismatchedPersistedSetPromotionVersion:forEntryID:withMismatchedState:",  a2,  a3,  a4);
}

NSDictionary *__cdecl __26__MADAutoAssetStager_init__block_invoke_4( id a1,  NSString *a2,  NSString *a3,  NSDictionary *a4)
{
  return (NSDictionary *)+[MADAutoAssetStager migrateMismatchedPersistedAvailableForStagingPromotionVersion:forEntryID:withMismatchedState:]( &OBJC_CLASS___MADAutoAssetStager,  "migrateMismatchedPersistedAvailableForStagingPromotionVersion:forEntryID:withMismatchedState:",  a2,  a3,  a4);
}

id __26__MADAutoAssetStager_init__block_invoke_5(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) flushPersistedStateCacheAndSetCachingBehaviour:1];
}

void __37__MADAutoAssetStager_autoAssetStager__block_invoke(id a1)
{
  v1 = objc_alloc_init(&OBJC_CLASS___MADAutoAssetStager);
  uint64_t v2 = (void *)autoAssetStager___autoAssetStager;
  autoAssetStager___autoAssetStager = (uint64_t)v1;
}

+ (void)clientDetermineGroupsAvailable:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
    id v7 = -[MADAutoAssetStagerParam initWithStagingClientRequest:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithStagingClientRequest:",  v3);
    [v6 postEvent:@"ClientDetermineGroupsAvailable" withInfo:v7];
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager clientDetermineGroupsAvailable:].cold.1();
    }
  }
}

+ (void)clientDetermineAllAvailable:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
    id v7 = -[MADAutoAssetStagerParam initWithStagingClientRequest:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithStagingClientRequest:",  v3);
    [v6 postEvent:@"ClientDetermineAllAvailable" withInfo:v7];
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager clientDetermineAllAvailable:].cold.1();
    }
  }
}

+ (void)clientDownloadGroups:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  if (v4)
  {
    if (v3
      && (uint64_t v5 = objc_claimAutoreleasedReturnValue([v3 clientRequestMessage])) != 0
      && (id v6 = (void *)v5,
          id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 clientRequestMessage]),
          uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 message]),
          v8,
          v7,
          v6,
          v8))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue([v3 clientRequestMessage]);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 message]);

      id v11 = [v10 safeObjectForKey:@"desire" ofClass:objc_opt_class(MAAutoAssetInfoDesire)];
      __int128 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      uint64_t v13 = v12;
      if (v12)
      {
        if (-[os_log_s lockWaitTimeoutSecs](v12, "lockWaitTimeoutSecs")) {
          uint64_t v14 = @"ClientDownloadGroupsAvailable";
        }
        else {
          uint64_t v14 = @"ClientDownloadAlreadyStaged";
        }
        id v15 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
        unsigned int v16 = -[MADAutoAssetStagerParam initWithStagingClientRequest:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithStagingClientRequest:",  v3);
        [v15 postEvent:v14 withInfo:v16];
      }

      else
      {
        __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v4 logger]);
        uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          +[MADAutoAssetStager clientDownloadGroups:].cold.3();
        }
      }
    }

    else
    {
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v4 logger]);
      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        +[MADAutoAssetStager clientDownloadGroups:].cold.2();
      }
    }
  }

  else
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager clientDownloadGroups:].cold.1();
    }
  }
}

+ (void)clientDownloadAll:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  if (v4)
  {
    if (v3
      && (uint64_t v5 = objc_claimAutoreleasedReturnValue([v3 clientRequestMessage])) != 0
      && (id v6 = (void *)v5,
          id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 clientRequestMessage]),
          uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 message]),
          v8,
          v7,
          v6,
          v8))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue([v3 clientRequestMessage]);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 message]);

      id v11 = [v10 safeObjectForKey:@"desire" ofClass:objc_opt_class(MAAutoAssetInfoDesire)];
      __int128 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      uint64_t v13 = v12;
      if (v12)
      {
        if (-[os_log_s lockWaitTimeoutSecs](v12, "lockWaitTimeoutSecs")) {
          uint64_t v14 = @"ClientDownloadAllAvailable";
        }
        else {
          uint64_t v14 = @"ClientDownloadAlreadyStaged";
        }
        id v15 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
        unsigned int v16 = -[MADAutoAssetStagerParam initWithStagingClientRequest:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithStagingClientRequest:",  v3);
        [v15 postEvent:v14 withInfo:v16];
      }

      else
      {
        __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v4 logger]);
        uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          +[MADAutoAssetStager clientDownloadAll:].cold.3();
        }
      }
    }

    else
    {
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v4 logger]);
      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        +[MADAutoAssetStager clientDownloadAll:].cold.2();
      }
    }
  }

  else
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager clientDownloadAll:].cold.1();
    }
  }
}

+ (void)clientCancelOperation:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
    id v7 = -[MADAutoAssetStagerParam initWithStagingClientRequest:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithStagingClientRequest:",  v3);
    [v6 postEvent:@"ClientCancelCompletion" withInfo:v7];
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager clientCancelOperation:].cold.1();
    }
  }
}

+ (void)clientEraseAll:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
    id v7 = -[MADAutoAssetStagerParam initWithStagingClientRequest:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithStagingClientRequest:",  v3);
    [v6 postEvent:@"ClientEraseAll" withInfo:v7];
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager clientEraseAll:].cold.1();
    }
  }
}

+ (void)autoAssetStagerJobFailedToStart:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
    id v7 = -[MADAutoAssetStagerParam initWithJobInformation:withDownloadedDescriptor:withOperationError:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithJobInformation:withDownloadedDescriptor:withOperationError:",  0LL,  0LL,  v3);
    [v6 postEvent:@"JobFailedToStart" withInfo:v7];
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager autoAssetStagerJobFailedToStart:].cold.1();
    }
  }
}

+ (void)autoAssetStagerJobDetermineDone:(id)a3 withBaseForStagingDescriptors:(id)a4 withDetermineError:(id)a5
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a5;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  if (v10)
  {
    id v11 = -[MADAutoAssetStagerParam initWithAutoAssetCatalog:withBaseForStagingDescriptors:withOperationError:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithAutoAssetCatalog:withBaseForStagingDescriptors:withOperationError:",  v7,  v8,  v9);
    if (v9)
    {
      __int128 v12 = @"DetermineAvailableFailure";
    }

    else
    {
      int64_t v14 = +[MADAutoAssetControlManager preferenceSimulatedStagingLookupFailureResult]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceSimulatedStagingLookupFailureResult");
      if (v14 < 1)
      {
        __int128 v12 = @"DetermineAvailableSuccess";
      }

      else
      {
        unint64_t v15 = v14;
        id v16 = errorStringForMADownloadResult(v14);
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
        id v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"end of set-lookup with simulated error: %@(%ld)",  v17,  v15));

        id v24 = MAErrorForDownloadResultWithUnderlying(v15, 0LL, @"%@", v19, v20, v21, v22, v23, (uint64_t)v18);
        id v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
        __int128 v26 = -[MADAutoAssetStagerParam initWithAutoAssetCatalog:withBaseForStagingDescriptors:withOperationError:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithAutoAssetCatalog:withBaseForStagingDescriptors:withOperationError:",  v7,  v8,  v25);

        __int128 v12 = @"DetermineAvailableFailure";
        id v11 = v26;
      }
    }

    id v27 = (void *)objc_claimAutoreleasedReturnValue([v10 autoStagerFSM]);
    [v27 postEvent:v12 withInfo:v11];
  }

  else
  {
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v11 = (MADAutoAssetStagerParam *)objc_claimAutoreleasedReturnValue([v13 oslog]);

    if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager autoAssetStagerJobDetermineDone:withBaseForStagingDescriptors:withDetermineError:].cold.1();
    }
  }
}

+ (void)autoAssetStagerJobDownloadProgress:(id)a3 withProgressError:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  id v8 = v7;
  if (v7)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 autoStagerFSM]);
    uint64_t v10 = -[MADAutoAssetStagerParam initWithJobInformation:withDownloadedDescriptor:withOperationError:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithJobInformation:withDownloadedDescriptor:withOperationError:",  v5,  0LL,  v6);
    [v9 postEvent:@"DownloadForStagingProgress" withInfo:v10];
  }

  else
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager autoAssetStagerJobDownloadProgress:withProgressError:].cold.1();
    }
  }
}

+ (void)autoAssetStagerJobDownloadDone:(id)a3 withDownloadedDescriptor:(id)a4 withDownloadError:(id)a5
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a5;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  id v11 = v10;
  if (v10)
  {
    if (v9) {
      __int128 v12 = @"DownloadForStagingFailure";
    }
    else {
      __int128 v12 = @"DownloadForStagingSuccess";
    }
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v10 autoStagerFSM]);
    int64_t v14 = -[MADAutoAssetStagerParam initWithJobInformation:withDownloadedDescriptor:withOperationError:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithJobInformation:withDownloadedDescriptor:withOperationError:",  v7,  v8,  v9);
    [v13 postEvent:v12 withInfo:v14];
  }

  else
  {
    unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 oslog]);

    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager autoAssetStagerJobDownloadDone:withDownloadedDescriptor:withDownloadError:].cold.1();
    }
  }
}

+ (id)controlCopyCurrentStagedDescriptors
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  id v3 = v2;
  uint64_t v13 = 0LL;
  int64_t v14 = &v13;
  uint64_t v15 = 0x3032000000LL;
  id v16 = __Block_byref_object_copy__5;
  uint64_t v17 = __Block_byref_object_dispose__5;
  id v18 = 0LL;
  if (v2)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 autoStagerFSM]);
    id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = __57__MADAutoAssetStager_controlCopyCurrentStagedDescriptors__block_invoke;
    v10[3] = &unk_34DEB0;
    id v11 = v3;
    __int128 v12 = &v13;
    dispatch_sync(v5, v10);

    id v6 = v11;
  }

  else
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 oslog]);

    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager controlCopyCurrentStagedDescriptors].cold.1();
    }
  }

  id v8 = (id)v14[5];
  _Block_object_dispose(&v13, 8);

  return v8;
}

void __57__MADAutoAssetStager_controlCopyCurrentStagedDescriptors__block_invoke(uint64_t a1)
{
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "successfullyStaged", 0));
  id v3 = [v2 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      id v6 = 0LL;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v16 + 1) + 8LL * (void)v6);
        id v8 = objc_autoreleasePoolPush();
        id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) successfullyStaged]);
        id v10 = [v9 safeObjectForKey:v7 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

        if (v11)
        {
          __int128 v12 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
          if (!v12)
          {
            uint64_t v13 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
            uint64_t v14 = *(void *)(*(void *)(a1 + 40) + 8LL);
            uint64_t v15 = *(void **)(v14 + 40);
            *(void *)(v14 + 40) = v13;

            __int128 v12 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
          }

          [v12 setSafeObject:v11 forKey:v7];
        }

        objc_autoreleasePoolPop(v8);
        id v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }

    while (v4);
  }
}

+ (void)controlAlreadyDownloadedDescriptors:(id)a3 withSetConfigurations:(id)a4 withSetTargets:(id)a5 withScheduledJobs:(id)a6
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = a6;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v14 = v13;
  if (v13)
  {
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v13 autoStagerFSM]);
    __int128 v16 = -[MADAutoAssetStagerParam initWithAlreadyDownloadedDescriptors:withSetConfigurations:withSetTargets:withScheduledJobs:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithAlreadyDownloadedDescriptors:withSetConfigurations:withSetTargets:withScheduledJobs:",  v9,  v10,  v11,  v12);
    [v15 postEvent:@"ControlAlreadyDownloaded" withInfo:v16];
  }

  else
  {
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v17 oslog]);

    if (os_log_type_enabled((os_log_t)v15, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager controlAlreadyDownloadedDescriptors:withSetConfigurations:withSetTargets:withScheduledJobs:].cold.1();
    }
  }
}

+ (id)controlConvertStagedToDownloaded:(id)a3
{
  id v3 = a3;
  uint64_t v16 = 0LL;
  __int128 v17 = &v16;
  uint64_t v18 = 0x3032000000LL;
  __int128 v19 = __Block_byref_object_copy__5;
  uint64_t v20 = __Block_byref_object_dispose__5;
  id v21 = 0LL;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
    uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = __55__MADAutoAssetStager_controlConvertStagedToDownloaded___block_invoke;
    block[3] = &unk_34DE88;
    uint64_t v15 = &v16;
    uint64_t v13 = v5;
    id v14 = v3;
    dispatch_sync(v7, block);

    id v8 = v13;
  }

  else
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 oslog]);

    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager controlConvertStagedToDownloaded:].cold.1();
    }
  }

  id v10 = (id)v17[5];
  _Block_object_dispose(&v16, 8);

  return v10;
}

void __55__MADAutoAssetStager_controlConvertStagedToDownloaded___block_invoke(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _controlConvertStagedToDownloaded:*(void *)(a1 + 40)]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

+ (void)controlForcePurge:(id)a3
{
  id v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
    uint64_t v7 = -[MADAutoAssetStagerParam initWithAssetType:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithAssetType:",  v3);
    [v6 postEvent:@"ControlForceUnstage" withInfo:v7];
  }

  else
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager controlForcePurge:].cold.1();
    }
  }
}

+ (void)controlStatisticsClientRepliesSuccess:(id *)a3 clientRepliesFailure:(id *)a4 totalStaged:(id *)a5 totalUnstaged:(id *)a6 clearingAfter:(BOOL)a7
{
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v13 = v12;
  uint64_t v43 = 0LL;
  id v44 = &v43;
  uint64_t v45 = 0x3032000000LL;
  id v46 = __Block_byref_object_copy__5;
  id v47 = __Block_byref_object_dispose__5;
  id v48 = 0LL;
  uint64_t v37 = 0LL;
  v38 = &v37;
  uint64_t v39 = 0x3032000000LL;
  v40 = __Block_byref_object_copy__5;
  id v41 = __Block_byref_object_dispose__5;
  id v42 = 0LL;
  uint64_t v31 = 0LL;
  v32 = &v31;
  uint64_t v33 = 0x3032000000LL;
  v34 = __Block_byref_object_copy__5;
  id v35 = __Block_byref_object_dispose__5;
  id v36 = 0LL;
  uint64_t v25 = 0LL;
  __int128 v26 = &v25;
  uint64_t v27 = 0x3032000000LL;
  __int128 v28 = __Block_byref_object_copy__5;
  id v29 = __Block_byref_object_dispose__5;
  id v30 = 0LL;
  if (v12)
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 autoStagerFSM]);
    uint64_t v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    v18[2] = __121__MADAutoAssetStager_controlStatisticsClientRepliesSuccess_clientRepliesFailure_totalStaged_totalUnstaged_clearingAfter___block_invoke;
    v18[3] = &unk_34E5B8;
    uint64_t v20 = &v43;
    __int128 v19 = v13;
    id v21 = &v37;
    uint64_t v22 = &v31;
    uint64_t v23 = &v25;
    BOOL v24 = a7;
    dispatch_sync(v15, v18);

    if (a3) {
      *a3 = (id) v44[5];
    }
    if (a4) {
      *a4 = (id) v38[5];
    }
    if (a5) {
      *a5 = (id) v32[5];
    }
    if (a6) {
      *a6 = (id) v26[5];
    }
    uint64_t v16 = v19;
  }

  else
  {
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager controlStatisticsClientRepliesSuccess:clientRepliesFailure:totalStaged:totalUnstaged:clearingAfter:].cold.1();
    }
  }

  _Block_object_dispose(&v25, 8);
  _Block_object_dispose(&v31, 8);

  _Block_object_dispose(&v37, 8);
  _Block_object_dispose(&v43, 8);
}

void __121__MADAutoAssetStager_controlStatisticsClientRepliesSuccess_clientRepliesFailure_totalStaged_totalUnstaged_clearingAfter___block_invoke( uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) statisticsClientRepliesSuccess]);
  id v3 = [v2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) statisticsClientRepliesFailure]);
  id v7 = [v6 copy];
  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) statisticsStaged]);
  id v11 = [v10 copy];
  uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8LL);
  uint64_t v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v11;

  id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) statisticsUnstaged]);
  id v15 = [v14 copy];
  uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8LL);
  __int128 v17 = *(void **)(v16 + 40);
  *(void *)(v16 + 40) = v15;

  if (*(_BYTE *)(a1 + 72))
  {
    uint64_t v18 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetControlStatisticsByCommand);
    [*(id *)(a1 + 32) setStatisticsClientRepliesSuccess:v18];

    __int128 v19 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetControlStatisticsByCommand);
    [*(id *)(a1 + 32) setStatisticsClientRepliesFailure:v19];

    uint64_t v20 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetControlStatisticsBySize);
    [*(id *)(a1 + 32) setStatisticsStaged:v20];

    id v21 = objc_alloc_init(&OBJC_CLASS___MANAutoAssetControlStatisticsBySize);
    [*(id *)(a1 + 32) setStatisticsUnstaged:v21];
  }

+ (void)controlEliminateSelector:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
    id v7 = -[MADAutoAssetStagerParam initWithAssetSelector:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithAssetSelector:",  v3);
    [v6 postEvent:@"ControlEliminateAssetSelector" withInfo:v7];
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager controlEliminateSelector:].cold.1();
    }
  }
}

+ (void)controlEliminateSetConfiguration:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
    id v7 = -[MADAutoAssetStagerParam initWithSetConfiguration:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithSetConfiguration:",  v3);
    [v6 postEvent:@"ControlEliminateSetIdentifier" withInfo:v7];
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager controlEliminateSetConfiguration:].cold.1();
    }
  }
}

+ (void)garbageCollectEliminateSelector:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
    id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = __54__MADAutoAssetStager_garbageCollectEliminateSelector___block_invoke;
    v10[3] = &unk_34DB98;
    id v11 = v5;
    id v12 = v3;
    dispatch_sync(v7, v10);
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager garbageCollectEliminateSelector:].cold.1();
    }
  }
}

void __54__MADAutoAssetStager_garbageCollectEliminateSelector___block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) successfullyStaged]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) persistedEntryID]);
  id v4 = [v2 safeObjectForKey:v3 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  id v6 = *(void **)(a1 + 32);
  if (v5)
  {
    [v6 _removeDescriptorFromSuccessfullyStaged:v5 message:@"eliminated selector due to garbage collection"];
    [*(id *)(a1 + 32) _removeStagedAssetFromFilesystem:v5 forHistoryOperation:404];
  }

  else
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 logger]);
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 oslog]);

    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) summary]);
      id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) summary]);
      int v11 = 138543618;
      id v12 = v9;
      __int16 v13 = 2114;
      id v14 = v10;
      _os_log_impl( &dword_0,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[AUTO-STAGER] {garbageCollectEliminateSelector} not staged | eliminateSelector:%{public}@",  (uint8_t *)&v11,  0x16u);
    }
  }
}

+ (void)extendSummaryWithDeterminedAssets:(id)a3 basedOnControl:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v8 = v7;
  if (v7)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 autoStagerFSM]);
    id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = __71__MADAutoAssetStager_extendSummaryWithDeterminedAssets_basedOnControl___block_invoke;
    block[3] = &unk_34DB70;
    id v14 = v8;
    id v15 = v5;
    id v16 = v6;
    dispatch_sync(v10, block);
  }

  else
  {
    int v11 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager extendSummaryWithDeterminedAssets:basedOnControl:].cold.1();
    }
  }
}

id __71__MADAutoAssetStager_extendSummaryWithDeterminedAssets_basedOnControl___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _extendSummaryWithDeterminedAssets:*(void *)(a1 + 40) basedOnControl:*(void *)(a1 + 48)];
}

+ (void)extendSummaryWithAvailableForStagingAssets:(id)a3
{
  id v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  id v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
    id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = __65__MADAutoAssetStager_extendSummaryWithAvailableForStagingAssets___block_invoke;
    v10[3] = &unk_34DB98;
    id v11 = v5;
    id v12 = v3;
    dispatch_sync(v7, v10);
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager extendSummaryWithAvailableForStagingAssets:].cold.1();
    }
  }
}

id __65__MADAutoAssetStager_extendSummaryWithAvailableForStagingAssets___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _extendSummaryWithAvailableForStagingAssets:*(void *)(a1 + 40)];
}

+ (void)extendSummaryWithStagingAssets:(id)a3 basedOnControl:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v8 = v7;
  if (v7)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 autoStagerFSM]);
    id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = __68__MADAutoAssetStager_extendSummaryWithStagingAssets_basedOnControl___block_invoke;
    block[3] = &unk_34DB70;
    id v14 = v8;
    id v15 = v5;
    id v16 = v6;
    dispatch_sync(v10, block);
  }

  else
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager extendSummaryWithDeterminedAssets:basedOnControl:].cold.1();
    }
  }
}

id __68__MADAutoAssetStager_extendSummaryWithStagingAssets_basedOnControl___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _extendSummaryWithStagingAssets:*(void *)(a1 + 40) basedOnControl:*(void *)(a1 + 48)];
}

+ (void)extendSummaryWithStagedAssets:(id)a3 basedOnControl:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  uint64_t v8 = v7;
  if (v7)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 autoStagerFSM]);
    id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = __67__MADAutoAssetStager_extendSummaryWithStagedAssets_basedOnControl___block_invoke;
    block[3] = &unk_34DB70;
    id v14 = v8;
    id v15 = v5;
    id v16 = v6;
    dispatch_sync(v10, block);
  }

  else
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager extendSummaryWithStagedAssets:basedOnControl:].cold.1();
    }
  }
}

id __67__MADAutoAssetStager_extendSummaryWithStagedAssets_basedOnControl___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _extendSummaryWithStagedAssets:*(void *)(a1 + 40) basedOnControl:*(void *)(a1 + 48)];
}

- (id)_controlConvertStagedToDownloaded:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 assetType]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSpecifier]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v4 assetVersion]);
  id v11 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v7,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v8,  v9,  v10);

  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([v11 persistedEntryID]);
  id v14 = [v12 safeObjectForKey:v13 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
  id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

  if (!v15)
  {
    __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v26 oslog]);

    if (!os_log_type_enabled((os_log_t)v22, OS_LOG_TYPE_DEFAULT))
    {
LABEL_9:

      goto LABEL_10;
    }

    BOOL v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    uint64_t v25 = (MADAutoAssetStagerParam *)objc_claimAutoreleasedReturnValue([v4 summary]);
    int v33 = 138543618;
    v34 = v24;
    __int16 v35 = 2114;
    id v36 = v25;
    _os_log_impl( &dword_0,  (os_log_t)v22,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_controlConvertStagedToDownloaded} NO-IMMEDIATE-PROMOTION: not staged | selectorToBecomeDownloaded:%{public}@",  (uint8_t *)&v33,  0x16u);
LABEL_8:

    goto LABEL_9;
  }

  -[MADAutoAssetStager _removeDescriptorFromSuccessfullyStaged:message:]( self,  "_removeDescriptorFromSuccessfullyStaged:message:",  v15,  @"IMMEDIATE-PROMOTION");
  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  __int128 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 oslog]);

  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    __int128 v19 = (MADAutoAssetStagerParam *)objc_claimAutoreleasedReturnValue([v4 summary]);
    int v33 = 138543618;
    v34 = v18;
    __int16 v35 = 2114;
    id v36 = v19;
    _os_log_impl( &dword_0,  v17,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[AUTO-STAGER] {_controlConvertStagedToDownloaded} IMMEDIATE-PROMOTION | selector:%{public}@",  (uint8_t *)&v33,  0x16u);
  }

  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  id v21 = [v20 count];

  if (!v21)
  {
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    uint64_t v23 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
    BOOL v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
    uint64_t v25 = -[MADAutoAssetStagerParam initWithSafeSummary:](v23, "initWithSafeSummary:", v24);
    [v22 postEvent:@"LastStagedJustPromoted" withInfo:v25];
    goto LABEL_8;
  }

- (void)_extendSummaryWithDeterminedAssets:(id)a3 basedOnControl:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging", 0LL));
  id v11 = [v10 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v18;
    do
    {
      id v14 = 0LL;
      do
      {
        if (*(void *)v18 != v13) {
          objc_enumerationMutation(v10);
        }
        uint64_t v15 = *(void *)(*((void *)&v17 + 1) + 8LL * (void)v14);
        id v16 = objc_autoreleasePoolPush();
        if (+[MADAutoAssetControlManager descriptorToBeIncluded:basedOnControl:]( &OBJC_CLASS___MADAutoAssetControlManager,  "descriptorToBeIncluded:basedOnControl:",  v15,  v7))
        {
          -[MADAutoAssetStager _addDescriptor:withRepresentation:toSummary:]( self,  "_addDescriptor:withRepresentation:toSummary:",  v15,  601LL,  v6);
        }

        objc_autoreleasePoolPop(v16);
        id v14 = (char *)v14 + 1;
      }

      while (v12 != v14);
      id v12 = [v10 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }

    while (v12);
  }
}

- (void)_extendSummaryWithAvailableForStagingAssets:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingRequiredByTarget](self, "availableForStagingRequiredByTarget"));
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = __66__MADAutoAssetStager__extendSummaryWithAvailableForStagingAssets___block_invoke;
  v13[3] = &unk_34E5E0;
  v13[4] = self;
  id v8 = v4;
  id v14 = v8;
  [v7 enumerateKeysAndObjectsUsingBlock:v13];

  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingOptionalByTarget](self, "availableForStagingOptionalByTarget"));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  v11[2] = __66__MADAutoAssetStager__extendSummaryWithAvailableForStagingAssets___block_invoke_2;
  v11[3] = &unk_34E5E0;
  v11[4] = self;
  id v12 = v8;
  id v10 = v8;
  [v9 enumerateKeysAndObjectsUsingBlock:v11];
}

void __66__MADAutoAssetStager__extendSummaryWithAvailableForStagingAssets___block_invoke( uint64_t a1,  void *a2,  void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v6)
  {
    __int128 v14 = 0u;
    __int128 v15 = 0u;
    __int128 v12 = 0u;
    __int128 v13 = 0u;
    id v8 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v13;
      do
      {
        id v11 = 0LL;
        do
        {
          if (*(void *)v13 != v10) {
            objc_enumerationMutation(v7);
          }
          [*(id *)(a1 + 32) _addDescriptor:*(void *)(*((void *)&v12 + 1) + 8 * (void)v11) withRepresentation:601 toSummary:*(void *)(a1 + 40) withStageGroupType:1 withTargetOS:v5];
          id v11 = (char *)v11 + 1;
        }

        while (v9 != v11);
        id v9 = [v7 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }

      while (v9);
    }
  }
}

void __66__MADAutoAssetStager__extendSummaryWithAvailableForStagingAssets___block_invoke_2( uint64_t a1,  void *a2,  void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v6)
  {
    __int128 v14 = 0u;
    __int128 v15 = 0u;
    __int128 v12 = 0u;
    __int128 v13 = 0u;
    id v8 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v13;
      do
      {
        id v11 = 0LL;
        do
        {
          if (*(void *)v13 != v10) {
            objc_enumerationMutation(v7);
          }
          [*(id *)(a1 + 32) _addDescriptor:*(void *)(*((void *)&v12 + 1) + 8 * (void)v11) withRepresentation:601 toSummary:*(void *)(a1 + 40) withStageGroupType:2 withTargetOS:v5];
          id v11 = (char *)v11 + 1;
        }

        while (v9 != v11);
        id v9 = [v7 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }

      while (v9);
    }
  }
}

- (void)_extendSummaryWithStagingAssets:(id)a3 basedOnControl:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt", 0LL));
  id v11 = [v10 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v18;
    do
    {
      __int128 v14 = 0LL;
      do
      {
        if (*(void *)v18 != v13) {
          objc_enumerationMutation(v10);
        }
        uint64_t v15 = *(void *)(*((void *)&v17 + 1) + 8LL * (void)v14);
        id v16 = objc_autoreleasePoolPush();
        if (+[MADAutoAssetControlManager descriptorToBeIncluded:basedOnControl:]( &OBJC_CLASS___MADAutoAssetControlManager,  "descriptorToBeIncluded:basedOnControl:",  v15,  v7))
        {
          -[MADAutoAssetStager _addDescriptor:withRepresentation:toSummary:]( self,  "_addDescriptor:withRepresentation:toSummary:",  v15,  602LL,  v6);
        }

        objc_autoreleasePoolPop(v16);
        __int128 v14 = (char *)v14 + 1;
      }

      while (v12 != v14);
      id v12 = [v10 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }

    while (v12);
  }
}

- (void)_extendSummaryWithStagedAssets:(id)a3 basedOnControl:(id)a4
{
  id v18 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  id v9 = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v21;
    do
    {
      id v12 = 0LL;
      do
      {
        if (*(void *)v21 != v11) {
          objc_enumerationMutation(obj);
        }
        uint64_t v13 = *(void *)(*((void *)&v20 + 1) + 8LL * (void)v12);
        __int128 v14 = objc_autoreleasePoolPush();
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
        id v16 = [v15 safeObjectForKey:v13 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
        __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

        if (+[MADAutoAssetControlManager descriptorToBeIncluded:basedOnControl:]( &OBJC_CLASS___MADAutoAssetControlManager,  "descriptorToBeIncluded:basedOnControl:",  v17,  v6))
        {
          -[MADAutoAssetStager _addDescriptor:withRepresentation:toSummary:]( self,  "_addDescriptor:withRepresentation:toSummary:",  v17,  603LL,  v18);
        }

        objc_autoreleasePoolPop(v14);
        id v12 = (char *)v12 + 1;
      }

      while (v10 != v12);
      id v10 = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
    }

    while (v10);
  }
}

- (void)_addDescriptor:(id)a3 withRepresentation:(int64_t)a4 toSummary:(id)a5 withStageGroupType:(unint64_t)a6 withTargetOS:(id)a7
{
  id v9 = a3;
  id v48 = a5;
  id v47 = a7;
  id v10 = [v9 downloadedNetworkBytes];
  if (!v10) {
    id v10 = [v9 downloadedFilesystemBytes];
  }
  id v45 = v10;
  uint64_t v11 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSpecifier]);
  __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([v9 assetVersion]);
  id v49 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v11,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v12,  v13,  v14);

  id v44 = objc_alloc(&OBJC_CLASS___MAAutoAssetStatus);
  uint64_t v43 = objc_alloc_init(&OBJC_CLASS___MAAutoAssetNotifications);
  id v42 = (void *)objc_claimAutoreleasedReturnValue([v9 metadata]);
  unsigned int v41 = [v9 downloadUserInitiated];
  id v15 = [v9 downloadedFilesystemBytes];
  unsigned __int8 v16 = [v9 isPatch];
  __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v9 patchedFromBaseSelector]);
  id v18 = [v9 patchedFromBaseFilesystemBytes];
  LOBYTE(v11) = [v9 patchingAttempted];
  unsigned __int8 v19 = [v9 stagedPriorToAvailable];
  __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v9 stagedFromOSVersion]);
  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v9 stagedFromBuildVersion]);
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v9 patchingAttemptError]);
  BYTE1(v37) = v19;
  LOBYTE(v37) = (_BYTE)v11;
  LOBYTE(v36) = v16;
  __int128 v23 = -[MAAutoAssetStatus initWithAssetSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:withCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( v44,  "initWithAssetSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeen Locked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes :withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:wi thStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:withCurrentLockUsage:withAvailable ForUseError:withPatchingAttemptError:withNewerVersionError:",  v49,  v43,  v42,  0LL,  1LL,  v41,  0LL,  v45,  v15,  v36,  v17,  v18,  v37,  v20,  v21,  0LL,  0LL,  v22,  0LL);

  BOOL v24 = objc_alloc(&OBJC_CLASS___MAAutoAssetSummary);
  LOBYTE(v15) = objc_opt_respondsToSelector( v24,  "initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:with ScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMon itorCount:withMaximumClientCount:withTotalClientCount:withIsSecureMobileAsset:withPersonalizationStatu s:withPrePersonalizationStatus:withGraftStatus:withGraftPoint:withStageGroupType:withTargetOS:");

  if ((v15 & 1) != 0)
  {
    unsigned __int8 v25 = +[MADAutoAssetSecure isSecureAsset:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isSecureAsset:forDescriptor:",  @"{addDescriptor}",  v9);
    char v26 = !+[MADAutoAssetSecure isPersonalizationRequired:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPersonalizationRequired:forDescriptor:",  @"{addDescriptor}",  v9);
    unsigned __int8 v27 = +[MADAutoAssetSecure isPrePersonalized:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isPrePersonalized:forDescriptor:",  @"{addDescriptor}",  v9);
    unsigned int v28 = +[MADAutoAssetSecure isGraftedOrMounted:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "isGraftedOrMounted:forDescriptor:",  @"{addDescriptor}",  v9);
    char v29 = v28;
    if (v28) {
      id v30 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetSecure getGraftPath:forDescriptor:]( &OBJC_CLASS___MADAutoAssetSecure,  "getGraftPath:forDescriptor:",  @"{addDescriptor}",  v9));
    }
    else {
      id v30 = 0LL;
    }
    int v33 = v47;
    BYTE3(v38) = v29;
    BYTE2(v38) = v27;
    BYTE1(v38) = v26;
    LOBYTE(v38) = v25;
    id v31 = v49;
    v32 = -[MAAutoAssetSummary initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:withScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMonitorCount:withMaximumClientCount:withTotalClientCount:withIsSecureMobileAsset:withPersonalizationStatus:withPrePersonalizationStatus:withGraftStatus:withGraftPoint:withStageGroupType:withTargetOS:]( [MAAutoAssetSummary alloc],  "initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:withSchedu ledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMonitorCount:wi thMaximumClientCount:withTotalClientCount:withIsSecureMobileAsset:withPersonalizationStatus:withPrePersonali zationStatus:withGraftStatus:withGraftPoint:withStageGroupType:withTargetOS:",  v49,  a4,  [v9 isPatch],  objc_msgSend(v9, "preSoftwareUpdateAssetStaging"),  v23,  0,  0,  0,  0,  0,  0,  0,  v38,  v30,  a6,  v47);
  }

  else
  {
    id v31 = v49;
    v32 = -[MAAutoAssetSummary initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:withScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMonitorCount:withMaximumClientCount:withTotalClientCount:]( [MAAutoAssetSummary alloc],  "initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:withSchedu ledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMonitorCount:wi thMaximumClientCount:withTotalClientCount:",  v49,  a4,  [v9 isPatch],  objc_msgSend(v9, "preSoftwareUpdateAssetStaging"),  v23,  0,  0,  0,  0,  0,  0,  0);
    int v33 = v47;
  }

  if (v32)
  {
    [v48 addObject:v32];
  }

  else
  {
    v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    __int16 v35 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 oslog]);

    if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetStager _addDescriptor:withRepresentation:toSummary:withStageGroupType:withTargetOS:].cold.1();
    }
  }
}

- (void)_addDescriptor:(id)a3 withRepresentation:(int64_t)a4 toSummary:(id)a5
{
}

+ (void)resumeFromPersisted
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  id v5 = v2;
  if (v2)
  {
    id v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v2 autoStagerFSM]);
    id v4 = -[MADAutoAssetStagerParam initWithSafeSummary:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithSafeSummary:",  @"resumeFromPersisted");
    -[dispatch_queue_s postEvent:withInfo:](v3, "postEvent:withInfo:", @"ResumeFromPersisted", v4);
  }

  else
  {
    id v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager selectDispatchQueue:]( &OBJC_CLASS___MADAutoAssetControlManager,  "selectDispatchQueue:",  0LL));
    dispatch_async(v3, &__block_literal_global_1062);
  }
}

void __41__MADAutoAssetStager_resumeFromPersisted__block_invoke(id a1)
{
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
  uint64_t v2 = (os_log_s *)objc_claimAutoreleasedReturnValue([v1 oslog]);

  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    __41__MADAutoAssetStager_resumeFromPersisted__block_invoke_cold_1();
  }

  +[MADAutoAssetControlManager stagerResumed:withSetLookupResults:]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerResumed:withSetLookupResults:",  0LL,  0LL);
}

+ (int64_t)persistedStagedCount
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  id v3 = v2;
  uint64_t v13 = 0LL;
  __int128 v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  uint64_t v16 = -1LL;
  if (v2)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 autoStagerFSM]);
    id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = __42__MADAutoAssetStager_persistedStagedCount__block_invoke;
    v10[3] = &unk_34DB48;
    id v12 = &v13;
    uint64_t v11 = v3;
    dispatch_sync(v5, v10);

    id v6 = v11;
  }

  else
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SUCoreLog sharedLogger](&OBJC_CLASS___SUCoreLog, "sharedLogger"));
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 oslog]);

    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      +[MADAutoAssetStager persistedStagedCount].cold.1();
    }
  }

  int64_t v8 = v14[3];
  _Block_object_dispose(&v13, 8);

  return v8;
}

void __42__MADAutoAssetStager_persistedStagedCount__block_invoke(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) persistedState]);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 persistedEntryCount:@"AUTO-STAGER"];
}

- (int64_t)action_LoadPersistedDecideResume:(id)a3 error:(id *)a4
{
  id v164 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  [v7 loadPersistedState:@"LoadPersistedDecideResume"];

  int64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedConfig]);
  v175 = (__CFString *)objc_claimAutoreleasedReturnValue([v9 stringForKey:@"lastStagingFromOSVersion"]);

  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 persistedConfig]);
  v172 = (__CFString *)objc_claimAutoreleasedReturnValue([v11 stringForKey:@"lastStagingFromBuildVersion"]);

  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedConfig]);
  uint64_t v14 = objc_claimAutoreleasedReturnValue([v13 stringForKey:@"assetTargetOSVersion"]);

  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 persistedConfig]);
  uint64_t v17 = objc_claimAutoreleasedReturnValue([v16 stringForKey:@"assetTargetBuildVersion"]);

  id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  unsigned __int8 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedConfig]);
  unsigned int v181 = [v19 BOOLeanForKey:@"modeByGroups"];

  __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v20 persistedConfig]);
  v166 = (__CFString *)[v21 ullForKey:@"candidateAssetCount"];

  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v22 persistedConfig]);
  BOOL v24 = (__CFString *)[v23 ullForKey:@"determinedAvailableAssetCount"];

  unsigned __int8 v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  char v26 = (void *)objc_claimAutoreleasedReturnValue([v25 persistedConfig]);
  id v27 = [v26 ullForKey:@"activelyStagingAssetCount"];

  unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  char v29 = (void *)objc_claimAutoreleasedReturnValue([v28 persistedConfig]);
  id v30 = [v29 ullForKey:@"awaitingStagingAssetCount"];

  id v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  v32 = (void *)objc_claimAutoreleasedReturnValue([v31 persistedConfig]);
  unint64_t v33 = (unint64_t)[v32 ullForKey:@"stagedAssetCount"];

  v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  __int16 v35 = (void *)objc_claimAutoreleasedReturnValue([v34 persistedConfig]);
  id v36 = [v35 ullForKey:@"stagedAssetTotalContentBytes"];

  unint64_t v159 = (unint64_t)v36;
  *(void *)&__int128 v160 = v30;
  v161 = v24;
  unint64_t v162 = v33;
  *((void *)&v160 + 1) = v27;
  -[MADAutoAssetStager _logPersistedConfigLoad:lastStagingFromOSVersion:lastStagingFromBuildVersion:assetTargetOSVersion:assetTargetBuildVersion:usingModeByGroups:candidateAssetCount:determinedAvailableAssetCount:activelyStagingAssetCount:awaitingStagingAssetCount:stagedAssetCount:stagedAssetTotalContentBytes:message:]( self,  "_logPersistedConfigLoad:lastStagingFromOSVersion:lastStagingFromBuildVersion:assetTargetOSVersion:assetTargetBuildVe rsion:usingModeByGroups:candidateAssetCount:determinedAvailableAssetCount:activelyStagingAssetCount:awaitingStagingA ssetCount:stagedAssetCount:stagedAssetTotalContentBytes:message:",  @"LoadPersistedDecideResume",  v175,  v172,  v14,  v17,  v181,  v166,  v24,  v27,  v30,  v33,  v36,  @"loaded configuration to determine whether any stager operation had been in progress");
  -[MADAutoAssetStager loadPersistedSetLookupResults](self, "loadPersistedSetLookupResults");
  -[MADAutoAssetStager loadPersistedTargetLookupResults](self, "loadPersistedTargetLookupResults");
  -[MADAutoAssetStager loadPersistedAvailableForStagingByTarget](self, "loadPersistedAvailableForStagingByTarget");
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  uint64_t v38 = objc_alloc(&OBJC_CLASS___NSString);
  uint64_t v39 = @"N";
  if (v175) {
    v40 = v175;
  }
  else {
    v40 = @"N";
  }
  if (v172) {
    unsigned int v41 = v172;
  }
  else {
    unsigned int v41 = @"N";
  }
  v170 = (void *)v17;
  v171 = (void *)v14;
  if (v14) {
    id v42 = (const __CFString *)v14;
  }
  else {
    id v42 = @"N";
  }
  if (v17) {
    uint64_t v39 = (const __CFString *)v17;
  }
  v165 = -[NSString initWithFormat:]( v38,  "initWithFormat:",  @"lastStagingFrom:%@(%@),assetTarget:%@(%@)",  v40,  v41,  v42,  v39);
  uint64_t v43 = &MobileAssetKeyManager__metaData.ivars;
  if (v175 && v172 && v171 && v17)
  {
    if (v181)
    {
      -[MADAutoAssetStager setStagingClientChosen:](self, "setStagingClientChosen:", 1LL);
      -[MADAutoAssetStager setStagingClientUsingGroups:](self, "setStagingClientUsingGroups:", 1LL);
    }

    v163 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"candidates:%llu,determinedAvailable:%llu,activelyStaging:%llu,awaitingStaging:%llu | [stagedAssets]count:%llu,totalContentBytes:%llu",  v166,  v24,  v27,  v30,  v33,  v36);
    id v44 = v164;
    if (v33 && v159)
    {
      unsigned int v45 = -[MADAutoAssetStager alwaysPromoteStagedAssets](self, "alwaysPromoteStagedAssets");
      id v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromOSVersion](self, "stagingFromOSVersion"));
      unsigned __int8 v47 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v46, v171);
      if (v45)
      {
        if ((v47 & 1) != 0)
        {
          id v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](self, "stagingFromBuildVersion"));
          unsigned int v49 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v48, v17);

          if (v49)
          {
            int64_t v50 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            id v51 = (os_log_s *)objc_claimAutoreleasedReturnValue([v50 oslog]);

            if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
            {
              id v52 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
              *(_DWORD *)buf = 138543874;
              v196 = v52;
              __int16 v197 = 2114;
              v198 = (__CFString *)v165;
              __int16 v199 = 2114;
              v200 = v163;
              _os_log_impl( &dword_0,  v51,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {LoadPersistedDecideResume} have previously staged content when configured to always promo te (and now running target OS) | %{public}@ | %{public}@",  buf,  0x20u);
            }

            char v53 = 1;
LABEL_52:

            __int16 v58 = @"ResumePromotingAllStaged";
            char v57 = v53;
            goto LABEL_65;
          }
        }

        else
        {
        }

        __int16 v72 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
        id v51 = (os_log_s *)objc_claimAutoreleasedReturnValue([v72 oslog]);

        if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
        {
          v73 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
          *(_DWORD *)buf = 138543874;
          v196 = v73;
          __int16 v197 = 2114;
          v198 = (__CFString *)v165;
          __int16 v199 = 2114;
          v200 = v163;
          _os_log_impl( &dword_0,  v51,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {LoadPersistedDecideResume} have previously staged content when configured to always promote(not running target OS) | %{public}@ | %{public}@",  buf,  0x20u);
        }

        char v53 = 0;
        goto LABEL_52;
      }

      if ((v47 & 1) != 0)
      {
        __int16 v62 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](self, "stagingFromBuildVersion"));
        unsigned int v63 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v62, v17);

        if (v63)
        {
          id v64 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
          v65 = (os_log_s *)objc_claimAutoreleasedReturnValue([v64 oslog]);

          if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
          {
            __int16 v66 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            *(_DWORD *)buf = 138543874;
            v196 = v66;
            __int16 v197 = 2114;
            v198 = (__CFString *)v165;
            __int16 v199 = 2114;
            v200 = v163;
            _os_log_impl( &dword_0,  v65,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {LoadPersistedDecideResume} have previously staged content now applicable to the currently r unning OS (migrating) | %{public}@ | %{public}@",  buf,  0x20u);
          }

          char v57 = 1;
          __int16 v58 = @"ResumeRunningTargetVersion";
          goto LABEL_65;
        }
      }

      else
      {
      }

      __int16 v74 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromOSVersion](self, "stagingFromOSVersion"));
      if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v74, v175) & 1) != 0)
      {
        v75 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](self, "stagingFromBuildVersion"));
        unsigned int v76 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v75, v172);

        if (v76)
        {
          v77 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
          __int16 v78 = (os_log_s *)objc_claimAutoreleasedReturnValue([v77 oslog]);

          if (os_log_type_enabled(v78, OS_LOG_TYPE_DEFAULT))
          {
            v79 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            *(_DWORD *)buf = 138543874;
            v196 = v79;
            __int16 v197 = 2114;
            v198 = (__CFString *)v165;
            __int16 v199 = 2114;
            v200 = v163;
            _os_log_impl( &dword_0,  v78,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {LoadPersistedDecideResume} have content staged from currently running OS (resumed to staged) | %{public}@ | %{public}@",  buf,  0x20u);
          }

          char v57 = 0;
          __int16 v58 = @"ResumeStaged";
          goto LABEL_65;
        }
      }

      else
      {
      }

      v80 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int16 v60 = (os_log_s *)objc_claimAutoreleasedReturnValue([v80 oslog]);

      if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
      {
        id v61 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        *(_DWORD *)buf = 138543874;
        v196 = v61;
        __int16 v197 = 2114;
        v198 = (__CFString *)v165;
        __int16 v199 = 2114;
        v200 = v163;
        __int16 v68 = "%{public}@\n"
              "[AUTO-STAGER] {LoadPersistedDecideResume} staged content from different OS (purging) | %{public}@ | %{public}@";
        goto LABEL_62;
      }

      goto LABEL_64;
    }

    if (v33 | v159)
    {
      v59 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int16 v60 = (os_log_s *)objc_claimAutoreleasedReturnValue([v59 oslog]);

      if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
      {
        id v61 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        *(_DWORD *)buf = 138543874;
        v196 = v61;
        __int16 v197 = 2114;
        v198 = (__CFString *)v165;
        __int16 v199 = 2114;
        v200 = v163;
        _os_log_error_impl( &dword_0,  v60,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {LoadPersistedDecideResume} inconsistency in staged information (purging) | %{public}@ | %{public}@",  buf,  0x20u);
LABEL_63:

        goto LABEL_64;
      }

      goto LABEL_64;
    }

    if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups") || !v24)
    {
      if (!v24)
      {
        v146 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
        __int16 v60 = (os_log_s *)objc_claimAutoreleasedReturnValue([v146 oslog]);

        BOOL v147 = os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT);
        if (v166)
        {
          if (!v147) {
            goto LABEL_64;
          }
          id v61 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
          *(_DWORD *)buf = 138543874;
          v196 = v61;
          __int16 v197 = 2114;
          v198 = (__CFString *)v165;
          __int16 v199 = 2114;
          v200 = v163;
          __int16 v68 = "%{public}@\n"
                "[AUTO-STAGER] {LoadPersistedDecideResume} had been determining from candidates but no determine attempt "
                "had found any content to be staged (resuming determining) | %{public}@ | %{public}@";
        }

        else
        {
          if (!v147) {
            goto LABEL_64;
          }
          id v61 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
          *(_DWORD *)buf = 138543874;
          v196 = v61;
          __int16 v197 = 2114;
          v198 = (__CFString *)v165;
          __int16 v199 = 2114;
          v200 = v163;
          __int16 v68 = "%{public}@\n"
                "[AUTO-STAGER] {LoadPersistedDecideResume} no staging was in progress / no candidates / no staged content"
                " (purging to start clean) | %{public}@ | %{public}@";
        }

        goto LABEL_62;
      }
    }

    else if (v160 != 0)
    {
      v67 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int16 v60 = (os_log_s *)objc_claimAutoreleasedReturnValue([v67 oslog]);

      if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
      {
        id v61 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        *(_DWORD *)buf = 138543874;
        v196 = v61;
        __int16 v197 = 2114;
        v198 = (__CFString *)v165;
        __int16 v199 = 2114;
        v200 = v163;
        __int16 v68 = "%{public}@\n"
              "[AUTO-STAGER] {LoadPersistedDecideResume} had been staging (resuming staging) | %{public}@ | %{public}@";
LABEL_62:
        _os_log_impl(&dword_0, v60, OS_LOG_TYPE_DEFAULT, v68, buf, 0x20u);
        goto LABEL_63;
      }

id __61__MADAutoAssetStager_action_LoadPersistedDecideResume_error___block_invoke(uint64_t a1)
{
  return +[MADAutoAssetControlManager stagerResumed:withSetLookupResults:]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerResumed:withSetLookupResults:",  *(void *)(a1 + 32),  *(void *)(a1 + 40));
}

- (int64_t)action_ResumingNextAvailableBeginDownload:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetStager _setupAwaitingStagingAndBeginFirstDownload](self, "_setupAwaitingStagingAndBeginFirstDownload");
  return 0LL;
}

- (int64_t)action_ControlUnstagedDecideCancelJob:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 assetType]);
  LODWORD(v5) = -[MADAutoAssetStager _isAssetTypeInvolvedInStaging:](self, "_isAssetTypeInvolvedInStaging:", v8);

  if ((_DWORD)v5)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v10 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
    id v12 = -[MADAutoAssetStagerParam initWithSafeSummary:](v10, "initWithSafeSummary:", v11);
    [v9 followupEvent:@"ControlUnstagedCancelJob" withInfo:v12];
  }

  return 0LL;
}

- (int64_t)action_ControlUnstagedDecideRemoveAll:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 assetType]);
  LODWORD(v5) = -[MADAutoAssetStager _isAssetTypeInvolvedInStaging:](self, "_isAssetTypeInvolvedInStaging:", v8);

  if ((_DWORD)v5)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v10 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
    id v12 = -[MADAutoAssetStagerParam initWithSafeSummary:](v10, "initWithSafeSummary:", v11);
    [v9 followupEvent:@"ControlUnstagedRemoveAll" withInfo:v12];
  }

  return 0LL;
}

- (int64_t)action_ClientCheckLatchGroupsDetermine:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  if (-[MADAutoAssetStager stagingClientChosen](self, "stagingClientChosen")
    && !-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    int64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 oslog]);

    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetStager action_ClientCheckLatchGroupsDetermine:error:].cold.1(self);
    }

    id v10 =  -[MADAutoAssetStager _stagingClientRequestGeneralClear:replyingToCleared:]( self,  "_stagingClientRequestGeneralClear:replyingToCleared:",  @"ClientCheckLatchGroupsDetermine",  1LL);
  }

  -[MADAutoAssetStager setStagingClientChosen:](self, "setStagingClientChosen:", 1LL);
  -[MADAutoAssetStager setStagingClientUsingGroups:](self, "setStagingClientUsingGroups:", 1LL);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 persistedConfig]);
  objc_msgSend( v12,  "persistBoolean:forKey:shouldPersist:",  -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"),  @"modeByGroups",  1);

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v13,  @"ClientCheckLatchGroupsDetermine");

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v15 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  uint64_t v17 = -[MADAutoAssetStagerParam initWithSafeSummary:](v15, "initWithSafeSummary:", v16);
  [v14 followupEvent:@"ModeGroupsDetermineStart" withInfo:v17];

  return 0LL;
}

- (int64_t)action_ClientCheckGroupsDecideAlreadyDetermined:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetStager _replyWithAlreadyDetermined:forEventInfo:orFollowupDetermineStart:]( self,  "_replyWithAlreadyDetermined:forEventInfo:orFollowupDetermineStart:",  @"ClientCheckGroupsDecideAlreadyDetermined",  v5,  1LL);
  return 0LL;
}

- (int64_t)action_ClientCheckGroupsReplyAlreadyDetermined:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetStager _replyWithAlreadyDetermined:forEventInfo:orFollowupDetermineStart:]( self,  "_replyWithAlreadyDetermined:forEventInfo:orFollowupDetermineStart:",  @"ClientCheckGroupsReplyAlreadyDetermined",  v5,  0LL);
  return 0LL;
}

- (int64_t)action_ClientAcceptAllDetermine:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  if (-[MADAutoAssetStager stagingClientChosen](self, "stagingClientChosen"))
  {
    if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
    {
      -[MADAutoAssetStager _stagingClientRequestDetermineClearAll:]( self,  "_stagingClientRequestDetermineClearAll:",  @"ClientAcceptAllDetermine");
      int64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveClient](self, "_targetNameActiveClient"));
      id v9 =  -[MADAutoAssetStager _stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:",  @"ClientAcceptAllDetermine",  v8,  1LL);

      id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetStager action_ClientAcceptAllDetermine:error:].cold.1(self);
      }
    }
  }

  else
  {
    -[MADAutoAssetStager setStagingClientChosen:](self, "setStagingClientChosen:", 1LL);
  }

  -[MADAutoAssetStager setStagingClientUsingGroups:](self, "setStagingClientUsingGroups:", 0LL);
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedConfig]);
  objc_msgSend( v13,  "persistBoolean:forKey:shouldPersist:",  -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"),  @"modeByGroups",  1);

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v14,  @"ClientAcceptAllDetermine");

  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  700LL,  4LL,  4LL,  v15);

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v17 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  unsigned __int8 v19 = -[MADAutoAssetStagerParam initWithSafeSummary:](v17, "initWithSafeSummary:", v18);
  [v16 followupEvent:@"ModeAllDetermineStart" withInfo:v19];

  return 0LL;
}

- (int64_t)action_ClientPurgeDecideStagingClient:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  id v9 = (__CFString *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientMessageStagingClientProcessName:]( self,  "_stagingClientMessageStagingClientProcessName:",  v8));

  unsigned int v10 = -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups");
  uint64_t v11 = @"PurgeAcceptedRemoveAll";
  if (v10) {
    uint64_t v11 = @"PurgeAcceptedRemoveDownloaded";
  }
  id v12 = v11;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 oslog]);

  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    uint64_t v16 = @"N";
    if (v9) {
      uint64_t v17 = v9;
    }
    else {
      uint64_t v17 = @"N";
    }
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
    if (v18) {
      uint64_t v16 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
    }
    int v25 = 138543874;
    char v26 = v15;
    __int16 v27 = 2114;
    unsigned int v28 = v17;
    __int16 v29 = 2114;
    id v30 = v16;
    _os_log_impl( &dword_0,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {ClientPurgeDecideStagingClient} purging of all pre-SU-staging tracking / content | requestingPurgeP rocessName:%{public}@ | stagingClientName:%{public}@",  (uint8_t *)&v25,  0x20u);
    if (v18) {
  }
    }

  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  802LL,  4LL,  4LL,  v9);
  -[MADAutoAssetStager _stagingClientRequestDownloadPurged:]( self,  "_stagingClientRequestDownloadPurged:",  @"ClientPurgeDecideStagingClient");
  unsigned __int8 v19 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v19,  @"ClientPurgeDecideStagingClient");

  __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  __int128 v21 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  __int128 v23 = -[MADAutoAssetStagerParam initWithSafeSummary:](v21, "initWithSafeSummary:", v22);
  [v20 followupEvent:v12 withInfo:v23];

  return 0LL;
}

- (int64_t)action_ClientEraseDecideStagingClient:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  id v9 = (__CFString *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientMessageStagingClientProcessName:]( self,  "_stagingClientMessageStagingClientProcessName:",  v8));

  unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    uint64_t v13 = @"N";
    if (v9) {
      uint64_t v14 = v9;
    }
    else {
      uint64_t v14 = @"N";
    }
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
    if (v15) {
      uint64_t v13 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
    }
    int v22 = 138543874;
    __int128 v23 = v12;
    __int16 v24 = 2114;
    int v25 = v14;
    __int16 v26 = 2114;
    __int16 v27 = v13;
    _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {ClientEraseDecideStagingClient} erasing all pre-SU-staging tracking / content | requestingEraseProc essName:%{public}@ | stagingClientName:%{public}@",  (uint8_t *)&v22,  0x20u);
    if (v15) {
  }
    }

  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  805LL,  4LL,  4LL,  v9);
  -[MADAutoAssetStager _stagingClientRequestDownloadPurged:]( self,  "_stagingClientRequestDownloadPurged:",  @"ClientEraseDecideStagingClient");
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v16,  @"ClientPurgeDecideStagingClient");

  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v18 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  unsigned __int8 v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  __int128 v20 = -[MADAutoAssetStagerParam initWithSafeSummary:](v18, "initWithSafeSummary:", v19);
  [v17 followupEvent:@"EraseAcceptedRemoveAll" withInfo:v20];

  return 0LL;
}

- (int64_t)action_ClientContinueUsingLatestRequest:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v8,  @"ClientContinueUsingLatestRequest");

  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 oslog]);

  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    int v13 = 138543362;
    uint64_t v14 = v11;
    _os_log_impl( &dword_0,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {ClientContinueUsingLatestRequest} staging-client-request was received when already performing reque sted operation (stale earlier request has been replied to with failure)",  (uint8_t *)&v13,  0xCu);
  }

  return 0LL;
}

- (int64_t)action_ClientRequestAlreadyDownloaded:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v8,  @"ClientRequestAlreadyDownloaded");

  -[MADAutoAssetStager _clearBeforeDetermineAvailable:removingDetermined:]( self,  "_clearBeforeDetermineAvailable:removingDetermined:",  @"ClientRequestAlreadyDownloaded",  1LL);
  -[MADAutoAssetStager _persistLastStagingFrom](self, "_persistLastStagingFrom");
  -[MADAutoAssetStager startMaxTimeSpentDeterminingTimer](self, "startMaxTimeSpentDeterminingTimer");
  +[MADAutoAssetControlManager stagerRequestAlreadyDownloadedDescriptors]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerRequestAlreadyDownloadedDescriptors");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  700LL,  4LL,  4LL,  v9);

  -[MADAutoAssetStager _logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:]( self,  "_logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:",  @"ClientRequestAlreadyDownloaded",  0LL,  @"beginning determine-available-for-staging phase");
  return 0LL;
}

- (int64_t)action_ClientAcceptNextAvailableBeginDownload:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  int64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  701LL,  4LL,  4LL,  v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v9,  @"ClientAcceptNextAvailableBeginDownload");

  -[MADAutoAssetStager _setupAwaitingStagingAndBeginFirstDownload](self, "_setupAwaitingStagingAndBeginFirstDownload");
  -[MADAutoAssetStager _logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:]( self,  "_logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:",  @"ClientAcceptNextAvailableBeginDownload",  0LL,  @"beginning download-available-for-staging phase");
  return 0LL;
}

- (int64_t)action_ClientAcceptCancelActiveJob:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    int64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveClient](self, "_targetNameActiveClient"));
    id v9 =  -[MADAutoAssetStager _stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:",  @"ClientAcceptCancelActiveJob",  v8,  1LL);
  }

  else
  {
    id v10 =  -[MADAutoAssetStager _stagingClientRequestGeneralClear:replyingToCleared:]( self,  "_stagingClientRequestGeneralClear:replyingToCleared:",  @"ClientAcceptCancelActiveJob",  1LL);
  }

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);

  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v11,  @"ClientAcceptCancelActiveJob");
  -[MADAutoAssetStager _cancelCurrentJob](self, "_cancelCurrentJob");
  return 0LL;
}

- (int64_t)action_ClientAcceptEraseActiveJob:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetStager setStagingClientChosen:](self, "setStagingClientChosen:", 0LL);
  -[MADAutoAssetStager setStagingClientUsingGroups:](self, "setStagingClientUsingGroups:", 0LL);
  id v8 =  -[MADAutoAssetStager _stagingClientRequestGeneralClear:replyingToCleared:]( self,  "_stagingClientRequestGeneralClear:replyingToCleared:",  @"ClientAcceptEraseActiveJob",  1LL);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);

  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v9,  @"ClientAcceptEraseActiveJob");
  -[MADAutoAssetStager _cancelCurrentJob](self, "_cancelCurrentJob");
  return 0LL;
}

- (int64_t)action_ClientAcceptRemoveAllReplyErased:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetStager _stagingClientRequestDownloadPurged:]( self,  "_stagingClientRequestDownloadPurged:",  @"ClientAcceptRemoveAllReplyErased");
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);

  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v8,  @"ClientAcceptRemoveAllReplyErased");
  -[MADAutoAssetStager _clearBeforeDetermineAvailable:removingDetermined:]( self,  "_clearBeforeDetermineAvailable:removingDetermined:",  @"ClientAcceptRemoveAllReplyErased",  1LL);
  -[MADAutoAssetStager _clearRemoveByGroupTargets:removingDetermined:]( self,  "_clearRemoveByGroupTargets:removingDetermined:",  @"ClientAcceptRemoveAllReplyErased",  1LL);
  -[MADAutoAssetStager _replyToStagingClientOperationSuccess](self, "_replyToStagingClientOperationSuccess");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  806LL,  4LL,  4LL,  v9);

  return 0LL;
}

- (int64_t)action_ClientNothingStaged:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v8,  @"ClientNothingStaged");

  -[MADAutoAssetStager _replyNothingStaged:](self, "_replyNothingStaged:", @"ClientNothingStaged");
  return 0LL;
}

- (int64_t)action_ClientHaveStagedContent:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v8,  @"ClientHaveStagedContent");

  -[MADAutoAssetStager _replyHaveStagedContent:](self, "_replyHaveStagedContent:", @"ClientHaveStagedContent");
  return 0LL;
}

- (int64_t)action_ClientNewerReplySameOrEmptyDetermine:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  LODWORD(v7) = -[MADAutoAssetStager _isStagingClientRequestForActiveTarget:fromLocation:]( self,  "_isStagingClientRequestForActiveTarget:fromLocation:",  v8,  @"ClientNewerReplySameOrEmptyDetermine");

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  if ((_DWORD)v7)
  {
    -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v9,  @"ClientNewerReplySameOrEmptyDetermine");

    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      int v16 = 138543362;
      uint64_t v17 = v12;
      int v13 = "%{public}@\n"
            "[AUTO-STAGER] {ClientNewerReplySameOrEmptyDetermine} [STAGING-CLIENT-REQUEST(DETERMINE)] was received when a"
            "lready performing requested operation for same target (stale earlier request has been replied to with empty success)";
LABEL_6:
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v16, 0xCu);
    }
  }

  else
  {
    -[MADAutoAssetStager _replyNoCandidates:replyingToStagingRequest:]( self,  "_replyNoCandidates:replyingToStagingRequest:",  @"ClientNewerReplySameOrEmptyDetermine",  v9);

    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      int v16 = 138543362;
      uint64_t v17 = v12;
      int v13 = "%{public}@\n"
            "[AUTO-STAGER] {ClientNewerReplySameOrEmptyDetermine} [STAGING-CLIENT-REQUEST(DETERMINE)] when committed to o"
            "ther operation | [NO-CANDIDATES]";
      goto LABEL_6;
    }
  }

  return 0LL;
}

- (int64_t)action_ClientNewerReplyEmptyDetermine:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  LODWORD(v7) = -[MADAutoAssetStager _isStagingClientRequestForActiveTarget:fromLocation:]( self,  "_isStagingClientRequestForActiveTarget:fromLocation:",  v8,  @"ClientNewerReplySameOrEmptyDetermine");

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  if ((_DWORD)v7)
  {
    -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v9,  @"ClientNewerReplySameOrEmptyDetermine");

    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      int v16 = 138543362;
      uint64_t v17 = v12;
      int v13 = "%{public}@\n"
            "[AUTO-STAGER] {ClientNewerReplySameOrEmptyDetermine} [STAGING-CLIENT-REQUEST(DETERMINE)] was received when a"
            "lready performing requested operation for same target (stale earlier request has been replied to with empty success)";
LABEL_6:
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v16, 0xCu);
    }
  }

  else
  {
    -[MADAutoAssetStager _replyNoCandidates:replyingToStagingRequest:]( self,  "_replyNoCandidates:replyingToStagingRequest:",  @"ClientNewerReplyEmptyDetermine",  v9);

    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      int v16 = 138543362;
      uint64_t v17 = v12;
      int v13 = "%{public}@\n"
            "[AUTO-STAGER] {ClientNewerReplyEmptyDetermine} [STAGING-CLIENT-REQUEST(DETERMINE)] when committed to other o"
            "peration | [NO-CANDIDATES]";
      goto LABEL_6;
    }
  }

  return 0LL;
}

- (int64_t)action_ClientNewerReplySameOrEmptyDownload:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  LODWORD(v7) = -[MADAutoAssetStager _isStagingClientRequestForActiveTarget:fromLocation:]( self,  "_isStagingClientRequestForActiveTarget:fromLocation:",  v8,  @"ClientNewerReplySameOrEmptyDownload");

  if ((_DWORD)v7)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveClient](self, "_targetNameActiveClient"));
    id v10 =  -[MADAutoAssetStager _stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:",  @"ClientNewerReplySameOrEmptyDownload",  v9,  1LL);

    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
    -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v11,  @"ClientNewerReplySameOrEmptyDownload");

    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 oslog]);

    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      int v19 = 138543362;
      __int128 v20 = v14;
      uint64_t v15 = "%{public}@\n"
            "[AUTO-STAGER] {ClientNewerReplySameOrEmptyDownload} [STAGING-CLIENT-REQUEST(GENERAL)] was received when alre"
            "ady performing requested operation for same target (stale earlier request has been replied to with empty success)";
LABEL_6:
      _os_log_impl(&dword_0, v13, OS_LOG_TYPE_DEFAULT, v15, (uint8_t *)&v19, 0xCu);
    }
  }

  else
  {
    int v16 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
    -[MADAutoAssetStager _replyNothingStaged:replyingToStagingRequest:]( self,  "_replyNothingStaged:replyingToStagingRequest:",  @"ClientNewerReplySameOrEmptyDownload",  v16);

    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      int v19 = 138543362;
      __int128 v20 = v14;
      uint64_t v15 = "%{public}@\n"
            "[AUTO-STAGER] {ClientNewerReplySameOrEmptyDownload} [STAGING-CLIENT-REQUEST(GENERAL)] when committed to othe"
            "r operation | [NOTHING-STAGED]";
      goto LABEL_6;
    }
  }

  return 0LL;
}

- (int64_t)action_ClientNewerReplyEmptyDownload:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _replyNothingStaged:replyingToStagingRequest:]( self,  "_replyNothingStaged:replyingToStagingRequest:",  @"ClientNewerReplyEmptyDownload",  v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 oslog]);

  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    int v13 = 138543362;
    uint64_t v14 = v11;
    _os_log_impl( &dword_0,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {ClientNewerReplyEmptyDownload} [STAGING-CLIENT-REQUEST(GENERAL)] when committed to other operation | [NOTHING-STAGED]",  (uint8_t *)&v13,  0xCu);
  }

  return 0LL;
}

- (int64_t)action_ClientDecideGroupTargetAvailable:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  703LL,  4LL,  4LL,  v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v9,  @"ClientDecideGroupTargetAvailable");

  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v10,  v11));

  int v13 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientMessageDesire:forClientRequest:]( self,  "_stagingClientMessageDesire:forClientRequest:",  @"ClientDecideGroupTargetAvailable",  v13));

  -[MADAutoAssetStager setStagingClientCompleteOnceRequired:](self, "setStagingClientCompleteOnceRequired:", 0LL);
  if (v14 && [v14 checkWaitTimeoutSecs] == (id)-2) {
    -[MADAutoAssetStager setStagingClientCompleteOnceRequired:](self, "setStagingClientCompleteOnceRequired:", 1LL);
  }
  if (-[MADAutoAssetStager isAnyAvailableForStagingByGroup:]( self,  "isAnyAvailableForStagingByGroup:",  @"ClientDecideGroupTargetAvailable"))
  {
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingRequiredByTarget]( self,  "availableForStagingRequiredByTarget"));
    id v16 = [v15 safeObjectForKey:v12 ofClass:objc_opt_class(NSMutableArray)];
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

    id v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingOptionalByTarget]( self,  "availableForStagingOptionalByTarget"));
    id v19 = [v18 safeObjectForKey:v12 ofClass:objc_opt_class(NSMutableArray)];
    __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

    unint64_t v21 = (unint64_t)[v17 count];
    if (v21 | (unint64_t)[v20 count])
    {
      if (v21)
      {
        -[MADAutoAssetStager setAvailableForStaging:](self, "setAvailableForStaging:", v17);
        __int16 v24 = @"GroupTargetAvailableRequired";
      }

      else
      {
        -[MADAutoAssetStager setAvailableForStaging:](self, "setAvailableForStaging:", v20);
        if (-[MADAutoAssetStager stagingClientCompleteOnceRequired](self, "stagingClientCompleteOnceRequired"))
        {
          id v25 = -[MADAutoAssetStager newStagedInfoWithGroupsSuccessfullyStaged:indicatingHaveStaged:]( self,  "newStagedInfoWithGroupsSuccessfullyStaged:indicatingHaveStaged:",  @"ClientDecideGroupTargetAvailable",  1LL);
          __int16 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveClient](self, "_targetNameActiveClient"));
          __int16 v27 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:",  @"ClientDecideGroupTargetAvailable",  v26,  0LL));

          -[MADAutoAssetStager setStagingClientCompleteOnceRequired:]( self,  "setStagingClientCompleteOnceRequired:",  0LL);
          if (v27)
          {
            -[MADAutoAssetStager _replyToStagingClient:withStagedInfo:replyingToStagingRequest:recordingOperation:]( self,  "_replyToStagingClient:withStagedInfo:replyingToStagingRequest:recordingOperation:",  @"ClientDecideGroupTargetAvailable",  v25,  v27,  903LL);
          }

          else
          {
            unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
            __int16 v29 = (void *)objc_claimAutoreleasedReturnValue([v28 diag]);
            [v29 trackAnomaly:@"AUTO-STAGER" forReason:@"{ClientDecideGroupTargetAvailable} no download client request when no REQUIRED but have OPTIONAL to stage" withResult:6111 withError:0];
          }
        }

        __int16 v24 = @"GroupTargetAvailableOptional";
      }

      id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
      id v31 = (void *)objc_claimAutoreleasedReturnValue([v30 persistedConfig]);
      v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
      [v31 persistString:v32 forKey:@"assetTargetOSVersion"];

      unint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
      v34 = (void *)objc_claimAutoreleasedReturnValue([v33 persistedConfig]);
      __int16 v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
      [v34 persistString:v35 forKey:@"assetTargetBuildVersion" shouldPersist:1];

      -[MADAutoAssetStager _setupAwaitingStagingAndBeginFirstDownload]( self,  "_setupAwaitingStagingAndBeginFirstDownload");
      -[MADAutoAssetStager _logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:]( self,  "_logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:",  @"ClientDecideGroupTargetAvailable",  v24,  @"beginning download-available-for-staging phase");
    }

    else
    {
      int v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
      [v23 trackAnomaly:@"AUTO-STAGER" forReason:@"{ClientDecideGroupTargetAvailable} no REQUIRED and no OPTIONAL descriptors available for staging" withResult:6607 withError:0];

      __int16 v24 = @"GroupTargetNotAvailable";
    }
  }

  else
  {
    __int16 v24 = @"GroupTargetNotAvailable";
  }

  id v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v37 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  uint64_t v39 = -[MADAutoAssetStagerParam initWithSafeSummary:](v37, "initWithSafeSummary:", v38);
  [v36 followupEvent:v24 withInfo:v39];

  return 0LL;
}

- (int64_t)action_ClientDecideGroupTargetAvailablePurge:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  703LL,  4LL,  4LL,  v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v9,  @"ClientDecideGroupTargetAvailablePurge");

  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v10,  v11));

  int v13 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientMessageDesire:forClientRequest:]( self,  "_stagingClientMessageDesire:forClientRequest:",  @"ClientDecideGroupTargetAvailablePurge",  v13));

  -[MADAutoAssetStager setStagingClientCompleteOnceRequired:](self, "setStagingClientCompleteOnceRequired:", 0LL);
  if (v14 && [v14 checkWaitTimeoutSecs] == (id)-2) {
    -[MADAutoAssetStager setStagingClientCompleteOnceRequired:](self, "setStagingClientCompleteOnceRequired:", 1LL);
  }
  if (-[MADAutoAssetStager isAnyAvailableForStagingByGroup:]( self,  "isAnyAvailableForStagingByGroup:",  @"ClientDecideGroupTargetAvailablePurge"))
  {
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingRequiredByTarget]( self,  "availableForStagingRequiredByTarget"));
    id v16 = [v15 safeObjectForKey:v12 ofClass:objc_opt_class(NSMutableArray)];
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

    id v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingOptionalByTarget]( self,  "availableForStagingOptionalByTarget"));
    id v19 = [v18 safeObjectForKey:v12 ofClass:objc_opt_class(NSMutableArray)];
    __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

    unint64_t v21 = (unint64_t)[v17 count];
    if (v21 | (unint64_t)[v20 count])
    {
      -[MADAutoAssetStager purgeAlreadyStagedNotApplicableForRequiredByTarget:andNotApplicableForOptionalByTarget:]( self,  "purgeAlreadyStagedNotApplicableForRequiredByTarget:andNotApplicableForOptionalByTarget:",  v17,  v20);
      if (v21)
      {
        -[MADAutoAssetStager setAvailableForStaging:](self, "setAvailableForStaging:", v17);
        __int16 v24 = @"GroupTargetAvailableRequired";
      }

      else
      {
        -[MADAutoAssetStager setAvailableForStaging:](self, "setAvailableForStaging:", v20);
        if (-[MADAutoAssetStager stagingClientCompleteOnceRequired](self, "stagingClientCompleteOnceRequired"))
        {
          id v25 = -[MADAutoAssetStager newStagedInfoWithGroupsSuccessfullyStaged:indicatingHaveStaged:]( self,  "newStagedInfoWithGroupsSuccessfullyStaged:indicatingHaveStaged:",  @"ClientDecideGroupTargetAvailablePurge",  1LL);
          __int16 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveClient](self, "_targetNameActiveClient"));
          __int16 v27 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:",  @"ClientDecideGroupTargetAvailablePurge",  v26,  0LL));

          -[MADAutoAssetStager setStagingClientCompleteOnceRequired:]( self,  "setStagingClientCompleteOnceRequired:",  0LL);
          if (v27)
          {
            -[MADAutoAssetStager _replyToStagingClient:withStagedInfo:replyingToStagingRequest:recordingOperation:]( self,  "_replyToStagingClient:withStagedInfo:replyingToStagingRequest:recordingOperation:",  @"ClientDecideGroupTargetAvailablePurge",  v25,  v27,  903LL);
          }

          else
          {
            unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
            __int16 v29 = (void *)objc_claimAutoreleasedReturnValue([v28 diag]);
            [v29 trackAnomaly:@"AUTO-STAGER" forReason:@"{ClientDecideGroupTargetAvailablePurge} no download client request when no REQUIRED but have OPTIONAL to stage" withResult:6111 withError:0];
          }
        }

        __int16 v24 = @"GroupTargetAvailableOptional";
      }

      id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
      id v31 = (void *)objc_claimAutoreleasedReturnValue([v30 persistedConfig]);
      v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
      [v31 persistString:v32 forKey:@"assetTargetOSVersion"];

      unint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
      v34 = (void *)objc_claimAutoreleasedReturnValue([v33 persistedConfig]);
      __int16 v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
      [v34 persistString:v35 forKey:@"assetTargetBuildVersion" shouldPersist:1];

      -[MADAutoAssetStager _setupAwaitingStagingAndBeginFirstDownload]( self,  "_setupAwaitingStagingAndBeginFirstDownload");
      -[MADAutoAssetStager _logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:]( self,  "_logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:",  @"ClientDecideGroupTargetAvailablePurge",  v24,  @"beginning download-available-for-staging phase");
    }

    else
    {
      int v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
      [v23 trackAnomaly:@"AUTO-STAGER" forReason:@"{ClientDecideGroupTargetAvailablePurge} no REQUIRED and no OPTIONAL descriptors available for staging" withResult:6607 withError:0];

      __int16 v24 = @"GroupTargetNotAvailable";
    }
  }

  else
  {
    __int16 v24 = @"GroupTargetNotAvailable";
  }

  id v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v37 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  uint64_t v39 = -[MADAutoAssetStagerParam initWithSafeSummary:](v37, "initWithSafeSummary:", v38);
  [v36 followupEvent:v24 withInfo:v39];

  return 0LL;
}

- (int64_t)action_ClientInvalidStagingPhase:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  @"ClientInvalidStagingPhase",  v8,  6113LL,  0LL,  @"received staging-client-request is not valid for current staging phase");

  return 0LL;
}

- (int64_t)action_ClientFailAlreadyDetermining:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 diag]);
  [v9 trackAnomaly:@"AUTO-STAGER" forReason:@"{ClientFailAlreadyDetermining} by-group when already determining by-group" withResult:6607 withError:0];

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  @"ClientFailAlreadyDetermining",  v10,  6607LL,  0LL,  @"received staging-client-request is not valid for current staging phase (already determining-groups-available-for-staging)");

  return 0LL;
}

- (int64_t)action_ClientFailGroupDetermining:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 diag]);
  [v9 trackAnomaly:@"AUTO-STAGER" forReason:@"{ClientFailGroupDetermining} by-group download requested when determining by-group" withResult:6607 withError:0];

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  @"ClientFailGroupDetermining",  v10,  6607LL,  0LL,  @"received staging-client-request is not valid for current staging phase (currently determining-groups-available-for-staging)");

  return 0LL;
}

- (int64_t)action_ClientFailByGroupAlreadyDownloading:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 diag]);
  [v9 trackAnomaly:@"AUTO-STAGER" forReason:@"{ClientFailByGroupAlreadyDownloading} by-group operation requested when downloading by-group" withResult:6607 withError:0];

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  @"ClientFailByGroupAlreadyDownloading",  v10,  6607LL,  0LL,  @"received staging-client-request is not valid for current staging phase (currently downloading-groups-available-for-staging)");

  return 0LL;
}

- (int64_t)action_ClientFailNoGroupsStaged:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  @"ClientFailNoGroupsStaged",  v8,  6608LL,  0LL,  @"received staging-client-request is not valid for current staging phase (no groups currently staged)");

  return 0LL;
}

- (int64_t)action_ClientFailWrongMode:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 diag]);
  [v9 trackAnomaly:@"AUTO-STAGER" forReason:@"{ClientFailWrongMode} by-group operation requested when latched to ALL-MODE" withResult:6606 withError:0];

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  @"ClientFailWrongMode",  v10,  6606LL,  0LL,  @"received staging-client-request of different mode than already committed mode");

  return 0LL;
}

- (int64_t)action_ClientCancelDesireForCompletion:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetStager _stagingClientRequestDetermineClearAll:]( self,  "_stagingClientRequestDetermineClearAll:",  @"ClientCancelDesireForCompletion");
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);

  if (v8)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 clientReplyCompletion]);

    if (v10)
    {
      uint64_t v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
      int v13 = (void *)objc_claimAutoreleasedReturnValue([v12 clientRequestMessage]);
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v13));

      uint64_t v15 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 clientID]);
      id v18 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v15,  "initWithType:messageName:clientID:version:message:",  2LL,  v14,  v17,  0LL,  v11);

      id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsClientRepliesSuccess](self, "statisticsClientRepliesSuccess"));
      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
      unint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 clientRequestMessage]);
      int v22 = (void *)objc_claimAutoreleasedReturnValue([v21 messageName]);
      [v19 incrementForClientRequestMessage:v22];

      __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int16 v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        __int16 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
        int v32 = 138543874;
        unint64_t v33 = v25;
        __int16 v34 = 2114;
        __int16 v35 = v26;
        __int16 v36 = 2114;
        uint64_t v37 = v14;
        _os_log_impl( &dword_0,  v24,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {_replyToStagingClientOperationSuccess} [STAGING-CLIENT-REPLY] %{public}@ reply to staging-client (operation success)",  (uint8_t *)&v32,  0x20u);
      }

      __int16 v27 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
      unsigned int v28 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue([v27 clientReplyCompletion]);
      ((void (**)(void, SUCoreConnectMessage *, void))v28)[2](v28, v18, 0LL);
    }

    else
    {
      __int16 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      id v30 = (void *)objc_claimAutoreleasedReturnValue([v29 diag]);
      [v30 trackAnomaly:@"AUTO-STAGER" forReason:@"{_replyToStagingClientOperationSuccess} | pending staging-client-request with no reply-completion" withResult:6111 withError:0];
    }
  }

  return 0LL;
}

- (int64_t)action_RequestAlreadyDownloaded:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (!-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups")) {
    -[MADAutoAssetStager _clearBeforeDetermineAvailable:removingDetermined:]( self,  "_clearBeforeDetermineAvailable:removingDetermined:",  @"RequestAlreadyDownloaded",  1LL);
  }
  -[MADAutoAssetStager _persistLastStagingFrom](self, "_persistLastStagingFrom");
  -[MADAutoAssetStager startMaxTimeSpentDeterminingTimer](self, "startMaxTimeSpentDeterminingTimer");
  +[MADAutoAssetControlManager stagerRequestAlreadyDownloadedDescriptors]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerRequestAlreadyDownloadedDescriptors");
  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups")) {
    uint64_t v7 = 702LL;
  }
  else {
    uint64_t v7 = 700LL;
  }
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  v7,  4LL,  4LL,  v8);

  return 0LL;
}

- (int64_t)action_AddToAvailableDecideMoreCandidates:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _adjustPallasResponseBasedOnPreferences:]( self,  "_adjustPallasResponseBasedOnPreferences:",  v5));
  -[MADAutoAssetStager lookupCacheUpdateWithDetermineResult:fromLocation:]( self,  "lookupCacheUpdateWithDetermineResult:fromLocation:",  v8,  @"AddToAvailableDecideMoreCandidates");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](self, "candidateSetConfigurations"));
  id v10 = [v9 count];

  if (v10) {
    uint64_t v11 = @"DetermineMoreCandidates";
  }
  else {
    uint64_t v11 = @"DetermineDoneCandidates";
  }
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  int v13 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  uint64_t v15 = -[MADAutoAssetStagerParam initWithSafeSummary:](v13, "initWithSafeSummary:", v14);
  [v12 followupEvent:v11 withInfo:v15];

  return 0LL;
}

- (int64_t)action_AddToAvailableDecideRequiredAvailable:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _adjustPallasResponseBasedOnPreferences:]( self,  "_adjustPallasResponseBasedOnPreferences:",  v5));
  -[MADAutoAssetStager lookupCacheUpdateWithDetermineResult:fromLocation:]( self,  "lookupCacheUpdateWithDetermineResult:fromLocation:",  v8,  @"AddToAvailableDecideRequiredAvailable");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](self, "candidateSetConfigurations"));
  id v10 = [v9 count];

  if (v10)
  {
    uint64_t v11 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"AUTO-STAGER(%@)",  @"AddToAvailableDecideRequiredAvailable");
    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6105LL,  v11,  0LL,  @"timeout occurred when processing REQUIRED set-configurations - more REQUIRED to be determined when timeout triggered end of pre-SU-staging phase"));
    int v13 = @"RequiredErrorBlocksOTA";
  }

  else
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
    uint64_t v11 = (NSString *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v14,  v15));

    id v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
    id v17 = [v16 safeObjectForKey:v11 ofClass:objc_opt_class(NSMutableArray)];
    id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

    if (v18 && [v18 count])
    {
      int v13 = @"DetermineHaveRequiredMore";
    }

    else
    {
      id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
      id v20 = [v19 count];

      if (v20) {
        int v13 = @"DetermineHaveAvailable";
      }
      else {
        int v13 = @"DetermineNothingAvailable";
      }
    }

    id v12 = 0LL;
  }

  unint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  int v22 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v8 jobInformation]);
  __int16 v24 = -[MADAutoAssetStagerParam initWithJobInformation:withDownloadedDescriptor:withOperationError:]( v22,  "initWithJobInformation:withDownloadedDescriptor:withOperationError:",  v23,  0LL,  v12);
  [v21 followupEvent:v13 withInfo:v24];

  return 0LL;
}

- (int64_t)action_IgnoreFailureDecideRequiredAvailable:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](self, "candidateSetConfigurations"));
  id v9 = [v8 count];

  if (v9)
  {
    id v10 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"AUTO-STAGER(%@)",  @"IgnoreFailureDecideRequiredAvailable");
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6105LL,  v10,  0LL,  @"timeout occurred when processing REQUIRED set-configurations - tolerated error at point where more REQUIRED to be determined when timeout triggered end of pre-SU-staging phase"));

    id v12 = @"RequiredErrorBlocksOTA";
  }

  else
  {
    int v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
    id v14 = [v13 count];

    if (v14)
    {
      uint64_t v11 = 0LL;
      id v12 = @"DetermineHaveAvailable";
    }

    else
    {
      id v12 = @"DetermineNothingAvailable";
      uint64_t v11 = 0LL;
      if (-[MADAutoAssetStager _isOtherTargetAvailable](self, "_isOtherTargetAvailable")) {
        id v12 = @"DetermineNothingOtherAvailable";
      }
    }
  }

  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v16 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v5 jobInformation]);

  id v18 = -[MADAutoAssetStagerParam initWithJobInformation:withDownloadedDescriptor:withOperationError:]( v16,  "initWithJobInformation:withDownloadedDescriptor:withOperationError:",  v17,  0LL,  v11);
  [v15 followupEvent:v12 withInfo:v18];

  if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"DetermineNothingAvailable")) {
    -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  @"IgnoreFailureDecideRequiredAvailable",  1LL,  0LL);
  }

  return 0LL;
}

- (int64_t)action_DecideMoreCandidates:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](self, "candidateSetConfigurations"));
  id v8 = [v7 count];

  if (v8) {
    id v9 = @"DetermineMoreCandidates";
  }
  else {
    id v9 = @"DetermineDoneCandidates";
  }
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v11 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  int v13 = -[MADAutoAssetStagerParam initWithSafeSummary:](v11, "initWithSafeSummary:", v12);
  [v10 followupEvent:v9 withInfo:v13];

  return 0LL;
}

- (int64_t)action_DecideHaveAvailableOtherTargets:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (-[MADAutoAssetStager _isOtherTargetAvailable](self, "_isOtherTargetAvailable")) {
    uint64_t v7 = @"HaveOtherTargetAvailable";
  }
  else {
    uint64_t v7 = @"NoOtherTargetAvailable";
  }
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  uint64_t v11 = -[MADAutoAssetStagerParam initWithSafeSummary:](v9, "initWithSafeSummary:", v10);
  [v8 followupEvent:v7 withInfo:v11];

  return 0LL;
}

- (int64_t)action_DecideHaveRequiredCandidates:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v7,  v8));

  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( self,  "candidateSetConfigurationsRequiredByTarget"));
  id v11 = [v10 safeObjectForKey:v9 ofClass:objc_opt_class(NSMutableArray)];
  id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  int v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
  id v14 = [v13 safeObjectForKey:v9 ofClass:objc_opt_class(NSMutableArray)];
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

  if ([v12 count])
  {
    id v16 = @"DetermineHaveRequired";
  }

  else if ([v15 count])
  {
    id v16 = @"DetermineHaveOptional";
  }

  else
  {
    id v16 = @"DetermineNoCandidates";
  }

  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v18 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  id v20 = -[MADAutoAssetStagerParam initWithSafeSummary:](v18, "initWithSafeSummary:", v19);
  [v17 followupEvent:v16 withInfo:v20];

  return 0LL;
}

- (int64_t)action_DecideMoreOptionalAvailable:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
  id v8 = [v7 count];

  if (v8) {
    id v9 = @"DownloadMoreAvailable";
  }
  else {
    id v9 = @"DownloadDoneAvailable";
  }
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v11 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  int v13 = -[MADAutoAssetStagerParam initWithSafeSummary:](v11, "initWithSafeSummary:", v12);
  [v10 followupEvent:v9 withInfo:v13];

  return 0LL;
}

- (int64_t)action_DoneCandidatesRequiredDecideOptional:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v7,  v8));

  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
  id v11 = [v10 safeObjectForKey:v9 ofClass:objc_opt_class(NSMutableArray)];
  id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  if (v12 && [v12 count])
  {
    -[MADAutoAssetStager setCandidateSetConfigurations:](self, "setCandidateSetConfigurations:", v12);
    -[MADAutoAssetStager _startDetermineJobForNextCandidate:]( self,  "_startDetermineJobForNextCandidate:",  @"DoneCandidatesRequiredDecideOptional");
    int v13 = @"DeterminedRequiredWithOptional";
  }

  else
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
    id v15 = [v14 count];

    if (v15)
    {
      id v16 =  -[MADAutoAssetStager splitOutAvailableForStagingByGroup:]( self,  "splitOutAvailableForStagingByGroup:",  @"DoneCandidatesRequiredDecideOptional");
      int v13 = @"DetermineHaveAvailable";
    }

    else
    {
      int v13 = @"DetermineNothingAvailable";
    }
  }

  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v18 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  id v20 = -[MADAutoAssetStagerParam initWithSafeSummary:](v18, "initWithSafeSummary:", v19);
  [v17 followupEvent:v13 withInfo:v20];

  return 0LL;
}

- (int64_t)action_DecideRequiredErrorBlocksOTA:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 operationError]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 domain]);
  LODWORD(v7) = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v9,  @"com.apple.MobileAssetError.AutoAsset");

  if ((_DWORD)v7)
  {
    if ([v8 code] == (char *)&stru_1830.dylib.name.offset + 1
      || [v8 code] == (char *)&stru_1830.dylib.name.offset + 2
      || [v8 code] == (char *)&stru_1830.dylib.name.offset + 3
      || [v8 code] == (char *)&stru_1830.dylib.timestamp + 1)
    {
      id v10 = @"RequiredErrorNonFatal";
      goto LABEL_22;
    }

    id v10 = @"RequiredErrorNonFatal";
    if ([v8 code] == algn_19D5) {
      goto LABEL_22;
    }
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 domain]);
    if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v11,  @"com.apple.MobileAssetError.AutoAsset"))
    {
      int v13 = (char *)[v8 code];

      id v10 = @"RequiredErrorBlocksOTA";
      if (v13 != "rary/PrivateFrameworks/SoftwareUpdateCoreConnect.framework/SoftwareUpdateCoreConnect") {
        goto LABEL_22;
      }
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 userInfo]);
      id v14 = [v11 safeObjectForKey:NSUnderlyingErrorKey ofClass:objc_opt_class(NSError)];
      id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 domain]);
      if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v16,  @"com.apple.MobileAssetError.Download"))
      {
        unsigned int v17 = -[MADAutoAssetStager _maDownloadErrorConsideredFatal:]( self,  "_maDownloadErrorConsideredFatal:",  [v15 code]);

        if (!v17) {
          id v10 = @"RequiredErrorNonFatal";
        }
      }

      else
      {
      }
    }

    else
    {
      id v10 = @"RequiredErrorBlocksOTA";
    }

- (int64_t)action_FailRequiredDetermineBlocksOTA:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = objc_alloc(&OBJC_CLASS___NSString);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeSetJobConfiguration](self, "activeSetJobConfiguration"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 operationError]);
  if (v11)
  {
    unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue([v5 operationError]);
    int v13 = (void *)objc_claimAutoreleasedReturnValue([v12 checkedDescription]);
    id v14 = -[NSString initWithFormat:]( v8,  "initWithFormat:",  @"failed to determine whether there is REQUIRED server-side content - OTA cannot proceed | setConfiguration:%@ | error:%@",  v10,  v13);
  }

  else
  {
    id v14 = -[NSString initWithFormat:]( v8,  "initWithFormat:",  @"failed to determine whether there is REQUIRED server-side content - OTA cannot proceed | setConfiguration:%@ | error:%@",  v10,  @"BLOCK-OTA");
  }

  id v15 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v16,  v17));

  id v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDetermineClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDetermineClear:forStagingTargetName:replyingToCleared:",  @"FailRequiredDetermineBlocksOTA",  0LL,  0LL));
  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingRequiredByTarget](self, "availableForStagingRequiredByTarget"));
  [v20 setSafeObject:v15 forKey:v18];

  unint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingOptionalByTarget](self, "availableForStagingOptionalByTarget"));
  [v21 setSafeObject:v15 forKey:v18];

  -[MADAutoAssetStager setAvailableForStaging:](self, "setAvailableForStaging:", v15);
  if (v19)
  {
    int v22 = (void *)objc_claimAutoreleasedReturnValue([v5 operationError]);
    -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  @"FailRequiredDetermineBlocksOTA",  v19,  6602LL,  v22,  v14);
  }

  else
  {
    int v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
    [v23 trackAnomaly:@"AUTO-STAGER" forReason:@"{FailRequiredDetermineBlocksOTA} no determine client request when failed to determine REQUIRED" withResult:6111 withError:0];
  }

  if (-[MADAutoAssetStager _isOtherTargetAvailable](self, "_isOtherTargetAvailable")) {
    __int16 v24 = @"DetermineNothingOtherAvailable";
  }
  else {
    __int16 v24 = @"DetermineNothingAvailable";
  }
  id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  __int16 v26 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  __int16 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  unsigned int v28 = -[MADAutoAssetStagerParam initWithSafeSummary:](v26, "initWithSafeSummary:", v27);
  [v25 followupEvent:v24 withInfo:v28];

  -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  @"FailRequiredDetermineBlocksOTA",  1LL,  0LL);
  return 0LL;
}

- (int64_t)action_ReportStagingProgressToClient:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveClient](self, "_targetNameActiveClient"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDownloadCurrent:forStagingTargetName:]( self,  "_stagingClientRequestDownloadCurrent:forStagingTargetName:",  @"ReportStagingProgressToClient",  v8));

    if (!v9) {
      goto LABEL_38;
    }
  }

  else
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestGeneralCurrent:]( self,  "_stagingClientRequestGeneralCurrent:",  @"ReportStagingProgressToClient"));
    if (!v9) {
      goto LABEL_38;
    }
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 clientProgressProxy]);

  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 jobInformation]);
    unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 currentStatus]);

    int v13 = (void *)objc_claimAutoreleasedReturnValue([v12 downloadProgress]);
    id v14 = [v13 copy];
    if ((uint64_t)[v13 totalExpectedBytes] < 1)
    {
      id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        unint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        int v22 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
        *(_DWORD *)buf = 138543618;
        id v85 = v21;
        __int16 v86 = 2114;
        uint64_t v87 = v22;
        _os_log_impl( &dword_0,  v20,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] AUTO-STAGING-PROGRESS | early progress before totalExpectedBytes indicated (ignored) | currentStatus:%{public}@",  buf,  0x16u);
      }

      goto LABEL_37;
    }

    id v15 = [v12 downloadedNetworkBytes];
    if (!v15) {
      id v15 = [v12 downloadedFilesystemBytes];
    }
    id v81 = v15;
    if (-[MADAutoAssetStager currentStagedLastWrittenBytes](self, "currentStagedLastWrittenBytes")
      && (uint64_t v16 = -[MADAutoAssetStager currentStagedLastWrittenBytes](self, "currentStagedLastWrittenBytes"),
          v16 <= (uint64_t)[v13 totalWrittenBytes]))
    {
      __int128 v23 = [v13 totalWrittenBytes];
      id v18 = (char *)(v23
                   - (_BYTE *)-[MADAutoAssetStager currentStagedLastWrittenBytes](self, "currentStagedLastWrittenBytes"));
    }

    else
    {
      unsigned int v17 = (char *)[v13 totalWrittenBytes];
      id v18 = &v17[-[MADAutoAssetStager currentStagedRemainingBytes](self, "currentStagedRemainingBytes")];
    }

    -[MADAutoAssetStager setOverallStagedDownloadedSoFarBytes:]( self,  "setOverallStagedDownloadedSoFarBytes:",  (char *)-[MADAutoAssetStager overallStagedDownloadedSoFarBytes](self, "overallStagedDownloadedSoFarBytes")
    + (void)v18);
    id v24 = [v13 totalExpectedBytes];
    if ((uint64_t)v24 >= (uint64_t)[v13 totalWrittenBytes])
    {
      -[MADAutoAssetStager setCurrentStagedRemainingBytes:]( self,  "setCurrentStagedRemainingBytes:",  (_BYTE *)[v13 totalExpectedBytes] - (_BYTE *)objc_msgSend(v13, "totalWrittenBytes"));
    }

    else
    {
      id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int16 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetStager action_ReportStagingProgressToClient:error:].cold.1(v13);
      }
    }

    id v80 = v5;
    objc_msgSend( v14,  "setTotalExpectedBytes:",  -[MADAutoAssetStager overallStagedTotalExpectedBytes](self, "overallStagedTotalExpectedBytes"));
    objc_msgSend( v14,  "setTotalWrittenBytes:",  -[MADAutoAssetStager overallStagedDownloadedSoFarBytes](self, "overallStagedDownloadedSoFarBytes"));
    __int16 v27 = [v14 totalExpectedBytes];
    unsigned int v28 = [v14 totalWrittenBytes];
    [v13 expectedTimeRemainingSecs];
    if (v29 == 0.0)
    {
      double v34 = 0.0;
    }

    else
    {
      id v30 = [v13 totalExpectedBytes];
      double v31 = (double)(v30 - (_BYTE *)[v13 totalWrittenBytes]);
      [v13 expectedTimeRemainingSecs];
      unint64_t v33 = (unint64_t)(v31 / v32);
      [v14 setExpectedTimeRemainingSecs:0.0];
      if (!v33) {
        goto LABEL_25;
      }
      double v34 = (double)((v27 - v28) / v33);
    }

    [v14 setExpectedTimeRemainingSecs:v34];
LABEL_25:
    -[MADAutoAssetStager setCurrentStagedLastWrittenBytes:]( self,  "setCurrentStagedLastWrittenBytes:",  [v13 totalWrittenBytes]);
    v79 = v13;
    id v83 = v14;
    else {
      uint64_t v82 = 0LL;
    }
    v77 = objc_alloc(&OBJC_CLASS___MAAutoAssetStatus);
    unsigned int v76 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSelector]);
    v75 = (void *)objc_claimAutoreleasedReturnValue([v12 notifications]);
    __int16 v74 = (void *)objc_claimAutoreleasedReturnValue([v12 availableForUseAttributes]);
    v73 = (void *)objc_claimAutoreleasedReturnValue([v12 newerVersionAttributes]);
    unsigned int v72 = [v12 downloadUserInitiated];
    id v71 = [v12 downloadedFilesystemBytes];
    unsigned __int8 v70 = [v12 downloadedAsPatch];
    __int16 v68 = (void *)objc_claimAutoreleasedReturnValue([v12 patchedFromBaseSelector]);
    id v35 = [v12 patchedFromBaseFilesystemBytes];
    unsigned __int8 v36 = [v12 patchingAttempted];
    id v69 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromOSVersion](self, "stagingFromOSVersion"));
    uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](self, "stagingFromBuildVersion"));
    uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v12 availableForUseError]);
    uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v12 patchingAttemptError]);
    v40 = (void *)objc_claimAutoreleasedReturnValue([v12 newerVersionError]);
    BYTE1(v67) = 1;
    LOBYTE(v67) = v36;
    LOBYTE(v66) = v70;
    __int16 v78 = -[MAAutoAssetStatus initWithAssetSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:withCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]( v77,  "initWithAssetSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBe enLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemB ytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttemp ted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:withCurrentLockUsage:withA vailableForUseError:withPatchingAttemptError:withNewerVersionError:",  v76,  v75,  v74,  v73,  1LL,  v72,  v83,  v81,  v71,  v66,  v68,  v35,  v67,  v69,  v37,  v82,  v38,  v39,  v40);

    id v41 = [v12 neverBeenLocked];
    id v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    [v42 setNeverBeenLocked:v41];

    id v43 = [v12 downloadUserInitiated];
    id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    [v44 setDownloadUserInitiated:v43];

    unsigned int v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    [v45 setDownloadedNetworkBytes:v81];

    id v46 = [v12 downloadedFilesystemBytes];
    unsigned __int8 v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    [v47 setDownloadedFilesystemBytes:v46];

    id v48 = (void *)objc_claimAutoreleasedReturnValue([v12 patchedFromBaseSelector]);
    unsigned int v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    [v49 setPatchedFromBaseSelector:v48];

    id v50 = [v12 patchedFromBaseFilesystemBytes];
    id v51 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    [v51 setPatchedFromBaseFilesystemBytes:v50];

    id v52 = [v12 patchingAttempted];
    char v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    [v53 setPatchingAttempted:v52];

    __int16 v54 = (void *)objc_claimAutoreleasedReturnValue([v12 patchingAttemptError]);
    uint64_t v55 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    [(id)v55 setPatchingAttemptError:v54];

    __int16 v56 = (void *)objc_claimAutoreleasedReturnValue([v9 clientProgressProxy]);
    LOBYTE(v55) = objc_opt_respondsToSelector(v56, "executeGenericBlock:");

    char v57 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    __int16 v58 = (os_log_s *)objc_claimAutoreleasedReturnValue([v57 oslog]);

    BOOL v59 = os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT);
    if ((v55 & 1) != 0)
    {
      id v5 = v80;
      __int16 v60 = v78;
      if (v59)
      {
        id v61 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        __int16 v62 = (void *)objc_claimAutoreleasedReturnValue(-[MAAutoAssetStatus summary](v78, "summary"));
        *(_DWORD *)buf = 138543618;
        id v85 = v61;
        __int16 v86 = 2114;
        uint64_t v87 = v62;
        _os_log_impl( &dword_0,  v58,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] AUTO-STAGING-PROGRESS | staging-client provided with progress | overallStatus:%{public}@",  buf,  0x16u);
      }

      __int16 v58 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 clientProgressProxy]);
      -[os_log_s executeGenericBlock:](v58, "executeGenericBlock:", v78);
    }

    else
    {
      id v5 = v80;
      if (!v59)
      {
        __int16 v60 = v78;
        int v13 = v79;
        goto LABEL_36;
      }

      unsigned int v63 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      __int16 v60 = v78;
      id v64 = (void *)objc_claimAutoreleasedReturnValue(-[MAAutoAssetStatus summary](v78, "summary"));
      *(_DWORD *)buf = 138543618;
      id v85 = v63;
      __int16 v86 = 2114;
      uint64_t v87 = v64;
      _os_log_impl( &dword_0,  v58,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] AUTO-STAGING-PROGRESS | client not provided progress | client does not respond to executeGenericBl ock | overallStatus:%{public}@",  buf,  0x16u);
    }

    int v13 = v79;
LABEL_36:
    id v20 = (os_log_s *)v82;

    id v14 = v83;
LABEL_37:
  }

- (int64_t)action_AddToStaged:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetStager _addToStaged:addingFromStagerParam:]( self,  "_addToStaged:addingFromStagerParam:",  @"AddToStaged",  v5);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  id v11 = -[MADAutoAssetStagerParam initWithSafeSummary:](v9, "initWithSafeSummary:", v10);
  [v8 followupEvent:@"DecideMoreAvailable" withInfo:v11];

  return 0LL;
}

- (int64_t)action_AddToStagedDecideMoreAvailable:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  -[MADAutoAssetStager _addToStaged:addingFromStagerParam:]( self,  "_addToStaged:addingFromStagerParam:",  @"AddToStagedDecideMoreAvailable",  v5);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
  id v9 = [v8 count];

  if (v9) {
    id v10 = @"DownloadMoreAvailable";
  }
  else {
    id v10 = @"DownloadDoneAvailable";
  }
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  unsigned int v12 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  int v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  id v14 = -[MADAutoAssetStagerParam initWithSafeSummary:](v12, "initWithSafeSummary:", v13);
  [v11 followupEvent:v10 withInfo:v14];

  return 0LL;
}

- (int64_t)action_DecideMoreRequiredAvailable:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
  id v8 = [v7 count];

  if (v8)
  {
    id v9 = @"DownloadMoreAvailable";
  }

  else
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
    unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v10,  v11));

    int v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingOptionalByTarget]( self,  "availableForStagingOptionalByTarget"));
    id v14 = [v13 safeObjectForKey:v12 ofClass:objc_opt_class(NSMutableArray)];
    id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

    if (v15 && [v15 count])
    {
      id v51 = v12;
      uint64_t v16 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      -[MADAutoAssetStager setAwaitingStagingAttempt:](self, "setAwaitingStagingAttempt:", v16);

      __int128 v54 = 0u;
      __int128 v55 = 0u;
      __int128 v52 = 0u;
      __int128 v53 = 0u;
      id v50 = v15;
      id v17 = v15;
      id v18 = [v17 countByEnumeratingWithState:&v52 objects:v62 count:16];
      if (v18)
      {
        id v19 = v18;
        uint64_t v20 = *(void *)v53;
        do
        {
          for (i = 0LL; i != v19; i = (char *)i + 1)
          {
            if (*(void *)v53 != v20) {
              objc_enumerationMutation(v17);
            }
            int v22 = *(void **)(*((void *)&v52 + 1) + 8LL * (void)i);
            if (v22)
            {
              __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
              [v23 addObject:v22];

              id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
              id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

              if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
              {
                __int16 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
                __int16 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
                id v28 = [v27 count];
                double v29 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
                *(_DWORD *)buf = 138543874;
                char v57 = v26;
                __int16 v58 = 2048;
                id v59 = v28;
                __int16 v60 = 2114;
                id v61 = v29;
                _os_log_impl( &dword_0,  v25,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {AddToStagedDecideMoreRequiredAvailable} awaiting download attempt awaitingStagingAttemp t:%ld |  availableDescriptor:%{public}@",  buf,  0x20u);
              }
            }

            else
            {
              id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
              id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 oslog]);

              if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
              {
                double v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
                *(_DWORD *)buf = 138543362;
                char v57 = v31;
                _os_log_impl( &dword_0,  v25,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {AddToStagedDecideMoreRequiredAvailable} nil encountered on optionalAvailable array",  buf,  0xCu);
              }
            }
          }

          id v19 = [v17 countByEnumeratingWithState:&v52 objects:v62 count:16];
        }

        while (v19);
      }

      double v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
      unint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v32 persistedConfig]);
      double v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
      objc_msgSend( v33,  "persistULL:forKey:shouldPersist:",  objc_msgSend(v34, "count"),  @"awaitingStagingAssetCount",  0);

      id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      unsigned __int8 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
        id v39 = [v38 count];
        *(_DWORD *)buf = 138543618;
        char v57 = v37;
        __int16 v58 = 2048;
        id v59 = v39;
        _os_log_impl( &dword_0,  v36,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {AddToStagedDecideMoreRequiredAvailable} [BY-GROUP-MODE] REQUIRED done have OPTIONAL | awaitingS tagingAttempt:%ld",  buf,  0x16u);
      }

      if (-[MADAutoAssetStager stagingClientCompleteOnceRequired](self, "stagingClientCompleteOnceRequired"))
      {
        id v40 = -[MADAutoAssetStager newStagedInfoWithGroupsSuccessfullyStaged:indicatingHaveStaged:]( self,  "newStagedInfoWithGroupsSuccessfullyStaged:indicatingHaveStaged:",  @"DecideMoreRequiredAvailable",  1LL);
        id v41 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveClient](self, "_targetNameActiveClient"));
        id v42 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:",  @"DecideMoreRequiredAvailable",  v41,  0LL));

        -[MADAutoAssetStager setStagingClientCompleteOnceRequired:](self, "setStagingClientCompleteOnceRequired:", 0LL);
        id v15 = v50;
        if (v42)
        {
          -[MADAutoAssetStager _replyToStagingClient:withStagedInfo:replyingToStagingRequest:recordingOperation:]( self,  "_replyToStagingClient:withStagedInfo:replyingToStagingRequest:recordingOperation:",  @"DecideMoreRequiredAvailable",  v40,  v42,  903LL);
        }

        else
        {
          id v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
          id v44 = (void *)objc_claimAutoreleasedReturnValue([v43 diag]);
          [v44 trackAnomaly:@"AUTO-STAGER" forReason:@"{AddToStagedDecideMoreRequiredAvailable} no download client request when done staging REQUIRED and have OPTIONAL to stage" withResult:6111 withError:0];
        }

        id v9 = @"DownloadOptionalAvailable";
        unsigned int v12 = v51;
      }

      else
      {
        id v9 = @"DownloadOptionalAvailable";
        id v15 = v50;
        unsigned int v12 = v51;
      }
    }

    else
    {
      id v9 = @"DownloadDoneAvailable";
    }
  }

  unsigned int v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", v50));
  id v46 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  unsigned __int8 v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  id v48 = -[MADAutoAssetStagerParam initWithSafeSummary:](v46, "initWithSafeSummary:", v47);
  [v45 followupEvent:v9 withInfo:v48];

  return 0LL;
}

- (int64_t)action_DecideMoreAvailable:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSpecifier]);
  int v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 assetVersion]);
  id v15 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v8,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v10,  v12,  v14);

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v5 operationError]);
  if (!v16)
  {
    id v17 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"AUTO-STAGER(%@)",  @"DecideMoreAvailable");
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6102LL,  v17,  0LL,  @"auto-asset-job failed without providing operationError"));
  }

  id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 assetId]);
  +[MADAutoAssetHistory recordFailedOperation:fromLayer:forAssetID:withSelector:failingWithError:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordFailedOperation:fromLayer:forAssetID:withSelector:failingWithError:",  1001LL,  4LL,  v19,  v15,  v16);

  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  -[MADAutoAssetStager _persistDescriptor:operation:persistingDescriptor:withRepresentation:message:]( self,  "_persistDescriptor:operation:persistingDescriptor:withRepresentation:message:",  @"DecideMoreAvailable",  @"ENTRY_MODIFY",  v20,  601LL,  @"auto-asset-job has indicated failure to downloaded content");

  unint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  int v22 = (void *)objc_claimAutoreleasedReturnValue([v21 persistedConfig]);
  [v22 persistULL:0 forKey:@"activelyStagingAssetCount" shouldPersist:1];

  __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
  id v24 = [v23 count];

  if (v24) {
    id v25 = @"DownloadMoreAvailable";
  }
  else {
    id v25 = @"DownloadDoneAvailable";
  }
  __int16 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  __int16 v27 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  double v29 = -[MADAutoAssetStagerParam initWithSafeSummary:](v27, "initWithSafeSummary:", v28);
  [v26 followupEvent:v25 withInfo:v29];

  return 0LL;
}

- (int64_t)action_ClientContinueRestartingMaxDetermining:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 stagingClientRequest]);
  -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v8,  @"ClientContinueRestartingMaxDetermining");

  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 oslog]);

  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    int v13 = 138543362;
    id v14 = v11;
    _os_log_impl( &dword_0,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {ClientContinueRestartingMaxDetermining} staging-client-request was received when already performing requested operation (stale earlier request has been replied to with failure)",  (uint8_t *)&v13,  0xCu);
  }

  -[MADAutoAssetStager startMaxTimeSpentDeterminingTimer](self, "startMaxTimeSpentDeterminingTimer");
  return 0LL;
}

- (int64_t)action_AddToAvailableDecideAnyAvailable:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _adjustPallasResponseBasedOnPreferences:]( self,  "_adjustPallasResponseBasedOnPreferences:",  v5));
  -[MADAutoAssetStager lookupCacheUpdateWithDetermineResult:fromLocation:]( self,  "lookupCacheUpdateWithDetermineResult:fromLocation:",  v8,  @"ClientContinueRestartingMaxDetermining");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
  id v10 = [v9 count];

  if (v10) {
    id v11 = @"DetermineHaveAvailable";
  }
  else {
    id v11 = @"DetermineNothingAvailable";
  }
  unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  int v13 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  id v15 = -[MADAutoAssetStagerParam initWithSafeSummary:](v13, "initWithSafeSummary:", v14);
  [v12 followupEvent:v11 withInfo:v15];

  if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v11,  @"DetermineNothingAvailable")) {
    -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  @"AddToAvailableDecideAnyAvailable",  1LL,  0LL);
  }

  return 0LL;
}

- (int64_t)action_DecideTimerDeterminingValid:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 timerUUID]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager determineTimeoutUUID](self, "determineTimeoutUUID"));
  LODWORD(v6) = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v8, v9);

  if ((_DWORD)v6)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v11 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
    unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
    int v13 = -[MADAutoAssetStagerParam initWithSafeSummary:](v11, "initWithSafeSummary:", v12);
    [v10 followupEvent:@"DetermineTimedOut" withInfo:v13];
  }

  return 0LL;
}

- (int64_t)action_FormCandidatesDecideDetermine:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  v140 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  v142 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _allEliminationSelectors](self, "_allEliminationSelectors"));
  unsigned int v139 = -[MADAutoAssetStager doesStagingInvolveRequired](self, "doesStagingInvolveRequired");
  unsigned int v137 = -[MADAutoAssetStager doesStagingInvolveOptional](self, "doesStagingInvolveOptional");
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 setConfigurations]);
  -[MADAutoAssetStager setSetConfigurations:](self, "setSetConfigurations:", v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 setTargets]);
  -[MADAutoAssetStager setSetTargets:](self, "setSetTargets:", v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 scheduledJobs]);
  -[MADAutoAssetStager setScheduledJobs:](self, "setScheduledJobs:", v10);

  __int128 v171 = 0u;
  __int128 v172 = 0u;
  __int128 v169 = 0u;
  __int128 v170 = 0u;
  v138 = v5;
  id obj = (id)objc_claimAutoreleasedReturnValue([v5 alreadyDownloaded]);
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  id v144 = [obj countByEnumeratingWithState:&v169 objects:v185 count:16];
  v145 = self;
  if (v144)
  {
    uint64_t v143 = *(void *)v170;
    unsigned int v12 = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      for (i = 0LL; i != v144; i = (char *)i + 1)
      {
        if (*(void *)v170 != v143) {
          objc_enumerationMutation(obj);
        }
        id v14 = *(void **)(*((void *)&v169 + 1) + 8LL * (void)i);
        id v15 = objc_autoreleasePoolPush();
        uint64_t v16 = v15;
        if (v14)
        {
          v153 = v14;
          v146 = v15;
          v148 = i;
          __int128 v167 = 0u;
          __int128 v168 = 0u;
          __int128 v165 = 0u;
          __int128 v166 = 0u;
          id v17 = v142;
          id v151 = [v17 countByEnumeratingWithState:&v165 objects:v184 count:16];
          if (v151)
          {
            uint64_t v150 = *(void *)v166;
            id v149 = v17;
            do
            {
              id v18 = 0LL;
              do
              {
                if (*(void *)v166 != v150) {
                  objc_enumerationMutation(v17);
                }
                uint64_t v19 = *(void *)(*((void *)&v165 + 1) + 8LL * (void)v18);
                uint64_t v20 = objc_autoreleasePoolPush();
                id v21 = [v17 safeObjectForKey:v19 ofClass:objc_opt_class(v12[176])];
                int v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
                __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v22 assetVersion]);

                context = v20;
                if (v23)
                {
                  id v24 = p_ivars[155];
                  id v25 = (void *)objc_claimAutoreleasedReturnValue([v153 assetType]);
                  __int16 v26 = (void *)objc_claimAutoreleasedReturnValue([v22 assetType]);
                  __int16 v27 = v12;
                  id v28 = p_ivars[155];
                  double v29 = (void *)objc_claimAutoreleasedReturnValue([v153 assetSpecifier]);
                  id v30 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSpecifier]);
                  if (!-[__objc2_ivar_list stringIsEqual:to:](v28, "stringIsEqual:to:", v29, v30))
                  {

                    unsigned int v12 = v27;
                    id v17 = v149;
LABEL_22:

                    goto LABEL_23;
                  }

                  double v31 = p_ivars[155];
                  double v32 = (void *)objc_claimAutoreleasedReturnValue([v153 assetVersion]);
                  unint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v22 assetVersion]);
                  LODWORD(v31) = -[__objc2_ivar_list stringIsEqual:to:]( v31,  "stringIsEqual:to:",  v32,  v33);

                  p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
                  unsigned int v12 = v27;
                  id v17 = v149;
                  if ((_DWORD)v31)
                  {
                    self = v145;
                    id v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v145, "logger"));
                    unsigned __int8 v47 = (os_log_s *)objc_claimAutoreleasedReturnValue([v46 oslog]);

                    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
                    {
                      unsigned int v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v145, "summary"));
                      id v50 = (void *)objc_claimAutoreleasedReturnValue([v153 summary]);
                      *(_DWORD *)buf = 138543618;
                      uint64_t v177 = v49;
                      __int16 v178 = 2114;
                      id v179 = v50;
                      id v51 = v47;
                      __int128 v52 = "%{public}@\n"
                            "[AUTO-STAGER] {FormCandidatesDecideDetermine} auto-control-manager provided downloaded descr"
                            "iptor for asset-type + asset-specifier + asset-version being eliminated - not considering do"
                            "wnloaded | descriptor:%{public}@";
                      goto LABEL_38;
                    }

                    goto LABEL_39;
                  }
                }

                else
                {
                  double v34 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSpecifier]);

                  id v35 = p_ivars[155];
                  id v25 = (void *)objc_claimAutoreleasedReturnValue([v153 assetType]);
                  __int16 v26 = (void *)objc_claimAutoreleasedReturnValue([v22 assetType]);
                  unsigned int v36 = -[__objc2_ivar_list stringIsEqual:to:](v35, "stringIsEqual:to:", v25, v26);
                  unsigned int v37 = v36;
                  if (v34)
                  {
                    if (!v36) {
                      goto LABEL_22;
                    }
                    uint64_t v38 = p_ivars[155];
                    id v39 = (void *)objc_claimAutoreleasedReturnValue([v153 assetSpecifier]);
                    id v40 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSpecifier]);
                    LODWORD(v38) = -[__objc2_ivar_list stringIsEqual:to:]( v38,  "stringIsEqual:to:",  v39,  v40);

                    if ((_DWORD)v38)
                    {
                      self = v145;
                      __int128 v55 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v145, "logger"));
                      unsigned __int8 v47 = (os_log_s *)objc_claimAutoreleasedReturnValue([v55 oslog]);

                      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
                      {
                        unsigned int v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v145, "summary"));
                        id v50 = (void *)objc_claimAutoreleasedReturnValue([v153 summary]);
                        *(_DWORD *)buf = 138543618;
                        uint64_t v177 = v49;
                        __int16 v178 = 2114;
                        id v179 = v50;
                        id v51 = v47;
                        __int128 v52 = "%{public}@\n"
                              "[AUTO-STAGER] {FormCandidatesDecideDetermine} auto-control-manager provided downloaded des"
                              "criptor for asset-type + asset-specifier being eliminated - not considering downloaded | d"
                              "escriptor:%{public}@";
LABEL_38:
                        _os_log_impl(&dword_0, v51, OS_LOG_TYPE_DEFAULT, v52, buf, 0x16u);
                      }

                      goto LABEL_39;
                    }
                  }

                  else
                  {

                    if (v37)
                    {
                      self = v145;
                      __int128 v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v145, "logger"));
                      unsigned __int8 v47 = (os_log_s *)objc_claimAutoreleasedReturnValue([v53 oslog]);

                      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
                      {
                        unsigned int v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v145, "summary"));
                        id v50 = (void *)objc_claimAutoreleasedReturnValue([v153 summary]);
                        *(_DWORD *)buf = 138543618;
                        uint64_t v177 = v49;
                        __int16 v178 = 2114;
                        id v179 = v50;
                        id v51 = v47;
                        __int128 v52 = "%{public}@\n"
                              "[AUTO-STAGER] {FormCandidatesDecideDetermine} auto-control-manager provided downloaded des"
                              "criptor for asset-type being eliminated - not considering downloaded | descriptor:%{public}@";
                        goto LABEL_38;
                      }

- (int64_t)action_DoneCandidatesDecideAnyAvailable:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
  id v8 = [v7 count];

  if (v8)
  {
    if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups")) {
      id v9 =  -[MADAutoAssetStager splitOutAvailableForStagingByGroup:]( self,  "splitOutAvailableForStagingByGroup:",  @"DoneCandidatesDecideAnyAvailable");
    }
    id v10 = @"DetermineHaveAvailable";
  }

  else
  {
    id v10 = @"DetermineNothingAvailable";
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  unsigned int v12 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  int v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  id v14 = -[MADAutoAssetStagerParam initWithSafeSummary:](v12, "initWithSafeSummary:", v13);
  [v11 followupEvent:v10 withInfo:v14];

  return 0LL;
}

- (int64_t)action_NextCandidateBeginDetermine:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 assetId]);
  id v9 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 assetType]);
  unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  int v13 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSpecifier]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetVersion]);
  id v16 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v9,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v11,  v13,  v15);
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  1100LL,  4LL,  4LL,  v8,  v16);

  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](self, "candidateSetConfigurations"));
  id v18 = [v17 count];

  if (v18)
  {
    -[MADAutoAssetStager _startDetermineJobForNextCandidate:]( self,  "_startDetermineJobForNextCandidate:",  @"NextCandidateBeginDetermine");
  }

  else
  {
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 diag]);
    [v20 trackAnomaly:@"AUTO-STAGER" forReason:@"{NextCandidateBeginDetermine} no candidates available for staging (after considering downloaded auto-assets and set-identifiers)" withResult:6111 withError:0];

    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    int v22 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
    __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
    id v24 = -[MADAutoAssetStagerParam initWithSafeSummary:](v22, "initWithSafeSummary:", v23);
    [v21 postEvent:@"DetermineAvailableFailure" withInfo:v24];
  }

  return 0LL;
}

- (int64_t)action_NextAwaitingBeginDownload:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
  id v8 = [v7 count];

  if (v8)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectAtIndex:0]);
    -[MADAutoAssetStager setActiveJobDescriptor:](self, "setActiveJobDescriptor:", v10);

    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
    [v11 removeObjectAtIndex:0];

    unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
    int v13 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedConfig]);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
    objc_msgSend(v13, "persistULL:forKey:", objc_msgSend(v14, "count"), @"awaitingStagingAssetCount");

    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 persistedConfig]);
    [v16 persistULL:1 forKey:@"activelyStagingAssetCount" shouldPersist:1];

    -[MADAutoAssetStager _logPersistedConfigSet:message:]( self,  "_logPersistedConfigSet:message:",  @"NextAwaitingBeginDownload",  @"begin download-for-staging");
    id v17 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 assetType]);
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSpecifier]);
    int v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v22 assetVersion]);
    id v24 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v17,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v19,  v21,  v23);

    if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
    {
      id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
      __int16 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
      __int16 v27 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v25,  v26));

      id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager targetLookupResults](self, "targetLookupResults"));
      id v29 = [v28 safeObjectForKey:v27 ofClass:objc_opt_class(MADAutoTargetLookupResults)];
      id v30 = (void *)objc_claimAutoreleasedReturnValue(v29);

      if (v30)
      {
        double v31 = (void *)objc_claimAutoreleasedReturnValue([v30 setLookupResults]);
        double v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
        unint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v32 assetType]);
        id v34 = [v31 safeObjectForKey:v33 ofClass:objc_opt_class(MADAutoSetLookupResult)];
        id v35 = (void *)objc_claimAutoreleasedReturnValue(v34);

        if (v35)
        {
          uint64_t v36 = objc_claimAutoreleasedReturnValue([v35 autoAssetSetCatalog]);
LABEL_8:
          id v43 = (void *)v36;
LABEL_12:

          id v51 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
          __int128 v52 = (void *)objc_claimAutoreleasedReturnValue([v51 assetType]);
          __int128 v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
          __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v53 assetSpecifier]);
          id v55 = -[MADAutoAssetStager newAssetMetadataFromAssetCatalog:forAssetype:forAssetSpecifier:]( self,  "newAssetMetadataFromAssetCatalog:forAssetype:forAssetSpecifier:",  v43,  v52,  v54);

          if (+[MADAutoAssetControlManager preferenceStagerDownloadFirstNotInCatalog]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceStagerDownloadFirstNotInCatalog")
            && !-[MADAutoAssetStager firstDownloadedAsIfNotInCatalog](self, "firstDownloadedAsIfNotInCatalog"))
          {
            -[MADAutoAssetStager setFirstDownloadedAsIfNotInCatalog:](self, "setFirstDownloadedAsIfNotInCatalog:", 1LL);
          }

          else if (v55)
          {
            __int16 v56 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
            -[MADAutoAssetStager _persistDescriptor:operation:persistingDescriptor:withRepresentation:message:]( self,  "_persistDescriptor:operation:persistingDescriptor:withRepresentation:message:",  @"_setupAwaitingStagingAndBeginFirstDownload",  @"ENTRY_MODIFY",  v56,  602LL,  @"starting stager-job to download for staging");

            char v57 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            uint64_t v58 = (os_log_s *)objc_claimAutoreleasedReturnValue([v57 oslog]);

            if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
            {
              id v59 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
              __int16 v60 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
              id v61 = (void *)objc_claimAutoreleasedReturnValue([v60 summary]);
              *(_DWORD *)buf = 138543618;
              v77 = v59;
              __int16 v78 = 2114;
              v79 = v61;
              _os_log_impl( &dword_0,  v58,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {NextAwaitingBeginDownload} begin download-for-staging | activeJobDescriptor:%{public}@",  buf,  0x16u);
            }

            __int16 v62 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeSetJobConfiguration](self, "activeSetJobConfiguration"));
            unsigned int v63 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager baseForPatchingToSelector:](self, "baseForPatchingToSelector:", v24));
            id v64 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
            v65 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
            +[MADAutoAssetControlManager stagerStartJobDownloadForStaging:withStagerSetConfiguration:usingCachedAutoAssetCatalog:usingBaseForPatching:withAssetTargetOSVersion:withAssetTargetBuildVersion:]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerStartJobDownloadForStaging:withStagerSetConfiguration:usingCachedAutoAssetCatalog:usingBaseForPatchi ng:withAssetTargetOSVersion:withAssetTargetBuildVersion:",  v24,  v62,  v55,  v63,  v64,  v65);

            goto LABEL_20;
          }

          id v55 = (id)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6613LL,  @"AUTO-CONTROL(NextAwaitingBeginDownload)",  0LL,  @"unable to locate asset to be downloaded in set-lookup-results - skipping asset"));
          uint64_t v66 = -[MADAutoAssetStagerParam initWithJobInformation:withDownloadedDescriptor:withOperationError:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithJobInformation:withDownloadedDescriptor:withOperationError:",  0LL,  0LL,  v55);
          uint64_t v67 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
          __int16 v68 = (void *)objc_claimAutoreleasedReturnValue([v67 diag]);
          id v69 = objc_alloc(&OBJC_CLASS___NSString);
          id v70 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
          id v71 = (void *)objc_claimAutoreleasedReturnValue([v70 summary]);
          uint64_t v72 = -[NSString initWithFormat:]( v69,  "initWithFormat:",  @"{NextAwaitingBeginDownload} unable to locate entry in set-look-results - skipping asset | stagingDescriptor:%@",  v71);
          [v68 trackAnomaly:@"AUTO-STAGER" forReason:v72 withResult:6111 withError:0];

          v73 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
          [v73 postEvent:@"DownloadForStagingFailure" withInfo:v66];

LABEL_20:
          goto LABEL_21;
        }

        v75 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
        unsigned int v45 = (void *)objc_claimAutoreleasedReturnValue([v75 diag]);
        id v46 = objc_alloc(&OBJC_CLASS___NSString);
        unsigned __int8 v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
        id v48 = (void *)objc_claimAutoreleasedReturnValue([v47 assetType]);
        unsigned int v49 = (void *)objc_claimAutoreleasedReturnValue([v30 summary]);
        id v50 = -[NSString initWithFormat:]( v46,  "initWithFormat:",  @"{NextAwaitingBeginDownload} no set-lookup-result for asset-type | assetType:%@ | trainTargetLookupResults:%@",  v48,  v49);
        [v45 trackAnomaly:@"AUTO-STAGER" forReason:v50 withResult:6111 withError:0];
      }

      else
      {
        id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
        id v44 = (void *)objc_claimAutoreleasedReturnValue([v35 diag]);
        [v44 trackAnomaly:@"AUTO-STAGER" forReason:@"{NextAwaitingBeginDownload} no lookup-results for target" withResult:6111 withError:0];
      }

      id v43 = 0LL;
      goto LABEL_12;
    }

    __int16 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setLookupResults](self, "setLookupResults"));
    id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    id v35 = (void *)objc_claimAutoreleasedReturnValue([v30 assetType]);
    id v42 = [v27 safeObjectForKey:v35 ofClass:objc_opt_class(NSDictionary)];
    uint64_t v36 = objc_claimAutoreleasedReturnValue(v42);
    goto LABEL_8;
  }

  unsigned int v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v37 diag]);
  [v38 trackAnomaly:@"AUTO-STAGER" forReason:@"{NextAwaitingBeginDownload} no candidates available for staging" withResult:6111 withError:0];

  id v24 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v39 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  id v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  id v41 = -[MADAutoAssetStagerParam initWithSafeSummary:](v39, "initWithSafeSummary:", v40);
  [v24 postEvent:@"DownloadForStagingFailure" withInfo:v41];

LABEL_21:
  return 0LL;
}

- (int64_t)action_DoneAvailableDecideAnyStaged:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  id v8 = [v7 count];

  if (v8)
  {
    id v9 = @"DownloadHaveStaged";
  }

  else
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
    id v11 = [v10 count];

    if (v11) {
      id v9 = @"DownloadNothingStaged";
    }
    else {
      id v9 = @"DownloadNothingStagedEmpty";
    }
  }

  unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  int v13 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  id v15 = -[MADAutoAssetStagerParam initWithSafeSummary:](v13, "initWithSafeSummary:", v14);
  [v12 followupEvent:v9 withInfo:v15];

  return 0LL;
}

- (int64_t)action_DecideEmptyHaveAvailable:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingRequiredByTarget](self, "availableForStagingRequiredByTarget"));
  if ([v7 count]) {
    goto LABEL_4;
  }
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingOptionalByTarget](self, "availableForStagingOptionalByTarget"));
  if ([v8 count])
  {

LABEL_4:
    goto LABEL_5;
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
  id v16 = [v15 count];

  if (!v16)
  {
    id v9 = @"EmptyNothingAvailable";
    goto LABEL_6;
  }

- (int64_t)action_ReplyHaveAvailable:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setDeterminingBySelector:](self, "setDeterminingBySelector:", v7);

  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups")) {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDetermineClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDetermineClear:forStagingTargetName:replyingToCleared:",  @"ReplyHaveAvailable",  0LL,  0LL));
  }
  else {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestGeneralClear:replyingToCleared:]( self,  "_stagingClientRequestGeneralClear:replyingToCleared:",  @"ReplyHaveAvailable",  0LL));
  }
  id v9 = v8;
  if (!v8)
  {
    unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    int v13 = (void *)objc_claimAutoreleasedReturnValue([v12 diag]);
    id v14 = v13;
    id v15 = @"{ReplyHaveAvailable} intending to reply to staging-client with indication candidate(s) available for staging (no pending staging-client-request)";
LABEL_10:
    [v13 trackAnomaly:@"AUTO-STAGER" forReason:v15 withResult:6111 withError:0];

    goto LABEL_13;
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 clientReplyCompletion]);

  if (!v10)
  {
    unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    int v13 = (void *)objc_claimAutoreleasedReturnValue([v12 diag]);
    id v14 = v13;
    id v15 = @"{ReplyHaveAvailable} intending to reply to staging-client with indication of candidate(s) available for staging (pending staging-client-request with no reply-completion)";
    goto LABEL_10;
  }

  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    -[MADAutoAssetStager storeSetLookupResultsToTargetLookupResults](self, "storeSetLookupResultsToTargetLookupResults");
    id v11 = -[MADAutoAssetStager newStagingInfoWithGroupsAvailableForStaging:indicatingHaveAvailable:]( self,  "newStagingInfoWithGroupsAvailableForStaging:indicatingHaveAvailable:",  @"ReplyHaveAvailable",  1LL);
  }

  else
  {
    id v11 = -[MADAutoAssetStager newStagingInfoWithAllAvailableForStaging:]( self,  "newStagingInfoWithAllAvailableForStaging:",  @"ReplyHaveAvailable");
  }

  unsigned int v12 = v11;
  -[MADAutoAssetStager _acknowlegdeAndClearAllEliminations](self, "_acknowlegdeAndClearAllEliminations");
  -[MADAutoAssetStager _replyToStagingClient:withStagingInfo:replyingToStagingRequest:recordingOperation:]( self,  "_replyToStagingClient:withStagingInfo:replyingToStagingRequest:recordingOperation:",  @"ReplyHaveAvailable",  v12,  v9,  901LL);
  -[MADAutoAssetStager _logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:]( self,  "_logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:",  @"ReplyHaveAvailable",  0LL,  @"have available content for staging");
LABEL_13:

  return 0LL;
}

- (int64_t)action_ReplyNoCandidates:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetStager _replyNoCandidates:](self, "_replyNoCandidates:", @"ReplyNoCandidates");
  return 0LL;
}

- (int64_t)action_ReplyNoCandidatesPurgeAll:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetStager _replyNoCandidates:](self, "_replyNoCandidates:", @"ReplyNoCandidatesPurgeAll");
  -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  @"ReplyNoCandidatesPurgeAll",  1LL,  1LL);
  return 0LL;
}

- (int64_t)action_ReplyNothingStaged:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  902LL,  4LL,  4LL,  v7);

  -[MADAutoAssetStager _acknowlegdeAndClearAllEliminations](self, "_acknowlegdeAndClearAllEliminations");
  -[MADAutoAssetStager _replyNothingStaged:](self, "_replyNothingStaged:", @"ReplyNothingStaged");
  return 0LL;
}

- (int64_t)action_ReplyNothingStagedPurgeAll:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  902LL,  4LL,  4LL,  v7);

  -[MADAutoAssetStager _acknowlegdeAndClearAllEliminations](self, "_acknowlegdeAndClearAllEliminations");
  -[MADAutoAssetStager _replyNothingStaged:](self, "_replyNothingStaged:", @"ReplyNothingStagedPurgeAll");
  -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  @"ReplyNothingStagedPurgeAll",  1LL,  1LL);
  return 0LL;
}

- (int64_t)action_ReplyHaveStaged:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  904LL,  4LL,  4LL,  v7);

  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
    id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v8,  v9));

    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager targetLookupResults](self, "targetLookupResults"));
    id v12 = [v11 safeObjectForKey:v10 ofClass:objc_opt_class(MADAutoTargetLookupResults)];
    int v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

    if (v13)
    {
      double v32 = v10;
      __int128 v35 = 0u;
      __int128 v36 = 0u;
      __int128 v33 = 0u;
      __int128 v34 = 0u;
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 setLookupResults]);
      id v15 = [v14 countByEnumeratingWithState:&v33 objects:v37 count:16];
      if (v15)
      {
        id v16 = v15;
        uint64_t v17 = *(void *)v34;
        do
        {
          for (i = 0LL; i != v16; i = (char *)i + 1)
          {
            if (*(void *)v34 != v17) {
              objc_enumerationMutation(v14);
            }
            uint64_t v19 = *(void *)(*((void *)&v33 + 1) + 8LL * (void)i);
            uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v13 setLookupResults]);
            id v21 = [v20 safeObjectForKey:v19 ofClass:objc_opt_class(MADAutoSetLookupResult)];
            int v22 = (void *)objc_claimAutoreleasedReturnValue(v21);

            if (v22)
            {
              -[MADAutoAssetStager _lookupCachePersistResult:fromLocation:]( self,  "_lookupCachePersistResult:fromLocation:",  v22,  @"ReplyHaveStaged");
            }

            else
            {
              __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
              id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 diag]);
              [v24 trackAnomaly:@"AUTO-STAGER" forReason:@"{ReplyHaveStaged} nil lookup-result" withResult:6111 withError:0];
            }
          }

          id v16 = [v14 countByEnumeratingWithState:&v33 objects:v37 count:16];
        }

        while (v16);
      }

      id v10 = v32;
    }

    else
    {
      id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      __int16 v26 = (void *)objc_claimAutoreleasedReturnValue([v25 diag]);
      [v26 trackAnomaly:@"AUTO-STAGER" forReason:@"{ReplyHaveStaged} no lookup-results for target" withResult:6111 withError:0];
    }
  }

  __int16 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v28 = (void *)objc_claimAutoreleasedReturnValue([v27 persistedConfig]);
  [v28 persistULL:0 forKey:@"determinedAvailableAssetCount"];

  id v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v30 = (void *)objc_claimAutoreleasedReturnValue([v29 persistedConfig]);
  [v30 persistULL:0 forKey:@"awaitingStagingAssetCount" shouldPersist:1];

  -[MADAutoAssetStager _logPersistedConfigSet:message:]( self,  "_logPersistedConfigSet:message:",  @"ReplyHaveStaged",  @"reply to staging-client with indication that there is at least one auto-asset that has been staged");
  -[MADAutoAssetStager _replyHaveStagedContent:](self, "_replyHaveStagedContent:", @"ReplyHaveStaged");
  -[MADAutoAssetStager _logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:]( self,  "_logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:",  @"ReplyHaveStaged",  0LL,  @"have staged content");
  return 0LL;
}

- (int64_t)action_ReplyFailRequiredDownload:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  if (v8)
  {
    id v9 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 assetType]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    int v13 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSpecifier]);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetVersion]);
    id v16 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v9,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v11,  v13,  v15);

    uint64_t v17 = (__CFString *)objc_claimAutoreleasedReturnValue([v16 summary]);
  }

  else
  {
    uint64_t v17 = @"NOT-IDENTIFIED";
  }

  id v18 = objc_alloc(&OBJC_CLASS___NSString);
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v5 operationError]);
  if (v19)
  {
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v5 operationError]);
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 checkedDescription]);
    int v22 = -[NSString initWithFormat:]( v18,  "initWithFormat:",  @"failed to download REQUIRED server-side content - OTA cannot proceed | asset-selector:%@ | error:%@",  v17,  v21);
  }

  else
  {
    int v22 = -[NSString initWithFormat:]( v18,  "initWithFormat:",  @"failed to download REQUIRED server-side content - OTA cannot proceed | asset-selector:%@ | error:%@",  v17,  @"BLOCK-OTA");
  }

  __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveClient](self, "_targetNameActiveClient"));
  id v24 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:",  @"ReplyFailRequiredDownload",  v23,  0LL));

  if (v24)
  {
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v5 operationError]);
    -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  @"ReplyFailRequiredDownload",  v24,  6611LL,  v25,  v22);
  }

  else
  {
    id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    __int16 v26 = (void *)objc_claimAutoreleasedReturnValue([v25 diag]);
    [v26 trackAnomaly:@"AUTO-STAGER" forReason:@"{ReplyFailRequiredDownload} nil download-request" withResult:6111 withError:0];
  }

  return 0LL;
}

- (int64_t)action_ReplyNoCandidatesHaveOtherTarget:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetStager _replyNoCandidates:](self, "_replyNoCandidates:", @"ReplyNoCandidatesHaveOtherTarget");
  -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  @"ReplyNoCandidatesHaveOtherTarget",  1LL,  0LL);
  return 0LL;
}

- (int64_t)action_ReplyTargetNotAvailable:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveClient](self, "_targetNameActiveClient"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:",  @"ReplyTargetNotAvailable",  v7,  0LL));

  if (v8)
  {
    -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  @"ReplyTargetNotAvailable",  v8,  6603LL,  0LL,  @"no candidates found for the target (other targets have candidates)");
  }

  else
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 diag]);
    [v10 trackAnomaly:@"AUTO-STAGER" forReason:@"{ReplyTargetNotAvailable} nil download-request" withResult:6111 withError:0];
  }

  return 0LL;
}

- (int64_t)action_RemoveAllReplyPurged:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  @"RemoveAllReplyPurged",  1LL,  0LL);
  -[MADAutoAssetStager _replyToStagingClientOperationSuccess](self, "_replyToStagingClientOperationSuccess");
  return 0LL;
}

- (int64_t)action_RemoveAllReplyErased:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  @"RemoveAllReplyPurged",  1LL,  1LL);
  -[MADAutoAssetStager _replyToStagingClientOperationSuccess](self, "_replyToStagingClientOperationSuccess");
  return 0LL;
}

- (int64_t)action_CancelActiveJob:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetStager _cancelCurrentJob](self, "_cancelCurrentJob");
  return 0LL;
}

- (int64_t)action_EliminateDone:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 assetSelector]);
  -[MADAutoAssetStager notifyControlManagerEliminateDone:forAssetSelector:]( self,  "notifyControlManagerEliminateDone:forAssetSelector:",  @"EliminateDone",  v8);

  return 0LL;
}

- (int64_t)action_SetEliminateDone:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 setIdentifierConfiguration]);
  -[MADAutoAssetStager notifyControlManagerEliminateDone:forSetConfiguration:]( self,  "notifyControlManagerEliminateDone:forSetConfiguration:",  @"SetEliminateDone",  v8);

  return 0LL;
}

- (int64_t)action_RememberEliminateDone:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 assetSelector]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectorsAcknowledged](self, "eliminationSelectorsAcknowledged"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedEntryID]);
  [v9 setSafeObject:v8 forKey:v10];

  -[MADAutoAssetStager notifyControlManagerEliminateDone:forAssetSelector:]( self,  "notifyControlManagerEliminateDone:forAssetSelector:",  @"RememberEliminateDone",  v8);
  return 0LL;
}

- (int64_t)action_RememberSetEliminateDone:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  uint64_t v20 = v5;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 setIdentifierConfiguration]);
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
  id v10 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v22;
    do
    {
      int v13 = 0LL;
      do
      {
        if (*(void *)v22 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v21 + 1) + 8LL * (void)v13);
        id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectorsAcknowledged](self, "eliminationSelectorsAcknowledged"));
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSelector]);
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSelector]);
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 persistedEntryID]);
        [v15 setSafeObject:v16 forKey:v18];

        int v13 = (char *)v13 + 1;
      }

      while (v11 != v13);
      id v11 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
    }

    while (v11);
  }

  -[MADAutoAssetStager notifyControlManagerEliminateDone:forSetConfiguration:]( self,  "notifyControlManagerEliminateDone:forSetConfiguration:",  @"RememberSetEliminateDone",  v8);
  return 0LL;
}

- (int64_t)action_EliminateDecideMatch:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 assetSelector]);
  LODWORD(v5) = -[MADAutoAssetStager _doesSelectorMatchCurrentJob:](self, "_doesSelectorMatchCurrentJob:", v8);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedEntryID]);
  [v9 setSafeObject:v8 forKey:v10];

  if ((_DWORD)v5)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    uint64_t v12 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
    int v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
    id v14 = -[MADAutoAssetStagerParam initWithSafeSummary:](v12, "initWithSafeSummary:", v13);
    [v11 followupEvent:@"EliminateCurrentJob" withInfo:v14];
  }

  else
  {
    -[MADAutoAssetStager notifyControlManagerEliminateDone:forAssetSelector:]( self,  "notifyControlManagerEliminateDone:forAssetSelector:",  @"EliminateDecideMatch",  v8);
  }

  return 0LL;
}

- (int64_t)action_SetEliminateDecideMatch:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 setIdentifierConfiguration]);
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
  id v10 = [v9 countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (!v10)
  {

LABEL_14:
    -[MADAutoAssetStager notifyControlManagerEliminateDone:forSetConfiguration:]( self,  "notifyControlManagerEliminateDone:forSetConfiguration:",  @"SetEliminateDecideMatch",  v8);
    goto LABEL_15;
  }

  id v11 = v10;
  __int16 v26 = v8;
  id v27 = v5;
  LOBYTE(v12) = 0;
  uint64_t v13 = *(void *)v29;
  do
  {
    for (i = 0LL; i != v11; i = (char *)i + 1)
    {
      if (*(void *)v29 != v13) {
        objc_enumerationMutation(v9);
      }
      id v15 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)i);
      if ((v12 & 1) != 0)
      {
        unsigned int v12 = 1;
      }

      else
      {
        id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v28 + 1) + 8 * (void)i) assetSelector]);
        unsigned int v12 = -[MADAutoAssetStager _doesSelectorMatchCurrentJob:](self, "_doesSelectorMatchCurrentJob:", v16);
      }

      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors", v26));
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSelector]);
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSelector]);
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 persistedEntryID]);
      [v17 setSafeObject:v18 forKey:v20];
    }

    id v11 = [v9 countByEnumeratingWithState:&v28 objects:v32 count:16];
  }

  while (v11);

  id v8 = v26;
  id v5 = v27;
  if (!v12) {
    goto LABEL_14;
  }
  -[MADAutoAssetStager setEliminationSetConfigurationCurrentJob:]( self,  "setEliminationSetConfigurationCurrentJob:",  v26);
  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  __int128 v22 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  __int128 v24 = -[MADAutoAssetStagerParam initWithSafeSummary:](v22, "initWithSafeSummary:", v23);
  [v21 followupEvent:@"EliminateCurrentJob" withInfo:v24];

LABEL_15:
  return 0LL;
}

- (int64_t)action_EliminateDeterminingDecideMatch:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 assetSelector]);
  LODWORD(v5) = -[MADAutoAssetStager _doesSelectorMatchCurrentJob:](self, "_doesSelectorMatchCurrentJob:", v8);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedEntryID]);
  [v9 setSafeObject:v8 forKey:v10];

  if ((_DWORD)v5)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    unsigned int v12 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
    id v14 = -[MADAutoAssetStagerParam initWithSafeSummary:](v12, "initWithSafeSummary:", v13);
    [v11 followupEvent:@"EliminateCurrentJob" withInfo:v14];
  }

  else
  {
    -[MADAutoAssetStager _removeEliminatedFromCandidatesAndAvaliable]( self,  "_removeEliminatedFromCandidatesAndAvaliable");
    -[MADAutoAssetStager notifyControlManagerEliminateDone:forAssetSelector:]( self,  "notifyControlManagerEliminateDone:forAssetSelector:",  @"EliminateDeterminingDecideMatch",  v8);
  }

  return 0LL;
}

- (int64_t)action_SetEliminateDeterminingDecideMatch:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 setIdentifierConfiguration]);
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
  id v10 = [v9 countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (!v10)
  {

LABEL_14:
    -[MADAutoAssetStager _removeEliminatedFromCandidatesAndAvaliable]( self,  "_removeEliminatedFromCandidatesAndAvaliable");
    -[MADAutoAssetStager notifyControlManagerEliminateDone:forSetConfiguration:]( self,  "notifyControlManagerEliminateDone:forSetConfiguration:",  @"SetEliminateDecideMatch",  v8);
    goto LABEL_15;
  }

  id v11 = v10;
  __int16 v26 = v8;
  id v27 = v5;
  LOBYTE(v12) = 0;
  uint64_t v13 = *(void *)v29;
  do
  {
    for (i = 0LL; i != v11; i = (char *)i + 1)
    {
      if (*(void *)v29 != v13) {
        objc_enumerationMutation(v9);
      }
      id v15 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)i);
      if ((v12 & 1) != 0)
      {
        unsigned int v12 = 1;
      }

      else
      {
        id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v28 + 1) + 8 * (void)i) assetSelector]);
        unsigned int v12 = -[MADAutoAssetStager _doesSelectorMatchCurrentJob:](self, "_doesSelectorMatchCurrentJob:", v16);
      }

      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors", v26));
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSelector]);
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSelector]);
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 persistedEntryID]);
      [v17 setSafeObject:v18 forKey:v20];
    }

    id v11 = [v9 countByEnumeratingWithState:&v28 objects:v32 count:16];
  }

  while (v11);

  id v8 = v26;
  id v5 = v27;
  if (!v12) {
    goto LABEL_14;
  }
  -[MADAutoAssetStager setEliminationSetConfigurationCurrentJob:]( self,  "setEliminationSetConfigurationCurrentJob:",  v26);
  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  __int128 v22 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  __int128 v24 = -[MADAutoAssetStagerParam initWithSafeSummary:](v22, "initWithSafeSummary:", v23);
  [v21 followupEvent:@"EliminateCurrentJob" withInfo:v24];

LABEL_15:
  return 0LL;
}

- (int64_t)action_EliminateDoneDecideMoreCandidates:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetStager _removeEliminatedFromCandidatesAndAvaliable](self, "_removeEliminatedFromCandidatesAndAvaliable");
  -[MADAutoAssetStager _acknowledgeEliminatedForCurrentJob](self, "_acknowledgeEliminatedForCurrentJob");
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](self, "candidateSetConfigurations"));
  id v8 = [v7 count];

  if (v8) {
    id v9 = @"DetermineMoreCandidates";
  }
  else {
    id v9 = @"DetermineDoneCandidates";
  }
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v11 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  uint64_t v13 = -[MADAutoAssetStagerParam initWithSafeSummary:](v11, "initWithSafeSummary:", v12);
  [v10 followupEvent:v9 withInfo:v13];

  return 0LL;
}

- (int64_t)action_EliminateAvailableDecideEmpty:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 assetSelector]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectorsAcknowledged](self, "eliminationSelectorsAcknowledged"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedEntryID]);
  [v9 setSafeObject:v8 forKey:v10];

  -[MADAutoAssetStager _removeEliminatedFromCandidatesAndAvaliable](self, "_removeEliminatedFromCandidatesAndAvaliable");
  -[MADAutoAssetStager notifyControlManagerEliminateDone:forAssetSelector:]( self,  "notifyControlManagerEliminateDone:forAssetSelector:",  @"EliminateAvailableDecideEmpty",  v8);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
  id v12 = [v11 count];

  if (!v12)
  {
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v14 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
    id v16 = -[MADAutoAssetStagerParam initWithSafeSummary:](v14, "initWithSafeSummary:", v15);
    [v13 followupEvent:@"EliminateNowEmpty" withInfo:v16];

    -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  @"EliminateAvailableDecideEmpty",  1LL,  0LL);
  }

  return 0LL;
}

- (int64_t)action_SetEliminateAvailableDecideEmpty:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  __int16 v26 = v5;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 setIdentifierConfiguration]);
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
  id v10 = [v9 countByEnumeratingWithState:&v27 objects:v31 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v28;
    do
    {
      uint64_t v13 = 0LL;
      do
      {
        if (*(void *)v28 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v27 + 1) + 8LL * (void)v13);
        id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectorsAcknowledged](self, "eliminationSelectorsAcknowledged"));
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSelector]);
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSelector]);
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 persistedEntryID]);
        [v15 setSafeObject:v16 forKey:v18];

        uint64_t v13 = (char *)v13 + 1;
      }

      while (v11 != v13);
      id v11 = [v9 countByEnumeratingWithState:&v27 objects:v31 count:16];
    }

    while (v11);
  }

  -[MADAutoAssetStager _removeEliminatedFromCandidatesAndAvaliable](self, "_removeEliminatedFromCandidatesAndAvaliable");
  -[MADAutoAssetStager notifyControlManagerEliminateDone:forSetConfiguration:]( self,  "notifyControlManagerEliminateDone:forSetConfiguration:",  @"SetEliminateAvailableDecideEmpty",  v8);
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
  id v20 = [v19 count];

  if (!v20)
  {
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    __int128 v22 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
    __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
    __int128 v24 = -[MADAutoAssetStagerParam initWithSafeSummary:](v22, "initWithSafeSummary:", v23);
    [v21 followupEvent:@"EliminateNowEmpty" withInfo:v24];

    -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  @"SetEliminateAvailableDecideEmpty",  1LL,  0LL);
  }

  return 0LL;
}

- (int64_t)action_EliminateDoneDecideMoreDownload:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 persistedConfig]);
  [v8 persistULL:0 forKey:@"activelyStagingAssetCount" shouldPersist:0];

  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
  id v10 = [v9 count];

  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
    [v11 removeObjectAtIndex:0];

    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedConfig]);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
    objc_msgSend( v13,  "persistULL:forKey:shouldPersist:",  objc_msgSend(v14, "count"),  @"awaitingStagingAssetCount",  0);
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 persistedConfig]);
  [v16 persistState];

  -[MADAutoAssetStager _logPersistedConfigSet:message:]( self,  "_logPersistedConfigSet:message:",  @"EliminateDoneDecideMoreDownload",  @"no more stager elimination operation pending");
  -[MADAutoAssetStager _removeEliminatedFromStaged](self, "_removeEliminatedFromStaged");
  -[MADAutoAssetStager _acknowledgeEliminatedForCurrentJob](self, "_acknowledgeEliminatedForCurrentJob");
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
  id v18 = [v17 count];

  if (v18) {
    uint64_t v19 = @"DownloadMoreAvailable";
  }
  else {
    uint64_t v19 = @"DownloadDoneAvailable";
  }
  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  __int128 v21 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
  __int128 v23 = -[MADAutoAssetStagerParam initWithSafeSummary:](v21, "initWithSafeSummary:", v22);
  [v20 followupEvent:v19 withInfo:v23];

  return 0LL;
}

- (int64_t)action_EliminateDoneStagedDecideEmpty:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 assetSelector]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectorsAcknowledged](self, "eliminationSelectorsAcknowledged"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedEntryID]);
  [v9 setSafeObject:v8 forKey:v10];

  -[MADAutoAssetStager _removeEliminatedFromStaged](self, "_removeEliminatedFromStaged");
  -[MADAutoAssetStager notifyControlManagerEliminateDone:forAssetSelector:]( self,  "notifyControlManagerEliminateDone:forAssetSelector:",  @"EliminateDoneStagedDecideEmpty",  v8);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  id v12 = [v11 count];

  if (!v12)
  {
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v14 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
    id v16 = -[MADAutoAssetStagerParam initWithSafeSummary:](v14, "initWithSafeSummary:", v15);
    [v13 followupEvent:@"EliminateNowEmpty" withInfo:v16];

    -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  @"EliminateDoneStagedDecideEmpty",  1LL,  0LL);
  }

  return 0LL;
}

- (int64_t)action_SetEliminateDoneStagedDecideEmpty:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  __int16 v26 = v5;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 setIdentifierConfiguration]);
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
  id v10 = [v9 countByEnumeratingWithState:&v27 objects:v31 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v28;
    do
    {
      uint64_t v13 = 0LL;
      do
      {
        if (*(void *)v28 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v27 + 1) + 8LL * (void)v13);
        id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectorsAcknowledged](self, "eliminationSelectorsAcknowledged"));
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSelector]);
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSelector]);
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 persistedEntryID]);
        [v15 setSafeObject:v16 forKey:v18];

        uint64_t v13 = (char *)v13 + 1;
      }

      while (v11 != v13);
      id v11 = [v9 countByEnumeratingWithState:&v27 objects:v31 count:16];
    }

    while (v11);
  }

  -[MADAutoAssetStager _removeEliminatedFromStaged](self, "_removeEliminatedFromStaged");
  -[MADAutoAssetStager notifyControlManagerEliminateDone:forSetConfiguration:]( self,  "notifyControlManagerEliminateDone:forSetConfiguration:",  @"SetEliminateDoneStagedDecideEmpty",  v8);
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  id v20 = [v19 count];

  if (!v20)
  {
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    __int128 v22 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
    __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
    __int128 v24 = -[MADAutoAssetStagerParam initWithSafeSummary:](v22, "initWithSafeSummary:", v23);
    [v21 followupEvent:@"EliminateNowEmpty" withInfo:v24];

    -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  @"SetEliminateDoneStagedDecideEmpty",  1LL,  0LL);
  }

  return 0LL;
}

- (int64_t)action_EliminateCancelActiveJob:(id)a3 error:(id *)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetStager _cancelCurrentJob](self, "_cancelCurrentJob");
  return 0LL;
}

- (int64_t)actionUnknownAction:(id)a3 error:(id *)a4
{
  id v5 = a3;
  id v6 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"unknown action(%@)",  v5);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 diag]);
  [v8 dumpTracked:v6 dumpingTo:5 usingFilename:0 clearingStatistics:0 clearingHistory:0];

  return 0LL;
}

- (void)_acceptStagingClientRequest:(id)a3 fromLocation:(id)a4
{
  id v96 = a3;
  id v6 = a4;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  v95 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_acceptStagingClientRequest",  v6);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v96 clientRequestMessage]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 messageName]);

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v96 clientRequestMessage]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 message]);

  id v13 = [v12 safeObjectForKey:@"instance" ofClass:objc_opt_class(MAAutoAssetInfoInstance)];
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  id v15 = [v12 safeObjectForKey:@"staging" ofClass:objc_opt_class(MAAutoAssetInfoStaging)];
  id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  unsigned int v17 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v10,  @"MA-AUTO-STAGE:DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE");
  unsigned int v18 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v10,  @"MA-AUTO-STAGE:DOWNLOAD_GROUPS");
  if (!v14)
  {
    __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v24 diag]);
    __int16 v26 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v96 summary]);
    __int128 v28 = -[NSString initWithFormat:]( v26,  "initWithFormat:",  @"{%@} staging-client-request received with no instance | stagingClientRequest:%@",  v95,  v27);
    [v25 trackAnomaly:@"AUTO-STAGER" forReason:v28 withResult:6111 withError:0];

    __int128 v29 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v21 = (NSString *)objc_claimAutoreleasedReturnValue([v96 summary]);
    __int128 v30 = -[NSString initWithFormat:]( v29,  "initWithFormat:",  @"staging-client-request [DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE] without staging update-attributes | stagingClientRequest:%@",  v21);
    __int128 v31 = self;
    double v32 = v95;
LABEL_22:
    -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( v31,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  v32,  v96,  6102LL,  0LL,  v30);

    goto LABEL_38;
  }

  unsigned int v19 = v18;
  if (v17)
  {
    if (v16)
    {
      id v20 = (void *)objc_claimAutoreleasedReturnValue([v16 updateAttributes]);

      if (!v20)
      {
        unsigned int v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
        id v46 = (void *)objc_claimAutoreleasedReturnValue([v45 diag]);
        unsigned __int8 v47 = objc_alloc(&OBJC_CLASS___NSString);
        id v48 = (void *)objc_claimAutoreleasedReturnValue([v96 summary]);
        unsigned int v49 = -[NSString initWithFormat:]( v47,  "initWithFormat:",  @"{%@} staging-client-request [DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE] without staging update-attributes | stagingClientRequest:%@",  v95,  v48);
        [v46 trackAnomaly:@"AUTO-STAGER" forReason:v49 withResult:6102 withError:0];

        id v50 = objc_alloc(&OBJC_CLASS___NSString);
        __int128 v21 = (NSString *)objc_claimAutoreleasedReturnValue([v96 summary]);
        id v51 = -[NSString initWithFormat:]( v50,  "initWithFormat:",  @"staging-client-request [DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE] without staging update-attributes | stagingClientRequest:%@",  v21);
        -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  v95,  v96,  6102LL,  0LL,  v51);

        goto LABEL_38;
      }

      __int128 v21 = (NSString *)objc_claimAutoreleasedReturnValue([v16 updateAttributes]);
      uint64_t v22 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager adoptTargetFromUpdateAttributes:fromUpdateAttributes:forGroupDetermine:]( self,  "adoptTargetFromUpdateAttributes:fromUpdateAttributes:forGroupDetermine:",  v95,  v21,  1LL));
      if (!v22)
      {
        id v59 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
        __int16 v60 = (void *)objc_claimAutoreleasedReturnValue([v59 diag]);
        id v61 = objc_alloc(&OBJC_CLASS___NSString);
        __int16 v62 = (void *)objc_claimAutoreleasedReturnValue([v96 summary]);
        unsigned int v63 = -[NSString initWithFormat:]( v61,  "initWithFormat:",  @"{%@} staging-client-request [DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE] unable to form target-name | stagingClientRequest:%@",  v95,  v62);
        [v60 trackAnomaly:@"AUTO-STAGER" forReason:v63 withResult:6101 withError:0];

        id v64 = objc_alloc(&OBJC_CLASS___NSString);
        v65 = (void *)objc_claimAutoreleasedReturnValue([v96 summary]);
        uint64_t v66 = -[NSString initWithFormat:]( v64,  "initWithFormat:",  @"staging-client-request [DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE] unable to form target-name  | stagingClientRequest:%@",  v65);
        -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  v95,  v96,  6101LL,  0LL,  v66);

        goto LABEL_38;
      }

      goto LABEL_6;
    }

    uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v39 = (void *)objc_claimAutoreleasedReturnValue([v38 diag]);
    id v40 = objc_alloc(&OBJC_CLASS___NSString);
    id v41 = v95;
    id v42 = (void *)objc_claimAutoreleasedReturnValue([v96 summary]);
    id v43 = -[NSString initWithFormat:]( v40,  "initWithFormat:",  @"{%@} staging-client-request [DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE] without staging information | stagingClientRequest:%@",  v95,  v42);
    [v39 trackAnomaly:@"AUTO-STAGER" forReason:v43 withResult:6102 withError:0];

    id v16 = 0LL;
    id v44 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v21 = (NSString *)objc_claimAutoreleasedReturnValue([v96 summary]);
    __int128 v30 = -[NSString initWithFormat:]( v44,  "initWithFormat:",  @"staging-client-request [DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE] without staging update-attributes | stagingClientRequest:%@",  v21);
    __int128 v31 = self;
    goto LABEL_21;
  }

  if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v10,  @"MA-AUTO-STAGE:DETERMINE_ALL_AVAILABLE_FOR_UPDATE"))
  {
    if (v16)
    {
      __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v16 allAvailableForStagingAttributes]);
      if (v33)
      {

LABEL_29:
        id v71 = (void *)objc_claimAutoreleasedReturnValue([v16 allAvailableForStagingAttributes]);
        if (!v71) {
          id v71 = (void *)objc_claimAutoreleasedReturnValue([v16 updateAttributes]);
        }
        id v72 = [v71 safeObjectForKey:@"OSVersion" ofClass:objc_opt_class(NSString)];
        v73 = (void *)objc_claimAutoreleasedReturnValue(v72);
        -[MADAutoAssetStager setAssetTargetOSVersion:](self, "setAssetTargetOSVersion:", v73);

        id v74 = [v71 safeObjectForKey:@"Build" ofClass:objc_opt_class(NSString)];
        v75 = (void *)objc_claimAutoreleasedReturnValue(v74);
        -[MADAutoAssetStager setAssetTargetBuildVersion:](self, "setAssetTargetBuildVersion:", v75);

        id v76 = [v71 safeObjectForKey:@"TrainName" ofClass:objc_opt_class(NSString)];
        v77 = (void *)objc_claimAutoreleasedReturnValue(v76);
        -[MADAutoAssetStager setAssetTargetTrainName:](self, "setAssetTargetTrainName:", v77);

        id v78 = [v71 safeObjectForKey:@"RestoreVersion" ofClass:objc_opt_class(NSString)];
        v79 = (void *)objc_claimAutoreleasedReturnValue(v78);
        -[MADAutoAssetStager setAssetTargetRestoreVersion:](self, "setAssetTargetRestoreVersion:", v79);

        goto LABEL_32;
      }

      id v70 = (void *)objc_claimAutoreleasedReturnValue([v16 updateAttributes]);

      if (v70) {
        goto LABEL_29;
      }
      v88 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      v89 = (void *)objc_claimAutoreleasedReturnValue([v88 diag]);
      id v90 = objc_alloc(&OBJC_CLASS___NSString);
      v91 = (void *)objc_claimAutoreleasedReturnValue([v96 summary]);
      id v92 = -[NSString initWithFormat:]( v90,  "initWithFormat:",  @"{%@} staging-client-request [DETERMINE_ALL_AVAILABLE_FOR_UPDATE] without staging update-attributes | stagingClientRequest:%@",  v95,  v91);
      [v89 trackAnomaly:@"AUTO-STAGER" forReason:v92 withResult:6102 withError:0];

      id v41 = v95;
      id v93 = objc_alloc(&OBJC_CLASS___NSString);
      __int128 v21 = (NSString *)objc_claimAutoreleasedReturnValue([v96 summary]);
      uint64_t v58 = -[NSString initWithFormat:]( v93,  "initWithFormat:",  @"staging-client-request [DETERMINE_ALL_AVAILABLE_FOR_UPDATE] without allAvailableForStagingAttributes | stagingClientRequest:%@",  v21);
    }

    else
    {
      __int128 v52 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      __int128 v53 = (void *)objc_claimAutoreleasedReturnValue([v52 diag]);
      __int128 v54 = objc_alloc(&OBJC_CLASS___NSString);
      id v55 = (void *)objc_claimAutoreleasedReturnValue([v96 summary]);
      __int16 v56 = -[NSString initWithFormat:]( v54,  "initWithFormat:",  @"{%@} staging-client-request [DETERMINE_ALL_AVAILABLE_FOR_UPDATE] without staging information | stagingClientRequest:%@",  v95,  v55);
      [v53 trackAnomaly:@"AUTO-STAGER" forReason:v56 withResult:6102 withError:0];

      id v16 = 0LL;
      id v41 = v95;
      char v57 = objc_alloc(&OBJC_CLASS___NSString);
      __int128 v21 = (NSString *)objc_claimAutoreleasedReturnValue([v96 summary]);
      uint64_t v58 = -[NSString initWithFormat:]( v57,  "initWithFormat:",  @"staging-client-request [DETERMINE_ALL_AVAILABLE_FOR_UPDATE] without staging update-attributes | stagingClientRequest:%@",  v21);
    }

    __int128 v30 = v58;
    __int128 v31 = self;
LABEL_21:
    double v32 = v41;
    goto LABEL_22;
  }

  if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v10,  @"MA-AUTO-STAGE:DETERMINE_ALL_AVAILABLE"))
  {
    __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v14 clientAssetSelector]);
    __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v34 assetSpecifier]);
    -[MADAutoAssetStager setAssetTargetOSVersion:](self, "setAssetTargetOSVersion:", v35);

    __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v14 clientAssetSelector]);
    unsigned int v37 = (void *)objc_claimAutoreleasedReturnValue([v36 assetVersion]);
    -[MADAutoAssetStager setAssetTargetBuildVersion:](self, "setAssetTargetBuildVersion:", v37);

    -[MADAutoAssetStager setAssetTargetTrainName:](self, "setAssetTargetTrainName:", 0LL);
    -[MADAutoAssetStager setAssetTargetRestoreVersion:](self, "setAssetTargetRestoreVersion:", 0LL);
  }

  else
  {
    if (v19)
    {
      __int128 v21 = (NSString *)objc_claimAutoreleasedReturnValue([v16 updateAttributes]);
      uint64_t v22 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager adoptTargetFromUpdateAttributes:fromUpdateAttributes:forGroupDetermine:]( self,  "adoptTargetFromUpdateAttributes:fromUpdateAttributes:forGroupDetermine:",  v95,  v21,  0LL));
      if (!v22)
      {
        id v94 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
        id v81 = (void *)objc_claimAutoreleasedReturnValue([v94 diag]);
        id v82 = objc_alloc(&OBJC_CLASS___NSString);
        id v83 = (void *)objc_claimAutoreleasedReturnValue([v96 summary]);
        id v84 = -[NSString initWithFormat:]( v82,  "initWithFormat:",  @"{%@} staging-client-request [DOWNLOAD_GROUPS] unable to form target-name | stagingClientRequest:%@",  v95,  v83);
        [v81 trackAnomaly:@"AUTO-STAGER" forReason:v84 withResult:6101 withError:0];

        uint64_t v85 = objc_alloc(&OBJC_CLASS___NSString);
        __int16 v86 = (void *)objc_claimAutoreleasedReturnValue([v96 summary]);
        uint64_t v87 = -[NSString initWithFormat:]( v85,  "initWithFormat:",  @"staging-client-request [DOWNLOAD_GROUPS] unable to form target-name  | stagingClientRequest:%@",  v86);
        -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  v95,  v96,  6101LL,  0LL,  v87);

        goto LABEL_38;
      }

- (BOOL)_isStagingClientRequestForActiveTarget:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_isStagingClientRequestForActiveTarget",  v7);
  id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _updateAttributesFromStagingRequest:fromLocation:]( self,  "_updateAttributesFromStagingRequest:fromLocation:",  v6,  v7));

  if (!v11)
  {
    id v13 = 0LL;
    __int128 v24 = 0LL;
    id v25 = 0LL;
    unsigned int v17 = 0LL;
    LOBYTE(v19) = 0;
    goto LABEL_27;
  }

  id v12 = [v11 safeObjectForKey:@"OSVersion" ofClass:objc_opt_class(NSString)];
  id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  id v14 = [v11 safeObjectForKey:@"Build" ofClass:objc_opt_class(NSString)];
  uint64_t v45 = objc_claimAutoreleasedReturnValue(v14);
  id v15 = [v11 safeObjectForKey:@"TrainName" ofClass:objc_opt_class(NSString)];
  uint64_t v44 = objc_claimAutoreleasedReturnValue(v15);
  id v16 = [v11 safeObjectForKey:@"RestoreVersion" ofClass:objc_opt_class(NSString)];
  unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  unsigned int v19 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v17, v18);

  if (!v19) {
    goto LABEL_7;
  }
  id v43 = v10;
  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
  id v42 = v13;
  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
  if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v45, v21) & 1) == 0)
  {

LABEL_10:
    goto LABEL_11;
  }

  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  unsigned __int8 v23 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v44, v22);

  if ((v23 & 1) != 0)
  {
    LOBYTE(v19) = 1;
    id v10 = v43;
LABEL_7:
    __int128 v24 = (void *)v45;
    id v25 = (void *)v44;
    goto LABEL_27;
  }

- (id)_updateAttributesFromStagingRequest:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_updateAttributesFromStagingRequest",  v7);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 messageName]);

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v6 clientRequestMessage]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 message]);

  id v15 = [v14 safeObjectForKey:@"instance" ofClass:objc_opt_class(MAAutoAssetInfoInstance)];
  id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  id v17 = [v14 safeObjectForKey:@"staging" ofClass:objc_opt_class(MAAutoAssetInfoStaging)];
  unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
  if (!v16)
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v20 diag]);
    uint64_t v22 = objc_alloc(&OBJC_CLASS___NSString);
    unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    __int128 v24 = -[NSString initWithFormat:]( v22,  "initWithFormat:",  @"{%@} staging-client-request received with no instance | stagingClientRequest:%@",  v10,  v23);
    goto LABEL_12;
  }

  if (!+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO-STAGE:DETERMINE_GROUPS_AVAILABLE_FOR_UPDATE"))
  {
    if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v12,  @"MA-AUTO-STAGE:DOWNLOAD_GROUPS"))
    {
      if (v18)
      {
        id v25 = (void *)objc_claimAutoreleasedReturnValue([v18 updateAttributes]);

        if (v25)
        {
LABEL_16:
          __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v18 updateAttributes]);
          goto LABEL_21;
        }

        id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
        __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v20 diag]);
        __int16 v26 = objc_alloc(&OBJC_CLASS___NSString);
        unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
        __int128 v27 = -[NSString initWithFormat:]( v26,  "initWithFormat:",  @"{%@} [STAGING-CLIENT-REQUEST(GENERAL)] [BY-GROUP-MODE] without staging update-attributes | stagingClientRequest:%@",  v10,  v23);
      }

      else
      {
        id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
        __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v20 diag]);
        __int128 v36 = objc_alloc(&OBJC_CLASS___NSString);
        unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
        __int128 v27 = -[NSString initWithFormat:]( v36,  "initWithFormat:",  @"{%@} staging-client download-groups-request [BY-GROUP-MODE] without staging information | stagingClientRequest:%@",  v10,  v23);
      }

      goto LABEL_19;
    }

    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v20 diag]);
    __int128 v28 = objc_alloc(&OBJC_CLASS___NSString);
    unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    __int128 v24 = -[NSString initWithFormat:]( v28,  "initWithFormat:",  @"{%@} staging-client-request received of type not expected [BY-GROUP-MODE] | stagingClientRequest:%@",  v10,  v23);
LABEL_12:
    __int128 v29 = v24;
    __int128 v30 = v21;
    __int128 v31 = v29;
    uint64_t v32 = 6111LL;
LABEL_20:
    [v30 trackAnomaly:@"AUTO-STAGER" forReason:v31 withResult:v32 withError:0];

    __int128 v35 = 0LL;
    goto LABEL_21;
  }

  if (!v18)
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v20 diag]);
    __int128 v33 = objc_alloc(&OBJC_CLASS___NSString);
    unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    __int128 v27 = -[NSString initWithFormat:]( v33,  "initWithFormat:",  @"{%@} staging-client determine-groups-request [BY-GROUP-MODE] without staging information | stagingClientRequest:%@",  v10,  v23);
LABEL_19:
    __int128 v29 = v27;
    __int128 v30 = v21;
    __int128 v31 = v29;
    uint64_t v32 = 6102LL;
    goto LABEL_20;
  }

  unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue([v18 allAvailableForStagingAttributes]);
  if (v19)
  {

    goto LABEL_15;
  }

  __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v18 updateAttributes]);

  if (!v34)
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v20 diag]);
    unsigned int v37 = objc_alloc(&OBJC_CLASS___NSString);
    unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    __int128 v27 = -[NSString initWithFormat:]( v37,  "initWithFormat:",  @"{%@} staging-client determine-groups-request [BY-GROUP-MODE] without staging update-attributes | stagingClientRequest:%@",  v10,  v23);
    goto LABEL_19;
  }

- (id)_stagingClientMessageDesire:(id)a3 forClientRequest:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  if (v7
    && (uint64_t v10 = objc_claimAutoreleasedReturnValue([v7 clientRequestMessage])) != 0
    && (id v11 = (void *)v10,
        id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 clientRequestMessage]),
        id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 message]),
        v13,
        v12,
        v11,
        v13))
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v7 clientRequestMessage]);
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 message]);

    id v16 = [v15 safeObjectForKey:@"desire" ofClass:objc_opt_class(MAAutoAssetInfoDesire)];
    id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  }

  else
  {
    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([v15 diag]);
    unsigned int v19 = objc_alloc(&OBJC_CLASS___NSString);
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
    __int128 v21 = -[NSString initWithFormat:]( v19,  "initWithFormat:",  @"{%@:_stagingClientMessageDesire} incomplete staging-client-request:%@",  v6,  v20);
    [v18 trackAnomaly:@"AUTO-STAGER" forReason:v21 withResult:6103 withError:0];

    id v17 = 0LL;
  }

  return v17;
}

- (id)_stagingClientMessageStagingClientProcessName:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a3 clientRequestMessage]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 message]);

  id v5 = [v4 safeObjectForKey:@"instance" ofClass:objc_opt_class(MAAutoAssetInfoInstance)];
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = v6;
  if (v6) {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 clientProcessName]);
  }
  else {
    id v8 = 0LL;
  }

  return v8;
}

- (id)newStagingInfoWithGroupsAvailableForStaging:(id)a3 indicatingHaveAvailable:(BOOL)a4
{
  return -[MADAutoAssetStager newStagingInfoWithGroupsAvailableForStaging:indicatingHaveAvailable:usingTargetLookupKey:]( self,  "newStagingInfoWithGroupsAvailableForStaging:indicatingHaveAvailable:usingTargetLookupKey:",  a3,  a4,  0LL);
}

- (id)newStagingInfoWithGroupsAvailableForStaging:(id)a3 indicatingHaveAvailable:(BOOL)a4 usingTargetLookupKey:(id)a5
{
  BOOL v6 = a4;
  id v8 = a3;
  id v9 = a5;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  id v12 = objc_alloc(&OBJC_CLASS___MAAutoAssetInfoStaging);
  LOBYTE(v11) = objc_opt_respondsToSelector( v12,  "initWithUpdateAttributes:withByGroupAvailableForStaging:withByGroupTotalExpectedBytes:");

  if ((v11 & 1) != 0)
  {
    id v13 = v9;
    id v14 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    unsigned int v49 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    unsigned __int8 v47 = v13;
    if (v13)
    {
      if (!v6) {
        goto LABEL_31;
      }
    }

    else
    {
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
      unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
      unsigned __int8 v47 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v22,  v23));

      if (!v6)
      {
LABEL_31:
        id v43 = objc_alloc(&OBJC_CLASS___MAAutoAssetInfoStaging);
        uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeTargetUpdateAttributes](self, "activeTargetUpdateAttributes"));
        id v21 = [v43 initWithUpdateAttributes:v44 withByGroupAvailableForStaging:v14 withByGroupTotalExpectedBytes:v49];

        goto LABEL_32;
      }
    }

    id v46 = v9;
    __int128 v55 = 0u;
    __int128 v56 = 0u;
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetGroupNames](self, "assetTargetGroupNames"));
    __int128 v24 = v47;
    id v51 = [obj countByEnumeratingWithState:&v53 objects:v57 count:16];
    if (v51)
    {
      uint64_t v50 = *(void *)v54;
      do
      {
        id v25 = 0LL;
        do
        {
          if (*(void *)v54 != v50) {
            objc_enumerationMutation(obj);
          }
          if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  *(void *)(*((void *)&v53 + 1) + 8LL * (void)v25),  @"STAGE_GROUP_REQUIRED"))
          {
            __int16 v26 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingRequiredByTarget]( self,  "availableForStagingRequiredByTarget"));
            __int128 v27 = @"STAGE_GROUP_REQUIRED";
          }

          else
          {
            __int16 v26 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingOptionalByTarget]( self,  "availableForStagingOptionalByTarget"));
            __int128 v27 = @"STAGE_GROUP_OPTIONAL";
          }

          id v28 = [v26 safeObjectForKey:v24 ofClass:objc_opt_class(NSMutableArray)];
          __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(v28);

          uint64_t v52 = 0LL;
          if ([v29 count])
          {
            __int128 v30 = -[MADAutoAssetStager _newStagingInfoAvailable:fromAvailableForStaging:providingTotalExpectedBytes:]( self,  "_newStagingInfoAvailable:fromAvailableForStaging:providingTotalExpectedBytes:",  v8,  v29,  &v52);
            if (-[NSNumber count](v30, "count")) {
              BOOL v31 = v52 == 0;
            }
            else {
              BOOL v31 = 1;
            }
            if (v31)
            {
              id v42 = (NSNumber *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
              uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(-[NSNumber diag](v42, "diag"));
              __int128 v33 = v14;
              id v34 = v8;
              __int128 v35 = objc_alloc(&OBJC_CLASS___NSString);
              unsigned int v36 = -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups");
              unsigned int v37 = @"N";
              if (v36) {
                unsigned int v37 = @"Y";
              }
              uint64_t v38 = -[NSString initWithFormat:]( v35,  "initWithFormat:",  @"{%@:newStagingInfoWithGroupsAvailableForStaging} reverted to ALL-MODE staging information | groupName:%@ | stagingClientUsingGroups:%@ | ableToReportByGroup:%@",  v34,  v27,  v37,  @"Y");
              [v32 trackAnomaly:@"AUTO-STAGER" forReason:v38 withResult:6111 withError:0];

              id v8 = v34;
              id v14 = v33;
              __int128 v24 = v47;
            }

            else
            {
              id v41 = objc_alloc(&OBJC_CLASS___NSNumber);
              id v42 = -[NSNumber initWithLongLong:](v41, "initWithLongLong:", v52);
              -[NSMutableDictionary setSafeObject:forKey:](v14, "setSafeObject:forKey:", v30, v27);
              -[NSMutableDictionary setSafeObject:forKey:](v49, "setSafeObject:forKey:", v42, v27);
            }
          }

          else
          {
            id v39 = objc_alloc(&OBJC_CLASS___NSNumber);
            __int128 v30 = -[NSNumber initWithLongLong:](v39, "initWithLongLong:", v52);
            id v40 = objc_alloc_init(&OBJC_CLASS___NSArray);
            -[NSMutableDictionary setSafeObject:forKey:](v14, "setSafeObject:forKey:", v40, v27);

            -[NSMutableDictionary setSafeObject:forKey:](v49, "setSafeObject:forKey:", v30, v27);
          }

          id v25 = (char *)v25 + 1;
        }

        while (v51 != v25);
        id v51 = [obj countByEnumeratingWithState:&v53 objects:v57 count:16];
      }

      while (v51);
    }

    id v9 = v46;
    goto LABEL_31;
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 diag]);
  id v17 = objc_alloc(&OBJC_CLASS___NSString);
  unsigned int v18 = -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups");
  unsigned int v19 = @"Y";
  if (!v18) {
    unsigned int v19 = @"N";
  }
  id v20 = -[NSString initWithFormat:]( v17,  "initWithFormat:",  @"{%@:newStagingInfoWithGroupsAvailableForStaging} reverted to ALL-MODE staging information | stagingClientUsingGroups:%@ | ableToReportByGroup:%@",  v8,  v19,  @"N");
  [v16 trackAnomaly:@"AUTO-STAGER" forReason:v20 withResult:6111 withError:0];

  id v21 = -[MADAutoAssetStager newStagingInfoWithAllAvailableForStaging:]( self,  "newStagingInfoWithAllAvailableForStaging:",  v8);
LABEL_32:

  return v21;
}

- (id)newStagingInfoWithAllAvailableForStaging:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  BOOL v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v15 = 0LL;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
  id v8 = -[MADAutoAssetStager _newStagingInfoAvailable:fromAvailableForStaging:providingTotalExpectedBytes:]( self,  "_newStagingInfoAvailable:fromAvailableForStaging:providingTotalExpectedBytes:",  v4,  v7,  &v15);

  if (![v8 count] || !v15)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 diag]);
    id v11 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:newStagingInfoWithAllAvailableForStaging} intending to reply to staging-client with indication of candidate(s) available for staging (nothing available)",  v4);
    [v10 trackAnomaly:@"AUTO-STAGER" forReason:v11 withResult:6111 withError:0];
  }

  id v12 = objc_alloc(&OBJC_CLASS___MAAutoAssetInfoStaging);
  id v13 = [v12 initWithAvailableForStaging:v8 withTotalExpectedBytes:v15];

  return v13;
}

- (id)_newStagingInfoAvailable:(id)a3 fromAvailableForStaging:(id)a4 providingTotalExpectedBytes:(unint64_t *)a5
{
  id v35 = a3;
  id v7 = a4;
  id v34 = self;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  unsigned int v37 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  __int128 v42 = 0u;
  id obj = v7;
  id v10 = [obj countByEnumeratingWithState:&v39 objects:v43 count:16];
  if (v10)
  {
    id v11 = v10;
    unint64_t v12 = 0LL;
    uint64_t v38 = *(void *)v40;
    do
    {
      for (i = 0LL; i != v11; i = (char *)i + 1)
      {
        if (*(void *)v40 != v38) {
          objc_enumerationMutation(obj);
        }
        id v14 = *(void **)(*((void *)&v39 + 1) + 8LL * (void)i);
        uint64_t v15 = objc_autoreleasePoolPush();
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v14 metadata]);
        id v17 = [v16 safeIntegerForKey:@"_UnarchivedSize"];

        if (v17)
        {
          unsigned int v18 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
          unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
          id v20 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSpecifier]);
          id v21 = (void *)objc_claimAutoreleasedReturnValue([v14 assetVersion]);
          id v22 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v18,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v19,  v20,  v21);

          unsigned __int8 v23 = (void *)objc_claimAutoreleasedReturnValue([v14 metadata]);
          __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v22 persistedEntryID]);
          -[NSMutableDictionary setSafeObject:forKey:](v37, "setSafeObject:forKey:", v23, v24);

          v12 += (unint64_t)v17;
        }

        else
        {
          id v22 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](v34, "autoStagerFSM"));
          id v25 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
          __int16 v26 = objc_alloc(&OBJC_CLASS___NSString);
          __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v14 summary]);
          id v28 = -[NSString initWithFormat:]( v26,  "initWithFormat:",  @"{%@:_newStagingInfoAvailable} entry tracked as availableForStaging with unarchivedSize of 0 - ignored | descriptor:%@",  v35,  v27);
          [v25 trackAnomaly:@"AUTO-STAGER" forReason:v28 withResult:6108 withError:0];
        }

        objc_autoreleasePoolPop(v15);
      }

      id v11 = [obj countByEnumeratingWithState:&v39 objects:v43 count:16];
    }

    while (v11);
  }

  else
  {
    unint64_t v12 = 0LL;
  }

  if (!-[NSMutableDictionary count](v37, "count") || !v12)
  {
    __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](v34, "autoStagerFSM"));
    __int128 v30 = (void *)objc_claimAutoreleasedReturnValue([v29 diag]);
    BOOL v31 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:_newStagingInfoAvailable} intending to reply to staging-client with indication of candidate(s) available for staging (nothing available)",  v35);
    [v30 trackAnomaly:@"AUTO-STAGER" forReason:v31 withResult:6111 withError:0];
  }

  if (a5) {
    *a5 = v12;
  }

  return v37;
}

- (id)newStagedInfoWithGroupsSuccessfullyStaged:(id)a3 indicatingHaveStaged:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = objc_alloc(&OBJC_CLASS___MAAutoAssetInfoStaged);
  LOBYTE(v8) = objc_opt_respondsToSelector(v9, "initWithByGroupTotalStagedBytes:withByGroupAssetsSuccessfullyStaged:");

  if ((v8 & 1) == 0)
  {
    unsigned __int8 v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v48 = (void *)objc_claimAutoreleasedReturnValue([v47 diag]);
    unsigned int v49 = objc_alloc(&OBJC_CLASS___NSString);
    unsigned int v50 = -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups");
    id v51 = @"Y";
    if (!v50) {
      id v51 = @"N";
    }
    uint64_t v52 = -[NSString initWithFormat:]( v49,  "initWithFormat:",  @"{%@:newStagedInfoWithGroupsSuccessfullyStaged} reverted to ALL-MODE staging information | stagingClientUsingGroups:%@ | ableToReportByGroup:%@",  v6,  v51,  @"N");
    [v48 trackAnomaly:@"AUTO-STAGER" forReason:v52 withResult:6111 withError:0];

    id v46 = -[MADAutoAssetStager newStagedInfoWithAllSuccessfullyStaged:]( self,  "newStagedInfoWithAllSuccessfullyStaged:",  v6);
    goto LABEL_37;
  }

  id v10 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  if (!v4) {
    goto LABEL_33;
  }
  unsigned int v12 = +[MADAutoAssetControlManager preferenceStagingLookupFlipRequiredOptional]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceStagingLookupFlipRequiredOptional");
  id v13 = &stru_355768;
  unsigned int v59 = v12;
  if (v12) {
    id v13 = @"FLIPPED-TO-";
  }
  id v14 = v13;
  __int128 v66 = 0u;
  __int128 v67 = 0u;
  __int128 v68 = 0u;
  __int128 v69 = 0u;
  uint64_t v15 = (NSNumber *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  id v64 = -[NSNumber countByEnumeratingWithState:objects:count:]( v15,  "countByEnumeratingWithState:objects:count:",  &v66,  v78,  16LL);
  if (!v64)
  {
LABEL_32:

    goto LABEL_33;
  }

  __int128 v54 = v11;
  __int128 v55 = v10;
  uint64_t v16 = 0LL;
  uint64_t v61 = 0LL;
  uint64_t v62 = 0LL;
  uint64_t v60 = 0LL;
  uint64_t v63 = *(void *)v67;
  __int128 v56 = v14;
  id obj = v15;
  do
  {
    for (i = 0LL; i != v64; i = (char *)i + 1)
    {
      if (*(void *)v67 != v63) {
        objc_enumerationMutation(obj);
      }
      uint64_t v18 = *(void *)(*((void *)&v66 + 1) + 8LL * (void)i);
      v65 = objc_autoreleasePoolPush();
      unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
      id v20 = [v19 safeObjectForKey:v18 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
      id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);

      id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 metadata]);
      id v23 = [v22 safeIntegerForKey:@"_UnarchivedSize"];

      unsigned int v24 = [v21 isPreSUStagingRequired];
      if (v23)
      {
        id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
        __int16 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

        BOOL v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);
        if (v59 == v24)
        {
          v62 += (uint64_t)v23;
          ++v16;
          if (!v27) {
            goto LABEL_26;
          }
          id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
          __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
          *(_DWORD *)buf = 138544130;
          id v71 = v28;
          __int16 v72 = 2114;
          id v73 = v6;
          __int16 v74 = 2114;
          v75 = v14;
          __int16 v76 = 2114;
          v77 = v29;
          __int128 v30 = v26;
          BOOL v31 = "%{public}@\n[AUTO-STAGER] {%{public}@} [%{public}@OPTIONAL] | stagedDescriptor:%{public}@";
        }

        else
        {
          ++v60;
          v61 += (uint64_t)v23;
          if (!v27) {
            goto LABEL_26;
          }
          id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
          __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
          *(_DWORD *)buf = 138544130;
          id v71 = v28;
          __int16 v72 = 2114;
          id v73 = v6;
          __int16 v74 = 2114;
          v75 = v14;
          __int16 v76 = 2114;
          v77 = v29;
          __int128 v30 = v26;
          BOOL v31 = "%{public}@\n[AUTO-STAGER] {%{public}@} [%{public}@REQUIRED] | stagedDescriptor:%{public}@";
        }

        goto LABEL_23;
      }

      uint64_t v58 = v16;
      id v32 = v6;
      id v33 = [v21 downloadedFilesystemBytes];
      __int16 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      id v34 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s diag](v26, "diag"));
      id v35 = self;
      unsigned int v36 = objc_alloc(&OBJC_CLASS___NSString);
      uint64_t v37 = objc_claimAutoreleasedReturnValue([v21 summary]);
      uint64_t v38 = (void *)v37;
      if ((uint64_t)v33 < 1)
      {
        id v43 = -[NSString initWithFormat:]( v36,  "initWithFormat:",  @"{%@:newStagedInfoWithGroupsSuccessfullyStaged} entry tracked as successfullyStaged with unarchivedSize of 0 - ignored | descriptor:%@",  v32,  v37);
        [v34 trackAnomaly:@"AUTO-STAGER" forReason:v43 withResult:6108 withError:0];

        id v6 = v32;
        self = v35;
        uint64_t v16 = v58;
      }

      else
      {
        __int128 v39 = -[NSString initWithFormat:]( v36,  "initWithFormat:",  @"{%@:newStagedInfoWithGroupsSuccessfullyStaged} entry tracked as successfullyStaged with unarchivedSize of 0 - using downloadedFilesystemBytes | descriptor:%@",  v32,  v37);
        [v34 trackAnomaly:@"AUTO-STAGER" forReason:v39 withResult:6108 withError:0];

        id v40 = [v21 downloadedFilesystemBytes];
        __int128 v41 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v35, "logger"));
        __int16 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 oslog]);

        BOOL v42 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);
        self = v35;
        if (v59 == v24)
        {
          v62 += (uint64_t)v40;
          uint64_t v16 = v58 + 1;
          if (v42)
          {
            id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
            *(_DWORD *)buf = 138544130;
            id v71 = v28;
            __int16 v72 = 2114;
            id v6 = v32;
            id v73 = v32;
            __int16 v74 = 2114;
            id v14 = v56;
            v75 = v56;
            __int16 v76 = 2114;
            v77 = v29;
            __int128 v30 = v26;
            BOOL v31 = "%{public}@\n"
                  "[AUTO-STAGER] {%{public}@} [%{public}@OPTIONAL] (unarchivedSize=0) | stagedDescriptor:%{public}@";
            goto LABEL_23;
          }
        }

        else
        {
          uint64_t v16 = v58;
          ++v60;
          v61 += (uint64_t)v40;
          if (v42)
          {
            id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
            *(_DWORD *)buf = 138544130;
            id v71 = v28;
            __int16 v72 = 2114;
            id v6 = v32;
            id v73 = v32;
            __int16 v74 = 2114;
            id v14 = v56;
            v75 = v56;
            __int16 v76 = 2114;
            v77 = v29;
            __int128 v30 = v26;
            BOOL v31 = "%{public}@\n"
                  "[AUTO-STAGER] {%{public}@} [%{public}@REQUIRED] (unarchivedSize=0) | stagedDescriptor:%{public}@";
LABEL_23:
            _os_log_impl(&dword_0, v30, OS_LOG_TYPE_DEFAULT, v31, buf, 0x2Au);

            goto LABEL_26;
          }
        }

        id v6 = v32;
      }

      id v14 = v56;
LABEL_26:

      objc_autoreleasePoolPop(v65);
    }

    id v64 = -[NSNumber countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v66,  v78,  16LL);
  }

  while (v64);

  id v11 = v54;
  id v10 = v55;
  if (v61 >= 1)
  {
    uint64_t v44 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", v61);
    uint64_t v45 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", v60);
    -[NSMutableDictionary setSafeObject:forKey:](v55, "setSafeObject:forKey:", v44, @"STAGE_GROUP_REQUIRED");
    -[NSMutableDictionary setSafeObject:forKey:](v54, "setSafeObject:forKey:", v45, @"STAGE_GROUP_REQUIRED");
  }

  if (v62 >= 1)
  {
    id v14 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", v62);
    uint64_t v15 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", v16);
    -[NSMutableDictionary setSafeObject:forKey:](v55, "setSafeObject:forKey:", v14, @"STAGE_GROUP_OPTIONAL");
    -[NSMutableDictionary setSafeObject:forKey:](v54, "setSafeObject:forKey:", v15, @"STAGE_GROUP_OPTIONAL");
    goto LABEL_32;
  }

- (id)newStagedInfoWithAllSuccessfullyStaged:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  __int128 v44 = 0u;
  __int128 v45 = 0u;
  __int128 v42 = 0u;
  __int128 v43 = 0u;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  id v8 = [v7 countByEnumeratingWithState:&v42 objects:v46 count:16];
  if (!v8)
  {

    id v11 = 0LL;
    uint64_t v10 = 0LL;
LABEL_20:
    BOOL v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v32 = v11;
    id v33 = (void *)objc_claimAutoreleasedReturnValue([v31 diag]);
    id v34 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:newStagedInfoWithAllSuccessfullyStaged} intending to reply to staging-client with indication of staged content (nothing staged)",  v4);
    [v33 trackAnomaly:@"AUTO-STAGER" forReason:v34 withResult:6111 withError:0];

    id v11 = v32;
    goto LABEL_21;
  }

  id v9 = v8;
  uint64_t v37 = v7;
  id v38 = v4;
  uint64_t v10 = 0LL;
  id v11 = 0LL;
  uint64_t v41 = *(void *)v43;
  do
  {
    unsigned int v12 = 0LL;
    id v39 = v9;
    do
    {
      if (*(void *)v43 != v41) {
        objc_enumerationMutation(v7);
      }
      uint64_t v13 = *(void *)(*((void *)&v42 + 1) + 8LL * (void)v12);
      id v14 = objc_autoreleasePoolPush();
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
      id v16 = [v15 safeObjectForKey:v13 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
      id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 metadata]);
      id v19 = [v18 safeIntegerForKey:@"_UnarchivedSize"];

      if (v19)
      {
        id v11 = &v11[(void)v19];
        ++v10;
      }

      else
      {
        id v20 = v11;
        uint64_t v40 = v10;
        id v21 = [v17 downloadedFilesystemBytes];
        id v22 = self;
        id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
        unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue([v23 diag]);
        id v25 = objc_alloc(&OBJC_CLASS___NSString);
        uint64_t v26 = objc_claimAutoreleasedReturnValue([v17 summary]);
        BOOL v27 = (void *)v26;
        if ((uint64_t)v21 < 1)
        {
          __int128 v29 = -[NSString initWithFormat:]( v25,  "initWithFormat:",  @"{%@:newStagedInfoWithAllSuccessfullyStaged} entry tracked as successfullyStaged with unarchivedSize of 0 - ignored | descriptor:%@",  v38,  v26);
          [v24 trackAnomaly:@"AUTO-STAGER" forReason:v29 withResult:6108 withError:0];

          self = v22;
          uint64_t v10 = v40;
          id v11 = v20;
        }

        else
        {
          id v28 = -[NSString initWithFormat:]( v25,  "initWithFormat:",  @"{%@:newStagedInfoWithAllSuccessfullyStaged} entry tracked as successfullyStaged with unarchivedSize of 0 - using downloadedFilesystemBytes | descriptor:%@",  v38,  v26);
          [v24 trackAnomaly:@"AUTO-STAGER" forReason:v28 withResult:6108 withError:0];

          id v11 = &v20[(void)[v17 downloadedFilesystemBytes]];
          uint64_t v10 = v40 + 1;
          self = v22;
        }

        id v7 = v37;
        id v9 = v39;
      }

      objc_autoreleasePoolPop(v14);
      unsigned int v12 = (char *)v12 + 1;
    }

    while (v9 != v12);
    id v9 = [v7 countByEnumeratingWithState:&v42 objects:v46 count:16];
  }

  while (v9);

  BOOL v30 = (uint64_t)v11 < 1 || v10 == 0;
  id v4 = v38;
  if (v30) {
    goto LABEL_20;
  }
LABEL_21:
  id v35 = [[MAAutoAssetInfoStaged alloc] initWithTotalStagedBytes:v11 withAssetsSuccessfullyStaged:v10];

  return v35;
}

- (id)adoptTargetFromUpdateAttributes:(id)a3 fromUpdateAttributes:(id)a4 forGroupDetermine:(BOOL)a5
{
  id v7 = a3;
  id v8 = a4;
  id v9 = [v8 safeObjectForKey:@"OSVersion" ofClass:objc_opt_class(NSString)];
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = [v8 safeObjectForKey:@"Build" ofClass:objc_opt_class(NSString)];
  unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  id v13 = [v8 safeObjectForKey:@"TrainName" ofClass:objc_opt_class(NSString)];
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  id v15 = [v8 safeObjectForKey:@"RestoreVersion" ofClass:objc_opt_class(NSString)];
  id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  id v17 = [v8 safeObjectForKey:@"GroupNames" ofClass:objc_opt_class(NSArray)];
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
  id v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:]( self,  "_targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:",  @"CLIENT",  v10,  v12,  v14,  v16));
  -[MADAutoAssetStager setAssetTargetOSVersion:](self, "setAssetTargetOSVersion:", v10);
  -[MADAutoAssetStager setAssetTargetBuildVersion:](self, "setAssetTargetBuildVersion:", v12);
  -[MADAutoAssetStager setAssetTargetTrainName:](self, "setAssetTargetTrainName:", v14);
  -[MADAutoAssetStager setAssetTargetRestoreVersion:](self, "setAssetTargetRestoreVersion:", v16);
  -[MADAutoAssetStager setAssetTargetGroupNames:](self, "setAssetTargetGroupNames:", v18);
  -[MADAutoAssetStager setActiveTargetUpdateAttributes:](self, "setActiveTargetUpdateAttributes:", v8);

  -[MADAutoAssetStager setStagingClientChosen:](self, "setStagingClientChosen:", 1LL);
  -[MADAutoAssetStager setStagingClientUsingGroups:](self, "setStagingClientUsingGroups:", 1LL);
  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
    int v25 = 138543874;
    uint64_t v26 = v22;
    __int16 v27 = 2114;
    id v28 = v23;
    __int16 v29 = 2114;
    id v30 = v7;
    _os_log_impl( &dword_0,  v21,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[%{public}@] {%{public}@} [ADOPTED-TARGET] latest target from client-provided update-attributes",  (uint8_t *)&v25,  0x20u);
  }

  return v19;
}

- (void)_replyToStagingClient:(id)a3 replyingToRequest:(id)a4 withErrorCode:(int64_t)a5 withUnderlyingError:(id)a6 withDescription:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a6;
  id v15 = a7;
  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v17 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v16 extendedStateQueue]);
  dispatch_assert_queue_V2(v17);

  if (!v13)
  {
    id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v34 = (void *)objc_claimAutoreleasedReturnValue([v33 diag]);
    id v35 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} %@ (reply to staging-client-request when no staging-client-request)",  v12,  v15);
LABEL_8:
    unsigned int v36 = v35;
    [v34 trackAnomaly:@"AUTO-STAGER" forReason:v35 withResult:6111 withError:v14];

    goto LABEL_9;
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v13 clientReplyCompletion]);

  if (!v18)
  {
    id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v34 = (void *)objc_claimAutoreleasedReturnValue([v33 diag]);
    id v35 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} %@ (pending staging-client-request with no reply-completion)",  v12,  v15);
    goto LABEL_8;
  }

  id v19 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v13 clientRequestMessage]);
  id v21 = v12;
  id v22 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v20));

  id v23 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue([v13 clientID]);
  id v39 = v19;
  int v25 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v23,  "initWithType:messageName:clientID:version:message:",  2LL,  v22,  v24,  0LL,  v19);

  uint64_t v40 = v21;
  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  a5,  v21,  v14,  v15));
  __int16 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsClientRepliesFailure](self, "statisticsClientRepliesFailure"));
  id v28 = (void *)objc_claimAutoreleasedReturnValue([v13 clientRequestMessage]);
  __int16 v29 = (void *)objc_claimAutoreleasedReturnValue([v28 messageName]);
  [v27 incrementForClientRequestMessage:v29];

  id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  BOOL v31 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 oslog]);

  if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
  {
    uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
    id v38 = (void *)objc_claimAutoreleasedReturnValue([v26 checkedDescription]);
    *(_DWORD *)buf = 138544130;
    __int128 v42 = v37;
    __int16 v43 = 2114;
    __int128 v44 = v40;
    __int16 v45 = 2114;
    id v46 = v22;
    __int16 v47 = 2114;
    id v48 = v38;
    _os_log_error_impl( &dword_0,  v31,  OS_LOG_TYPE_ERROR,  "\n [%{public}@] {%{public}@} [STAGING-CLIENT-REPLY] %{public}@ reply to staging-client (error) | responseError:%{public}@",  buf,  0x2Au);
  }

  id v32 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue([v13 clientReplyCompletion]);
  ((void (**)(void, SUCoreConnectMessage *, void *))v32)[2](v32, v25, v26);

  id v12 = v40;
LABEL_9:
}

- (void)_replyToStagingClient:(id)a3 withStagingInfo:(id)a4 replyingToStagingRequest:(id)a5 recordingOperation:(int64_t)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 extendedStateQueue]);
  dispatch_assert_queue_V2(v14);

  if (v12)
  {
    id v37 = v10;
    id v15 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v12 clientRequestMessage]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v16));

    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v12 clientRequestMessage]);
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 messageName]);
    +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  a6,  4LL,  4LL,  v19);

    -[NSMutableDictionary setSafeObject:forKey:](v15, "setSafeObject:forKey:", v11, @"staging");
    id v20 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v12 clientID]);
    id v22 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v20,  "initWithType:messageName:clientID:version:message:",  2LL,  v17,  v21,  0LL,  v15);

    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsClientRepliesSuccess](self, "statisticsClientRepliesSuccess"));
    unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue([v12 clientRequestMessage]);
    int v25 = (void *)objc_claimAutoreleasedReturnValue([v24 messageName]);
    [v23 incrementForClientRequestMessage:v25];

    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    __int16 v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      __int16 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
      id v30 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);
      *(_DWORD *)buf = 138544386;
      id v39 = v28;
      __int16 v40 = 2114;
      uint64_t v41 = v29;
      __int16 v42 = 2114;
      id v43 = v37;
      __int16 v44 = 2114;
      __int16 v45 = v17;
      __int16 v46 = 2114;
      __int16 v47 = v30;
      _os_log_impl( &dword_0,  v27,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {%{public}@} [STAGING-CLIENT-REPLY] %{public}@ reply to staging-client (determine success) | stagin gInfo:%{public}@",  buf,  0x34u);
    }

    -[MADAutoAssetStager _logStagingDetails:forStagingInfo:](self, "_logStagingDetails:forStagingInfo:", v17, v11);
    BOOL v31 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue([v12 clientReplyCompletion]);
    ((void (**)(void, SUCoreConnectMessage *, void))v31)[2](v31, v22, 0LL);

    id v10 = v37;
  }

  else
  {
    id v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v33 = (void *)objc_claimAutoreleasedReturnValue([v32 diag]);
    id v34 = objc_alloc(&OBJC_CLASS___NSString);
    id v35 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);
    unsigned int v36 = -[NSString initWithFormat:]( v34,  "initWithFormat:",  @"{%@:_replyToStagingClient} | no stagingRequest to reply to | stagingInfo:%@",  v10,  v35);
    [v33 trackAnomaly:@"AUTO-STAGER" forReason:v36 withResult:6111 withError:0];
  }
}

- (void)_replyToStagingClient:(id)a3 withStagedInfo:(id)a4 replyingToStagingRequest:(id)a5 recordingOperation:(int64_t)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 extendedStateQueue]);
  dispatch_assert_queue_V2(v14);

  if (v12)
  {
    id v38 = v10;
    id v15 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v12 clientRequestMessage]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v16));

    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
    +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  a6,  4LL,  4LL,  v18);

    -[NSMutableDictionary setSafeObject:forKey:](v15, "setSafeObject:forKey:", v11, @"staging");
    id v19 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v12 clientRequestMessage]);
    id v21 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v20));
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v12 clientID]);
    id v23 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v19,  "initWithType:messageName:clientID:version:message:",  2LL,  v21,  v22,  0LL,  v15);

    unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsClientRepliesSuccess](self, "statisticsClientRepliesSuccess"));
    int v25 = (void *)objc_claimAutoreleasedReturnValue([v12 clientRequestMessage]);
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v25 messageName]);
    [v24 incrementForClientRequestMessage:v26];

    __int16 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
      BOOL v31 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);
      *(_DWORD *)buf = 138544386;
      __int16 v40 = v29;
      __int16 v41 = 2114;
      __int16 v42 = v30;
      __int16 v43 = 2114;
      id v44 = v38;
      __int16 v45 = 2114;
      __int16 v46 = v17;
      __int16 v47 = 2114;
      id v48 = v31;
      _os_log_impl( &dword_0,  v28,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {%{public}@} [STAGING-CLIENT-REPLY] %{public}@ reply to staging-client (staged) | stagedInfo:%{public}@",  buf,  0x34u);
    }

    -[MADAutoAssetStager _logStagingDetails:forStagedInfo:](self, "_logStagingDetails:forStagedInfo:", v17, v11);
    id v32 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue([v12 clientReplyCompletion]);
    ((void (**)(void, SUCoreConnectMessage *, void))v32)[2](v32, v23, 0LL);

    id v10 = v38;
  }

  else
  {
    id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v34 = (void *)objc_claimAutoreleasedReturnValue([v33 diag]);
    id v35 = objc_alloc(&OBJC_CLASS___NSString);
    unsigned int v36 = (void *)objc_claimAutoreleasedReturnValue([v11 summary]);
    id v37 = -[NSString initWithFormat:]( v35,  "initWithFormat:",  @"{%@:_replyToStagingClient} | no stagingRequest to reply to | stagedInfo:%@",  v10,  v36);
    [v34 trackAnomaly:@"AUTO-STAGER" forReason:v37 withResult:6111 withError:0];
  }
}

- (void)_replyNoCandidates:(id)a3
{
}

- (void)_replyNoCandidates:(id)a3 replyingToStagingRequest:(id)a4
{
  id v21 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = v6;
  id v10 = v9;
  if (v9)
  {
    int v11 = 0;
    id v12 = v9;
  }

  else
  {
    unsigned int v13 = -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups");
    if (v13) {
      uint64_t v14 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDetermineClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDetermineClear:forStagingTargetName:replyingToCleared:",  v21,  0LL,  0LL));
    }
    else {
      uint64_t v14 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestGeneralClear:replyingToCleared:]( self,  "_stagingClientRequestGeneralClear:replyingToCleared:",  v21,  0LL));
    }
    id v12 = (void *)v14;
    if (!v14)
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      id v16 = (id)objc_claimAutoreleasedReturnValue([v12 diag]);
      [v16 trackAnomaly:@"AUTO-STAGER" forReason:@"{ReplyNoCandidates} intending to reply to staging-client with indication of no candidates available for staging (no pending staging-client-request)" withResult:6111 withError:0];
      goto LABEL_16;
    }

    int v11 = v13 ^ 1;
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue([v12 clientReplyCompletion]);

  if (v15)
  {
    if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
    {
      id v16 = -[MADAutoAssetStager newStagingInfoWithGroupsAvailableForStaging:indicatingHaveAvailable:]( self,  "newStagingInfoWithGroupsAvailableForStaging:indicatingHaveAvailable:",  @"_replyNoCandidates",  0LL);
    }

    else
    {
      id v18 = objc_alloc(&OBJC_CLASS___MAAutoAssetInfoStaging);
      id v19 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      id v16 = [v18 initWithAvailableForStaging:v19 withTotalExpectedBytes:0];
    }

    -[MADAutoAssetStager _replyToStagingClient:withStagingInfo:replyingToStagingRequest:recordingOperation:]( self,  "_replyToStagingClient:withStagingInfo:replyingToStagingRequest:recordingOperation:",  @"ReplyNoCandidates",  v16,  v12,  900LL);
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](self, "stagingClientName"));
    +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:fromClient:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:fromClient:",  900LL,  4LL,  4LL,  v20);

    if (v11) {
      -[MADAutoAssetStager _acknowlegdeAndClearAllEliminations](self, "_acknowlegdeAndClearAllEliminations");
    }
  }

  else
  {
    id v16 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 diag]);
    [v17 trackAnomaly:@"AUTO-STAGER" forReason:@"{ReplyNoCandidates} intending to reply to staging-client with indication of no candidates available for staging (pending staging-client-request with no reply-completion)" withResult:6111 withError:0];
  }

- (void)_replyNothingStaged:(id)a3
{
}

- (void)_replyNothingStaged:(id)a3 replyingToStagingRequest:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = v7;
  int v11 = v10;
  if (!v10)
  {
    if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveClient](self, "_targetNameActiveClient"));
      int v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:",  v6,  v12,  0LL));

      if (v11) {
        goto LABEL_4;
      }
LABEL_13:
      int v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v11 diag]);
      [v18 trackAnomaly:@"AUTO-STAGER" forReason:@"{ReplyNothingStaged} intending to reply to staging-client with indication of nothing staged (no pending staging-client-request)" withResult:6111 withError:0];
      goto LABEL_14;
    }

    int v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestGeneralClear:replyingToCleared:]( self,  "_stagingClientRequestGeneralClear:replyingToCleared:",  v6,  0LL));
    if (!v11) {
      goto LABEL_13;
    }
  }

- (void)_replyHaveStagedContent:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveClient](self, "_targetNameActiveClient"));
    id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:",  v4,  v7,  0LL));

    if (v8)
    {
LABEL_3:
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 clientReplyCompletion]);

      if (v9)
      {
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequestMessage]);
        int v11 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v10));

        id v12 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
        if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups")) {
          id v13 = -[MADAutoAssetStager newStagedInfoWithGroupsSuccessfullyStaged:indicatingHaveStaged:]( self,  "newStagedInfoWithGroupsSuccessfullyStaged:indicatingHaveStaged:",  @"_replyHaveStagedContent",  1LL);
        }
        else {
          id v13 = -[MADAutoAssetStager newStagedInfoWithAllSuccessfullyStaged:]( self,  "newStagedInfoWithAllSuccessfullyStaged:",  @"_replyHaveStagedContent");
        }
        id v21 = v13;
        id v35 = v4;
        -[NSMutableDictionary setSafeObject:forKey:](v12, "setSafeObject:forKey:", v13, @"staged");
        id v22 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
        id v23 = (void *)objc_claimAutoreleasedReturnValue([v8 clientID]);
        unsigned int v24 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v22,  "initWithType:messageName:clientID:version:message:",  2LL,  v11,  v23,  0LL,  v12);

        int v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsClientRepliesSuccess](self, "statisticsClientRepliesSuccess"));
        uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v8 clientRequestMessage]);
        __int16 v27 = (void *)objc_claimAutoreleasedReturnValue([v26 messageName]);
        [v25 incrementForClientRequestMessage:v27];

        id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
        __int16 v29 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 oslog]);

        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
          BOOL v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
          id v32 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
          *(_DWORD *)buf = 138544130;
          __int16 v37 = v30;
          __int16 v38 = 2114;
          id v39 = v31;
          __int16 v40 = 2114;
          id v41 = v11;
          __int16 v42 = 2114;
          __int16 v43 = v32;
          _os_log_impl( &dword_0,  v29,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {_replyHaveStagedContent} [STAGING-CLIENT-REPLY] %{public}@ reply to staging-client (have stage d) | stagedInfo:%{public}@",  buf,  0x2Au);
        }

        -[MADAutoAssetStager _logStagingDetails:forStagedInfo:](self, "_logStagingDetails:forStagedInfo:", v11, v21);
        id v33 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue([v8 clientReplyCompletion]);
        ((void (**)(void, SUCoreConnectMessage *, void))v33)[2](v33, v24, 0LL);

        id v4 = v35;
        goto LABEL_18;
      }

      id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 diag]);
      id v20 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} intending to reply to staging-client with indication of staged content (pending staging-client-request with no reply-completion)",  v4);
LABEL_17:
      id v34 = v20;
      [v19 trackAnomaly:@"AUTO-STAGER" forReason:v20 withResult:6111 withError:0];

      goto LABEL_18;
    }
  }

  else
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestGeneralClear:replyingToCleared:]( self,  "_stagingClientRequestGeneralClear:replyingToCleared:",  v4,  0LL));
    if (v8) {
      goto LABEL_3;
    }
  }

  if (!-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 diag]);
    id v20 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} intending to reply to staging-client with indication of staged content (no pending staging-client-request)",  v4);
    goto LABEL_17;
  }

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
    *(_DWORD *)buf = 138543874;
    __int16 v37 = v16;
    __int16 v38 = 2114;
    id v39 = v17;
    __int16 v40 = 2114;
    id v41 = v4;
    _os_log_impl( &dword_0,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {%{public}@} [STAGING-CLIENT-REPLY] replied earlier to staging-client (once REQUIRED staged)",  buf,  0x20u);
  }

LABEL_18:
}

- (void)_replyWrongMode:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (!v4)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v9 diag]);
    id v10 = v26;
    __int16 v27 = @"{_replyWrongMode} intending to reply to staging-client with indication of wrong mode (no staging-client-request)";
LABEL_10:
    [v26 trackAnomaly:@"AUTO-STAGER" forReason:v27 withResult:6111 withError:0];
    goto LABEL_11;
  }

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 clientReplyCompletion]);

  if (!v7)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v9 diag]);
    id v10 = v26;
    __int16 v27 = @"{_replyWrongMode} intending to reply to staging-client with indication of wrong mode (staging-client-request with no reply-completion)";
    goto LABEL_10;
  }

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequestMessage]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager replyMessageNameForRequest:]( &OBJC_CLASS___MADAutoAssetControlManager,  "replyMessageNameForRequest:",  v8));

  id v10 = [[MAAutoAssetInfoStaged alloc] initWithTotalStagedBytes:0 withAssetsSuccessfullyStaged:0];
  int v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setSafeObject:forKey:](v11, "setSafeObject:forKey:", v10, @"staged");
  id v12 = objc_alloc(&OBJC_CLASS___SUCoreConnectMessage);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v4 clientID]);
  uint64_t v14 = -[SUCoreConnectMessage initWithType:messageName:clientID:version:message:]( v12,  "initWithType:messageName:clientID:version:message:",  2LL,  v9,  v13,  0LL,  v11);

  id v15 = objc_alloc(&OBJC_CLASS___NSString);
  unsigned int v16 = -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups");
  id v17 = @"N";
  if (v16) {
    id v17 = @"Y";
  }
  id v18 = -[NSString initWithFormat:]( v15,  "initWithFormat:",  @"wrong mode indicated by staging client | stagingClientUsingGroups:%@",  v17);
  id v19 = (void *)objc_claimAutoreleasedReturnValue( +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]( &OBJC_CLASS___MAAutoAssetError,  "buildError:fromOperation:underlyingError:withDescription:",  6606LL,  @"_replyWrongMode",  0LL,  v18));

  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsClientRepliesFailure](self, "statisticsClientRepliesFailure"));
  id v21 = (void *)objc_claimAutoreleasedReturnValue([v4 clientRequestMessage]);
  id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 messageName]);
  [v20 incrementForClientRequestMessage:v22];

  id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  unsigned int v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

  if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
  {
    BOOL v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
    *(_DWORD *)buf = 138544386;
    id v33 = v31;
    __int16 v34 = 2114;
    id v35 = v28;
    __int16 v36 = 2114;
    __int16 v37 = v9;
    __int16 v38 = 2112;
    __int16 v29 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
    id v39 = v29;
    __int16 v40 = 2114;
    uint64_t v41 = objc_claimAutoreleasedReturnValue([v19 checkedDescription]);
    id v30 = (void *)v41;
    _os_log_error_impl( &dword_0,  v24,  OS_LOG_TYPE_ERROR,  "%{public}@\n [%{public}@] {_replyWrongMode} [STAGING-CLIENT-REPLY] %{public}@ reply to staging-client (wrong mode) | staged:%{p iblic}@ | responseError:%{public}@",  buf,  0x34u);
  }

  int v25 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue([v4 clientReplyCompletion]);
  ((void (**)(void, SUCoreConnectMessage *, void *))v25)[2](v25, v14, v19);

LABEL_11:
}

- (void)_replyWithAlreadyDetermined:(id)a3 forEventInfo:(id)a4 orFollowupDetermineStart:(BOOL)a5
{
  BOOL v5 = a5;
  id v8 = a3;
  id v9 = a4;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  int v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  LODWORD(v10) = -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups");
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v9 stagingClientRequest]);
  if (!(_DWORD)v10)
  {
    -[MADAutoAssetStager _replyNoCandidates:replyingToStagingRequest:]( self,  "_replyNoCandidates:replyingToStagingRequest:",  v8,  v12);

    __int16 v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v47 oslog]);

    if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_27;
    }
    id v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    unsigned int v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
    *(_DWORD *)buf = 138543874;
    id v81 = v48;
    __int16 v82 = 2114;
    id v83 = v49;
    __int16 v84 = 2114;
    id v85 = v8;
    _os_log_impl( &dword_0,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DETERMINE)] when ALL-MODE and already determined | [NO-CANDIDATES]",  buf,  0x20u);

LABEL_13:
    goto LABEL_27;
  }

  id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _updateAttributesFromStagingRequest:fromLocation:]( self,  "_updateAttributesFromStagingRequest:fromLocation:",  v12,  v8));

  if (!v13)
  {
    unsigned int v50 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v51 = (void *)objc_claimAutoreleasedReturnValue([v50 diag]);
    uint64_t v52 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} by-group request without updateAttributes",  v8);
    [v51 trackAnomaly:@"AUTO-STAGER" forReason:v52 withResult:6102 withError:0];

    id v48 = (void *)objc_claimAutoreleasedReturnValue([v9 stagingClientRequest]);
    __int128 v53 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} received staging-client-request is not valid - missing updateAttributes",  v8);
    -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  v8,  v48,  6102LL,  0LL,  v53);

    goto LABEL_13;
  }

  id v14 = -[os_log_s safeObjectForKey:ofClass:]( v13,  "safeObjectForKey:ofClass:",  @"TrainName",  objc_opt_class(&OBJC_CLASS___NSString));
  id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  id v16 = -[os_log_s safeObjectForKey:ofClass:]( v13,  "safeObjectForKey:ofClass:",  @"RestoreVersion",  objc_opt_class(&OBJC_CLASS___NSString));
  id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  if (v17)
  {
    v79 = v17;
    uint64_t v18 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v15,  v17));
    id v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingRequiredByTarget]( self,  "availableForStagingRequiredByTarget"));
    id v20 = [v19 safeObjectForKey:v18 ofClass:objc_opt_class(NSMutableArray)];
    uint64_t v21 = objc_claimAutoreleasedReturnValue(v20);

    id v22 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingOptionalByTarget]( self,  "availableForStagingOptionalByTarget"));
    v77 = (void *)v18;
    id v23 = [v22 safeObjectForKey:v18 ofClass:objc_opt_class(NSMutableArray)];
    uint64_t v24 = objc_claimAutoreleasedReturnValue(v23);

    id v78 = (void *)v21;
    if (v21 | v24)
    {
      __int16 v74 = v15;
      int v25 = (void *)objc_claimAutoreleasedReturnValue([v9 stagingClientRequest]);
      uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v25 clientRequestMessage]);
      __int16 v27 = (void *)objc_claimAutoreleasedReturnValue([v26 message]);

      id v28 = (void *)objc_claimAutoreleasedReturnValue([v9 stagingClientRequest]);
      __int16 v29 = (void *)objc_claimAutoreleasedReturnValue([v28 clientRequestMessage]);
      uint64_t v30 = objc_claimAutoreleasedReturnValue([v29 messageName]);

      id v73 = v27;
      id v31 = [v27 safeObjectForKey:@"staging" ofClass:objc_opt_class(MAAutoAssetInfoStaging)];
      uint64_t v32 = objc_claimAutoreleasedReturnValue(v31);
      id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int16 v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        __int16 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
        *(_DWORD *)buf = 138544386;
        id v81 = v35;
        __int16 v82 = 2114;
        id v83 = v36;
        __int16 v84 = 2112;
        id v85 = v8;
        __int16 v86 = 2114;
        uint64_t v87 = v30;
        __int16 v88 = 2114;
        uint64_t v89 = v32;
        _os_log_impl( &dword_0,  v34,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[%{public}@] {%{publid}@} [STAGING-CLIENT-REQUEST(DETERMINE)] message:%{public}@%{public}@",  buf,  0x34u);
      }

      uint64_t v75 = v24;

      id v71 = (void *)v32;
      __int16 v72 = (void *)v30;
      -[MADAutoAssetStager _logStagingDetails:forStagingInfo:](self, "_logStagingDetails:forStagingInfo:", v30, v32);
      id v37 =  -[MADAutoAssetStager adoptTargetFromUpdateAttributes:fromUpdateAttributes:forGroupDetermine:]( self,  "adoptTargetFromUpdateAttributes:fromUpdateAttributes:forGroupDetermine:",  v8,  v13,  1LL);
      __int16 v38 = v77;
      id v39 = -[MADAutoAssetStager newStagingInfoWithGroupsAvailableForStaging:indicatingHaveAvailable:usingTargetLookupKey:]( self,  "newStagingInfoWithGroupsAvailableForStaging:indicatingHaveAvailable:usingTargetLookupKey:",  v8,  1LL,  v77);
      __int16 v40 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"already determined for target | targetKey:%@",  v77);
      uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int16 v42 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 oslog]);

      if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
        *(_DWORD *)buf = 138544130;
        id v81 = v43;
        __int16 v82 = 2114;
        id v83 = v44;
        __int16 v84 = 2114;
        id v85 = v8;
        __int16 v86 = 2114;
        uint64_t v87 = (uint64_t)v40;
        _os_log_impl(&dword_0, v42, OS_LOG_TYPE_DEFAULT, "%{public}@\n[%{public}@] {%{public}@} %{public}@", buf, 0x2Au);
      }

      -[MADAutoAssetStager _logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:]( self,  "_logMilestoneFromLocation:resultingInEvent:forMilestoneActivity:",  v8,  @"N",  v40);
      __int16 v45 = (void *)objc_claimAutoreleasedReturnValue([v9 stagingClientRequest]);
      -[MADAutoAssetStager _replyToStagingClient:withStagingInfo:replyingToStagingRequest:recordingOperation:]( self,  "_replyToStagingClient:withStagingInfo:replyingToStagingRequest:recordingOperation:",  v8,  v39,  v45,  901LL);

      id v15 = v74;
      uint64_t v24 = v75;
      id v17 = v79;
      __int16 v46 = v73;
    }

    else if (v5)
    {
      uint64_t v76 = v24;
      __int16 v38 = v77;
      if (-[MADAutoAssetStager stagingClientChosen](self, "stagingClientChosen")
        && !-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
      {
        uint64_t v63 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
        id v64 = (os_log_s *)objc_claimAutoreleasedReturnValue([v63 oslog]);

        if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR)) {
          -[MADAutoAssetStager _replyWithAlreadyDetermined:forEventInfo:orFollowupDetermineStart:].cold.1();
        }
      }

      else
      {
        -[MADAutoAssetStager setStagingClientChosen:](self, "setStagingClientChosen:", 1LL);
      }

      -[MADAutoAssetStager setStagingClientUsingGroups:](self, "setStagingClientUsingGroups:", 1LL);
      v65 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
      __int128 v66 = (void *)objc_claimAutoreleasedReturnValue([v65 persistedConfig]);
      objc_msgSend( v66,  "persistBoolean:forKey:shouldPersist:",  -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"),  @"modeByGroups",  1);

      __int128 v67 = (void *)objc_claimAutoreleasedReturnValue([v9 stagingClientRequest]);
      -[MADAutoAssetStager _acceptStagingClientRequest:fromLocation:]( self,  "_acceptStagingClientRequest:fromLocation:",  v67,  v8);

      __int16 v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      __int128 v68 = objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam);
      __int128 v69 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
      id v70 = -[MADAutoAssetStagerParam initWithSafeSummary:](v68, "initWithSafeSummary:", v69);
      [v46 followupEvent:@"ModeGroupsDetermineStart" withInfo:v70];

      uint64_t v24 = v76;
    }

    else
    {
      unsigned int v59 = (void *)objc_claimAutoreleasedReturnValue([v9 stagingClientRequest]);
      -[MADAutoAssetStager _replyNoCandidates:replyingToStagingRequest:]( self,  "_replyNoCandidates:replyingToStagingRequest:",  v8,  v59);

      uint64_t v60 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int16 v46 = (void *)objc_claimAutoreleasedReturnValue([v60 oslog]);

      __int16 v38 = v77;
      if (os_log_type_enabled((os_log_t)v46, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
        *(_DWORD *)buf = 138543874;
        id v81 = v61;
        __int16 v82 = 2114;
        id v83 = v62;
        __int16 v84 = 2114;
        id v85 = v8;
        _os_log_impl( &dword_0,  (os_log_t)v46,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DETERMINE)] when GROUP-MODE and beyond determine phase | [NO-CANDIDATES]",  buf,  0x20u);
      }
    }
  }

  else
  {
    __int128 v54 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    __int128 v55 = (void *)objc_claimAutoreleasedReturnValue([v54 diag]);
    __int128 v56 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} by-group request with updateAttributes without restore-version",  v8);
    [v55 trackAnomaly:@"AUTO-STAGER" forReason:v56 withResult:6102 withError:0];

    char v57 = (void *)objc_claimAutoreleasedReturnValue([v9 stagingClientRequest]);
    uint64_t v58 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@} received staging-client-request is not valid - updateAttributes missing restore-version",  v8);
    -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  v8,  v57,  6102LL,  0LL,  v58);
  }

LABEL_27:
}

- (id)_adjustPallasResponseBasedOnPreferences:(id)a3
{
  id v4 = a3;
  uint64_t v5 = +[MADAutoAssetControlManager preferenceStagerDeterminePallasResponseFewer]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceStagerDeterminePallasResponseFewer");
  id v6 = (MADAutoAssetStagerParam *)v4;
  id v7 = v6;
  id v8 = v6;
  uint64_t v48 = v5;
  if (v5 >= 1)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStagerParam autoAssetCatalog](v6, "autoAssetCatalog"));

    id v8 = v7;
    if (v9)
    {
      id v8 = v7;
      unsigned int v49 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      if (v49)
      {
        __int128 v53 = 0u;
        __int128 v54 = 0u;
        __int128 v51 = 0u;
        __int128 v52 = 0u;
        id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStagerParam autoAssetCatalog](v7, "autoAssetCatalog"));
        id v10 = [obj countByEnumeratingWithState:&v51 objects:v61 count:16];
        if (v10)
        {
          id v12 = v10;
          uint64_t v13 = *(void *)v52;
          *(void *)&__int128 v11 = 138543618LL;
          __int128 v45 = v11;
          __int16 v46 = self;
          __int16 v47 = v7;
          do
          {
            id v14 = 0LL;
            do
            {
              if (*(void *)v52 != v13) {
                objc_enumerationMutation(obj);
              }
              id v15 = *(const __CFString **)(*((void *)&v51 + 1) + 8LL * (void)v14);
              id v16 = objc_autoreleasePoolPush();
              id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStagerParam autoAssetCatalog](v7, "autoAssetCatalog"));
              uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 objectForKey:v15]);

              if (v15) {
                BOOL v19 = v18 == 0LL;
              }
              else {
                BOOL v19 = 1;
              }
              if (v19)
              {
                id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
                uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 oslog]);

                if (!os_log_type_enabled((os_log_t)v21, OS_LOG_TYPE_ERROR))
                {
LABEL_15:

                  goto LABEL_26;
                }

                uint64_t v34 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
                uint64_t v30 = (void *)v34;
                id v35 = @"N";
                if (v15) {
                  __int16 v36 = v15;
                }
                else {
                  __int16 v36 = @"N";
                }
                *(_DWORD *)buf = 138543874;
                uint64_t v56 = v34;
                if (v18) {
                  id v35 = @"Y";
                }
                __int16 v57 = 2114;
                uint64_t v58 = v36;
                __int16 v59 = 2114;
                uint64_t v60 = v35;
                id v31 = (os_log_s *)v21;
                uint64_t v32 = "%{public}@\n"
                      "[AUTO-STAGER] {_adjustPallasResponseBasedOnPreferences} unable to determine key/value from set-cat"
                      "alog | setCatalogKey:%{public}@ | setCatalogValue:%{public}@";
                uint32_t v33 = 32;
LABEL_36:
                _os_log_error_impl(&dword_0, v31, OS_LOG_TYPE_ERROR, v32, buf, v33);

                goto LABEL_15;
              }

              if (+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v15,  @"Assets"))
              {
                uint64_t v23 = objc_opt_class(&OBJC_CLASS___NSArray);
                if ((objc_opt_isKindOfClass(v18, v23) & 1) == 0)
                {
                  __int16 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
                  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v29 oslog]);

                  if (!os_log_type_enabled((os_log_t)v21, OS_LOG_TYPE_ERROR)) {
                    goto LABEL_15;
                  }
                  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
                  *(_DWORD *)buf = v45;
                  uint64_t v56 = (uint64_t)v30;
                  __int16 v57 = 2114;
                  uint64_t v58 = v15;
                  id v31 = (os_log_s *)v21;
                  uint64_t v32 = "%{public}@\n"
                        "[AUTO-STAGER] {_adjustPallasResponseBasedOnPreferences} key value is not an array | setCatalogKey:%{public}@";
                  uint32_t v33 = 22;
                  goto LABEL_36;
                }

                uint64_t v24 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
                id v25 = [v18 count];
                uint64_t v26 = (uint64_t)v25 - v48;
                if ((uint64_t)v25 > v48 && v26 >= 1)
                {
                  for (uint64_t i = 0LL; i != v26; ++i)
                  {
                    id v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectAtIndex:", i, v45));
                    if (v28) {
                      -[NSMutableArray addObject:](v24, "addObject:", v28);
                    }
                  }
                }

                -[NSMutableDictionary setObject:forKey:](v49, "setObject:forKey:", v24, v15, v45);

                self = v46;
                id v7 = v47;
              }

              else
              {
                -[NSMutableDictionary setObject:forKey:](v49, "setObject:forKey:", v18, v15);
              }

- (void)_stagingClientRequestDetermineTrack:(id)a3 trackingRequest:(id)a4 forStagingTargetName:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  __int128 v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDetermineLocate:forStagingTargetName:]( self,  "_stagingClientRequestDetermineLocate:forStagingTargetName:",  v8,  v10));
  if (v13) {
    id v14 =  -[MADAutoAssetStager _stagingClientRequestDetermineClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDetermineClear:forStagingTargetName:replyingToCleared:",  v8,  v10,  1LL);
  }
  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
  [v15 setSafeObject:v9 forKey:v10];

  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 oslog]);

  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    BOOL v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
    id v20 = [v19 count];
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
    int v22 = 138544386;
    uint64_t v23 = v18;
    __int16 v24 = 2114;
    id v25 = v10;
    __int16 v26 = 2114;
    id v27 = v8;
    __int16 v28 = 2048;
    id v29 = v20;
    __int16 v30 = 2114;
    id v31 = v21;
    _os_log_impl( &dword_0,  v17,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DETERMINE)] | TRACKED++ | DetermineRequests:%ld | determineRequest:%{public}@",  (uint8_t *)&v22,  0x34u);
  }
}

- (id)_stagingClientRequestDetermineLocate:(id)a3 forStagingTargetName:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
  id v11 = [v10 safeObjectForKey:v7 ofClass:objc_opt_class(MADAutoAssetClientRequest)];
  id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 oslog]);

  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);
  if (v12)
  {
    if (v15)
    {
      id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
      id v18 = [v17 count];
      BOOL v19 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
      int v22 = 138544386;
      uint64_t v23 = v16;
      __int16 v24 = 2114;
      id v25 = v7;
      __int16 v26 = 2114;
      id v27 = v6;
      __int16 v28 = 2048;
      id v29 = v18;
      __int16 v30 = 2114;
      id v31 = v19;
      _os_log_impl( &dword_0,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DETERMINE)] | LOCATED | DetermineRequests:%ld | locatedRequest:%{public}@",  (uint8_t *)&v22,  0x34u);

LABEL_6:
    }
  }

  else if (v15)
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
    int v22 = 138544130;
    uint64_t v23 = v16;
    __int16 v24 = 2114;
    id v25 = v7;
    __int16 v26 = 2114;
    id v27 = v6;
    __int16 v28 = 2048;
    id v29 = [v20 count];
    _os_log_impl( &dword_0,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DETERMINE)] | LOCATE-NOT-TRACKED | DetermineRequests:%ld",  (uint8_t *)&v22,  0x2Au);

    goto LABEL_6;
  }

  return v12;
}

- (id)_stagingClientRequestDetermineClear:(id)a3 forStagingTargetName:(id)a4 replyingToCleared:(BOOL)a5
{
  BOOL v5 = a5;
  unsigned int v49 = (os_log_s *)a3;
  id v8 = a4;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  id v11 = (os_log_s *)v8;
  if (v11)
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
    id v13 = [v12 safeObjectForKey:v11 ofClass:objc_opt_class(MADAutoAssetClientRequest)];
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);

    BOOL v15 = v11;
  }

  else
  {
    BOOL v47 = v5;
    __int128 v54 = 0u;
    __int128 v55 = 0u;
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
    id v51 = [v16 countByEnumeratingWithState:&v52 objects:v66 count:16];
    BOOL v15 = 0LL;
    id v14 = 0LL;
    if (v51)
    {
      uint64_t v17 = *(void *)v53;
      p_ivars = &MobileAssetKeyManager__metaData.ivars;
      uint64_t v48 = self;
      do
      {
        for (uint64_t i = 0LL; i != v51; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v53 != v17) {
            objc_enumerationMutation(v16);
          }
          id v20 = *(void **)(*((void *)&v52 + 1) + 8LL * (void)i);
          uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
          id v22 = [v21 safeObjectForKey:v20 ofClass:objc_opt_class(p_ivars[173])];
          uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(v22);

          if (v23)
          {
            if (v14)
            {
              __int16 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
              id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

              if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
              {
                __int16 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
                unsigned int v50 = v14;
                id v27 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager stagingClientDetermineRequests]( self,  "stagingClientDetermineRequests"));
                __int16 v28 = v15;
                id v29 = (os_log_s *)[v27 count];
                uint64_t v30 = v17;
                id v31 = v16;
                uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v23 summary]);
                *(_DWORD *)buf = 138544130;
                __int16 v57 = v26;
                __int16 v58 = 2114;
                __int16 v59 = v49;
                __int16 v60 = 2048;
                uint64_t v61 = v29;
                BOOL v15 = v28;
                __int16 v62 = 2114;
                id v63 = v32;
                _os_log_impl( &dword_0,  v25,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n {%{public}@} [STAGING-CLIENT-REQUEST(DETERMINE)] | CLEAR-AMBIGUOUS | DetermineRequests:%ld | notConsid eredRequest:%{public}@",  buf,  0x2Au);

                id v14 = v50;
                self = v48;

                id v16 = v31;
                uint64_t v17 = v30;
                p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
              }
            }

            else
            {
              id v14 = v23;
              uint32_t v33 = v20;
              id v25 = v15;
              BOOL v15 = v33;
            }
          }
        }

        id v51 = [v16 countByEnumeratingWithState:&v52 objects:v66 count:16];
      }

      while (v51);
    }

    id v11 = 0LL;
    BOOL v5 = v47;
  }

  if (!v14)
  {
    __int16 v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v42 oslog]);

    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
      id v45 = [v44 count];
      *(_DWORD *)buf = 138544130;
      __int16 v57 = v43;
      __int16 v58 = 2114;
      __int16 v59 = v11;
      __int16 v60 = 2114;
      uint64_t v61 = v49;
      __int16 v62 = 2048;
      id v63 = v45;
      _os_log_impl( &dword_0,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DETERMINE)] | CLEAR-NOT-TRACKED | DetermineRequests:%ld",  buf,  0x2Au);
    }

    goto LABEL_24;
  }

  uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
  [v34 removeObjectForKey:v15];

  id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  __int16 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

  if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v37 = v5;
    __int16 v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    id v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
    id v40 = [v39 count];
    uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s summary](v14, "summary"));
    *(_DWORD *)buf = 138544386;
    __int16 v57 = v38;
    __int16 v58 = 2114;
    __int16 v59 = v15;
    __int16 v60 = 2114;
    uint64_t v61 = v49;
    __int16 v62 = 2048;
    id v63 = v40;
    __int16 v64 = 2114;
    v65 = v41;
    _os_log_impl( &dword_0,  v36,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DETERMINE)] | TRACKED-- | DetermineRequests:%ld | clearedRequest:%{public}@",  buf,  0x34u);

    BOOL v5 = v37;
  }

  if (v5)
  {
    -[MADAutoAssetStager _replyNoCandidates:replyingToStagingRequest:]( self,  "_replyNoCandidates:replyingToStagingRequest:",  v49,  v14);
LABEL_24:

    id v14 = 0LL;
  }

  return v14;
}

- (void)_stagingClientRequestDetermineClearAll:(id)a3
{
  id v30 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  BOOL v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
  id v6 = [obj countByEnumeratingWithState:&v31 objects:v45 count:16];
  if (v6)
  {
    id v8 = v6;
    uint64_t v9 = *(void *)v32;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    *(void *)&__int128 v7 = 138544386LL;
    __int128 v26 = v7;
    id v11 = @"received staging-client-request resulting in cancel of all active determine requests";
    id v27 = self;
    do
    {
      id v12 = 0LL;
      id v28 = v8;
      do
      {
        if (*(void *)v32 != v9) {
          objc_enumerationMutation(obj);
        }
        uint64_t v13 = *(void *)(*((void *)&v31 + 1) + 8LL * (void)v12);
        id v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager stagingClientDetermineRequests]( self,  "stagingClientDetermineRequests",  v26));
        id v15 = [v14 safeObjectForKey:v13 ofClass:objc_opt_class(p_ivars[173])];
        id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

        if (v16)
        {
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
          id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          {
            BOOL v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](self, "stagingClientDetermineRequests"));
            uint64_t v21 = v11;
            id v22 = [v20 count];
            uint64_t v23 = v9;
            __int16 v24 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
            *(_DWORD *)buf = v26;
            __int16 v36 = v19;
            __int16 v37 = 2114;
            uint64_t v38 = v13;
            __int16 v39 = 2114;
            id v40 = v30;
            __int16 v41 = 2048;
            id v42 = v22;
            id v11 = v21;
            __int16 v43 = 2114;
            id v44 = v24;
            _os_log_impl( &dword_0,  v18,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DETERMINE)] | CLEARED-ALL | DetermineRequests:%ld | next ClearedRequest:%{public}@",  buf,  0x34u);

            id v8 = v28;
            uint64_t v9 = v23;
            p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            self = v27;
          }

          -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  v30,  v16,  6609LL,  0LL,  v11);
        }

        id v12 = (char *)v12 + 1;
      }

      while (v8 != v12);
      id v8 = [obj countByEnumeratingWithState:&v31 objects:v45 count:16];
    }

    while (v8);
  }

  id v25 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setStagingClientDetermineRequests:](self, "setStagingClientDetermineRequests:", v25);
}

- (void)_stagingClientRequestDownloadTrack:(id)a3 trackingRequest:(id)a4 forStagingTargetName:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDownloadRequest](self, "stagingClientDownloadRequest"));
  if (v13) {
    id v14 =  -[MADAutoAssetStager _stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:",  v8,  v10,  1LL);
  }
  -[MADAutoAssetStager setStagingClientDownloadRequest:](self, "setStagingClientDownloadRequest:", v9);
  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 oslog]);

  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
    int v19 = 138544130;
    id v20 = v17;
    __int16 v21 = 2114;
    id v22 = v10;
    __int16 v23 = 2114;
    id v24 = v8;
    __int16 v25 = 2114;
    __int128 v26 = v18;
    _os_log_impl( &dword_0,  v16,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DOWNLOAD)] | TRACKED | downloadRequest:%{public}@",  (uint8_t *)&v19,  0x2Au);
  }
}

- (id)_stagingClientRequestDownloadCurrent:(id)a3 forStagingTargetName:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDownloadRequest](self, "stagingClientDownloadRequest"));
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
  if (v10)
  {
    if (v13)
    {
      id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
      int v17 = 138544130;
      id v18 = v14;
      __int16 v19 = 2114;
      id v20 = v7;
      __int16 v21 = 2114;
      id v22 = v6;
      __int16 v23 = 2114;
      id v24 = v15;
      _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DOWNLOAD)] | LOCATED | locatedRequest:%{public}@",  (uint8_t *)&v17,  0x2Au);

LABEL_6:
    }
  }

  else if (v13)
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    int v17 = 138543874;
    id v18 = v14;
    __int16 v19 = 2114;
    id v20 = v7;
    __int16 v21 = 2114;
    id v22 = v6;
    _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DOWNLOAD)] | LOCATE-NOT-TRACKED",  (uint8_t *)&v17,  0x20u);
    goto LABEL_6;
  }

  return v10;
}

- (id)_stagingClientRequestDownloadClear:(id)a3 forStagingTargetName:(id)a4 replyingToCleared:(BOOL)a5
{
  BOOL v5 = a5;
  id v8 = a3;
  id v9 = a4;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 extendedStateQueue]);
  dispatch_assert_queue_V2(v11);

  uint64_t v12 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDownloadRequest](self, "stagingClientDownloadRequest"));
  if (!v12)
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    BOOL v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      int v21 = 138543874;
      id v22 = v19;
      __int16 v23 = 2114;
      id v24 = v9;
      __int16 v25 = 2114;
      id v26 = v8;
      _os_log_impl( &dword_0,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DOWNLOAD)] | CLEAR-NOT-TRACKED",  (uint8_t *)&v21,  0x20u);
    }

    goto LABEL_8;
  }

  BOOL v13 = (os_log_s *)v12;
  -[MADAutoAssetStager setStagingClientDownloadRequest:](self, "setStagingClientDownloadRequest:", 0LL);
  -[MADAutoAssetStager setStagingClientCompleteOnceRequired:](self, "setStagingClientCompleteOnceRequired:", 0LL);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 oslog]);

  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    int v17 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s summary](v13, "summary"));
    int v21 = 138544130;
    id v22 = v16;
    __int16 v23 = 2114;
    id v24 = v9;
    __int16 v25 = 2114;
    id v26 = v8;
    __int16 v27 = 2114;
    id v28 = v17;
    _os_log_impl( &dword_0,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[%{public}@] {%{public}@} [STAGING-CLIENT-REQUEST(DOWNLOAD)] | CLEARED | clearedRequest:%{public}@",  (uint8_t *)&v21,  0x2Au);
  }

  if (v5)
  {
    -[MADAutoAssetStager _replyNothingStaged:replyingToStagingRequest:]( self,  "_replyNothingStaged:replyingToStagingRequest:",  v8,  v13);
LABEL_8:

    BOOL v13 = 0LL;
  }

  return v13;
}

- (void)_stagingClientRequestDownloadPurged:(id)a3
{
  id v8 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  BOOL v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveClient](self, "_targetNameActiveClient"));
    id v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:]( self,  "_stagingClientRequestDownloadClear:forStagingTargetName:replyingToCleared:",  v8,  v6,  0LL));

    if (!v7) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }

  id v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _stagingClientRequestGeneralClear:replyingToCleared:]( self,  "_stagingClientRequestGeneralClear:replyingToCleared:",  v8,  0LL));
  if (v7) {
LABEL_5:
  }
    -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  v8,  v7,  6609LL,  0LL,  @"received staging-client-request to purge when download operation was in progress - download-available-for-staging canceled");
LABEL_6:
}

- (void)_stagingClientRequestGeneralTrack:(id)a3 trackingRequest:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientRequest](self, "stagingClientRequest"));
  if (v10) {
    id v11 =  -[MADAutoAssetStager _stagingClientRequestGeneralClear:replyingToCleared:]( self,  "_stagingClientRequestGeneralClear:replyingToCleared:",  v6,  1LL);
  }
  -[MADAutoAssetStager setStagingClientRequest:](self, "setStagingClientRequest:", v7);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  BOOL v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 oslog]);

  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
    int v16 = 138543874;
    int v17 = v14;
    __int16 v18 = 2114;
    id v19 = v6;
    __int16 v20 = 2114;
    int v21 = v15;
    _os_log_impl( &dword_0,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n{%{public}@} [STAGING-CLIENT-REQUEST(GENERAL)] | TRACKED | generalRequest:%{public}@",  (uint8_t *)&v16,  0x20u);
  }
}

- (id)_stagingClientRequestGeneralCurrent:(id)a3
{
  id v4 = a3;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientRequest](self, "stagingClientRequest"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 oslog]);

  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if (v7)
  {
    if (v10)
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
      int v14 = 138543874;
      id v15 = v11;
      __int16 v16 = 2114;
      id v17 = v4;
      __int16 v18 = 2114;
      id v19 = v12;
      _os_log_impl( &dword_0,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n{%{public}@} [STAGING-CLIENT-REQUEST(GENERAL)] | LOCATED | locatedRequest:%{public}@",  (uint8_t *)&v14,  0x20u);

LABEL_6:
    }
  }

  else if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    int v14 = 138543618;
    id v15 = v11;
    __int16 v16 = 2114;
    id v17 = v4;
    _os_log_impl( &dword_0,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n{%{public}@} [STAGING-CLIENT-REQUEST(GENERAL)] | LOCATE-NOT-TRACKED",  (uint8_t *)&v14,  0x16u);
    goto LABEL_6;
  }

  return v7;
}

- (id)_stagingClientRequestGeneralClear:(id)a3 replyingToCleared:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientRequest](self, "stagingClientRequest"));
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
  if (v9)
  {
    if (v12)
    {
      BOOL v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      int v14 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
      int v17 = 138543874;
      __int16 v18 = v13;
      __int16 v19 = 2114;
      id v20 = v6;
      __int16 v21 = 2114;
      id v22 = v14;
      _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n{%{public}@} [STAGING-CLIENT-REQUEST(GENERAL)] | CLEARED | clearedRequest:%{public}@",  (uint8_t *)&v17,  0x20u);
    }

    if (v4)
    {
      -[MADAutoAssetStager _replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:]( self,  "_replyToStagingClient:replyingToRequest:withErrorCode:withUnderlyingError:withDescription:",  v6,  v9,  6601LL,  0LL,  @"staging-client-request has been replaced by more recent request");

      id v9 = 0LL;
    }

    -[MADAutoAssetStager setStagingClientRequest:](self, "setStagingClientRequest:", 0LL);
  }

  else
  {
    if (v12)
    {
      id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      int v17 = 138543618;
      __int16 v18 = v15;
      __int16 v19 = 2114;
      id v20 = v6;
      _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n{%{public}@} [STAGING-CLIENT-REQUEST(GENERAL)] | CLEAR-NOT-TRACKED",  (uint8_t *)&v17,  0x16u);
    }

    id v9 = 0LL;
  }

  return v9;
}

- (void)_logStagingDetails:(id)a3 forStagingInfo:(id)a4
{
  id v10 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  if ((objc_opt_respondsToSelector(v6, "fullDescription:usingLogger:") & 1) != 0)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    [v6 fullDescription:v10 usingLogger:v9];
  }
}

- (void)_logStagingDetails:(id)a3 forStagedInfo:(id)a4
{
  id v10 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  if ((objc_opt_respondsToSelector(v6, "fullDescription:usingLogger:") & 1) != 0)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    [v6 fullDescription:v10 usingLogger:v9];
  }
}

- (void)_updateDescriptor:(id)a3 withLatestJobStatus:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  uint64_t v10 = objc_opt_class(&OBJC_CLASS___MAAutoAssetStatus);
  if ((objc_opt_isKindOfClass(v7, v10) & 1) == 0)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    BOOL v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      -[MADAutoAssetStager _updateDescriptor:withLatestJobStatus:].cold.1();
    }
  }

  if (v7)
  {
    objc_msgSend(v6, "setNeverBeenLocked:", objc_msgSend(v7, "neverBeenLocked"));
    objc_msgSend(v6, "setDownloadUserInitiated:", objc_msgSend(v7, "downloadUserInitiated"));
    objc_msgSend(v6, "setDownloadedNetworkBytes:", objc_msgSend(v7, "downloadedNetworkBytes"));
    if (![v6 downloadedNetworkBytes]) {
      objc_msgSend(v6, "setDownloadedNetworkBytes:", objc_msgSend(v6, "downloadedFilesystemBytes"));
    }
    objc_msgSend(v6, "setDownloadedFilesystemBytes:", objc_msgSend(v7, "downloadedFilesystemBytes"));
    BOOL v13 = (void *)objc_claimAutoreleasedReturnValue([v7 patchedFromBaseSelector]);
    [v6 setPatchedFromBaseSelector:v13];

    objc_msgSend(v6, "setPatchedFromBaseFilesystemBytes:", objc_msgSend(v7, "patchedFromBaseFilesystemBytes"));
    objc_msgSend(v6, "setPatchingAttempted:", objc_msgSend(v7, "patchingAttempted"));
    int v14 = (void *)objc_claimAutoreleasedReturnValue([v7 patchingAttemptError]);
    [v6 setPatchingAttemptError:v14];
  }

  [v6 setStagedPriorToAvailable:1];
  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromOSVersion](self, "stagingFromOSVersion"));
  [v6 setStagedFromOSVersion:v15];

  __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](self, "stagingFromBuildVersion"));
  [v6 setStagedFromBuildVersion:v16];
}

- (void)_startDetermineJobForNextCandidate:(id)a3
{
  id v4 = a3;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](self, "candidateSetConfigurations"));
  id v8 = [v7 count];

  if (v8)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](self, "candidateSetConfigurations"));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectAtIndex:0]);
    -[MADAutoAssetStager setActiveSetJobConfiguration:](self, "setActiveSetJobConfiguration:", v10);

    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](self, "candidateSetConfigurations"));
    [v11 removeObjectAtIndex:0];

    BOOL v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    BOOL v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 oslog]);

    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeSetJobConfiguration](self, "activeSetJobConfiguration"));
      __int16 v16 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
      *(_DWORD *)buf = 138543874;
      id v26 = v14;
      __int16 v27 = 2114;
      id v28 = v4;
      __int16 v29 = 2114;
      id v30 = v16;
      _os_log_impl( &dword_0,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {%{public}@:_startDetermineJobForNextCandidate} begin determine-if-available | stagerSetConfiguration:%{public}@",  buf,  0x20u);
    }

    int v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeSetJobConfiguration](self, "activeSetJobConfiguration"));
    __int16 v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
    __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
    __int16 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
    +[MADAutoAssetControlManager stagerStartSetJobDetermineIfAvailable:withAssetTargetOSVersion:withAssetTargetBuildVersion:withAssetTargetTrainName:withAssetTargetRestoreVersion:]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerStartSetJobDetermineIfAvailable:withAssetTargetOSVersion:withAssetTargetBuildVersion:withAssetTargetTrainNam e:withAssetTargetRestoreVersion:",  v17,  v18,  v19,  v20,  v21);
  }

  else
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    __int16 v23 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
    id v24 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{%@:_startDetermineJobForNextCandidate} no candidateSetConfigurations",  v4);
    [v23 trackAnomaly:@"AUTO-STAGER" forReason:v24 withResult:6108 withError:0];
  }
}

- (void)_cancelCurrentJob
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  if (v5)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 assetId]);
    id v8 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    BOOL v12 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSpecifier]);
    BOOL v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    int v14 = (void *)objc_claimAutoreleasedReturnValue([v13 assetVersion]);
    id v15 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v8,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v10,  v12,  v14);
    +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  804LL,  4LL,  4LL,  v7,  v15);

LABEL_5:
    goto LABEL_6;
  }

  __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v16 oslog]);

  if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    int v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](self, "_targetNameActive"));
    int v18 = 138543618;
    __int16 v19 = v7;
    __int16 v20 = 2114;
    __int16 v21 = v17;
    _os_log_impl( &dword_0,  (os_log_t)v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[%{public}@] {_cancelCurrentJob} cancel when no active-job-descriptor (determining)",  (uint8_t *)&v18,  0x16u);

    goto LABEL_5;
  }

- (void)_clearBeforeDetermineAvailable:(id)a3 removingDetermined:(BOOL)a4
{
  BOOL v4 = a4;
  id v16 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 extendedStateQueue]);
  dispatch_assert_queue_V2(v7);

  id v8 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_clearBeforeDetermineAvailable",  v16);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));

  if (v9)
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 diag]);
    BOOL v12 = objc_alloc(&OBJC_CLASS___NSString);
    BOOL v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    int v14 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
    id v15 = -[NSString initWithFormat:](v12, "initWithFormat:", @"{%@} stale activeJobDescriptor:%@", v8, v14);
    [v11 trackAnomaly:@"AUTO-STAGER" forReason:v15 withResult:6108 withError:0];

    -[MADAutoAssetStager setActiveJobDescriptor:](self, "setActiveJobDescriptor:", 0LL);
  }

  if (!-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  v16,  1LL,  v4);
    -[MADAutoAssetStager _removeAllStagedContent](self, "_removeAllStagedContent");
    -[MADAutoAssetStager _persistRemoveAll:message:removingDetermined:loggingConfig:]( self,  "_persistRemoveAll:message:removingDetermined:loggingConfig:",  v8,  @"removed all persisted-state (before determining all available for staging)",  v4,  1LL);
  }
}

- (void)_clearRemoveByGroupTargets:(id)a3 removingDetermined:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_clearRemoveByGroupTargets",  v6);
  -[MADAutoAssetStager _clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:]( self,  "_clearAllTrackingOfActiveOperations:alsoPerformingPurgeAll:removingDetermined:",  v9,  1LL,  v4);
  -[MADAutoAssetStager _removeAllStagedContent](self, "_removeAllStagedContent");
  -[MADAutoAssetStager _persistRemoveAll:message:removingDetermined:loggingConfig:]( self,  "_persistRemoveAll:message:removingDetermined:loggingConfig:",  v9,  @"removed all persisted-state (removing by-group targets)",  v4,  1LL);
}

- (void)_clearAllTrackingOfActiveOperations:(id)a3 alsoPerformingPurgeAll:(BOOL)a4 removingDetermined:(BOOL)a5
{
  BOOL v5 = a5;
  BOOL v6 = a4;
  id v8 = a3;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 extendedStateQueue]);
  dispatch_assert_queue_V2(v10);

  __int16 v29 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_clearAllTrackingOfActiveOperations",  v8);
  id v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setDeterminingBySelector:](self, "setDeterminingBySelector:", v11);

  BOOL v12 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  -[MADAutoAssetStager setAwaitingStagingAttempt:](self, "setAwaitingStagingAttempt:", v12);

  if (!v6)
  {
    if (!v5)
    {
      if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups")) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }

    goto LABEL_6;
  }

  if (!-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups") || v5)
  {
LABEL_6:
    BOOL v13 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    -[MADAutoAssetStager setCandidatesForStaging:](self, "setCandidatesForStaging:", v13);

    int v14 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    -[MADAutoAssetStager setCandidateSetConfigurations:](self, "setCandidateSetConfigurations:", v14);

    id v15 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    -[MADAutoAssetStager setSetLookupResults:](self, "setSetLookupResults:", v15);

    id v16 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    -[MADAutoAssetStager setAvailableForStaging:](self, "setAvailableForStaging:", v16);

    -[MADAutoAssetStager setOverallStagedTotalExpectedBytes:](self, "setOverallStagedTotalExpectedBytes:", 0LL);
  }

  if (!-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
LABEL_11:
    id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
    __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v24 persistedConfig]);
    id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
    objc_msgSend( v25,  "persistULL:forKey:shouldPersist:",  objc_msgSend(v26, "count"),  @"determinedAvailableAssetCount",  1);

    goto LABEL_12;
  }

  if (!v5) {
    goto LABEL_13;
  }
  int v17 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setCandidatesForStagingRequiredByTarget:](self, "setCandidatesForStagingRequiredByTarget:", v17);

  int v18 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setCandidatesForStagingOptionalByTarget:](self, "setCandidatesForStagingOptionalByTarget:", v18);

  __int16 v19 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setCandidateSetConfigurationsRequiredByTarget:]( self,  "setCandidateSetConfigurationsRequiredByTarget:",  v19);

  __int16 v20 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setCandidateSetConfigurationsOptionalByTarget:]( self,  "setCandidateSetConfigurationsOptionalByTarget:",  v20);

  -[MADAutoAssetStager setAssetTargetGroupNames:](self, "setAssetTargetGroupNames:", 0LL);
  -[MADAutoAssetStager setActiveTargetUpdateAttributes:](self, "setActiveTargetUpdateAttributes:", 0LL);
  __int16 v21 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setTargetLookupResults:](self, "setTargetLookupResults:", v21);

  id v22 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setAvailableForStagingRequiredByTarget:](self, "setAvailableForStagingRequiredByTarget:", v22);

  __int16 v23 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[MADAutoAssetStager setAvailableForStagingOptionalByTarget:](self, "setAvailableForStagingOptionalByTarget:", v23);

  id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v24 persistedConfig]);
  [v25 persistULL:0 forKey:@"determinedAvailableAssetCount" shouldPersist:0];
LABEL_12:

LABEL_13:
  if (v6)
  {
    if (!-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
    {
      -[MADAutoAssetStager setStagingClientChosen:](self, "setStagingClientChosen:", 0LL);
      -[MADAutoAssetStager setStagingClientUsingGroups:](self, "setStagingClientUsingGroups:", 0LL);
      __int16 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
      id v28 = (void *)objc_claimAutoreleasedReturnValue([v27 persistedConfig]);
      objc_msgSend( v28,  "persistBoolean:forKey:shouldPersist:",  -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"),  @"modeByGroups",  1);

      -[MADAutoAssetStager setDetermineTimeoutUUID:](self, "setDetermineTimeoutUUID:", @"NONE");
    }

    -[MADAutoAssetStager setStagingClientCompleteOnceRequired:](self, "setStagingClientCompleteOnceRequired:", 0LL);
    -[MADAutoAssetStager _removeAllStagedContent](self, "_removeAllStagedContent");
    -[MADAutoAssetStager _persistRemoveAll:message:removingDetermined:loggingConfig:]( self,  "_persistRemoveAll:message:removingDetermined:loggingConfig:",  v29,  @"removed all persisted-state (cleared all tracking and performed purge all)",  v5,  1LL);
  }

- (void)_setupAwaitingStagingAndBeginFirstDownload
{
  id v2 = [(id)OUTLINED_FUNCTION_8() awaitingStagingAttempt];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  [v3 count];
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "%{public}@\n [AUTO-STAGER] {_setupAwaitingStagingAndBeginFirstDownload} cleared awaiting staging (unable to locate first descript or when awaitingStagingAttempt count:%ld)",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)_removeStagedAssetFromFilesystem:(id)a3 forHistoryOperation:(int64_t)a4
{
  id v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager localAssetURLForDescriptor:fromLocation:]( &OBJC_CLASS___MADAutoAssetControlManager,  "localAssetURLForDescriptor:fromLocation:",  v6,  @"_removeStagedAssetFromFilesystem"));
  uint8_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v11 = v10;
  if (!v9)
  {
    __int16 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 diag]);
    __int16 v25 = objc_alloc(&OBJC_CLASS___NSString);
    id v26 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    __int16 v27 = -[NSString initWithFormat:]( v25,  "initWithFormat:",  @"{_removeStagedAssetFromFilesystem} unable to determine local URL for stagedDescriptor:%@",  v26);
    [v24 trackAnomaly:@"AUTO-STAGER" forReason:v27 withResult:6101 withError:0];

    goto LABEL_7;
  }

  if (![v10 fileExistsAtPath:v9])
  {
    id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    __int16 v23 = (void *)objc_claimAutoreleasedReturnValue([v28 oslog]);

    if (!os_log_type_enabled((os_log_t)v23, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
    id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    __int16 v41 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    *(_DWORD *)buf = 138543874;
    id v45 = v24;
    __int16 v46 = 2114;
    BOOL v47 = v41;
    __int16 v48 = 2114;
    unsigned int v49 = v9;
    _os_log_error_impl( &dword_0,  (os_log_t)v23,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {_removeStagedAssetFromFilesystem} not on filesystem for stagedDescriptor:%{public}@ | localContentURL:%{public}@",  buf,  0x20u);

LABEL_7:
LABEL_9:

    goto LABEL_20;
  }

  BOOL v12 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  BOOL v13 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
  int v14 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSpecifier]);
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v6 assetVersion]);
  id v16 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v12,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v13,  v14,  v15);

  id v43 = 0LL;
  [v11 removeItemAtPath:v9 error:&v43];
  id v17 = v43;
  if (v17)
  {
    int v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    __int16 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      __int16 v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      __int16 v21 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
      id v22 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetClientRequest responseErrorSummary:]( &OBJC_CLASS___MADAutoAssetClientRequest,  "responseErrorSummary:",  v17));
      *(_DWORD *)buf = 138544386;
      id v45 = v20;
      __int16 v46 = 2114;
      BOOL v47 = v21;
      __int16 v48 = 2114;
      unsigned int v49 = v9;
      __int16 v50 = 2114;
      id v51 = v22;
      __int16 v52 = 2114;
      id v53 = v17;
      _os_log_error_impl( &dword_0,  v19,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {_removeStagedAssetFromFilesystem} failed to remove stagedDescriptor:%{public}@ | localContentURL: %{public}@ | error:%{public}@\n %{public}@",  buf,  0x34u);
    }
  }

  else
  {
    __int16 v19 = -[NSURL initFileURLWithPath:](objc_alloc(&OBJC_CLASS___NSURL), "initFileURLWithPath:", v9);
    if (v19)
    {
      id ControlManager = getControlManager();
      id v30 = (void *)objc_claimAutoreleasedReturnValue(ControlManager);
      uint64_t v42 = objc_claimAutoreleasedReturnValue([v30 getSAFRegistrationBundleID:v19]);

      __int128 v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int128 v32 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 oslog]);

      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        __int128 v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
        *(_DWORD *)buf = 138543874;
        id v45 = v33;
        __int16 v46 = 2114;
        BOOL v47 = v34;
        __int16 v48 = 2114;
        unsigned int v49 = v9;
        _os_log_impl( &dword_0,  v32,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_removeStagedAssetFromFilesystem} successfully removed stagedDescriptor:%{public}@ | localConte ntURL:%{public}@",  buf,  0x20u);
      }

      id v35 = getControlManager();
      __int16 v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
      __int16 v37 = (void *)v42;
      [v36 updateSpaceAttributionForBundleID:v42 assetPath:v19 doRegistration:0];
    }

    else
    {
      __int16 v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
      __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([v37 diag]);
      uint64_t v38 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"{_removeDescriptorFromFilesystem} unable to determine local filesystem URL from localContentURL:%@",  v9);
      [v36 trackAnomaly:@"AUTO-STAGER" forReason:v38 withResult:6101 withError:0];
    }
  }

  if (a4 == 404) {
    uint64_t v39 = 5LL;
  }
  else {
    uint64_t v39 = 4LL;
  }
  id v40 = (void *)objc_claimAutoreleasedReturnValue([v6 assetId]);
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  a4,  0LL,  v39,  v40,  v16);

LABEL_20:
}

- (void)_maintainLatestCandidate:(id)a3 candidateDescriptor:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  if (!v7)
  {
    id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    BOOL v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 oslog]);

    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      *(_DWORD *)buf = 138543362;
      v65 = v31;
      _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[AUTO-STAGER] {_maintainLatestCandidate} nil candidateDescriptor provided by caller",  buf,  0xCu);

      id v7 = 0LL;
    }

    goto LABEL_37;
  }

  unsigned int v10 = [v7 preSoftwareUpdateAssetStaging];
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  BOOL v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 oslog]);

  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
  if (!v10)
  {
    if (v13)
    {
      __int128 v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      id v33 = v7;
      __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
      *(_DWORD *)buf = 138543618;
      v65 = v32;
      __int16 v66 = 2114;
      __int128 v67 = v34;
      _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_maintainLatestCandidate} not considering (not preSoftwareUpdateAssetStaging) | descriptor:%{public}@",  buf,  0x16u);

      id v7 = v33;
    }

    goto LABEL_37;
  }

  if (v13)
  {
    int v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
    *(_DWORD *)buf = 138543618;
    v65 = v14;
    __int16 v66 = 2114;
    __int128 v67 = v15;
    _os_log_impl( &dword_0,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_maintainLatestCandidate} examining preSoftwareUpdateAssetStaging descriptor:%{public}@",  buf,  0x16u);
  }

  __int16 v57 = self;

  __int128 v62 = 0u;
  __int128 v63 = 0u;
  __int128 v60 = 0u;
  __int128 v61 = 0u;
  id v56 = v6;
  id obj = v6;
  id v16 = [obj countByEnumeratingWithState:&v60 objects:v70 count:16];
  if (!v16) {
    goto LABEL_26;
  }
  id v17 = v16;
  uint64_t v18 = *(void *)v61;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  while (2)
  {
    for (uint64_t i = 0LL; i != v17; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v61 != v18) {
        objc_enumerationMutation(obj);
      }
      __int16 v21 = *(void **)(*((void *)&v60 + 1) + 8LL * (void)i);
      id v22 = objc_autoreleasePoolPush();
      __int16 v23 = p_ivars[155];
      id v24 = (void *)objc_claimAutoreleasedReturnValue([v7 assetType]);
      __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v21 assetType]);
      if ((-[__objc2_ivar_list stringIsEqual:to:](v23, "stringIsEqual:to:", v24, v25) & 1) != 0)
      {
        id v26 = p_ivars[155];
        context = v22;
        __int16 v27 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSpecifier]);
        id v28 = v7;
        __int16 v29 = (void *)objc_claimAutoreleasedReturnValue([v21 assetSpecifier]);
        LODWORD(v26) = -[__objc2_ivar_list stringIsEqual:to:](v26, "stringIsEqual:to:", v27, v29);

        id v7 = v28;
        id v22 = context;

        if ((_DWORD)v26)
        {
          id v35 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
          __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([v28 assetVersion]);
          id v37 = [v35 initWithRestoreVersion:v36];

          id v38 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
          uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v21 assetVersion]);
          id v40 = [v38 initWithRestoreVersion:v39];

          if ([v37 isComparable:v40])
          {
            uint64_t v42 = (char *)[v37 compare:v40];
            id v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v57, "logger"));
            id v44 = (os_log_s *)objc_claimAutoreleasedReturnValue([v43 oslog]);

            BOOL v45 = os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT);
            BOOL v12 = (os_log_s *)obj;
            id v7 = v28;
            if (v42 == (_BYTE *)&dword_0 + 1)
            {
              if (v45)
              {
                __int16 v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v57, "summary"));
                BOOL v47 = (void *)objc_claimAutoreleasedReturnValue([v28 summary]);
                *(_DWORD *)buf = 138543618;
                v65 = v46;
                __int16 v66 = 2114;
                __int128 v67 = v47;
                _os_log_impl( &dword_0,  v44,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[AUTO-STAGER] {_maintainLatestCandidate} best candidate so far | descriptor:%{public}@",  buf,  0x16u);

                id v7 = v28;
              }

              objc_autoreleasePoolPop(context);
              goto LABEL_26;
            }

            if (!v45) {
              goto LABEL_34;
            }
            id v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v57, "summary"));
            __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v28 summary]);
            *(_DWORD *)buf = 138543618;
            v65 = v53;
            __int16 v66 = 2114;
            __int128 v67 = v54;
            _os_log_impl( &dword_0,  v44,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[AUTO-STAGER] {_maintainLatestCandidate} not newer version | descriptor:%{public}@",  buf,  0x16u);
          }

          else
          {
            __int16 v52 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v57, "logger"));
            id v44 = (os_log_s *)objc_claimAutoreleasedReturnValue([v52 oslog]);

            BOOL v12 = (os_log_s *)obj;
            if (!os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
            {
              id v6 = v56;
              id v7 = v28;
              goto LABEL_36;
            }

            id v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v57, "summary"));
            __int128 v54 = (void *)objc_claimAutoreleasedReturnValue([v28 summary]);
            __int128 v55 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
            *(_DWORD *)buf = 138543874;
            v65 = v53;
            __int16 v66 = 2114;
            __int128 v67 = v54;
            __int16 v68 = 2112;
            __int128 v69 = v55;
            _os_log_impl( &dword_0,  v44,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_maintainLatestCandidate} versions not comparable (keeping already encountered) | descripto r:%{public}@, already:%@",  buf,  0x20u);
          }

          id v7 = v28;
LABEL_34:
          id v6 = v56;
LABEL_36:

          objc_autoreleasePoolPop(context);
          goto LABEL_37;
        }
      }

      else
      {
      }

      objc_autoreleasePoolPop(v22);
      p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
    }

    id v17 = [obj countByEnumeratingWithState:&v60 objects:v70 count:16];
    if (v17) {
      continue;
    }
    break;
  }

- (BOOL)_isAssetTypeInvolvedInStaging:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v7,  v8));

  uint64_t v10 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  if (!v10
    || (id v11 = (void *)v10,
        BOOL v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor")),
        BOOL v13 = (void *)objc_claimAutoreleasedReturnValue([v12 assetType]),
        unsigned __int8 v14 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v13, v4),
        v13,
        v12,
        v11,
        (v14 & 1) == 0))
  {
    __int128 v156 = 0u;
    __int128 v157 = 0u;
    __int128 v154 = 0u;
    __int128 v155 = 0u;
    id v16 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](self, "candidateSetConfigurations"));
    id v17 = [v16 countByEnumeratingWithState:&v154 objects:v169 count:16];
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = *(void *)v155;
LABEL_6:
      uint64_t v20 = 0LL;
      while (1)
      {
        if (*(void *)v155 != v19) {
          objc_enumerationMutation(v16);
        }
        if (v18 == (id)++v20)
        {
          id v18 = [v16 countByEnumeratingWithState:&v154 objects:v169 count:16];
          if (v18) {
            goto LABEL_6;
          }
          break;
        }
      }
    }

    __int16 v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( self,  "candidateSetConfigurationsRequiredByTarget"));
    id v22 = [v21 safeObjectForKey:v9 ofClass:objc_opt_class(NSMutableArray)];
    __int16 v23 = (void *)objc_claimAutoreleasedReturnValue(v22);

    __int128 v152 = 0u;
    __int128 v153 = 0u;
    __int128 v150 = 0u;
    __int128 v151 = 0u;
    id v16 = v23;
    id v24 = [v16 countByEnumeratingWithState:&v150 objects:v168 count:16];
    if (v24)
    {
      id v25 = v24;
      uint64_t v26 = *(void *)v151;
LABEL_14:
      uint64_t v27 = 0LL;
      while (1)
      {
        if (*(void *)v151 != v26) {
          objc_enumerationMutation(v16);
        }
        if (v25 == (id)++v27)
        {
          id v25 = [v16 countByEnumeratingWithState:&v150 objects:v168 count:16];
          if (v25) {
            goto LABEL_14;
          }
          goto LABEL_20;
        }
      }
    }

    else
    {
LABEL_20:

      id v28 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
      id v29 = [v28 safeObjectForKey:v9 ofClass:objc_opt_class(NSMutableArray)];
      id v30 = (void *)objc_claimAutoreleasedReturnValue(v29);

      __int128 v148 = 0u;
      __int128 v149 = 0u;
      __int128 v146 = 0u;
      __int128 v147 = 0u;
      id v16 = v30;
      id v31 = [v16 countByEnumeratingWithState:&v146 objects:v167 count:16];
      if (v31)
      {
        id v32 = v31;
        uint64_t v33 = *(void *)v147;
LABEL_22:
        uint64_t v34 = 0LL;
        while (1)
        {
          if (*(void *)v147 != v33) {
            objc_enumerationMutation(v16);
          }
          if (v32 == (id)++v34)
          {
            id v32 = [v16 countByEnumeratingWithState:&v146 objects:v167 count:16];
            if (v32) {
              goto LABEL_22;
            }
            goto LABEL_28;
          }
        }
      }

      else
      {
LABEL_28:

        __int128 v144 = 0u;
        __int128 v145 = 0u;
        __int128 v142 = 0u;
        __int128 v143 = 0u;
        id v16 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidatesForStaging](self, "candidatesForStaging"));
        id v35 = [v16 countByEnumeratingWithState:&v142 objects:v166 count:16];
        if (v35)
        {
          id v36 = v35;
          uint64_t v37 = *(void *)v143;
LABEL_30:
          uint64_t v38 = 0LL;
          while (1)
          {
            if (*(void *)v143 != v37) {
              objc_enumerationMutation(v16);
            }
            uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v142 + 1) + 8 * v38) assetType]);
            unsigned __int8 v40 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v39, v4);

            if ((v40 & 1) != 0) {
              goto LABEL_102;
            }
            if (v36 == (id)++v38)
            {
              id v36 = [v16 countByEnumeratingWithState:&v142 objects:v166 count:16];
              if (v36) {
                goto LABEL_30;
              }
              break;
            }
          }
        }

        __int16 v41 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingRequiredByTarget]( self,  "candidatesForStagingRequiredByTarget"));
        id v42 = [v41 safeObjectForKey:v9 ofClass:objc_opt_class(NSMutableArray)];
        id v43 = (void *)objc_claimAutoreleasedReturnValue(v42);

        __int128 v140 = 0u;
        __int128 v141 = 0u;
        __int128 v138 = 0u;
        __int128 v139 = 0u;
        id v16 = v43;
        id v44 = [v16 countByEnumeratingWithState:&v138 objects:v165 count:16];
        if (v44)
        {
          id v45 = v44;
          uint64_t v46 = *(void *)v139;
LABEL_38:
          uint64_t v47 = 0LL;
          while (1)
          {
            if (*(void *)v139 != v46) {
              objc_enumerationMutation(v16);
            }
            __int16 v48 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v138 + 1) + 8 * v47) assetType]);
            unsigned __int8 v49 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v48, v4);

            if ((v49 & 1) != 0) {
              break;
            }
            if (v45 == (id)++v47)
            {
              id v45 = [v16 countByEnumeratingWithState:&v138 objects:v165 count:16];
              if (v45) {
                goto LABEL_38;
              }
              goto LABEL_44;
            }
          }
        }

        else
        {
LABEL_44:

          id v50 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingOptionalByTarget]( self,  "candidatesForStagingOptionalByTarget"));
          id v51 = [v50 safeObjectForKey:v9 ofClass:objc_opt_class(NSMutableArray)];
          __int16 v52 = (void *)objc_claimAutoreleasedReturnValue(v51);

          __int128 v136 = 0u;
          __int128 v137 = 0u;
          __int128 v134 = 0u;
          __int128 v135 = 0u;
          id v16 = v52;
          id v53 = [v16 countByEnumeratingWithState:&v134 objects:v164 count:16];
          if (v53)
          {
            id v54 = v53;
            uint64_t v55 = *(void *)v135;
LABEL_46:
            uint64_t v56 = 0LL;
            while (1)
            {
              if (*(void *)v135 != v55) {
                objc_enumerationMutation(v16);
              }
              __int16 v57 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v134 + 1) + 8 * v56) assetType]);
              unsigned __int8 v58 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v57, v4);

              if ((v58 & 1) != 0) {
                break;
              }
              if (v54 == (id)++v56)
              {
                id v54 = [v16 countByEnumeratingWithState:&v134 objects:v164 count:16];
                if (v54) {
                  goto LABEL_46;
                }
                goto LABEL_52;
              }
            }
          }

          else
          {
LABEL_52:

            __int128 v132 = 0u;
            __int128 v133 = 0u;
            __int128 v130 = 0u;
            __int128 v131 = 0u;
            id v16 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager determiningBySelector](self, "determiningBySelector"));
            id v59 = [v16 countByEnumeratingWithState:&v130 objects:v163 count:16];
            if (v59)
            {
              id v60 = v59;
              uint64_t v108 = *(void *)v131;
LABEL_54:
              uint64_t v61 = 0LL;
              while (1)
              {
                if (*(void *)v131 != v108) {
                  objc_enumerationMutation(v16);
                }
                uint64_t v62 = *(void *)(*((void *)&v130 + 1) + 8 * v61);
                __int128 v63 = objc_autoreleasePoolPush();
                uint64_t v64 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager determiningBySelector](self, "determiningBySelector"));
                id v65 = [(id)v64 safeObjectForKey:v62 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
                __int16 v66 = (void *)objc_claimAutoreleasedReturnValue(v65);

                __int128 v67 = (void *)objc_claimAutoreleasedReturnValue([v66 assetType]);
                LOBYTE(v64) = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v67,  v4);

                objc_autoreleasePoolPop(v63);
                if ((v64 & 1) != 0) {
                  goto LABEL_102;
                }
                if (v60 == (id)++v61)
                {
                  id v60 = [v16 countByEnumeratingWithState:&v130 objects:v163 count:16];
                  if (v60) {
                    goto LABEL_54;
                  }
                  break;
                }
              }
            }

            __int128 v128 = 0u;
            __int128 v129 = 0u;
            __int128 v126 = 0u;
            __int128 v127 = 0u;
            id v16 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
            id v68 = [v16 countByEnumeratingWithState:&v126 objects:v162 count:16];
            if (v68)
            {
              id v69 = v68;
              uint64_t v70 = *(void *)v127;
LABEL_62:
              uint64_t v71 = 0LL;
              while (1)
              {
                if (*(void *)v127 != v70) {
                  objc_enumerationMutation(v16);
                }
                __int16 v72 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v126 + 1) + 8 * v71) assetType]);
                unsigned __int8 v73 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v72, v4);

                if ((v73 & 1) != 0) {
                  goto LABEL_102;
                }
                if (v69 == (id)++v71)
                {
                  id v69 = [v16 countByEnumeratingWithState:&v126 objects:v162 count:16];
                  if (v69) {
                    goto LABEL_62;
                  }
                  break;
                }
              }
            }

            __int16 v74 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingRequiredByTarget]( self,  "availableForStagingRequiredByTarget"));
            id v75 = [v74 safeObjectForKey:v9 ofClass:objc_opt_class(NSMutableArray)];
            uint64_t v76 = (void *)objc_claimAutoreleasedReturnValue(v75);

            __int128 v124 = 0u;
            __int128 v125 = 0u;
            __int128 v122 = 0u;
            __int128 v123 = 0u;
            id v16 = v76;
            id v77 = [v16 countByEnumeratingWithState:&v122 objects:v161 count:16];
            if (v77)
            {
              id v78 = v77;
              uint64_t v79 = *(void *)v123;
LABEL_70:
              uint64_t v80 = 0LL;
              while (1)
              {
                if (*(void *)v123 != v79) {
                  objc_enumerationMutation(v16);
                }
                id v81 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v122 + 1) + 8 * v80) assetType]);
                unsigned __int8 v82 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v81, v4);

                if ((v82 & 1) != 0) {
                  break;
                }
                if (v78 == (id)++v80)
                {
                  id v78 = [v16 countByEnumeratingWithState:&v122 objects:v161 count:16];
                  if (v78) {
                    goto LABEL_70;
                  }
                  goto LABEL_76;
                }
              }
            }

            else
            {
LABEL_76:

              id v83 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingOptionalByTarget]( self,  "availableForStagingOptionalByTarget"));
              id v84 = [v83 safeObjectForKey:v9 ofClass:objc_opt_class(NSMutableArray)];
              id v85 = (void *)objc_claimAutoreleasedReturnValue(v84);

              __int128 v120 = 0u;
              __int128 v121 = 0u;
              __int128 v118 = 0u;
              __int128 v119 = 0u;
              id v16 = v85;
              id v86 = [v16 countByEnumeratingWithState:&v118 objects:v160 count:16];
              if (!v86)
              {
LABEL_84:

                __int128 v116 = 0u;
                __int128 v117 = 0u;
                __int128 v114 = 0u;
                __int128 v115 = 0u;
                id v16 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](self, "awaitingStagingAttempt"));
                id v92 = [v16 countByEnumeratingWithState:&v114 objects:v159 count:16];
                if (v92)
                {
                  id v93 = v92;
                  uint64_t v94 = *(void *)v115;
LABEL_86:
                  uint64_t v95 = 0LL;
                  while (1)
                  {
                    if (*(void *)v115 != v94) {
                      objc_enumerationMutation(v16);
                    }
                    id v96 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v114 + 1) + 8 * v95) assetType]);
                    unsigned __int8 v97 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v96,  v4);

                    if ((v97 & 1) != 0) {
                      break;
                    }
                    if (v93 == (id)++v95)
                    {
                      id v93 = [v16 countByEnumeratingWithState:&v114 objects:v159 count:16];
                      if (v93) {
                        goto LABEL_86;
                      }
                      goto LABEL_92;
                    }
                  }
                }

                else
                {
LABEL_92:

                  __int128 v112 = 0u;
                  __int128 v113 = 0u;
                  __int128 v110 = 0u;
                  __int128 v111 = 0u;
                  id v16 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
                  id v98 = [v16 countByEnumeratingWithState:&v110 objects:v158 count:16];
                  if (!v98)
                  {
LABEL_100:
                    BOOL v15 = 0;
LABEL_103:

                    goto LABEL_104;
                  }

                  id v99 = v98;
                  uint64_t v109 = *(void *)v111;
LABEL_94:
                  uint64_t v100 = 0LL;
                  while (1)
                  {
                    if (*(void *)v111 != v109) {
                      objc_enumerationMutation(v16);
                    }
                    uint64_t v101 = *(void *)(*((void *)&v110 + 1) + 8 * v100);
                    v102 = objc_autoreleasePoolPush();
                    uint64_t v103 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
                    id v104 = [(id)v103 safeObjectForKey:v101 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
                    objc_super v105 = (void *)objc_claimAutoreleasedReturnValue(v104);

                    v106 = (void *)objc_claimAutoreleasedReturnValue([v105 assetType]);
                    LOBYTE(v103) = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v106,  v4);

                    objc_autoreleasePoolPop(v102);
                    if ((v103 & 1) != 0) {
                      break;
                    }
                    if (v99 == (id)++v100)
                    {
                      id v99 = [v16 countByEnumeratingWithState:&v110 objects:v158 count:16];
                      if (v99) {
                        goto LABEL_94;
                      }
                      goto LABEL_100;
                    }
                  }
                }

- (BOOL)_doesSelectorMatchCurrentJob:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  LOBYTE(self) = -[MADAutoAssetStager _doesSelector:matchDescriptor:](self, "_doesSelector:matchDescriptor:", v4, v7);

  return (char)self;
}

- (BOOL)_doesSelector:(id)a3 matchDescriptor:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  if (!v7) {
    goto LABEL_15;
  }
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v6 assetVersion]);

  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v7 assetType]);
    BOOL v12 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
    if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v11, v12))
    {
      BOOL v13 = (void *)objc_claimAutoreleasedReturnValue([v7 assetSpecifier]);
      unsigned __int8 v14 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSpecifier]);
      if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v13, v14))
      {
        BOOL v15 = (void *)objc_claimAutoreleasedReturnValue([v7 assetVersion]);
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v6 assetVersion]);
        unsigned int v17 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v15, v16);

        if (v17)
        {
          id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
          uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

          if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            __int16 v21 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
            id v22 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
            int v38 = 138543874;
            uint64_t v39 = v20;
            __int16 v40 = 2114;
            __int16 v41 = v21;
            __int16 v42 = 2114;
            id v43 = v22;
            __int16 v23 = "%{public}@\n"
                  "[AUTO-STAGER] {_doesSelector:matchDescriptor} match for asset-type + asset-specifier + asset-version o"
                  "f active stager-job | checkMatchSelector:%{public}@ | candidateDescriptor:%{public}@";
LABEL_22:
            _os_log_impl(&dword_0, v19, OS_LOG_TYPE_DEFAULT, v23, (uint8_t *)&v38, 0x20u);

            goto LABEL_23;
          }

          goto LABEL_23;
        }

        goto LABEL_15;
      }
    }

- (BOOL)_isSetTargetWithinRange:(id)a3 asCandidate:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager restoreVersionFromOSVersion:]( &OBJC_CLASS___MADAutoAssetControlManager,  "restoreVersionFromOSVersion:",  v9));

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 autoAssetEntries]);
  id v12 = [v11 count];

  if (v12 || v4)
  {
    unsigned __int8 v14 = (void *)objc_claimAutoreleasedReturnValue([v6 minTargetOSVersion]);
    BOOL v15 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager restoreVersionFromOSVersion:]( &OBJC_CLASS___MADAutoAssetControlManager,  "restoreVersionFromOSVersion:",  v14));

    id v16 = (void *)objc_claimAutoreleasedReturnValue([v6 maxTargetOSVersion]);
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetControlManager restoreVersionFromOSVersion:]( &OBJC_CLASS___MADAutoAssetControlManager,  "restoreVersionFromOSVersion:",  v16));

    if ([v15 isComparable:v10] && objc_msgSend(v17, "isComparable:", v10))
    {
      id v18 = (char *)[v15 compare:v10];
      uint64_t v19 = (char *)[v17 compare:v10];
      BOOL v13 = v18 != (_BYTE *)&dword_0 + 1 && v19 + 1 != 0LL;
    }

    else
    {
      __int16 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        -[MADAutoAssetStager _isSetTargetWithinRange:asCandidate:].cold.1();
      }

      BOOL v13 = 0;
    }
  }

  else
  {
    BOOL v13 = 0;
  }

  return v13;
}

- (BOOL)_setConfigurationHasEntriesWhenTargeting:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 autoAssetEntries]);
  id v8 = [v7 count];

  if (v8)
  {
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setTargets](self, "setTargets"));
    id v10 = [v9 countByEnumeratingWithState:&v36 objects:v40 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v37;
      p_ivars = &MobileAssetKeyManager__metaData.ivars;
      uint64_t v34 = *(void *)v37;
      do
      {
        unsigned __int8 v14 = 0LL;
        id v35 = v11;
        do
        {
          if (*(void *)v37 != v12) {
            objc_enumerationMutation(v9);
          }
          BOOL v15 = *(void **)(*((void *)&v36 + 1) + 8LL * (void)v14);
          if (-[MADAutoAssetStager _isSetTargetWithinRange:asCandidate:]( self,  "_isSetTargetWithinRange:asCandidate:",  v15,  1LL))
          {
            id v16 = p_ivars[155];
            unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue([v15 clientDomainName]);
            id v18 = (void *)objc_claimAutoreleasedReturnValue([v4 clientDomainName]);
            if ((-[__objc2_ivar_list stringIsEqual:to:](v16, "stringIsEqual:to:", v17, v18) & 1) != 0)
            {
              uint64_t v19 = p_ivars[155];
              uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSetIdentifier]);
              __int16 v21 = v9;
              id v22 = self;
              id v23 = v4;
              id v24 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSetIdentifier]);
              LODWORD(v19) = -[__objc2_ivar_list stringIsEqual:to:](v19, "stringIsEqual:to:", v20, v24);

              id v4 = v23;
              self = v22;
              uint64_t v9 = v21;
              uint64_t v12 = v34;

              p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
              id v11 = v35;
              if ((_DWORD)v19)
              {
                unsigned int v25 = (void *)objc_claimAutoreleasedReturnValue([v15 autoAssetEntries]);
                id v26 = [v25 count];

                if (!v26)
                {
                  BOOL v32 = 0;
                  goto LABEL_17;
                }
              }
            }

            else
            {

              id v11 = v35;
            }
          }

          unsigned __int8 v14 = (char *)v14 + 1;
        }

        while (v11 != v14);
        id v11 = [v9 countByEnumeratingWithState:&v36 objects:v40 count:16];
      }

      while (v11);
    }

    BOOL v32 = 1;
LABEL_17:
  }

  else
  {
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v28 = (void *)objc_claimAutoreleasedReturnValue([v27 diag]);
    unsigned int v29 = objc_alloc(&OBJC_CLASS___NSString);
    id v30 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
    id v31 = -[NSString initWithFormat:]( v29,  "initWithFormat:",  @"{_setConfigurationHasEntriesWhenTargeting} no auto-asset-entries for set-configuration:%@",  v30);
    [v28 trackAnomaly:@"AUTO-STAGER" forReason:v31 withResult:6108 withError:0];

    BOOL v32 = 0;
  }

  return v32;
}

- (BOOL)_isDescriptorAssetTypeManagedAsSet:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a3 assetType]);
  LOBYTE(self) = -[MADAutoAssetStager _isAssetTypeManagedAsSet:](self, "_isAssetTypeManagedAsSet:", v4);

  return (char)self;
}

- (BOOL)_isAssetTypeManagedAsSet:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setConfigurations](self, "setConfigurations", 0LL));
  id v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v8)
  {
    uint64_t v9 = *(void *)v15;
    while (2)
    {
      for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v7);
        }
        id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v14 + 1) + 8 * (void)i) firstEntryAssetType]);
        unsigned __int8 v12 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v4, v11);

        if ((v12 & 1) != 0)
        {
          LOBYTE(v8) = 1;
          goto LABEL_11;
        }
      }

      id v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (v8) {
        continue;
      }
      break;
    }
  }

- (void)_addToStaged:(id)a3 addingFromStagerParam:(id)a4
{
  id v46 = a4;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 persistedConfig]);
  uint64_t v9 = (char *)[v8 ullForKey:@"stagedAssetTotalContentBytes"];

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v46 downloadedDescriptor]);
  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v46 downloadedDescriptor]);
    -[MADAutoAssetStager setActiveJobDescriptor:](self, "setActiveJobDescriptor:", v11);
  }

  else
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    unsigned __int8 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 diag]);
    [v12 trackAnomaly:@"AUTO-STAGER" forReason:@"{AddToStagedDecideMoreAvailable} no downloaded descriptor provided" withResult:6111 withError:0];
  }

  BOOL v13 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  __int128 v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
  __int128 v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSpecifier]);
  id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 assetVersion]);
  id v20 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v13,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v15,  v17,  v19);

  __int16 v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  id v22 = (void *)objc_claimAutoreleasedReturnValue([v46 jobInformation]);
  id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 currentStatus]);
  -[MADAutoAssetStager _updateDescriptor:withLatestJobStatus:](self, "_updateDescriptor:withLatestJobStatus:", v21, v23);

  id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  int64_t v25 = -[MADAutoAssetStager _persistDescriptor:operation:persistingDescriptor:withRepresentation:message:]( self,  "_persistDescriptor:operation:persistingDescriptor:withRepresentation:message:",  @"AddToStagedDecideMoreAvailable",  @"ENTRY_MODIFY",  v24,  603LL,  @"content downloaded (add to staged)");

  id v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  -[MADAutoAssetStager updateLookupResultsJustStaged:](self, "updateLookupResultsJustStaged:", v26);

  uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  unsigned int v29 = (void *)objc_claimAutoreleasedReturnValue([v20 persistedEntryID]);
  [v27 setSafeObject:v28 forKey:v29];

  id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  id v31 = (void *)objc_claimAutoreleasedReturnValue([v30 assetId]);
  +[MADAutoAssetHistory recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:]( &OBJC_CLASS___MADAutoAssetHistory,  "recordOperation:toHistoryType:fromLayer:forAssetID:withSelector:",  203LL,  0LL,  4LL,  v31,  v20);

  BOOL v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
  LODWORD(v30) = [v32 isPatch];

  uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsStaged](self, "statisticsStaged"));
  uint64_t v34 = v33;
  if ((_DWORD)v30)
  {
    objc_msgSend(v33, "setPatchedAssets:", (char *)objc_msgSend(v33, "patchedAssets") + 1);

    id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsStaged](self, "statisticsStaged"));
    __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v36 metadata]);
    objc_msgSend( v35,  "setPatchedBytes:",  (char *)objc_msgSend(v37, "safeIntegerForKey:", @"_UnarchivedSize")
    + (void)[v35 patchedBytes]);
  }

  else
  {
    objc_msgSend(v33, "setFullAssets:", (char *)objc_msgSend(v33, "fullAssets") + 1);

    id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsStaged](self, "statisticsStaged"));
    __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](self, "activeJobDescriptor"));
    __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v36 metadata]);
    objc_msgSend( v35,  "setFullBytes:",  (char *)objc_msgSend(v37, "safeIntegerForKey:", @"_UnarchivedSize") + (void)objc_msgSend(v35, "fullBytes"));
  }

  __int128 v38 = &v9[v25];
  __int128 v39 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  __int16 v40 = (void *)objc_claimAutoreleasedReturnValue([v39 persistedConfig]);
  __int16 v41 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  objc_msgSend(v40, "persistULL:forKey:", objc_msgSend(v41, "count"), @"stagedAssetCount");

  __int16 v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v43 = (void *)objc_claimAutoreleasedReturnValue([v42 persistedConfig]);
  [v43 persistULL:v38 forKey:@"stagedAssetTotalContentBytes"];

  id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v45 = (void *)objc_claimAutoreleasedReturnValue([v44 persistedConfig]);
  [v45 persistULL:0 forKey:@"activelyStagingAssetCount" shouldPersist:1];

  -[MADAutoAssetStager _logPersistedConfigSet:message:]( self,  "_logPersistedConfigSet:message:",  @"AddToStagedDecideMoreAvailable",  @"auto-asset-job has indicated content downloaded (add to staged)");
  -[MADAutoAssetStager setActiveJobDescriptor:](self, "setActiveJobDescriptor:", 0LL);
}

- (BOOL)_isOtherTargetAvailable
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v5,  v6));

  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( self,  "candidateSetConfigurationsRequiredByTarget"));
  id v9 = [v8 countByEnumeratingWithState:&v21 objects:v26 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v22;
LABEL_3:
    uint64_t v12 = 0LL;
    while (1)
    {
      if (*(void *)v22 != v11) {
        objc_enumerationMutation(v8);
      }
      if (!+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  *(void *)(*((void *)&v21 + 1) + 8 * v12),  v7)) {
        goto LABEL_18;
      }
      if (v10 == (id)++v12)
      {
        id v10 = [v8 countByEnumeratingWithState:&v21 objects:v26 count:16];
        if (v10) {
          goto LABEL_3;
        }
        break;
      }
    }
  }

  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget",  0LL));
  id v13 = [v8 countByEnumeratingWithState:&v17 objects:v25 count:16];
  if (v13)
  {
    uint64_t v14 = *(void *)v18;
LABEL_11:
    uint64_t v15 = 0LL;
    while (1)
    {
      if (*(void *)v18 != v14) {
        objc_enumerationMutation(v8);
      }
      if (!+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  *(void *)(*((void *)&v17 + 1) + 8 * v15),  v7)) {
        break;
      }
      if (v13 == (id)++v15)
      {
        id v13 = [v8 countByEnumeratingWithState:&v17 objects:v25 count:16];
        if (v13) {
          goto LABEL_11;
        }
        goto LABEL_19;
      }
    }

- (BOOL)_maDownloadErrorConsideredFatal:(int64_t)a3
{
  return a3 != 44 && (a3 & 0xFFFFFFFFFFFFFFFCLL) != 40;
}

- (void)_blendOptionalCandidates:(id)a3 intoRequired:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveRequired](self, "_targetNameActiveRequired"));
  uint64_t v11 = (char *)[v6 count];
  if ((uint64_t)v11 >= 1)
  {
    uint64_t v12 = v11 + 1;
    while (1)
    {
      id v13 = (void *)objc_claimAutoreleasedReturnValue([v6 objectAtIndex:v12 - 2]);
      uint64_t v14 = v13;
      if (!v13) {
        break;
      }
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v13 assetType]);
      unsigned int v16 = -[MADAutoAssetStager isAssetType:representedInAssetDescriptors:]( self,  "isAssetType:representedInAssetDescriptors:",  v15,  v7);

      if (v16)
      {
        [v7 addObject:v14];
        [v6 removeObjectAtIndex:v12 - 2];
        __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
        __int128 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
          __int128 v20 = (NSString *)objc_claimAutoreleasedReturnValue([v14 summary]);
          *(_DWORD *)buf = 138543874;
          int64_t v25 = v19;
          __int16 v26 = 2114;
          uint64_t v27 = v10;
          __int16 v28 = 2114;
          unsigned int v29 = v20;
          __int128 v21 = v18;
          __int128 v22 = "%{public}@\n"
                "[%{public}@] {_blendOptionalCandidates} moved OPTIONAL to REQUIRED for determine lookup | optionalDescriptor:%{public}@";
          goto LABEL_10;
        }
      }

      else
      {
        __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
        __int128 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
          __int128 v20 = (NSString *)objc_claimAutoreleasedReturnValue([v14 summary]);
          *(_DWORD *)buf = 138543874;
          int64_t v25 = v19;
          __int16 v26 = 2114;
          uint64_t v27 = v10;
          __int16 v28 = 2114;
          unsigned int v29 = v20;
          __int128 v21 = v18;
          __int128 v22 = "%{public}@\n"
                "[%{public}@] {_blendOptionalCandidates} OPTIONAL remains OPTIONAL for determine lookup | optionalDescriptor:%{public}@";
LABEL_10:
          _os_log_impl(&dword_0, v21, OS_LOG_TYPE_DEFAULT, v22, buf, 0x20u);
LABEL_11:
        }
      }
    }

    __int128 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s diag](v18, "diag"));
    __int128 v20 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"[%@] {_blendOptionalCandidates} unable to load optionalDescriptor | optionalIndex:%ld",  v10,  v12 - 2);
    [v19 trackAnomaly:@"AUTO-STAGER" forReason:v20 withResult:6111 withError:0];
    goto LABEL_11;
  }

- (BOOL)isAssetType:(id)a3 representedInAssetDescriptors:(id)a4
{
  id v5 = a3;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  id v6 = a4;
  id v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v14;
    while (2)
    {
      for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v8) {
          objc_enumerationMutation(v6);
        }
        id v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * (void)i), "assetType", (void)v13));
        unsigned __int8 v11 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v5, v10);

        if ((v11 & 1) != 0)
        {
          LOBYTE(v7) = 1;
          goto LABEL_11;
        }
      }

      id v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }

- (BOOL)_formCandidateSetLookupArray:(id)a3 involvingRequired:(BOOL)a4 involvingOptional:(BOOL)a5 providingOptional:(BOOL)a6
{
  __int128 v138 = (os_log_s *)a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v9 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v150 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
    unsigned __int8 v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v10,  v11));

    __int128 v13 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v14 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( self,  "candidateSetConfigurationsRequiredByTarget"));
    [v15 setSafeObject:v13 forKey:v12];

    __int128 v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
    [v16 setSafeObject:v14 forKey:v12];
  }

  -[MADAutoAssetStager _extendLookupByAssetTypeWithSetConfigurations:]( self,  "_extendLookupByAssetTypeWithSetConfigurations:",  v9);
  -[MADAutoAssetStager _extendLookupByAssetTypeWithDownloadedDescriptors:]( self,  "_extendLookupByAssetTypeWithDownloadedDescriptors:",  v9);
  __int128 v146 = self;
  __int128 v136 = v9;
  if (-[NSMutableDictionary count](v9, "count"))
  {
    __int128 v203 = 0u;
    __int128 v204 = 0u;
    __int128 v201 = 0u;
    __int128 v202 = 0u;
    __int128 v17 = v9;
    id v159 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v17,  "countByEnumeratingWithState:objects:count:",  &v201,  v227,  16LL);
    if (!v159) {
      goto LABEL_24;
    }
    uint64_t v156 = *(void *)v202;
    while (1)
    {
      for (uint64_t i = 0LL; i != v159; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v202 != v156) {
          objc_enumerationMutation(v17);
        }
        __int128 v19 = *(os_log_s **)(*((void *)&v201 + 1) + 8LL * (void)i);
        id v20 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v17,  "safeObjectForKey:ofClass:",  v19,  objc_opt_class(&OBJC_CLASS___MADAutoSetConfiguration));
        __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
        if (v21)
        {
          __int128 v199 = 0u;
          __int128 v200 = 0u;
          __int128 v197 = 0u;
          __int128 v198 = 0u;
          __int128 v22 = v150;
          id v23 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v22,  "countByEnumeratingWithState:objects:count:",  &v197,  v226,  16LL);
          if (!v23)
          {
LABEL_18:

            -[NSMutableArray addObject:](v22, "addObject:", v21);
            goto LABEL_22;
          }

          id v24 = v23;
          uint64_t v25 = *(void *)v198;
LABEL_12:
          uint64_t v26 = 0LL;
          while (1)
          {
            if (*(void *)v198 != v25) {
              objc_enumerationMutation(v22);
            }
            uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v197 + 1) + 8 * v26) firstEntryAssetType]);
            unsigned __int8 v28 = [v27 isEqualToString:v19];

            if ((v28 & 1) != 0) {
              break;
            }
            if (v24 == (id)++v26)
            {
              id v24 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v22,  "countByEnumeratingWithState:objects:count:",  &v197,  v226,  16LL);
              if (v24) {
                goto LABEL_12;
              }
              goto LABEL_18;
            }
          }
        }

        else
        {
          unsigned int v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v146, "logger"));
          __int128 v22 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([v29 oslog]);

          if (os_log_type_enabled((os_log_t)v22, OS_LOG_TYPE_ERROR))
          {
            id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v146, "summary"));
            *(_DWORD *)buf = 138543874;
            unint64_t v214 = v30;
            __int16 v215 = 2114;
            v216 = v138;
            __int16 v217 = 2114;
            v218 = v19;
            _os_log_error_impl( &dword_0,  (os_log_t)v22,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {%{public}@:_formCandidateSetLookupArray} unable to load stager-set-configuration from by-as set-type dict (dropping from candidates) | assetType:%{public}@",  buf,  0x20u);
          }
        }

LABEL_22:
      }

      id v159 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v17,  "countByEnumeratingWithState:objects:count:",  &v201,  v227,  16LL);
      if (!v159)
      {
LABEL_24:

        self = v146;
        id v9 = v136;
        break;
      }
    }
  }

  __int128 v139 = (char *)-[NSMutableArray count](v150, "count");
  if ((uint64_t)v139 < 1)
  {
    __int16 v42 = @"N";
    goto LABEL_129;
  }

  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    id v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
    BOOL v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
    uint64_t v33 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v31,  v32));

    uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingRequiredByTarget]( self,  "candidatesForStagingRequiredByTarget"));
    id v35 = [v34 safeObjectForKey:v33 ofClass:objc_opt_class(NSMutableArray)];
    __int128 v137 = (void *)objc_claimAutoreleasedReturnValue(v35);

    __int128 v36 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingOptionalByTarget]( self,  "candidatesForStagingOptionalByTarget"));
    id v37 = [v36 safeObjectForKey:v33 ofClass:objc_opt_class(NSMutableArray)];
    __int128 v134 = (void *)objc_claimAutoreleasedReturnValue(v37);

    __int128 v38 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( self,  "candidateSetConfigurationsRequiredByTarget"));
    id v39 = [v38 safeObjectForKey:v33 ofClass:objc_opt_class(NSMutableArray)];
    __int128 v153 = (void *)objc_claimAutoreleasedReturnValue(v39);

    __int16 v40 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
    __int128 v135 = (void *)v33;
    id v41 = [v40 safeObjectForKey:v33 ofClass:objc_opt_class(NSMutableArray)];
    __int128 v140 = (void *)objc_claimAutoreleasedReturnValue(v41);
  }

  else
  {
    __int128 v140 = 0LL;
    __int128 v153 = 0LL;
    __int128 v134 = 0LL;
    __int128 v135 = 0LL;
    __int128 v137 = 0LL;
  }

  -[MADAutoAssetStager setCandidateSetConfigurations:](self, "setCandidateSetConfigurations:", v150);
  id v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v44 = (os_log_s *)objc_claimAutoreleasedReturnValue([v43 oslog]);

  if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
  {
    id v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
    id v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](self, "candidateSetConfigurations"));
    uint64_t v47 = (os_log_s *)[v46 count];
    *(_DWORD *)buf = 138543874;
    unint64_t v214 = v45;
    __int16 v215 = 2114;
    v216 = v138;
    __int16 v217 = 2048;
    v218 = v47;
    _os_log_impl( &dword_0,  v44,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {%{public}@:_formCandidateSetLookupArray} formed set-configurations (for determine lookups):%ld",  buf,  0x20u);
  }

  for (j = 0LL; j != v139; ++j)
  {
    unsigned __int8 v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](v146, "candidateSetConfigurations"));
    id v50 = (void *)objc_claimAutoreleasedReturnValue([v49 objectAtIndex:j]);

    if (!v50) {
      goto LABEL_53;
    }
    if (-[MADAutoAssetStager stagingClientUsingGroups](v146, "stagingClientUsingGroups"))
    {
      __int128 v195 = 0u;
      __int128 v196 = 0u;
      __int128 v193 = 0u;
      __int128 v194 = 0u;
      id v51 = v137;
      id v52 = [v51 countByEnumeratingWithState:&v193 objects:v225 count:16];
      if (v52)
      {
        id v53 = v52;
        uint64_t v54 = *(void *)v194;
LABEL_37:
        uint64_t v55 = 0LL;
        while (1)
        {
          if (*(void *)v194 != v54) {
            objc_enumerationMutation(v51);
          }
          uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v193 + 1) + 8 * v55) assetType]);
          __int16 v57 = (void *)objc_claimAutoreleasedReturnValue([v50 firstEntryAssetType]);
          unsigned int v58 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v56, v57);

          if (v58) {
            break;
          }
          if (v53 == (id)++v55)
          {
            id v53 = [v51 countByEnumeratingWithState:&v193 objects:v225 count:16];
            if (v53) {
              goto LABEL_37;
            }
            goto LABEL_43;
          }
        }

        [v153 addObject:v50];
        uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v146, "logger"));
        id v60 = (os_log_s *)objc_claimAutoreleasedReturnValue([v64 oslog]);

        if (!os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_51;
        }
        uint64_t v61 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v146, "summary"));
        uint64_t v62 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](v146, "_targetNameActive"));
        id v65 = (os_log_s *)objc_claimAutoreleasedReturnValue([v50 summary]);
        *(_DWORD *)buf = 138544642;
        unint64_t v214 = v61;
        __int16 v215 = 2114;
        v216 = v62;
        __int16 v217 = 2114;
        v218 = v138;
        __int16 v219 = 2048;
        v220 = j + 1;
        __int16 v221 = 2048;
        v222 = (os_log_s *)v139;
        __int16 v223 = 2114;
        v224 = v65;
        _os_log_impl( &dword_0,  v60,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {%{public}@:_formCandidateSetLookupArray} set-configuration (%ld of %ld) [REQUIRED]:%{public}@",  buf,  0x3Eu);

        goto LABEL_49;
      }

- (void)_extendLookupByAssetTypeWithSetConfigurations:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  __int128 v65 = 0u;
  __int128 v66 = 0u;
  __int128 v63 = 0u;
  __int128 v64 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setTargets](self, "setTargets"));
  id v52 = [obj countByEnumeratingWithState:&v63 objects:v76 count:16];
  if (v52)
  {
    uint64_t v51 = *(void *)v64;
    unsigned __int8 v49 = &v75;
    uint64_t v56 = v4;
    do
    {
      uint64_t v7 = 0LL;
      do
      {
        if (*(void *)v64 != v51) {
          objc_enumerationMutation(obj);
        }
        uint64_t v54 = v7;
        uint64_t v8 = *(void **)(*((void *)&v63 + 1) + 8 * v7);
        context = objc_autoreleasePoolPush();
        if (v8)
        {
          if (-[MADAutoAssetStager _isSetTargetWithinRange:asCandidate:]( self,  "_isSetTargetWithinRange:asCandidate:",  v8,  1LL))
          {
            __int128 v61 = 0u;
            __int128 v62 = 0u;
            __int128 v59 = 0u;
            __int128 v60 = 0u;
            uint64_t v55 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 autoAssetEntries]);
            id v58 = -[os_log_s countByEnumeratingWithState:objects:count:]( v55,  "countByEnumeratingWithState:objects:count:",  &v59,  v73,  16LL);
            if (!v58) {
              goto LABEL_33;
            }
            uint64_t v57 = *(void *)v60;
            while (1)
            {
              for (uint64_t i = 0LL; i != v58; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v60 != v57) {
                  objc_enumerationMutation(v55);
                }
                id v10 = *(void **)(*((void *)&v59 + 1) + 8LL * (void)i);
                if (v10)
                {
                  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
                  {
                    unsigned __int8 v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
                    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
                    __int128 v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v11,  v12));

                    __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSelector]);
                    __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
                    __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSelector]);
                    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v16 assetSpecifier]);
                    __int128 v18 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _setConfigurationForAssetType:forAssetSpecifier:]( self,  "_setConfigurationForAssetType:forAssetSpecifier:",  v15,  v17));

                    if (v18)
                    {
                      if (-[MADAutoAssetStager _isSetConfigurationApplicableToRequired:]( self,  "_isSetConfigurationApplicableToRequired:",  v18))
                      {
                        __int128 v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( self,  "candidateSetConfigurationsRequiredByTarget"));
                        id v20 = [v19 safeObjectForKey:v13 ofClass:objc_opt_class(NSMutableArray)];
                        __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);

                        [v21 addObject:v18];
                        __int128 v22 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( self,  "candidateSetConfigurationsRequiredByTarget"));
                        [v22 setSafeObject:v21 forKey:v13];

                        id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
                        id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

                        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
                        {
                          uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
                          uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v18 summary]);
                          *(_DWORD *)buf = 138543618;
                          id v68 = v25;
                          __int16 v69 = 2114;
                          uint64_t v70 = v26;
                          uint64_t v27 = v24;
                          unsigned __int8 v28 = "%{public}@\n"
                                "[AUTO-STAGER] {_extendLookupByAssetTypeWithSetConfigurations} [REQUIRED] | setConfiguration:%{public}@";
                          goto LABEL_23;
                        }
                      }

                      else
                      {
                        uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
                        id v34 = [v33 safeObjectForKey:v13 ofClass:objc_opt_class(NSMutableArray)];
                        __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(v34);

                        [v21 addObject:v18];
                        id v35 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
                        [v35 setSafeObject:v21 forKey:v13];

                        __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
                        id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v36 oslog]);

                        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
                        {
                          uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
                          uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v18 summary]);
                          *(_DWORD *)buf = 138543618;
                          id v68 = v25;
                          __int16 v69 = 2114;
                          uint64_t v70 = v26;
                          uint64_t v27 = v24;
                          unsigned __int8 v28 = "%{public}@\n"
                                "[AUTO-STAGER] {_extendLookupByAssetTypeWithSetConfigurations} [OPTIONAL] | setConfiguration:%{public}@";
LABEL_23:
                          _os_log_impl(&dword_0, v27, OS_LOG_TYPE_DEFAULT, v28, buf, 0x16u);
                        }
                      }
                    }
                  }

                  id v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "assetSelector", v49));
                  __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([v37 assetType]);
                  id v39 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSelector]);
                  __int16 v40 = (void *)objc_claimAutoreleasedReturnValue([v39 assetSpecifier]);
                  id v41 = (void *)objc_claimAutoreleasedReturnValue([v10 assetSelector]);
                  __int16 v42 = (void *)objc_claimAutoreleasedReturnValue([v41 downloadDecryptionKey]);
                  -[MADAutoAssetStager _extendLookupByAssetType:fromSource:withAssetType:withAssetSpecifier:withDownloadDecryptionKey:]( self,  "_extendLookupByAssetType:fromSource:withAssetType:withAssetSpecifier:withDownloadDecryptionKey:",  v56,  @"SET-TARGET",  v38,  v40,  v42);

                  id v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
                  id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v43 oslog]);

                  if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
                  {
                    id v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
                    id v45 = (void *)objc_claimAutoreleasedReturnValue([v10 summary]);
                    id v46 = [v56 count];
                    *(_DWORD *)buf = 138543874;
                    id v68 = v44;
                    __int16 v69 = 2112;
                    uint64_t v70 = v45;
                    __int16 v71 = 2048;
                    id v72 = v46;
                    _os_log_impl( &dword_0,  v30,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_extendLookupByAssetTypeWithSetConfigurations} stage auto-asset (from target) | nex tSetEntry:%@ | lookupAssets(by-asset-type):%ld",  buf,  0x20u);
                  }

                  goto LABEL_28;
                }

                unsigned int v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
                id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

                if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
                {
                  id v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
                  BOOL v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setTargets](self, "setTargets"));
                  *(_DWORD *)buf = 138543618;
                  id v68 = v31;
                  __int16 v69 = 2114;
                  uint64_t v70 = v32;
                  _os_log_error_impl( &dword_0,  v30,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {_extendLookupByAssetTypeWithSetConfigurations} nil set-entry encountered on setTarget s array | setTargets:\n %{public}@",  buf,  0x16u);
                }

- (void)_extendLookupByAssetTypeWithDownloadedDescriptors:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  uint64_t v9 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v7,  v8));

  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingRequiredByTarget]( self,  "candidatesForStagingRequiredByTarget"));
  unsigned __int8 v73 = (void *)v9;
  id v11 = [v10 safeObjectForKey:v9 ofClass:objc_opt_class(NSMutableArray)];
  __int16 v71 = (void *)objc_claimAutoreleasedReturnValue(v11);

  __int128 v81 = 0u;
  __int128 v82 = 0u;
  __int128 v79 = 0u;
  __int128 v80 = 0u;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager alreadyDownloadedDescriptors](self, "alreadyDownloadedDescriptors"));
  id v13 = [v12 countByEnumeratingWithState:&v79 objects:v90 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v80;
    id v76 = v12;
    uint64_t v78 = *(void *)v80;
    id v72 = v4;
    do
    {
      __int128 v16 = 0LL;
      id v74 = v14;
      do
      {
        if (*(void *)v80 != v15) {
          objc_enumerationMutation(v12);
        }
        __int128 v17 = *(void **)(*((void *)&v79 + 1) + 8LL * (void)v16);
        __int128 v18 = objc_autoreleasePoolPush();
        if (v17)
        {
          __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v17 assetType]);

          if (!v19)
          {
            uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

            if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
              goto LABEL_44;
            }
            id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            id v35 = (__CFString *)objc_claimAutoreleasedReturnValue([v17 summary]);
            *(_DWORD *)buf = 138543618;
            uint64_t v84 = v34;
            __int16 v85 = 2114;
            id v86 = v35;
            _os_log_error_impl( &dword_0,  v21,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {_extendLookupByAssetTypeWithDownloadedDescriptors} nil asset-type for asset-descriptor | au toAssetDescriptor:%{public}@",  buf,  0x16u);
LABEL_20:

            uint64_t v15 = v78;
            goto LABEL_44;
          }

          if (![v17 preSoftwareUpdateAssetStaging])
          {
            __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v36 oslog]);

            if (!os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
              goto LABEL_44;
            }
            id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            id v35 = (__CFString *)objc_claimAutoreleasedReturnValue([v17 summary]);
            *(_DWORD *)buf = 138543618;
            uint64_t v84 = v34;
            __int16 v85 = 2114;
            id v86 = v35;
            _os_log_impl( &dword_0,  v21,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_extendLookupByAssetTypeWithDownloadedDescriptors} not staging auto-asset (does not support pre-SU-staging) | autoAssetDescriptor:%{public}@",  buf,  0x16u);
            goto LABEL_20;
          }

          id v20 = (void *)objc_claimAutoreleasedReturnValue([v17 assetType]);
          __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _setTargetForAssetType:](self, "_setTargetForAssetType:", v20));

          unsigned int v77 = [v17 isPreSUStagingRequired];
          __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v17 assetType]);
          id v23 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSpecifier]);
          if (v21)
          {
            unsigned int v24 = -[os_log_s includesEntryForAssetType:forAssetSpecifier:]( v21,  "includesEntryForAssetType:forAssetSpecifier:",  v22,  v23);

            if (!v24)
            {
              __int128 v59 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
              __int128 v60 = (os_log_s *)objc_claimAutoreleasedReturnValue([v59 oslog]);

              if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
              {
                __int128 v61 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
                __int128 v62 = (__CFString *)objc_claimAutoreleasedReturnValue([v17 summary]);
                __int128 v63 = (__CFString *)[v4 count];
                *(_DWORD *)buf = 138543874;
                uint64_t v84 = v61;
                __int16 v85 = 2112;
                id v86 = v62;
                __int16 v87 = 2048;
                id v88 = v63;
                _os_log_impl( &dword_0,  v60,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_extendLookupByAssetTypeWithDownloadedDescriptors} not staging auto-asset (from downloa ded [set target removes]) | autoAssetDescriptor:%@ | setConfig(by-asset-type):%ld",  buf,  0x20u);
              }

              -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups");
              uint64_t v12 = v76;
LABEL_35:
              uint64_t v15 = v78;
              goto LABEL_44;
            }

            uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v17 assetType]);
            uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSpecifier]);
            -[MADAutoAssetStager _extendLookupByAssetType:fromSource:withAssetType:withAssetSpecifier:]( self,  "_extendLookupByAssetType:fromSource:withAssetType:withAssetSpecifier:",  v4,  @"DESCRIPTOR",  v25,  v26);

            uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            unsigned __int8 v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 oslog]);

            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
            {
              unsigned int v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
              id v30 = (__CFString *)objc_claimAutoreleasedReturnValue([v17 summary]);
              id v31 = (__CFString *)[v4 count];
              *(_DWORD *)buf = 138543874;
              uint64_t v84 = v29;
              __int16 v85 = 2112;
              id v86 = v30;
              __int16 v87 = 2048;
              id v88 = v31;
              _os_log_impl( &dword_0,  v28,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_extendLookupByAssetTypeWithDownloadedDescriptors} stage auto-asset (from downloaded [set target includes]) | autoAssetDescriptor:%@ | setConfig(by-asset-type):%ld",  buf,  0x20u);
            }

            uint64_t v12 = v76;
          }

          else
          {
            -[MADAutoAssetStager _extendLookupByAssetType:fromSource:withAssetType:withAssetSpecifier:]( self,  "_extendLookupByAssetType:fromSource:withAssetType:withAssetSpecifier:",  v4,  @"DESCRIPTOR",  v22,  v23);

            id v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            unsigned __int8 v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 oslog]);

            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
            {
              __int128 v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
              id v39 = (__CFString *)objc_claimAutoreleasedReturnValue([v17 summary]);
              __int16 v40 = (__CFString *)[v4 count];
              *(_DWORD *)buf = 138543874;
              uint64_t v84 = v38;
              __int16 v85 = 2112;
              id v86 = v39;
              __int16 v87 = 2048;
              id v88 = v40;
              _os_log_impl( &dword_0,  v28,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_extendLookupByAssetTypeWithDownloadedDescriptors} stage auto-asset (from downloaded [no set target]) | autoAssetDescriptor:%@ | setConfig(by-asset-type):%ld",  buf,  0x20u);

              uint64_t v12 = v76;
            }
          }

          if (!-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups")) {
            goto LABEL_35;
          }
          id v41 = v4;
          __int16 v42 = (void *)objc_claimAutoreleasedReturnValue([v17 assetType]);
          id v43 = (void *)objc_claimAutoreleasedReturnValue([v17 assetSpecifier]);
          id v44 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _setConfigurationForAssetType:forAssetSpecifier:]( self,  "_setConfigurationForAssetType:forAssetSpecifier:",  v42,  v43));

          uint64_t v15 = v78;
          int v75 = v44;
          if (v44)
          {
            if ((v77 & 1) != 0
              || (id v45 = (void *)objc_claimAutoreleasedReturnValue([v44 firstEntryAssetType]),
                  unsigned int v46 = -[MADAutoAssetStager isAssetType:representedInAssetDescriptors:]( self,  "isAssetType:representedInAssetDescriptors:",  v45,  v71),  v45,  v46))
            {
              uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( self,  "candidateSetConfigurationsRequiredByTarget"));
              id v48 = [v47 safeObjectForKey:v73 ofClass:objc_opt_class(NSMutableArray)];
              unsigned __int8 v49 = (void *)objc_claimAutoreleasedReturnValue(v48);

              [v49 addObject:v44];
              id v50 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( self,  "candidateSetConfigurationsRequiredByTarget"));
              [v50 setSafeObject:v49 forKey:v73];

              uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
              id v52 = (os_log_s *)objc_claimAutoreleasedReturnValue([v51 oslog]);

              id v14 = v74;
              if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
              {
                id v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
                if (v77) {
                  uint64_t v54 = &stru_355768;
                }
                else {
                  uint64_t v54 = @"OPTIONAL-JOINING-";
                }
                uint64_t v55 = (__CFString *)objc_claimAutoreleasedReturnValue([v17 summary]);
                *(_DWORD *)buf = 138543874;
                uint64_t v84 = v53;
                __int16 v85 = 2114;
                id v86 = v54;
                __int16 v87 = 2114;
                id v88 = v55;
                uint64_t v56 = v52;
                uint64_t v57 = "%{public}@\n"
                      "[AUTO-STAGER] {_extendLookupByAssetTypeWithDownloadedDescriptors} [BY-GROUP-MODE] [%{public}@REQUI"
                      "RED] | autoAssetDescriptor:%{public}@";
                uint32_t v58 = 32;
LABEL_41:
                _os_log_impl(&dword_0, v56, OS_LOG_TYPE_DEFAULT, v57, buf, v58);
              }
            }

            else
            {
              __int128 v67 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
              id v68 = [v67 safeObjectForKey:v73 ofClass:objc_opt_class(NSMutableArray)];
              unsigned __int8 v49 = (void *)objc_claimAutoreleasedReturnValue(v68);

              [v49 addObject:v44];
              __int16 v69 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
              [v69 setSafeObject:v49 forKey:v73];

              uint64_t v70 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
              id v52 = (os_log_s *)objc_claimAutoreleasedReturnValue([v70 oslog]);

              id v14 = v74;
              if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
              {
                id v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
                uint64_t v55 = (__CFString *)objc_claimAutoreleasedReturnValue([v17 summary]);
                *(_DWORD *)buf = 138543618;
                uint64_t v84 = v53;
                __int16 v85 = 2114;
                id v86 = v55;
                uint64_t v56 = v52;
                uint64_t v57 = "%{public}@\n"
                      "[AUTO-STAGER] {_extendLookupByAssetTypeWithDownloadedDescriptors} [BY-GROUP-MODE] [OPTIONAL] | aut"
                      "oAssetDescriptor:%{public}@";
                uint32_t v58 = 22;
                goto LABEL_41;
              }
            }

            id v4 = v72;
            uint64_t v15 = v78;
          }

          else
          {
            __int128 v64 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            unsigned __int8 v49 = (void *)objc_claimAutoreleasedReturnValue([v64 oslog]);

            if (os_log_type_enabled((os_log_t)v49, OS_LOG_TYPE_DEFAULT))
            {
              __int128 v65 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
              __int128 v66 = (__CFString *)objc_claimAutoreleasedReturnValue([v17 summary]);
              *(_DWORD *)buf = 138543618;
              uint64_t v84 = v65;
              __int16 v85 = 2114;
              id v86 = v66;
              _os_log_impl( &dword_0,  (os_log_t)v49,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_extendLookupByAssetTypeWithDownloadedDescriptors} [BY-GROUP-MODE] no set configuration f or asset-selector| autoAssetDescriptor:%{public}@",  buf,  0x16u);
            }

            id v4 = v41;
            id v14 = v74;
          }

          uint64_t v12 = v76;
          goto LABEL_44;
        }

        BOOL v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
        __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v32 oslog]);

        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          -[MADAutoAssetStager _extendLookupByAssetTypeWithDownloadedDescriptors:].cold.1((uint64_t)v89, (uint64_t)self);
        }
LABEL_44:

        objc_autoreleasePoolPop(v18);
        __int128 v16 = (char *)v16 + 1;
      }

      while (v14 != v16);
      id v14 = [v12 countByEnumeratingWithState:&v79 objects:v90 count:16];
    }

    while (v14);
  }
}

- (void)_extendLookupByAssetType:(id)a3 fromSource:(id)a4 withAssetType:(id)a5 withAssetSpecifier:(id)a6
{
}

- (void)_extendLookupByAssetType:(id)a3 fromSource:(id)a4 withAssetType:(id)a5 withAssetSpecifier:(id)a6 withDownloadDecryptionKey:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  __int128 v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  __int128 v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _setConfigurationForAssetType:forAssetSpecifier:]( self,  "_setConfigurationForAssetType:forAssetSpecifier:",  v14,  v15));
  id v20 = [v12 safeObjectForKey:v14 ofClass:objc_opt_class(MADAutoSetConfiguration)];
  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  if (!v21)
  {
    id v85 = v15;
    id v78 = v13;
    id v31 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v80 = v12;
    os_log_t log = (os_log_t)v31;
    id v83 = v19;
    if (v19)
    {
      uint64_t v32 = objc_claimAutoreleasedReturnValue([v19 assetSetEntryForAssetType:v14 forAssetSpecifier:v15]);
      if (v32)
      {
        uint64_t v33 = (void *)v32;
        -[NSMutableArray addObject:](v31, "addObject:", v32);
        id v34 = (__CFString *)objc_claimAutoreleasedReturnValue([v19 clientDomainName]);
        uint64_t v35 = objc_claimAutoreleasedReturnValue([v19 autoAssetSetClientName]);
        __int128 v36 = v19;
        id v37 = (__CFString *)v35;
        __int128 v38 = (NSString *)objc_claimAutoreleasedReturnValue([v36 assetSetIdentifier]);
        goto LABEL_14;
      }

      uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      uint64_t v51 = (os_log_s *)objc_claimAutoreleasedReturnValue([v55 oslog]);

      if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
      {
        uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
        uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue([v19 summary]);
        *(_DWORD *)buf = 138544386;
        __int16 v87 = v56;
        __int16 v88 = 2114;
        id v89 = v13;
        __int16 v90 = 2114;
        id v91 = v14;
        __int16 v92 = 2114;
        id v93 = v15;
        __int16 v94 = 2114;
        id v95 = v57;
        _os_log_error_impl( &dword_0,  v51,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {_extendLookupByAssetType} [%{public}@] unable to locate asset-set-entry | assetType:%{public}@ | assetSpecifier:%{public}@ | clientDefinedSetConfiguration:%{public}@",  buf,  0x34u);

LABEL_37:
      }
    }

    else
    {
      id v48 = -[MANAutoAssetSetEntry initForAssetType:withAssetSpecifier:usingDecryptionKey:]( objc_alloc(&OBJC_CLASS___MANAutoAssetSetEntry),  "initForAssetType:withAssetSpecifier:usingDecryptionKey:",  v14,  v15,  v16);
      if (v48)
      {
        uint64_t v33 = v48;
        -[NSMutableArray addObject:](v31, "addObject:", v48);
        __int128 v38 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@_%@",  @"AUTO_ASSET_STAGER_SET",  v14);
        id v34 = @"com.apple.MobileAsset.AutoAssetStager.client";
        id v37 = @"AUTO_ASSET_STAGER_AS_CLIENT";
LABEL_14:
        id v22 = 0LL;
        if (!v34 || !v37 || !v38) {
          goto LABEL_29;
        }
        if (!-[os_log_s count](log, "count"))
        {
          id v22 = 0LL;
          goto LABEL_29;
        }

        LOWORD(v76) = 257;
        id v22 = -[MADAutoSetConfiguration initForClientDomainName:forSetClientName:forAssetSetIdentifier:withAutoAssetEntries:withLatestAtomicInstanceToVend:inhibitingImpliedScheduling:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:]( objc_alloc(&OBJC_CLASS___MADAutoSetConfiguration),  "initForClientDomainName:forSetClientName:forAssetSetIdentifier:withAutoAssetEntries:withLatestAtomicInst anceToVend:inhibitingImpliedScheduling:havingReceivedLookupResponse:vendingAtomicInstanceForConfiguredEntries:",  v34,  v37,  v38,  log,  0LL,  1LL,  v76);
        [v80 setSafeObject:v22 forKey:v14];
        unsigned __int8 v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
        id v50 = (os_log_s *)objc_claimAutoreleasedReturnValue([v49 oslog]);

        uint64_t v51 = v50;
        if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
        {
          id v52 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
          id v53 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
          unsigned int v77 = v51;
          uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue([v33 summary]);
          *(_DWORD *)buf = 138544130;
          __int16 v87 = v52;
          __int16 v88 = 2114;
          id v89 = v78;
          __int16 v90 = 2114;
          id v91 = v53;
          __int16 v92 = 2114;
          id v93 = v54;
          _os_log_impl( &dword_0,  v77,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_extendLookupByAssetType} [%{public}@] new set-configuration for staging | setConfiguration:% {public}@ | assetSetEntry:%{public}@",  buf,  0x2Au);

          uint64_t v51 = v77;
        }

- (id)_trimConsideringToLatestDownloaded:(id)a3
{
  id v4 = a3;
  __int128 v59 = self;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = v4;
  uint64_t v8 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v70 = 0u;
  __int128 v71 = 0u;
  __int128 v72 = 0u;
  __int128 v73 = 0u;
  uint64_t v9 = (NSMutableArray *)v7;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  id v60 = v9;
  id v61 = v8;
  id v64 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v9,  "countByEnumeratingWithState:objects:count:",  &v70,  v81,  16LL);
  if (!v64) {
    goto LABEL_28;
  }
  uint64_t v63 = *(void *)v71;
  id v11 = &MobileAssetKeyManager__metaData.ivars;
  while (2)
  {
    for (uint64_t i = 0LL; i != v64; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v71 != v63) {
        objc_enumerationMutation(v9);
      }
      id v13 = *(void **)(*((void *)&v70 + 1) + 8LL * (void)i);
      id v14 = objc_autoreleasePoolPush();
      id v15 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v13 assetType]);
      __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSpecifier]);
      id v18 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]( v15,  "initForAssetType:withAssetSpecifier:",  v16,  v17);

      __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedEntryID]);
      id v20 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v8,  "safeObjectForKey:ofClass:",  v19,  objc_opt_class(p_ivars[223]));
      __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);

      if (!v21)
      {
        uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedEntryID]);
        -[NSMutableDictionary setSafeObject:forKey:](v8, "setSafeObject:forKey:", v13, v27);
LABEL_12:

        goto LABEL_13;
      }

      id v22 = v13;
      id v23 = v18;
      unsigned int v24 = p_ivars;
      uint64_t v25 = v9;
      context = v14;
      uint64_t v26 = v11[155];
      __int128 v62 = v22;
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v22 assetType]);
      unsigned __int8 v28 = (void *)objc_claimAutoreleasedReturnValue([v21 assetType]);
      if ((-[__objc2_ivar_list stringIsEqual:to:](v26, "stringIsEqual:to:", v27, v28) & 1) == 0)
      {

        id v14 = context;
        uint64_t v9 = v25;
        p_ivars = v24;
        id v18 = v23;
        goto LABEL_12;
      }

      unsigned int v29 = v11[155];
      id v30 = (void *)objc_claimAutoreleasedReturnValue([v62 assetSpecifier]);
      id v31 = (void *)objc_claimAutoreleasedReturnValue([v21 assetSpecifier]);
      LODWORD(v29) = -[__objc2_ivar_list stringIsEqual:to:](v29, "stringIsEqual:to:", v30, v31);

      uint64_t v9 = v60;
      uint64_t v8 = v61;

      id v14 = context;
      p_ivars = v24;
      id v18 = v23;
      if ((_DWORD)v29)
      {
        id v32 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
        uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v62 assetVersion]);
        id v34 = [v32 initWithRestoreVersion:v33];

        id v35 = objc_alloc(&OBJC_CLASS___SUCoreRestoreVersion);
        __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v21 assetVersion]);
        id v37 = [v35 initWithRestoreVersion:v36];

        if ([v34 isComparable:v37])
        {
          id v39 = (char *)[v34 compare:v37];
          __int16 v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v59, "logger"));
          id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue([v40 oslog]);

          BOOL v42 = os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT);
          if (v39 == (_BYTE *)&dword_0 + 1)
          {
            if (v42)
            {
              id v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v59, "summary"));
              id v44 = (void *)objc_claimAutoreleasedReturnValue([v62 summary]);
              *(_DWORD *)buf = 138543618;
              uint64_t v76 = v43;
              __int16 v77 = 2114;
              id v78 = v44;
              _os_log_impl( &dword_0,  v41,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_trimConsideringToLatestDownloaded} best candidate so far | descriptor:%{public}@",  buf,  0x16u);
            }

            id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 persistedEntryID]);
            uint64_t v8 = v61;
            -[NSMutableDictionary setSafeObject:forKey:](v61, "setSafeObject:forKey:", v62, v41);
            goto LABEL_27;
          }

          if (v42)
          {
            unsigned int v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v59, "summary"));
            uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue([v62 summary]);
            *(_DWORD *)buf = 138543618;
            uint64_t v76 = v46;
            __int16 v77 = 2114;
            id v78 = v47;
            _os_log_impl( &dword_0,  v41,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[AUTO-STAGER] {_trimConsideringToLatestDownloaded} not newer version | descriptor:%{public}@",  buf,  0x16u);
            goto LABEL_25;
          }
        }

        else
        {
          id v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v59, "logger"));
          id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue([v45 oslog]);

          if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
          {
            unsigned int v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v59, "summary"));
            uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue([v62 summary]);
            id v48 = v34;
            unsigned __int8 v49 = (void *)objc_claimAutoreleasedReturnValue([v21 summary]);
            *(_DWORD *)buf = 138543874;
            uint64_t v76 = v46;
            __int16 v77 = 2114;
            id v78 = v47;
            __int16 v79 = 2112;
            __int128 v80 = v49;
            _os_log_impl( &dword_0,  v41,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_trimConsideringToLatestDownloaded} versions not comparable (keeping already encountered) | descriptor:%{public}@, already:%@",  buf,  0x20u);

            id v34 = v48;
LABEL_25:
          }
        }

        uint64_t v8 = v61;
LABEL_27:
        uint64_t v9 = v60;

        objc_autoreleasePoolPop(context);
        goto LABEL_28;
      }

- (id)_setTargetForAssetType:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v19 = self;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setConfigurations](self, "setConfigurations"));
  id v8 = [v7 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v21;
    while (2)
    {
      id v11 = 0LL;
      do
      {
        if (*(void *)v21 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*((void *)&v20 + 1) + 8LL * (void)v11);
        id v13 = objc_autoreleasePoolPush();
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v12 firstEntryAssetType]);
        unsigned int v15 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v14, v4);

        if (v15)
        {
          uint64_t v16 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _setTargetForSetConfiguration:](v19, "_setTargetForSetConfiguration:", v12));
          if (v16)
          {
            __int128 v17 = (void *)v16;
            objc_autoreleasePoolPop(v13);
            goto LABEL_12;
          }
        }

        objc_autoreleasePoolPop(v13);
        id v11 = (char *)v11 + 1;
      }

      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v20 objects:v24 count:16];
      if (v9) {
        continue;
      }
      break;
    }
  }

  __int128 v17 = 0LL;
LABEL_12:

  return v17;
}

- (id)_setConfigurationForAssetType:(id)a3 forAssetSpecifier:(id)a4
{
  id v6 = a3;
  id v36 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setConfigurations](self, "setConfigurations"));
  id v10 = [v9 countByEnumeratingWithState:&v40 objects:v52 count:16];
  if (v10)
  {
    id v12 = v10;
    char v37 = 0;
    id v38 = 0LL;
    uint64_t v39 = *(void *)v41;
    *(void *)&__int128 v11 = 138544130LL;
    __int128 v33 = v11;
    id v34 = v6;
    id v35 = v9;
    id v13 = v36;
    while (1)
    {
      for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v41 != v39) {
          objc_enumerationMutation(v9);
        }
        unsigned int v15 = *(void **)(*((void *)&v40 + 1) + 8LL * (void)i);
        uint64_t v16 = objc_autoreleasePoolPush();
        __int128 v17 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _setTargetForSetConfiguration:]( self,  "_setTargetForSetConfiguration:",  v15));
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSetEntryForAssetType:v6 forAssetSpecifier:v13]);
        if (v18
          && !-[MADAutoAssetStager _isAssetSetEntry:blockedBySetTarget:]( self,  "_isAssetSetEntry:blockedBySetTarget:",  v18,  v17))
        {
          if (!v38)
          {
            id v38 = v15;
            goto LABEL_25;
          }

          if ((v37 & 1) != 0)
          {
            char v37 = 1;
            if (!v17)
            {
LABEL_24:
              id v9 = v35;
              goto LABEL_25;
            }
          }

          else
          {
            __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 assetSelector]);
            __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v19 downloadDecryptionKey]);

            if (v20)
            {
              id v21 = v15;

              char v37 = 1;
              id v38 = v21;
            }

            else
            {
              char v37 = 0;
            }

            id v13 = v36;
            if (!v17) {
              goto LABEL_24;
            }
          }

          __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "assetSetEntryForAssetType:forAssetSpecifier:", v6, v13, v33));
          __int128 v23 = v22;
          if (v22)
          {
            unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue([v22 assetSelector]);
            uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v24 downloadDecryptionKey]);

            if (v25)
            {
              id v31 = v15;

              objc_autoreleasePoolPop(v16);
              id v38 = v31;
              id v6 = v34;
              id v9 = v35;
              goto LABEL_29;
            }
          }

          else
          {
            uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 oslog]);

            if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
            {
              unsigned __int8 v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
              uint64_t v29 = objc_claimAutoreleasedReturnValue([v17 summary]);
              *(_DWORD *)buf = v33;
              id v45 = v28;
              __int16 v46 = 2114;
              id v47 = v6;
              __int16 v48 = 2114;
              id v49 = v36;
              __int16 v50 = 2114;
              uint64_t v51 = v29;
              id v30 = (void *)v29;
              _os_log_error_impl( &dword_0,  v27,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {_setConfigurationForAssetDescriptor} unable to locate set-target entry when set-target al lows entry | assetType:%{public}@ | assetSpecifier:%{public}@ | setTarget:%{public}@",  buf,  0x2Au);
            }
          }

          id v6 = v34;
          id v13 = v36;
          goto LABEL_24;
        }

- (BOOL)_isAssetSetEntry:(id)a3 blockedBySetTarget:(id)a4
{
  if (!a4) {
    return 0;
  }
  id v5 = a4;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSelector]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 assetType]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 assetSelector]);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSpecifier]);
  __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v5 assetSetEntryForAssetType:v8 forAssetSpecifier:v10]);

  BOOL v12 = v11 == 0LL;
  return v12;
}

- (id)_setTargetForSetConfiguration:(id)a3
{
  id v24 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v22 = self;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setTargets](self, "setTargets"));
  id v6 = [obj countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (!v6) {
    goto LABEL_14;
  }
  id v7 = v6;
  uint64_t v8 = *(void *)v26;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  do
  {
    for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v26 != v8) {
        objc_enumerationMutation(obj);
      }
      __int128 v11 = *(void **)(*((void *)&v25 + 1) + 8LL * (void)i);
      BOOL v12 = p_ivars[155];
      id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 clientDomainName]);
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v24 clientDomainName]);
      unsigned int v15 = p_ivars;
      uint64_t v16 = p_ivars[155];
      __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSetIdentifier]);
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v24 assetSetIdentifier]);
      if (!-[__objc2_ivar_list stringIsEqual:to:](v16, "stringIsEqual:to:", v17, v18))
      {

        p_ivars = v15;
LABEL_11:

        continue;
      }

      unsigned int v19 = -[MADAutoAssetStager _isSetTargetWithinRange:asCandidate:]( v22,  "_isSetTargetWithinRange:asCandidate:",  v11,  1LL);

      p_ivars = v15;
      if (v19)
      {
        id v20 = v11;
        goto LABEL_15;
      }
    }

    id v7 = [obj countByEnumeratingWithState:&v25 objects:v29 count:16];
  }

  while (v7);
LABEL_14:
  id v20 = 0LL;
LABEL_15:

  return v20;
}

- (BOOL)_isSetConfigurationApplicableToRequired:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a3 firstEntryAssetType]);
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidatesForStaging](self, "candidatesForStaging", 0LL));
  id v6 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v6)
  {
    uint64_t v7 = *(void *)v14;
    do
    {
      for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v7) {
          objc_enumerationMutation(v5);
        }
        id v9 = *(void **)(*((void *)&v13 + 1) + 8LL * (void)i);
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);
        if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v4, v10))
        {
          unsigned __int8 v11 = [v9 isPreSUStagingRequired];

          if ((v11 & 1) != 0)
          {
            LOBYTE(v6) = 1;
            goto LABEL_12;
          }
        }

        else
        {
        }
      }

      id v6 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }

    while (v6);
  }

- (void)lookupCacheUpdateWithDetermineResult:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  uint64_t v7 = (NSString *)a4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  v107 = v7;
  id v10 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:lookupCacheUpdateWithDetermineResult",  v7);
  unsigned __int8 v11 = (void *)objc_claimAutoreleasedReturnValue([v6 autoAssetCatalog]);
  v106 = v6;
  uint64_t v12 = objc_claimAutoreleasedReturnValue([v6 baseForStagingDescriptors]);
  __int128 v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeSetJobConfiguration](self, "activeSetJobConfiguration"));
  uint64_t v14 = objc_claimAutoreleasedReturnValue([v13 firstEntryAssetType]);

  uint64_t v15 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive:](self, "_targetNameActive:", @"LOOKUP"));
  unsigned int v110 = +[MADAutoAssetControlManager preferenceStagingLookupFlipRequiredOptional]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceStagingLookupFlipRequiredOptional");
  id v108 = (__CFString *)v14;
  uint64_t v105 = (void *)v12;
  uint64_t v109 = (__CFString *)v15;
  if (!v14)
  {
    uint64_t v18 = v15;
    unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 diag]);
    id v21 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeSetJobConfiguration](self, "activeSetJobConfiguration"));
    __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
    id v24 = -[NSString initWithFormat:]( v21,  "initWithFormat:",  @"[%@] {%@} active-set-job set-configuration without assetType | activeSetJobConfiguration:%@",  v18,  v10,  v23);
LABEL_7:
    __int128 v26 = v24;
    [v20 trackAnomaly:@"AUTO-STAGER" forReason:v24 withResult:6111 withError:0];

    goto LABEL_63;
  }

  if (!v11)
  {
    unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 diag]);
    __int128 v25 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeSetJobConfiguration](self, "activeSetJobConfiguration"));
    __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v22 summary]);
    id v24 = -[NSString initWithFormat:]( v25,  "initWithFormat:",  @"[%@] {%@} active-set-job without catalog lookup results | activeSetJobConfiguration:%@",  v109,  v10,  v23);
    goto LABEL_7;
  }

  __int128 v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setLookupResults](self, "setLookupResults"));
  [v16 setSafeObject:v11 forKey:v14];

  if (v12)
  {
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager baseForStagingDescriptors](self, "baseForStagingDescriptors"));
    [v17 addObjectsFromArray:v12];
  }

  else
  {
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v17 diag]);
    __int128 v28 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeSetJobConfiguration](self, "activeSetJobConfiguration"));
    id v30 = (void *)objc_claimAutoreleasedReturnValue([v29 summary]);
    id v31 = -[NSString initWithFormat:]( v28,  "initWithFormat:",  @"[%@] {%@} active-set-job without base for staging descriptors | activeSetJobConfiguration:%@",  v109,  v10,  v30);
    [v27 trackAnomaly:@"AUTO-STAGER" forReason:v31 withResult:6111 withError:0];
  }

  id v32 = -[MADAutoAssetStager newSetLookupResult:forSetCatalog:](self, "newSetLookupResult:forSetCatalog:", v108, v11);
  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups")) {
    -[MADAutoAssetStager _lookupCachePersistResultByGroup:fromLocation:]( self,  "_lookupCachePersistResultByGroup:fromLocation:",  v32,  v10);
  }
  else {
    -[MADAutoAssetStager _lookupCachePersistResult:fromLocation:]( self,  "_lookupCachePersistResult:fromLocation:",  v32,  v10);
  }
  __int128 v132 = 0u;
  __int128 v133 = 0u;
  __int128 v130 = 0u;
  __int128 v131 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([v32 discoveredAtomicEntries]);
  id v120 = [obj countByEnumeratingWithState:&v130 objects:v147 count:16];
  if (v120)
  {
    uint64_t v118 = *(void *)v131;
    uint64_t v112 = v10;
    __int128 v113 = self;
    id v111 = v11;
    id v119 = v32;
    do
    {
      id v33 = 0LL;
      do
      {
        if (*(void *)v131 != v118) {
          objc_enumerationMutation(obj);
        }
        uint64_t v121 = (char *)v33;
        id v34 = *(void **)(*((void *)&v130 + 1) + 8LL * (void)v33);
        id v35 = (void *)objc_claimAutoreleasedReturnValue([v34 fullAssetSelector]);
        id v36 = (void *)objc_claimAutoreleasedReturnValue([v35 assetType]);
        char v37 = (void *)objc_claimAutoreleasedReturnValue([v34 fullAssetSelector]);
        id v38 = (void *)objc_claimAutoreleasedReturnValue([v37 assetSpecifier]);
        uint64_t v39 = objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager assetMetadataFromAssetCatalog:forAssetype:forAssetSpecifier:preferringBestFormat:]( self,  "assetMetadataFromAssetCatalog:forAssetype:forAssetSpecifier:preferringBestFormat:",  v11,  v36,  v38,  1LL));

        __int128 v122 = (void *)v39;
        if (!v39)
        {
          __int16 v50 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
          uint64_t v51 = (os_log_s *)objc_claimAutoreleasedReturnValue([v50 oslog]);

          if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
          {
            id v96 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            id v97 = v51;
            id v98 = (__CFString *)objc_claimAutoreleasedReturnValue([v34 summary]);
            id v32 = v119;
            uint64_t v99 = (__CFString *)objc_claimAutoreleasedReturnValue([v119 summary]);
            *(_DWORD *)buf = 138544386;
            __int128 v136 = v96;
            __int16 v137 = 2114;
            __int128 v138 = v109;
            __int16 v139 = 2114;
            __int128 v140 = v10;
            __int16 v141 = 2114;
            __int128 v142 = v98;
            __int16 v143 = 2114;
            uint64_t v144 = v99;
            _os_log_error_impl( &dword_0,  v97,  OS_LOG_TYPE_ERROR,  "%{public}@\n [%{public}@] {%{public}@} unable to locate asset metadata | nextSetEntry:%{public}@ | promotionSetConfigur ation:%{public}@",  buf,  0x34u);

            uint64_t v51 = v97;
          }

          else
          {
            id v32 = v119;
          }

          id v52 = v121;
          goto LABEL_56;
        }

        __int128 v40 = objc_alloc(&OBJC_CLASS___MADAutoAssetDescriptor);
        __int128 v41 = (void *)objc_claimAutoreleasedReturnValue([v34 fullAssetSelector]);
        __int128 v42 = (void *)objc_claimAutoreleasedReturnValue([v41 assetType]);
        id v129 = 0LL;
        id v43 = -[MADAutoAssetDescriptor initForAssetType:fromMetadata:invalidReasons:]( v40,  "initForAssetType:fromMetadata:invalidReasons:",  v42,  v39,  &v129);
        id v44 = (os_log_s *)v129;

        id v45 = v43;
        if (!v43)
        {
          id v53 = 0LL;
          uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
          uint64_t v55 = (os_log_s *)objc_claimAutoreleasedReturnValue([v54 oslog]);

          id v56 = v55;
          BOOL v57 = os_log_type_enabled(v55, OS_LOG_TYPE_ERROR);
          uint64_t v51 = v44;
          if (v44)
          {
            if (v57)
            {
              uint32_t v58 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
              id v117 = v51;
              __int128 v59 = (__CFString *)objc_claimAutoreleasedReturnValue([v34 summary]);
              id v32 = v119;
              id v60 = (__CFString *)objc_claimAutoreleasedReturnValue([v119 summary]);
              *(_DWORD *)buf = 138544642;
              __int128 v136 = v58;
              __int16 v137 = 2114;
              __int128 v138 = v109;
              __int16 v139 = 2114;
              __int128 v140 = v10;
              __int16 v141 = 2114;
              __int128 v142 = (const __CFString *)v117;
              __int16 v143 = 2114;
              uint64_t v144 = v59;
              __int16 v145 = 2114;
              __int128 v146 = v60;
              id v61 = v56;
              __int128 v62 = v56;
              uint64_t v63 = "%{public}@\n"
                    "[%{public}@] {%{public}@} failed to allocate availableDescriptor | %{public}@ | nextSetEntry:%{publi"
                    "c}@ | promotionSetConfiguration:%{public}@";
              uint32_t v64 = 62;
LABEL_60:
              _os_log_error_impl(&dword_0, v62, OS_LOG_TYPE_ERROR, v63, buf, v64);

              uint64_t v51 = v117;
              id v52 = v121;
              goto LABEL_55;
            }
          }

          else if (v57)
          {
            uint32_t v58 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            id v117 = 0LL;
            __int128 v59 = (__CFString *)objc_claimAutoreleasedReturnValue([v34 summary]);
            id v32 = v119;
            id v60 = (__CFString *)objc_claimAutoreleasedReturnValue([v119 summary]);
            *(_DWORD *)buf = 138544386;
            __int128 v136 = v58;
            __int16 v137 = 2114;
            __int128 v138 = v109;
            __int16 v139 = 2114;
            __int128 v140 = v10;
            __int16 v141 = 2114;
            __int128 v142 = v59;
            __int16 v143 = 2114;
            uint64_t v144 = v60;
            id v61 = v56;
            __int128 v62 = v56;
            uint64_t v63 = "%{public}@\n"
                  "[%{public}@] {%{public}@} failed to allocate availableDescriptor | nextSetEntry:%{public}@ | promotion"
                  "SetConfiguration:%{public}@";
            uint32_t v64 = 52;
            goto LABEL_60;
          }

          id v32 = v119;
          id v52 = v121;
          id v61 = v56;
          goto LABEL_55;
        }

        __int128 v116 = v44;
        unsigned int v46 = -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups");
        id v47 = @"ALL";
        p_ivars = &MobileAssetKeyManager__metaData.ivars;
        if (v46)
        {
          else {
            uint64_t v49 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveRequired](self, "_targetNameActiveRequired"));
          }
          id v47 = (const __CFString *)v49;
        }

        __int128 v115 = v47;
        __int128 v127 = 0u;
        __int128 v128 = 0u;
        __int128 v125 = 0u;
        __int128 v126 = 0u;
        id v124 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager alreadyDownloadedDescriptors](self, "alreadyDownloadedDescriptors"));
        id v65 = [v124 countByEnumeratingWithState:&v125 objects:v134 count:16];
        if (!v65) {
          goto LABEL_43;
        }
        id v66 = v65;
        uint64_t v67 = *(void *)v126;
        while (2)
        {
          __int128 v68 = 0LL;
          id v123 = v66;
          do
          {
            if (*(void *)v126 != v67) {
              objc_enumerationMutation(v124);
            }
            __int128 v69 = *(void **)(*((void *)&v125 + 1) + 8LL * (void)v68);
            __int128 v70 = p_ivars[155];
            __int128 v71 = (void *)objc_claimAutoreleasedReturnValue([v45 assetType]);
            __int128 v72 = (void *)objc_claimAutoreleasedReturnValue([v69 assetType]);
            uint64_t v73 = v67;
            id v74 = p_ivars[155];
            int v75 = v45;
            uint64_t v76 = (void *)objc_claimAutoreleasedReturnValue([v45 assetSpecifier]);
            __int16 v77 = (void *)objc_claimAutoreleasedReturnValue([v69 assetSpecifier]);
            if (!-[__objc2_ivar_list stringIsEqual:to:](v74, "stringIsEqual:to:", v76, v77))
            {

              id v45 = v75;
              uint64_t v67 = v73;
              id v66 = v123;
LABEL_40:

              goto LABEL_41;
            }

            id v78 = p_ivars[155];
            __int16 v79 = (void *)objc_claimAutoreleasedReturnValue([v75 assetVersion]);
            __int128 v80 = (void *)objc_claimAutoreleasedReturnValue([v69 assetVersion]);
            LOBYTE(v78) = -[__objc2_ivar_list stringIsEqual:to:](v78, "stringIsEqual:to:", v79, v80);

            p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
            id v45 = v75;
            uint64_t v67 = v73;
            id v66 = v123;
            if ((v78 & 1) != 0)
            {
              id v53 = v45;

              self = v113;
              __int16 v87 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v113, "logger"));
              __int16 v88 = (os_log_s *)objc_claimAutoreleasedReturnValue([v87 oslog]);

              BOOL v89 = os_log_type_enabled(v88, OS_LOG_TYPE_DEFAULT);
              id v10 = v112;
              id v61 = (void *)v115;
              if (v89)
              {
                __int16 v90 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v113, "summary"));
                id v91 = (__CFString *)objc_claimAutoreleasedReturnValue([v53 summary]);
                *(_DWORD *)buf = 138544130;
                __int128 v136 = v90;
                __int16 v137 = 2114;
                __int128 v138 = v115;
                __int16 v139 = 2114;
                __int128 v140 = v112;
                __int16 v141 = 2114;
                __int128 v142 = v91;
                _os_log_impl( &dword_0,  v88,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[%{public}@] {%{public}@} located already-downloaded descriptor:%{public}@",  buf,  0x2Au);
              }

              goto LABEL_48;
            }

- (void)_lookupCachePersistResultByGroup:(id)a3 fromLocation:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  unsigned __int8 v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v10,  v11));

  __int128 v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager targetLookupResults](self, "targetLookupResults"));
  id v14 = [v13 safeObjectForKey:v12 ofClass:objc_opt_class(MADAutoTargetLookupResults)];
  id v15 = (id)objc_claimAutoreleasedReturnValue(v14);

  if (!v15)
  {
    __int128 v16 = objc_alloc(&OBJC_CLASS___MADAutoTargetLookupResults);
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
    unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetGroupNames](self, "assetTargetGroupNames"));
    id v15 = -[MADAutoTargetLookupResults initForTargetOSVersion:forTargetBuild:forTargetTrainName:forTargetRestoreVersion:targetingGroupNames:]( v16,  "initForTargetOSVersion:forTargetBuild:forTargetTrainName:forTargetRestoreVersion:targetingGroupNames:",  v17,  v18,  v19,  v20,  v21);
  }

  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v15 setLookupResults]);
  __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v7 assetType]);
  [v22 setSafeObject:v7 forKey:v23];

  id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager targetLookupResults](self, "targetLookupResults"));
  [v24 setSafeObject:v15 forKey:v12];

  __int128 v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedTargetLookupResults](self, "persistedTargetLookupResults"));
  __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v25 persistedEntry:v12 fromLocation:v6]);

  if (v26)
  {
    [v26 persistSecureCodedObject:v15 forKey:@"targetLookupResults"];
    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedTargetLookupResults](self, "persistedTargetLookupResults"));
    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
    [v27 storePersistedEntry:v12 withEntrySummary:v28 fromLocation:v6];

    uint64_t v29 = objc_alloc(&OBJC_CLASS___NSString);
    id v30 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
    id v31 = -[NSString initWithFormat:]( v29,  "initWithFormat:",  @"target-lookup-results describing Pallas atomicity | trainTargetLookupResults:%@",  v30);
    -[MADAutoAssetStager _logPersistedTargetLookupResults:operation:forPersistedEntryID:withTargetLookupResults:message:]( self,  "_logPersistedTargetLookupResults:operation:forPersistedEntryID:withTargetLookupResults:message:",  v6,  @"ENTRY_ADD",  v12,  v15,  v31);
  }

  else
  {
    id v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v33 = (os_log_s *)objc_claimAutoreleasedReturnValue([v32 oslog]);

    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
    {
      id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      *(_DWORD *)buf = 138543874;
      id v36 = v34;
      __int16 v37 = 2114;
      id v38 = v6;
      __int16 v39 = 2114;
      __int128 v40 = v12;
      _os_log_error_impl( &dword_0,  v33,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {%{public}@:_lookupCachePersistResultByGroup} unable to load persisted set-lookup-result file | ta rgetLookupResultsKey:%{public}@",  buf,  0x20u);
    }
  }
}

- (void)_lookupCachePersistResult:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
  unsigned __int8 v11 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v10 persistedEntry:v11 fromLocation:v7]);

  if (v12)
  {
    [v12 persistSecureCodedObject:v6 forKey:@"setLookupResult"];
    __int128 v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v6 assetType]);
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    [v13 storePersistedEntry:v14 withEntrySummary:v15 fromLocation:v7];

    __int128 v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 assetType]);
    __int128 v17 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    unsigned int v19 = -[NSString initWithFormat:]( v17,  "initWithFormat:",  @"set-lookup-result describing Pallas atomicity | setLookupResult:%@",  v18);
    -[MADAutoAssetStager _logPersistedSetLookupResult:operation:forPersistedEntryID:withSetLookupResult:message:]( self,  "_logPersistedSetLookupResult:operation:forPersistedEntryID:withSetLookupResult:message:",  v7,  @"ENTRY_ADD",  v16,  v6,  v19);
  }

  else
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    __int128 v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
      *(_DWORD *)buf = 138543874;
      id v24 = v21;
      __int16 v25 = 2114;
      id v26 = v7;
      __int16 v27 = 2114;
      __int128 v28 = v22;
      _os_log_error_impl( &dword_0,  v16,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {%{public}@:_lookupCachePersistResult} unable to load persisted set-lookup-result file | setLookup Result:%{public}@",  buf,  0x20u);
    }
  }
}

- (BOOL)doesStagingInvolveRequired
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetGroupNames](self, "assetTargetGroupNames", 0LL));
  id v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v13;
    while (2)
    {
      for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  *(void *)(*((void *)&v12 + 1) + 8LL * (void)i),  @"STAGE_GROUP_REQUIRED") & 1) != 0)
        {
          BOOL v10 = 1;
          goto LABEL_11;
        }
      }

      id v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }

  BOOL v10 = 0;
LABEL_11:

  return v10;
}

- (BOOL)doesStagingInvolveOptional
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetGroupNames](self, "assetTargetGroupNames", 0LL));
  id v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v13;
    while (2)
    {
      for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        if (!+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  *(void *)(*((void *)&v12 + 1) + 8LL * (void)i),  @"STAGE_GROUP_REQUIRED"))
        {
          BOOL v10 = 1;
          goto LABEL_11;
        }
      }

      id v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }

  BOOL v10 = 0;
LABEL_11:

  return v10;
}

- (void)startMaxTimeSpentDeterminingTimer
{
}

void __55__MADAutoAssetStager_startMaxTimeSpentDeterminingTimer__block_invoke(uint64_t a1)
{
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
  id v3 = -[MADAutoAssetStagerParam initWithTimerUUID:]( objc_alloc(&OBJC_CLASS___MADAutoAssetStagerParam),  "initWithTimerUUID:",  *(void *)(a1 + 32));
  [v2 postEvent:@"TimeoutDetermining" withInfo:v3];
}

- (id)splitOutAvailableForStagingByGroup:(id)a3
{
  id v45 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  unsigned __int8 v42 = -[MADAutoAssetStager doesStagingInvolveRequired](self, "doesStagingInvolveRequired");
  unsigned int v41 = -[MADAutoAssetStager doesStagingInvolveOptional](self, "doesStagingInvolveOptional");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  __int16 v39 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v6,  v7));

  id v47 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  unsigned int v46 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v44 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  unsigned int v8 = +[MADAutoAssetControlManager preferenceStagingLookupFlipRequiredOptional]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferenceStagingLookupFlipRequiredOptional");
  id v9 = &stru_355768;
  if (v8) {
    id v9 = @"FLIPPED-TO-";
  }
  id v43 = v9;
  __int128 v48 = 0u;
  __int128 v49 = 0u;
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
  id v11 = [v10 countByEnumeratingWithState:&v48 objects:v60 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v49;
    __int128 v40 = self;
    do
    {
      for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v49 != v13) {
          objc_enumerationMutation(v10);
        }
        __int128 v15 = *(void **)(*((void *)&v48 + 1) + 8LL * (void)i);
        if (v15)
        {
          if (v8 == [*(id *)(*((void *)&v48 + 1) + 8 * (void)i) isPreSUStagingRequired])
          {
            -[NSMutableArray addObject:](v46, "addObject:", v15);
            id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
            {
              __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
              __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
              *(_DWORD *)buf = 138544130;
              id v53 = v22;
              __int16 v54 = 2114;
              id v55 = v45;
              __int16 v56 = 2114;
              BOOL v57 = v43;
              __int16 v58 = 2114;
              id v59 = v23;
              _os_log_impl( &dword_0,  v21,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[AUTO-STAGER] {%{public}@} [%{public}@OPTIONAL] | nextAvailableDescirptor:%{public}@",  buf,  0x2Au);

              self = v40;
            }

            if (v41)
            {
LABEL_17:
              -[NSMutableArray addObject:](v44, "addObject:", v15);
              continue;
            }
          }

          else
          {
            -[NSMutableArray addObject:](v47, "addObject:", v15);
            __int128 v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            __int128 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 oslog]);

            if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
              unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
              *(_DWORD *)buf = 138544130;
              id v53 = v18;
              __int16 v54 = 2114;
              id v55 = v45;
              __int16 v56 = 2114;
              BOOL v57 = v43;
              __int16 v58 = 2114;
              id v59 = v19;
              _os_log_impl( &dword_0,  v17,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[AUTO-STAGER] {%{public}@} [%{public}@REQUIRED] | nextAvailableDescirptor:%{public}@",  buf,  0x2Au);

              self = v40;
            }

            if ((v42 & 1) != 0) {
              goto LABEL_17;
            }
          }
        }
      }

      id v12 = [v10 countByEnumeratingWithState:&v48 objects:v60 count:16];
    }

    while (v12);
  }

  id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingRequiredByTarget](self, "availableForStagingRequiredByTarget"));
  [v24 setSafeObject:v47 forKey:v39];

  __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingOptionalByTarget](self, "availableForStagingOptionalByTarget"));
  [v25 setSafeObject:v46 forKey:v39];

  id v26 = objc_alloc(&OBJC_CLASS___MADAutoAvailableForStaging);
  __int16 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v31 = -[MADAutoAvailableForStaging initForTargetOSVersion:forTargetBuild:forTargetTrainName:forTargetRestoreVersion:withRequiredDescriptors:withOptionalDescriptors:]( v26,  "initForTargetOSVersion:forTargetBuild:forTargetTrainName:forTargetRestoreVersion:withRequiredDescriptors:withO ptionalDescriptors:",  v27,  v28,  v29,  v30,  v47,  v46);

  if (v31)
  {
    id v32 = v45;
    -[MADAutoAssetStager storeAvailableForStaging:fromLocation:]( self,  "storeAvailableForStaging:fromLocation:",  v31,  v45);
  }

  else
  {
    id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

    id v32 = v45;
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
    {
      id v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      __int16 v37 = (__CFString *)-[NSMutableArray count](v47, "count");
      id v38 = -[NSMutableArray count](v46, "count");
      *(_DWORD *)buf = 138544130;
      id v53 = v36;
      __int16 v54 = 2114;
      id v55 = v45;
      __int16 v56 = 2048;
      BOOL v57 = v37;
      __int16 v58 = 2048;
      id v59 = v38;
      _os_log_error_impl( &dword_0,  v34,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {%{public}@} [BY-GROP-MODE] | unable to allocate storedAvailableForStaging (dropped) | availableFo rStagingRequiredByTarget:%ld | availableForStagingOptionalByTarget:%ld",  buf,  0x2Au);
    }
  }

  return v44;
}

- (BOOL)isAnyAvailableForStagingByGroup:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName", a3));
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v4,  v5));

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingRequiredByTarget](self, "availableForStagingRequiredByTarget"));
  id v8 = [v7 safeObjectForKey:v6 ofClass:objc_opt_class(NSMutableArray)];
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingOptionalByTarget](self, "availableForStagingOptionalByTarget"));
  id v11 = [v10 safeObjectForKey:v6 ofClass:objc_opt_class(NSMutableArray)];
  id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  BOOL v13 = [v9 count] || objc_msgSend(v12, "count");
  return v13;
}

- (void)addToAvailableForStaging:(id)a3
{
  id v4 = a3;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
  id v25 = [v5 countByEnumeratingWithState:&v26 objects:v34 count:16];
  if (v25)
  {
    uint64_t v6 = *(void *)v27;
    __int128 v23 = v5;
    uint64_t v24 = *(void *)v27;
LABEL_3:
    uint64_t v7 = 0LL;
    while (1)
    {
      if (*(void *)v27 != v6) {
        objc_enumerationMutation(v5);
      }
      id v8 = *(void **)(*((void *)&v26 + 1) + 8 * v7);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v4 assetType]);
      BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v8 assetType]);
      if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v9, v10))
      {
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSpecifier]);
        id v12 = v4;
        BOOL v13 = (void *)objc_claimAutoreleasedReturnValue([v8 assetSpecifier]);
        if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v11, v13))
        {
          __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([v12 assetVersion]);
          __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v8 assetVersion]);
          unsigned int v16 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v14, v15);

          id v5 = v23;
          id v4 = v12;
          uint64_t v6 = v24;
          if (v16)
          {
            uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            unsigned int v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

            if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
            {
              id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
              __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v4 summary]);
              *(_DWORD *)buf = 138543618;
              id v31 = v21;
              __int16 v32 = 2114;
              id v33 = v22;
              _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {addToAvailableForStaging} | ignoring additional entry for descriptor:%{public}@",  buf,  0x16u);
            }

            __int128 v17 = v23;
            goto LABEL_18;
          }

          goto LABEL_12;
        }

        id v4 = v12;
        uint64_t v6 = v24;
      }

LABEL_12:
      if (v25 == (id)++v7)
      {
        id v25 = [v5 countByEnumeratingWithState:&v26 objects:v34 count:16];
        if (v25) {
          goto LABEL_3;
        }
        break;
      }
    }
  }

  __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](self, "availableForStaging"));
  [v17 addObject:v4];
LABEL_18:
}

- (void)storeAvailableForStaging:(id)a3 fromLocation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v6 targetTrainName]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 targetRestoreVersion]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:",  v10,  v11));

  BOOL v13 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager persistedAvailableForStagingByTarget]( self,  "persistedAvailableForStagingByTarget"));
  __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([v13 persistedEntry:v12 fromLocation:v7]);

  __int128 v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameAvailableForStaging:](self, "_targetNameAvailableForStaging:", v6));
  if (v14)
  {
    [v14 persistSecureCodedObject:v6 forKey:@"AvailableForStagingByTarget"];
    unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager persistedAvailableForStagingByTarget]( self,  "persistedAvailableForStagingByTarget"));
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    [v16 storePersistedEntry:v12 withEntrySummary:v17 fromLocation:v7];

    uint64_t v18 = objc_alloc(&OBJC_CLASS___NSString);
    unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
    id v20 = -[NSString initWithFormat:]( v18,  "initWithFormat:",  @"available-for-staging for given target | availableForStaging:%@",  v19);
    -[MADAutoAssetStager _logPersistedAvailableForStagingByTarget:operation:forPersistedEntryID:withAvailableForStaging:message:]( self,  "_logPersistedAvailableForStagingByTarget:operation:forPersistedEntryID:withAvailableForStaging:message:",  v7,  @"ENTRY_ADD",  v12,  v6,  v20);
  }

  else
  {
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    __int128 v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v6 summary]);
      *(_DWORD *)buf = 138544130;
      __int128 v26 = v23;
      __int16 v27 = 2114;
      __int128 v28 = v15;
      __int16 v29 = 2114;
      id v30 = v7;
      __int16 v31 = 2114;
      __int16 v32 = v24;
      _os_log_error_impl( &dword_0,  v22,  OS_LOG_TYPE_ERROR,  "%{public}@\n [%{public}@] {%{public}@:storeAvailableForStaging} unable to load persisted available-for-staging file | avaiabl eForStaging:%{public}@",  buf,  0x2Au);
    }
  }
}

- (id)_allEliminationSelectors
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectorsAcknowledged](self, "eliminationSelectorsAcknowledged"));
  id v7 = [v6 countByEnumeratingWithState:&v31 objects:v36 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v32;
    do
    {
      BOOL v10 = 0LL;
      do
      {
        if (*(void *)v32 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v31 + 1) + 8LL * (void)v10);
        id v12 = objc_autoreleasePoolPush();
        BOOL v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectorsAcknowledged](self, "eliminationSelectorsAcknowledged"));
        id v14 = [v13 safeObjectForKey:v11 ofClass:objc_opt_class(MAAutoAssetSelector)];
        __int128 v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

        -[NSMutableDictionary setSafeObject:forKey:](v5, "setSafeObject:forKey:", v15, v11);
        objc_autoreleasePoolPop(v12);
        BOOL v10 = (char *)v10 + 1;
      }

      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v31 objects:v36 count:16];
    }

    while (v8);
  }

  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors", 0LL));
  id v17 = [v16 countByEnumeratingWithState:&v27 objects:v35 count:16];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v28;
    do
    {
      id v20 = 0LL;
      do
      {
        if (*(void *)v28 != v19) {
          objc_enumerationMutation(v16);
        }
        uint64_t v21 = *(void *)(*((void *)&v27 + 1) + 8LL * (void)v20);
        __int128 v22 = objc_autoreleasePoolPush();
        __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors"));
        id v24 = [v23 safeObjectForKey:v21 ofClass:objc_opt_class(MAAutoAssetSelector)];
        id v25 = (void *)objc_claimAutoreleasedReturnValue(v24);

        -[NSMutableDictionary setSafeObject:forKey:](v5, "setSafeObject:forKey:", v25, v21);
        objc_autoreleasePoolPop(v22);
        id v20 = (char *)v20 + 1;
      }

      while (v18 != v20);
      id v18 = [v16 countByEnumeratingWithState:&v27 objects:v35 count:16];
    }

    while (v18);
  }

  return v5;
}

- (void)_removeEliminatedFromCandidatesAndAvaliable
{
  id v2 = self;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  __int16 v58 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _allEliminationSelectors](v2, "_allEliminationSelectors"));
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v2, "logger"));
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v5 oslog]);

  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v2, "summary"));
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v58 safeSummary]);
    *(_DWORD *)buf = 138543618;
    __int128 v71 = v7;
    __int16 v72 = 2114;
    uint64_t v73 = v8;
    _os_log_impl( &dword_0,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_removeEliminatedFromCandidatesAndAvaliable} beginning to eliminate allEliminationSelectors:%{public}@",  buf,  0x16u);
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](v2, "candidateSetConfigurations"));
  id v10 = [v9 count];

  id v59 = v2;
  if (v10)
  {
    unint64_t v11 = 0LL;
    uint64_t v12 = -1LL;
    while (1)
    {
      BOOL v13 = objc_autoreleasePoolPush();
      id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](v2, "candidateSetConfigurations"));
      __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v14 objectAtIndex:v11]);

      __int128 v66 = 0u;
      __int128 v67 = 0u;
      __int128 v64 = 0u;
      __int128 v65 = 0u;
      id v16 = v58;
      id v17 = [v16 countByEnumeratingWithState:&v64 objects:v69 count:16];
      if (v17)
      {
        id v18 = v17;
        uint64_t v54 = v12;
        id v55 = v13;
        uint64_t v56 = v11;
        uint64_t v19 = *(void *)v65;
        while (2)
        {
          for (uint64_t i = 0LL; i != v18; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v65 != v19) {
              objc_enumerationMutation(v16);
            }
            uint64_t v21 = *(void *)(*((void *)&v64 + 1) + 8LL * (void)i);
            __int128 v22 = objc_autoreleasePoolPush();
            id v23 = [v16 safeObjectForKey:v21 ofClass:objc_opt_class(MAAutoAssetSelector)];
            id v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
            id v25 = (void *)objc_claimAutoreleasedReturnValue([v24 assetType]);
            __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v24 assetSpecifier]);
            __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v15 assetSetEntryForAssetType:v25 forAssetSpecifier:v26]);

            objc_autoreleasePoolPop(v22);
            if (v27)
            {
              unint64_t v11 = v56;
              uint64_t v12 = v56;
              id v2 = v59;
              goto LABEL_15;
            }
          }

          id v18 = [v16 countByEnumeratingWithState:&v64 objects:v69 count:16];
          if (v18) {
            continue;
          }
          break;
        }

        id v2 = v59;
        unint64_t v11 = v56;
        uint64_t v12 = v54;
LABEL_15:
        BOOL v13 = v55;
      }

      objc_autoreleasePoolPop(v13);
      __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](v2, "candidateSetConfigurations"));
      __int128 v29 = v28;
      if ((v12 & 0x8000000000000000LL) == 0) {
        break;
      }
      ++v11;
      id v30 = [v28 count];
    }

    [v28 removeObjectAtIndex:v12];
  }

- (void)_removeEliminatedFromStaged
{
  id v2 = self;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  __int128 v65 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _allEliminationSelectors](v2, "_allEliminationSelectors"));
  __int128 v61 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v82 = 0u;
  __int128 v83 = 0u;
  __int128 v84 = 0u;
  __int128 v85 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](v2, "successfullyStaged"));
  id v5 = [obj countByEnumeratingWithState:&v82 objects:v92 count:16];
  __int128 v66 = v2;
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v83;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v9 = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v62 = *(void *)v83;
    do
    {
      uint64_t v10 = 0LL;
      id v63 = v6;
      do
      {
        if (*(void *)v83 != v7) {
          objc_enumerationMutation(obj);
        }
        uint64_t v68 = v10;
        unint64_t v11 = *(void **)(*((void *)&v82 + 1) + 8 * v10);
        __int128 v67 = objc_autoreleasePoolPush();
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](v2, "successfullyStaged"));
        id v13 = [v12 safeObjectForKey:v11 ofClass:objc_opt_class(p_ivars[223])];
        id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

        if (!v14)
        {
          id v40 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v2, "logger"));
          uint64_t v41 = (os_log_s *)objc_claimAutoreleasedReturnValue([v40 oslog]);

          if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
          {
            unsigned __int8 v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v2, "summary"));
            *(_DWORD *)buf = 138543618;
            BOOL v89 = v42;
            __int16 v90 = 2114;
            id v91 = v11;
            _os_log_impl( &dword_0,  v41,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_removeEliminatedFromStaged} nil stagedDescriptor encountered on successfullyStaged for sta gedSelectorKey:%{public}@",  buf,  0x16u);
          }

          goto LABEL_42;
        }

        __int128 v80 = 0u;
        __int128 v81 = 0u;
        __int128 v78 = 0u;
        __int128 v79 = 0u;
        id v15 = v65;
        id v72 = [v15 countByEnumeratingWithState:&v78 objects:v87 count:16];
        if (!v72)
        {

          goto LABEL_42;
        }

        id v70 = v15;
        uint64_t v71 = *(void *)v79;
        id v16 = &MobileAssetKeyManager__metaData.ivars;
        __int128 v69 = v14;
LABEL_9:
        uint64_t v17 = 0LL;
        while (1)
        {
          if (*(void *)v79 != v71) {
            objc_enumerationMutation(v15);
          }
          uint64_t v18 = *(void *)(*((void *)&v78 + 1) + 8 * v17);
          context = objc_autoreleasePoolPush();
          id v19 = [v15 safeObjectForKey:v18 ofClass:objc_opt_class(v9[176])];
          id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
          uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 assetVersion]);

          if (!v21) {
            break;
          }
          __int128 v22 = v16[155];
          id v23 = (void *)objc_claimAutoreleasedReturnValue([v14 assetType]);
          id v24 = (void *)objc_claimAutoreleasedReturnValue([v20 assetType]);
          id v25 = v16[155];
          __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v14 assetSpecifier]);
          __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v20 assetSpecifier]);
          if (!-[__objc2_ivar_list stringIsEqual:to:](v25, "stringIsEqual:to:", v26, v27))
          {

            id v15 = v70;
LABEL_22:

            goto LABEL_23;
          }

          __int128 v28 = v16[155];
          __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v14 assetVersion]);
          id v30 = v9;
          __int128 v31 = (void *)objc_claimAutoreleasedReturnValue([v20 assetVersion]);
          LODWORD(v28) = -[__objc2_ivar_list stringIsEqual:to:](v28, "stringIsEqual:to:", v29, v31);

          uint64_t v9 = v30;
          id v16 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);

          id v14 = v69;
          id v15 = v70;
          if ((_DWORD)v28)
          {
            id v2 = v66;
            uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v66, "logger"));
            id v44 = (os_log_s *)objc_claimAutoreleasedReturnValue([v43 oslog]);

            if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
            {
              unsigned int v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](v66, "summary"));
              unsigned __int8 v47 = (void *)objc_claimAutoreleasedReturnValue([v69 summary]);
              *(_DWORD *)buf = 138543618;
              BOOL v89 = v46;
              __int16 v90 = 2114;
              id v91 = v47;
              __int128 v48 = v44;
              __int128 v49 = "%{public}@\n"
                    "[AUTO-STAGER] {_removeEliminatedFromStaged} elimination-selector for asset-type + asset-specifier + "
                    "asset-version being eliminated - removed from successfully-staged | descriptor:%{public}@";
LABEL_39:
              _os_log_impl(&dword_0, v48, OS_LOG_TYPE_DEFAULT, v49, buf, 0x16u);

              goto LABEL_40;
            }

            goto LABEL_40;
          }

- (void)_acknowledgeEliminatedForCurrentJob
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  __int128 v29 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors"));
  id v6 = [v5 countByEnumeratingWithState:&v34 objects:v39 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v35;
    do
    {
      uint64_t v9 = 0LL;
      do
      {
        if (*(void *)v35 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v34 + 1) + 8LL * (void)v9);
        unint64_t v11 = objc_autoreleasePoolPush();
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors"));
        id v13 = [v12 safeObjectForKey:v10 ofClass:objc_opt_class(MAAutoAssetSelector)];
        id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

        if (-[MADAutoAssetStager _doesSelectorMatchCurrentJob:](self, "_doesSelectorMatchCurrentJob:", v14))
        {
          -[NSMutableDictionary setSafeObject:forKey:](v29, "setSafeObject:forKey:", v14, v10);
          id v15 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager eliminationSetConfigurationCurrentJob]( self,  "eliminationSetConfigurationCurrentJob"));

          if (!v15) {
            -[MADAutoAssetStager notifyControlManagerEliminateDone:forAssetSelector:]( self,  "notifyControlManagerEliminateDone:forAssetSelector:",  @"_acknowledgeEliminatedForCurrentJob",  v14);
          }
        }

        objc_autoreleasePoolPop(v11);
        uint64_t v9 = (char *)v9 + 1;
      }

      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v34 objects:v39 count:16];
    }

    while (v7);
  }

  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  id v16 = v29;
  id v17 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v16,  "countByEnumeratingWithState:objects:count:",  &v30,  v38,  16LL);
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v31;
    do
    {
      id v20 = 0LL;
      do
      {
        if (*(void *)v31 != v19) {
          objc_enumerationMutation(v16);
        }
        uint64_t v21 = *(void *)(*((void *)&v30 + 1) + 8LL * (void)v20);
        __int128 v22 = objc_autoreleasePoolPush();
        id v23 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v16,  "safeObjectForKey:ofClass:",  v21,  objc_opt_class(&OBJC_CLASS___MAAutoAssetSelector));
        id v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
        id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors"));
        [v25 removeObjectForKey:v21];

        __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectorsAcknowledged](self, "eliminationSelectorsAcknowledged"));
        [v26 setSafeObject:v24 forKey:v21];

        objc_autoreleasePoolPop(v22);
        id v20 = (char *)v20 + 1;
      }

      while (v18 != v20);
      id v18 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v16,  "countByEnumeratingWithState:objects:count:",  &v30,  v38,  16LL);
    }

    while (v18);
  }

  __int128 v27 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager eliminationSetConfigurationCurrentJob]( self,  "eliminationSetConfigurationCurrentJob"));
  if (v27)
  {
    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager eliminationSetConfigurationCurrentJob]( self,  "eliminationSetConfigurationCurrentJob"));
    -[MADAutoAssetStager notifyControlManagerEliminateDone:forSetConfiguration:]( self,  "notifyControlManagerEliminateDone:forSetConfiguration:",  @"_acknowledgeEliminatedForCurrentJob",  v28);

    -[MADAutoAssetStager setEliminationSetConfigurationCurrentJob:]( self,  "setEliminationSetConfigurationCurrentJob:",  0LL);
  }
}

- (void)notifyControlManagerEliminateDone:(id)a3 forAssetSelector:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 oslog]);

  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
    int v11 = 138543618;
    id v12 = v6;
    __int16 v13 = 2114;
    id v14 = v10;
    _os_log_impl( &dword_0,  v9,  OS_LOG_TYPE_DEFAULT,  "\n [ELIMINATE(STAGER)]{%{public}@} notifying auto-control-manager asset-selector eliminate done | assetSelector:%{public}@",  (uint8_t *)&v11,  0x16u);
  }

  +[MADAutoAssetControlManager stagerEliminatedSelector:]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerEliminatedSelector:",  v7);
}

- (void)notifyControlManagerEliminateDone:(id)a3 forSetConfiguration:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 oslog]);

  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v7 summary]);
    int v11 = 138543618;
    id v12 = v6;
    __int16 v13 = 2114;
    id v14 = v10;
    _os_log_impl( &dword_0,  v9,  OS_LOG_TYPE_DEFAULT,  "\n [SET-ELIMINATE(STAGER)]{%{public}@} notifying auto-control-manager set-identifier eliminate done | setConfiguration:%{public}@",  (uint8_t *)&v11,  0x16u);
  }

  +[MADAutoAssetControlManager stagerEliminatedSetConfiguration:]( &OBJC_CLASS___MADAutoAssetControlManager,  "stagerEliminatedSetConfiguration:",  v7);
}

- (void)_persistLastStagingFrom
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  if (!-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups")) {
    -[MADAutoAssetStager _persistRemoveAll:message:removingDetermined:loggingConfig:]( self,  "_persistRemoveAll:message:removingDetermined:loggingConfig:",  @"_persistLastStagingFrom",  @"removing all before setting staging from/to",  1LL,  0LL);
  }
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 persistedConfig]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromOSVersion](self, "stagingFromOSVersion"));
  [v6 persistString:v7 forKey:@"lastStagingFromOSVersion"];

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedConfig]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](self, "stagingFromBuildVersion"));
  [v9 persistString:v10 forKey:@"lastStagingFromBuildVersion"];

  if (!-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    int v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 persistedConfig]);
    __int16 v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
    [v12 persistString:v13 forKey:@"assetTargetOSVersion"];

    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 persistedConfig]);
    id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
    [v15 persistString:v16 forKey:@"assetTargetBuildVersion" shouldPersist:1];
  }

  -[MADAutoAssetStager _logPersistedConfigSet:message:]( self,  "_logPersistedConfigSet:message:",  @"_persistLastStagingFrom",  @"beginning staging operations");
}

- (int64_t)_persistDescriptor:(id)a3 operation:(id)a4 persistingDescriptor:(id)a5 withRepresentation:(int64_t)a6 message:(id)a7
{
  id v35 = a7;
  id v12 = a5;
  id v34 = a4;
  id v33 = a3;
  __int16 v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 extendedStateQueue]);
  dispatch_assert_queue_V2(v14);

  id v15 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@:_persistDescriptor",  v33);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v12 metadata]);
  id v17 = [v16 safeIntegerForKey:@"_UnarchivedSize"];

  id v18 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v12 assetType]);
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v12 assetSpecifier]);
  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v12 assetVersion]);
  id v22 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v18,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v19,  v20,  v21);

  id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 persistedEntryID]);
  id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v25 = (void *)objc_claimAutoreleasedReturnValue([v24 persistedEntry:v23 fromLocation:v15]);

  __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromOSVersion](self, "stagingFromOSVersion"));
  [v25 persistString:v26 forKey:@"lastStagingFromOSVersion"];

  __int128 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](self, "stagingFromBuildVersion"));
  [v25 persistString:v27 forKey:@"lastStagingFromBuildVersion"];

  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
  [v25 persistString:v28 forKey:@"assetTargetOSVersion"];

  __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
  [v25 persistString:v29 forKey:@"assetTargetBuildVersion"];

  [v25 persistULL:a6 forKey:@"assetRepresentation"];
  [v25 persistULL:v17 forKey:@"assetContentBytes"];
  [v25 persistSecureCodedObject:v12 forKey:@"assetDescriptor"];
  __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  __int128 v31 = (void *)objc_claimAutoreleasedReturnValue([v12 summary]);
  [v30 storePersistedEntry:v23 withEntrySummary:v31 fromLocation:v15];

  -[MADAutoAssetStager _logPersistedEntry:operation:persistingDescriptor:withRepresentation:message:]( self,  "_logPersistedEntry:operation:persistingDescriptor:withRepresentation:message:",  v33,  v34,  v12,  a6,  v35);
  return (int64_t)v17;
}

- (id)_persistRebuildTrackingNewHandedOffDescriptors:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 persistedConfig]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 stringForKey:@"lastStagingFromOSVersion"]);
  -[MADAutoAssetStager setStagingFromOSVersion:](self, "setStagingFromOSVersion:", v9);

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  int v11 = (void *)objc_claimAutoreleasedReturnValue([v10 persistedConfig]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 stringForKey:@"lastStagingFromBuildVersion"]);
  -[MADAutoAssetStager setStagingFromBuildVersion:](self, "setStagingFromBuildVersion:", v12);

  __int16 v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 persistedConfig]);
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 stringForKey:@"assetTargetOSVersion"]);
  -[MADAutoAssetStager setAssetTargetOSVersion:](self, "setAssetTargetOSVersion:", v15);

  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 persistedConfig]);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 stringForKey:@"assetTargetBuildVersion"]);
  -[MADAutoAssetStager setAssetTargetBuildVersion:](self, "setAssetTargetBuildVersion:", v18);

  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 persistedEntryIDs:@"_persistRebuildTrackingNewHandedOffDescriptors"]);

  id v93 = v20;
  id v94 = v4;
  if ([v20 count])
  {
    __int128 v112 = 0u;
    __int128 v113 = 0u;
    __int128 v110 = 0u;
    __int128 v111 = 0u;
    id obj = v20;
    id v21 = [obj countByEnumeratingWithState:&v110 objects:v120 count:16];
    if (v21)
    {
      id v22 = v21;
      char v96 = 0;
      uint64_t v23 = *(void *)v111;
      uint64_t v98 = *(void *)v111;
      do
      {
        id v24 = 0LL;
        id v97 = v22;
        do
        {
          if (*(void *)v111 != v23) {
            objc_enumerationMutation(obj);
          }
          id v25 = *(void **)(*((void *)&v110 + 1) + 8LL * (void)v24);
          uint64_t v101 = objc_autoreleasePoolPush();
          __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
          __int128 v27 = (void *)objc_claimAutoreleasedReturnValue( [v26 persistedEntry:v25 fromLocation:@"_persistRebuildTrackingNewHandedOffDescriptors"]);

          if (v27)
          {
            id v28 = [v27 ullForKey:@"assetRepresentation"];
            id v29 = [v27 secureCodedObjectForKey:@"assetDescriptor" ofClass:objc_opt_class(MADAutoAssetDescriptor)];
            __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
            id v100 = (void *)objc_claimAutoreleasedReturnValue( +[MADAnalyticsManager getAnalyticsManager]( &OBJC_CLASS___MADAnalyticsManager,  "getAnalyticsManager"));
            if (v30)
            {
              switch((unint64_t)v28)
              {
                case 0x258uLL:
                  id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
                  id v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

                  if (!os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT)) {
                    goto LABEL_14;
                  }
                  __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
                  *(_DWORD *)buf = 138543618;
                  id v117 = v36;
                  __int16 v118 = 2114;
                  id v119 = v25;
                  _os_log_impl( &dword_0,  v34,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_persistRebuildTrackingNewHandedOffDescriptors} persistedDescriptor candidateForStagi ng ignored (candidates come from stager-set-configurations) | entry:%{public}@",  buf,  0x16u);
                  goto LABEL_26;
                case 0x259uLL:
                case 0x25AuLL:
                  -[MADAutoAssetStager _trackReloadedDescriptorAvailableForStaging:]( self,  "_trackReloadedDescriptorAvailableForStaging:",  v30);
                  break;
                case 0x25BuLL:
                  __int128 v37 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
                  id v38 = (void *)objc_claimAutoreleasedReturnValue([v30 assetType]);
                  id v39 = (void *)objc_claimAutoreleasedReturnValue([v30 assetSpecifier]);
                  id v40 = (void *)objc_claimAutoreleasedReturnValue([v30 assetVersion]);
                  id v41 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v37,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v38,  v39,  v40);

                  unsigned __int8 v42 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
                  uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v42 persistedConfig]);
                  id v95 = (char *)[v43 ullForKey:@"stagedAssetTotalContentBytes"];

                  id v44 = [v27 ullForKey:@"assetContentBytes"];
                  id v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
                  unsigned int v46 = (void *)objc_claimAutoreleasedReturnValue([v41 persistedEntryID]);
                  [v45 setSafeObject:v30 forKey:v46];

                  unsigned __int8 v47 = (void *)objc_claimAutoreleasedReturnValue([v41 assetSpecifier]);
                  __int128 v48 = (void *)objc_claimAutoreleasedReturnValue([v41 assetType]);
                  __int128 v49 = (void *)objc_claimAutoreleasedReturnValue([v41 assetVersion]);
                  id v50 =  [v100 recordMobileAssetPromotionAttempt:v47 assetType:v48 assetVersion:v49 osPromotion:1 successfullyPromoted:1];

                  LODWORD(v48) = [v30 isPatch];
                  __int128 v51 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsStaged](self, "statisticsStaged"));
                  id v52 = v51;
                  if ((_DWORD)v48)
                  {
                    objc_msgSend(v51, "setPatchedAssets:", (char *)objc_msgSend(v51, "patchedAssets") + 1);

                    id v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsStaged](self, "statisticsStaged"));
                    uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue([v30 metadata]);
                    objc_msgSend( v53,  "setPatchedBytes:",  (char *)objc_msgSend(v54, "safeIntegerForKey:", @"_UnarchivedSize")
                    + (void)[v53 patchedBytes]);
                  }

                  else
                  {
                    objc_msgSend(v51, "setFullAssets:", (char *)objc_msgSend(v51, "fullAssets") + 1);

                    id v53 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsStaged](self, "statisticsStaged"));
                    uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue([v30 metadata]);
                    objc_msgSend( v53,  "setFullBytes:",  (char *)objc_msgSend(v54, "safeIntegerForKey:", @"_UnarchivedSize")
                    + (void)[v53 fullBytes]);
                  }

                  __int128 v61 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
                  uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([v61 persistedConfig]);
                  id v63 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
                  objc_msgSend( v62,  "persistULL:forKey:shouldPersist:",  objc_msgSend(v63, "count"),  @"stagedAssetCount",  0);

                  __int128 v64 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
                  __int128 v65 = (void *)objc_claimAutoreleasedReturnValue([v64 persistedConfig]);
                  [v65 persistULL:&v95[(void)v44] forKey:@"stagedAssetTotalContentBytes" shouldPersist:0];

                  char v96 = 1;
                  id v22 = v97;
                  uint64_t v23 = v98;
                  break;
                default:
                  id v55 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
                  id v56 = (void *)objc_claimAutoreleasedReturnValue([v55 diag]);
                  uint64_t v57 = objc_alloc(&OBJC_CLASS___NSString);
                  __int16 v58 = (void *)objc_claimAutoreleasedReturnValue([v30 summary]);
                  uint64_t v59 = v57;
                  id v22 = v97;
                  __int128 v60 = -[NSString initWithFormat:]( v59,  "initWithFormat:",  @"{_persistRebuildTrackingNewHandedOffDescriptors} unsupported asset representation(%d) - not adopting persisted descriptor:%@",  v28,  v58);
                  [v56 trackAnomaly:@"AUTO-STAGER" forReason:v60 withResult:6108 withError:0];

                  uint64_t v23 = v98;
                  break;
              }
            }

            else
            {
              id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
              id v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 oslog]);

              if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
              {
                __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
                *(_DWORD *)buf = 138543618;
                id v117 = v36;
                __int16 v118 = 2114;
                id v119 = v25;
                _os_log_error_impl( &dword_0,  v34,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {_persistRebuildTrackingNewHandedOffDescriptors} unable to load persistedDescriptor from persisted-state for entry:%{public}@",  buf,  0x16u);
LABEL_26:
              }

- (void)_trackReloadedDescriptorAvailableForStaging:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (v4)
  {
    -[MADAutoAssetStager addToAvailableForStaging:](self, "addToAvailableForStaging:", v4);
  }

  else
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 oslog]);

    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
      int v10 = 138543362;
      int v11 = v9;
      _os_log_impl( &dword_0,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {_trackReloadedDescriptorAvailableForStaging} nil persistedDescriptor provided by caller",  (uint8_t *)&v10,  0xCu);
    }
  }
}

- (void)_removeDescriptorFromSuccessfullyStaged:(id)a3 message:(id)a4
{
  id v53 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  uint64_t v9 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  int v10 = (void *)objc_claimAutoreleasedReturnValue([v53 assetType]);
  int v11 = (void *)objc_claimAutoreleasedReturnValue([v53 assetSpecifier]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v53 assetVersion]);
  id v13 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v9,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v10,  v11,  v12);

  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 persistedEntryID]);
  if (!v14)
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v29 = (void *)objc_claimAutoreleasedReturnValue([v17 diag]);
    __int128 v30 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v31 = (void *)objc_claimAutoreleasedReturnValue([v53 summary]);
    __int128 v32 = -[NSString initWithFormat:]( v30,  "initWithFormat:",  @"{_removeDescriptorFromSuccessfullyStaged} | no persisted entry to remove | removeFromStagedDescriptor:%@",  v31);
    [v29 trackAnomaly:@"AUTO-STAGER" forReason:v32 withResult:6110 withError:0];

LABEL_7:
    goto LABEL_13;
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  id v16 = [v15 safeObjectForKey:v14 ofClass:objc_opt_class(MADAutoAssetDescriptor)];
  id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

  if (!v17)
  {
    id v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v33 = (void *)objc_claimAutoreleasedReturnValue([v29 diag]);
    id v34 = objc_alloc(&OBJC_CLASS___NSString);
    id v35 = (void *)objc_claimAutoreleasedReturnValue([v53 summary]);
    __int128 v36 = -[NSString initWithFormat:]( v34,  "initWithFormat:",  @"{_removeDescriptorFromSuccessfullyStaged} | provided not currently staged | removeFromStagedDescriptor:%@",  v35);
    [v33 trackAnomaly:@"AUTO-STAGER" forReason:v36 withResult:6108 withError:0];

    goto LABEL_7;
  }

  id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 metadata]);
  uint64_t v19 = [v18 safeIntegerForKey:@"_UnarchivedSize"];

  id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 persistedConfig]);
  id v22 = [v21 ullForKey:@"stagedAssetTotalContentBytes"];

  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
  [v23 removeObjectForKey:v14];

  id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  [v24 removePersistedEntry:v14 fromLocation:@"_removeDescriptorFromSuccessfullyStaged"];

  -[MADAutoAssetStager _logPersistedRemovedEntry:removedDescriptor:message:]( self,  "_logPersistedRemovedEntry:removedDescriptor:message:",  @"_removeDescriptorFromSuccessfullyStaged",  v53,  v6);
  LODWORD(v21) = [v17 isPatch];
  id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsUnstaged](self, "statisticsUnstaged"));
  __int128 v26 = v25;
  if ((_DWORD)v21)
  {
    objc_msgSend(v25, "setPatchedAssets:", (char *)objc_msgSend(v25, "patchedAssets") + 1);

    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsUnstaged](self, "statisticsUnstaged"));
    id v28 = (void *)objc_claimAutoreleasedReturnValue([v17 metadata]);
    objc_msgSend( v27,  "setPatchedBytes:",  (char *)objc_msgSend(v28, "safeIntegerForKey:", @"_UnarchivedSize")
    + (void)[v27 patchedBytes]);
  }

  else
  {
    objc_msgSend(v25, "setFullAssets:", (char *)objc_msgSend(v25, "fullAssets") + 1);

    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager statisticsUnstaged](self, "statisticsUnstaged"));
    id v28 = (void *)objc_claimAutoreleasedReturnValue([v17 metadata]);
    objc_msgSend( v27,  "setFullBytes:",  (char *)objc_msgSend(v28, "safeIntegerForKey:", @"_UnarchivedSize") + (void)objc_msgSend(v27, "fullBytes"));
  }

  int64_t v37 = v22 - v19;
  if (v22 >= v19)
  {
    __int128 v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
    __int128 v49 = (void *)objc_claimAutoreleasedReturnValue([v48 persistedConfig]);
    id v50 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
    objc_msgSend(v49, "persistULL:forKey:shouldPersist:", objc_msgSend(v50, "count"), @"stagedAssetCount", 0);

    id v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
    unsigned int v46 = (void *)objc_claimAutoreleasedReturnValue([v45 persistedConfig]);
    [v46 persistULL:v37 forKey:@"stagedAssetTotalContentBytes" shouldPersist:0];
  }

  else
  {
    id v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v39 = (void *)objc_claimAutoreleasedReturnValue([v38 diag]);
    id v40 = objc_alloc(&OBJC_CLASS___NSString);
    uint64_t v41 = objc_claimAutoreleasedReturnValue([v53 summary]);
    unsigned __int8 v42 = v19;
    uint64_t v43 = (void *)v41;
    id v44 = -[NSString initWithFormat:]( v40,  "initWithFormat:",  @"{_removeDescriptorFromSuccessfullyStaged} | descriptor larger than total staged content | removeFromStagedDescriptor:%@, unarchivedSize:%lld, stagedAssetTotalContentBytes:%llu",  v41,  v42,  v22);
    [v39 trackAnomaly:@"AUTO-STAGER" forReason:v44 withResult:6108 withError:0];

    id v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
    unsigned int v46 = (void *)objc_claimAutoreleasedReturnValue([v45 persistedConfig]);
    unsigned __int8 v47 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](self, "successfullyStaged"));
    objc_msgSend(v46, "persistULL:forKey:shouldPersist:", objc_msgSend(v47, "count"), @"stagedAssetCount", 0);
  }

  __int128 v51 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v52 = (void *)objc_claimAutoreleasedReturnValue([v51 persistedConfig]);
  [v52 persistState];

  -[MADAutoAssetStager _logPersistedConfigSet:message:]( self,  "_logPersistedConfigSet:message:",  @"_removeDescriptorFromSuccessfullyStaged",  v6);
LABEL_13:
}

- (void)_persistRemoveAll:(id)a3 message:(id)a4 removingDetermined:(BOOL)a5 loggingConfig:(BOOL)a6
{
  BOOL v6 = a6;
  BOOL v7 = a5;
  id v35 = a3;
  id v10 = a4;
  int v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  [v13 removeAllPersistedEntries:v10];

  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 persistedConfig]);
  [v15 persistString:@"NO_STAGING_ATTEMPTED" forKey:@"assetTargetOSVersion" shouldPersist:0];

  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 persistedConfig]);
  [v17 persistString:@"NO_STAGING_ATTEMPTED" forKey:@"assetTargetBuildVersion" shouldPersist:0];

  if (!-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups") || v7)
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedConfig]);
    [v19 persistULL:0 forKey:@"candidateAssetCount" shouldPersist:0];

    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 persistedConfig]);
    [v21 persistULL:0 forKey:@"determinedAvailableAssetCount" shouldPersist:0];
  }

  id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 persistedConfig]);
  [v23 persistULL:0 forKey:@"activelyStagingAssetCount" shouldPersist:0];

  id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v25 = (void *)objc_claimAutoreleasedReturnValue([v24 persistedConfig]);
  [v25 persistULL:0 forKey:@"awaitingStagingAssetCount" shouldPersist:0];

  __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v26 persistedConfig]);
  [v27 persistULL:0 forKey:@"stagedAssetCount" shouldPersist:0];

  id v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  id v29 = (void *)objc_claimAutoreleasedReturnValue([v28 persistedConfig]);
  [v29 persistULL:0 forKey:@"stagedAssetTotalContentBytes" shouldPersist:0];

  __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedState](self, "persistedState"));
  __int128 v31 = (void *)objc_claimAutoreleasedReturnValue([v30 persistedConfig]);
  objc_msgSend( v31,  "persistBoolean:forKey:shouldPersist:",  -[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"),  @"modeByGroups",  1);

  if (v6) {
    -[MADAutoAssetStager _logPersistedConfigSet:message:](self, "_logPersistedConfigSet:message:", v35, v10);
  }
  if (!-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups") || v7)
  {
    __int128 v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedTargetLookupResults](self, "persistedTargetLookupResults"));
    [v32 removeAllPersistedEntries:v35];

    id v33 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
    [v33 removeAllPersistedEntries:v35];

    id v34 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager persistedAvailableForStagingByTarget]( self,  "persistedAvailableForStagingByTarget"));
    [v34 removeAllPersistedEntries:v35];
  }

  -[MADAutoAssetStager _logPersistedTableOfContents:](self, "_logPersistedTableOfContents:", v35);
  -[MADAutoAssetStager _logPersistedTargetLookupResultsTableOfContents:]( self,  "_logPersistedTargetLookupResultsTableOfContents:",  v35);
  -[MADAutoAssetStager _logPersistedSetLookupResultsTableOfContents:]( self,  "_logPersistedSetLookupResultsTableOfContents:",  v35);
  -[MADAutoAssetStager _logPersistedAvailableForStagingByTargetTableOfContents:]( self,  "_logPersistedAvailableForStagingByTargetTableOfContents:",  v35);
}

- (void)_logPersistedSetLookupResult:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withSetLookupResult:(id)a6 message:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  if (v14)
  {
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  v13));
    id v20 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"AUTO-STAGER-SET-LOOKUP-RESULTS"));
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      id v23 = [v15 newSummaryWithoutEntryID];
      *(_DWORD *)buf = 138546434;
      id v28 = @"PERSISTED";
      __int16 v29 = 2114;
      __int128 v30 = @"AUTO-STAGER-SET-LOOKUP-RESULTS";
      __int16 v31 = 2114;
      id v32 = v13;
      __int16 v33 = 2114;
      id v34 = v20;
      __int16 v35 = 2114;
      __int128 v36 = @">----->";
      __int16 v37 = 2114;
      id v38 = v12;
      __int16 v39 = 2114;
      id v40 = v16;
      __int16 v41 = 2114;
      unsigned __int8 v42 = v20;
      __int16 v43 = 2114;
      id v44 = v19;
      __int16 v45 = 2114;
      id v46 = v14;
      __int16 v47 = 2114;
      id v48 = v23;
      __int16 v49 = 2114;
      id v50 = v20;
      __int16 v51 = 2114;
      id v52 = @"<-----<";
      _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
    }
  }

  else
  {
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 diag]);
    id v24 = objc_alloc(&OBJC_CLASS___NSString);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
    __int128 v26 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"{%@:_logPersistedSetLookupResult} %@:%@ | no persistedEntryID | %@ | setLookupResult:%@",  v12,  @"AUTO-STAGER-SET-LOOKUP-RESULTS",  v13,  v16,  v25);
    [v20 trackAnomaly:@"AUTO-STAGER" forReason:v26 withResult:6110 withError:0];
  }
}

- (void)_logPersistedSetLookupResultRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedSetLookupResult:(id)a5 message:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  id v16 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  @"ENTRY_REMOVE"));
  id v17 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"AUTO-STAGER-SET-LOOKUP-RESULTS"));
  if (v11)
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
    if (v12)
    {
      if (v20)
      {
        id v21 = (__CFString *)[v12 newSummaryWithoutEntryID];
        *(_DWORD *)buf = 138546434;
        __int128 v30 = @"PERSISTED";
        __int16 v31 = 2114;
        id v32 = @"AUTO-STAGER-SET-LOOKUP-RESULTS";
        __int16 v33 = 2114;
        id v34 = @"ENTRY_REMOVE";
        __int16 v35 = 2114;
        __int128 v36 = v17;
        __int16 v37 = 2114;
        id v38 = @">----->";
        __int16 v39 = 2114;
        id v40 = v10;
        __int16 v41 = 2114;
        id v42 = v13;
        __int16 v43 = 2114;
        id v44 = v17;
        __int16 v45 = 2114;
        id v46 = v16;
        __int16 v47 = 2114;
        id v48 = v11;
        __int16 v49 = 2114;
        id v50 = v21;
        __int16 v51 = 2114;
        id v52 = v17;
        __int16 v53 = 2114;
        uint64_t v54 = @"<-----<";
        _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
      }
    }

    else if (v20)
    {
      *(_DWORD *)buf = 138546178;
      __int128 v30 = @"PERSISTED";
      __int16 v31 = 2114;
      id v32 = @"AUTO-STAGER-SET-LOOKUP-RESULTS";
      __int16 v33 = 2114;
      id v34 = @"ENTRY_REMOVE";
      __int16 v35 = 2114;
      __int128 v36 = v17;
      __int16 v37 = 2114;
      id v38 = @">----->";
      __int16 v39 = 2114;
      id v40 = v10;
      __int16 v41 = 2114;
      id v42 = v13;
      __int16 v43 = 2114;
      id v44 = v17;
      __int16 v45 = 2114;
      id v46 = v16;
      __int16 v47 = 2114;
      id v48 = v11;
      __int16 v49 = 2114;
      id v50 = v17;
      __int16 v51 = 2114;
      id v52 = @"<-----<";
      _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@]\n #_%{public}@:%{public}@",  buf,  0x7Au);
    }
  }

  else
  {
    id v28 = v16;
    id v22 = v10;
    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 diag]);
    id v25 = objc_alloc(&OBJC_CLASS___NSString);
    if (v12) {
      __int128 v26 = (__CFString *)objc_claimAutoreleasedReturnValue([v12 summary]);
    }
    else {
      __int128 v26 = @"N";
    }
    __int128 v27 = -[NSString initWithFormat:]( v25,  "initWithFormat:",  @"{%@:_logPersistedSetLookupResultRemoved} %@ | no persistedEntryID to remove | %@ | removedSetLookupResult:%@",  v22,  @"AUTO-STAGER-SET-LOOKUP-RESULTS",  v13,  v26);
    [v24 trackAnomaly:@"AUTO-STAGER" forReason:v27 withResult:6110 withError:0];

    if (v12) {
    id v10 = v22;
    }
    id v16 = v28;
  }
}

- (void)_logPersistedSetLookupResultsTableOfContents:(id)a3
{
  id v4 = (__CFString *)a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  BOOL v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (+[MADAutoAssetControlManager preferencePersistedTableLoggingEnabled]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferencePersistedTableLoggingEnabled"))
  {
    BOOL v7 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"AUTO-STAGER-SET-LOOKUP-RESULTS"));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedEntryIDs:v4]);

    __int16 v33 = v9;
    if ([v9 count])
    {
      id v34 = (__CFString *)[v9 count];
      id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138544642;
        __int128 v36 = @"PERSISTED";
        __int16 v37 = 2114;
        id v38 = @"AUTO-STAGER-SET-LOOKUP-RESULTS";
        __int16 v39 = 2114;
        id v40 = @"ENTRY_LOAD";
        __int16 v41 = 2114;
        id v42 = v7;
        __int16 v43 = 2114;
        id v44 = @">----->";
        __int16 v45 = 2114;
        id v46 = v4;
        _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} table-of-contents...",  buf,  0x3Eu);
      }

      id v32 = v7;

      id v13 = v9;
      if ((uint64_t)v34 >= 1)
      {
        uint64_t v14 = 0LL;
        *(void *)&__int128 v12 = 138544130LL;
        __int128 v31 = v12;
        do
        {
          id v15 = objc_autoreleasePoolPush();
          id v16 = (__CFString *)objc_claimAutoreleasedReturnValue([v13 objectAtIndexedSubscript:v14]);
          id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 persistedEntry:v16 fromLocation:v4]);

          if (v18)
          {
            id v19 = [v18 secureCodedObjectForKey:@"setLookupResult" ofClass:objc_opt_class(MADAutoSetLookupResult)];
            BOOL v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
            id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

            if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
            {
              id v23 = (__CFString *)[v20 newSummaryWithoutEntryID];
              *(_DWORD *)buf = 138544642;
              __int128 v36 = v32;
              __int16 v37 = 2114;
              id v38 = @"E_LOD";
              __int16 v39 = 2048;
              id v40 = (const __CFString *)(v14 + 1);
              __int16 v41 = 2048;
              id v13 = v33;
              id v42 = v34;
              __int16 v43 = 2114;
              id v44 = v16;
              __int16 v45 = 2114;
              id v46 = v23;
              _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "\n#_%{public}@:%{public}@ (%ld of %ld) [%{public}@] | %{public}@",  buf,  0x3Eu);
            }
          }

          else
          {
            id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            BOOL v20 = (void *)objc_claimAutoreleasedReturnValue([v24 oslog]);

            if (!os_log_type_enabled((os_log_t)v20, OS_LOG_TYPE_ERROR)) {
              goto LABEL_12;
            }
            id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            *(_DWORD *)buf = v31;
            __int128 v36 = v4;
            __int16 v37 = 2114;
            id v38 = @"AUTO-STAGER-SET-LOOKUP-RESULTS";
            __int16 v39 = 2114;
            id v40 = (const __CFString *)v22;
            __int16 v41 = 2114;
            id v42 = v16;
            _os_log_error_impl( &dword_0,  (os_log_t)v20,  OS_LOG_TYPE_ERROR,  "{%{public}@:_logPersistedSetLookupResultsTableOfContents} | (%{public}@) %{public}@ | unable to load entry:%{public}@",  buf,  0x2Au);
          }

LABEL_12:
          objc_autoreleasePoolPop(v15);
          ++v14;
        }

        while (v34 != (__CFString *)v14);
      }

      id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger", v31));
      __int128 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

      if (!os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v7 = (__CFString *)v32;
        goto LABEL_21;
      }

      *(_DWORD *)buf = 138544642;
      __int128 v36 = @"PERSISTED";
      __int16 v37 = 2114;
      id v38 = @"AUTO-STAGER-SET-LOOKUP-RESULTS";
      __int16 v39 = 2114;
      id v40 = @"ENTRY_LOAD";
      __int16 v41 = 2114;
      BOOL v7 = (__CFString *)v32;
      id v42 = (__CFString *)v32;
      __int16 v43 = 2114;
      id v44 = @"<-----<";
      __int16 v45 = 2114;
      id v46 = v4;
      __int128 v27 = "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} ...table-of-contents";
      id v28 = v26;
      uint32_t v29 = 62;
    }

    else
    {
      __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int128 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 oslog]);

      if (!os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
LABEL_21:

        goto LABEL_22;
      }

      *(_DWORD *)buf = 138545410;
      __int128 v36 = @"PERSISTED";
      __int16 v37 = 2114;
      id v38 = @"AUTO-STAGER-SET-LOOKUP-RESULTS";
      __int16 v39 = 2114;
      id v40 = @"ENTRY_LOAD";
      __int16 v41 = 2114;
      id v42 = v7;
      __int16 v43 = 2114;
      id v44 = @">----->";
      __int16 v45 = 2114;
      id v46 = v4;
      __int16 v47 = 2114;
      id v48 = @"empty table-of-contents";
      __int16 v49 = 2114;
      id v50 = v7;
      __int16 v51 = 2114;
      id v52 = @"<-----<";
      __int128 v27 = "[%{public}@][%{public}@][%{public}@]\n"
            "#_%{public}@:%{public}@ {%{public}@} %{public}@\n"
            "#_%{public}@:%{public}@";
      id v28 = v26;
      uint32_t v29 = 92;
    }

    _os_log_impl(&dword_0, v28, OS_LOG_TYPE_DEFAULT, v27, buf, v29);
    goto LABEL_21;
  }

- (void)purgeAlreadyStagedNotApplicableForRequiredByTarget:(id)a3 andNotApplicableForOptionalByTarget:(id)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM", a3, a4));
  BOOL v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  -[MADAutoAssetStager _removeAllStagedContent](self, "_removeAllStagedContent");
}

- (void)loadPersistedSetLookupResults
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
  [v5 loadPersistedState:@"loadPersistedSetLookupResults"];

  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"loadPersistedSetLookupResults"]);

  if ([v7 count])
  {
    id v40 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v48 = 0u;
    __int128 v49 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    __int16 v39 = v7;
    id obj = v7;
    id v42 = [obj countByEnumeratingWithState:&v48 objects:v59 count:16];
    if (v42)
    {
      uint64_t v8 = *(void *)v49;
      do
      {
        uint64_t v9 = 0LL;
        do
        {
          if (*(void *)v49 != v8) {
            objc_enumerationMutation(obj);
          }
          uint64_t v10 = *(void *)(*((void *)&v48 + 1) + 8LL * (void)v9);
          id v11 = objc_autoreleasePoolPush();
          __int128 v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
          id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 persistedEntry:v10 fromLocation:@"loadPersistedSetLookupResults"]);

          if (v13)
          {
            uint64_t v14 = v11;
            id v15 = [v13 secureCodedObjectForKey:@"setLookupResult" ofClass:objc_opt_class(MADAutoSetLookupResult)];
            id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
            id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

            if (v16)
            {
              if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
              {
                id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
                uint64_t v20 = v8;
                id v21 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
                *(_DWORD *)buf = 138543874;
                uint64_t v54 = v19;
                __int16 v55 = 2114;
                uint64_t v56 = v10;
                __int16 v57 = 2114;
                __int16 v58 = v21;
                _os_log_impl( &dword_0,  v18,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {loadPersistedSetLookupResults} content on filesystem validated | entryID:%{public}@, ad opted setLookupResult:%{public}@",  buf,  0x20u);

                uint64_t v8 = v20;
              }

              -[MADAutoAssetStager setLookupResultLoadedFromPersisted:persistedEntryID:]( self,  "setLookupResultLoadedFromPersisted:persistedEntryID:",  v16,  v10);
              id v11 = v14;
            }

            else
            {
              id v11 = v14;
              if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
              {
                id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
                *(_DWORD *)buf = 138543618;
                uint64_t v54 = v24;
                __int16 v55 = 2114;
                uint64_t v56 = v10;
                _os_log_error_impl( &dword_0,  v18,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedSetLookupResults} unable to load set-lookup-result | entryID:%{public}@",  buf,  0x16u);

                id v11 = v14;
              }

              -[NSMutableArray addObject:](v40, "addObject:", v10);
            }
          }

          else
          {
            id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            id v16 = (void *)objc_claimAutoreleasedReturnValue([v22 oslog]);

            if (os_log_type_enabled((os_log_t)v16, OS_LOG_TYPE_ERROR))
            {
              id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
              *(_DWORD *)buf = 138543618;
              uint64_t v54 = v23;
              __int16 v55 = 2114;
              uint64_t v56 = v10;
              _os_log_error_impl( &dword_0,  (os_log_t)v16,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {loadPersistedSetLookupResults} unable to retrieve set-lookup-result | entryID:%{public}@",  buf,  0x16u);
            }
          }

          objc_autoreleasePoolPop(v11);
          uint64_t v9 = (char *)v9 + 1;
        }

        while (v42 != v9);
        id v42 = [obj countByEnumeratingWithState:&v48 objects:v59 count:16];
      }

      while (v42);
    }

    __int128 v46 = 0u;
    __int128 v47 = 0u;
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    id v25 = v40;
    id v26 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v25,  "countByEnumeratingWithState:objects:count:",  &v44,  v52,  16LL);
    if (v26)
    {
      id v27 = v26;
      uint64_t v28 = *(void *)v45;
      __int16 v43 = v25;
      do
      {
        for (uint64_t i = 0LL; i != v27; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v45 != v28) {
            objc_enumerationMutation(v43);
          }
          uint64_t v30 = *(void *)(*((void *)&v44 + 1) + 8LL * (void)i);
          __int128 v31 = objc_autoreleasePoolPush();
          id v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
          __int16 v33 = (void *)objc_claimAutoreleasedReturnValue([v32 persistedEntry:v30 fromLocation:@"loadPersistedSetLookupResults"]);

          id v34 = [v33 secureCodedObjectForKey:@"setLookupResult" ofClass:objc_opt_class(MADAutoSetLookupResult)];
          __int16 v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
          __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
          [v36 removePersistedEntry:v30 fromLocation:@"loadPersistedSetLookupResults"];

          -[MADAutoAssetStager _logPersistedSetLookupResultRemoved:removedPersistedEntryID:removedSetLookupResult:message:]( self,  "_logPersistedSetLookupResultRemoved:removedPersistedEntryID:removedSetLookupResult:message:",  @"loadPersistedSetLookupResults",  v30,  v35,  @"dropped while loading persisted-state");
          objc_autoreleasePoolPop(v31);
        }

        id v25 = v43;
        id v27 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v43,  "countByEnumeratingWithState:objects:count:",  &v44,  v52,  16LL);
      }

      while (v27);
    }

    BOOL v7 = v39;
  }

  else
  {
    __int16 v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v25 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([v37 oslog]);

    if (os_log_type_enabled((os_log_t)v25, OS_LOG_TYPE_DEFAULT))
    {
      id v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
      *(_DWORD *)buf = 138543362;
      uint64_t v54 = v38;
      _os_log_impl( &dword_0,  (os_log_t)v25,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[AUTO-STAGER] {loadPersistedSetLookupResults} no persisted set-lookup-results to be resumed",  buf,  0xCu);
    }
  }

  -[MADAutoAssetStager _logPersistedSetLookupResultsTableOfContents:]( self,  "_logPersistedSetLookupResultsTableOfContents:",  @"loadPersistedSetLookupResults");
}

- (id)newTargetLookupResultsForTargetTrainName:(id)a3 forTargetRestoreVersion:(id)a4
{
  id v6 = a3;
  id v43 = a4;
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  uint64_t v9 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  p_super = objc_alloc_init(&OBJC_CLASS___NSArray);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedTargetLookupResults](self, "persistedTargetLookupResults"));
  __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 persistedEntryIDs:@"newTargetLookupResultsForTargetTrainName"]);

  if ([v12 count])
  {
    __int16 v39 = v12;
    id v40 = p_super;
    __int128 v55 = 0u;
    __int128 v56 = 0u;
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    id obj = v12;
    id v46 = [obj countByEnumeratingWithState:&v53 objects:v62 count:16];
    if (!v46) {
      goto LABEL_31;
    }
    uint64_t v13 = *(void *)v54;
    uint64_t v44 = *(void *)v54;
    __int16 v41 = self;
    id v42 = v6;
    while (1)
    {
      for (uint64_t i = 0LL; i != v46; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v54 != v13) {
          objc_enumerationMutation(obj);
        }
        uint64_t v15 = *(void *)(*((void *)&v53 + 1) + 8LL * (void)i);
        __int128 v48 = objc_autoreleasePoolPush();
        id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedTargetLookupResults](self, "persistedTargetLookupResults"));
        id v17 = (void *)objc_claimAutoreleasedReturnValue( [v16 persistedEntry:v15 fromLocation:@"newTargetLookupResultsForTargetTrainName"]);

        __int128 v47 = v17;
        if (v17)
        {
          id v18 = [v17 secureCodedObjectForKey:@"targetLookupResults" ofClass:objc_opt_class(MADAutoTargetLookupResults)];
          id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
          uint64_t v20 = v19;
          if (!v19)
          {
            id v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 oslog]);

            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
              *(_DWORD *)buf = 138543618;
              uint64_t v59 = v36;
              __int16 v60 = 2114;
              uint64_t v61 = v15;
              _os_log_error_impl( &dword_0,  v21,  OS_LOG_TYPE_ERROR,  "[%{public}@] {newTargetLookupResultsForTargetTrainName} unable to load target-lookup-results | entryID:%{public}@",  buf,  0x16u);
            }

            goto LABEL_25;
          }

          id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 targetTrainName]);
          id v22 = (void *)objc_claimAutoreleasedReturnValue([v20 targetRestoreVersion]);
          unsigned int v23 = +[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v22, v43);

          if (v23)
          {
            __int128 v51 = 0u;
            __int128 v52 = 0u;
            __int128 v49 = 0u;
            __int128 v50 = 0u;
            id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 setLookupResults]);
            id v24 = -[os_log_s countByEnumeratingWithState:objects:count:]( v21,  "countByEnumeratingWithState:objects:count:",  &v49,  v57,  16LL);
            if (v24)
            {
              id v25 = v24;
              uint64_t v26 = *(void *)v50;
              do
              {
                for (j = 0LL; j != v25; j = (char *)j + 1)
                {
                  if (*(void *)v50 != v26) {
                    objc_enumerationMutation(v21);
                  }
                  uint64_t v28 = *(void *)(*((void *)&v49 + 1) + 8LL * (void)j);
                  uint32_t v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "setLookupResults", v39, v40));
                  id v30 = [v29 safeObjectForKey:v28 ofClass:objc_opt_class(MADAutoSetLookupResult)];
                  __int128 v31 = (void *)objc_claimAutoreleasedReturnValue(v30);

                  if (v31) {
                    -[NSMutableArray addObject:](v9, "addObject:", v31);
                  }
                }

                id v25 = -[os_log_s countByEnumeratingWithState:objects:count:]( v21,  "countByEnumeratingWithState:objects:count:",  &v49,  v57,  16LL);
              }

              while (v25);
              self = v41;
              id v6 = v42;
            }

- (void)targetLookupResultsLoadedFromPersisted:(id)a3 persistedEntryID:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v7 targetTrainName]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v7 targetRestoreVersion]);
  __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v7 targetBuild]);
  id v14 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:withTargetBuildVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:withTargetBuildVersion:",  v10,  v11,  v12));

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager targetLookupResults](self, "targetLookupResults"));
  [v13 setSafeObject:v7 forKey:v14];

  -[MADAutoAssetStager _logPersistedTargetLookupResults:operation:forPersistedEntryID:withTargetLookupResults:message:]( self,  "_logPersistedTargetLookupResults:operation:forPersistedEntryID:withTargetLookupResults:message:",  @"targetLookupResultsLoadedFromPersisted",  @"ENTRY_LOAD",  v6,  v7,  @"target-lookup-results validated");
}

- (void)setLookupResultLoadedFromPersisted:(id)a3 persistedEntryID:(id)a4
{
  id v6 = a4;
  id v11 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setLookupResults](self, "setLookupResults"));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v11 assetType]);
  [v9 setSafeObject:v11 forKey:v10];

  -[MADAutoAssetStager _logPersistedSetLookupResult:operation:forPersistedEntryID:withSetLookupResult:message:]( self,  "_logPersistedSetLookupResult:operation:forPersistedEntryID:withSetLookupResult:message:",  @"setLookupResultLoadedFromPersisted",  @"ENTRY_LOAD",  v6,  v11,  @"set-lookup-result validated");
}

- (id)targetLookupResultsKeyForTrainName:(id)a3 withRestoreVersion:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:withTargetBuildVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:withTargetBuildVersion:",  v7,  v6,  v8));

  return v9;
}

- (id)targetLookupResultsKeyForTrainName:(id)a3 withRestoreVersion:(id)a4 withTargetBuildVersion:(id)a5
{
  uint64_t v8 = (__CFString *)a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  __int128 v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = v9;
  if (!v9) {
    id v13 = v10;
  }
  if (v8) {
    id v14 = v8;
  }
  else {
    id v14 = @"CURRENT-TRAIN";
  }
  id v15 = v9;
  id v16 = v8;
  id v17 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"%@+%@", v14, v13);

  return v17;
}

- (void)_logPersistedTargetLookupResults:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withTargetLookupResults:(id)a6 message:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  if (v14)
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  v13));
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"AUTO-STAGER-TARGET-LOOKUP-RESULTS"));
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      id v23 = [v15 newSummaryWithoutEntryID];
      *(_DWORD *)buf = 138546434;
      uint64_t v28 = @"PERSISTED";
      __int16 v29 = 2114;
      id v30 = @"AUTO-STAGER-TARGET-LOOKUP-RESULTS";
      __int16 v31 = 2114;
      id v32 = v13;
      __int16 v33 = 2114;
      id v34 = v20;
      __int16 v35 = 2114;
      __int128 v36 = @">----->";
      __int16 v37 = 2114;
      id v38 = v12;
      __int16 v39 = 2114;
      id v40 = v16;
      __int16 v41 = 2114;
      id v42 = v20;
      __int16 v43 = 2114;
      uint64_t v44 = v19;
      __int16 v45 = 2114;
      id v46 = v14;
      __int16 v47 = 2114;
      id v48 = v23;
      __int16 v49 = 2114;
      __int128 v50 = v20;
      __int16 v51 = 2114;
      __int128 v52 = @"<-----<";
      _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
    }
  }

  else
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 diag]);
    id v24 = objc_alloc(&OBJC_CLASS___NSString);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v15 summary]);
    uint64_t v26 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"{%@:_logPersistedTargetLookupResults} %@:%@ | no persistedEntryID | %@ | targetLookupResults:%@",  v12,  @"AUTO-STAGER-TARGET-LOOKUP-RESULTS",  v13,  v16,  v25);
    [v20 trackAnomaly:@"AUTO-STAGER" forReason:v26 withResult:6110 withError:0];
  }
}

- (void)_logPersistedTargetLookupResultsRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedTargetLookupResults:(id)a5 message:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 extendedStateQueue]);
  dispatch_assert_queue_V2(v15);

  id v16 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  @"ENTRY_REMOVE"));
  id v17 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"AUTO-STAGER-TARGET-LOOKUP-RESULTS"));
  if (v11)
  {
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
    if (v12)
    {
      if (v20)
      {
        id v21 = (__CFString *)[v12 newSummaryWithoutEntryID];
        *(_DWORD *)buf = 138546434;
        id v30 = @"PERSISTED";
        __int16 v31 = 2114;
        id v32 = @"AUTO-STAGER-TARGET-LOOKUP-RESULTS";
        __int16 v33 = 2114;
        id v34 = @"ENTRY_REMOVE";
        __int16 v35 = 2114;
        __int128 v36 = v17;
        __int16 v37 = 2114;
        id v38 = @">----->";
        __int16 v39 = 2114;
        id v40 = v10;
        __int16 v41 = 2114;
        id v42 = v13;
        __int16 v43 = 2114;
        uint64_t v44 = v17;
        __int16 v45 = 2114;
        id v46 = v16;
        __int16 v47 = 2114;
        id v48 = v11;
        __int16 v49 = 2114;
        __int128 v50 = v21;
        __int16 v51 = 2114;
        __int128 v52 = v17;
        __int16 v53 = 2114;
        __int128 v54 = @"<-----<";
        _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
      }
    }

    else if (v20)
    {
      *(_DWORD *)buf = 138546178;
      id v30 = @"PERSISTED";
      __int16 v31 = 2114;
      id v32 = @"AUTO-STAGER-TARGET-LOOKUP-RESULTS";
      __int16 v33 = 2114;
      id v34 = @"ENTRY_REMOVE";
      __int16 v35 = 2114;
      __int128 v36 = v17;
      __int16 v37 = 2114;
      id v38 = @">----->";
      __int16 v39 = 2114;
      id v40 = v10;
      __int16 v41 = 2114;
      id v42 = v13;
      __int16 v43 = 2114;
      uint64_t v44 = v17;
      __int16 v45 = 2114;
      id v46 = v16;
      __int16 v47 = 2114;
      id v48 = v11;
      __int16 v49 = 2114;
      __int128 v50 = v17;
      __int16 v51 = 2114;
      __int128 v52 = @"<-----<";
      _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@]\n #_%{public}@:%{public}@",  buf,  0x7Au);
    }
  }

  else
  {
    uint64_t v28 = v16;
    id v22 = v10;
    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 diag]);
    id v25 = objc_alloc(&OBJC_CLASS___NSString);
    if (v12) {
      uint64_t v26 = (__CFString *)objc_claimAutoreleasedReturnValue([v12 summary]);
    }
    else {
      uint64_t v26 = @"N";
    }
    id v27 = -[NSString initWithFormat:]( v25,  "initWithFormat:",  @"{%@:_logPersistedTargetLookupResultsRemoved} %@ | no persistedEntryID to remove | %@ | removedTargetLookupResults:%@",  v22,  @"AUTO-STAGER-TARGET-LOOKUP-RESULTS",  v13,  v26);
    [v24 trackAnomaly:@"AUTO-STAGER" forReason:v27 withResult:6110 withError:0];

    if (v12) {
    id v10 = v22;
    }
    id v16 = v28;
  }
}

- (void)_logPersistedTargetLookupResultsTableOfContents:(id)a3
{
  id v4 = (__CFString *)a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (+[MADAutoAssetControlManager preferencePersistedTableLoggingEnabled]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferencePersistedTableLoggingEnabled"))
  {
    id v7 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"AUTO-STAGER-TARGET-LOOKUP-RESULTS"));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedTargetLookupResults](self, "persistedTargetLookupResults"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedEntryIDs:v4]);

    __int16 v33 = v9;
    if ([v9 count])
    {
      id v34 = (__CFString *)[v9 count];
      id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138544642;
        __int128 v36 = @"PERSISTED";
        __int16 v37 = 2114;
        id v38 = @"AUTO-STAGER-TARGET-LOOKUP-RESULTS";
        __int16 v39 = 2114;
        id v40 = @"ENTRY_LOAD";
        __int16 v41 = 2114;
        id v42 = v7;
        __int16 v43 = 2114;
        uint64_t v44 = @">----->";
        __int16 v45 = 2114;
        id v46 = v4;
        _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} table-of-contents...",  buf,  0x3Eu);
      }

      id v32 = v7;

      id v13 = v9;
      if ((uint64_t)v34 >= 1)
      {
        uint64_t v14 = 0LL;
        *(void *)&__int128 v12 = 138544130LL;
        __int128 v31 = v12;
        do
        {
          id v15 = objc_autoreleasePoolPush();
          id v16 = (__CFString *)objc_claimAutoreleasedReturnValue([v13 objectAtIndexedSubscript:v14]);
          id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedTargetLookupResults](self, "persistedTargetLookupResults"));
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 persistedEntry:v16 fromLocation:v4]);

          if (v18)
          {
            id v19 = [v18 secureCodedObjectForKey:@"targetLookupResults" ofClass:objc_opt_class(MADAutoTargetLookupResults)];
            BOOL v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
            id v21 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 oslog]);

            if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
            {
              id v23 = (__CFString *)[v20 newSummaryWithoutEntryID];
              *(_DWORD *)buf = 138544642;
              __int128 v36 = v32;
              __int16 v37 = 2114;
              id v38 = @"E_LOD";
              __int16 v39 = 2048;
              id v40 = (const __CFString *)(v14 + 1);
              __int16 v41 = 2048;
              id v13 = v33;
              id v42 = v34;
              __int16 v43 = 2114;
              uint64_t v44 = v16;
              __int16 v45 = 2114;
              id v46 = v23;
              _os_log_impl( &dword_0,  v22,  OS_LOG_TYPE_DEFAULT,  "\n#_%{public}@:%{public}@ (%ld of %ld) [%{public}@] | %{public}@",  buf,  0x3Eu);
            }
          }

          else
          {
            id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            BOOL v20 = (void *)objc_claimAutoreleasedReturnValue([v24 oslog]);

            if (!os_log_type_enabled((os_log_t)v20, OS_LOG_TYPE_ERROR)) {
              goto LABEL_12;
            }
            id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            *(_DWORD *)buf = v31;
            __int128 v36 = v4;
            __int16 v37 = 2114;
            id v38 = @"AUTO-STAGER-TARGET-LOOKUP-RESULTS";
            __int16 v39 = 2114;
            id v40 = (const __CFString *)v22;
            __int16 v41 = 2114;
            id v42 = v16;
            _os_log_error_impl( &dword_0,  (os_log_t)v20,  OS_LOG_TYPE_ERROR,  "{%{public}@:_logPersistedSetLookupResultsTableOfContents} | (%{public}@) %{public}@ | unable to load entry:%{public}@",  buf,  0x2Au);
          }

LABEL_12:
          objc_autoreleasePoolPop(v15);
          ++v14;
        }

        while (v34 != (__CFString *)v14);
      }

      id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger", v31));
      uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

      if (!os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        id v7 = (__CFString *)v32;
        goto LABEL_21;
      }

      *(_DWORD *)buf = 138544642;
      __int128 v36 = @"PERSISTED";
      __int16 v37 = 2114;
      id v38 = @"AUTO-STAGER-TARGET-LOOKUP-RESULTS";
      __int16 v39 = 2114;
      id v40 = @"ENTRY_LOAD";
      __int16 v41 = 2114;
      id v7 = (__CFString *)v32;
      id v42 = (__CFString *)v32;
      __int16 v43 = 2114;
      uint64_t v44 = @"<-----<";
      __int16 v45 = 2114;
      id v46 = v4;
      id v27 = "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} ...table-of-contents";
      uint64_t v28 = v26;
      uint32_t v29 = 62;
    }

    else
    {
      id v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 oslog]);

      if (!os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
LABEL_21:

        goto LABEL_22;
      }

      *(_DWORD *)buf = 138545410;
      __int128 v36 = @"PERSISTED";
      __int16 v37 = 2114;
      id v38 = @"AUTO-STAGER-TARGET-LOOKUP-RESULTS";
      __int16 v39 = 2114;
      id v40 = @"ENTRY_LOAD";
      __int16 v41 = 2114;
      id v42 = v7;
      __int16 v43 = 2114;
      uint64_t v44 = @">----->";
      __int16 v45 = 2114;
      id v46 = v4;
      __int16 v47 = 2114;
      id v48 = @"empty table-of-contents";
      __int16 v49 = 2114;
      __int128 v50 = v7;
      __int16 v51 = 2114;
      __int128 v52 = @"<-----<";
      id v27 = "[%{public}@][%{public}@][%{public}@]\n"
            "#_%{public}@:%{public}@ {%{public}@} %{public}@\n"
            "#_%{public}@:%{public}@";
      uint64_t v28 = v26;
      uint32_t v29 = 92;
    }

    _os_log_impl(&dword_0, v28, OS_LOG_TYPE_DEFAULT, v27, buf, v29);
    goto LABEL_21;
  }

- (void)availableForStagingLoadedFromPersisted:(id)a3 persistedEntryID:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 extendedStateQueue]);
  dispatch_assert_queue_V2(v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 targetTrainName]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v7 targetRestoreVersion]);
  __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v7 targetBuild]);
  id v19 = (id)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager targetLookupResultsKeyForTrainName:withRestoreVersion:withTargetBuildVersion:]( self,  "targetLookupResultsKeyForTrainName:withRestoreVersion:withTargetBuildVersion:",  v10,  v11,  v12));

  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameAvailableForStaging:](self, "_targetNameAvailableForStaging:", v7));
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingRequiredByTarget](self, "availableForStagingRequiredByTarget"));
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v7 descriptorsRequiredForStaging]);
  [v14 setSafeObject:v15 forKey:v19];

  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingOptionalByTarget](self, "availableForStagingOptionalByTarget"));
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v7 descriptorsOptionalForStaging]);
  [v16 setSafeObject:v17 forKey:v19];

  id v18 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"[%@] available-for-staging validated",  v13);
  -[MADAutoAssetStager _logPersistedAvailableForStagingByTarget:operation:forPersistedEntryID:withAvailableForStaging:message:]( self,  "_logPersistedAvailableForStagingByTarget:operation:forPersistedEntryID:withAvailableForStaging:message:",  @"availableForStagingLoadedFromPersisted",  @"ENTRY_LOAD",  v6,  v7,  v18);
}

- (void)_logPersistedAvailableForStagingByTarget:(id)a3 operation:(id)a4 forPersistedEntryID:(id)a5 withAvailableForStaging:(id)a6 message:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v17 extendedStateQueue]);
  dispatch_assert_queue_V2(v18);

  id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameAvailableForStaging:](self, "_targetNameAvailableForStaging:", v15));
  if (v14)
  {
    BOOL v20 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  v13));
    id v21 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"AUTO-STAGER-TARGET-AVAILABLE"));
    id v22 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"[%@] %@", v19, v16);

    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oslog]);

    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      id v25 = [v15 newSummaryWithoutEntryID];
      *(_DWORD *)buf = 138546434;
      uint32_t v29 = @"PERSISTED";
      __int16 v30 = 2114;
      __int128 v31 = @"AUTO-STAGER-TARGET-AVAILABLE";
      __int16 v32 = 2114;
      id v33 = v13;
      __int16 v34 = 2114;
      __int16 v35 = v21;
      __int16 v36 = 2114;
      __int16 v37 = @">----->";
      __int16 v38 = 2114;
      id v39 = v12;
      __int16 v40 = 2114;
      __int16 v41 = v22;
      __int16 v42 = 2114;
      __int16 v43 = v21;
      __int16 v44 = 2114;
      __int16 v45 = v20;
      __int16 v46 = 2114;
      id v47 = v14;
      __int16 v48 = 2114;
      id v49 = v25;
      __int16 v50 = 2114;
      __int16 v51 = v21;
      __int16 v52 = 2114;
      __int16 v53 = @"<-----<";
      _os_log_impl( &dword_0,  v24,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
    }
  }

  else
  {
    BOOL v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 diag]);
    uint64_t v26 = objc_alloc(&OBJC_CLASS___NSString);
    id v22 = (NSString *)[v15 newSummaryWithoutEntryID];
    id v27 = -[NSString initWithFormat:]( v26,  "initWithFormat:",  @"[%@] {%@:_logPersistedAvailableForStagingByTarget} %@:%@ | no persistedEntryID | %@ | availableForStaging:%@",  v19,  v12,  @"AUTO-STAGER-TARGET-AVAILABLE",  v13,  v16,  v22);

    [v21 trackAnomaly:@"AUTO-STAGER" forReason:v27 withResult:6110 withError:0];
  }
}

- (void)_logPersistedAvailableForStagingByTargetRemoved:(id)a3 removedPersistedEntryID:(id)a4 removedAvailableForStaging:(id)a5 message:(id)a6
{
  id v29 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = a6;
  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 extendedStateQueue]);
  dispatch_assert_queue_V2(v14);

  uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  @"ENTRY_REMOVE"));
  id v15 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"AUTO-STAGER-TARGET-AVAILABLE"));
  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameAvailableForStaging:](self, "_targetNameAvailableForStaging:", v11));
  if (v10)
  {
    id v17 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"[%@] %@", v16, v12);
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
    if (v11)
    {
      if (v20)
      {
        id v21 = (__CFString *)[v11 newSummaryWithoutEntryID];
        *(_DWORD *)buf = 138546434;
        __int128 v31 = @"PERSISTED";
        __int16 v32 = 2114;
        id v33 = @"AUTO-STAGER-TARGET-AVAILABLE";
        __int16 v34 = 2114;
        __int16 v35 = @"ENTRY_REMOVE";
        __int16 v36 = 2114;
        __int16 v37 = v15;
        __int16 v38 = 2114;
        id v39 = @">----->";
        __int16 v40 = 2114;
        id v41 = v29;
        __int16 v42 = 2114;
        __int16 v43 = v17;
        __int16 v44 = 2114;
        __int16 v45 = v15;
        __int16 v46 = 2114;
        id v47 = v28;
        __int16 v48 = 2114;
        id v49 = v10;
        __int16 v50 = 2114;
        __int16 v51 = v21;
        __int16 v52 = 2114;
        __int16 v53 = v15;
        __int16 v54 = 2114;
        __int128 v55 = @"<-----<";
        _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
      }
    }

    else if (v20)
    {
      *(_DWORD *)buf = 138546178;
      __int128 v31 = @"PERSISTED";
      __int16 v32 = 2114;
      id v33 = @"AUTO-STAGER-TARGET-AVAILABLE";
      __int16 v34 = 2114;
      __int16 v35 = @"ENTRY_REMOVE";
      __int16 v36 = 2114;
      __int16 v37 = v15;
      __int16 v38 = 2114;
      id v39 = @">----->";
      __int16 v40 = 2114;
      id v41 = v29;
      __int16 v42 = 2114;
      __int16 v43 = v17;
      __int16 v44 = 2114;
      __int16 v45 = v15;
      __int16 v46 = 2114;
      id v47 = v28;
      __int16 v48 = 2114;
      id v49 = v10;
      __int16 v50 = 2114;
      __int16 v51 = v15;
      __int16 v52 = 2114;
      __int16 v53 = @"<-----<";
      _os_log_impl( &dword_0,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@]\n #_%{public}@:%{public}@",  buf,  0x7Au);
    }

    uint64_t v26 = v29;
  }

  else
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 diag]);
    id v24 = objc_alloc(&OBJC_CLASS___NSString);
    if (v11) {
      id v25 = (__CFString *)objc_claimAutoreleasedReturnValue([v11 summary]);
    }
    else {
      id v25 = @"N";
    }
    uint64_t v26 = v29;
    id v27 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"[%@] {%@:_logPersistedAvailableForStagingByTargetRemoved} %@ | no persistedEntryID to remove | %@ | removedAvailableForStaging:%@",  v16,  v29,  @"AUTO-STAGER-TARGET-AVAILABLE",  v12,  v25);
    [v23 trackAnomaly:@"AUTO-STAGER" forReason:v27 withResult:6110 withError:0];

    if (v11) {
  }
    }
}

- (void)_logPersistedAvailableForStagingByTargetTableOfContents:(id)a3
{
  id v4 = (__CFString *)a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  if (+[MADAutoAssetControlManager preferencePersistedTableLoggingEnabled]( &OBJC_CLASS___MADAutoAssetControlManager,  "preferencePersistedTableLoggingEnabled"))
  {
    id v7 = (__CFString *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedComponentSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedComponentSymbol:",  @"AUTO-STAGER-TARGET-AVAILABLE"));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager persistedAvailableForStagingByTarget]( self,  "persistedAvailableForStagingByTarget"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 persistedEntryIDs:v4]);

    if ([v9 count])
    {
      __int16 v40 = (__CFString *)[v9 count];
      id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 oslog]);

      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138544642;
        __int16 v43 = @"PERSISTED";
        __int16 v44 = 2114;
        __int16 v45 = @"AUTO-STAGER-TARGET-AVAILABLE";
        __int16 v46 = 2114;
        id v47 = @"ENTRY_LOAD";
        __int16 v48 = 2114;
        id v49 = v7;
        __int16 v50 = 2114;
        __int16 v51 = @">----->";
        __int16 v52 = 2114;
        __int16 v53 = v4;
        _os_log_impl( &dword_0,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} table-of-contents...",  buf,  0x3Eu);
      }

      __int16 v38 = v7;

      id v12 = v40;
      if ((uint64_t)v40 >= 1)
      {
        uint64_t v13 = 0LL;
        id v39 = v9;
        do
        {
          id v14 = objc_autoreleasePoolPush();
          id v15 = (__CFString *)objc_claimAutoreleasedReturnValue([v9 objectAtIndexedSubscript:v13]);
          id v16 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager persistedAvailableForStagingByTarget]( self,  "persistedAvailableForStagingByTarget"));
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 persistedEntry:v15 fromLocation:v4]);

          if (v17)
          {
            id v41 = v14;
            id v18 = v4;
            id v19 = [v17 secureCodedObjectForKey:@"AvailableForStagingByTarget" ofClass:objc_opt_class(MADAutoTargetLookupResults)];
            BOOL v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
            id v21 = objc_alloc(&OBJC_CLASS___NSString);
            id v22 = self;
            id v23 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _targetNameAvailableForStaging:]( self,  "_targetNameAvailableForStaging:",  v20));
            id v24 = [v20 newSummaryWithoutEntryID];
            id v25 = -[NSString initWithFormat:](v21, "initWithFormat:", @"[%@] %@", v23, v24);

            uint64_t v26 = v22;
            id v27 = v22;
            id v12 = v40;
            uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v27, "logger"));
            id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 oslog]);

            if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138544642;
              __int16 v43 = v38;
              __int16 v44 = 2114;
              __int16 v45 = @"E_LOD";
              __int16 v46 = 2048;
              id v47 = (const __CFString *)(v13 + 1);
              __int16 v48 = 2048;
              id v49 = v40;
              __int16 v50 = 2114;
              __int16 v51 = v15;
              __int16 v52 = 2114;
              __int16 v53 = (__CFString *)v25;
              _os_log_impl( &dword_0,  v29,  OS_LOG_TYPE_DEFAULT,  "\n#_%{public}@:%{public}@ (%ld of %ld) [%{public}@] | %{public}@",  buf,  0x3Eu);
            }

            id v4 = v18;
            id v9 = v39;
            self = v26;
            id v14 = v41;
          }

          else
          {
            __int16 v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            BOOL v20 = (void *)objc_claimAutoreleasedReturnValue([v30 oslog]);

            if (os_log_type_enabled((os_log_t)v20, OS_LOG_TYPE_ERROR))
            {
              __int128 v31 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
              *(_DWORD *)buf = 138544130;
              __int16 v43 = v4;
              __int16 v44 = 2114;
              __int16 v45 = @"AUTO-STAGER-TARGET-AVAILABLE";
              __int16 v46 = 2114;
              id v47 = v31;
              __int16 v48 = 2114;
              id v49 = v15;
              _os_log_error_impl( &dword_0,  (os_log_t)v20,  OS_LOG_TYPE_ERROR,  "{%{public}@:_logPersistedSetLookupResultsTableOfContents} | (%{public}@) %{public}@ | unable to load entry:%{public}@",  buf,  0x2Au);
            }
          }

          objc_autoreleasePoolPop(v14);
          ++v13;
        }

        while (v12 != (__CFString *)v13);
      }

      __int16 v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      id v33 = (os_log_s *)objc_claimAutoreleasedReturnValue([v32 oslog]);

      if (!os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
      {
        id v7 = (__CFString *)v38;
        goto LABEL_20;
      }

      *(_DWORD *)buf = 138544642;
      __int16 v43 = @"PERSISTED";
      __int16 v44 = 2114;
      __int16 v45 = @"AUTO-STAGER-TARGET-AVAILABLE";
      __int16 v46 = 2114;
      id v47 = @"ENTRY_LOAD";
      __int16 v48 = 2114;
      id v7 = (__CFString *)v38;
      id v49 = (__CFString *)v38;
      __int16 v50 = 2114;
      __int16 v51 = @"<-----<";
      __int16 v52 = 2114;
      __int16 v53 = v4;
      __int16 v34 = "[%{public}@][%{public}@][%{public}@]\n#_%{public}@:%{public}@ {%{public}@} ...table-of-contents";
      __int16 v35 = v33;
      uint32_t v36 = 62;
    }

    else
    {
      __int16 v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      id v33 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 oslog]);

      if (!os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
      {
LABEL_20:

        goto LABEL_21;
      }

      *(_DWORD *)buf = 138545410;
      __int16 v43 = @"PERSISTED";
      __int16 v44 = 2114;
      __int16 v45 = @"AUTO-STAGER-TARGET-AVAILABLE";
      __int16 v46 = 2114;
      id v47 = @"ENTRY_LOAD";
      __int16 v48 = 2114;
      id v49 = v7;
      __int16 v50 = 2114;
      __int16 v51 = @">----->";
      __int16 v52 = 2114;
      __int16 v53 = v4;
      __int16 v54 = 2114;
      __int128 v55 = @"empty table-of-contents";
      __int16 v56 = 2114;
      __int16 v57 = v7;
      __int16 v58 = 2114;
      uint64_t v59 = @"<-----<";
      __int16 v34 = "[%{public}@][%{public}@][%{public}@]\n"
            "#_%{public}@:%{public}@ {%{public}@} %{public}@\n"
            "#_%{public}@:%{public}@";
      __int16 v35 = v33;
      uint32_t v36 = 92;
    }

    _os_log_impl(&dword_0, v35, OS_LOG_TYPE_DEFAULT, v34, buf, v36);
    goto LABEL_20;
  }

- (void)loadPersistedTargetLookupResults
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedTargetLookupResults](self, "persistedTargetLookupResults"));
  [v5 loadPersistedState:@"loadPersistedTargetLookupResults"];

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedTargetLookupResults](self, "persistedTargetLookupResults"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"loadPersistedTargetLookupResults"]);

  if ([v7 count])
  {
    __int16 v40 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v48 = 0u;
    __int128 v49 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    id v39 = v7;
    id obj = v7;
    id v42 = [obj countByEnumeratingWithState:&v48 objects:v59 count:16];
    if (v42)
    {
      uint64_t v8 = *(void *)v49;
      do
      {
        id v9 = 0LL;
        do
        {
          if (*(void *)v49 != v8) {
            objc_enumerationMutation(obj);
          }
          uint64_t v10 = *(void *)(*((void *)&v48 + 1) + 8LL * (void)v9);
          id v11 = objc_autoreleasePoolPush();
          id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedTargetLookupResults](self, "persistedTargetLookupResults"));
          uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( [v12 persistedEntry:v10 fromLocation:@"loadPersistedTargetLookupResults"]);

          if (v13)
          {
            id v14 = v11;
            id v15 = [v13 secureCodedObjectForKey:@"targetLookupResults" ofClass:objc_opt_class(MADAutoTargetLookupResults)];
            id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
            id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 oslog]);

            if (v16)
            {
              if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
              {
                id v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
                uint64_t v20 = v8;
                id v21 = (void *)objc_claimAutoreleasedReturnValue([v16 summary]);
                *(_DWORD *)buf = 138543874;
                __int16 v54 = v19;
                __int16 v55 = 2114;
                uint64_t v56 = v10;
                __int16 v57 = 2114;
                __int16 v58 = v21;
                _os_log_impl( &dword_0,  v18,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {loadPersistedTargetLookupResults} content on filesystem validated | entryID:%{public}@, adopted targetLookupResults:%{public}@",  buf,  0x20u);

                uint64_t v8 = v20;
              }

              -[MADAutoAssetStager targetLookupResultsLoadedFromPersisted:persistedEntryID:]( self,  "targetLookupResultsLoadedFromPersisted:persistedEntryID:",  v16,  v10);
              id v11 = v14;
            }

            else
            {
              id v11 = v14;
              if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
              {
                id v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
                *(_DWORD *)buf = 138543618;
                __int16 v54 = v24;
                __int16 v55 = 2114;
                uint64_t v56 = v10;
                _os_log_error_impl( &dword_0,  v18,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedTargetLookupResults} unable to load set-lookup-result | entryID:%{public}@",  buf,  0x16u);

                id v11 = v14;
              }

              -[NSMutableArray addObject:](v40, "addObject:", v10);
            }
          }

          else
          {
            id v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            id v16 = (void *)objc_claimAutoreleasedReturnValue([v22 oslog]);

            if (os_log_type_enabled((os_log_t)v16, OS_LOG_TYPE_ERROR))
            {
              id v23 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
              *(_DWORD *)buf = 138543618;
              __int16 v54 = v23;
              __int16 v55 = 2114;
              uint64_t v56 = v10;
              _os_log_error_impl( &dword_0,  (os_log_t)v16,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {loadPersistedTargetLookupResults} unable to retrieve set-lookup-result | entryID:%{public}@",  buf,  0x16u);
            }
          }

          objc_autoreleasePoolPop(v11);
          id v9 = (char *)v9 + 1;
        }

        while (v42 != v9);
        id v42 = [obj countByEnumeratingWithState:&v48 objects:v59 count:16];
      }

      while (v42);
    }

    __int128 v46 = 0u;
    __int128 v47 = 0u;
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    id v25 = v40;
    id v26 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v25,  "countByEnumeratingWithState:objects:count:",  &v44,  v52,  16LL);
    if (v26)
    {
      id v27 = v26;
      uint64_t v28 = *(void *)v45;
      __int16 v43 = v25;
      do
      {
        for (uint64_t i = 0LL; i != v27; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v45 != v28) {
            objc_enumerationMutation(v43);
          }
          uint64_t v30 = *(void *)(*((void *)&v44 + 1) + 8LL * (void)i);
          __int128 v31 = objc_autoreleasePoolPush();
          __int16 v32 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedTargetLookupResults](self, "persistedTargetLookupResults"));
          id v33 = (void *)objc_claimAutoreleasedReturnValue([v32 persistedEntry:v30 fromLocation:@"loadPersistedSetLookupResults"]);

          id v34 = [v33 secureCodedObjectForKey:@"targetLookupResults" ofClass:objc_opt_class(MADAutoTargetLookupResults)];
          __int16 v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
          uint32_t v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedTargetLookupResults](self, "persistedTargetLookupResults"));
          [v36 removePersistedEntry:v30 fromLocation:@"loadPersistedTargetLookupResults"];

          -[MADAutoAssetStager _logPersistedTargetLookupResultsRemoved:removedPersistedEntryID:removedTargetLookupResults:message:]( self,  "_logPersistedTargetLookupResultsRemoved:removedPersistedEntryID:removedTargetLookupResults:message:",  @"loadPersistedTargetLookupResults",  v30,  v35,  @"dropped while loading persisted-state");
          objc_autoreleasePoolPop(v31);
        }

        id v25 = v43;
        id v27 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v43,  "countByEnumeratingWithState:objects:count:",  &v44,  v52,  16LL);
      }

      while (v27);
    }

    id v7 = v39;
  }

  else
  {
    __int16 v37 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v25 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([v37 oslog]);

    if (os_log_type_enabled((os_log_t)v25, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v38 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
      *(_DWORD *)buf = 138543362;
      __int16 v54 = v38;
      _os_log_impl( &dword_0,  (os_log_t)v25,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[AUTO-STAGER] {loadPersistedTargetLookupResults} no persisted set-lookup-results to be resumed",  buf,  0xCu);
    }
  }

  -[MADAutoAssetStager _logPersistedSetLookupResultsTableOfContents:]( self,  "_logPersistedSetLookupResultsTableOfContents:",  @"loadPersistedTargetLookupResults");
}

- (void)storeSetLookupResultsToTargetLookupResults
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setLookupResults](self, "setLookupResults"));
  if (v5)
  {
    __int128 v23 = 0u;
    __int128 v24 = 0u;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setLookupResults](self, "setLookupResults"));
    id v7 = [v6 countByEnumeratingWithState:&v21 objects:v25 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v22;
      do
      {
        for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v22 != v9) {
            objc_enumerationMutation(v6);
          }
          uint64_t v11 = *(void *)(*((void *)&v21 + 1) + 8LL * (void)i);
          id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setLookupResults](self, "setLookupResults"));
          id v13 = [v12 safeObjectForKey:v11 ofClass:objc_opt_class(NSDictionary)];
          id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

          uint64_t v15 = objc_claimAutoreleasedReturnValue([v14 safeStringForKey:@"AssetType"]);
          id v16 = (void *)v15;
          if (v14) {
            BOOL v17 = v15 == 0;
          }
          else {
            BOOL v17 = 1;
          }
          if (!v17)
          {
            id v18 = -[MADAutoAssetStager newSetLookupResult:forSetCatalog:]( self,  "newSetLookupResult:forSetCatalog:",  v15,  v14);
            -[MADAutoAssetStager _lookupCachePersistResultByGroup:fromLocation:]( self,  "_lookupCachePersistResultByGroup:fromLocation:",  v18,  @"storeSetLookupResultsToTargetLookupResults");
          }
        }

        id v8 = [v6 countByEnumeratingWithState:&v21 objects:v25 count:16];
      }

      while (v8);
    }
  }

  else
  {
    id v20 = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v20 diag]);
    [v19 trackAnomaly:@"AUTO-STAGER" forReason:@"{storeSetLookupResultsToTargetLookupResults} nil set-lookup-results" withResult:6111 withError:0];
  }

- (void)loadPersistedAvailableForStagingByTarget
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager persistedAvailableForStagingByTarget]( self,  "persistedAvailableForStagingByTarget"));
  [v5 loadPersistedState:@"loadPersistedAvailableForStagingByTarget"];

  id v6 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager persistedAvailableForStagingByTarget]( self,  "persistedAvailableForStagingByTarget"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"loadPersistedAvailableForStagingByTarget"]);

  if ([v7 count])
  {
    __int128 v48 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v58 = 0u;
    __int128 v59 = 0u;
    __int128 v60 = 0u;
    __int128 v61 = 0u;
    __int128 v47 = v7;
    id v8 = v7;
    id v9 = [v8 countByEnumeratingWithState:&v58 objects:v71 count:16];
    if (v9)
    {
      id v10 = v9;
      id obj = *(id *)v59;
      do
      {
        uint64_t v11 = 0LL;
        id v49 = v10;
        do
        {
          if (*(id *)v59 != obj) {
            objc_enumerationMutation(v8);
          }
          id v12 = *(NSString **)(*((void *)&v58 + 1) + 8LL * (void)v11);
          id v13 = objc_autoreleasePoolPush();
          id v14 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager persistedAvailableForStagingByTarget]( self,  "persistedAvailableForStagingByTarget"));
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( [v14 persistedEntry:v12 fromLocation:@"loadPersistedAvailableForStagingByTarget"]);

          if (v15)
          {
            __int16 v52 = v13;
            id v16 = [v15 secureCodedObjectForKey:@"AvailableForStagingByTarget" ofClass:objc_opt_class(MADAutoAvailableForStaging)];
            BOOL v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
            if (v17)
            {
              id v18 = objc_alloc(&OBJC_CLASS___NSString);
              id v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _targetNameAvailableForStaging:]( self,  "_targetNameAvailableForStaging:",  v17));
              id v20 = [v17 newSummaryWithoutEntryID];
              __int128 v21 = -[NSString initWithFormat:](v18, "initWithFormat:", @"[%@] %@", v19, v20);

              __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
              __int128 v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

              if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
              {
                __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
                id v25 = v8;
                id v26 = [v17 newSummaryWithoutEntryID];
                *(_DWORD *)buf = 138544130;
                __int128 v64 = v24;
                __int16 v65 = 2114;
                id v66 = v21;
                __int16 v67 = 2114;
                uint64_t v68 = v12;
                __int16 v69 = 2114;
                id v70 = v26;
                _os_log_impl( &dword_0,  v23,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [%{public}@] {loadPersistedAvailableForStagingByTarget} content on filesystem validated | entryID:%{pu blic}@, adopted availableForStaging:%{public}@",  buf,  0x2Au);

                id v8 = v25;
              }

              -[MADAutoAssetStager availableForStagingLoadedFromPersisted:persistedEntryID:]( self,  "availableForStagingLoadedFromPersisted:persistedEntryID:",  v17,  v12);
              id v10 = v49;
            }

            else
            {
              id v29 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
              uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 oslog]);

              if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
              {
                __int128 v31 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
                *(_DWORD *)buf = 138543618;
                __int128 v64 = v31;
                __int16 v65 = 2114;
                id v66 = v12;
                _os_log_error_impl( &dword_0,  v30,  OS_LOG_TYPE_ERROR,  "[%{public}@] {loadPersistedAvailableForStagingByTarget} unable to load available-for-staging | entryID:%{public}@",  buf,  0x16u);
              }

              -[NSMutableArray addObject:](v48, "addObject:", v12);
            }

            id v13 = v52;
          }

          else
          {
            id v27 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            BOOL v17 = (void *)objc_claimAutoreleasedReturnValue([v27 oslog]);

            if (os_log_type_enabled((os_log_t)v17, OS_LOG_TYPE_ERROR))
            {
              uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
              *(_DWORD *)buf = 138543618;
              __int128 v64 = v28;
              __int16 v65 = 2114;
              id v66 = v12;
              _os_log_error_impl( &dword_0,  (os_log_t)v17,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {loadPersistedAvailableForStagingByTarget} unable to retrieve set-lookup-result | entryID:%{public}@",  buf,  0x16u);
            }
          }

          objc_autoreleasePoolPop(v13);
          uint64_t v11 = (char *)v11 + 1;
        }

        while (v10 != v11);
        id v10 = [v8 countByEnumeratingWithState:&v58 objects:v71 count:16];
      }

      while (v10);
    }

    __int128 v56 = 0u;
    __int128 v57 = 0u;
    __int128 v54 = 0u;
    __int128 v55 = 0u;
    __int16 v32 = v48;
    id v33 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v32,  "countByEnumeratingWithState:objects:count:",  &v54,  v62,  16LL);
    if (v33)
    {
      id v34 = v33;
      obja = v32;
      uint64_t v53 = *(void *)v55;
      do
      {
        for (uint64_t i = 0LL; i != v34; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v55 != v53) {
            objc_enumerationMutation(obja);
          }
          uint64_t v36 = *(void *)(*((void *)&v54 + 1) + 8LL * (void)i);
          __int16 v37 = objc_autoreleasePoolPush();
          __int16 v38 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager persistedAvailableForStagingByTarget]( self,  "persistedAvailableForStagingByTarget"));
          id v39 = (void *)objc_claimAutoreleasedReturnValue( [v38 persistedEntry:v36 fromLocation:@"loadPersistedAvailableForStagingByTarget"]);

          id v40 = [v39 secureCodedObjectForKey:@"AvailableForStagingByTarget" ofClass:objc_opt_class(MADAutoAvailableForStaging)];
          id v41 = (void *)objc_claimAutoreleasedReturnValue(v40);
          id v42 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _targetNameAvailableForStaging:]( self,  "_targetNameAvailableForStaging:",  v41));
          __int16 v43 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager persistedAvailableForStagingByTarget]( self,  "persistedAvailableForStagingByTarget"));
          [v43 removePersistedEntry:v36 fromLocation:@"loadPersistedAvailableForStagingByTarget"];

          __int128 v44 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"[%@] dropped while loading persisted-state",  v42);
          -[MADAutoAssetStager _logPersistedAvailableForStagingByTargetRemoved:removedPersistedEntryID:removedAvailableForStaging:message:]( self,  "_logPersistedAvailableForStagingByTargetRemoved:removedPersistedEntryID:removedAvailableForStaging:message:",  @"loadPersistedAvailableForStagingByTarget",  v36,  v41,  v44);

          objc_autoreleasePoolPop(v37);
        }

        __int16 v32 = obja;
        id v34 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obja,  "countByEnumeratingWithState:objects:count:",  &v54,  v62,  16LL);
      }

      while (v34);
    }

    id v7 = v47;
  }

  else
  {
    __int128 v45 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    __int16 v32 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([v45 oslog]);

    if (os_log_type_enabled((os_log_t)v32, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v46 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
      *(_DWORD *)buf = 138543362;
      __int128 v64 = v46;
      _os_log_impl( &dword_0,  (os_log_t)v32,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n [AUTO-STAGER] {loadPersistedAvailableForStagingByTarget} no persisted available-for-staging instances to be resumed",  buf,  0xCu);
    }
  }

  -[MADAutoAssetStager _logPersistedSetLookupResultsTableOfContents:]( self,  "_logPersistedSetLookupResultsTableOfContents:",  @"loadPersistedAvailableForStagingByTarget");
}

- (id)newAssetMetadataFromAssetCatalog:(id)a3 forAssetype:(id)a4 forAssetSpecifier:(id)a5
{
  id v8 = a3;
  id v9 = (__CFString *)a4;
  id v10 = (__CFString *)a5;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  uint64_t v85 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v93 = 0u;
  __int128 v94 = 0u;
  __int128 v95 = 0u;
  __int128 v96 = 0u;
  id v13 = v8;
  id v87 = [v13 countByEnumeratingWithState:&v93 objects:v104 count:16];
  if (!v87)
  {

    goto LABEL_62;
  }

  char v88 = 0;
  char v76 = 0;
  uint64_t v86 = *(void *)v94;
  id v14 = @"N";
  id v81 = v9;
  if (v9) {
    id v14 = v9;
  }
  uint64_t v75 = v14;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  id v80 = v13;
  id v82 = self;
  do
  {
    id v16 = 0LL;
    do
    {
      if (*(void *)v94 != v86) {
        objc_enumerationMutation(v13);
      }
      BOOL v17 = *(const __CFString **)(*((void *)&v93 + 1) + 8LL * (void)v16);
      id v18 = objc_autoreleasePoolPush();
      uint64_t v19 = objc_claimAutoreleasedReturnValue([v13 objectForKey:v17]);
      id v20 = (void *)v19;
      if (v17) {
        BOOL v21 = v19 == 0;
      }
      else {
        BOOL v21 = 1;
      }
      if (v21)
      {
        __int128 v22 = v18;
        __int128 v23 = v16;
        __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
        id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        {
          uint64_t v56 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
          __int128 v57 = (void *)v56;
          __int128 v58 = @"N";
          if (v17) {
            __int128 v59 = v17;
          }
          else {
            __int128 v59 = @"N";
          }
          *(_DWORD *)buf = 138543874;
          uint64_t v99 = v56;
          if (v20) {
            __int128 v58 = @"Y";
          }
          __int16 v100 = 2114;
          uint64_t v101 = v59;
          __int16 v102 = 2114;
          __int128 v103 = v58;
          _os_log_error_impl( &dword_0,  v25,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {newAssetMetadataFromAssetCatalog} unable to determine key/value from set-catalog | setCatalog Key:%{public}@ | setCatalogValue:%{public}@",  buf,  0x20u);
        }

        p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        id v16 = v23;
        id v18 = v22;
      }

      else
      {
        if (!+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v17, @"Assets"))
        {
          -[NSMutableDictionary setObject:forKey:](v85, "setObject:forKey:", v20, v17);
          goto LABEL_51;
        }

        uint64_t v27 = objc_opt_class(p_ivars[153]);
        if ((objc_opt_isKindOfClass(v20, v27) & 1) != 0)
        {
          uint64_t v28 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
          uint64_t v29 = objc_claimAutoreleasedReturnValue([v13 safeStringForKey:@"AssetType"]);
          id v30 = [v13 safeObjectForKey:@"Assets" ofClass:objc_opt_class(p_ivars[153])];
          __int128 v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
          uint64_t v83 = (__CFString *)v29;
          __int128 v84 = v31;
          if ((+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v29, v81) & 1) != 0)
          {
            if ([v31 count])
            {
              __int16 v32 = v31;
              __int128 v91 = 0u;
              __int128 v92 = 0u;
              __int128 v89 = 0u;
              __int128 v90 = 0u;
              id v33 = v31;
              id v34 = [v33 countByEnumeratingWithState:&v89 objects:v97 count:16];
              p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
              if (v34)
              {
                id v35 = v34;
                __int128 v77 = v20;
                id v78 = v18;
                __int128 v79 = v16;
                uint64_t v36 = *(void *)v90;
                do
                {
                  for (uint64_t i = 0LL; i != v35; uint64_t i = (char *)i + 1)
                  {
                    if (*(void *)v90 != v36) {
                      objc_enumerationMutation(v33);
                    }
                    __int16 v38 = *(void **)(*((void *)&v89 + 1) + 8LL * (void)i);
                    id v39 = objc_autoreleasePoolPush();
                    id v40 = (void *)objc_claimAutoreleasedReturnValue([v38 safeStringForKey:@"AssetSpecifier"]);
                    if (+[SUCore stringIsEqual:to:](&OBJC_CLASS___SUCore, "stringIsEqual:to:", v40, v10))
                    {
                      -[NSMutableArray addObject:](v28, "addObject:", v38);
                      char v88 = 1;
                    }

                    objc_autoreleasePoolPop(v39);
                  }

                  id v35 = [v33 countByEnumeratingWithState:&v89 objects:v97 count:16];
                }

                while (v35);
                char v76 = 1;
                id v16 = v79;
                id v13 = v80;
                p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
                id v20 = v77;
                id v18 = v78;
                __int16 v32 = v84;
              }

              else
              {
                char v76 = 1;
                id v13 = v80;
              }

              goto LABEL_45;
            }

            __int128 v46 = v20;
            __int128 v47 = v18;
            __int128 v48 = v16;
            __int128 v60 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v82, "logger"));
            id v33 = (id)objc_claimAutoreleasedReturnValue([v60 oslog]);

            if (!os_log_type_enabled((os_log_t)v33, OS_LOG_TYPE_ERROR))
            {
LABEL_44:
              id v16 = v48;
              id v18 = v47;
              id v20 = v46;
              __int16 v32 = v84;
              p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
LABEL_45:

              if (-[NSMutableArray count](v28, "count"))
              {
                -[NSMutableDictionary setObject:forKey:](v85, "setObject:forKey:", v28, @"Assets");
                self = v82;
              }

              else
              {
                __int128 v61 = v20;
                uint64_t v62 = v18;
                id v63 = v16;
                self = v82;
                __int128 v64 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v82, "logger"));
                __int16 v65 = (os_log_s *)objc_claimAutoreleasedReturnValue([v64 oslog]);

                if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR))
                {
                  __int16 v67 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](v82, "_updateLatestSummary"));
                  *(_DWORD *)buf = 138543618;
                  uint64_t v99 = (uint64_t)v67;
                  __int16 v100 = 2114;
                  uint64_t v101 = v75;
                  _os_log_error_impl( &dword_0,  v65,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {newAssetMetadataFromAssetCatalog} found no matching asset-specifier in set-catalog lo okup response | assetType:%{public}@",  buf,  0x16u);
                }

                id v13 = v80;
                id v16 = v63;
                id v18 = v62;
                id v20 = v61;
                __int16 v32 = v84;
              }

              goto LABEL_51;
            }

            __int128 v51 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](v82, "_updateLatestSummary"));
            *(_DWORD *)buf = 138543618;
            uint64_t v99 = (uint64_t)v51;
            __int16 v100 = 2114;
            uint64_t v101 = v75;
            uint64_t v53 = (os_log_s *)v33;
            __int128 v54 = "%{public}@\n"
                  "[AUTO-STAGER] {newAssetMetadataFromAssetCatalog} set-catalog lookup response has no auto-assets for as"
                  "set-type | assetType:%{public}@";
            uint32_t v55 = 22;
          }

          else
          {
            __int128 v46 = v20;
            __int128 v47 = v18;
            __int128 v48 = v16;
            id v49 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](v82, "logger"));
            id v33 = (id)objc_claimAutoreleasedReturnValue([v49 oslog]);

            if (!os_log_type_enabled((os_log_t)v33, OS_LOG_TYPE_ERROR)) {
              goto LABEL_44;
            }
            uint64_t v50 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](v82, "_updateLatestSummary"));
            __int128 v51 = (void *)v50;
            *(_DWORD *)buf = 138543874;
            __int16 v52 = @"N";
            if (v83) {
              __int16 v52 = v83;
            }
            uint64_t v99 = v50;
            __int16 v100 = 2114;
            uint64_t v101 = v75;
            __int16 v102 = 2114;
            __int128 v103 = v52;
            uint64_t v53 = (os_log_s *)v33;
            __int128 v54 = "%{public}@\n"
                  "[AUTO-STAGER] {newAssetMetadataFromAssetCatalog} set-catalog lookup response for different asset-type "
                  "| assetType:%{public}@ | catalogAssetType:%{public}@";
            uint32_t v55 = 32;
          }

          _os_log_error_impl(&dword_0, v53, OS_LOG_TYPE_ERROR, v54, buf, v55);

          goto LABEL_44;
        }

        id v41 = v20;
        id v42 = v18;
        __int16 v43 = v16;
        __int128 v44 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
        __int128 v45 = (os_log_s *)objc_claimAutoreleasedReturnValue([v44 oslog]);

        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
        {
          id v66 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
          *(_DWORD *)buf = 138543618;
          uint64_t v99 = (uint64_t)v66;
          __int16 v100 = 2114;
          uint64_t v101 = v17;
          _os_log_error_impl( &dword_0,  v45,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {newAssetMetadataFromAssetCatalog} key value is not an array | setCatalogKey:%{public}@",  buf,  0x16u);
        }

        p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        id v16 = v43;
        id v18 = v42;
        id v20 = v41;
      }

- (id)baseForPatchingToSelector:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager baseForStagingDescriptors](self, "baseForStagingDescriptors"));
  id v7 = [obj countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v24;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    do
    {
      id v10 = 0LL;
      id v21 = v7;
      do
      {
        if (*(void *)v24 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v11 = *(void **)(*((void *)&v23 + 1) + 8LL * (void)v10);
        id v12 = p_ivars[155];
        id v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "assetType", v21));
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v4 assetType]);
        if ((-[__objc2_ivar_list stringIsEqual:to:](v12, "stringIsEqual:to:", v13, v14) & 1) != 0)
        {
          uint64_t v15 = p_ivars[155];
          uint64_t v16 = v8;
          BOOL v17 = p_ivars;
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v11 assetSpecifier]);
          uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v4 assetSpecifier]);
          LODWORD(v15) = -[__objc2_ivar_list stringIsEqual:to:](v15, "stringIsEqual:to:", v18, v19);

          p_ivars = v17;
          uint64_t v8 = v16;
          id v7 = v21;

          if ((_DWORD)v15)
          {
            id v7 = v11;
            goto LABEL_12;
          }
        }

        else
        {
        }

        id v10 = (char *)v10 + 1;
      }

      while (v7 != v10);
      id v7 = [obj countByEnumeratingWithState:&v23 objects:v27 count:16];
    }

    while (v7);
  }

- (id)assetMetadataFromAssetCatalog:(id)a3 forAssetype:(id)a4 forAssetSpecifier:(id)a5 preferringBestFormat:(BOOL)a6
{
  BOOL v6 = a6;
  id v10 = a3;
  id v11 = a4;
  __int16 v69 = (__CFString *)a5;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 extendedStateQueue]);
  dispatch_assert_queue_V2(v13);

  __int128 v76 = 0u;
  __int128 v77 = 0u;
  __int128 v74 = 0u;
  __int128 v75 = 0u;
  id v14 = v10;
  id v15 = [v14 countByEnumeratingWithState:&v74 objects:v85 count:16];
  if (!v15)
  {

    __int128 v51 = 0LL;
    goto LABEL_49;
  }

  id v16 = v15;
  id v57 = v11;
  uint64_t v62 = 0LL;
  __int128 v64 = 0LL;
  uint64_t v17 = *(void *)v75;
  p_ivars = &MobileAssetKeyManager__metaData.ivars;
  uint64_t v19 = &MobileAssetKeyManager__metaData.ivars;
  __int128 v59 = self;
  id v60 = v14;
  uint64_t v58 = *(void *)v75;
  do
  {
    uint64_t v20 = 0LL;
    id v61 = v16;
    do
    {
      if (*(void *)v75 != v17) {
        objc_enumerationMutation(v14);
      }
      uint64_t v66 = v20;
      id v21 = *(const __CFString **)(*((void *)&v74 + 1) + 8 * v20);
      context = objc_autoreleasePoolPush();
      uint64_t v22 = objc_claimAutoreleasedReturnValue([v14 objectForKey:v21]);
      __int16 v67 = (void *)v22;
      if (v21) {
        BOOL v23 = v22 == 0;
      }
      else {
        BOOL v23 = 1;
      }
      if (v23)
      {
        __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
        __int128 v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 oslog]);

        id obj = v25;
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        {
          uint64_t v26 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
          uint64_t v27 = (void *)v26;
          uint64_t v28 = @"N";
          if (v21) {
            uint64_t v29 = v21;
          }
          else {
            uint64_t v29 = @"N";
          }
          *(_DWORD *)buf = 138543874;
          uint64_t v80 = v26;
          id v30 = v25;
          if (v67) {
            uint64_t v28 = @"Y";
          }
          __int16 v81 = 2114;
          id v82 = v29;
          __int16 v83 = 2114;
          __int128 v84 = v28;
          __int128 v31 = "%{public}@\n"
                "[AUTO-STAGER] {assetMetadataFromAssetCatalog} unable to determine key/value from set-catalog | setCatalo"
                "gKey:%{public}@ | setCatalogValue:%{public}@";
          uint32_t v32 = 32;
LABEL_18:
          _os_log_error_impl(&dword_0, v30, OS_LOG_TYPE_ERROR, v31, buf, v32);
        }

- (id)newSetLookupResult:(id)a3 forSetCatalog:(id)a4
{
  id v73 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 extendedStateQueue]);
  dispatch_assert_queue_V2(v8);

  id v68 = v6;
  id v9 = [v6 safeObjectForKey:@"Assets" ofClass:objc_opt_class(NSArray)];
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  __int128 v72 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int16 v69 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v92 = 0u;
  __int128 v93 = 0u;
  __int128 v94 = 0u;
  __int128 v95 = 0u;
  id obj = v10;
  id v11 = [obj countByEnumeratingWithState:&v92 objects:v102 count:16];
  id v12 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
  if (v11)
  {
    id v13 = v11;
    uint64_t v14 = *(void *)v93;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    uint64_t v70 = *(void *)v93;
    __int128 v71 = self;
    do
    {
      id v16 = 0LL;
      id v74 = v13;
      do
      {
        if (*(void *)v93 != v14) {
          objc_enumerationMutation(obj);
        }
        uint64_t v17 = *(void **)(*((void *)&v92 + 1) + 8LL * (void)v16);
        id v18 = objc_autoreleasePoolPush();
        if (-[__objc2_ivar_list doesMetatadaIndicateEmptyEntry:]( p_ivars[223],  "doesMetatadaIndicateEmptyEntry:",  v17))
        {
          uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
          uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 oslog]);

          id v21 = v20;
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
            BOOL v23 = (void *)objc_claimAutoreleasedReturnValue([v17 safeSummary]);
            *(_DWORD *)buf = 138543618;
            uint64_t v99 = v22;
            __int16 v100 = 2114;
            uint64_t v101 = v23;
            _os_log_impl( &dword_0,  v20,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[AUTO-STAGER] {newSetLookupResult} ignoring empty entry | assetMetadata:%{public}@",  buf,  0x16u);

            id v21 = v20;
          }

          goto LABEL_30;
        }

        __int128 v76 = v18;
        __int128 v77 = v16;
        __int128 v24 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
        __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v17 safeStringForKey:@"AssetSpecifier"]);
        uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v17 safeStringForKey:@"AssetVersion"]);
        id v27 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v24,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v73,  v25,  v26);

        id v78 = v17;
        __int128 v88 = 0u;
        __int128 v89 = 0u;
        __int128 v90 = 0u;
        __int128 v91 = 0u;
        uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager alreadyDownloadedDescriptors](self, "alreadyDownloadedDescriptors"));
        id v79 = v27;
        id v81 = [v28 countByEnumeratingWithState:&v88 objects:v97 count:16];
        if (!v81)
        {
          id v45 = 0LL;
          __int16 v43 = 0LL;
          uint64_t v44 = 0LL;
LABEL_27:

          goto LABEL_29;
        }

        uint64_t v29 = *(void *)v89;
        id v30 = &MobileAssetKeyManager__metaData.ivars;
        uint64_t v80 = *(void *)v89;
LABEL_11:
        uint64_t v31 = 0LL;
        while (1)
        {
          if (*(void *)v89 != v29) {
            objc_enumerationMutation(v28);
          }
          uint32_t v32 = *(void **)(*((void *)&v88 + 1) + 8 * v31);
          id v33 = v30[155];
          uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v27 assetType]);
          id v35 = (void *)objc_claimAutoreleasedReturnValue([v32 assetType]);
          uint64_t v36 = v28;
          id v37 = v30[155];
          id v38 = (void *)objc_claimAutoreleasedReturnValue([v27 assetSpecifier]);
          uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v32 assetSpecifier]);
          if (!-[__objc2_ivar_list stringIsEqual:to:](v37, "stringIsEqual:to:", v38, v39))
          {

            uint64_t v28 = v36;
            uint64_t v29 = v80;
LABEL_19:

            goto LABEL_20;
          }

          unint64_t v40 = v30[155];
          id v41 = (void *)objc_claimAutoreleasedReturnValue([v27 assetVersion]);
          id v42 = (void *)objc_claimAutoreleasedReturnValue([v32 assetVersion]);
          LOBYTE(v40) = -[__objc2_ivar_list stringIsEqual:to:](v40, "stringIsEqual:to:", v41, v42);

          id v30 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
          id v27 = v79;

          uint64_t v28 = v36;
          uint64_t v29 = v80;
LABEL_20:
          if (v81 == (id)++v31)
          {
            id v81 = [v28 countByEnumeratingWithState:&v88 objects:v97 count:16];
            if (v81) {
              goto LABEL_11;
            }
            id v45 = 0LL;
            __int16 v43 = 0LL;
            uint64_t v44 = 0LL;
            goto LABEL_25;
          }
        }

        id v45 = v32;

        if (v45)
        {
          uint64_t v46 = objc_claimAutoreleasedReturnValue([v45 metadata]);

          uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v45 assetId]);
          uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v45 assetType]);
          __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([v45 assetId]);
          id AutoLocalUrlFromTypeAndIdWithPurpose = getAutoLocalUrlFromTypeAndIdWithPurpose(v28, v47, 2LL, @"auto");
          __int16 v43 = (void *)objc_claimAutoreleasedReturnValue(AutoLocalUrlFromTypeAndIdWithPurpose);

          id v78 = (id)v46;
          id v27 = v79;
LABEL_25:
          uint64_t v14 = v70;
          self = v71;
          id v12 = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
          goto LABEL_27;
        }

        __int16 v43 = 0LL;
        uint64_t v44 = 0LL;
        uint64_t v14 = v70;
        self = v71;
        id v12 = &MobileAssetKeyManager__metaData.ivars;
LABEL_29:
        id v49 = [objc_alloc((Class)v12[192]) initWithFullAssetSelector:v27 withAssetID:v44 withLocalContentURL:v43 withAssetAttributes:v78 inhibitedFromEmergencyRemoval:0];
        id v50 = (void *)objc_claimAutoreleasedReturnValue([v49 fullAssetSelector]);
        __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v50 assetSpecifier]);
        -[NSMutableDictionary setSafeObject:forKey:](v72, "setSafeObject:forKey:", v49, v51);

        id v21 = (os_log_s *)v79;
        id v13 = v74;
        p_ivars = (__objc2_ivar_list **)(&MobileAssetKeyManager__metaData + 48);
        id v18 = v76;
        id v16 = v77;
LABEL_30:

        objc_autoreleasePoolPop(v18);
        id v16 = (char *)v16 + 1;
      }

      while (v16 != v13);
      id v13 = [obj countByEnumeratingWithState:&v92 objects:v102 count:16];
    }

    while (v13);
  }

  __int128 v86 = 0u;
  __int128 v87 = 0u;
  __int128 v84 = 0u;
  __int128 v85 = 0u;
  __int16 v52 = v72;
  id v53 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v52,  "countByEnumeratingWithState:objects:count:",  &v84,  v96,  16LL);
  if (v53)
  {
    id v54 = v53;
    uint64_t v55 = *(void *)v85;
    do
    {
      for (uint64_t i = 0LL; i != v54; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v85 != v55) {
          objc_enumerationMutation(v52);
        }
        id v57 = -[NSMutableDictionary safeObjectForKey:ofClass:]( v52,  "safeObjectForKey:ofClass:",  *(void *)(*((void *)&v84 + 1) + 8LL * (void)i),  objc_opt_class(v12[192]));
        uint64_t v58 = (void *)objc_claimAutoreleasedReturnValue(v57);
        if (v58) {
          -[NSMutableArray addObject:](v69, "addObject:", v58);
        }
      }

      id v54 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v52,  "countByEnumeratingWithState:objects:count:",  &v84,  v96,  16LL);
    }

    while (v54);
  }

  id v82 = objc_alloc(&OBJC_CLASS___MADAutoSetLookupResult);
  __int128 v59 = (void *)objc_claimAutoreleasedReturnValue([v68 safeStringForKey:@"CachedAssetSetId"]);
  id v60 = objc_alloc(&OBJC_CLASS___NSURL);
  id v61 = (void *)objc_claimAutoreleasedReturnValue([v68 safeStringForKey:@"DownloadedFromLive"]);
  uint64_t v62 = -[NSURL initWithString:](v60, "initWithString:", v61);
  id v63 = (void *)objc_claimAutoreleasedReturnValue([v68 safeDateForKey:@"lastTimeChecked"]);
  __int128 v64 = (void *)objc_claimAutoreleasedReturnValue([v68 safeDateForKey:@"postedDate"]);
  __int16 v65 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeSetJobConfiguration](self, "activeSetJobConfiguration"));
  uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([v65 autoAssetEntries]);
  id v83 = -[MADAutoSetLookupResult initForAssetType:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withRequestedAutoAssetEntries:withDiscoveredAtomicEntries:withCatalogFromPallasResponse:]( v82,  "initForAssetType:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCata logPostedDate:withRequestedAutoAssetEntries:withDiscoveredAtomicEntries:withCatalogFromPallasResponse:",  v73,  v59,  v62,  v63,  v64,  v66,  v69,  v68);

  return v83;
}

- (id)newSetLookupResultsForTargetOS
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  p_super = objc_alloc_init(&OBJC_CLASS___NSArray);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 persistedEntryIDs:@"newSetLookupResultsForTargetOS"]);

  if ([v8 count])
  {
    id v27 = v8;
    uint64_t v28 = p_super;
    __int128 v33 = 0u;
    __int128 v34 = 0u;
    __int128 v31 = 0u;
    __int128 v32 = 0u;
    id v9 = v8;
    id v30 = [v9 countByEnumeratingWithState:&v31 objects:v39 count:16];
    if (v30)
    {
      uint64_t v10 = *(void *)v32;
      uint64_t v29 = *(void *)v32;
      do
      {
        id v11 = 0LL;
        do
        {
          if (*(void *)v32 != v10) {
            objc_enumerationMutation(v9);
          }
          uint64_t v12 = *(void *)(*((void *)&v31 + 1) + 8LL * (void)v11);
          id v13 = objc_autoreleasePoolPush();
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
          id v15 = (void *)objc_claimAutoreleasedReturnValue( [v14 persistedEntry:v12 fromLocation:@"newSetLookupResultsForTargetOS"]);

          if (v15)
          {
            id v16 = [v15 secureCodedObjectForKey:@"setLookupResult" ofClass:objc_opt_class(MADAutoSetLookupResult)];
            uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
            if (v17)
            {
              -[NSMutableArray addObject:](v5, "addObject:", v17);
            }

            else
            {
              id v20 = v9;
              id v21 = v5;
              uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
              BOOL v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 oslog]);

              if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
              {
                __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
                *(_DWORD *)buf = 138543618;
                uint64_t v36 = v24;
                __int16 v37 = 2114;
                uint64_t v38 = v12;
                _os_log_error_impl( &dword_0,  v23,  OS_LOG_TYPE_ERROR,  "[%{public}@] {newSetLookupResultsForTargetOS} unable to load set-lookup-result | entryID:%{public}@",  buf,  0x16u);
              }

              id v5 = v21;
              id v9 = v20;
              uint64_t v10 = v29;
            }
          }

          else
          {
            id v18 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 oslog]);

            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
            {
              uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _updateLatestSummary](self, "_updateLatestSummary"));
              *(_DWORD *)buf = 138543618;
              uint64_t v36 = v19;
              __int16 v37 = 2114;
              uint64_t v38 = v12;
              _os_log_error_impl( &dword_0,  v17,  OS_LOG_TYPE_ERROR,  "%{public}@\n [AUTO-STAGER] {newSetLookupResultsForTargetOS} unable to retrieve set-lookup-result | entryID:%{public}@",  buf,  0x16u);
            }
          }

          objc_autoreleasePoolPop(v13);
          id v11 = (char *)v11 + 1;
        }

        while (v30 != v11);
        id v30 = [v9 countByEnumeratingWithState:&v31 objects:v39 count:16];
      }

      while (v30);
    }

    uint64_t v8 = v27;
    p_super = v28;
  }

  if (-[NSMutableArray count](v5, "count", v27, v28))
  {
    __int128 v25 = v5;

    p_super = &v25->super;
  }

  return p_super;
}

- (void)updateLookupResultsJustStaged:(id)a3
{
  id v80 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_assert_queue_V2(v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 persistedEntryIDs:@"updateLookupResultsJustStaged"]);

  if ([v7 count])
  {
    __int128 v99 = 0u;
    __int128 v100 = 0u;
    __int128 v97 = 0u;
    __int128 v98 = 0u;
    __int128 v77 = v7;
    id obj = v7;
    id v8 = [obj countByEnumeratingWithState:&v97 objects:v106 count:16];
    if (!v8) {
      goto LABEL_42;
    }
    id v9 = v8;
    uint64_t v10 = *(void *)v98;
    p_ivars = &MobileAssetKeyManager__metaData.ivars;
    id v79 = self;
    while (1)
    {
      for (uint64_t i = 0LL; i != v9; uint64_t i = (char *)i + 1)
      {
        id v13 = p_ivars;
        if (*(void *)v98 != v10) {
          objc_enumerationMutation(obj);
        }
        uint64_t v14 = *(void *)(*((void *)&v97 + 1) + 8LL * (void)i);
        context = objc_autoreleasePoolPush();
        id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](self, "persistedSetLookupResults"));
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 persistedEntry:v14 fromLocation:@"updateLookupResultsJustStaged"]);

        id v82 = v16;
        if (v16)
        {
          id v17 = [v16 secureCodedObjectForKey:@"setLookupResult" ofClass:objc_opt_class(MADAutoSetLookupResult)];
          id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
          os_log_t log = v18;
          if (v18)
          {
            p_ivars = v13;
            uint64_t v19 = v13[155];
            id v20 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetType](v18, "assetType"));
            id v21 = (void *)objc_claimAutoreleasedReturnValue([v80 assetType]);
            LODWORD(v19) = -[__objc2_ivar_list stringIsEqual:to:](v19, "stringIsEqual:to:", v20, v21);

            if ((_DWORD)v19)
            {
              __int128 v91 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
              __int128 v93 = 0u;
              __int128 v94 = 0u;
              __int128 v95 = 0u;
              __int128 v96 = 0u;
              id v90 = (id)objc_claimAutoreleasedReturnValue(-[os_log_s discoveredAtomicEntries](log, "discoveredAtomicEntries"));
              id v28 = [v90 countByEnumeratingWithState:&v93 objects:v101 count:16];
              uint64_t v29 = v80;
              id v92 = v28;
              if (!v28)
              {
LABEL_41:

                id v61 = objc_alloc(&OBJC_CLASS___MADAutoSetLookupResult);
                uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetType](log, "assetType"));
                id v63 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s catalogCachedAssetSetID](log, "catalogCachedAssetSetID"));
                __int128 v64 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s catalogDownloadedFromLive](log, "catalogDownloadedFromLive"));
                __int16 v65 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s catalogLastTimeChecked](log, "catalogLastTimeChecked"));
                uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s catalogPostedDate](log, "catalogPostedDate"));
                __int16 v67 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s requestedAutoAssetEntries](log, "requestedAutoAssetEntries"));
                id v68 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s autoAssetSetCatalog](log, "autoAssetSetCatalog"));
                id v69 = -[MADAutoSetLookupResult initForAssetType:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeChecked:withCatalogPostedDate:withRequestedAutoAssetEntries:withDiscoveredAtomicEntries:withCatalogFromPallasResponse:]( v61,  "initForAssetType:withCatalogCachedAssetSetID:withCatalogDownloadedFromLive:withCatalogLastTimeCh ecked:withCatalogPostedDate:withRequestedAutoAssetEntries:withDiscoveredAtomicEntries:withCatalo gFromPallasResponse:",  v62,  v63,  v64,  v65,  v66,  v67,  v91,  v68);

                [v82 persistSecureCodedObject:v69 forKey:@"setLookupResult"];
                uint64_t v70 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager persistedSetLookupResults](v79, "persistedSetLookupResults"));
                __int128 v71 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetType](log, "assetType"));
                __int128 v72 = (void *)objc_claimAutoreleasedReturnValue([v69 summary]);
                [v70 storePersistedEntry:v71 withEntrySummary:v72 fromLocation:@"updateLookupResultsJustStaged"];

                id v73 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s assetType](log, "assetType"));
                id v74 = objc_alloc(&OBJC_CLASS___NSString);
                __int128 v75 = (void *)objc_claimAutoreleasedReturnValue([v80 assetId]);
                __int128 v76 = -[NSString initWithFormat:]( v74,  "initWithFormat:",  @"set-lookup-result modified for just-staged descriptor | assetID:%@",  v75);
                -[MADAutoAssetStager _logPersistedSetLookupResult:operation:forPersistedEntryID:withSetLookupResult:message:]( v79,  "_logPersistedSetLookupResult:operation:forPersistedEntryID:withSetLookupResult:message:",  @"updateLookupResultsJustStaged",  @"ENTRY_MODIFY",  v73,  v69,  v76);

                objc_autoreleasePoolPop(context);
                goto LABEL_42;
              }

              uint64_t v30 = *(void *)v94;
              uint64_t v89 = *(void *)v94;
              while (2)
              {
                uint64_t v31 = 0LL;
LABEL_24:
                if (*(void *)v94 != v30) {
                  objc_enumerationMutation(v90);
                }
                __int128 v32 = *(MANAutoAssetSetAtomicEntry **)(*((void *)&v93 + 1) + 8 * v31);
                __int128 v33 = p_ivars[155];
                __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v29 assetType]);
                id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MANAutoAssetSetAtomicEntry fullAssetSelector](v32, "fullAssetSelector"));
                uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v35 assetType]);
                if (-[__objc2_ivar_list stringIsEqual:to:](v33, "stringIsEqual:to:", v34, v36))
                {
                  __int16 v37 = p_ivars[155];
                  uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v29 assetSpecifier]);
                  uint64_t v39 = v29;
                  unint64_t v40 = (void *)objc_claimAutoreleasedReturnValue(-[MANAutoAssetSetAtomicEntry fullAssetSelector](v32, "fullAssetSelector"));
                  uint64_t v41 = objc_claimAutoreleasedReturnValue([v40 assetSpecifier]);
                  id v42 = v37;
                  __int16 v43 = (void *)v41;
                  if (-[__objc2_ivar_list stringIsEqual:to:](v42, "stringIsEqual:to:", v38, v41))
                  {
                    __int128 v86 = v43;
                    __int128 v87 = v40;
                    __int128 v88 = v38;
                    uint64_t v44 = p_ivars[155];
                    id v45 = (void *)objc_claimAutoreleasedReturnValue([v39 assetVersion]);
                    uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue(-[MANAutoAssetSetAtomicEntry fullAssetSelector](v32, "fullAssetSelector"));
                    __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([v46 assetVersion]);
                    __int128 v85 = v45;
                    if (-[__objc2_ivar_list stringIsEqual:to:](v44, "stringIsEqual:to:", v45, v47))
                    {
                      __int128 v48 = (void *)objc_claimAutoreleasedReturnValue([v39 assetId]);
                      id v49 = (void *)objc_claimAutoreleasedReturnValue(-[MANAutoAssetSetAtomicEntry assetID](v32, "assetID"));
                      unsigned __int8 v81 = +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v48,  v49);

                      uint64_t v29 = v80;
                      p_ivars = &MobileAssetKeyManager__metaData.ivars;
                      uint64_t v30 = v89;
                      if ((v81 & 1) == 0)
                      {
                        id v50 = (void *)objc_claimAutoreleasedReturnValue([v80 assetType]);
                        __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v80 assetId]);
                        id AutoLocalUrlFromTypeAndIdWithPurpose = getAutoLocalUrlFromTypeAndIdWithPurpose( v50,  v51,  2LL,  @"auto");
                        id v53 = (void *)objc_claimAutoreleasedReturnValue(AutoLocalUrlFromTypeAndIdWithPurpose);

                        id v54 = objc_alloc(&OBJC_CLASS___MANAutoAssetSetAtomicEntry);
                        uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue(-[MANAutoAssetSetAtomicEntry fullAssetSelector](v32, "fullAssetSelector"));
                        uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue([v80 assetId]);
                        id v57 = (void *)objc_claimAutoreleasedReturnValue(-[MANAutoAssetSetAtomicEntry assetAttributes](v32, "assetAttributes"));
                        uint64_t v58 = -[MANAutoAssetSetAtomicEntry initWithFullAssetSelector:withAssetID:withLocalContentURL:withAssetAttributes:inhibitedFromEmergencyRemoval:]( v54,  "initWithFullAssetSelector:withAssetID:withLocalContentURL:withAssetAttributes:inhibitedF romEmergencyRemoval:",  v55,  v56,  v53,  v57,  0LL);

                        if (v58) {
                          __int128 v59 = v58;
                        }
                        else {
                          __int128 v59 = v32;
                        }
                        -[NSMutableArray addObject:](v91, "addObject:", v59);

                        uint64_t v29 = v80;
LABEL_36:
                        if (v92 == (id)++v31)
                        {
                          id v60 = [v90 countByEnumeratingWithState:&v93 objects:v101 count:16];
                          id v92 = v60;
                          if (!v60) {
                            goto LABEL_41;
                          }
                          continue;
                        }

                        goto LABEL_24;
                      }

+ (id)migrateMismatchedPersistedStateVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5
{
  return 0LL;
}

+ (id)migrateMismatchedPersistedTargetPromotionVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5
{
  return 0LL;
}

+ (id)migrateMismatchedPersistedSetPromotionVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5
{
  return 0LL;
}

+ (id)migrateMismatchedPersistedAvailableForStagingPromotionVersion:(id)a3 forEntryID:(id)a4 withMismatchedState:(id)a5
{
  return 0LL;
}

- (void)_logPersistedConfigLoad:(id)a3 lastStagingFromOSVersion:(id)a4 lastStagingFromBuildVersion:(id)a5 assetTargetOSVersion:(id)a6 assetTargetBuildVersion:(id)a7 usingModeByGroups:(BOOL)a8 candidateAssetCount:(unint64_t)a9 determinedAvailableAssetCount:(unint64_t)a10 activelyStagingAssetCount:(unint64_t)a11 awaitingStagingAssetCount:(unint64_t)a12 stagedAssetCount:(unint64_t)a13 stagedAssetTotalContentBytes:(unint64_t)a14 message:(id)a15
{
  BOOL v37 = a8;
  id v20 = a3;
  id v21 = a15;
  id v22 = a7;
  id v23 = a6;
  id v24 = a5;
  id v25 = a4;
  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v27 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v26 extendedStateQueue]);
  dispatch_assert_queue_V2(v27);

  id v28 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"lastStagingFrom[OSVersion:%@,BuildVersion:%@] | assetTarget[OSVersion:%@,BuildVersion:%@]",  v25,  v24,  v23,  v22);
  uint64_t v29 = objc_alloc(&OBJC_CLASS___NSString);
  uint64_t v30 = @"ALL";
  if (v37) {
    uint64_t v30 = @"BY-GROUP";
  }
  uint64_t v31 = v21;
  __int128 v32 = v20;
  __int128 v33 = -[NSString initWithFormat:]( v29,  "initWithFormat:",  @"targetMode:%@ | candidate:%llu | determinedAvailable:%llu | activelyStaging:%llu | awaitingStaging:%llu | staged:%llu(totalContentBytes:%llu)",  v30,  a9,  a10,  a11,  a12,  a13,  a14);
  __int128 v34 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  @"CONFIG_LOAD"));
  id v35 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  uint64_t v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 oslog]);

  if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138546946;
    uint64_t v39 = @"PERSISTED";
    __int16 v40 = 2114;
    uint64_t v41 = @"AUTO-STAGER";
    __int16 v42 = 2114;
    __int16 v43 = @"CONFIG_LOAD";
    __int16 v44 = 2114;
    id v45 = @"STAGR";
    __int16 v46 = 2114;
    __int128 v47 = @">----->";
    __int16 v48 = 2114;
    id v49 = v32;
    __int16 v50 = 2114;
    __int128 v51 = v31;
    __int16 v52 = 2114;
    id v53 = @"STAGR";
    __int16 v54 = 2114;
    uint64_t v55 = v34;
    __int16 v56 = 2114;
    id v57 = v28;
    __int16 v58 = 2114;
    __int128 v59 = @"STAGR";
    __int16 v60 = 2114;
    id v61 = v34;
    __int16 v62 = 2114;
    id v63 = v33;
    __int16 v64 = 2114;
    __int16 v65 = @"STAGR";
    __int16 v66 = 2114;
    __int16 v67 = @"<-----<";
    _os_log_impl( &dword_0,  v36,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) %{public}@\n #_%{public}@:(%{public}@) %{public}@\n #_%{public}@:%{public}@",  buf,  0x98u);
  }
}

- (void)_logPersistedEntry:(id)a3 operation:(id)a4 persistingDescriptor:(id)a5 withRepresentation:(int64_t)a6 message:(id)a7
{
  id v35 = a3;
  id v12 = a4;
  id v13 = a5;
  id v14 = a7;
  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v15 extendedStateQueue]);
  dispatch_assert_queue_V2(v16);

  id v17 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  v12));
  id v18 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v13 assetType]);
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v13 assetSpecifier]);
  id v21 = (void *)objc_claimAutoreleasedReturnValue([v13 assetVersion]);
  id v22 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v18,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v19,  v20,  v21);

  id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 persistedEntryID]);
  id v24 = +[MASAutoAssetSummary newAssetRepresentationName:]( &OBJC_CLASS___MASAutoAssetSummary,  "newAssetRepresentationName:",  a6);
  if (v23)
  {
    id v25 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 oslog]);

    id v27 = v35;
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      id v28 = [v13 newSummaryWithoutSelector];
      *(_DWORD *)buf = 138546690;
      BOOL v37 = @"PERSISTED";
      __int16 v38 = 2114;
      uint64_t v39 = @"AUTO-STAGER";
      __int16 v40 = 2114;
      id v41 = v12;
      __int16 v42 = 2114;
      __int16 v43 = @"STAGR";
      __int16 v44 = 2114;
      id v45 = @">----->";
      __int16 v46 = 2114;
      id v47 = v35;
      __int16 v48 = 2114;
      id v49 = v14;
      __int16 v50 = 2114;
      __int128 v51 = @"STAGR";
      __int16 v52 = 2114;
      id v53 = v17;
      __int16 v54 = 2114;
      uint64_t v55 = v23;
      __int16 v56 = 2114;
      id v57 = v24;
      __int16 v58 = 2114;
      id v59 = v28;
      __int16 v60 = 2114;
      id v61 = @"STAGR";
      __int16 v62 = 2114;
      id v63 = @"<-----<";
      _os_log_impl( &dword_0,  v26,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | [%{public}@] %{public}@\n #_%{public}@:%{public}@",  buf,  0x8Eu);
    }
  }

  else
  {
    uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v33 = v22;
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s diag](v26, "diag"));
    uint64_t v30 = objc_alloc(&OBJC_CLASS___NSString);
    __int128 v34 = v17;
    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v13 summary]);
    id v27 = v35;
    __int128 v32 = -[NSString initWithFormat:]( v30,  "initWithFormat:",  @"{%@:_logPersistedEntry} %@ | no persistedEntryID | %@ | [%@] assetDescriptor:%@",  v35,  v12,  v14,  v24,  v31);
    [v29 trackAnomaly:@"AUTO-STAGER" forReason:v32 withResult:6110 withError:0];

    id v17 = v34;
    id v22 = v33;
  }
}

- (void)_logPersistedRemovedEntry:(id)a3 removedDescriptor:(id)a4 message:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = (void *)objc_claimAutoreleasedReturnValue( +[MADAutoAssetPersisted persistedOperationSymbol:]( &OBJC_CLASS___MADAutoAssetPersisted,  "persistedOperationSymbol:",  @"ENTRY_REMOVE"));
  id v14 = objc_alloc(&OBJC_CLASS___MAAutoAssetSelector);
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v9 assetType]);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v9 assetSpecifier]);
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v9 assetVersion]);
  id v18 = -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]( v14,  "initForAssetType:withAssetSpecifier:matchingAssetVersion:",  v15,  v16,  v17);

  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 persistedEntryID]);
  if (v19)
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
    id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 oslog]);

    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      id v22 = [v9 newSummaryWithoutSelector];
      *(_DWORD *)buf = 138546434;
      id v28 = @"PERSISTED";
      __int16 v29 = 2114;
      uint64_t v30 = @"AUTO-STAGER";
      __int16 v31 = 2114;
      __int128 v32 = @"ENTRY_REMOVE";
      __int16 v33 = 2114;
      __int128 v34 = @"STAGR";
      __int16 v35 = 2114;
      uint64_t v36 = @">----->";
      __int16 v37 = 2114;
      id v38 = v8;
      __int16 v39 = 2114;
      id v40 = v10;
      __int16 v41 = 2114;
      __int16 v42 = @"STAGR";
      __int16 v43 = 2114;
      __int16 v44 = v13;
      __int16 v45 = 2114;
      __int16 v46 = v19;
      __int16 v47 = 2114;
      id v48 = v22;
      __int16 v49 = 2114;
      __int16 v50 = @"STAGR";
      __int16 v51 = 2114;
      __int16 v52 = @"<-----<";
      _os_log_impl( &dword_0,  v21,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][%{public}@][%{public}@]\n #_%{public}@:%{public}@ {%{public}@} %{public}@\n #_%{public}@:(%{public}@) [%{public}@] | %{public}@\n #_%{public}@:%{public}@",  buf,  0x84u);
    }
  }

  else
  {
    id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s diag](v21, "diag"));
    id v24 = objc_alloc(&OBJC_CLASS___NSString);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v9 summary]);
    uint64_t v26 = -[NSString initWithFormat:]( v24,  "initWithFormat:",  @"{%@:_logPersistedRemovedEntry} | no persistedEntryID to remove | %@ | removedDescriptor:%@",  v8,  v10,  v25);
    [v23 trackAnomaly:@"AUTO-STAGER" forReason:v26 withResult:6110 withError:0];
  }
}

- (id)_targetNameActiveRequired
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@(%@)",  @"ACTIVE",  @"REQUIRED");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:]( self,  "_targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:",  v5,  v6,  v7,  v8,  v9));

  return v10;
}

- (id)_targetNameActiveOptional
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@(%@)",  @"ACTIVE",  @"OPTIONAL");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:]( self,  "_targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:",  v5,  v6,  v7,  v8,  v9));

  return v10;
}

- (id)_targetNameActive
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:]( self,  "_targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:",  0LL,  v5,  v6,  v7,  v8));

  return v9;
}

- (id)_targetNameActive:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  dispatch_assert_queue_V2(v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v11 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:]( self,  "_targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:",  v4,  v7,  v8,  v9,  v10));

  return v11;
}

- (id)_targetNameActiveClient
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetOSVersion](self, "assetTargetOSVersion"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetBuildVersion](self, "assetTargetBuildVersion"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetTrainName](self, "assetTargetTrainName"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetRestoreVersion](self, "assetTargetRestoreVersion"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:]( self,  "_targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:",  @"CLIENT",  v5,  v6,  v7,  v8));

  return v9;
}

- (id)_targetNameAvailableForStaging:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 targetOSVersion]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 targetBuild]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 targetTrainName]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 targetRestoreVersion]);

  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:]( self,  "_targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:",  @"AVAILABLE",  v5,  v6,  v7,  v8));
  return v9;
}

- (id)_targetNameLookupResults:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 targetOSVersion]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 targetBuild]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 targetTrainName]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 targetRestoreVersion]);

  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:]( self,  "_targetName:forOSVersion:forBuildVersion:forTrainName:forRestoreVersion:",  @"LOOKUP_RESULTS",  v5,  v6,  v7,  v8));
  return v9;
}

- (id)_targetName:(id)a3 forOSVersion:(id)a4 forBuildVersion:(id)a5 forTrainName:(id)a6 forRestoreVersion:(id)a7
{
  id v11 = (__CFString *)a4;
  id v12 = (__CFString *)a5;
  id v13 = (__CFString *)a6;
  id v14 = (__CFString *)a7;
  if (a3)
  {
    id v15 = a3;
    id v16 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"[%@]", v15);
  }

  else
  {
    id v16 = &stru_355768;
  }

  id v17 = objc_alloc(&OBJC_CLASS___NSString);
  id v18 = @"N";
  if (v11) {
    uint64_t v19 = v11;
  }
  else {
    uint64_t v19 = @"N";
  }
  if (v12) {
    id v20 = v12;
  }
  else {
    id v20 = @"N";
  }
  if (v13) {
    id v21 = v13;
  }
  else {
    id v21 = @"N";
  }
  if (v14) {
    id v18 = v14;
  }
  id v22 = -[NSString initWithFormat:]( v17,  "initWithFormat:",  @">TARGET>OS:%@|build:%@|train:%@|restore:%@%@",  v19,  v20,  v21,  v18,  v16);

  return v22;
}

- (void)_logMilestoneFromLocation:(id)a3 resultingInEvent:(id)a4 forMilestoneActivity:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v11 extendedStateQueue]);
  dispatch_assert_queue_V2(v12);

  id v13 = objc_alloc(&OBJC_CLASS___NSString);
  if (v9) {
    id v14 = -[NSString initWithFormat:](v13, "initWithFormat:", @"{%@} | %@ | (%@)", v8, v9, v10);
  }
  else {
    id v14 = -[NSString initWithFormat:](v13, "initWithFormat:", @"{%@} (%@)", v8, v10, v133);
  }
  id v15 = v14;
  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 oslog]);

  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    id v18 = (NSString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager description](self, "description"));
    *(_DWORD *)buf = 138543618;
    __int128 v174 = v18;
    __int16 v175 = 2114;
    __int128 v176 = v15;
    _os_log_impl( &dword_0,  v17,  OS_LOG_TYPE_DEFAULT,  "%{public}@\n[AUTO-STAGER] (%{public}@) | MA_MILESTONE",  buf,  0x16u);
  }

  if (-[MADAutoAssetStager stagingClientUsingGroups](self, "stagingClientUsingGroups"))
  {
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingRequiredByTarget]( self,  "candidatesForStagingRequiredByTarget"));
    id v20 = [v19 count];

    id v135 = v10;
    id v136 = v8;
    __int128 v138 = v15;
    id v134 = v9;
    if (v20)
    {
      __int128 v165 = 0u;
      __int128 v166 = 0u;
      __int128 v163 = 0u;
      __int128 v164 = 0u;
      id v21 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingRequiredByTarget]( self,  "candidatesForStagingRequiredByTarget"));
      id v22 = [v21 countByEnumeratingWithState:&v163 objects:v181 count:16];
      if (v22)
      {
        id v23 = v22;
        uint64_t v24 = *(void *)v164;
        do
        {
          for (uint64_t i = 0LL; i != v23; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v164 != v24) {
              objc_enumerationMutation(v21);
            }
            uint64_t v26 = *(void *)(*((void *)&v163 + 1) + 8LL * (void)i);
            id v27 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingRequiredByTarget]( self,  "candidatesForStagingRequiredByTarget"));
            id v28 = [v27 safeObjectForKey:v26 ofClass:objc_opt_class(NSMutableArray)];
            __int16 v29 = (void *)objc_claimAutoreleasedReturnValue(v28);

            uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            __int16 v31 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 oslog]);

            if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
            {
              __int128 v32 = (NSString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveRequired](self, "_targetNameActiveRequired"));
              id v33 = [v29 count];
              *(_DWORD *)buf = 138544130;
              __int128 v174 = v138;
              __int16 v175 = 2114;
              __int128 v176 = v32;
              __int16 v177 = 2114;
              uint64_t v178 = v26;
              __int16 v179 = 2048;
              id v180 = v33;
              _os_log_impl( &dword_0,  v31,  OS_LOG_TYPE_DEFAULT,  "\n[AUTO-STAGER] (%{public}@) | [%{public}@] [%{public}@] (asset-descriptors) candidatesForStaging:%ld",  buf,  0x2Au);
            }
          }

          id v23 = [v21 countByEnumeratingWithState:&v163 objects:v181 count:16];
        }

        while (v23);
        id v10 = v135;
        id v8 = v136;
        id v15 = v138;
      }
    }

    else
    {
      uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v36 oslog]);

      if (os_log_type_enabled((os_log_t)v21, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        __int128 v174 = v15;
        _os_log_impl( &dword_0,  (os_log_t)v21,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-STAGER] (%{public}@) | [NO-TARGETS] [REQUIRED] (asset-descriptors) EMPTY candidatesForStagingRequiredByTarget",  buf,  0xCu);
      }
    }

    __int16 v37 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingOptionalByTarget]( self,  "candidatesForStagingOptionalByTarget"));
    id v38 = [v37 count];

    if (v38)
    {
      __int128 v161 = 0u;
      __int128 v162 = 0u;
      __int128 v159 = 0u;
      __int128 v160 = 0u;
      __int16 v39 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingOptionalByTarget]( self,  "candidatesForStagingOptionalByTarget"));
      id v40 = [v39 countByEnumeratingWithState:&v159 objects:v172 count:16];
      if (v40)
      {
        id v41 = v40;
        uint64_t v42 = *(void *)v160;
        do
        {
          for (j = 0LL; j != v41; j = (char *)j + 1)
          {
            if (*(void *)v160 != v42) {
              objc_enumerationMutation(v39);
            }
            uint64_t v44 = *(void *)(*((void *)&v159 + 1) + 8LL * (void)j);
            __int16 v45 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidatesForStagingOptionalByTarget]( self,  "candidatesForStagingOptionalByTarget"));
            id v46 = [v45 safeObjectForKey:v44 ofClass:objc_opt_class(NSMutableArray)];
            __int16 v47 = (void *)objc_claimAutoreleasedReturnValue(v46);

            id v48 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            __int16 v49 = (os_log_s *)objc_claimAutoreleasedReturnValue([v48 oslog]);

            if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
            {
              __int16 v50 = (NSString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveOptional](self, "_targetNameActiveOptional"));
              id v51 = [v47 count];
              *(_DWORD *)buf = 138544130;
              __int128 v174 = v138;
              __int16 v175 = 2114;
              __int128 v176 = v50;
              __int16 v177 = 2114;
              uint64_t v178 = v44;
              __int16 v179 = 2048;
              id v180 = v51;
              _os_log_impl( &dword_0,  v49,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-STAGER] (%{public}@) | [%{public}@] [%{public}@] (asset-descriptors) candidatesForStagingOptionalByTarget:%ld",  buf,  0x2Au);
            }
          }

          id v41 = [v39 countByEnumeratingWithState:&v159 objects:v172 count:16];
        }

        while (v41);
        id v10 = v135;
        id v8 = v136;
        id v15 = v138;
      }
    }

    else
    {
      __int16 v52 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int16 v39 = (void *)objc_claimAutoreleasedReturnValue([v52 oslog]);

      if (os_log_type_enabled((os_log_t)v39, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        __int128 v174 = v15;
        _os_log_impl( &dword_0,  (os_log_t)v39,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-STAGER] (%{public}@) | [NO-TARGETS] [OPTIONAL] (asset-descriptors) EMPTY candidatesForStagingOptionalByTarget",  buf,  0xCu);
      }
    }

    id v53 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( self,  "candidateSetConfigurationsRequiredByTarget"));
    id v54 = [v53 count];

    if (v54)
    {
      __int128 v157 = 0u;
      __int128 v158 = 0u;
      __int128 v155 = 0u;
      __int128 v156 = 0u;
      uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( self,  "candidateSetConfigurationsRequiredByTarget"));
      id v56 = [v55 countByEnumeratingWithState:&v155 objects:v171 count:16];
      if (v56)
      {
        id v57 = v56;
        uint64_t v58 = *(void *)v156;
        do
        {
          for (k = 0LL; k != v57; k = (char *)k + 1)
          {
            if (*(void *)v156 != v58) {
              objc_enumerationMutation(v55);
            }
            uint64_t v60 = *(void *)(*((void *)&v155 + 1) + 8LL * (void)k);
            id v61 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( self,  "candidateSetConfigurationsRequiredByTarget"));
            id v62 = [v61 safeObjectForKey:v60 ofClass:objc_opt_class(NSMutableArray)];
            id v63 = (void *)objc_claimAutoreleasedReturnValue(v62);

            __int16 v64 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            __int16 v65 = (os_log_s *)objc_claimAutoreleasedReturnValue([v64 oslog]);

            if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
            {
              __int16 v66 = (NSString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveRequired](self, "_targetNameActiveRequired"));
              id v67 = [v63 count];
              *(_DWORD *)buf = 138544130;
              __int128 v174 = v138;
              __int16 v175 = 2114;
              __int128 v176 = v66;
              __int16 v177 = 2114;
              uint64_t v178 = v60;
              __int16 v179 = 2048;
              id v180 = v67;
              _os_log_impl( &dword_0,  v65,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-STAGER] (%{public}@) | [%{public}@] [%{public}@] (set-configurations) candidateSetConfigurationsRe quiredByTarget:%ld",  buf,  0x2Au);
            }
          }

          id v57 = [v55 countByEnumeratingWithState:&v155 objects:v171 count:16];
        }

        while (v57);
        id v10 = v135;
        id v8 = v136;
        id v15 = v138;
      }
    }

    else
    {
      id v68 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v68 oslog]);

      if (os_log_type_enabled((os_log_t)v55, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        __int128 v174 = v15;
        _os_log_impl( &dword_0,  (os_log_t)v55,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-STAGER] (%{public}@) | [NO-TARGETS] [REQUIRED] (set-configurations) EMPTY candidateSetConfigurationsRequiredByTarget",  buf,  0xCu);
      }
    }

    id v69 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
    id v70 = [v69 count];

    if (v70)
    {
      __int128 v153 = 0u;
      __int128 v154 = 0u;
      __int128 v151 = 0u;
      __int128 v152 = 0u;
      __int128 v71 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
      id v72 = [v71 countByEnumeratingWithState:&v151 objects:v170 count:16];
      if (v72)
      {
        id v73 = v72;
        uint64_t v74 = *(void *)v152;
        do
        {
          for (m = 0LL; m != v73; m = (char *)m + 1)
          {
            if (*(void *)v152 != v74) {
              objc_enumerationMutation(v71);
            }
            uint64_t v76 = *(void *)(*((void *)&v151 + 1) + 8LL * (void)m);
            __int128 v77 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( self,  "candidateSetConfigurationsOptionalByTarget"));
            id v78 = [v77 safeObjectForKey:v76 ofClass:objc_opt_class(NSMutableArray)];
            id v79 = (void *)objc_claimAutoreleasedReturnValue(v78);

            id v80 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            unsigned __int8 v81 = (os_log_s *)objc_claimAutoreleasedReturnValue([v80 oslog]);

            if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
            {
              id v82 = (NSString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveOptional](self, "_targetNameActiveOptional"));
              id v83 = [v79 count];
              *(_DWORD *)buf = 138544130;
              __int128 v174 = v138;
              __int16 v175 = 2114;
              __int128 v176 = v82;
              __int16 v177 = 2114;
              uint64_t v178 = v76;
              __int16 v179 = 2048;
              id v180 = v83;
              _os_log_impl( &dword_0,  v81,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-STAGER] (%{public}@) | [%{public}@] [%{public}@] [OPTIONAL] (set-configurations) candidateSetConfi gurationsOptionalByTarget:%ld",  buf,  0x2Au);
            }
          }

          id v73 = [v71 countByEnumeratingWithState:&v151 objects:v170 count:16];
        }

        while (v73);
        id v10 = v135;
        id v8 = v136;
        id v15 = v138;
      }
    }

    else
    {
      __int128 v84 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int128 v71 = (void *)objc_claimAutoreleasedReturnValue([v84 oslog]);

      if (os_log_type_enabled((os_log_t)v71, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        __int128 v174 = v15;
        _os_log_impl( &dword_0,  (os_log_t)v71,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-STAGER] (%{public}@) | [NO-TARGETS] [OPTIONAL] (set-configurations) EMPTY candidateSetConfigurationsOptionalByTarget",  buf,  0xCu);
      }
    }

    __int128 v85 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager targetLookupResults](self, "targetLookupResults"));
    id v86 = [v85 count];

    if (v86)
    {
      __int128 v149 = 0u;
      __int128 v150 = 0u;
      __int128 v147 = 0u;
      __int128 v148 = 0u;
      id obj = (os_log_s *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager targetLookupResults](self, "targetLookupResults"));
      id v87 = -[os_log_s countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v147,  v169,  16LL);
      if (v87)
      {
        id v88 = v87;
        uint64_t v89 = *(void *)v148;
        id v90 = obj;
        do
        {
          for (n = 0LL; n != v88; n = (char *)n + 1)
          {
            if (*(void *)v148 != v89) {
              objc_enumerationMutation(v90);
            }
            uint64_t v92 = *(void *)(*((void *)&v147 + 1) + 8LL * (void)n);
            __int128 v93 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager targetLookupResults](self, "targetLookupResults"));
            id v94 = [v93 safeObjectForKey:v92 ofClass:objc_opt_class(MADAutoTargetLookupResults)];
            __int128 v95 = (void *)objc_claimAutoreleasedReturnValue(v94);

            __int128 v96 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            __int128 v97 = (os_log_s *)objc_claimAutoreleasedReturnValue([v96 oslog]);

            if (os_log_type_enabled(v97, OS_LOG_TYPE_DEFAULT))
            {
              __int128 v98 = (NSString *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager _targetNameLookupResults:]( self,  "_targetNameLookupResults:",  v95));
              __int128 v99 = (void *)objc_claimAutoreleasedReturnValue([v95 summary]);
              *(_DWORD *)buf = 138544130;
              __int128 v174 = v138;
              __int16 v175 = 2114;
              __int128 v176 = v98;
              __int16 v177 = 2114;
              uint64_t v178 = v92;
              __int16 v179 = 2114;
              id v180 = v99;
              _os_log_impl( &dword_0,  v97,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-STAGER] (%{public}@) | [%{public}@] [%{public}@] (target-lookup-results) targetLookupResults:%{public}@",  buf,  0x2Au);

              id v90 = obj;
            }
          }

          id v88 = -[os_log_s countByEnumeratingWithState:objects:count:]( v90,  "countByEnumeratingWithState:objects:count:",  &v147,  v169,  16LL);
        }

        while (v88);
        id v10 = v135;
        id v8 = v136;
        id v15 = v138;
      }
    }

    else
    {
      __int128 v100 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      uint64_t v101 = (os_log_s *)objc_claimAutoreleasedReturnValue([v100 oslog]);

      id obj = v101;
      if (os_log_type_enabled(v101, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        __int128 v174 = v15;
        _os_log_impl( &dword_0,  v101,  OS_LOG_TYPE_DEFAULT,  "\n[AUTO-STAGER] (%{public}@) | [NO-TARGETS] [COMMON] (target-lookup-results) EMPTY targetLookupResults",  buf,  0xCu);
      }
    }

    __int16 v102 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingRequiredByTarget]( self,  "availableForStagingRequiredByTarget"));
    id v103 = [v102 count];

    if (v103)
    {
      __int128 v145 = 0u;
      __int128 v146 = 0u;
      __int128 v143 = 0u;
      __int128 v144 = 0u;
      __int16 v104 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingRequiredByTarget]( self,  "availableForStagingRequiredByTarget"));
      id v105 = [v104 countByEnumeratingWithState:&v143 objects:v168 count:16];
      if (v105)
      {
        id v106 = v105;
        uint64_t v107 = *(void *)v144;
        do
        {
          for (iuint64_t i = 0LL; ii != v106; iuint64_t i = (char *)ii + 1)
          {
            if (*(void *)v144 != v107) {
              objc_enumerationMutation(v104);
            }
            uint64_t v109 = *(void *)(*((void *)&v143 + 1) + 8LL * (void)ii);
            __int128 v110 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingRequiredByTarget]( self,  "availableForStagingRequiredByTarget"));
            id v111 = [v110 safeObjectForKey:v109 ofClass:objc_opt_class(NSMutableArray)];
            __int128 v112 = (void *)objc_claimAutoreleasedReturnValue(v111);

            __int128 v113 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            uint64_t v114 = (os_log_s *)objc_claimAutoreleasedReturnValue([v113 oslog]);

            if (os_log_type_enabled(v114, OS_LOG_TYPE_DEFAULT))
            {
              __int128 v115 = (NSString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveRequired](self, "_targetNameActiveRequired"));
              id v116 = [v112 count];
              *(_DWORD *)buf = 138544130;
              __int128 v174 = v138;
              __int16 v175 = 2114;
              __int128 v176 = v115;
              __int16 v177 = 2114;
              uint64_t v178 = v109;
              __int16 v179 = 2048;
              id v180 = v116;
              _os_log_impl( &dword_0,  v114,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-STAGER] (%{public}@) | [%{public}@] [%{public}@] (asset-descriptors) availableForStagingRequiredByTarget:%ld",  buf,  0x2Au);
            }
          }

          id v106 = [v104 countByEnumeratingWithState:&v143 objects:v168 count:16];
        }

        while (v106);
        id v10 = v135;
        id v8 = v136;
        id v15 = v138;
      }
    }

    else
    {
      id v117 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int16 v104 = (void *)objc_claimAutoreleasedReturnValue([v117 oslog]);

      if (os_log_type_enabled((os_log_t)v104, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        __int128 v174 = v15;
        _os_log_impl( &dword_0,  (os_log_t)v104,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-STAGER] (%{public}@) | [NO-TARGETS] [REQUIRED] (asset-descriptors) EMPTY availableForStagingRequiredByTarget",  buf,  0xCu);
      }
    }

    __int16 v118 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingOptionalByTarget]( self,  "availableForStagingOptionalByTarget"));
    id v119 = [v118 count];

    if (v119)
    {
      __int128 v141 = 0u;
      __int128 v142 = 0u;
      __int128 v139 = 0u;
      __int128 v140 = 0u;
      __int16 v35 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingOptionalByTarget]( self,  "availableForStagingOptionalByTarget"));
      id v120 = [v35 countByEnumeratingWithState:&v139 objects:v167 count:16];
      if (v120)
      {
        id v121 = v120;
        uint64_t v122 = *(void *)v140;
        do
        {
          for (jj = 0LL; jj != v121; jj = (char *)jj + 1)
          {
            if (*(void *)v140 != v122) {
              objc_enumerationMutation(v35);
            }
            uint64_t v124 = *(void *)(*((void *)&v139 + 1) + 8LL * (void)jj);
            __int128 v125 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager availableForStagingOptionalByTarget]( self,  "availableForStagingOptionalByTarget"));
            id v126 = [v125 safeObjectForKey:v124 ofClass:objc_opt_class(NSMutableArray)];
            __int128 v127 = (void *)objc_claimAutoreleasedReturnValue(v126);

            __int128 v128 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
            id v129 = (os_log_s *)objc_claimAutoreleasedReturnValue([v128 oslog]);

            if (os_log_type_enabled(v129, OS_LOG_TYPE_DEFAULT))
            {
              __int128 v130 = (NSString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActiveOptional](self, "_targetNameActiveOptional"));
              id v131 = [v127 count];
              *(_DWORD *)buf = 138544130;
              __int128 v174 = v138;
              __int16 v175 = 2114;
              __int128 v176 = v130;
              __int16 v177 = 2114;
              uint64_t v178 = v124;
              __int16 v179 = 2048;
              id v180 = v131;
              _os_log_impl( &dword_0,  v129,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-STAGER] (%{public}@) | [%{public}@] [%{public}@] (asset-descriptors) availableForStagingOptionalByTarget:%ld",  buf,  0x2Au);
            }
          }

          id v121 = [v35 countByEnumeratingWithState:&v139 objects:v167 count:16];
        }

        while (v121);
        id v10 = v135;
        id v8 = v136;
        id v9 = v134;
        id v15 = v138;
        goto LABEL_101;
      }
    }

    else
    {
      __int128 v132 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
      __int16 v35 = (void *)objc_claimAutoreleasedReturnValue([v132 oslog]);

      if (os_log_type_enabled((os_log_t)v35, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        __int128 v174 = v15;
        _os_log_impl( &dword_0,  (os_log_t)v35,  OS_LOG_TYPE_DEFAULT,  "\n [AUTO-STAGER] (%{public}@) | [NO-TARGETS] [OPTIONAL] (asset-descriptors) EMPTY availableForStagingOptionalByTarget",  buf,  0xCu);
      }
    }

    id v9 = v134;
    goto LABEL_101;
  }

  __int128 v34 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager logger](self, "logger"));
  __int16 v35 = (void *)objc_claimAutoreleasedReturnValue([v34 oslog]);

  if (os_log_type_enabled((os_log_t)v35, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    __int128 v174 = v15;
    _os_log_impl(&dword_0, (os_log_t)v35, OS_LOG_TYPE_DEFAULT, "\n[AUTO-STAGER] (%{public}@) | [ALL-MODE]", buf, 0xCu);
  }

- (id)description
{
  id v2 = self;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectors](self, "eliminationSelectors"));
  if ([v3 count]) {
    goto LABEL_4;
  }
  id v4 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager eliminationSetConfigurationCurrentJob]( v2,  "eliminationSetConfigurationCurrentJob"));
  if (v4)
  {

LABEL_4:
LABEL_5:
    id v5 = @"Y";
    goto LABEL_6;
  }

  id v51 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager eliminationSelectorsAcknowledged](v2, "eliminationSelectorsAcknowledged"));
  id v52 = [v51 count];

  if (v52) {
    goto LABEL_5;
  }
  id v5 = @"N";
LABEL_6:
  id v103 = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetGroupNames](v2, "assetTargetGroupNames"));
  id v7 = [v6 count];

  id v106 = v2;
  if (v7)
  {
    __int128 v114 = 0u;
    __int128 v115 = 0u;
    __int128 v112 = 0u;
    __int128 v113 = 0u;
    id v8 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager assetTargetGroupNames](v2, "assetTargetGroupNames"));
    id v9 = [v8 countByEnumeratingWithState:&v112 objects:v117 count:16];
    if (v9)
    {
      id v10 = v9;
      id v11 = 0LL;
      uint64_t v12 = *(void *)v113;
      do
      {
        for (uint64_t i = 0LL; i != v10; uint64_t i = (char *)i + 1)
        {
          id v14 = v11;
          if (*(void *)v113 != v12) {
            objc_enumerationMutation(v8);
          }
          id v15 = (__CFString *)*(id *)(*((void *)&v112 + 1) + 8LL * (void)i);
          id v16 = @"REQUIRED";
          if ((+[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v15,  @"STAGE_GROUP_REQUIRED") & 1) != 0 || (id v16 = @"OPTIONAL",  +[SUCore stringIsEqual:to:]( &OBJC_CLASS___SUCore,  "stringIsEqual:to:",  v15,  @"STAGE_GROUP_OPTIONAL")))
          {

            id v15 = (__CFString *)v16;
          }

          if (v14)
          {
            id v11 = v14;
            -[NSMutableString appendFormat:](v14, "appendFormat:", @",%@", v15);
          }

          else
          {
            id v11 = -[NSMutableString initWithString:](objc_alloc(&OBJC_CLASS___NSMutableString), "initWithString:", v15);
          }
        }

        id v10 = [v8 countByEnumeratingWithState:&v112 objects:v117 count:16];
      }

      while (v10);
    }

    else
    {
      id v11 = 0LL;
    }

    id v2 = v106;
  }

  else
  {
    id v11 = 0LL;
  }

  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager targetLookupResults](v2, "targetLookupResults"));
  id v18 = [v17 count];

  __int16 v104 = v11;
  if (v18)
  {
    id v105 = -[NSMutableString initWithString:](objc_alloc(&OBJC_CLASS___NSMutableString), "initWithString:", @"(");
    __int128 v108 = 0u;
    __int128 v109 = 0u;
    __int128 v110 = 0u;
    __int128 v111 = 0u;
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager targetLookupResults](v2, "targetLookupResults"));
    id v20 = [v19 countByEnumeratingWithState:&v108 objects:v116 count:16];
    if (v20)
    {
      id v21 = v20;
      uint64_t v22 = *(void *)v109;
      char v23 = 1;
      do
      {
        for (j = 0LL; j != v21; j = (char *)j + 1)
        {
          if (*(void *)v109 != v22) {
            objc_enumerationMutation(v19);
          }
          uint64_t v25 = *(void *)(*((void *)&v108 + 1) + 8LL * (void)j);
          uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager targetLookupResults](v2, "targetLookupResults"));
          id v27 = [v26 safeObjectForKey:v25 ofClass:objc_opt_class(MADAutoTargetLookupResults)];
          id v28 = (void *)objc_claimAutoreleasedReturnValue(v27);

          if (v28)
          {
            if ((v23 & 1) == 0) {
              -[NSMutableString appendString:](v105, "appendString:", @",");
            }
            __int16 v29 = (void *)objc_claimAutoreleasedReturnValue([v28 setLookupResults]);
            -[NSMutableString appendFormat:](v105, "appendFormat:", @"%@:%ld", v25, [v29 count]);

            char v23 = 0;
          }

          id v2 = v106;
        }

        id v21 = [v19 countByEnumeratingWithState:&v108 objects:v116 count:16];
      }

      while (v21);
    }

    -[NSMutableString appendString:](v105, "appendString:", @""));
    id v11 = v104;
  }

  else
  {
    id v105 = (NSMutableString *)@"N";
  }

  unsigned int v30 = -[MADAutoAssetStager stagingClientUsingGroups](v2, "stagingClientUsingGroups");
  __int16 v31 = @"ALL-MODE";
  if (v30) {
    __int16 v31 = @"GROUP-MODE";
  }
  __int128 v96 = v31;
  uint64_t v32 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromOSVersion](v2, "stagingFromOSVersion"));
  if (v32) {
    id v33 = (const __CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromOSVersion](v2, "stagingFromOSVersion"));
  }
  else {
    id v33 = @"N";
  }
  uint64_t v101 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](v2, "stagingFromBuildVersion"));
  if (v101) {
    __int128 v34 = (const __CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingFromBuildVersion](v2, "stagingFromBuildVersion"));
  }
  else {
    __int128 v34 = @"N";
  }
  __int128 v99 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager _targetNameActive](v2, "_targetNameActive"));
  __int128 v98 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDetermineRequests](v2, "stagingClientDetermineRequests"));
  id v90 = [v98 count];
  if (-[MADAutoAssetStager stagingClientUsingGroups](v2, "stagingClientUsingGroups")) {
    uint64_t v35 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientDownloadRequest](v2, "stagingClientDownloadRequest"));
  }
  else {
    uint64_t v35 = objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientRequest](v2, "stagingClientRequest"));
  }
  __int128 v97 = (void *)v35;
  if (v35) {
    uint64_t v36 = @"Y";
  }
  else {
    uint64_t v36 = @"N";
  }
  id v87 = v36;
  __int128 v95 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](v2, "stagingClientName"));
  uint64_t v107 = (void *)v32;
  __int16 v102 = (__CFString *)v33;
  __int128 v100 = (__CFString *)v34;
  if (v95) {
    id v94 = (__CFString *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager stagingClientName](v2, "stagingClientName"));
  }
  else {
    id v94 = @"N";
  }
  __int128 v93 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeSetJobConfiguration](v2, "activeSetJobConfiguration"));
  if (v93) {
    __int16 v37 = @"Y";
  }
  else {
    __int16 v37 = @"N";
  }
  __int128 v84 = v37;
  uint64_t v92 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager activeJobDescriptor](v2, "activeJobDescriptor"));
  if (v92) {
    id v38 = @"Y";
  }
  else {
    id v38 = @"N";
  }
  id v82 = v38;
  __int128 v91 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager alreadyDownloadedDescriptors](v2, "alreadyDownloadedDescriptors"));
  id v80 = [v91 count];
  uint64_t v89 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setConfigurations](v2, "setConfigurations"));
  id v79 = [v89 count];
  id v88 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setTargets](v2, "setTargets"));
  id v77 = [v88 count];
  id v86 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager scheduledJobs](v2, "scheduledJobs"));
  id v75 = [v86 count];
  __int128 v85 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidatesForStagingRequiredByTarget](v2, "candidatesForStagingRequiredByTarget"));
  id v73 = -[MADAutoAssetStager _countOfEntriesDictionaryOfArray:](v2, "_countOfEntriesDictionaryOfArray:", v85);
  id v83 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidatesForStagingOptionalByTarget](v2, "candidatesForStagingOptionalByTarget"));
  id v72 = -[MADAutoAssetStager _countOfEntriesDictionaryOfArray:](v2, "_countOfEntriesDictionaryOfArray:", v83);
  unsigned __int8 v81 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidatesForStaging](v2, "candidatesForStaging"));
  id v70 = [v81 count];
  id v78 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsRequiredByTarget]( v2,  "candidateSetConfigurationsRequiredByTarget"));
  id v68 = -[MADAutoAssetStager _countOfEntriesDictionaryOfArray:](v2, "_countOfEntriesDictionaryOfArray:", v78);
  uint64_t v76 = (void *)objc_claimAutoreleasedReturnValue( -[MADAutoAssetStager candidateSetConfigurationsOptionalByTarget]( v2,  "candidateSetConfigurationsOptionalByTarget"));
  id v66 = -[MADAutoAssetStager _countOfEntriesDictionaryOfArray:](v2, "_countOfEntriesDictionaryOfArray:", v76);
  uint64_t v74 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager candidateSetConfigurations](v2, "candidateSetConfigurations"));
  id v39 = [v74 count];
  if (v11) {
    id v40 = (const __CFString *)v11;
  }
  else {
    id v40 = @"N";
  }
  id v63 = v40;
  id v64 = v39;
  __int128 v71 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager setLookupResults](v2, "setLookupResults"));
  id v61 = [v71 count];
  id v69 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager baseForStagingDescriptors](v2, "baseForStagingDescriptors"));
  id v60 = [v69 count];
  id v67 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager determiningBySelector](v2, "determiningBySelector"));
  id v58 = [v67 count];
  __int16 v65 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingRequiredByTarget](v2, "availableForStagingRequiredByTarget"));
  id v56 = -[MADAutoAssetStager _countOfEntriesDictionaryOfArray:](v2, "_countOfEntriesDictionaryOfArray:", v65);
  id v62 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStagingOptionalByTarget](v2, "availableForStagingOptionalByTarget"));
  id v55 = -[MADAutoAssetStager _countOfEntriesDictionaryOfArray:](v2, "_countOfEntriesDictionaryOfArray:", v62);
  id v59 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager availableForStaging](v2, "availableForStaging"));
  id v54 = [v59 count];
  id v57 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager awaitingStagingAttempt](v2, "awaitingStagingAttempt"));
  id v53 = [v57 count];
  id v41 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager successfullyStaged](v2, "successfullyStaged"));
  id v42 = [v41 count];
  if (-[MADAutoAssetStager alwaysPromoteStagedAssets](v2, "alwaysPromoteStagedAssets")) {
    __int16 v43 = @"Y";
  }
  else {
    __int16 v43 = @"N";
  }
  id v44 = -[MADAutoAssetStager overallStagedTotalExpectedBytes](v2, "overallStagedTotalExpectedBytes");
  id v45 = -[MADAutoAssetStager overallStagedDownloadedSoFarBytes](v2, "overallStagedDownloadedSoFarBytes");
  if (-[MADAutoAssetStager stagingClientChosen](v2, "stagingClientChosen")) {
    id v46 = @"Y";
  }
  else {
    id v46 = @"N";
  }
  if (-[MADAutoAssetStager stagingClientUsingGroups](v2, "stagingClientUsingGroups")) {
    __int16 v47 = @"Y";
  }
  else {
    __int16 v47 = @"N";
  }
  if (-[MADAutoAssetStager stagingClientCompleteOnceRequired](v2, "stagingClientCompleteOnceRequired")) {
    id v48 = @"Y";
  }
  else {
    id v48 = @"N";
  }
  __int16 v49 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"\n>>> [AUTO-STAGER] >>>\n    stagingFrom: [%@] OSVersion:%@ | BuildVersion:%@\n   activeTarget: %@\n  stagingClient: Determines:%ld | DownloadRequest:%@ | Name:%@\n         active: Config:%@ | Job:%@\n  nowDownloaded: %ld\n            set: Configs:%ld | Targets:%ld\n      scheduled: Jobs:%ld\ncandidateAssets: RequiredByTarget:%ld | OptionalByTarget:%ld | Available:%ld\n  candidateSets: RequiredByTarget:%ld | OptionalByTarget:%ld | Configurations:%ld\n  lookupResults: GroupNames:%@ | [GROUP]SetLookups:%@ | [ALL]SetLookups:%ld\n     baseAssets: ForStaging:%ld\n    determining: BySelector:%ld\navailableAssets: RequiredByTarget:%ld | OptionalByTarget:%ld | Available:%ld\n  stagingCounts: awaiting:%ld | staged:%ld\n       internal: alwaysPromote:%@\n  overallStaged: TotalExpectedBytes:%lld | DownloadedSoFarBytes:%lld\n    elimination: %@\n    stagingMode: Chosen:%@ | UsingGroups:%@ | OnceRequired:%@\n<<<]",  v96,  v102,  v100,  v99,  v90,  v87,  v94,  v84,  v82,  v80,  v79,  v77,  v75,  v73,  v72,  v70,  v68,  v66,  v64,  v63,  v105,  v61,  v60,  v58,  v56,  v55,  v54,  v53,  v42,  v43,  v44,  v45,  v103,  v46,  v47,  v48));

  if (v95) {
  if (v101)
  }

  if (v107) {
  return v49;
  }
}

- (id)_updateLatestSummary
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager autoStagerFSM](self, "autoStagerFSM"));
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 extendedStateQueue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[MADAutoAssetStager summary](self, "summary"));
  -[MADAutoAssetStager setLatestSafeSummary:](self, "setLatestSafeSummary:", v5);

  return -[MADAutoAssetStager latestSafeSummary](self, "latestSafeSummary");
}

- (int64_t)_countOfEntriesDictionaryOfArray:(id)a3
{
  id v3 = a3;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    id v5 = v4;
    int64_t v6 = 0LL;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (uint64_t i = 0LL; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v3);
        }
        id v9 = [v3 safeObjectForKey:*(void *)(*((void *)&v12 + 1) + 8 * (void)i) ofClass:objc_opt_class(NSArray)];
        id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
        v6 += (int64_t)[v10 count];
      }

      id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v5);
  }

  else
  {
    int64_t v6 = 0LL;
  }

  return v6;
}

+ (void)setPersistedStateCaching:(BOOL)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 autoStagerFSM]);
  int64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __47__MADAutoAssetStager_setPersistedStateCaching___block_invoke;
  block[3] = &unk_34E4B8;
  id v9 = v4;
  BOOL v10 = a3;
  id v7 = v4;
  dispatch_sync(v6, block);
}

void __47__MADAutoAssetStager_setPersistedStateCaching___block_invoke(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) persistedState]);
  [v2 flushPersistedStateCacheAndSetCachingBehaviour:*(unsigned __int8 *)(a1 + 40)];

  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) persistedTargetLookupResults]);
  [v3 flushPersistedStateCacheAndSetCachingBehaviour:*(unsigned __int8 *)(a1 + 40)];

  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) persistedSetLookupResults]);
  [v4 flushPersistedStateCacheAndSetCachingBehaviour:*(unsigned __int8 *)(a1 + 40)];

  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) persistedAvailableForStagingByTarget]);
  [v5 flushPersistedStateCacheAndSetCachingBehaviour:*(unsigned __int8 *)(a1 + 40)];
}

+ (void)shutdown
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[MADAutoAssetStager autoAssetStager](&OBJC_CLASS___MADAutoAssetStager, "autoAssetStager"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 logger]);
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 oslog]);

  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( &dword_0,  v4,  OS_LOG_TYPE_DEFAULT,  "{AUTO-STAGER:shutdown}: Dispatching shutdown request for autoAssetStager",  buf,  2u);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v2 autoStagerFSM]);
  int64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v5 extendedStateQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = __30__MADAutoAssetStager_shutdown__block_invoke;
  block[3] = &unk_34DBC0;
  id v7 = v2;
  id v11 = v7;
  dispatch_sync(v6, block);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 logger]);
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 oslog]);

  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( &dword_0,  v9,  OS_LOG_TYPE_DEFAULT,  "{AUTO-STAGER:shutdown}: Successfully shut down autoAssetStager",  buf,  2u);
  }
}

void __30__MADAutoAssetStager_shutdown__block_invoke(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logger]);
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 oslog]);

  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int64_t v6 = 0;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "{AUTO-STAGER:shutdown}: Shutdown request running on queue", v6, 2u);
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) autoStagerFSM]);
  id v5 = (dispatch_object_s *)objc_claimAutoreleasedReturnValue([v4 extendedStateQueue]);
  dispatch_suspend(v5);
}

- (NSDictionary)stateTable
{
  return self->_stateTable;
}

- (void)setAutoStagerFSM:(id)a3
{
}

- (MADAutoAssetPersisted)persistedTargetLookupResults
{
  return self->_persistedTargetLookupResults;
}

- (MADAutoAssetPersisted)persistedSetLookupResults
{
  return self->_persistedSetLookupResults;
}

- (void)setPersistedSetLookupResults:(id)a3
{
}

- (MADAutoAssetPersisted)persistedAvailableForStagingByTarget
{
  return self->_persistedAvailableForStagingByTarget;
}

- (NSString)latestSafeSummary
{
  return self->_latestSafeSummary;
}

- (void)setLatestSafeSummary:(id)a3
{
}

- (void)setStagingFromOSVersion:(id)a3
{
}

- (void)setStagingFromBuildVersion:(id)a3
{
}

- (BOOL)alwaysPromoteStagedAssets
{
  return self->_alwaysPromoteStagedAssets;
}

- (void)setAlwaysPromoteStagedAssets:(BOOL)a3
{
  self->_alwaysPromoteStagedAssets = a3;
}

- (void)setAssetTargetOSVersion:(id)a3
{
}

- (void)setAssetTargetBuildVersion:(id)a3
{
}

- (NSString)assetTargetTrainName
{
  return self->_assetTargetTrainName;
}

- (void)setAssetTargetTrainName:(id)a3
{
}

- (NSString)assetTargetRestoreVersion
{
  return self->_assetTargetRestoreVersion;
}

- (void)setAssetTargetRestoreVersion:(id)a3
{
}

- (NSArray)assetTargetGroupNames
{
  return self->_assetTargetGroupNames;
}

- (void)setAssetTargetGroupNames:(id)a3
{
}

- (NSDictionary)activeTargetUpdateAttributes
{
  return self->_activeTargetUpdateAttributes;
}

- (void)setActiveTargetUpdateAttributes:(id)a3
{
}

- (NSMutableDictionary)stagingClientDetermineRequests
{
  return self->_stagingClientDetermineRequests;
}

- (void)setStagingClientDetermineRequests:(id)a3
{
}

- (MADAutoAssetClientRequest)stagingClientDownloadRequest
{
  return self->_stagingClientDownloadRequest;
}

- (void)setStagingClientDownloadRequest:(id)a3
{
}

- (NSString)stagingClientName
{
  return self->_stagingClientName;
}

- (void)setStagingClientName:(id)a3
{
}

- (MADAutoSetConfiguration)activeSetJobConfiguration
{
  return self->_activeSetJobConfiguration;
}

- (void)setActiveSetJobConfiguration:(id)a3
{
}

- (void)setActiveJobDescriptor:(id)a3
{
}

- (NSArray)alreadyDownloadedDescriptors
{
  return self->_alreadyDownloadedDescriptors;
}

- (void)setAlreadyDownloadedDescriptors:(id)a3
{
}

- (NSArray)setConfigurations
{
  return self->_setConfigurations;
}

- (void)setSetConfigurations:(id)a3
{
}

- (NSArray)setTargets
{
  return self->_setTargets;
}

- (void)setSetTargets:(id)a3
{
}

- (NSArray)scheduledJobs
{
  return self->_scheduledJobs;
}

- (void)setScheduledJobs:(id)a3
{
}

- (NSMutableDictionary)candidatesForStagingRequiredByTarget
{
  return self->_candidatesForStagingRequiredByTarget;
}

- (void)setCandidatesForStagingRequiredByTarget:(id)a3
{
}

- (NSMutableDictionary)candidatesForStagingOptionalByTarget
{
  return self->_candidatesForStagingOptionalByTarget;
}

- (void)setCandidatesForStagingOptionalByTarget:(id)a3
{
}

- (NSMutableDictionary)candidateSetConfigurationsRequiredByTarget
{
  return self->_candidateSetConfigurationsRequiredByTarget;
}

- (void)setCandidateSetConfigurationsRequiredByTarget:(id)a3
{
}

- (NSMutableDictionary)candidateSetConfigurationsOptionalByTarget
{
  return self->_candidateSetConfigurationsOptionalByTarget;
}

- (void)setCandidateSetConfigurationsOptionalByTarget:(id)a3
{
}

- (NSMutableArray)candidateSetConfigurations
{
  return self->_candidateSetConfigurations;
}

- (void)setCandidateSetConfigurations:(id)a3
{
}

- (NSMutableDictionary)targetLookupResults
{
  return self->_targetLookupResults;
}

- (void)setTargetLookupResults:(id)a3
{
}

- (NSMutableDictionary)setLookupResults
{
  return self->_setLookupResults;
}

- (void)setSetLookupResults:(id)a3
{
}

- (NSMutableArray)baseForStagingDescriptors
{
  return self->_baseForStagingDescriptors;
}

- (void)setBaseForStagingDescriptors:(id)a3
{
}

- (NSMutableDictionary)availableForStagingRequiredByTarget
{
  return self->_availableForStagingRequiredByTarget;
}

- (void)setAvailableForStagingRequiredByTarget:(id)a3
{
}

- (NSMutableDictionary)availableForStagingOptionalByTarget
{
  return self->_availableForStagingOptionalByTarget;
}

- (void)setAvailableForStagingOptionalByTarget:(id)a3
{
}

- (int64_t)overallStagedTotalExpectedBytes
{
  return self->_overallStagedTotalExpectedBytes;
}

- (int64_t)overallStagedDownloadedSoFarBytes
{
  return self->_overallStagedDownloadedSoFarBytes;
}

- (int64_t)currentStagedLastWrittenBytes
{
  return self->_currentStagedLastWrittenBytes;
}

- (void)setCurrentStagedLastWrittenBytes:(int64_t)a3
{
  self->_currentStagedLastWrittenBytes = a3;
}

- (int64_t)currentStagedRemainingBytes
{
  return self->_currentStagedRemainingBytes;
}

- (void)setCurrentStagedRemainingBytes:(int64_t)a3
{
  self->_currentStagedRemainingBytes = a3;
}

- (MADAutoSetConfiguration)eliminationSetConfigurationCurrentJob
{
  return self->_eliminationSetConfigurationCurrentJob;
}

- (void)setEliminationSetConfigurationCurrentJob:(id)a3
{
}

- (void)setStatisticsClientRepliesSuccess:(id)a3
{
}

- (MANAutoAssetControlStatisticsByCommand)statisticsClientRepliesFailure
{
  return self->_statisticsClientRepliesFailure;
}

- (void)setStatisticsClientRepliesFailure:(id)a3
{
}

- (MANAutoAssetControlStatisticsBySize)statisticsStaged
{
  return self->_statisticsStaged;
}

- (void)setStatisticsStaged:(id)a3
{
}

- (MANAutoAssetControlStatisticsBySize)statisticsUnstaged
{
  return self->_statisticsUnstaged;
}

- (void)setStatisticsUnstaged:(id)a3
{
}

- (BOOL)stagingClientChosen
{
  return self->_stagingClientChosen;
}

- (void)setStagingClientChosen:(BOOL)a3
{
  self->_stagingClientChosen = a3;
}

- (BOOL)stagingClientUsingGroups
{
  return self->_stagingClientUsingGroups;
}

- (void)setStagingClientUsingGroups:(BOOL)a3
{
  self->_stagingClientUsingGroups = a3;
}

- (BOOL)stagingClientCompleteOnceRequired
{
  return self->_stagingClientCompleteOnceRequired;
}

- (void)setStagingClientCompleteOnceRequired:(BOOL)a3
{
  self->_stagingClientCompleteOnceRequired = a3;
}

- (NSString)determineTimeoutUUID
{
  return self->_determineTimeoutUUID;
}

- (void)setDetermineTimeoutUUID:(id)a3
{
}

- (BOOL)firstDownloadedAsIfNotInCatalog
{
  return self->_firstDownloadedAsIfNotInCatalog;
}

- (void)setFirstDownloadedAsIfNotInCatalog:(BOOL)a3
{
  self->_firstDownloadedAsIfNotInCataos_log_t log = a3;
}

- (void).cxx_destruct
{
}

- (void)init
{
}

+ (void)clientDetermineGroupsAvailable:.cold.1()
{
}

+ (void)clientDetermineAllAvailable:.cold.1()
{
}

+ (void)clientDownloadGroups:.cold.1()
{
}

+ (void)clientDownloadGroups:.cold.2()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "%{public}@ | {clientDownloadGroups} no staging-client-request message | clientRequest:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

+ (void)clientDownloadGroups:.cold.3()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "%{public}@ | {clientDownloadGroups} staging-client-request without desire | clientRequest:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

+ (void)clientDownloadAll:.cold.1()
{
}

+ (void)clientDownloadAll:.cold.2()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "%{public}@ | {clientDownloadAll} no staging-client-request message | clientRequest:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

+ (void)clientDownloadAll:.cold.3()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "%{public}@ | {clientDownloadAll} staging-client-request without desire | clientRequest:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

+ (void)clientCancelOperation:.cold.1()
{
}

+ (void)clientPurgeAll:.cold.1()
{
}

+ (void)clientEraseAll:.cold.1()
{
}

+ (void)autoAssetStagerJobFailedToStart:.cold.1()
{
}

+ (void)autoAssetStagerJobDetermineDone:withBaseForStagingDescriptors:withDetermineError:.cold.1()
{
}

+ (void)autoAssetStagerJobDownloadProgress:withProgressError:.cold.1()
{
}

+ (void)autoAssetStagerJobDownloadDone:withDownloadedDescriptor:withDownloadError:.cold.1()
{
}

+ (void)controlCopyCurrentStagedDescriptors
{
}

+ (void)controlAlreadyDownloadedDescriptors:withSetConfigurations:withSetTargets:withScheduledJobs:.cold.1()
{
}

+ (void)controlConvertStagedToDownloaded:.cold.1()
{
}

+ (void)controlForcePurge:.cold.1()
{
}

+ (void)controlStatisticsClientRepliesSuccess:clientRepliesFailure:totalStaged:totalUnstaged:clearingAfter:.cold.1()
{
}

+ (void)controlEliminateSelector:.cold.1()
{
}

+ (void)controlEliminateSetConfiguration:.cold.1()
{
}

+ (void)garbageCollectEliminateSelector:.cold.1()
{
}

+ (void)extendSummaryWithDeterminedAssets:basedOnControl:.cold.1()
{
}

+ (void)extendSummaryWithAvailableForStagingAssets:.cold.1()
{
}

+ (void)extendSummaryWithStagedAssets:basedOnControl:.cold.1()
{
}

- (void)_addDescriptor:withRepresentation:toSummary:withStageGroupType:withTargetOS:.cold.1()
{
}

void __41__MADAutoAssetStager_resumeFromPersisted__block_invoke_cold_1()
{
}

+ (void)persistedStagedCount
{
}

- (void)action_ClientCheckLatchGroupsDetermine:(void *)a1 error:.cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "%{public}@\n [AUTO-STAGER] {ClientCheckLatchGroupsDetermine} beginning BY-GROUP-MODE request when had been operating in ALL-MODE",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)action_ClientAcceptAllDetermine:(void *)a1 error:.cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "%{public}@\n [AUTO-STAGER] {ClientAcceptAllDetermine} beginning ALL-MODE request when had been operating in BY-GROUP-MODE",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)action_ReportStagingProgressToClient:(void *)a1 error:.cold.1(void *a1)
{
}

- (void)action_FormCandidatesDecideDetermine:(void *)a1 error:.cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "%{public}@\n [AUTO-STAGER] {FormCandidatesDecideDetermine} should have candidates yet unable to form set-lookup array",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)action_FormCandidatesDecideDetermine:(uint64_t)a1 error:(uint64_t)a2 .cold.2(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend((id)OUTLINED_FUNCTION_9_0(a1, a2), "summary");
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  *uint64_t v3 = 138543362;
  *uint64_t v2 = v5;
  OUTLINED_FUNCTION_4_1( &dword_0,  v6,  v7,  "%{public}@\n[AUTO-STAGER] {FormCandidatesDecideDetermine} nil encountered on consideringDescriptors array");

  OUTLINED_FUNCTION_11();
}

- (void)_replyWithAlreadyDetermined:forEventInfo:orFollowupDetermineStart:.cold.1()
{
  uint64_t v3 = v2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 summary]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 _targetNameActive]);
  int v6 = 138543874;
  uint64_t v7 = v4;
  __int16 v8 = 2114;
  uint64_t v9 = v5;
  __int16 v10 = 2114;
  uint64_t v11 = v1;
  _os_log_error_impl( &dword_0,  v0,  OS_LOG_TYPE_ERROR,  "%{public}@\n[%{public}@] {%{public}@} beginning BY-GROUP-MODE request when had been operating in ALL-MODE",  (uint8_t *)&v6,  0x20u);
}

- (void)_adjustPallasResponseBasedOnPreferences:(void *)a1 .cold.1(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 summary]);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_1( &dword_0,  v2,  v3,  "[CATALOG-LOOKUP-ADJUST] job provided jobInformation dropped | eventInfo:%{public}@",  v4,  v5,  v6,  v7,  v8);

  OUTLINED_FUNCTION_10();
}

- (void)_updateDescriptor:withLatestJobStatus:.cold.1()
{
}

- (void)_isSetTargetWithinRange:asCandidate:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() summary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "%{public}@\n [AUTO-STAGER] {_isSetTargetWithinRange} set-target versions not comparable (ignoring) | setTarget:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

- (void)_extendLookupByAssetTypeWithSetConfigurations:(uint64_t)a1 .cold.1(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend((id)OUTLINED_FUNCTION_9_0(a1, a2), "summary");
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  *uint64_t v3 = 138543362;
  *id v2 = v5;
  OUTLINED_FUNCTION_4_1( &dword_0,  v6,  v7,  "%{public}@\n[AUTO-STAGER] {_extendLookupByAssetTypeWithSetConfigurations} nil encountered on setTargets array");

  OUTLINED_FUNCTION_11();
}

- (void)_extendLookupByAssetTypeWithDownloadedDescriptors:(uint64_t)a1 .cold.1(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend((id)OUTLINED_FUNCTION_9_0(a1, a2), "summary");
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  *uint64_t v3 = 138543362;
  *id v2 = v5;
  OUTLINED_FUNCTION_4_1( &dword_0,  v6,  v7,  "%{public}@\n [AUTO-STAGER] {_extendLookupByAssetTypeWithDownloadedDescriptors} nil encountered on alreadyDownloadedDescriptors array");

  OUTLINED_FUNCTION_11();
}

- (void)newAssetMetadataFromAssetCatalog:forAssetype:forAssetSpecifier:.cold.1()
{
  id v2 = [(id)OUTLINED_FUNCTION_8() safeSummary];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0_0( &dword_0,  v4,  v5,  "%{public}@\n [AUTO-STAGER] {newAssetMetadataFromAssetCatalog} no Assets array in set-catalog lookup response | autoAssetSetCatalog:%{public}@",  v6,  v7,  v8,  v9,  v10);

  OUTLINED_FUNCTION_2_0();
}

@end