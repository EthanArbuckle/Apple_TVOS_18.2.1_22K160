void get_sampler_parameterfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float *a4)
{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  signed int v16;
  BOOL v17;
  id v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  id v24;
  unsigned int v25;
  dispatch_queue_s *v26;
  uint64_t v27;
  v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    v10 = v8[4];
    v11 = v10 >= (unint64_t)a1;
    else {
      v12 = v8 + 1;
    }
    if (v11) {
      v9 = (uint64_t)v8;
    }
    v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    v9 = ContextInfo::activeCtxInfoMap + 8;
  v13 = *(void *)(v9 + 40);
  v14 = (unsigned int *)(v13 + 4640);
  do
  {
    v15 = __ldaxr(v14);
    v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    v17 = v16 <= 1;
  }
  else {
    v17 = 1;
  }
  if (v17)
  {
    v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    v23 = handle_opengl_thread_conflict((const void **)v13);
    v24 = [(id)DYGetGLGuestAppClient(v23) waitOnGraphicsSemaphoreAssertions];
    if ((int)v24 >= 1)
    {
      do
LABEL_34:
        v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
      dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 6488LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        v22 = __ldaxr(v14);
      while (__stlxr(v22 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 32) + 6488LL))( a1,  a2,  a3,  a4);
  ++*(void *)(v13 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      v27 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v27) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v27, v13);
      }
    }
  }

  do
  {
    v19 = __ldaxr(v14);
    v20 = v19 - 1;
  }

  while (__stlxr(v20, v14));
  if (gCheckGLErrors) {
    v21 = v20 < 1;
  }
  else {
    v21 = 1;
  }
  if (!v21) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  signed int v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t v21;
  unsigned int v22;
  signed int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  id v27;
  unsigned int v28;
  dispatch_queue_s *v29;
  uint64_t v30;
  v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    v10 = v8[4];
    v11 = v10 >= (unint64_t)a1;
    else {
      v12 = v8 + 1;
    }
    if (v11) {
      v9 = (uint64_t)v8;
    }
    v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    v9 = ContextInfo::activeCtxInfoMap + 8;
  v13 = *(void *)(v9 + 40);
  v14 = (unsigned int *)(v13 + 4640);
  do
  {
    v15 = __ldaxr(v14);
    v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    v17 = v16 <= 1;
  }
  else {
    v17 = 1;
  }
  if (v17)
  {
    v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    v26 = handle_opengl_thread_conflict((const void **)v13);
    v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        v28 = __ldaxr(v14);
      while (__stlxr(v28 - 1, v14));
      v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 6488LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  v19 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 32) + 6488LL))( a1,  a2,  a3,  a4);
  v20 = mach_absolute_time();
  v21 = vdupq_n_s64(1uLL);
  v21.i64[0] = v20 - v19;
  *(int64x2_t *)(v13 + 3696) = vaddq_s64(v21, *(int64x2_t *)(v13 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      v30 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v13);
      }
    }
  }

  do
  {
    v22 = __ldaxr(v14);
    v23 = v22 - 1;
  }

  while (__stlxr(v23, v14));
  if (gCheckGLErrors) {
    v24 = v23 < 1;
  }
  else {
    v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

void get_program_pipelineiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v23 = handle_opengl_thread_conflict((const void **)v13);
    id v24 = [(id)DYGetGLGuestAppClient(v23) waitOnGraphicsSemaphoreAssertions];
    if ((int)v24 >= 1)
    {
      do
LABEL_34:
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
      dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 6608LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v22 = __ldaxr(v14);
      while (__stlxr(v22 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 32) + 6608LL))(a1, a2, a3, a4);
  ++*(void *)(v13 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      uint64_t v27 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v27) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v27, v13);
      }
    }
  }

  do
  {
    unsigned int v19 = __ldaxr(v14);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v14));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  signed int v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t v21;
  unsigned int v22;
  signed int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  id v27;
  unsigned int v28;
  dispatch_queue_s *v29;
  uint64_t v30;
  v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    uint64_t v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    v26 = handle_opengl_thread_conflict((const void **)v13);
    uint64_t v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        v28 = __ldaxr(v14);
      while (__stlxr(v28 - 1, v14));
      v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 6608LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v19 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 32) + 6608LL))(a1, a2, a3, a4);
  signed int v20 = mach_absolute_time();
  BOOL v21 = vdupq_n_s64(1uLL);
  v21.i64[0] = v20 - v19;
  *(int64x2_t *)(v13 + 3696) = vaddq_s64(v21, *(int64x2_t *)(v13 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      v30 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v13);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v14);
    uint64_t v23 = v22 - 1;
  }

  while (__stlxr(v23, v14));
  if (gCheckGLErrors) {
    id v24 = v23 < 1;
  }
  else {
    id v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

void program_uniform3i( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  id v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    id v29 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v28 = handle_opengl_thread_conflict((const void **)v17);
    id v29 = [(id)DYGetGLGuestAppClient(v28) waitOnGraphicsSemaphoreAssertions];
    if ((int)v29 >= 1)
    {
      do
LABEL_34:
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v29) graphicsLockWaitQueue];
      dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 6648LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v29) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v27 = __ldaxr(v18);
      while (__stlxr(v27 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 32)
                                                                                                + 6648LL))( a1,  a2,  v23,  a4,  a5,  a6);
  ++*(void *)(v17 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      uint64_t v32 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v32) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v32, v17);
      }
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

{
  void *v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64x2_t v26;
  unsigned int v27;
  signed int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  dispatch_queue_s *v34;
  uint64_t v35;
  v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  id v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    uint64_t v32 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    v31 = handle_opengl_thread_conflict((const void **)v17);
    uint64_t v32 = [(id)DYGetGLGuestAppClient(v31) waitOnGraphicsSemaphoreAssertions];
    if ((int)v32 >= 1)
    {
      do
LABEL_34:
        v33 = __ldaxr(v18);
      while (__stlxr(v33 - 1, v18));
      v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v32) graphicsLockWaitQueue];
      dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 6648LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v32) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  unsigned int v24 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 32)
                                                                                                + 6648LL))( a1,  a2,  v23,  a4,  a5,  a6);
  signed int v25 = mach_absolute_time();
  BOOL v26 = vdupq_n_s64(1uLL);
  v26.i64[0] = v25 - v24;
  *(int64x2_t *)(v17 + 3696) = vaddq_s64(v26, *(int64x2_t *)(v17 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      v35 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v35) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v35, v17);
      }
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v18);
    uint64_t v28 = v27 - 1;
  }

  while (__stlxr(v28, v18));
  if (gCheckGLErrors) {
    id v29 = v28 < 1;
  }
  else {
    id v29 = 1;
  }
  if (!v29) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

void program_uniform4i( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      id v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    unint64_t v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  signed int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    id v31 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v30 = handle_opengl_thread_conflict((const void **)v19);
    id v31 = [(id)DYGetGLGuestAppClient(v30) waitOnGraphicsSemaphoreAssertions];
    if ((int)v31 >= 1)
    {
      do
LABEL_34:
        unsigned int v32 = __ldaxr(v20);
      while (__stlxr(v32 - 1, v20));
      v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v31) graphicsLockWaitQueue];
      dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 6656LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7);
      return;
    }
  }

  *(_BYTE *)(v19 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v31) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v29 = __ldaxr(v20);
      while (__stlxr(v29 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v25 = wrapper_map_uniform_loc((ContextInfo *)v19, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 32) + 6656LL))( a1,  a2,  v25,  a4,  a5,  a6,  a7);
  ++*(void *)(v19 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v19);
    if (gBreakOnError)
    {
      uint64_t v34 = *(unsigned int *)(v19 + 3404);
      if ((_DWORD)v34) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v34, v19);
      }
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v20);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v20));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

{
  void *v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  void *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  signed int v22;
  BOOL v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64x2_t v30;
  unsigned int v31;
  signed int v32;
  BOOL v33;
  unsigned int v34;
  uint64_t v35;
  id v36;
  unsigned int v37;
  dispatch_queue_s *v38;
  uint64_t v39;
  unint64_t v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      id v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    unint64_t v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  signed int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    v36 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    v35 = handle_opengl_thread_conflict((const void **)v19);
    v36 = [(id)DYGetGLGuestAppClient(v35) waitOnGraphicsSemaphoreAssertions];
    if ((int)v36 >= 1)
    {
      do
LABEL_34:
        v37 = __ldaxr(v20);
      while (__stlxr(v37 - 1, v20));
      v38 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v36) graphicsLockWaitQueue];
      dispatch_sync_f(v38, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 6656LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7);
      return;
    }
  }

  *(_BYTE *)(v19 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v36) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        uint64_t v34 = __ldaxr(v20);
      while (__stlxr(v34 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v25 = wrapper_map_uniform_loc((ContextInfo *)v19, a2, a3);
  unsigned int v26 = mach_absolute_time();
  signed int v27 = a7;
  BOOL v28 = v26;
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 32) + 6656LL))( a1,  a2,  v25,  a4,  a5,  a6,  v27);
  unsigned int v29 = mach_absolute_time();
  uint64_t v30 = vdupq_n_s64(1uLL);
  v30.i64[0] = v29 - v28;
  *(int64x2_t *)(v19 + 3696) = vaddq_s64(v30, *(int64x2_t *)(v19 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v19);
    if (gBreakOnError)
    {
      v39 = *(unsigned int *)(v19 + 3404);
      if ((_DWORD)v39) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v39, v19);
      }
    }
  }

  do
  {
    id v31 = __ldaxr(v20);
    unsigned int v32 = v31 - 1;
  }

  while (__stlxr(v32, v20));
  if (gCheckGLErrors) {
    v33 = v32 < 1;
  }
  else {
    v33 = 1;
  }
  if (!v33) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

void program_uniform1iv(__GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, const int *a5)
{
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    id v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v26 = handle_opengl_thread_conflict((const void **)v15);
    id v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                               + 6696LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v25 = __ldaxr(v16);
      while (__stlxr(v25 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 32)
                                                                                           + 6696LL))( a1,  a2,  v21,  a4,  a5);
  ++*(void *)(v15 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      uint64_t v30 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v15);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

{
  void *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  signed int v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t v24;
  unsigned int v25;
  signed int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  dispatch_queue_s *v32;
  uint64_t v33;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    uint64_t v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v29 = handle_opengl_thread_conflict((const void **)v15);
    uint64_t v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        id v31 = __ldaxr(v16);
      while (__stlxr(v31 - 1, v16));
      unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                               + 6696LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  unsigned int v22 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 32)
                                                                                           + 6696LL))( a1,  a2,  v21,  a4,  a5);
  signed int v23 = mach_absolute_time();
  BOOL v24 = vdupq_n_s64(1uLL);
  v24.i64[0] = v23 - v22;
  *(int64x2_t *)(v15 + 3696) = vaddq_s64(v24, *(int64x2_t *)(v15 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      v33 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v15);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v16);
    uint64_t v26 = v25 - 1;
  }

  while (__stlxr(v26, v16));
  if (gCheckGLErrors) {
    id v27 = v26 < 1;
  }
  else {
    id v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

void program_uniform2iv(__GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, const int *a5)
{
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    id v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v26 = handle_opengl_thread_conflict((const void **)v15);
    id v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                               + 6704LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v25 = __ldaxr(v16);
      while (__stlxr(v25 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 32)
                                                                                           + 6704LL))( a1,  a2,  v21,  a4,  a5);
  ++*(void *)(v15 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      uint64_t v30 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v15);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

{
  void *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  signed int v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t v24;
  unsigned int v25;
  signed int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  dispatch_queue_s *v32;
  uint64_t v33;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    uint64_t v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v29 = handle_opengl_thread_conflict((const void **)v15);
    uint64_t v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        id v31 = __ldaxr(v16);
      while (__stlxr(v31 - 1, v16));
      unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                               + 6704LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  unsigned int v22 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 32)
                                                                                           + 6704LL))( a1,  a2,  v21,  a4,  a5);
  signed int v23 = mach_absolute_time();
  BOOL v24 = vdupq_n_s64(1uLL);
  v24.i64[0] = v23 - v22;
  *(int64x2_t *)(v15 + 3696) = vaddq_s64(v24, *(int64x2_t *)(v15 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      v33 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v15);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v16);
    uint64_t v26 = v25 - 1;
  }

  while (__stlxr(v26, v16));
  if (gCheckGLErrors) {
    id v27 = v26 < 1;
  }
  else {
    id v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

void program_uniform3iv(__GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, const int *a5)
{
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    id v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v26 = handle_opengl_thread_conflict((const void **)v15);
    id v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                               + 6712LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v25 = __ldaxr(v16);
      while (__stlxr(v25 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 32)
                                                                                           + 6712LL))( a1,  a2,  v21,  a4,  a5);
  ++*(void *)(v15 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      uint64_t v30 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v15);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

{
  void *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  signed int v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t v24;
  unsigned int v25;
  signed int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  dispatch_queue_s *v32;
  uint64_t v33;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    uint64_t v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v29 = handle_opengl_thread_conflict((const void **)v15);
    uint64_t v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        id v31 = __ldaxr(v16);
      while (__stlxr(v31 - 1, v16));
      unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                               + 6712LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  unsigned int v22 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 32)
                                                                                           + 6712LL))( a1,  a2,  v21,  a4,  a5);
  signed int v23 = mach_absolute_time();
  BOOL v24 = vdupq_n_s64(1uLL);
  v24.i64[0] = v23 - v22;
  *(int64x2_t *)(v15 + 3696) = vaddq_s64(v24, *(int64x2_t *)(v15 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      v33 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v15);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v16);
    uint64_t v26 = v25 - 1;
  }

  while (__stlxr(v26, v16));
  if (gCheckGLErrors) {
    id v27 = v26 < 1;
  }
  else {
    id v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

void program_uniform4iv(__GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, const int *a5)
{
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    id v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v26 = handle_opengl_thread_conflict((const void **)v15);
    id v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                               + 6720LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v25 = __ldaxr(v16);
      while (__stlxr(v25 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 32)
                                                                                           + 6720LL))( a1,  a2,  v21,  a4,  a5);
  ++*(void *)(v15 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      uint64_t v30 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v15);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

{
  void *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  signed int v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t v24;
  unsigned int v25;
  signed int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  dispatch_queue_s *v32;
  uint64_t v33;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    uint64_t v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v29 = handle_opengl_thread_conflict((const void **)v15);
    uint64_t v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        id v31 = __ldaxr(v16);
      while (__stlxr(v31 - 1, v16));
      unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                               + 6720LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  unsigned int v22 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const int *))(*(void *)(v15 + 32)
                                                                                           + 6720LL))( a1,  a2,  v21,  a4,  a5);
  signed int v23 = mach_absolute_time();
  BOOL v24 = vdupq_n_s64(1uLL);
  v24.i64[0] = v23 - v22;
  *(int64x2_t *)(v15 + 3696) = vaddq_s64(v24, *(int64x2_t *)(v15 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      v33 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v15);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v16);
    uint64_t v26 = v25 - 1;
  }

  while (__stlxr(v26, v16));
  if (gCheckGLErrors) {
    id v27 = v26 < 1;
  }
  else {
    id v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

void program_uniform1fv(__GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, const float *a5)
{
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    id v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v26 = handle_opengl_thread_conflict((const void **)v15);
    id v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                 + 6728LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v25 = __ldaxr(v16);
      while (__stlxr(v25 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 32)
                                                                                             + 6728LL))( a1,  a2,  v21,  a4,  a5);
  ++*(void *)(v15 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      uint64_t v30 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v15);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

{
  void *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  signed int v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t v24;
  unsigned int v25;
  signed int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  dispatch_queue_s *v32;
  uint64_t v33;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    uint64_t v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v29 = handle_opengl_thread_conflict((const void **)v15);
    uint64_t v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        id v31 = __ldaxr(v16);
      while (__stlxr(v31 - 1, v16));
      unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                 + 6728LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  unsigned int v22 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 32)
                                                                                             + 6728LL))( a1,  a2,  v21,  a4,  a5);
  signed int v23 = mach_absolute_time();
  BOOL v24 = vdupq_n_s64(1uLL);
  v24.i64[0] = v23 - v22;
  *(int64x2_t *)(v15 + 3696) = vaddq_s64(v24, *(int64x2_t *)(v15 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      v33 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v15);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v16);
    uint64_t v26 = v25 - 1;
  }

  while (__stlxr(v26, v16));
  if (gCheckGLErrors) {
    id v27 = v26 < 1;
  }
  else {
    id v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

void program_uniform2fv(__GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, const float *a5)
{
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    id v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v26 = handle_opengl_thread_conflict((const void **)v15);
    id v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                 + 6736LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v25 = __ldaxr(v16);
      while (__stlxr(v25 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 32)
                                                                                             + 6736LL))( a1,  a2,  v21,  a4,  a5);
  ++*(void *)(v15 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      uint64_t v30 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v15);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

{
  void *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  signed int v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t v24;
  unsigned int v25;
  signed int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  dispatch_queue_s *v32;
  uint64_t v33;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    uint64_t v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v29 = handle_opengl_thread_conflict((const void **)v15);
    uint64_t v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        id v31 = __ldaxr(v16);
      while (__stlxr(v31 - 1, v16));
      unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                 + 6736LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  unsigned int v22 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 32)
                                                                                             + 6736LL))( a1,  a2,  v21,  a4,  a5);
  signed int v23 = mach_absolute_time();
  BOOL v24 = vdupq_n_s64(1uLL);
  v24.i64[0] = v23 - v22;
  *(int64x2_t *)(v15 + 3696) = vaddq_s64(v24, *(int64x2_t *)(v15 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      v33 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v15);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v16);
    uint64_t v26 = v25 - 1;
  }

  while (__stlxr(v26, v16));
  if (gCheckGLErrors) {
    id v27 = v26 < 1;
  }
  else {
    id v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

void program_uniform3fv(__GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, const float *a5)
{
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    id v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v26 = handle_opengl_thread_conflict((const void **)v15);
    id v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                 + 6744LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v25 = __ldaxr(v16);
      while (__stlxr(v25 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 32)
                                                                                             + 6744LL))( a1,  a2,  v21,  a4,  a5);
  ++*(void *)(v15 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      uint64_t v30 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v15);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

{
  void *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  signed int v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t v24;
  unsigned int v25;
  signed int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  dispatch_queue_s *v32;
  uint64_t v33;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    uint64_t v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v29 = handle_opengl_thread_conflict((const void **)v15);
    uint64_t v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        id v31 = __ldaxr(v16);
      while (__stlxr(v31 - 1, v16));
      unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                 + 6744LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  unsigned int v22 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 32)
                                                                                             + 6744LL))( a1,  a2,  v21,  a4,  a5);
  signed int v23 = mach_absolute_time();
  BOOL v24 = vdupq_n_s64(1uLL);
  v24.i64[0] = v23 - v22;
  *(int64x2_t *)(v15 + 3696) = vaddq_s64(v24, *(int64x2_t *)(v15 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      v33 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v15);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v16);
    uint64_t v26 = v25 - 1;
  }

  while (__stlxr(v26, v16));
  if (gCheckGLErrors) {
    id v27 = v26 < 1;
  }
  else {
    id v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

void program_uniform4fv(__GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, const float *a5)
{
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    id v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v26 = handle_opengl_thread_conflict((const void **)v15);
    id v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                 + 6752LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v25 = __ldaxr(v16);
      while (__stlxr(v25 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 32)
                                                                                             + 6752LL))( a1,  a2,  v21,  a4,  a5);
  ++*(void *)(v15 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      uint64_t v30 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v15);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

{
  void *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  signed int v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t v24;
  unsigned int v25;
  signed int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  dispatch_queue_s *v32;
  uint64_t v33;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    uint64_t v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v29 = handle_opengl_thread_conflict((const void **)v15);
    uint64_t v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        id v31 = __ldaxr(v16);
      while (__stlxr(v31 - 1, v16));
      unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                 + 6752LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  unsigned int v22 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const float *))(*(void *)(v15 + 32)
                                                                                             + 6752LL))( a1,  a2,  v21,  a4,  a5);
  signed int v23 = mach_absolute_time();
  BOOL v24 = vdupq_n_s64(1uLL);
  v24.i64[0] = v23 - v22;
  *(int64x2_t *)(v15 + 3696) = vaddq_s64(v24, *(int64x2_t *)(v15 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      v33 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v15);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v16);
    uint64_t v26 = v25 - 1;
  }

  while (__stlxr(v26, v16));
  if (gCheckGLErrors) {
    id v27 = v26 < 1;
  }
  else {
    id v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

void program_uniform_matrix2fv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    id v29 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v28 = handle_opengl_thread_conflict((const void **)v17);
    id v29 = [(id)DYGetGLGuestAppClient(v28) waitOnGraphicsSemaphoreAssertions];
    if ((int)v29 >= 1)
    {
      do
LABEL_34:
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      id v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v29) graphicsLockWaitQueue];
      dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6760LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v29) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v27 = __ldaxr(v18);
      while (__stlxr(v27 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6760LL))( a1,  a2,  v23,  a4,  a5,  a6);
  ++*(void *)(v17 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      uint64_t v32 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v32) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v32, v17);
      }
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

{
  void *v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64x2_t v26;
  unsigned int v27;
  signed int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  dispatch_queue_s *v34;
  uint64_t v35;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    uint64_t v32 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    id v31 = handle_opengl_thread_conflict((const void **)v17);
    uint64_t v32 = [(id)DYGetGLGuestAppClient(v31) waitOnGraphicsSemaphoreAssertions];
    if ((int)v32 >= 1)
    {
      do
LABEL_34:
        v33 = __ldaxr(v18);
      while (__stlxr(v33 - 1, v18));
      uint64_t v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v32) graphicsLockWaitQueue];
      dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6760LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v32) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  unsigned int v24 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6760LL))( a1,  a2,  v23,  a4,  a5,  a6);
  signed int v25 = mach_absolute_time();
  BOOL v26 = vdupq_n_s64(1uLL);
  v26.i64[0] = v25 - v24;
  *(int64x2_t *)(v17 + 3696) = vaddq_s64(v26, *(int64x2_t *)(v17 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      v35 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v35) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v35, v17);
      }
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v18);
    uint64_t v28 = v27 - 1;
  }

  while (__stlxr(v28, v18));
  if (gCheckGLErrors) {
    id v29 = v28 < 1;
  }
  else {
    id v29 = 1;
  }
  if (!v29) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

void program_uniform_matrix3fv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    id v29 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v28 = handle_opengl_thread_conflict((const void **)v17);
    id v29 = [(id)DYGetGLGuestAppClient(v28) waitOnGraphicsSemaphoreAssertions];
    if ((int)v29 >= 1)
    {
      do
LABEL_34:
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      id v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v29) graphicsLockWaitQueue];
      dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6768LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v29) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v27 = __ldaxr(v18);
      while (__stlxr(v27 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6768LL))( a1,  a2,  v23,  a4,  a5,  a6);
  ++*(void *)(v17 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      uint64_t v32 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v32) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v32, v17);
      }
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

{
  void *v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64x2_t v26;
  unsigned int v27;
  signed int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  dispatch_queue_s *v34;
  uint64_t v35;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    uint64_t v32 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    id v31 = handle_opengl_thread_conflict((const void **)v17);
    uint64_t v32 = [(id)DYGetGLGuestAppClient(v31) waitOnGraphicsSemaphoreAssertions];
    if ((int)v32 >= 1)
    {
      do
LABEL_34:
        v33 = __ldaxr(v18);
      while (__stlxr(v33 - 1, v18));
      uint64_t v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v32) graphicsLockWaitQueue];
      dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6768LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v32) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  unsigned int v24 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6768LL))( a1,  a2,  v23,  a4,  a5,  a6);
  signed int v25 = mach_absolute_time();
  BOOL v26 = vdupq_n_s64(1uLL);
  v26.i64[0] = v25 - v24;
  *(int64x2_t *)(v17 + 3696) = vaddq_s64(v26, *(int64x2_t *)(v17 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      v35 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v35) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v35, v17);
      }
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v18);
    uint64_t v28 = v27 - 1;
  }

  while (__stlxr(v28, v18));
  if (gCheckGLErrors) {
    id v29 = v28 < 1;
  }
  else {
    id v29 = 1;
  }
  if (!v29) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

void program_uniform_matrix4fv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    id v29 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v28 = handle_opengl_thread_conflict((const void **)v17);
    id v29 = [(id)DYGetGLGuestAppClient(v28) waitOnGraphicsSemaphoreAssertions];
    if ((int)v29 >= 1)
    {
      do
LABEL_34:
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      id v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v29) graphicsLockWaitQueue];
      dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6776LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v29) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v27 = __ldaxr(v18);
      while (__stlxr(v27 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6776LL))( a1,  a2,  v23,  a4,  a5,  a6);
  ++*(void *)(v17 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      uint64_t v32 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v32) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v32, v17);
      }
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

{
  void *v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64x2_t v26;
  unsigned int v27;
  signed int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  dispatch_queue_s *v34;
  uint64_t v35;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    uint64_t v32 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    id v31 = handle_opengl_thread_conflict((const void **)v17);
    uint64_t v32 = [(id)DYGetGLGuestAppClient(v31) waitOnGraphicsSemaphoreAssertions];
    if ((int)v32 >= 1)
    {
      do
LABEL_34:
        v33 = __ldaxr(v18);
      while (__stlxr(v33 - 1, v18));
      uint64_t v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v32) graphicsLockWaitQueue];
      dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6776LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v32) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  unsigned int v24 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6776LL))( a1,  a2,  v23,  a4,  a5,  a6);
  signed int v25 = mach_absolute_time();
  BOOL v26 = vdupq_n_s64(1uLL);
  v26.i64[0] = v25 - v24;
  *(int64x2_t *)(v17 + 3696) = vaddq_s64(v26, *(int64x2_t *)(v17 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      v35 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v35) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v35, v17);
      }
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v18);
    uint64_t v28 = v27 - 1;
  }

  while (__stlxr(v28, v18));
  if (gCheckGLErrors) {
    id v29 = v28 < 1;
  }
  else {
    id v29 = 1;
  }
  if (!v29) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

void program_uniform3ui( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    id v29 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v28 = handle_opengl_thread_conflict((const void **)v17);
    id v29 = [(id)DYGetGLGuestAppClient(v28) waitOnGraphicsSemaphoreAssertions];
    if ((int)v29 >= 1)
    {
      do
LABEL_34:
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      id v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v29) graphicsLockWaitQueue];
      dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 6800LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v29) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v27 = __ldaxr(v18);
      while (__stlxr(v27 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 32)
                                                                                                + 6800LL))( a1,  a2,  v23,  a4,  a5,  a6);
  ++*(void *)(v17 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      uint64_t v32 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v32) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v32, v17);
      }
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

{
  void *v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64x2_t v26;
  unsigned int v27;
  signed int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  dispatch_queue_s *v34;
  uint64_t v35;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    uint64_t v32 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    id v31 = handle_opengl_thread_conflict((const void **)v17);
    uint64_t v32 = [(id)DYGetGLGuestAppClient(v31) waitOnGraphicsSemaphoreAssertions];
    if ((int)v32 >= 1)
    {
      do
LABEL_34:
        v33 = __ldaxr(v18);
      while (__stlxr(v33 - 1, v18));
      uint64_t v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v32) graphicsLockWaitQueue];
      dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 6800LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v32) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  unsigned int v24 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 32)
                                                                                                + 6800LL))( a1,  a2,  v23,  a4,  a5,  a6);
  signed int v25 = mach_absolute_time();
  BOOL v26 = vdupq_n_s64(1uLL);
  v26.i64[0] = v25 - v24;
  *(int64x2_t *)(v17 + 3696) = vaddq_s64(v26, *(int64x2_t *)(v17 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      v35 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v35) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v35, v17);
      }
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v18);
    uint64_t v28 = v27 - 1;
  }

  while (__stlxr(v28, v18));
  if (gCheckGLErrors) {
    id v29 = v28 < 1;
  }
  else {
    id v29 = 1;
  }
  if (!v29) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

void program_uniform4ui( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      signed int v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    unint64_t v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  signed int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    id v31 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v30 = handle_opengl_thread_conflict((const void **)v19);
    id v31 = [(id)DYGetGLGuestAppClient(v30) waitOnGraphicsSemaphoreAssertions];
    if ((int)v31 >= 1)
    {
      do
LABEL_34:
        unsigned int v32 = __ldaxr(v20);
      while (__stlxr(v32 - 1, v20));
      v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v31) graphicsLockWaitQueue];
      dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 6808LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7);
      return;
    }
  }

  *(_BYTE *)(v19 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v31) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v29 = __ldaxr(v20);
      while (__stlxr(v29 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v25 = wrapper_map_uniform_loc((ContextInfo *)v19, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 32) + 6808LL))( a1,  a2,  v25,  a4,  a5,  a6,  a7);
  ++*(void *)(v19 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v19);
    if (gBreakOnError)
    {
      uint64_t v34 = *(unsigned int *)(v19 + 3404);
      if ((_DWORD)v34) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v34, v19);
      }
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v20);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v20));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

{
  void *v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  void *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  signed int v22;
  BOOL v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64x2_t v30;
  unsigned int v31;
  signed int v32;
  BOOL v33;
  unsigned int v34;
  uint64_t v35;
  id v36;
  unsigned int v37;
  dispatch_queue_s *v38;
  uint64_t v39;
  unint64_t v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      signed int v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    unint64_t v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  signed int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    v36 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    v35 = handle_opengl_thread_conflict((const void **)v19);
    v36 = [(id)DYGetGLGuestAppClient(v35) waitOnGraphicsSemaphoreAssertions];
    if ((int)v36 >= 1)
    {
      do
LABEL_34:
        v37 = __ldaxr(v20);
      while (__stlxr(v37 - 1, v20));
      v38 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v36) graphicsLockWaitQueue];
      dispatch_sync_f(v38, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 6808LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7);
      return;
    }
  }

  *(_BYTE *)(v19 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v36) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        uint64_t v34 = __ldaxr(v20);
      while (__stlxr(v34 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v25 = wrapper_map_uniform_loc((ContextInfo *)v19, a2, a3);
  unsigned int v26 = mach_absolute_time();
  signed int v27 = a7;
  BOOL v28 = v26;
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 32) + 6808LL))( a1,  a2,  v25,  a4,  a5,  a6,  v27);
  unsigned int v29 = mach_absolute_time();
  uint64_t v30 = vdupq_n_s64(1uLL);
  v30.i64[0] = v29 - v28;
  *(int64x2_t *)(v19 + 3696) = vaddq_s64(v30, *(int64x2_t *)(v19 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v19);
    if (gBreakOnError)
    {
      v39 = *(unsigned int *)(v19 + 3404);
      if ((_DWORD)v39) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v39, v19);
      }
    }
  }

  do
  {
    id v31 = __ldaxr(v20);
    unsigned int v32 = v31 - 1;
  }

  while (__stlxr(v32, v20));
  if (gCheckGLErrors) {
    v33 = v32 < 1;
  }
  else {
    v33 = 1;
  }
  if (!v33) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

void program_uniform1uiv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, const unsigned int *a5)
{
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    id v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v26 = handle_opengl_thread_conflict((const void **)v15);
    id v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6816LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v25 = __ldaxr(v16);
      while (__stlxr(v25 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 32) + 6816LL))( a1,  a2,  v21,  a4,  a5);
  ++*(void *)(v15 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      uint64_t v30 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v15);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

{
  void *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  signed int v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t v24;
  unsigned int v25;
  signed int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  dispatch_queue_s *v32;
  uint64_t v33;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    uint64_t v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v29 = handle_opengl_thread_conflict((const void **)v15);
    uint64_t v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        id v31 = __ldaxr(v16);
      while (__stlxr(v31 - 1, v16));
      unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6816LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  unsigned int v22 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 32) + 6816LL))( a1,  a2,  v21,  a4,  a5);
  signed int v23 = mach_absolute_time();
  BOOL v24 = vdupq_n_s64(1uLL);
  v24.i64[0] = v23 - v22;
  *(int64x2_t *)(v15 + 3696) = vaddq_s64(v24, *(int64x2_t *)(v15 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      v33 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v15);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v16);
    uint64_t v26 = v25 - 1;
  }

  while (__stlxr(v26, v16));
  if (gCheckGLErrors) {
    id v27 = v26 < 1;
  }
  else {
    id v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

void program_uniform2uiv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, const unsigned int *a5)
{
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    id v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v26 = handle_opengl_thread_conflict((const void **)v15);
    id v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6824LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v25 = __ldaxr(v16);
      while (__stlxr(v25 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 32) + 6824LL))( a1,  a2,  v21,  a4,  a5);
  ++*(void *)(v15 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      uint64_t v30 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v15);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

{
  void *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  signed int v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t v24;
  unsigned int v25;
  signed int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  dispatch_queue_s *v32;
  uint64_t v33;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    uint64_t v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v29 = handle_opengl_thread_conflict((const void **)v15);
    uint64_t v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        id v31 = __ldaxr(v16);
      while (__stlxr(v31 - 1, v16));
      unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6824LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  unsigned int v22 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 32) + 6824LL))( a1,  a2,  v21,  a4,  a5);
  signed int v23 = mach_absolute_time();
  BOOL v24 = vdupq_n_s64(1uLL);
  v24.i64[0] = v23 - v22;
  *(int64x2_t *)(v15 + 3696) = vaddq_s64(v24, *(int64x2_t *)(v15 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      v33 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v15);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v16);
    uint64_t v26 = v25 - 1;
  }

  while (__stlxr(v26, v16));
  if (gCheckGLErrors) {
    id v27 = v26 < 1;
  }
  else {
    id v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

void program_uniform3uiv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, const unsigned int *a5)
{
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    id v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v26 = handle_opengl_thread_conflict((const void **)v15);
    id v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6832LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v25 = __ldaxr(v16);
      while (__stlxr(v25 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 32) + 6832LL))( a1,  a2,  v21,  a4,  a5);
  ++*(void *)(v15 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      uint64_t v30 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v15);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

{
  void *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  signed int v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t v24;
  unsigned int v25;
  signed int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  dispatch_queue_s *v32;
  uint64_t v33;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    uint64_t v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v29 = handle_opengl_thread_conflict((const void **)v15);
    uint64_t v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        id v31 = __ldaxr(v16);
      while (__stlxr(v31 - 1, v16));
      unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6832LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  unsigned int v22 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 32) + 6832LL))( a1,  a2,  v21,  a4,  a5);
  signed int v23 = mach_absolute_time();
  BOOL v24 = vdupq_n_s64(1uLL);
  v24.i64[0] = v23 - v22;
  *(int64x2_t *)(v15 + 3696) = vaddq_s64(v24, *(int64x2_t *)(v15 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      v33 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v15);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v16);
    uint64_t v26 = v25 - 1;
  }

  while (__stlxr(v26, v16));
  if (gCheckGLErrors) {
    id v27 = v26 < 1;
  }
  else {
    id v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

void program_uniform4uiv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, const unsigned int *a5)
{
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    id v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v26 = handle_opengl_thread_conflict((const void **)v15);
    id v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6840LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v25 = __ldaxr(v16);
      while (__stlxr(v25 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 32) + 6840LL))( a1,  a2,  v21,  a4,  a5);
  ++*(void *)(v15 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      uint64_t v30 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v15);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

{
  void *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  signed int v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t v24;
  unsigned int v25;
  signed int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  dispatch_queue_s *v32;
  uint64_t v33;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (v19)
  {
    uint64_t v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v29 = handle_opengl_thread_conflict((const void **)v15);
    uint64_t v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        id v31 = __ldaxr(v16);
      while (__stlxr(v31 - 1, v16));
      unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6840LL))( a1,  a2,  a3,  a4,  a5);
      return;
    }
  }

  *(_BYTE *)(v15 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v21 = wrapper_map_uniform_loc((ContextInfo *)v15, a2, a3);
  unsigned int v22 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 32) + 6840LL))( a1,  a2,  v21,  a4,  a5);
  signed int v23 = mach_absolute_time();
  BOOL v24 = vdupq_n_s64(1uLL);
  v24.i64[0] = v23 - v22;
  *(int64x2_t *)(v15 + 3696) = vaddq_s64(v24, *(int64x2_t *)(v15 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v15);
    if (gBreakOnError)
    {
      v33 = *(unsigned int *)(v15 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v15);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v16);
    uint64_t v26 = v25 - 1;
  }

  while (__stlxr(v26, v16));
  if (gCheckGLErrors) {
    id v27 = v26 < 1;
  }
  else {
    id v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v15);
  }
}

void program_uniform_matrix2x3fv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    id v29 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v28 = handle_opengl_thread_conflict((const void **)v17);
    id v29 = [(id)DYGetGLGuestAppClient(v28) waitOnGraphicsSemaphoreAssertions];
    if ((int)v29 >= 1)
    {
      do
LABEL_34:
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      id v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v29) graphicsLockWaitQueue];
      dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6848LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v29) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v27 = __ldaxr(v18);
      while (__stlxr(v27 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6848LL))( a1,  a2,  v23,  a4,  a5,  a6);
  ++*(void *)(v17 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      uint64_t v32 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v32) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v32, v17);
      }
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

{
  void *v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64x2_t v26;
  unsigned int v27;
  signed int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  dispatch_queue_s *v34;
  uint64_t v35;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    uint64_t v32 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    id v31 = handle_opengl_thread_conflict((const void **)v17);
    uint64_t v32 = [(id)DYGetGLGuestAppClient(v31) waitOnGraphicsSemaphoreAssertions];
    if ((int)v32 >= 1)
    {
      do
LABEL_34:
        v33 = __ldaxr(v18);
      while (__stlxr(v33 - 1, v18));
      uint64_t v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v32) graphicsLockWaitQueue];
      dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6848LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v32) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  unsigned int v24 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6848LL))( a1,  a2,  v23,  a4,  a5,  a6);
  signed int v25 = mach_absolute_time();
  BOOL v26 = vdupq_n_s64(1uLL);
  v26.i64[0] = v25 - v24;
  *(int64x2_t *)(v17 + 3696) = vaddq_s64(v26, *(int64x2_t *)(v17 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      v35 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v35) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v35, v17);
      }
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v18);
    uint64_t v28 = v27 - 1;
  }

  while (__stlxr(v28, v18));
  if (gCheckGLErrors) {
    id v29 = v28 < 1;
  }
  else {
    id v29 = 1;
  }
  if (!v29) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

void program_uniform_matrix3x2fv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    id v29 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v28 = handle_opengl_thread_conflict((const void **)v17);
    id v29 = [(id)DYGetGLGuestAppClient(v28) waitOnGraphicsSemaphoreAssertions];
    if ((int)v29 >= 1)
    {
      do
LABEL_34:
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      id v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v29) graphicsLockWaitQueue];
      dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6856LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v29) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v27 = __ldaxr(v18);
      while (__stlxr(v27 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6856LL))( a1,  a2,  v23,  a4,  a5,  a6);
  ++*(void *)(v17 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      uint64_t v32 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v32) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v32, v17);
      }
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

{
  void *v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64x2_t v26;
  unsigned int v27;
  signed int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  dispatch_queue_s *v34;
  uint64_t v35;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    uint64_t v32 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    id v31 = handle_opengl_thread_conflict((const void **)v17);
    uint64_t v32 = [(id)DYGetGLGuestAppClient(v31) waitOnGraphicsSemaphoreAssertions];
    if ((int)v32 >= 1)
    {
      do
LABEL_34:
        v33 = __ldaxr(v18);
      while (__stlxr(v33 - 1, v18));
      uint64_t v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v32) graphicsLockWaitQueue];
      dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6856LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v32) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  unsigned int v24 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6856LL))( a1,  a2,  v23,  a4,  a5,  a6);
  signed int v25 = mach_absolute_time();
  BOOL v26 = vdupq_n_s64(1uLL);
  v26.i64[0] = v25 - v24;
  *(int64x2_t *)(v17 + 3696) = vaddq_s64(v26, *(int64x2_t *)(v17 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      v35 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v35) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v35, v17);
      }
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v18);
    uint64_t v28 = v27 - 1;
  }

  while (__stlxr(v28, v18));
  if (gCheckGLErrors) {
    id v29 = v28 < 1;
  }
  else {
    id v29 = 1;
  }
  if (!v29) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

void program_uniform_matrix2x4fv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    id v29 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v28 = handle_opengl_thread_conflict((const void **)v17);
    id v29 = [(id)DYGetGLGuestAppClient(v28) waitOnGraphicsSemaphoreAssertions];
    if ((int)v29 >= 1)
    {
      do
LABEL_34:
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      id v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v29) graphicsLockWaitQueue];
      dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6864LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v29) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v27 = __ldaxr(v18);
      while (__stlxr(v27 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6864LL))( a1,  a2,  v23,  a4,  a5,  a6);
  ++*(void *)(v17 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      uint64_t v32 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v32) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v32, v17);
      }
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

{
  void *v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64x2_t v26;
  unsigned int v27;
  signed int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  dispatch_queue_s *v34;
  uint64_t v35;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    uint64_t v32 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    id v31 = handle_opengl_thread_conflict((const void **)v17);
    uint64_t v32 = [(id)DYGetGLGuestAppClient(v31) waitOnGraphicsSemaphoreAssertions];
    if ((int)v32 >= 1)
    {
      do
LABEL_34:
        v33 = __ldaxr(v18);
      while (__stlxr(v33 - 1, v18));
      uint64_t v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v32) graphicsLockWaitQueue];
      dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6864LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v32) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  unsigned int v24 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6864LL))( a1,  a2,  v23,  a4,  a5,  a6);
  signed int v25 = mach_absolute_time();
  BOOL v26 = vdupq_n_s64(1uLL);
  v26.i64[0] = v25 - v24;
  *(int64x2_t *)(v17 + 3696) = vaddq_s64(v26, *(int64x2_t *)(v17 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      v35 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v35) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v35, v17);
      }
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v18);
    uint64_t v28 = v27 - 1;
  }

  while (__stlxr(v28, v18));
  if (gCheckGLErrors) {
    id v29 = v28 < 1;
  }
  else {
    id v29 = 1;
  }
  if (!v29) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

void program_uniform_matrix4x2fv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    id v29 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v28 = handle_opengl_thread_conflict((const void **)v17);
    id v29 = [(id)DYGetGLGuestAppClient(v28) waitOnGraphicsSemaphoreAssertions];
    if ((int)v29 >= 1)
    {
      do
LABEL_34:
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      id v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v29) graphicsLockWaitQueue];
      dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6872LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v29) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v27 = __ldaxr(v18);
      while (__stlxr(v27 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6872LL))( a1,  a2,  v23,  a4,  a5,  a6);
  ++*(void *)(v17 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      uint64_t v32 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v32) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v32, v17);
      }
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

{
  void *v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64x2_t v26;
  unsigned int v27;
  signed int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  dispatch_queue_s *v34;
  uint64_t v35;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    uint64_t v32 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    id v31 = handle_opengl_thread_conflict((const void **)v17);
    uint64_t v32 = [(id)DYGetGLGuestAppClient(v31) waitOnGraphicsSemaphoreAssertions];
    if ((int)v32 >= 1)
    {
      do
LABEL_34:
        v33 = __ldaxr(v18);
      while (__stlxr(v33 - 1, v18));
      uint64_t v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v32) graphicsLockWaitQueue];
      dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6872LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v32) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  unsigned int v24 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6872LL))( a1,  a2,  v23,  a4,  a5,  a6);
  signed int v25 = mach_absolute_time();
  BOOL v26 = vdupq_n_s64(1uLL);
  v26.i64[0] = v25 - v24;
  *(int64x2_t *)(v17 + 3696) = vaddq_s64(v26, *(int64x2_t *)(v17 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      v35 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v35) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v35, v17);
      }
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v18);
    uint64_t v28 = v27 - 1;
  }

  while (__stlxr(v28, v18));
  if (gCheckGLErrors) {
    id v29 = v28 < 1;
  }
  else {
    id v29 = 1;
  }
  if (!v29) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

void program_uniform_matrix3x4fv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    id v29 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v28 = handle_opengl_thread_conflict((const void **)v17);
    id v29 = [(id)DYGetGLGuestAppClient(v28) waitOnGraphicsSemaphoreAssertions];
    if ((int)v29 >= 1)
    {
      do
LABEL_34:
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      id v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v29) graphicsLockWaitQueue];
      dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6880LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v29) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v27 = __ldaxr(v18);
      while (__stlxr(v27 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6880LL))( a1,  a2,  v23,  a4,  a5,  a6);
  ++*(void *)(v17 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      uint64_t v32 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v32) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v32, v17);
      }
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

{
  void *v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64x2_t v26;
  unsigned int v27;
  signed int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  dispatch_queue_s *v34;
  uint64_t v35;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    uint64_t v32 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    id v31 = handle_opengl_thread_conflict((const void **)v17);
    uint64_t v32 = [(id)DYGetGLGuestAppClient(v31) waitOnGraphicsSemaphoreAssertions];
    if ((int)v32 >= 1)
    {
      do
LABEL_34:
        v33 = __ldaxr(v18);
      while (__stlxr(v33 - 1, v18));
      uint64_t v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v32) graphicsLockWaitQueue];
      dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6880LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v32) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  unsigned int v24 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6880LL))( a1,  a2,  v23,  a4,  a5,  a6);
  signed int v25 = mach_absolute_time();
  BOOL v26 = vdupq_n_s64(1uLL);
  v26.i64[0] = v25 - v24;
  *(int64x2_t *)(v17 + 3696) = vaddq_s64(v26, *(int64x2_t *)(v17 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      v35 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v35) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v35, v17);
      }
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v18);
    uint64_t v28 = v27 - 1;
  }

  while (__stlxr(v28, v18));
  if (gCheckGLErrors) {
    id v29 = v28 < 1;
  }
  else {
    id v29 = 1;
  }
  if (!v29) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

void program_uniform_matrix4x3fv( __GLIContextRec *a1, volatile int *a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    id v29 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v28 = handle_opengl_thread_conflict((const void **)v17);
    id v29 = [(id)DYGetGLGuestAppClient(v28) waitOnGraphicsSemaphoreAssertions];
    if ((int)v29 >= 1)
    {
      do
LABEL_34:
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      id v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v29) graphicsLockWaitQueue];
      dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6888LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v29) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v27 = __ldaxr(v18);
      while (__stlxr(v27 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6888LL))( a1,  a2,  v23,  a4,  a5,  a6);
  ++*(void *)(v17 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      uint64_t v32 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v32) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v32, v17);
      }
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

{
  void *v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64x2_t v26;
  unsigned int v27;
  signed int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  dispatch_queue_s *v34;
  uint64_t v35;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    uint64_t v32 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    id v31 = handle_opengl_thread_conflict((const void **)v17);
    uint64_t v32 = [(id)DYGetGLGuestAppClient(v31) waitOnGraphicsSemaphoreAssertions];
    if ((int)v32 >= 1)
    {
      do
LABEL_34:
        v33 = __ldaxr(v18);
      while (__stlxr(v33 - 1, v18));
      uint64_t v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v32) graphicsLockWaitQueue];
      dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6888LL))( a1,  a2,  a3,  a4,  a5,  a6);
      return;
    }
  }

  *(_BYTE *)(v17 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v32) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v30 = __ldaxr(v18);
      while (__stlxr(v30 - 1, v18));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v23 = wrapper_map_uniform_loc((ContextInfo *)v17, a2, a3);
  unsigned int v24 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, volatile int *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 32) + 6888LL))( a1,  a2,  v23,  a4,  a5,  a6);
  signed int v25 = mach_absolute_time();
  BOOL v26 = vdupq_n_s64(1uLL);
  v26.i64[0] = v25 - v24;
  *(int64x2_t *)(v17 + 3696) = vaddq_s64(v26, *(int64x2_t *)(v17 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v17);
    if (gBreakOnError)
    {
      v35 = *(unsigned int *)(v17 + 3404);
      if ((_DWORD)v35) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v35, v17);
      }
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v18);
    uint64_t v28 = v27 - 1;
  }

  while (__stlxr(v28, v18));
  if (gCheckGLErrors) {
    id v29 = v28 < 1;
  }
  else {
    id v29 = 1;
  }
  if (!v29) {
    handle_opengl_thread_conflict((const void **)v17);
  }
}

void fogxv(__GLIContextRec *a1, uint64_t a2, const int *a3)
{
  v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (v15)
  {
    id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v21 = handle_opengl_thread_conflict((const void **)v11);
    id v22 = [(id)DYGetGLGuestAppClient(v21) waitOnGraphicsSemaphoreAssertions];
    if ((int)v22 >= 1)
    {
      do
LABEL_34:
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
      dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 24) + 7808LL))(a1, a2, a3);
      return;
    }
  }

  *(_BYTE *)(v11 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v16 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v16)
    {
      do
        unsigned int v20 = __ldaxr(v12);
      while (__stlxr(v20 - 1, v12));
      [(id)DYGetGLGuestAppClient(v16) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 32) + 7808LL))(a1, a2, a3);
  ++*(void *)(v11 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v11);
    if (gBreakOnError)
    {
      uint64_t v25 = *(unsigned int *)(v11 + 3404);
      if ((_DWORD)v25) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v25, v11);
      }
    }
  }

  do
  {
    unsigned int v17 = __ldaxr(v12);
    signed int v18 = v17 - 1;
  }

  while (__stlxr(v18, v12));
  if (gCheckGLErrors) {
    BOOL v19 = v18 < 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    handle_opengl_thread_conflict((const void **)v11);
  }
}

{
  void *v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  void *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  signed int v14;
  BOOL v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  int64x2_t v19;
  unsigned int v20;
  signed int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  id v25;
  unsigned int v26;
  dispatch_queue_s *v27;
  uint64_t v28;
  v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (v15)
  {
    uint64_t v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    unsigned int v24 = handle_opengl_thread_conflict((const void **)v11);
    uint64_t v25 = [(id)DYGetGLGuestAppClient(v24) waitOnGraphicsSemaphoreAssertions];
    if ((int)v25 >= 1)
    {
      do
LABEL_34:
        BOOL v26 = __ldaxr(v12);
      while (__stlxr(v26 - 1, v12));
      unsigned int v27 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
      dispatch_sync_f(v27, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 24) + 7808LL))(a1, a2, a3);
      return;
    }
  }

  *(_BYTE *)(v11 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v25) state] == (char *)&dword_0 + 1)
  {
    id v16 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v16)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(v16) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v17 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 32) + 7808LL))(a1, a2, a3);
  signed int v18 = mach_absolute_time();
  BOOL v19 = vdupq_n_s64(1uLL);
  v19.i64[0] = v18 - v17;
  *(int64x2_t *)(v11 + 3696) = vaddq_s64(v19, *(int64x2_t *)(v11 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v11);
    if (gBreakOnError)
    {
      uint64_t v28 = *(unsigned int *)(v11 + 3404);
      if ((_DWORD)v28) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v28, v11);
      }
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v12);
    uint64_t v21 = v20 - 1;
  }

  while (__stlxr(v21, v12));
  if (gCheckGLErrors) {
    id v22 = v21 < 1;
  }
  else {
    id v22 = 1;
  }
  if (!v22) {
    handle_opengl_thread_conflict((const void **)v11);
  }
}

void frustumx(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  signed int v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      signed int v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    signed int v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  unsigned int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    id v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v29 = handle_opengl_thread_conflict((const void **)v19);
    id v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        unsigned int v31 = __ldaxr(v20);
      while (__stlxr(v31 - 1, v20));
      uint64_t v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 7824LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7);
      return;
    }
  }

  *(_BYTE *)(v19 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v28 = __ldaxr(v20);
      while (__stlxr(v28 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 32)
                                                                                                  + 7824LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7);
  ++*(void *)(v19 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v19);
    if (gBreakOnError)
    {
      uint64_t v33 = *(unsigned int *)(v19 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v19);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v20);
    signed int v26 = v25 - 1;
  }

  while (__stlxr(v26, v20));
  if (gCheckGLErrors) {
    BOOL v27 = v26 < 1;
  }
  else {
    BOOL v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

{
  void *v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  void *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  signed int v22;
  BOOL v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64x2_t v29;
  unsigned int v30;
  signed int v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  id v35;
  unsigned int v36;
  dispatch_queue_s *v37;
  uint64_t v38;
  signed int v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      signed int v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    signed int v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  unsigned int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    v35 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v34 = handle_opengl_thread_conflict((const void **)v19);
    v35 = [(id)DYGetGLGuestAppClient(v34) waitOnGraphicsSemaphoreAssertions];
    if ((int)v35 >= 1)
    {
      do
LABEL_34:
        v36 = __ldaxr(v20);
      while (__stlxr(v36 - 1, v20));
      v37 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v35) graphicsLockWaitQueue];
      dispatch_sync_f(v37, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 7824LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7);
      return;
    }
  }

  *(_BYTE *)(v19 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v35) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        uint64_t v33 = __ldaxr(v20);
      while (__stlxr(v33 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v25 = mach_absolute_time();
  signed int v26 = a7;
  BOOL v27 = v25;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 32)
                                                                                                  + 7824LL))( a1,  a2,  a3,  a4,  a5,  a6,  v26);
  unsigned int v28 = mach_absolute_time();
  uint64_t v29 = vdupq_n_s64(1uLL);
  v29.i64[0] = v28 - v27;
  *(int64x2_t *)(v19 + 3696) = vaddq_s64(v29, *(int64x2_t *)(v19 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v19);
    if (gBreakOnError)
    {
      v38 = *(unsigned int *)(v19 + 3404);
      if ((_DWORD)v38) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v38, v19);
      }
    }
  }

  do
  {
    id v30 = __ldaxr(v20);
    unsigned int v31 = v30 - 1;
  }

  while (__stlxr(v31, v20));
  if (gCheckGLErrors) {
    uint64_t v32 = v31 < 1;
  }
  else {
    uint64_t v32 = 1;
  }
  if (!v32) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

void get_lightxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v23 = handle_opengl_thread_conflict((const void **)v13);
    id v24 = [(id)DYGetGLGuestAppClient(v23) waitOnGraphicsSemaphoreAssertions];
    if ((int)v24 >= 1)
    {
      do
LABEL_34:
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      signed int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
      dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7856LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v22 = __ldaxr(v14);
      while (__stlxr(v22 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 32) + 7856LL))(a1, a2, a3, a4);
  ++*(void *)(v13 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      uint64_t v27 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v27) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v27, v13);
      }
    }
  }

  do
  {
    unsigned int v19 = __ldaxr(v14);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v14));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  signed int v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t v21;
  unsigned int v22;
  signed int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  id v27;
  unsigned int v28;
  dispatch_queue_s *v29;
  uint64_t v30;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    uint64_t v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    signed int v26 = handle_opengl_thread_conflict((const void **)v13);
    uint64_t v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v14);
      while (__stlxr(v28 - 1, v14));
      uint64_t v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7856LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v19 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 32) + 7856LL))(a1, a2, a3, a4);
  signed int v20 = mach_absolute_time();
  BOOL v21 = vdupq_n_s64(1uLL);
  v21.i64[0] = v20 - v19;
  *(int64x2_t *)(v13 + 3696) = vaddq_s64(v21, *(int64x2_t *)(v13 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      id v30 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v13);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v14);
    uint64_t v23 = v22 - 1;
  }

  while (__stlxr(v23, v14));
  if (gCheckGLErrors) {
    id v24 = v23 < 1;
  }
  else {
    id v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

void get_materialxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v23 = handle_opengl_thread_conflict((const void **)v13);
    id v24 = [(id)DYGetGLGuestAppClient(v23) waitOnGraphicsSemaphoreAssertions];
    if ((int)v24 >= 1)
    {
      do
LABEL_34:
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      signed int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
      dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7864LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v22 = __ldaxr(v14);
      while (__stlxr(v22 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 32) + 7864LL))(a1, a2, a3, a4);
  ++*(void *)(v13 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      uint64_t v27 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v27) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v27, v13);
      }
    }
  }

  do
  {
    unsigned int v19 = __ldaxr(v14);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v14));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  signed int v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t v21;
  unsigned int v22;
  signed int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  id v27;
  unsigned int v28;
  dispatch_queue_s *v29;
  uint64_t v30;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    uint64_t v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    signed int v26 = handle_opengl_thread_conflict((const void **)v13);
    uint64_t v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v14);
      while (__stlxr(v28 - 1, v14));
      uint64_t v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7864LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v19 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 32) + 7864LL))(a1, a2, a3, a4);
  signed int v20 = mach_absolute_time();
  BOOL v21 = vdupq_n_s64(1uLL);
  v21.i64[0] = v20 - v19;
  *(int64x2_t *)(v13 + 3696) = vaddq_s64(v21, *(int64x2_t *)(v13 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      id v30 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v13);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v14);
    uint64_t v23 = v22 - 1;
  }

  while (__stlxr(v23, v14));
  if (gCheckGLErrors) {
    id v24 = v23 < 1;
  }
  else {
    id v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

void get_tex_envxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v23 = handle_opengl_thread_conflict((const void **)v13);
    id v24 = [(id)DYGetGLGuestAppClient(v23) waitOnGraphicsSemaphoreAssertions];
    if ((int)v24 >= 1)
    {
      do
LABEL_34:
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      signed int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
      dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7872LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v22 = __ldaxr(v14);
      while (__stlxr(v22 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 32) + 7872LL))(a1, a2, a3, a4);
  ++*(void *)(v13 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      uint64_t v27 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v27) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v27, v13);
      }
    }
  }

  do
  {
    unsigned int v19 = __ldaxr(v14);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v14));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  signed int v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t v21;
  unsigned int v22;
  signed int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  id v27;
  unsigned int v28;
  dispatch_queue_s *v29;
  uint64_t v30;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    uint64_t v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    signed int v26 = handle_opengl_thread_conflict((const void **)v13);
    uint64_t v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v14);
      while (__stlxr(v28 - 1, v14));
      uint64_t v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7872LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v19 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 32) + 7872LL))(a1, a2, a3, a4);
  signed int v20 = mach_absolute_time();
  BOOL v21 = vdupq_n_s64(1uLL);
  v21.i64[0] = v20 - v19;
  *(int64x2_t *)(v13 + 3696) = vaddq_s64(v21, *(int64x2_t *)(v13 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      id v30 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v13);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v14);
    uint64_t v23 = v22 - 1;
  }

  while (__stlxr(v23, v14));
  if (gCheckGLErrors) {
    id v24 = v23 < 1;
  }
  else {
    id v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

void get_tex_parameterxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v23 = handle_opengl_thread_conflict((const void **)v13);
    id v24 = [(id)DYGetGLGuestAppClient(v23) waitOnGraphicsSemaphoreAssertions];
    if ((int)v24 >= 1)
    {
      do
LABEL_34:
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      signed int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
      dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7880LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v22 = __ldaxr(v14);
      while (__stlxr(v22 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 32) + 7880LL))(a1, a2, a3, a4);
  ++*(void *)(v13 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      uint64_t v27 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v27) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v27, v13);
      }
    }
  }

  do
  {
    unsigned int v19 = __ldaxr(v14);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v14));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  signed int v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t v21;
  unsigned int v22;
  signed int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  id v27;
  unsigned int v28;
  dispatch_queue_s *v29;
  uint64_t v30;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    uint64_t v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    signed int v26 = handle_opengl_thread_conflict((const void **)v13);
    uint64_t v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v14);
      while (__stlxr(v28 - 1, v14));
      uint64_t v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7880LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v19 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 32) + 7880LL))(a1, a2, a3, a4);
  signed int v20 = mach_absolute_time();
  BOOL v21 = vdupq_n_s64(1uLL);
  v21.i64[0] = v20 - v19;
  *(int64x2_t *)(v13 + 3696) = vaddq_s64(v21, *(int64x2_t *)(v13 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      id v30 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v13);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v14);
    uint64_t v23 = v22 - 1;
  }

  while (__stlxr(v23, v14));
  if (gCheckGLErrors) {
    id v24 = v23 < 1;
  }
  else {
    id v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

void light_modelxv(__GLIContextRec *a1, uint64_t a2, const int *a3)
{
  v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (v15)
  {
    id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v21 = handle_opengl_thread_conflict((const void **)v11);
    id v22 = [(id)DYGetGLGuestAppClient(v21) waitOnGraphicsSemaphoreAssertions];
    if ((int)v22 >= 1)
    {
      do
LABEL_34:
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
      dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 24) + 7896LL))(a1, a2, a3);
      return;
    }
  }

  *(_BYTE *)(v11 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v16 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v16)
    {
      do
        unsigned int v20 = __ldaxr(v12);
      while (__stlxr(v20 - 1, v12));
      [(id)DYGetGLGuestAppClient(v16) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 32) + 7896LL))(a1, a2, a3);
  ++*(void *)(v11 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v11);
    if (gBreakOnError)
    {
      uint64_t v25 = *(unsigned int *)(v11 + 3404);
      if ((_DWORD)v25) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v25, v11);
      }
    }
  }

  do
  {
    unsigned int v17 = __ldaxr(v12);
    signed int v18 = v17 - 1;
  }

  while (__stlxr(v18, v12));
  if (gCheckGLErrors) {
    BOOL v19 = v18 < 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    handle_opengl_thread_conflict((const void **)v11);
  }
}

{
  void *v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  void *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  signed int v14;
  BOOL v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  int64x2_t v19;
  unsigned int v20;
  signed int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  id v25;
  unsigned int v26;
  dispatch_queue_s *v27;
  uint64_t v28;
  v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (v15)
  {
    uint64_t v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    id v24 = handle_opengl_thread_conflict((const void **)v11);
    uint64_t v25 = [(id)DYGetGLGuestAppClient(v24) waitOnGraphicsSemaphoreAssertions];
    if ((int)v25 >= 1)
    {
      do
LABEL_34:
        signed int v26 = __ldaxr(v12);
      while (__stlxr(v26 - 1, v12));
      uint64_t v27 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
      dispatch_sync_f(v27, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 24) + 7896LL))(a1, a2, a3);
      return;
    }
  }

  *(_BYTE *)(v11 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v25) state] == (char *)&dword_0 + 1)
  {
    id v16 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v16)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(v16) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v17 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 32) + 7896LL))(a1, a2, a3);
  signed int v18 = mach_absolute_time();
  BOOL v19 = vdupq_n_s64(1uLL);
  v19.i64[0] = v18 - v17;
  *(int64x2_t *)(v11 + 3696) = vaddq_s64(v19, *(int64x2_t *)(v11 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v11);
    if (gBreakOnError)
    {
      unsigned int v28 = *(unsigned int *)(v11 + 3404);
      if ((_DWORD)v28) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v28, v11);
      }
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v12);
    uint64_t v21 = v20 - 1;
  }

  while (__stlxr(v21, v12));
  if (gCheckGLErrors) {
    id v22 = v21 < 1;
  }
  else {
    id v22 = 1;
  }
  if (!v22) {
    handle_opengl_thread_conflict((const void **)v11);
  }
}

void lightxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v23 = handle_opengl_thread_conflict((const void **)v13);
    id v24 = [(id)DYGetGLGuestAppClient(v23) waitOnGraphicsSemaphoreAssertions];
    if ((int)v24 >= 1)
    {
      do
LABEL_34:
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      signed int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
      dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 7912LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v22 = __ldaxr(v14);
      while (__stlxr(v22 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 32) + 7912LL))( a1,  a2,  a3,  a4);
  ++*(void *)(v13 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      uint64_t v27 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v27) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v27, v13);
      }
    }
  }

  do
  {
    unsigned int v19 = __ldaxr(v14);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v14));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  signed int v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t v21;
  unsigned int v22;
  signed int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  id v27;
  unsigned int v28;
  dispatch_queue_s *v29;
  uint64_t v30;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    uint64_t v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    signed int v26 = handle_opengl_thread_conflict((const void **)v13);
    uint64_t v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v14);
      while (__stlxr(v28 - 1, v14));
      uint64_t v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 7912LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v19 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 32) + 7912LL))( a1,  a2,  a3,  a4);
  signed int v20 = mach_absolute_time();
  BOOL v21 = vdupq_n_s64(1uLL);
  v21.i64[0] = v20 - v19;
  *(int64x2_t *)(v13 + 3696) = vaddq_s64(v21, *(int64x2_t *)(v13 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      id v30 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v13);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v14);
    uint64_t v23 = v22 - 1;
  }

  while (__stlxr(v23, v14));
  if (gCheckGLErrors) {
    id v24 = v23 < 1;
  }
  else {
    id v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

void materialxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v23 = handle_opengl_thread_conflict((const void **)v13);
    id v24 = [(id)DYGetGLGuestAppClient(v23) waitOnGraphicsSemaphoreAssertions];
    if ((int)v24 >= 1)
    {
      do
LABEL_34:
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      signed int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
      dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 7944LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v22 = __ldaxr(v14);
      while (__stlxr(v22 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 32) + 7944LL))( a1,  a2,  a3,  a4);
  ++*(void *)(v13 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      uint64_t v27 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v27) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v27, v13);
      }
    }
  }

  do
  {
    unsigned int v19 = __ldaxr(v14);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v14));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  signed int v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t v21;
  unsigned int v22;
  signed int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  id v27;
  unsigned int v28;
  dispatch_queue_s *v29;
  uint64_t v30;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    uint64_t v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    signed int v26 = handle_opengl_thread_conflict((const void **)v13);
    uint64_t v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v14);
      while (__stlxr(v28 - 1, v14));
      uint64_t v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 7944LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v19 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 32) + 7944LL))( a1,  a2,  a3,  a4);
  signed int v20 = mach_absolute_time();
  BOOL v21 = vdupq_n_s64(1uLL);
  v21.i64[0] = v20 - v19;
  *(int64x2_t *)(v13 + 3696) = vaddq_s64(v21, *(int64x2_t *)(v13 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      id v30 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v13);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v14);
    uint64_t v23 = v22 - 1;
  }

  while (__stlxr(v23, v14));
  if (gCheckGLErrors) {
    id v24 = v23 < 1;
  }
  else {
    id v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

void orthox(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  signed int v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      id v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    signed int v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  signed int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    id v30 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v29 = handle_opengl_thread_conflict((const void **)v19);
    id v30 = [(id)DYGetGLGuestAppClient(v29) waitOnGraphicsSemaphoreAssertions];
    if ((int)v30 >= 1)
    {
      do
LABEL_34:
        unsigned int v31 = __ldaxr(v20);
      while (__stlxr(v31 - 1, v20));
      uint64_t v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v30) graphicsLockWaitQueue];
      dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 7976LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7);
      return;
    }
  }

  *(_BYTE *)(v19 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v30) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v28 = __ldaxr(v20);
      while (__stlxr(v28 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 32)
                                                                                                  + 7976LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7);
  ++*(void *)(v19 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v19);
    if (gBreakOnError)
    {
      uint64_t v33 = *(unsigned int *)(v19 + 3404);
      if ((_DWORD)v33) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v33, v19);
      }
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v20);
    signed int v26 = v25 - 1;
  }

  while (__stlxr(v26, v20));
  if (gCheckGLErrors) {
    BOOL v27 = v26 < 1;
  }
  else {
    BOOL v27 = 1;
  }
  if (!v27) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

{
  void *v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  void *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  signed int v22;
  BOOL v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64x2_t v29;
  unsigned int v30;
  signed int v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  id v35;
  unsigned int v36;
  dispatch_queue_s *v37;
  uint64_t v38;
  signed int v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      id v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    signed int v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  signed int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    v35 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v34 = handle_opengl_thread_conflict((const void **)v19);
    v35 = [(id)DYGetGLGuestAppClient(v34) waitOnGraphicsSemaphoreAssertions];
    if ((int)v35 >= 1)
    {
      do
LABEL_34:
        v36 = __ldaxr(v20);
      while (__stlxr(v36 - 1, v20));
      v37 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v35) graphicsLockWaitQueue];
      dispatch_sync_f(v37, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 7976LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7);
      return;
    }
  }

  *(_BYTE *)(v19 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v35) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        uint64_t v33 = __ldaxr(v20);
      while (__stlxr(v33 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v25 = mach_absolute_time();
  signed int v26 = a7;
  BOOL v27 = v25;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 32)
                                                                                                  + 7976LL))( a1,  a2,  a3,  a4,  a5,  a6,  v26);
  unsigned int v28 = mach_absolute_time();
  uint64_t v29 = vdupq_n_s64(1uLL);
  v29.i64[0] = v28 - v27;
  *(int64x2_t *)(v19 + 3696) = vaddq_s64(v29, *(int64x2_t *)(v19 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v19);
    if (gBreakOnError)
    {
      v38 = *(unsigned int *)(v19 + 3404);
      if ((_DWORD)v38) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v38, v19);
      }
    }
  }

  do
  {
    id v30 = __ldaxr(v20);
    unsigned int v31 = v30 - 1;
  }

  while (__stlxr(v31, v20));
  if (gCheckGLErrors) {
    uint64_t v32 = v31 < 1;
  }
  else {
    uint64_t v32 = 1;
  }
  if (!v32) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

void tex_envxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v23 = handle_opengl_thread_conflict((const void **)v13);
    id v24 = [(id)DYGetGLGuestAppClient(v23) waitOnGraphicsSemaphoreAssertions];
    if ((int)v24 >= 1)
    {
      do
LABEL_34:
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      signed int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
      dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 8024LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v22 = __ldaxr(v14);
      while (__stlxr(v22 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 32) + 8024LL))( a1,  a2,  a3,  a4);
  ++*(void *)(v13 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      uint64_t v27 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v27) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v27, v13);
      }
    }
  }

  do
  {
    unsigned int v19 = __ldaxr(v14);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v14));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  signed int v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t v21;
  unsigned int v22;
  signed int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  id v27;
  unsigned int v28;
  dispatch_queue_s *v29;
  uint64_t v30;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    uint64_t v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    signed int v26 = handle_opengl_thread_conflict((const void **)v13);
    uint64_t v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v14);
      while (__stlxr(v28 - 1, v14));
      uint64_t v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 8024LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v19 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 32) + 8024LL))( a1,  a2,  a3,  a4);
  signed int v20 = mach_absolute_time();
  BOOL v21 = vdupq_n_s64(1uLL);
  v21.i64[0] = v20 - v19;
  *(int64x2_t *)(v13 + 3696) = vaddq_s64(v21, *(int64x2_t *)(v13 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      id v30 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v13);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v14);
    uint64_t v23 = v22 - 1;
  }

  while (__stlxr(v23, v14));
  if (gCheckGLErrors) {
    id v24 = v23 < 1;
  }
  else {
    id v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

void tex_parameterx(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v23 = handle_opengl_thread_conflict((const void **)v13);
    id v24 = [(id)DYGetGLGuestAppClient(v23) waitOnGraphicsSemaphoreAssertions];
    if ((int)v24 >= 1)
    {
      do
LABEL_34:
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      signed int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
      dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 8032LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v22 = __ldaxr(v14);
      while (__stlxr(v22 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 32) + 8032LL))( a1,  a2,  a3,  a4);
  ++*(void *)(v13 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      uint64_t v27 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v27) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v27, v13);
      }
    }
  }

  do
  {
    unsigned int v19 = __ldaxr(v14);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v14));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  signed int v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t v21;
  unsigned int v22;
  signed int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  id v27;
  unsigned int v28;
  dispatch_queue_s *v29;
  uint64_t v30;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    uint64_t v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    signed int v26 = handle_opengl_thread_conflict((const void **)v13);
    uint64_t v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v14);
      while (__stlxr(v28 - 1, v14));
      uint64_t v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 8032LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v19 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 32) + 8032LL))( a1,  a2,  a3,  a4);
  signed int v20 = mach_absolute_time();
  BOOL v21 = vdupq_n_s64(1uLL);
  v21.i64[0] = v20 - v19;
  *(int64x2_t *)(v13 + 3696) = vaddq_s64(v21, *(int64x2_t *)(v13 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      id v30 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v13);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v14);
    uint64_t v23 = v22 - 1;
  }

  while (__stlxr(v23, v14));
  if (gCheckGLErrors) {
    id v24 = v23 < 1;
  }
  else {
    id v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

void tex_parameterxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v23 = handle_opengl_thread_conflict((const void **)v13);
    id v24 = [(id)DYGetGLGuestAppClient(v23) waitOnGraphicsSemaphoreAssertions];
    if ((int)v24 >= 1)
    {
      do
LABEL_34:
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      signed int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
      dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 8040LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v22 = __ldaxr(v14);
      while (__stlxr(v22 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 32) + 8040LL))( a1,  a2,  a3,  a4);
  ++*(void *)(v13 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      uint64_t v27 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v27) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v27, v13);
      }
    }
  }

  do
  {
    unsigned int v19 = __ldaxr(v14);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v14));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  signed int v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t v21;
  unsigned int v22;
  signed int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  id v27;
  unsigned int v28;
  dispatch_queue_s *v29;
  uint64_t v30;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    uint64_t v27 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    signed int v26 = handle_opengl_thread_conflict((const void **)v13);
    uint64_t v27 = [(id)DYGetGLGuestAppClient(v26) waitOnGraphicsSemaphoreAssertions];
    if ((int)v27 >= 1)
    {
      do
LABEL_34:
        unsigned int v28 = __ldaxr(v14);
      while (__stlxr(v28 - 1, v14));
      uint64_t v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v27) graphicsLockWaitQueue];
      dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 8040LL))( a1,  a2,  a3,  a4);
      return;
    }
  }

  *(_BYTE *)(v13 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v27) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  unsigned int v19 = mach_absolute_time();
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 32) + 8040LL))( a1,  a2,  a3,  a4);
  signed int v20 = mach_absolute_time();
  BOOL v21 = vdupq_n_s64(1uLL);
  v21.i64[0] = v20 - v19;
  *(int64x2_t *)(v13 + 3696) = vaddq_s64(v21, *(int64x2_t *)(v13 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v13);
    if (gBreakOnError)
    {
      id v30 = *(unsigned int *)(v13 + 3404);
      if ((_DWORD)v30) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v30, v13);
      }
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v14);
    uint64_t v23 = v22 - 1;
  }

  while (__stlxr(v23, v14));
  if (gCheckGLErrors) {
    id v24 = v23 < 1;
  }
  else {
    id v24 = 1;
  }
  if (!v24) {
    handle_opengl_thread_conflict((const void **)v13);
  }
}

void invalidate_sub_framebuffer( __GLIContextRec *a1, uint64_t a2, uint64_t a3, const unsigned int *a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      unsigned int v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    unsigned int v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  BOOL v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (v24)
  {
    id v31 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v30 = handle_opengl_thread_conflict((const void **)v20);
    id v31 = [(id)DYGetGLGuestAppClient(v30) waitOnGraphicsSemaphoreAssertions];
    if ((int)v31 >= 1)
    {
      do
LABEL_34:
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      uint64_t v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v31) graphicsLockWaitQueue];
      dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *, uint64_t, uint64_t, uint64_t, void))(*(void *)(v20 + 24) + 8224LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
      return;
    }
  }

  *(_BYTE *)(v20 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v31) state] == (char *)&dword_0 + 1)
  {
    id v25 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v25)
    {
      do
        unsigned int v29 = __ldaxr(v21);
      while (__stlxr(v29 - 1, v21));
      [(id)DYGetGLGuestAppClient(v25) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *, uint64_t, uint64_t, uint64_t, void))(*(void *)(v20 + 32) + 8224LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
  ++*(void *)(v20 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v20);
    if (gBreakOnError)
    {
      uint64_t v34 = *(unsigned int *)(v20 + 3404);
      if ((_DWORD)v34) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v34, v20);
      }
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v21);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v21));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    handle_opengl_thread_conflict((const void **)v20);
  }
}

void ___ZL24delete_program_pipelinesP15__GLIContextReciPKj_block_invoke_1(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  ++*(void *)(v2 + 3704);
  if (gCheckGLErrors)
  {
    check_errors(v2);
    if (gBreakOnError)
    {
      uint64_t v3 = *(void *)(a1 + 32);
      uint64_t v4 = *(unsigned int *)(v3 + 3404);
      if ((_DWORD)v4) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v4, v3);
      }
    }
  }

void copy_tex_image2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, uint64_t a8, int a9)
{
  unsigned int v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      unsigned int v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    unsigned int v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  BOOL v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (v24)
  {
    id v36 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v35 = handle_opengl_thread_conflict((const void **)v20);
    id v36 = [(id)DYGetGLGuestAppClient(v35) waitOnGraphicsSemaphoreAssertions];
    if ((int)v36 >= 1)
    {
      do
LABEL_34:
        unsigned int v37 = __ldaxr(v21);
      while (__stlxr(v37 - 1, v21));
      v38 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v36) graphicsLockWaitQueue];
      dispatch_sync_f(v38, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t))(*(void *)(v20 + 24) + 432LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
      return;
    }
  }

  *(_BYTE *)(v20 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v36) state] == (char *)&dword_0 + 1)
  {
    id v25 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v25)
    {
      do
        unsigned int v34 = __ldaxr(v21);
      while (__stlxr(v34 - 1, v21));
      [(id)DYGetGLGuestAppClient(v25) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v26 = mach_absolute_time();
  uint64_t v27 = a8;
  uint64_t v28 = v26;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, int))(*(void *)(v20 + 32) + 432LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v27,  a9);
  uint64_t v29 = mach_absolute_time();
  int64x2_t v30 = vdupq_n_s64(1uLL);
  v30.i64[0] = v29 - v28;
  *(int64x2_t *)(v20 + 3696) = vaddq_s64(v30, *(int64x2_t *)(v20 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v20);
    if (gBreakOnError)
    {
      uint64_t v39 = *(unsigned int *)(v20 + 3404);
      if ((_DWORD)v39) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v39, v20);
      }
    }
  }

  do
  {
    unsigned int v31 = __ldaxr(v21);
    signed int v32 = v31 - 1;
  }

  while (__stlxr(v32, v21));
  if (gCheckGLErrors) {
    BOOL v33 = v32 < 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (!v33) {
    handle_opengl_thread_conflict((const void **)v20);
  }
}

void copy_tex_sub_image2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, uint64_t a8, int a9)
{
  unsigned int v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      unsigned int v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    unsigned int v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  BOOL v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (v24)
  {
    id v36 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v35 = handle_opengl_thread_conflict((const void **)v20);
    id v36 = [(id)DYGetGLGuestAppClient(v35) waitOnGraphicsSemaphoreAssertions];
    if ((int)v36 >= 1)
    {
      do
LABEL_34:
        unsigned int v37 = __ldaxr(v21);
      while (__stlxr(v37 - 1, v21));
      v38 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v36) graphicsLockWaitQueue];
      dispatch_sync_f(v38, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t))(*(void *)(v20 + 24) + 448LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
      return;
    }
  }

  *(_BYTE *)(v20 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v36) state] == (char *)&dword_0 + 1)
  {
    id v25 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v25)
    {
      do
        unsigned int v34 = __ldaxr(v21);
      while (__stlxr(v34 - 1, v21));
      [(id)DYGetGLGuestAppClient(v25) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v26 = mach_absolute_time();
  uint64_t v27 = a8;
  uint64_t v28 = v26;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, int))(*(void *)(v20 + 32) + 448LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v27,  a9);
  uint64_t v29 = mach_absolute_time();
  int64x2_t v30 = vdupq_n_s64(1uLL);
  v30.i64[0] = v29 - v28;
  *(int64x2_t *)(v20 + 3696) = vaddq_s64(v30, *(int64x2_t *)(v20 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v20);
    if (gBreakOnError)
    {
      uint64_t v39 = *(unsigned int *)(v20 + 3404);
      if ((_DWORD)v39) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v39, v20);
      }
    }
  }

  do
  {
    unsigned int v31 = __ldaxr(v21);
    signed int v32 = v31 - 1;
  }

  while (__stlxr(v32, v21));
  if (gCheckGLErrors) {
    BOOL v33 = v32 < 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (!v33) {
    handle_opengl_thread_conflict((const void **)v20);
  }
}

void read_pixels( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, void *a8)
{
  unsigned int v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      unsigned int v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    unsigned int v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  BOOL v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (v24)
  {
    id v36 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v35 = handle_opengl_thread_conflict((const void **)v20);
    id v36 = [(id)DYGetGLGuestAppClient(v35) waitOnGraphicsSemaphoreAssertions];
    if ((int)v36 >= 1)
    {
      do
LABEL_34:
        unsigned int v37 = __ldaxr(v21);
      while (__stlxr(v37 - 1, v21));
      v38 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v36) graphicsLockWaitQueue];
      dispatch_sync_f(v38, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void *))(*(void *)(v20 + 24) + 1896LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
      return;
    }
  }

  *(_BYTE *)(v20 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v36) state] == (char *)&dword_0 + 1)
  {
    id v25 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v25)
    {
      do
        unsigned int v34 = __ldaxr(v21);
      while (__stlxr(v34 - 1, v21));
      [(id)DYGetGLGuestAppClient(v25) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v26 = mach_absolute_time();
  uint64_t v27 = a8;
  uint64_t v28 = v26;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void *))(*(void *)(v20 + 32) + 1896LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v27);
  uint64_t v29 = mach_absolute_time();
  int64x2_t v30 = vdupq_n_s64(1uLL);
  v30.i64[0] = v29 - v28;
  *(int64x2_t *)(v20 + 3696) = vaddq_s64(v30, *(int64x2_t *)(v20 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v20);
    if (gBreakOnError)
    {
      uint64_t v39 = *(unsigned int *)(v20 + 3404);
      if ((_DWORD)v39) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v39, v20);
      }
    }
  }

  do
  {
    unsigned int v31 = __ldaxr(v21);
    signed int v32 = v31 - 1;
  }

  while (__stlxr(v32, v21));
  if (gCheckGLErrors) {
    BOOL v33 = v32 < 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (!v33) {
    handle_opengl_thread_conflict((const void **)v20);
  }
}

void tex_image2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9, const void *a10)
{
  unsigned int v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      unsigned int v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    unsigned int v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  BOOL v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (v24)
  {
    id v36 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v35 = handle_opengl_thread_conflict((const void **)v20);
    id v36 = [(id)DYGetGLGuestAppClient(v35) waitOnGraphicsSemaphoreAssertions];
    if ((int)v36 >= 1)
    {
      do
LABEL_34:
        unsigned int v37 = __ldaxr(v21);
      while (__stlxr(v37 - 1, v21));
      v38 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v36) graphicsLockWaitQueue];
      dispatch_sync_f(v38, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, const void *))(*(void *)(v20 + 24) + 2408LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
      return;
    }
  }

  *(_BYTE *)(v20 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v36) state] == (char *)&dword_0 + 1)
  {
    id v25 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v25)
    {
      do
        unsigned int v34 = __ldaxr(v21);
      while (__stlxr(v34 - 1, v21));
      [(id)DYGetGLGuestAppClient(v25) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v26 = mach_absolute_time();
  uint64_t v27 = a8;
  uint64_t v28 = v26;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, _DWORD, const void *))(*(void *)(v20 + 32) + 2408LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v27,  a9,  a10);
  uint64_t v29 = mach_absolute_time();
  int64x2_t v30 = vdupq_n_s64(1uLL);
  v30.i64[0] = v29 - v28;
  *(int64x2_t *)(v20 + 3696) = vaddq_s64(v30, *(int64x2_t *)(v20 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v20);
    if (gBreakOnError)
    {
      uint64_t v39 = *(unsigned int *)(v20 + 3404);
      if ((_DWORD)v39) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v39, v20);
      }
    }
  }

  do
  {
    unsigned int v31 = __ldaxr(v21);
    signed int v32 = v31 - 1;
  }

  while (__stlxr(v32, v21));
  if (gCheckGLErrors) {
    BOOL v33 = v32 < 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (!v33) {
    handle_opengl_thread_conflict((const void **)v20);
  }
}

void tex_sub_image2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9, const void *a10)
{
  unsigned int v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      unsigned int v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    unsigned int v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  BOOL v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (v24)
  {
    id v36 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v35 = handle_opengl_thread_conflict((const void **)v20);
    id v36 = [(id)DYGetGLGuestAppClient(v35) waitOnGraphicsSemaphoreAssertions];
    if ((int)v36 >= 1)
    {
      do
LABEL_34:
        unsigned int v37 = __ldaxr(v21);
      while (__stlxr(v37 - 1, v21));
      v38 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v36) graphicsLockWaitQueue];
      dispatch_sync_f(v38, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, const void *))(*(void *)(v20 + 24) + 2456LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
      return;
    }
  }

  *(_BYTE *)(v20 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v36) state] == (char *)&dword_0 + 1)
  {
    id v25 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v25)
    {
      do
        unsigned int v34 = __ldaxr(v21);
      while (__stlxr(v34 - 1, v21));
      [(id)DYGetGLGuestAppClient(v25) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v26 = mach_absolute_time();
  uint64_t v27 = a8;
  uint64_t v28 = v26;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, _DWORD, const void *))(*(void *)(v20 + 32) + 2456LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v27,  a9,  a10);
  uint64_t v29 = mach_absolute_time();
  int64x2_t v30 = vdupq_n_s64(1uLL);
  v30.i64[0] = v29 - v28;
  *(int64x2_t *)(v20 + 3696) = vaddq_s64(v30, *(int64x2_t *)(v20 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v20);
    if (gBreakOnError)
    {
      uint64_t v39 = *(unsigned int *)(v20 + 3404);
      if ((_DWORD)v39) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v39, v20);
      }
    }
  }

  do
  {
    unsigned int v31 = __ldaxr(v21);
    signed int v32 = v31 - 1;
  }

  while (__stlxr(v32, v21));
  if (gCheckGLErrors) {
    BOOL v33 = v32 < 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (!v33) {
    handle_opengl_thread_conflict((const void **)v20);
  }
}

void compressed_tex_image3D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9, const void *a10)
{
  unsigned int v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      unsigned int v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    unsigned int v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  BOOL v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (v24)
  {
    id v36 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v35 = handle_opengl_thread_conflict((const void **)v20);
    id v36 = [(id)DYGetGLGuestAppClient(v35) waitOnGraphicsSemaphoreAssertions];
    if ((int)v36 >= 1)
    {
      do
LABEL_34:
        unsigned int v37 = __ldaxr(v21);
      while (__stlxr(v37 - 1, v21));
      v38 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v36) graphicsLockWaitQueue];
      dispatch_sync_f(v38, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, const void *))(*(void *)(v20 + 24) + 3032LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
      return;
    }
  }

  *(_BYTE *)(v20 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v36) state] == (char *)&dword_0 + 1)
  {
    id v25 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v25)
    {
      do
        unsigned int v34 = __ldaxr(v21);
      while (__stlxr(v34 - 1, v21));
      [(id)DYGetGLGuestAppClient(v25) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v26 = mach_absolute_time();
  uint64_t v27 = a8;
  uint64_t v28 = v26;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, _DWORD, const void *))(*(void *)(v20 + 32) + 3032LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v27,  a9,  a10);
  uint64_t v29 = mach_absolute_time();
  int64x2_t v30 = vdupq_n_s64(1uLL);
  v30.i64[0] = v29 - v28;
  *(int64x2_t *)(v20 + 3696) = vaddq_s64(v30, *(int64x2_t *)(v20 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v20);
    if (gBreakOnError)
    {
      uint64_t v39 = *(unsigned int *)(v20 + 3404);
      if ((_DWORD)v39) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v39, v20);
      }
    }
  }

  do
  {
    unsigned int v31 = __ldaxr(v21);
    signed int v32 = v31 - 1;
  }

  while (__stlxr(v32, v21));
  if (gCheckGLErrors) {
    BOOL v33 = v32 < 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (!v33) {
    handle_opengl_thread_conflict((const void **)v20);
  }
}

void compressed_tex_image2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, uint64_t a8, const void *a9)
{
  unsigned int v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      unsigned int v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    unsigned int v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  BOOL v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (v24)
  {
    id v36 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v35 = handle_opengl_thread_conflict((const void **)v20);
    id v36 = [(id)DYGetGLGuestAppClient(v35) waitOnGraphicsSemaphoreAssertions];
    if ((int)v36 >= 1)
    {
      do
LABEL_34:
        unsigned int v37 = __ldaxr(v21);
      while (__stlxr(v37 - 1, v21));
      v38 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v36) graphicsLockWaitQueue];
      dispatch_sync_f(v38, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, const void *))(*(void *)(v20 + 24) + 3040LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
      return;
    }
  }

  *(_BYTE *)(v20 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v36) state] == (char *)&dword_0 + 1)
  {
    id v25 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v25)
    {
      do
        unsigned int v34 = __ldaxr(v21);
      while (__stlxr(v34 - 1, v21));
      [(id)DYGetGLGuestAppClient(v25) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v26 = mach_absolute_time();
  uint64_t v27 = a8;
  uint64_t v28 = v26;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, const void *))(*(void *)(v20 + 32) + 3040LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v27,  a9);
  uint64_t v29 = mach_absolute_time();
  int64x2_t v30 = vdupq_n_s64(1uLL);
  v30.i64[0] = v29 - v28;
  *(int64x2_t *)(v20 + 3696) = vaddq_s64(v30, *(int64x2_t *)(v20 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v20);
    if (gBreakOnError)
    {
      uint64_t v39 = *(unsigned int *)(v20 + 3404);
      if ((_DWORD)v39) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v39, v20);
      }
    }
  }

  do
  {
    unsigned int v31 = __ldaxr(v21);
    signed int v32 = v31 - 1;
  }

  while (__stlxr(v32, v21));
  if (gCheckGLErrors) {
    BOOL v33 = v32 < 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (!v33) {
    handle_opengl_thread_conflict((const void **)v20);
  }
}

void compressed_tex_sub_image3D( __GLIContextRec *a1, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, const void *a11)
{
  signed int v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      BOOL v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    signed int v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  uint64_t v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    id v35 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v34 = handle_opengl_thread_conflict((const void **)v19);
    id v35 = [(id)DYGetGLGuestAppClient(v34) waitOnGraphicsSemaphoreAssertions];
    if ((int)v35 >= 1)
    {
      do
LABEL_34:
        unsigned int v36 = __ldaxr(v20);
      while (__stlxr(v36 - 1, v20));
      unsigned int v37 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v35) graphicsLockWaitQueue];
      dispatch_sync_f(v37, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, void, void, void, void, void, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v19 + 24) + 3056LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11);
      return;
    }
  }

  *(_BYTE *)(v19 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v35) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v33 = __ldaxr(v20);
      while (__stlxr(v33 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v25 = mach_absolute_time();
  uint64_t v26 = a8;
  uint64_t v27 = v25;
  (*(void (**)(__GLIContextRec *, uint64_t, void, void, void, void, void, uint64_t, uint64_t, _DWORD, const void *))(*(void *)(v19 + 32) + 3056LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v26,  a9,  a10,  a11);
  uint64_t v28 = mach_absolute_time();
  int64x2_t v29 = vdupq_n_s64(1uLL);
  v29.i64[0] = v28 - v27;
  *(int64x2_t *)(v19 + 3696) = vaddq_s64(v29, *(int64x2_t *)(v19 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v19);
    if (gBreakOnError)
    {
      uint64_t v38 = *(unsigned int *)(v19 + 3404);
      if ((_DWORD)v38) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v38, v19);
      }
    }
  }

  do
  {
    unsigned int v30 = __ldaxr(v20);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v20));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

void compressed_tex_sub_image2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9, const void *a10)
{
  uint64_t v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      uint64_t v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    uint64_t v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  unsigned int v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (v24)
  {
    id v36 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v35 = handle_opengl_thread_conflict((const void **)v20);
    id v36 = [(id)DYGetGLGuestAppClient(v35) waitOnGraphicsSemaphoreAssertions];
    if ((int)v36 >= 1)
    {
      do
LABEL_34:
        unsigned int v37 = __ldaxr(v21);
      while (__stlxr(v37 - 1, v21));
      uint64_t v38 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v36) graphicsLockWaitQueue];
      dispatch_sync_f(v38, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, const void *))(*(void *)(v20 + 24) + 3064LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
      return;
    }
  }

  *(_BYTE *)(v20 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v36) state] == (char *)&dword_0 + 1)
  {
    id v25 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v25)
    {
      do
        unsigned int v34 = __ldaxr(v21);
      while (__stlxr(v34 - 1, v21));
      [(id)DYGetGLGuestAppClient(v25) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v26 = mach_absolute_time();
  uint64_t v27 = a8;
  uint64_t v28 = v26;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, _DWORD, const void *))(*(void *)(v20 + 32) + 3064LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v27,  a9,  a10);
  uint64_t v29 = mach_absolute_time();
  int64x2_t v30 = vdupq_n_s64(1uLL);
  v30.i64[0] = v29 - v28;
  *(int64x2_t *)(v20 + 3696) = vaddq_s64(v30, *(int64x2_t *)(v20 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v20);
    if (gBreakOnError)
    {
      uint64_t v39 = *(unsigned int *)(v20 + 3404);
      if ((_DWORD)v39) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v39, v20);
      }
    }
  }

  do
  {
    unsigned int v31 = __ldaxr(v21);
    signed int v32 = v31 - 1;
  }

  while (__stlxr(v32, v21));
  if (gCheckGLErrors) {
    BOOL v33 = v32 < 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (!v33) {
    handle_opengl_thread_conflict((const void **)v20);
  }
}

void tex_image3D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9, const void *a10)
{
  signed int v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      BOOL v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    signed int v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  uint64_t v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    id v35 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v34 = handle_opengl_thread_conflict((const void **)v19);
    id v35 = [(id)DYGetGLGuestAppClient(v34) waitOnGraphicsSemaphoreAssertions];
    if ((int)v35 >= 1)
    {
      do
LABEL_34:
        unsigned int v36 = __ldaxr(v20);
      while (__stlxr(v36 - 1, v20));
      unsigned int v37 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v35) graphicsLockWaitQueue];
      dispatch_sync_f(v37, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t, const void *))(*(void *)(v19 + 24) + 3504LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
      return;
    }
  }

  *(_BYTE *)(v19 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v35) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v33 = __ldaxr(v20);
      while (__stlxr(v33 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v25 = mach_absolute_time();
  uint64_t v26 = a8;
  uint64_t v27 = v25;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t, const void *))(*(void *)(v19 + 32) + 3504LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v26,  a9,  a10);
  uint64_t v28 = mach_absolute_time();
  int64x2_t v29 = vdupq_n_s64(1uLL);
  v29.i64[0] = v28 - v27;
  *(int64x2_t *)(v19 + 3696) = vaddq_s64(v29, *(int64x2_t *)(v19 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v19);
    if (gBreakOnError)
    {
      uint64_t v38 = *(unsigned int *)(v19 + 3404);
      if ((_DWORD)v38) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v38, v19);
      }
    }
  }

  do
  {
    unsigned int v30 = __ldaxr(v20);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v20));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

void tex_sub_image3D( __GLIContextRec *a1, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, const void *a11)
{
  signed int v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      BOOL v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    signed int v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  uint64_t v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    id v35 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v34 = handle_opengl_thread_conflict((const void **)v19);
    id v35 = [(id)DYGetGLGuestAppClient(v34) waitOnGraphicsSemaphoreAssertions];
    if ((int)v35 >= 1)
    {
      do
LABEL_34:
        unsigned int v36 = __ldaxr(v20);
      while (__stlxr(v36 - 1, v20));
      unsigned int v37 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v35) graphicsLockWaitQueue];
      dispatch_sync_f(v37, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, void, void, void, void, void, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v19 + 24) + 3512LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11);
      return;
    }
  }

  *(_BYTE *)(v19 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v35) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v33 = __ldaxr(v20);
      while (__stlxr(v33 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v25 = mach_absolute_time();
  uint64_t v26 = a8;
  uint64_t v27 = v25;
  (*(void (**)(__GLIContextRec *, uint64_t, void, void, void, void, void, uint64_t, uint64_t, _DWORD, const void *))(*(void *)(v19 + 32) + 3512LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v26,  a9,  a10,  a11);
  uint64_t v28 = mach_absolute_time();
  int64x2_t v29 = vdupq_n_s64(1uLL);
  v29.i64[0] = v28 - v27;
  *(int64x2_t *)(v19 + 3696) = vaddq_s64(v29, *(int64x2_t *)(v19 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v19);
    if (gBreakOnError)
    {
      uint64_t v38 = *(unsigned int *)(v19 + 3404);
      if ((_DWORD)v38) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v38, v19);
      }
    }
  }

  do
  {
    unsigned int v30 = __ldaxr(v20);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v20));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

void copy_tex_sub_image3D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9)
{
  signed int v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      BOOL v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    signed int v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  uint64_t v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    id v35 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v34 = handle_opengl_thread_conflict((const void **)v19);
    id v35 = [(id)DYGetGLGuestAppClient(v34) waitOnGraphicsSemaphoreAssertions];
    if ((int)v35 >= 1)
    {
      do
LABEL_34:
        unsigned int v36 = __ldaxr(v20);
      while (__stlxr(v36 - 1, v20));
      unsigned int v37 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v35) graphicsLockWaitQueue];
      dispatch_sync_f(v37, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, uint64_t))(*(void *)(v19 + 24) + 3520LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
      return;
    }
  }

  *(_BYTE *)(v19 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v35) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v33 = __ldaxr(v20);
      while (__stlxr(v33 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v25 = mach_absolute_time();
  uint64_t v26 = a8;
  uint64_t v27 = v25;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, uint64_t))(*(void *)(v19 + 32) + 3520LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v26,  a9);
  uint64_t v28 = mach_absolute_time();
  int64x2_t v29 = vdupq_n_s64(1uLL);
  v29.i64[0] = v28 - v27;
  *(int64x2_t *)(v19 + 3696) = vaddq_s64(v29, *(int64x2_t *)(v19 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v19);
    if (gBreakOnError)
    {
      uint64_t v38 = *(unsigned int *)(v19 + 3404);
      if ((_DWORD)v38) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v38, v19);
      }
    }
  }

  do
  {
    unsigned int v30 = __ldaxr(v20);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v20));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

void blit_framebuffer( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9, unsigned int a10)
{
  signed int v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      BOOL v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    signed int v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  uint64_t v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (v23)
  {
    id v34 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v33 = handle_opengl_thread_conflict((const void **)v19);
    id v34 = [(id)DYGetGLGuestAppClient(v33) waitOnGraphicsSemaphoreAssertions];
    if ((int)v34 >= 1)
    {
      do
LABEL_35:
        unsigned int v35 = __ldaxr(v20);
      while (__stlxr(v35 - 1, v20));
      unsigned int v36 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v34) graphicsLockWaitQueue];
      dispatch_sync_f(v36, 0LL, (dispatch_function_t)do_nothing);
LABEL_37:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t))(*(void *)(v19 + 24) + 6040LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
      return;
    }
  }

  *(_WORD *)(v19 + 4838) = 257;
  id v24 = (char *)[(id)DYGetGLGuestAppClient(v34) state];
  if (v24 == (_BYTE *)&dword_0 + 1)
  {
    id v24 = (char *)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v32 = __ldaxr(v20);
      while (__stlxr(v32 - 1, v20));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      goto LABEL_37;
    }
  }

  id v25 = [(id)DYGetGLGuestAppClient(v24) overrideFlags];
  if ((_DWORD)v25)
  {
    id v37 = [(id)DYGetGLGuestAppClient(v25) overrideFlags];
    if ((v37 & 8) == 0)
    {
      uint64_t v38 = (volatile int *)[(id)DYGetGLGuestAppClient(v37) overrideFlags];
      apply_draw_overrides(v19, v38);
      uint64_t v39 = mach_absolute_time();
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, unsigned int))(*(void *)(v19 + 32) + 6040LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
      uint64_t v40 = mach_absolute_time();
      int64x2_t v41 = vdupq_n_s64(1uLL);
      v41.i64[0] = v40 - v39;
      *(int64x2_t *)(v19 + 3696) = vaddq_s64(v41, *(int64x2_t *)(v19 + 3696));
      if (gCheckGLErrors)
      {
        uint64_t v40 = check_errors(v19);
        if (gBreakOnError)
        {
          uint64_t v44 = *(unsigned int *)(v19 + 3404);
          if ((_DWORD)v44) {
            breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v44, v19);
          }
        }
      }

      int v42 = [(id)DYGetGLGuestAppClient(v40) overrideFlags];
      unapply_draw_overrides(v19, v42);
    }
  }

  else
  {
    uint64_t v26 = mach_absolute_time();
    (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, unsigned int))(*(void *)(v19 + 32) + 6040LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
    uint64_t v27 = mach_absolute_time();
    int64x2_t v28 = vdupq_n_s64(1uLL);
    v28.i64[0] = v27 - v26;
    *(int64x2_t *)(v19 + 3696) = vaddq_s64(v28, *(int64x2_t *)(v19 + 3696));
    if (gCheckGLErrors)
    {
      check_errors(v19);
      if (gBreakOnError)
      {
        uint64_t v43 = *(unsigned int *)(v19 + 3404);
        if ((_DWORD)v43) {
          breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v43, v19);
        }
      }
    }
  }

  do
  {
    unsigned int v29 = __ldaxr(v20);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v20));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    handle_opengl_thread_conflict((const void **)v19);
  }
}

void invalidate_sub_framebuffer( __GLIContextRec *a1, uint64_t a2, uint64_t a3, const unsigned int *a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8)
{
  uint64_t v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      uint64_t v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    uint64_t v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  unsigned int v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (v24)
  {
    id v36 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v35 = handle_opengl_thread_conflict((const void **)v20);
    id v36 = [(id)DYGetGLGuestAppClient(v35) waitOnGraphicsSemaphoreAssertions];
    if ((int)v36 >= 1)
    {
      do
LABEL_34:
        unsigned int v37 = __ldaxr(v21);
      while (__stlxr(v37 - 1, v21));
      uint64_t v38 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v36) graphicsLockWaitQueue];
      dispatch_sync_f(v38, 0LL, (dispatch_function_t)do_nothing);
LABEL_36:
      (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *, uint64_t, uint64_t, void, uint64_t))(*(void *)(v20 + 24) + 8224LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
      return;
    }
  }

  *(_BYTE *)(v20 + 4838) = 1;
  if ([(id)DYGetGLGuestAppClient(v36) state] == (char *)&dword_0 + 1)
  {
    id v25 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v25)
    {
      do
        unsigned int v34 = __ldaxr(v21);
      while (__stlxr(v34 - 1, v21));
      [(id)DYGetGLGuestAppClient(v25) triggerArmedCapture];
      goto LABEL_36;
    }
  }

  uint64_t v26 = mach_absolute_time();
  uint64_t v27 = a8;
  uint64_t v28 = v26;
  (*(void (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *, uint64_t, uint64_t, void, uint64_t))(*(void *)(v20 + 32) + 8224LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v27);
  uint64_t v29 = mach_absolute_time();
  int64x2_t v30 = vdupq_n_s64(1uLL);
  v30.i64[0] = v29 - v28;
  *(int64x2_t *)(v20 + 3696) = vaddq_s64(v30, *(int64x2_t *)(v20 + 3696));
  if (gCheckGLErrors)
  {
    check_errors(v20);
    if (gBreakOnError)
    {
      uint64_t v39 = *(unsigned int *)(v20 + 3404);
      if ((_DWORD)v39) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v39, v20);
      }
    }
  }

  do
  {
    unsigned int v31 = __ldaxr(v21);
    signed int v32 = v31 - 1;
  }

  while (__stlxr(v32, v21));
  if (gCheckGLErrors) {
    BOOL v33 = v32 < 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (!v33) {
    handle_opengl_thread_conflict((const void **)v20);
  }
}

void ___ZL24delete_program_pipelinesP15__GLIContextReciPKj_block_invoke_2(uint64_t a1)
{
  uint64_t v2 = mach_absolute_time();
  (*(void (**)(void, void, void))(*(void *)(*(void *)(a1 + 32) + 32LL) + 6584LL))( *(void *)(a1 + 40),  *(unsigned int *)(a1 + 56),  *(void *)(a1 + 48));
  uint64_t v3 = mach_absolute_time() - v2;
  uint64_t v4 = *(int64x2_t **)(a1 + 32);
  int64x2_t v5 = vdupq_n_s64(1uLL);
  v5.i64[0] = v3;
  v4[231] = vaddq_s64(v5, v4[231]);
  if (gCheckGLErrors)
  {
    check_errors((uint64_t)v4);
    if (gBreakOnError)
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(unsigned int *)(v6 + 3404);
      if ((_DWORD)v7) {
        breakpoint_break(0LL, (volatile int *)0xFFFFFFFFLL, 3LL, v7, v6);
      }
    }
  }

uint64_t DYGLInitPlatform(uint64_t a1, const char *a2)
{
  uint64_t v2 = (void *)GPUTools::Interpose::DYCreateTransport((GPUTools::Interpose *)"GT_HOST_URL_GL", a2);
  uint64_t v3 = -[DYMobileAppClient initWithTransport:](objc_alloc(&OBJC_CLASS___DYMobileAppClient), "initWithTransport:", v2);
  DYSetGLGuestAppClient();

  DYGLCommonInit();
  uint64_t v5 = DYGetGLGuestAppClient(v4);
  if (!v5)
  {
    DYLog(kDYLoggingLevelError, "[DYGLInitPlatform] guest app client failed to initialize");

    return 0LL;
  }

  uint64_t v6 = (DYGuestAppClient *)DYGetGLGuestAppClient(v5);
  DYCALayerInterposeInit(v6);
  id v7 = [v2 connect];

  if (([v7 BOOLResult] & 1) == 0)
  {
    DYLog( kDYLoggingLevelError,  "[DYGLInitPlatform] connection to host has failed: %s",  (const char *)objc_msgSend(objc_msgSend(objc_msgSend(v7, "error"), "description"), "UTF8String"));
    return 0LL;
  }

  uint64_t v28 = objc_opt_class(&OBJC_CLASS___EAGLContext);
  uint64_t v27 = objc_opt_class(&OBJC_CLASS___EAGLContext);
  uint64_t v26 = objc_opt_class(&OBJC_CLASS___EAGLContext);
  uint64_t v25 = objc_opt_class(&OBJC_CLASS___EAGLContext);
  uint64_t v24 = objc_opt_class(&OBJC_CLASS___EAGLContext);
  uint64_t v23 = objc_opt_class(&OBJC_CLASS___EAGLContext);
  uint64_t v22 = objc_opt_class(&OBJC_CLASS___EAGLContext);
  uint64_t v21 = objc_opt_class(&OBJC_CLASS___EAGLContext);
  uint64_t v8 = objc_opt_class(&OBJC_CLASS___EAGLContext);
  uint64_t v9 = objc_opt_class(&OBJC_CLASS___EAGLContext);
  uint64_t v10 = objc_opt_class(&OBJC_CLASS___EAGLContext);
  uint64_t v11 = objc_opt_class(&OBJC_CLASS___CAEAGLLayer);
  uint64_t v12 = objc_opt_class(&OBJC_CLASS___CAEAGLLayer);
  uint64_t v13 = operator new(0x1A0uLL);
  unsigned int v31 = v13 + 52;
  *uint64_t v13 = v28;
  v13[1] = "initWithAPI:properties:";
  v13[2] = &off_207348;
  v13[3] = EAGLContext_initWithAPIProperties;
  v13[4] = v27;
  v13[5] = "initWithAPI:sharegroup:";
  v13[6] = &off_207368;
  v13[7] = EAGLContext_initWithAPISharegroup;
  v13[8] = v26;
  v13[9] = "dealloc";
  v13[10] = &off_207350;
  v13[11] = EAGLContext_dealloc;
  v13[12] = v25;
  v13[13] = "setDebugLabel:";
  v13[14] = &off_207370;
  v13[15] = EAGLContext_setDebugLabel;
  v13[16] = v24;
  v13[17] = "presentRenderbuffer:";
  v13[18] = &off_207378;
  v13[19] = EAGLContext_presentRenderbuffer;
  v13[20] = v23;
  v13[21] = "presentRenderbuffer:atTime:";
  v13[22] = &off_207380;
  v13[23] = EAGLContext_presentRenderbufferAtTime;
  v13[24] = v22;
  v13[25] = "presentRenderbuffer:afterMinimumDuration:";
  v13[26] = &off_207388;
  v13[27] = EAGLContext_presentRenderbufferAfterMinimumDuration;
  v13[28] = v21;
  v13[29] = "renderbufferStorage:fromDrawable:";
  v13[30] = &off_207390;
  v13[31] = EAGLContext_renderbufferStorageFromDrawable;
  v13[32] = v8;
  v13[33] = "setParameter:to:";
  v13[34] = &off_207398;
  v13[35] = EAGLContext_setParameterTo;
  v13[36] = v9;
  v13[37] = "texImageIOSurface:target:internalFormat:width:height:format:type:plane:invert:";
  v13[38] = &off_2073A0;
  v13[39] = EAGLContext_texImageIOSurface_target_internalFormat_width_height_format_type_plane_invert;
  v13[40] = v10;
  v13[41] = "swapNotification:forTransaction:onLayer:";
  v13[42] = &off_2073A8;
  v13[43] = EAGLContext_swapNotificationForTransactionOnLayer;
  v13[44] = v11;
  v13[45] = "init";
  v13[46] = &off_2073B0;
  v13[47] = CAEAGLLayer_init;
  v13[48] = v12;
  v13[49] = "dealloc";
  v13[50] = &off_2073B8;
  v13[51] = CAEAGLLayer_dealloc;
  uint64_t v29 = v13;
  int64x2_t v30 = v13 + 52;
  GPUTools::Interpose::DYInstallObjCMethodOverrides(&v29);
  signed int v14 = (objc_class *)objc_opt_class(&OBJC_CLASS___EAGLContext);
  ClassMethod = class_getClassMethod(v14, "setCurrentContext:");
  if (!ClassMethod) {
    __assert_rtn("void install_eagl_interposers()", (const char *)&unk_1F0B16, 0, "method");
  }
  off_2073C0 = (uint64_t (*)(void, void, void))method_setImplementation( ClassMethod,  (IMP)EAGLContext_setCurrentContext);
  uint64_t v16 = (DYGuestAppClient *)DYGetGLGuestAppClient(off_2073C0);
  DYCADisplayLinkInterposeInit(v16);
  if (v29)
  {
    int64x2_t v30 = v29;
    operator delete(v29);
  }

  qword_2073D8 = 0LL;
  xmmword_2073C8 = 0uLL;
  unint64_t v17 = IOServiceMatching("IOAcceleratorES");
  uint64_t MatchingService = IOServiceGetMatchingService(kIOMasterPortDefault, v17);
  _MergedGlobals_0 = MatchingService;
  if (!(_DWORD)MatchingService)
  {
    uint64_t v19 = IOServiceMatching("IOAcceleratorESLegacy");
    uint64_t MatchingService = IOServiceGetMatchingService(kIOMasterPortDefault, v19);
    _MergedGlobals_0 = MatchingService;
  }

  return DYGetGLGuestAppClient(MatchingService);
}

void sub_19A518(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)(v1 - 112);
  if (v3)
  {
    *(void *)(v1 - 104) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

EAGLContext *create_internal_context(void *a1)
{
  if (a1)
  {
    uint64_t v7 = kEAGLContextPropertySharegroup;
    id v8 = [a1 sharegroup];
    uint64_t v2 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v8,  &v7,  1LL);
  }

  else
  {
    uint64_t v2 = 0LL;
  }

  uint64_t v3 = objc_alloc(&OBJC_CLASS___EAGLContext);
  uint64_t v4 = (EAGLContext *)((uint64_t (*)(EAGLContext *, const char *, id, NSDictionary *))off_207348)( v3,  "initWithAPI:properties:",  [a1 API],  v2);
  uint64_t v5 = v4;
  if (v4) {
    initialize_capture_context(v4, 1LL);
  }
  return v5;
}

void initialize_capture_context(EAGLContext *a1, uint64_t a2)
{
  uint64_t v4 = objc_autoreleasePoolPush();
  EAGLRenderingAPI v5 = -[EAGLContext API](a1, "API");
  if (v5 == kEAGLRenderingAPIOpenGLES2) {
    unsigned int v6 = 2;
  }
  else {
    unsigned int v6 = 1;
  }
  if (v5 == kEAGLRenderingAPIOpenGLES3) {
    uint64_t v7 = 4LL;
  }
  else {
    uint64_t v7 = v6;
  }
  id v8 = (char *)operator new(0x1310uLL);
  id v9 = (id)ContextInfo::ContextInfo(v8, a1, v7, a2);
  *(_WORD *)(v8 + 4841) = 1;
  if ((gProfilingFlags & 0x80) != 0)
  {
    uint64_t v10 = 1LL;
    id v9 = -[EAGLContext setParameter:to:](a1, "setParameter:to:", 1402LL, &v10);
  }

  if (([(id)DYGetGLGuestAppClient(v9) overrideFlags] & 0x40) != 0)
  {
    uint64_t v10 = 1LL;
    -[EAGLContext setParameter:to:](a1, "setParameter:to:", 601LL, &v10);
  }

  if (gPipelineStageSkipMode)
  {
    uint64_t v10 = gPipelineStageSkipMode;
    -[EAGLContext setParameter:to:](a1, "setParameter:to:", 602LL, &v10);
  }

  objc_autoreleasePoolPop(v4);
}

void sub_19A75C(_Unwind_Exception *a1)
{
}

unint64_t destroy_internal_context(uint64_t a1)
{
  uint64_t v2 = ContextInfo::activeCtxInfoMap;
  unint64_t result = GLIContextFromEAGLContext(a1);
  unsigned int v6 = *(void **)(v2 + 8);
  uint64_t v5 = v2 + 8;
  uint64_t v4 = v6;
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = (void *)v5;
  do
  {
    unint64_t v8 = v4[4];
    BOOL v9 = v8 >= result;
    if (v8 >= result) {
      uint64_t v10 = v4;
    }
    else {
      uint64_t v10 = v4 + 1;
    }
    if (v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = (void *)*v10;
  }

  while (*v10);
  if (v7 == (void *)v5 || result < v7[4]) {
LABEL_12:
  }
    uint64_t v7 = (void *)v5;
  if (v7 != (void *)(ContextInfo::activeCtxInfoMap + 8))
  {
    uint64_t v11 = (ContextInfo *)v7[5];
    if (v11)
    {
      ContextInfo::~ContextInfo(v11);
      operator delete(v12);
    }

    return off_207350(a1, "dealloc");
  }

  return result;
}

uint64_t install_dispatch_table(uint64_t a1, uint64_t a2)
{
  return GLCSelectDispatchBounded(a1, a2, 1036LL);
}

id *clear_driver_events(id *result)
{
  id v1 = *result;
  if (*result)
  {
    unint64_t result = (id *)[*result getParameter:1400 to:v3];
    if (!result)
    {
      int v2 = 0;
      return (id *)[v1 getParameter:1401 to:&v2];
    }
  }

  return result;
}

id *encode_driver_events(id *result, uint64_t a2)
{
  id v2 = *result;
  if (*result)
  {
    unint64_t result = (id *)[*result getParameter:1400 to:v5];
    if (!result)
    {
      int v4 = 0;
      unint64_t result = (id *)[v2 getParameter:1401 to:&v4];
      if (!result) {
        return (id *)GPUTools::FB::EncodePerfEvents(a2, 1LL, &v4, 4LL);
      }
    }
  }

  return result;
}

void set_hardware_counters_configuration(void *a1)
{
  if (a1)
  {
    if ((objc_msgSend( objc_msgSend(a1, "objectForKey:", kDYProfilingHardwareCountersConfigurationTypeKey),  "isEqualToString:",  @"SGX543-1") & 1) == 0) {
      __assert_rtn( "void set_hardware_counters_configuration(NSDictionary *)",  (const char *)&unk_1F0B16,  0,  "[config_type isEqualToString:@SGX543-1]");
    }
    id v2 = [a1 objectForKey:@"version"];
    if (!v2) {
      __assert_rtn("void set_hardware_counters_configuration(NSDictionary *)", (const char *)&unk_1F0B16, 0, "version");
    }
    LODWORD(xmmword_2073C8) = [v2 unsignedIntValue];
    if ((_DWORD)xmmword_2073C8 != 1) {
      __assert_rtn( "void set_hardware_counters_configuration(NSDictionary *)",  (const char *)&unk_1F0B16,  0,  "sPerfCountersConfig.version == 1");
    }
    id v3 = [a1 objectForKey:@"count"];
    if (!v3) {
      __assert_rtn("void set_hardware_counters_configuration(NSDictionary *)", (const char *)&unk_1F0B16, 0, "count");
    }
    int v4 = v3;
    id v5 = [a1 objectForKey:@"counters"];
    if (!v5) {
      __assert_rtn("void set_hardware_counters_configuration(NSDictionary *)", (const char *)&unk_1F0B16, 0, "counters");
    }
    unsigned int v6 = v5;
    DWORD1(xmmword_2073C8) = [v4 unsignedIntValue];
    if (DWORD1(xmmword_2073C8) >= 9) {
      __assert_rtn( "void set_hardware_counters_configuration(NSDictionary *)",  (const char *)&unk_1F0B16,  0,  "sPerfCountersConfig.numberOfCounters <= 8");
    }

    qword_207358 = v6;
    if ([(id)qword_207358 length] != &stru_20) {
      __assert_rtn( "void set_hardware_counters_configuration(NSDictionary *)",  (const char *)&unk_1F0B16,  0,  "[sPerfCountersConfigData length] == 8 * sizeof(uint32_t)");
    }
  }

  else
  {
    xmmword_2073C8 = 0uLL;
    qword_2073D8 = 0LL;

    qword_207358 = 0LL;
  }

uint64_t enable_profiling_flag(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = gProfilingFlags;
  if ((result & (gProfilingFlags ^ result) & 0x80) != 0)
  {
    unint64_t result = iter_contexts((uint64_t)&__block_literal_global_0);
    uint64_t v2 = gProfilingFlags;
  }

  gProfilingFlags = v2 | v1;
  return result;
}

void __enable_profiling_flag_block_invoke(id a1, void *a2, BOOL *a3)
{
  uint64_t v3 = 1LL;
  [*(id *)a2 setParameter:1402 to:&v3];
}

uint64_t update_overrides(void *a1, int *a2)
{
  unsigned int v4 = [a1 BOOLForKey:@"mo-dco"];
  int v5 = *a2;
  if (v4)
  {
    v5 |= 0x200u;
    *a2 = v5;
  }

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = __update_overrides_block_invoke;
  v9[3] = &__block_descriptor_34_e13_v24__0_v8_B16l;
  BOOL v10 = (v5 & 0x40) != 0;
  BOOL v11 = (v5 & 0x200) != 0;
  iter_contexts((uint64_t)v9);
  id v6 = [a1 uint32ForKey:@"pipeline stage skip mode"];
  gPipelineStageSkipMode = (int)v6;
  if (!(_DWORD)v6)
  {
    id v7 = [(id)DYGetGLGuestAppClient(v6) overrideFlags];
    else {
      LODWORD(v6) = [(id)DYGetGLGuestAppClient(v7) overrideFlags] & 2;
    }
  }

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = ___ZL28set_pipeline_stage_skip_modei_block_invoke;
  v12[3] = &__block_descriptor_36_e13_v24__0_v8_B16l;
  int v13 = (int)v6;
  return iter_contexts((uint64_t)v12);
}

uint64_t (***__update_overrides_block_invoke(uint64_t a1, uint64_t *a2))()
{
  char v4 = *(_BYTE *)(a1 + 32);
  BOOL v10 = off_1F9420;
  char v11 = v4;
  uint64_t v12 = &v10;
  ContextInfo::AddExecution(a2, (uint64_t)&v10);
  int v5 = v12;
  if (v12 == &v10)
  {
    uint64_t v6 = 4LL;
    int v5 = &v10;
  }

  else
  {
    if (!v12) {
      goto LABEL_6;
    }
    uint64_t v6 = 5LL;
  }

  (*v5)[v6]();
LABEL_6:
  char v7 = *(_BYTE *)(a1 + 33);
  BOOL v10 = off_1F9468;
  char v11 = v7;
  uint64_t v12 = &v10;
  ContextInfo::AddExecution(a2, (uint64_t)&v10);
  unint64_t result = v12;
  if (v12 == &v10)
  {
    uint64_t v9 = 4LL;
    unint64_t result = &v10;
  }

  else
  {
    if (!v12) {
      return result;
    }
    uint64_t v9 = 5LL;
  }

  return (uint64_t (***)())(*result)[v9]();
}

void sub_19ADC8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  uint64_t v15 = a13;
  if (a13 == v13)
  {
    uint64_t v16 = 4LL;
    uint64_t v15 = &a10;
  }

  else
  {
    if (!a13) {
      goto LABEL_6;
    }
    uint64_t v16 = 5LL;
  }

  (*(void (**)(void))(*(void *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t ContextInfo::AddExecution(uint64_t *a1, uint64_t a2)
{
  char v4 = (GPUTools::DYLockUtils *)(a1 + 458);
  GPUTools::DYLockUtils::Lock((GPUTools::DYLockUtils *)(a1 + 458), (volatile int *)a2);
  unint64_t v6 = a1[460];
  if (v6 < a1[461])
  {
    uint64_t v7 = *(void *)(a2 + 24);
    if (v7)
    {
      if (v7 == a2)
      {
        *(void *)(v6 + 24) = v6;
        (*(void (**)(void, unint64_t))(**(void **)(a2 + 24) + 24LL))(*(void *)(a2 + 24), v6);
        goto LABEL_8;
      }

      uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 16LL))(v7);
    }

    *(void *)(v6 + 24) = v7;
LABEL_8:
    uint64_t v8 = v6 + 32;
    a1[460] = v6 + 32;
    goto LABEL_9;
  }

  uint64_t v8 = std::vector<std::function<void ()(ContextInfo *)>>::__emplace_back_slow_path<std::function<void ()(ContextInfo *)>&>( a1 + 459,  (void *)a2);
LABEL_9:
  a1[460] = v8;
  return GPUTools::DYLockUtils::Unlock(v4, v5);
}

void sub_19AEB4(_Unwind_Exception *a1, volatile int *a2)
{
  *(void *)(v3 + 3680) = v4;
  GPUTools::DYLockUtils::Unlock(v2, a2);
  _Unwind_Resume(a1);
}

void collect_global_profiling_data(id *a1, __CFDictionary *a2)
{
  if ((gProfilingFlags & 0x100) != 0)
  {
    if (_MergedGlobals_0)
    {
      CFTypeRef CFProperty = IORegistryEntryCreateCFProperty( _MergedGlobals_0,  @"PerformanceStatistics",  kCFAllocatorDefault,  0);
      if (CFProperty)
      {
        int v5 = CFProperty;
        CFDictionarySetValue(a2, @"PerformanceStatistics", CFProperty);
        CFRelease(v5);
      }
    }
  }

  __int16 v6 = gProfilingFlags;
  if (gProfilingFlags < 0)
  {
    LODWORD(valuePtr) = -[UIDevice orientation]( +[UIDevice currentDevice](&OBJC_CLASS___UIDevice, "currentDevice"),  "orientation");
    CFNumberRef v7 = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &valuePtr);
    CFDictionarySetValue(a2, @"orientation", v7);
    CFRelease(v7);
    __int16 v6 = gProfilingFlags;
  }

  if ((v6 & 0x200) != 0 && qword_207358)
  {
    id v8 = [(id)qword_207358 mutableCopy];
    __int128 valuePtr = xmmword_2073C8;
    id v13 = [v8 mutableBytes];
    if (![*a1 getParameter:1410 to:&valuePtr] && !HIDWORD(valuePtr))
    {
      uint64_t v9 = kDYProfilingHardwareCountersConfigurationTypeKey;
      BOOL v10 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", valuePtr);
      char v11 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", DWORD1(valuePtr));
      CFDictionarySetValue( a2,  @"hardware counters",  +[NSDictionary dictionaryWithObjectsAndKeys:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjectsAndKeys:",  @"SGX543-1",  v9,  v10,  @"version",  v11,  @"count",  +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", DWORD2(valuePtr)),  @"timestamp",  v8,  @"counters",  0LL));
    }
  }

void collect_all_context_profiling_data(void *a1)
{
  if ((gProfilingFlags & 0xC0) != 0)
  {
    uint64_t v32 = 0LL;
    BOOL v33 = &v32;
    uint64_t v34 = 0x2020000000LL;
    uint64_t v35 = 0LL;
    uint64_t v28 = 0LL;
    uint64_t v29 = &v28;
    uint64_t v30 = 0x2020000000LL;
    uint64_t v31 = 0LL;
    uint64_t v24 = 0LL;
    uint64_t v25 = &v24;
    uint64_t v26 = 0x2020000000LL;
    uint64_t v27 = 0LL;
    uint64_t v20 = 0LL;
    uint64_t v21 = &v20;
    uint64_t v22 = 0x2020000000LL;
    uint64_t v23 = 0LL;
    uint64_t v13 = 0LL;
    signed int v14 = &v13;
    uint64_t v15 = 0x3412000000LL;
    uint64_t v16 = __Block_byref_object_copy__1;
    unint64_t v17 = __Block_byref_object_dispose__1;
    BOOL v18 = &unk_1F3D63;
    uint64_t v9 = 0LL;
    BOOL v10 = &v9;
    uint64_t v11 = 0x2020000000LL;
    int v12 = 0;
    int v19 = 0;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = __collect_all_context_profiling_data_block_invoke;
    v8[3] = &unk_1F9248;
    v8[4] = &v32;
    v8[5] = &v28;
    v8[6] = &v24;
    v8[7] = &v20;
    v8[8] = &v13;
    v8[9] = &v9;
    iter_contexts((uint64_t)v8);
    char v2 = gProfilingFlags;
    if ((gProfilingFlags & 0x80) != 0)
    {
      objc_msgSend( a1,  "setObject:forKey:",  +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", v33[3]),  @"CA wait time");
      objc_msgSend( a1,  "setObject:forKey:",  +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", v29[3]),  @"texture upload time");
      objc_msgSend( a1,  "setObject:forKey:",  +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", v25[3]),  @"state validation time");
      objc_msgSend( a1,  "setObject:forKey:",  +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", v21[3]),  @"vertex copy time");
      char v2 = gProfilingFlags;
    }

    if ((v2 & 0x40) != 0)
    {
      uint64_t v3 = objc_alloc(&OBJC_CLASS___NSNumber);
      uint64_t v4 = -[NSNumber initWithInt:](v3, "initWithInt:", *((unsigned int *)v10 + 6));
      int v5 = objc_alloc(&OBJC_CLASS___NSData);
      __int16 v6 = -[NSData initWithBytes:length:](v5, "initWithBytes:length:", v14 + 6, 4LL);
      CFNumberRef v7 = -[NSDictionary initWithObjectsAndKeys:]( objc_alloc(&OBJC_CLASS___NSDictionary),  "initWithObjectsAndKeys:",  v4,  @"version",  v6,  @"events",  0LL);
      [a1 setObject:v7 forKey:@"driver events"];
    }

    _Block_object_dispose(&v9, 8);
    _Block_object_dispose(&v13, 8);
    _Block_object_dispose(&v20, 8);
    _Block_object_dispose(&v24, 8);
    _Block_object_dispose(&v28, 8);
    _Block_object_dispose(&v32, 8);
  }

void sub_19B34C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28)
{
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_DWORD *)(result + 4_Block_object_dispose((const void *)(v28 - 80), 8) = *(_DWORD *)(a2 + 48);
  return result;
}

void __collect_all_context_profiling_data_block_invoke(void *a1, id *a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  char v5 = gProfilingFlags;
  if ((gProfilingFlags & 0x40) != 0)
  {
    if (![*a2 getParameter:1400 to:valuePtr])
    {
      *(_DWORD *)bytes = 0;
      if (![*a2 getParameter:1401 to:bytes])
      {
        *(_OWORD *)keys = *(_OWORD *)off_1F9400;
        values = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, valuePtr);
        CFTypeRef cf = CFDataCreate(kCFAllocatorDefault, bytes, 4LL);
        CFDictionaryRef v6 = CFDictionaryCreate( kCFAllocatorDefault,  (const void **)keys,  (const void **)&values,  2LL,  &kCFTypeDictionaryKeyCallBacks,  &kCFTypeDictionaryValueCallBacks);
        CFDictionarySetValue(v4, @"driver events", v6);
        CFRelease(values);
        CFRelease(cf);
        CFRelease(v6);
      }
    }

    char v5 = gProfilingFlags;
  }

  if (v5 < 0)
  {
    if (![*a2 getParameter:1403 to:keys])
    {
      CFNumberRef v7 = CFNumberCreate(kCFAllocatorDefault, kCFNumberLongLongType, keys);
      CFDictionarySetValue(v4, @"CA wait time", v7);
      CFRelease(v7);
    }

    if (![*a2 getParameter:1404 to:keys])
    {
      CFNumberRef v8 = CFNumberCreate(kCFAllocatorDefault, kCFNumberLongLongType, keys);
      CFDictionarySetValue(v4, @"texture upload time", v8);
      CFRelease(v8);
    }

    if (![*a2 getParameter:1405 to:keys])
    {
      CFNumberRef v9 = CFNumberCreate(kCFAllocatorDefault, kCFNumberLongLongType, keys);
      CFDictionarySetValue(v4, @"state validation time", v9);
      CFRelease(v9);
    }

    if (![*a2 getParameter:1406 to:keys])
    {
      CFNumberRef v10 = CFNumberCreate(kCFAllocatorDefault, kCFNumberLongLongType, keys);
      CFDictionarySetValue(v4, @"vertex copy time", v10);
      CFRelease(v10);
    }

    char v5 = gProfilingFlags;
    if ((gProfilingFlags & 0x80) != 0)
    {
      *(void *)(*(void *)(a1[4] + 8) + 24) += objc_msgSend( -[__CFDictionary objectForKey:]( v4,  "objectForKey:",  @"CA wait time"),  "unsignedLongLongValue");
      *(void *)(*(void *)(a1[5] + 8) + 24) += objc_msgSend( -[__CFDictionary objectForKey:]( v4,  "objectForKey:",  @"texture upload time"),  "unsignedLongLongValue");
      *(void *)(*(void *)(a1[6] + 8) + 24) += objc_msgSend( -[__CFDictionary objectForKey:]( v4,  "objectForKey:",  @"state validation time"),  "unsignedLongLongValue");
      *(void *)(*(void *)(a1[7] + 8) + 24) += objc_msgSend( -[__CFDictionary objectForKey:]( v4,  "objectForKey:",  @"vertex copy time"),  "unsignedLongLongValue");
      char v5 = gProfilingFlags;
    }
  }

  if ((v5 & 0x40) != 0)
  {
    id v11 = -[__CFDictionary objectForKey:](v4, "objectForKey:", @"driver events");
    if (v11)
    {
      int v12 = v11;
      uint64_t v13 = objc_msgSend(objc_msgSend(v11, "objectForKey:", @"events"), "bytes");
      if (v13) {
        *(_DWORD *)(*(void *)(a1[8] + 8LL) + 48LL) |= *v13;
      }
      if (!*(_DWORD *)(*(void *)(a1[9] + 8LL) + 24LL)) {
        *(_DWORD *)(*(void *)(a1[9] + 8) + 24) = objc_msgSend( objc_msgSend( v12,  "objectForKey:",  @"version"),  "intValue");
      }
    }
  }
}

uint64_t add_per_function_profiling_data(void *a1, volatile int *a2, unsigned int a3)
{
  CFNumberRef v7 = (void *)qword_207360;
  if (qword_207360)
  {
    *(void *)&__int128 v21 = a1;
    *((void *)&v21 + 1) = a2;
    uint64_t v22 = a3;
    if (!a1) {
      goto LABEL_9;
    }
  }

  else
  {
    CFNumberRef v7 = operator new(0x18uLL);
    *CFNumberRef v7 = 0LL;
    v7[1] = 0LL;
    v7[2] = 0LL;
    qword_207360 = (uint64_t)v7;
    CFNumberRef v8 = (char *)operator new(0x18000uLL);
    *CFNumberRef v7 = v8;
    v7[1] = v8;
    v7[2] = v8 + 98304;
    *(void *)&__int128 v21 = a1;
    *((void *)&v21 + 1) = a2;
    uint64_t v22 = a3;
    if (!a1) {
      goto LABEL_9;
    }
  }

  if ((gProfilingFlags & 0x40) != 0)
  {
    if (![a1 getParameter:1400 to:v23])
    {
      HIDWORD(v22) = 0;
      [a1 getParameter:1401 to:(char *)&v22 + 4];
    }

    CFNumberRef v7 = (void *)qword_207360;
  }

void sub_19B954(_Unwind_Exception *a1, volatile int *a2)
{
}

NSMutableArray *get_all_per_function_profiling_data(uint64_t a1, volatile int *a2)
{
  if (!qword_207360 || *(void *)qword_207360 == *(void *)(qword_207360 + 8))
  {
    unint64_t v14 = 0LL;
  }

  else
  {
    uint64_t v3 = objc_alloc(&OBJC_CLASS___NSMutableArray);
    uint64_t v4 = -[NSMutableArray initWithCapacity:]( v3,  "initWithCapacity:",  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(qword_207360 + 8) - *(void *)qword_207360) >> 3));
    uint64_t v5 = qword_207360;
    uint64_t v6 = *(void *)qword_207360;
    if (*(void *)qword_207360 != *(void *)(qword_207360 + 8))
    {
      uint64_t v7 = v6 + 20;
      do
      {
        uint64_t v8 = v7 - 20;
        unint64_t v9 = -[NSNumber initWithUnsignedLongLong:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithUnsignedLongLong:",  *(void *)(v7 - 20));
        CFNumberRef v10 = -[NSNumber initWithUnsignedLongLong:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithUnsignedLongLong:",  *(void *)(v7 - 12));
        id v11 = -[NSNumber initWithUnsignedLong:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithUnsignedLong:",  *(unsigned int *)(v7 - 4));
        int v12 = -[NSMutableDictionary initWithObjectsAndKeys:]( objc_alloc(&OBJC_CLASS___NSMutableDictionary),  "initWithObjectsAndKeys:",  v9,  @"context",  v10,  @"context id",  v11,  @"function index",  0LL);

        if ((gProfilingFlags & 0x40) != 0)
        {
          unint64_t v13 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", v7, 4LL);
          -[NSMutableDictionary setObject:forKey:](v12, "setObject:forKey:", v13, @"driver events");
        }

        -[NSMutableArray addObject:](v4, "addObject:", v12);

        uint64_t v5 = qword_207360;
        v7 += 24LL;
      }

      while (v8 + 24 != *(void *)(qword_207360 + 8));
      uint64_t v6 = *(void *)qword_207360;
    }

    *(void *)(v5 + _Block_object_dispose((const void *)(v28 - 80), 8) = v6;
    unint64_t v14 = v4;
  }

  GPUTools::DYLockUtils::Unlock((GPUTools::DYLockUtils *)&unk_207344, v2);
  return v14;
}

void sub_19BB50(_Unwind_Exception *a1, volatile int *a2)
{
}

NSArray *copy_renderers_info(uint64_t a1)
{
  return -[NSArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSArray),  "initWithObjects:",  +[DYRendererInfo rendererInfoWithGLIContext:dispatch:api:]( &OBJC_CLASS___DYRendererInfo,  "rendererInfoWithGLIContext:dispatch:api:",  *(void *)(a1 + 16),  *(void *)(a1 + 32),  *(unsigned int *)(a1 + 3456)),  0LL);
}

void handle_trace_mode_transition_platform()
{
  BOOL v0 = +[NSThread isMainThread](&OBJC_CLASS___NSThread, "isMainThread");
  if (!v0) {
    dispatch_async(&_dispatch_main_q, &__block_literal_global_69);
  }
  id v1 = [(id)DYGetGLGuestAppClient(v0) traceMode];
  if ((_DWORD)v1 == 4 || (id v1 = [(id)DYGetGLGuestAppClient(v1) traceMode], (_DWORD)v1 == 5))
  {
    char v2 = (dispatch_semaphore_s *)[(id)DYGetGLGuestAppClient(v1) graphicsSemaphore];
    uint64_t v3 = dispatch_semaphore_wait(v2, 0xFFFFFFFFFFFFFFFFLL);
    uint64_t v4 = (Stream *)[(id)DYGetGLGuestAppClient(v3) startup1Stream];
    DYEncodeCALayerTransforms(v4, 0LL);
    dispatch_semaphore_signal(v2);
    handle_trace_mode_transition_platform::sOrientationNotificationHandler = -[NSNotificationCenter addObserverForName:object:queue:usingBlock:]( +[NSNotificationCenter defaultCenter]( &OBJC_CLASS___NSNotificationCenter,  "defaultCenter"),  "addObserverForName:object:queue:usingBlock:",  UIDeviceOrientationDidChangeNotification,  0LL,  +[NSOperationQueue mainQueue]( &OBJC_CLASS___NSOperationQueue,  "mainQueue"),  &__block_literal_global_74);
    uint64_t v5 = (NSNotification *)[(id)DYGetGLGuestAppClient(handle_trace_mode_transition_platform::sOrientationNotificationHandler) startup1Stream];
    handle_device_orientation_change_notification(v5, v6);
  }

void sub_19BCC0(_Unwind_Exception *a1)
{
}

void __handle_trace_mode_transition_platform_block_invoke(id a1)
{
  unsigned int v1 = [(id)DYGetGLGuestAppClient(a1) traceMode];
  char v2 = +[UIDevice currentDevice](&OBJC_CLASS___UIDevice, "currentDevice");
  if (v1 == 1)
  {
    -[UIDevice endGeneratingDeviceOrientationNotifications](v2, "endGeneratingDeviceOrientationNotifications");
    if (handle_trace_mode_transition_platform::sOrientationNotificationHandler)
    {
      uint64_t v3 = +[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter");
      -[NSNotificationCenter removeObserver:]( v3,  "removeObserver:",  handle_trace_mode_transition_platform::sOrientationNotificationHandler);
      handle_trace_mode_transition_platform::sOrientationNotificationHandler = 0LL;
    }
  }

  else
  {
    -[UIDevice beginGeneratingDeviceOrientationNotifications](v2, "beginGeneratingDeviceOrientationNotifications");
  }

void __handle_trace_mode_transition_platform_block_invoke_2(id a1, NSNotification *a2)
{
  char v2 = (NSNotification *)[(id)DYGetGLGuestAppClient(a1) defaultFbufStream];
  handle_device_orientation_change_notification(v2, v3);
}

void handle_device_orientation_change_notification(NSNotification *a1, GPUTools::FB::Stream *a2)
{
  v12[0] = 0LL;
  v12[1] = 0LL;
  int v13 = 0;
  -[UIDevice orientation](+[UIDevice currentDevice](&OBJC_CLASS___UIDevice, "currentDevice"), "orientation");
  GPUTools::FB::Encode((uint64_t)v12, 4294955024LL, 0LL, (uint64_t)"Cii", v3, v4, v5, v6, 0);
  uint64_t v7 = mach_absolute_time();
  if (g_DYTimebaseInfo != *((_DWORD *)&g_DYTimebaseInfo + 1)) {
    uint64_t v7 = __udivti3(g_DYTimebaseInfo * v7, (g_DYTimebaseInfo * (unsigned __int128)v7) >> 64);
  }
  uint64_t v8 = v12[0];
  *((void *)v12[0] + 2) = v7;
  v8[3] = 0LL;
  unint64_t v9 = (unsigned int *)&a1[7];
  do
    unsigned int v10 = __ldaxr(v9);
  while (__stlxr(1u, v9));
  if (v10 == 1)
  {
    do
    {
      while (*v9 == 1)
        ;
      do
        unsigned int v11 = __ldaxr(v9);
      while (__stlxr(1u, v9));
    }

    while (v11 == 1);
  }

  GPUTools::FB::Stream::Write_nolock((GPUTools::FB::Stream *)a1, (GPUTools::FB::Fbuf *)v12, *(unsigned int *)v12[0], 1);
  atomic_store(0, v9);
  if (v12[0]) {
    free(v12[0]);
  }
}

void sub_19BE58( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  if (a12) {
    free(a12);
  }
  _Unwind_Resume(exception_object);
}

void copyout_iosurface_texture(uint64_t a1, uint64_t a2, __IOSurface *a3, size_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a1 + 32);
  v18[0] = a1;
  v18[1] = v11;
  GPUTools::GL::GetImageInfo(v18, *(unsigned int *)(a1 + 3456), a2, 0LL, a5);
  if (*(_DWORD *)(a5 + 24)) {
    BOOL v12 = *(_DWORD *)(a5 + 28) == 0;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    size_t v13 = GPUTools::GL::ComputePackedClientImageSize(a5);
    unint64_t v14 = operator new[](v13);
    IOSurfaceLock(a3, 1u, 0LL);
    BaseAddressOfPlane = IOSurfaceGetBaseAddressOfPlane(a3, a4);
    memcpy(v14, BaseAddressOfPlane, v13);
    uint64_t v16 = IOSurfaceUnlock(a3, 1u, 0LL);
    uint64_t v17 = DYGetGLGuestAppClient(v16);
    GPUTools::Interpose::DYSavePointer(v17, v13, v14, a1 + 4644, 65LL, 0LL, a6, 0LL, 0LL);
    operator delete[](v14);
  }

void sub_19BF74(_Unwind_Exception *a1)
{
}

void sub_19BF88(_Unwind_Exception *a1)
{
}

uint64_t copyout_iosurface_texture_encode_teximage( uint64_t *a1, uint64_t a2, uint64_t a3, __IOSurface *a4, size_t a5, int a6, uint64_t a7)
{
  int v37 = 0;
  uint64_t v38 = 0x100000001LL;
  v39[0] = 0LL;
  *(void *)((char *)v39 + 5) = 0LL;
  copyout_iosurface_texture((uint64_t)a1, a2, a4, a5, (uint64_t)v36, a7);
  (*(void (**)(uint64_t, uint64_t, int *))(a1[4] + 832))(a1[2], 3317LL, &v35);
  if (v35 != 1)
  {
    GPUTools::FB::Encode((uint64_t)(a1 + 15), 438LL, 4LL, (uint64_t)"Cei", v9, v10, v11, v12, *a1);
    unint64_t v14 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v13) defaultFbufStream];
    unint64_t v15 = (unsigned int *)((char *)v14 + 56);
    do
      unsigned int v16 = __ldaxr(v15);
    while (__stlxr(1u, v15));
    if (v16 == 1)
    {
      do
      {
        while (*v15 == 1)
          ;
        do
          unsigned int v17 = __ldaxr(v15);
        while (__stlxr(1u, v15));
      }

      while (v17 == 1);
    }

    GPUTools::FB::Stream::Write_nolock(v14, (GPUTools::FB::Fbuf *)(a1 + 15), *(unsigned int *)a1[15], 1);
    atomic_store(0, v15);
  }

  uint64_t v18 = *a1;
  if (a6) {
    GPUTools::FB::Encode((uint64_t)(a1 + 15), 603LL, 4100LL, (uint64_t)"CeiiiiieeU", v9, v10, v11, v12, v18);
  }
  else {
    GPUTools::FB::Encode((uint64_t)(a1 + 15), 594LL, 4100LL, (uint64_t)"CeieiiieeU", v9, v10, v11, v12, v18);
  }
  GPUTools::FB::Encode((uint64_t)(a1 + 18), 4294955024LL, 0x2000LL, (uint64_t)"Cietee", v19, v20, v21, v22, *a1);
  uint64_t v24 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v23) defaultFbufStream];
  uint64_t result = GPUTools::FB::Stream::Writev_nopartial(v24, (GPUTools::FB::Fbuf *)(a1 + 15), 2uLL, 1);
  if (v35 != 1)
  {
    GPUTools::FB::Encode((uint64_t)(a1 + 15), 438LL, 4LL, (uint64_t)"Cei", v26, v27, v28, v29, *a1);
    uint64_t v31 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v30) defaultFbufStream];
    uint64_t v32 = (unsigned int *)((char *)v31 + 56);
    do
      unsigned int v33 = __ldaxr(v32);
    while (__stlxr(1u, v32));
    if (v33 == 1)
    {
      do
      {
        while (*v32 == 1)
          ;
        do
          unsigned int v34 = __ldaxr(v32);
        while (__stlxr(1u, v32));
      }

      while (v34 == 1);
    }

    uint64_t result = GPUTools::FB::Stream::Write_nolock(v31, (GPUTools::FB::Fbuf *)(a1 + 15), *(unsigned int *)a1[15], 1);
    atomic_store(0, v32);
  }

  return result;
}

void sub_19C218(_Unwind_Exception *a1)
{
}

void sub_19C220(_Unwind_Exception *a1)
{
}

void encode_iosurface_info(uint64_t a1, __IOSurface *a2)
{
  int v21 = 0;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  memset(v16, 0, sizeof(v16));
  uint64_t v15 = 116LL;
  if (!IOSurfaceGetBulkAttachments(a2, v16, &v15))
  {
    switch(BYTE10(v17))
    {
      case 7u:
        uint64_t v7 = (void **)&kIOSurfaceYCbCrMatrix_SMPTE_240M_1995_String;
        break;
      case 6u:
        uint64_t v7 = (void **)&kIOSurfaceYCbCrMatrix_ITU_R_601_4_String;
        break;
      case 1u:
        uint64_t v7 = (void **)&kIOSurfaceYCbCrMatrix_ITU_R_709_2_String;
        break;
      default:
        uint64_t v4 = 0LL;
        uint64_t v5 = 0LL;
        unsigned int v8 = BYTE11(v17) - 1;
LABEL_13:
        switch(v8)
        {
          case 0u:
            uint64_t v9 = (void **)&kIOSurfaceColorPrimaries_ITU_R_709_2;
            goto LABEL_19;
          case 4u:
            uint64_t v9 = (void **)&kIOSurfaceColorPrimaries_EBU_3213;
            goto LABEL_19;
          case 5u:
            uint64_t v9 = (void **)&kIOSurfaceColorPrimaries_SMPTE_C;
            goto LABEL_19;
          case 0xAu:
            uint64_t v9 = (void **)&kIOSurfaceColorPrimaries_DCI_P3;
            goto LABEL_19;
          case 0xBu:
            uint64_t v9 = (void **)&kIOSurfaceColorPrimaries_P3_D65;
LABEL_19:
            uint64_t v5 = *v9;
            break;
          default:
            break;
        }

EAGLContext *EAGLContext_initWithAPIProperties( EAGLContext *a1, objc_selector *a2, EAGLRenderingAPI a3, NSDictionary *a4)
{
  uint64_t v8 = DYGetGLGuestAppClient(a1);
  uint64_t v9 = objc_opt_class(&OBJC_CLASS___DYGLGuestAppClient);
  if ((objc_opt_isKindOfClass(v8, v9) & 1) == 0) {
    __assert_rtn( "EAGLContext *EAGLContext_initWithAPIProperties(EAGLContext *, SEL, EAGLRenderingAPI, NSDictionary *)",  (const char *)&unk_1F0B16,  0,  "[DYGetGLGuestAppClient() isKindOfClass:[DYGLGuestAppClient class]]");
  }
  uint64_t v10 = mach_absolute_time();
  uint64_t v11 = (EAGLContext *)off_207348(a1, a2, a3, a4);
  uint64_t v12 = mach_absolute_time() - v10;
  if (g_DYTimebaseInfo != *((_DWORD *)&g_DYTimebaseInfo + 1)) {
    uint64_t v12 = __udivti3(v12 * g_DYTimebaseInfo, ((unint64_t)v12 * (unsigned __int128)g_DYTimebaseInfo) >> 64);
  }
  return EAGLContext_initCommon(v11, a3, a4, v10, v12);
}

EAGLContext *EAGLContext_initWithAPISharegroup( EAGLContext *a1, objc_selector *a2, EAGLRenderingAPI a3, EAGLSharegroup *a4)
{
  uint64_t v8 = DYGetGLGuestAppClient(a1);
  uint64_t v9 = objc_opt_class(&OBJC_CLASS___DYGLGuestAppClient);
  if ((objc_opt_isKindOfClass(v8, v9) & 1) == 0) {
    __assert_rtn( "EAGLContext *EAGLContext_initWithAPISharegroup(EAGLContext *, SEL, EAGLRenderingAPI, EAGLSharegroup *)",  (const char *)&unk_1F0B16,  0,  "[DYGetGLGuestAppClient() isKindOfClass:[DYGLGuestAppClient class]]");
  }
  uint64_t v10 = mach_absolute_time();
  uint64_t v11 = (EAGLContext *)off_207368(a1, a2, a3, a4);
  uint64_t v12 = mach_absolute_time() - v10;
  if (g_DYTimebaseInfo != *((_DWORD *)&g_DYTimebaseInfo + 1))
  {
    uint64_t v12 = __udivti3(v12 * g_DYTimebaseInfo, ((unint64_t)v12 * (unsigned __int128)g_DYTimebaseInfo) >> 64);
    uint64_t v13 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    if (!a4) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }

  uint64_t v13 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  if (a4) {
LABEL_4:
  }
    -[NSMutableDictionary setObject:forKey:](v13, "setObject:forKey:", a4, kEAGLContextPropertySharegroup);
LABEL_5:
  EAGLContext_initCommon(v11, a3, &v13->super, v10, v12);

  return v11;
}

void EAGLContext_dealloc(EAGLContext *a1, objc_selector *a2)
{
  uint64_t v4 = DYGetGLGuestAppClient(a1);
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___DYGLGuestAppClient);
  if ((objc_opt_isKindOfClass(v4, v5) & 1) == 0) {
    __assert_rtn( "void EAGLContext_dealloc(EAGLContext *, SEL)",  (const char *)&unk_1F0B16,  0,  "[DYGetGLGuestAppClient() isKindOfClass:[DYGLGuestAppClient class]]");
  }
  uint64_t v6 = ContextInfo::activeCtxInfoMap;
  unint64_t v7 = GLIContextFromEAGLContext(a1);
  uint64_t v10 = *(void **)(v6 + 8);
  uint64_t v9 = v6 + 8;
  uint64_t v8 = v10;
  if (!v10) {
    goto LABEL_14;
  }
  uint64_t v11 = (void *)v9;
  do
  {
    unint64_t v12 = v8[4];
    BOOL v13 = v12 >= v7;
    if (v12 >= v7) {
      uint64_t v14 = v8;
    }
    else {
      uint64_t v14 = v8 + 1;
    }
    if (v13) {
      uint64_t v11 = v8;
    }
    uint64_t v8 = (void *)*v14;
  }

  while (*v14);
  if (v11 == (void *)v9 || v7 < v11[4]) {
LABEL_14:
  }
    uint64_t v11 = (void *)v9;
  if (v11 == (void *)(ContextInfo::activeCtxInfoMap + 8))
  {
LABEL_43:
    off_207350(a1, a2);
  }

  else
  {
    uint64_t v15 = (ContextInfo *)v11[5];
    if (v15)
    {
      ContextInfo::~ContextInfo(v15);
      operator delete(v16);
    }

    v37[0] = 0LL;
    v37[1] = 0LL;
    int v38 = 0;
    uint64_t v17 = mach_absolute_time();
    off_207350(a1, a2);
    uint64_t v22 = mach_absolute_time() - v17;
    if (g_DYTimebaseInfo != *((_DWORD *)&g_DYTimebaseInfo + 1)) {
      uint64_t v22 = __udivti3(g_DYTimebaseInfo * v22, (g_DYTimebaseInfo * (unsigned __int128)(unint64_t)v22) >> 64);
    }
    GPUTools::FB::Encode((uint64_t)v37, 4294959111LL, 0LL, (uint64_t)"C", v18, v19, v20, v21, (char)a1);
    id v24 = [(id)DYGetGLGuestAppClient(v23) traceMode];
    if ((int)v24 >= 4)
    {
      if (g_DYTimebaseInfo != *((_DWORD *)&g_DYTimebaseInfo + 1))
      {
        id v24 = (id)__udivti3(g_DYTimebaseInfo * v17, (g_DYTimebaseInfo * (unsigned __int128)v17) >> 64);
        uint64_t v17 = (uint64_t)v24;
      }

      uint64_t v25 = v37[0];
      *((void *)v37[0] + 2) = v17;
      v25[3] = v22;
      if (objc_msgSend( objc_msgSend((id)DYGetGLGuestAppClient(v24), "activeCaptureDescriptor"),  "includeBacktraceInFbufs")) {
        GPUTools::FB::EncodeCurrentBacktrace((GPUTools::FB *)v37, v26);
      }
      GPUTools::FB::EncodeCurrentGCDQueueInfo((GPUTools::FB *)v37, v26);
      unified_index = (volatile int *)dy_fenum_get_unified_index(4294959111LL);
      uint64_t v28 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(unified_index) defaultFbufStream];
      uint64_t v29 = (unsigned int *)((char *)v28 + 56);
      do
        unsigned int v30 = __ldaxr(v29);
      while (__stlxr(1u, v29));
      if (v30 == 1)
      {
        do
        {
          while (*v29 == 1)
            ;
          do
            unsigned int v31 = __ldaxr(v29);
          while (__stlxr(1u, v29));
        }

        while (v31 == 1);
      }

      id v24 = (id)GPUTools::FB::Stream::Write_nolock(v28, (GPUTools::FB::Fbuf *)v37, *(unsigned int *)v37[0], 0);
      atomic_store(0, v29);
    }

    uint64_t v32 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v24) startup0Stream];
    unsigned int v33 = (unsigned int *)((char *)v32 + 56);
    do
      unsigned int v34 = __ldaxr(v33);
    while (__stlxr(1u, v33));
    if (v34 == 1)
    {
      do
      {
        while (*v33 == 1)
          ;
        do
          unsigned int v35 = __ldaxr(v33);
        while (__stlxr(1u, v33));
      }

      while (v35 == 1);
    }

    uint64_t v36 = GPUTools::FB::Stream::Write_nolock(v32, (GPUTools::FB::Fbuf *)v37, *(unsigned int *)v37[0], 1);
    atomic_store(0, v33);
    [(id)DYGetGLGuestAppClient(v36) sendContextInfoUpdate];
    if (v37[0]) {
      free(v37[0]);
    }
  }

void sub_19C918( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10)
{
  if (a10) {
    free(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t EAGLContext_setDebugLabel(EAGLContext *a1, objc_selector *a2, NSString *a3)
{
  uint64_t v6 = DYGetGLGuestAppClient(a1);
  uint64_t v7 = objc_opt_class(&OBJC_CLASS___DYGLGuestAppClient);
  if ((objc_opt_isKindOfClass(v6, v7) & 1) == 0) {
    __assert_rtn( "void EAGLContext_setDebugLabel(EAGLContext *, SEL, NSString *)",  (const char *)&unk_1F0B16,  0,  "[DYGetGLGuestAppClient() isKindOfClass:[DYGLGuestAppClient class]]");
  }
  uint64_t result = off_207370(a1, a2, a3);
  uint64_t v9 = *(void **)ContextInfo::activeCtxInfoMap;
  uint64_t v10 = ContextInfo::activeCtxInfoMap + 8;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  uint64_t v15 = ___ZL25EAGLContext_setDebugLabelP11EAGLContextP13objc_selectorP8NSString_block_invoke;
  unsigned int v16 = &__block_descriptor_40_e10_B16__0r_v8l;
  uint64_t v17 = a1;
  if (v9 != (void *)(ContextInfo::activeCtxInfoMap + 8))
  {
    while (1)
    {
      uint64_t result = ((uint64_t (*)(void *, void *))v15)(v14, v9 + 4);
      if ((result & 1) != 0) {
        break;
      }
      uint64_t v11 = (void *)v9[1];
      if (v11)
      {
        do
        {
          unint64_t v12 = v11;
          uint64_t v11 = (void *)*v11;
        }

        while (v11);
      }

      else
      {
        do
        {
          unint64_t v12 = (void *)v9[2];
          BOOL v13 = *v12 == (void)v9;
          uint64_t v9 = v12;
        }

        while (!v13);
      }

      uint64_t v9 = v12;
      if (v12 == (void *)v10)
      {
        uint64_t v9 = (void *)v10;
        break;
      }
    }
  }

  if (v9 != (void *)(ContextInfo::activeCtxInfoMap + 8)) {
    return (uint64_t)objc_msgSend( (id)DYGetGLGuestAppClient(objc_msgSend(*(id *)(v9[5] + 3464), "setDebugLabel:", a3)),  "sendContextInfoUpdate");
  }
  return result;
}

uint64_t EAGLContext_presentRenderbuffer(EAGLContext *a1, objc_selector *a2, uint64_t a3)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = ___ZL31EAGLContext_presentRenderbufferP11EAGLContextP13objc_selectorm_block_invoke;
  v4[3] = &unk_1F9310;
  v4[4] = a1;
  v4[5] = a2;
  v4[6] = a3;
  return _EAGLContext_PresentInterposeCommon((uint64_t)a1, 4294959106LL, a3, (uint64_t)v4);
}

uint64_t EAGLContext_presentRenderbufferAtTime(EAGLContext *a1, objc_selector *a2, uint64_t a3, double a4)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = ___ZL37EAGLContext_presentRenderbufferAtTimeP11EAGLContextP13objc_selectormd_block_invoke;
  v5[3] = &unk_1F9378;
  _BYTE v5[4] = a1;
  v5[5] = a2;
  v5[6] = a3;
  *(double *)&v5[7] = a4;
  return _EAGLContext_PresentInterposeCommon((uint64_t)a1, 4294959117LL, a3, (uint64_t)v5);
}

uint64_t EAGLContext_presentRenderbufferAfterMinimumDuration( EAGLContext *a1, objc_selector *a2, uint64_t a3, double a4)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = ___ZL51EAGLContext_presentRenderbufferAfterMinimumDurationP11EAGLContextP13objc_selectormd_block_invoke;
  v5[3] = &unk_1F9378;
  _BYTE v5[4] = a1;
  v5[5] = a2;
  v5[6] = a3;
  *(double *)&v5[7] = a4;
  return _EAGLContext_PresentInterposeCommon((uint64_t)a1, 4294959118LL, a3, (uint64_t)v5);
}

uint64_t EAGLContext_renderbufferStorageFromDrawable(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v7 = GLIContextFromEAGLContext(a1);
  uint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= v7;
    if (v10 >= v7) {
      unint64_t v12 = v8;
    }
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    uint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || v7 < *(void *)(v9 + 32)) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  uint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    id v84 = [(id)DYGetGLGuestAppClient(v7) waitOnGraphicsSemaphoreAssertions];
  }

  else
  {
    uint64_t v83 = handle_opengl_thread_conflict((const void **)v13);
    id v84 = [(id)DYGetGLGuestAppClient(v83) waitOnGraphicsSemaphoreAssertions];
  }

  do
    unsigned int v85 = __ldaxr(v14);
  while (__stlxr(v85 - 1, v14));
  v86 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v84) graphicsLockWaitQueue];
  dispatch_sync_f(v86, 0LL, (dispatch_function_t)do_nothing);
LABEL_21:
  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t v18 = (char *)[(id)DYGetGLGuestAppClient(v84) state];
  if (v18 == (_BYTE *)&dword_0 + 1)
  {
    uint64_t v18 = (char *)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v82 = __ldaxr(v14);
      while (__stlxr(v82 - 1, v14));
      uint64_t v18 = (char *)[(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
    }
  }

  int v19 = [(id)DYGetGLGuestAppClient(v18) traceMode];
  uint64_t renderbuffer_binding_enum = GPUTools::GL::dy_get_renderbuffer_binding_enum( (GPUTools::GL *)((char *)&loc_8D40 + 1),  v20);
  (*(void (**)(void, uint64_t, unsigned int *))(*(void *)(v13 + 32) + 832LL))( *(void *)(v13 + 16),  renderbuffer_binding_enum,  &v90);
  [a4 bounds];
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  id v30 = [a4 drawableProperties];
  objc_msgSend(objc_msgSend(v30, "objectForKey:", kEAGLDrawablePropertyRetainedBacking), "BOOLValue");
  id v31 = [v30 objectForKey:kEAGLDrawablePropertyColorFormat];
  uint64_t v32 = v31;
  if (v31
    && ([v31 isEqualToString:kEAGLColorFormatRGB565] & 1) == 0
    && ([v32 isEqualToString:kEAGLColorFormatRGBA8] & 1) == 0
    && ([v32 isEqualToString:kEAGLColorFormatSRGBA8] & 1) == 0
    && ([v32 isEqualToString:kEAGLColorFormatSRGBA_XR10_64BPP] & 1) == 0
    && ([v32 isEqualToString:kEAGLColorFormatRGBA_XR10_64BPP] & 1) == 0
    && ([v32 isEqualToString:kEAGLColorFormatSRGB_XR10] & 1) == 0
    && ([v32 isEqualToString:kEAGLColorFormatSRGB_XR10_A8_2P] & 1) == 0)
  {
    uint64_t result = dy_abort("unknown or unsupported drawable color format: %s", (const char *)[v32 UTF8String]);
    __break(1u);
    return result;
  }

  [a4 contentsScale];
  v92[0] = v23;
  v92[1] = v25;
  unsigned int v33 = (unsigned int **)(v13 + 120);
  v92[2] = v27;
  v92[3] = v29;
  GPUTools::FB::Encode(v13 + 120, 4294955009LL, 4LL, (uint64_t)"C@4dpbed", v34, v35, v36, v37, a1);
  if (v19 >= 4)
  {
    uint64_t v39 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v38) defaultFbufStream];
    uint64_t v40 = (unsigned int *)((char *)v39 + 56);
    do
      unsigned int v41 = __ldaxr(v40);
    while (__stlxr(1u, v40));
    if (v41 == 1)
    {
      do
      {
        while (*v40 == 1)
          ;
        do
          unsigned int v42 = __ldaxr(v40);
        while (__stlxr(1u, v40));
      }

      while (v42 == 1);
    }

    uint64_t v38 = GPUTools::FB::Stream::Write_nolock(v39, (GPUTools::FB::Fbuf *)(v13 + 120), **v33, 0);
    atomic_store(0, v40);
  }

  uint64_t v43 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v38) startup0Stream];
  uint64_t v44 = (unsigned int *)((char *)v43 + 56);
  do
    unsigned int v45 = __ldaxr(v44);
  while (__stlxr(1u, v44));
  if (v45 == 1)
  {
    do
    {
      while (*v44 == 1)
        ;
      do
        unsigned int v46 = __ldaxr(v44);
      while (__stlxr(1u, v44));
    }

    while (v46 == 1);
  }

  GPUTools::FB::Stream::Write_nolock(v43, (GPUTools::FB::Fbuf *)(v13 + 120), **v33, 1);
  unified_index = 0LL;
  char v52 = 0;
  atomic_store(0, v44);
  if (v19 >= 4)
  {
    GPUTools::FB::Encode(v13 + 120, 4294959107LL, 0LL, (uint64_t)"Cep", v47, v48, v49, v50, a1);
    unified_index = (volatile int *)dy_fenum_get_unified_index(4294959107LL);
    char v52 = breakpoint_flags[unified_index];
    if ((v52 & 1) != 0) {
      breakpoint_break(v13 + 120, unified_index, 1LL, 0LL, 0LL);
    }
  }

  uint64_t v53 = mach_absolute_time();
  unsigned int v88 = off_207390(a1, a2, a3, a4);
  uint64_t v54 = mach_absolute_time();
  uint64_t v56 = v54 - v53;
  unint64_t v57 = g_DYTimebaseInfo;
  if (g_DYTimebaseInfo == *((_DWORD *)&g_DYTimebaseInfo + 1))
  {
    *(void *)(v13 + 3712) += v56;
    if (v19 > 3)
    {
LABEL_45:
      *((void *)*v33 + 2) = v53;
      *((void *)*v33 + 3) = v56;
      id v58 = objc_msgSend( objc_msgSend((id)DYGetGLGuestAppClient(v54), "activeCaptureDescriptor"),  "includeBacktraceInFbufs");
      if ((_DWORD)v58) {
        id v58 = (id)GPUTools::FB::EncodeCurrentBacktrace((GPUTools::FB *)(v13 + 120), v59);
      }
      if (gCheckGLErrors) {
        id v58 = (id)check_errors(v13);
      }
      if (objc_msgSend( objc_msgSend((id)DYGetGLGuestAppClient(v58), "activeCaptureDescriptor"),  "queryDriverEventsOnGraphicsCommands"))
      {
        id v61 = *(id *)v13;
        if (*(void *)v13)
        {
          if (![*(id *)v13 getParameter:1400 to:v92])
          {
            int v91 = 0;
            if (![v61 getParameter:1401 to:&v91]) {
              GPUTools::FB::EncodePerfEvents(v13 + 120, 1LL, &v91, 4LL);
            }
          }
        }
      }

      uint64_t v62 = GPUTools::FB::EncodeCurrentGCDQueueInfo((GPUTools::FB *)(v13 + 120), v60);
      if ((v52 & 2) != 0) {
        breakpoint_break(v13 + 120, unified_index, 2LL, 0LL, 0LL);
      }
      v63 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v62) defaultFbufStream];
      v64 = (unsigned int *)((char *)v63 + 56);
      do
        unsigned int v65 = __ldaxr(v64);
      while (__stlxr(1u, v64));
      if (v65 == 1)
      {
        do
        {
          while (*v64 == 1)
            ;
          do
            unsigned int v66 = __ldaxr(v64);
          while (__stlxr(1u, v64));
        }

        while (v66 == 1);
      }

      GPUTools::FB::Stream::Write_nolock(v63, (GPUTools::FB::Fbuf *)(v13 + 120), **v33, 1);
      atomic_store(0, v64);
    }
  }

  else
  {
    uint64_t v87 = __udivti3(v56 * g_DYTimebaseInfo, ((unint64_t)v56 * (unsigned __int128)g_DYTimebaseInfo) >> 64);
    *(void *)(v13 + 3712) += v87;
    if (v19 >= 4)
    {
      uint64_t v56 = v87;
      uint64_t v54 = __udivti3(v57 * v53, (v57 * (unsigned __int128)v53) >> 64);
      uint64_t v53 = v54;
      goto LABEL_45;
    }
  }

  if (v88)
  {
    if (gCheckGLErrors) {
      check_errors(v13);
    }
    v67 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 368LL);
    GPUTools::DYLockUtils::Lock(v67, v55);
    uint64_t v69 = *(void *)(v13 + 40);
    v70 = *(uint64_t **)(v69 + 352);
    unsigned int v71 = v90;
    if (v70)
    {
      while (1)
      {
        while (1)
        {
          v73 = (uint64_t **)v70;
          unsigned int v74 = *((_DWORD *)v70 + 8);
          if (v90 >= v74) {
            break;
          }
          v70 = *v73;
          v72 = v73;
          if (!*v73) {
            goto LABEL_73;
          }
        }

        if (v74 >= v90) {
          break;
        }
        v70 = v73[1];
        if (!v70)
        {
          v72 = v73 + 1;
          goto LABEL_73;
        }
      }

      v75 = v73;
    }

    else
    {
      v72 = (uint64_t **)(v69 + 352);
      v73 = (uint64_t **)(v69 + 352);
LABEL_73:
      v75 = operator new(0x30uLL);
      v75[8] = v71;
      *((void *)v75 + 5) = 0LL;
      *(void *)v75 = 0LL;
      *((void *)v75 + 1) = 0LL;
      *((void *)v75 + 2) = v73;
      *v72 = (uint64_t *)v75;
      uint64_t v76 = **(void **)(v69 + 344);
      v77 = (uint64_t *)v75;
      if (v76)
      {
        *(void *)(v69 + 344) = v76;
        v77 = *v72;
      }

      std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(v69 + 352), v77);
      ++*(void *)(v69 + 360);
    }

    *((void *)v75 + 5) = a4;
    GPUTools::DYLockUtils::Unlock(v67, v68);
  }

  else if (gCheckGLErrors)
  {
    handle_opengl_error(-5, &unk_1F0B16);
  }

  do
  {
    unsigned int v78 = __ldaxr(v14);
    signed int v79 = v78 - 1;
  }

  while (__stlxr(v79, v14));
  if (gCheckGLErrors) {
    BOOL v80 = v79 < 1;
  }
  else {
    BOOL v80 = 1;
  }
  if (!v80) {
    handle_opengl_thread_conflict((const void **)v13);
  }
  return v88;
}

void sub_19D380(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t EAGLContext_setParameterTo(EAGLContext *a1, objc_selector *a2, uint64_t a3, int *a4)
{
  unint64_t v8 = GLIContextFromEAGLContext(a1);
  uint64_t v9 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v9) {
    goto LABEL_12;
  }
  uint64_t v10 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v11 = v9[4];
    BOOL v12 = v11 >= v8;
    if (v11 >= v8) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = v9 + 1;
    }
    if (v12) {
      uint64_t v10 = (uint64_t)v9;
    }
    uint64_t v9 = (void *)*v13;
  }

  while (*v13);
  if (v10 == ContextInfo::activeCtxInfoMap + 8 || v8 < *(void *)(v10 + 32)) {
LABEL_12:
  }
    uint64_t v10 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v14 = *(void **)(v10 + 40);
  int v15 = [(id)DYGetGLGuestAppClient(v8) traceMode];
  uint64_t v16 = mach_absolute_time();
  uint64_t v17 = off_207398(a1, a2, a3, a4);
  uint64_t v18 = mach_absolute_time();
  uint64_t v24 = v18 - v16;
  if (g_DYTimebaseInfo == *((_DWORD *)&g_DYTimebaseInfo + 1))
  {
  }

  else
  {
    uint64_t v18 = __udivti3(v24 * g_DYTimebaseInfo, (v24 * (unsigned __int128)g_DYTimebaseInfo) >> 64);
    uint64_t v24 = v18;
  }

  if (v15 >= 4 && gEncodeNameReservationSPI)
  {
    if ((_DWORD)a3 == 1613)
    {
      uint64_t v25 = (uint64_t)(v14 + 15);
      ++a4;
      GPUTools::FB::Encode((uint64_t)(v14 + 15), 117LL, (uint64_t)"Ce", v19, v20, v21, v22, v23, *v14);
    }

    else
    {
      if ((_DWORD)a3 != 1614)
      {
LABEL_22:
        if (g_DYTimebaseInfo != *((_DWORD *)&g_DYTimebaseInfo + 1))
        {
          uint64_t v18 = __udivti3(g_DYTimebaseInfo * v16, (g_DYTimebaseInfo * (unsigned __int128)v16) >> 64);
          uint64_t v16 = v18;
        }

        uint64_t v32 = v14[15];
        id v31 = (GPUTools::FB::Fbuf *)(v14 + 15);
        *(void *)(v32 + 16) = v16;
        *(void *)(*(void *)v31 + 24LL) = v24;
        unsigned int v33 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v18) defaultFbufStream];
        uint64_t v34 = (unsigned int *)((char *)v33 + 56);
        do
          unsigned int v35 = __ldaxr(v34);
        while (__stlxr(1u, v34));
        if (v35 == 1)
        {
          do
          {
            while (*v34 == 1)
              ;
            do
              unsigned int v36 = __ldaxr(v34);
            while (__stlxr(1u, v34));
          }

          while (v36 == 1);
        }

        GPUTools::FB::Stream::Write_nolock(v33, v31, **(unsigned int **)v31, 1);
        atomic_store(0, v34);
        return v17;
      }

      uint64_t v25 = (uint64_t)(v14 + 15);
      GPUTools::FB::Encode((uint64_t)(v14 + 15), 116LL, (uint64_t)"C", v19, v20, v21, v22, v23, *v14);
    }

    GPUTools::FB::Encode(v25, 4294955008LL, (uint64_t)"ul", v26, v27, v28, v29, v30, *a4);
    goto LABEL_22;
  }

  return v17;
}

void sub_19D608(_Unwind_Exception *a1)
{
}

uint64_t EAGLContext_texImageIOSurface_target_internalFormat_width_height_format_type_plane_invert( EAGLContext *a1, objc_selector *a2, __IOSurface *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, unsigned int a10, BOOL a11)
{
  unint64_t v17 = GLIContextFromEAGLContext(a1);
  uint64_t v18 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v18) {
    goto LABEL_12;
  }
  uint64_t v19 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v20 = v18[4];
    BOOL v21 = v20 >= v17;
    if (v20 >= v17) {
      uint64_t v22 = v18;
    }
    else {
      uint64_t v22 = v18 + 1;
    }
    if (v21) {
      uint64_t v19 = (uint64_t)v18;
    }
    uint64_t v18 = (void *)*v22;
  }

  while (*v22);
  if (v19 == ContextInfo::activeCtxInfoMap + 8 || v17 < *(void *)(v19 + 32)) {
LABEL_12:
  }
    uint64_t v19 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v23 = *(void *)(v19 + 40);
  int v28 = [(id)DYGetGLGuestAppClient(v17) traceMode];
  if (v28 < 4)
  {
    uint64_t v76 = 0LL;
  }

  else
  {
    uint64_t v72 = a8;
    unint64_t v73 = a9;
    uint64_t v70 = a6;
    uint64_t v71 = a7;
    uint64_t v68 = a4;
    uint64_t v69 = a5;
    HIDWORD(v67) = HIDWORD(a3);
    uint64_t v74 = a10;
    BOOL v75 = a11;
    GPUTools::FB::Encode(v23 + 120, 4294959116LL, 4096LL, (uint64_t)"Cpeeuiuieeuib", v24, v25, v26, v27, (char)a1);
    unified_index = (volatile int *)dy_fenum_get_unified_index(4294959116LL);
    LODWORD(v76) = (_DWORD)unified_index;
    BYTE4(v76) = breakpoint_flags[unified_index];
    if ((v76 & 0x100000000LL) != 0) {
      breakpoint_break(v23 + 120, unified_index, 1LL, 0LL, 0LL);
    }
  }

  uint64_t v30 = mach_absolute_time();
  BYTE4(v67) = a11;
  LODWORD(v67) = a10;
  uint64_t v31 = off_2073A0(a1, a2, a3, a4, a5, a6, a7, a8, a9, v67, v68, v69, v70, v71, v72, v73, v74, v75);
  uint64_t v32 = mach_absolute_time();
  uint64_t v33 = v32 - v30;
  unint64_t v34 = g_DYTimebaseInfo;
  if (g_DYTimebaseInfo == *((_DWORD *)&g_DYTimebaseInfo + 1))
  {
    *(void *)(v23 + 3712) += v33;
    if (v28 <= 3) {
      goto LABEL_35;
    }
  }

  else
  {
    uint64_t v66 = __udivti3(v33 * g_DYTimebaseInfo, ((unint64_t)v33 * (unsigned __int128)g_DYTimebaseInfo) >> 64);
    *(void *)(v23 + 3712) += v66;
    if (v28 < 4) {
      goto LABEL_35;
    }
    uint64_t v33 = v66;
    uint64_t v32 = __udivti3(v34 * v30, (v34 * (unsigned __int128)v30) >> 64);
    uint64_t v30 = v32;
  }

  *(void *)(*(void *)(v23 + 120) + 16LL) = v30;
  *(void *)(*(void *)(v23 + 120) + 24LL) = v33;
  id v35 = objc_msgSend(objc_msgSend((id)DYGetGLGuestAppClient(v32), "activeCaptureDescriptor"), "includeBacktraceInFbufs");
  if ((_DWORD)v35) {
    id v35 = (id)GPUTools::FB::EncodeCurrentBacktrace((GPUTools::FB *)(v23 + 120), v36);
  }
  if (objc_msgSend( objc_msgSend((id)DYGetGLGuestAppClient(v35), "activeCaptureDescriptor"),  "queryDriverEventsOnGraphicsCommands"))
  {
    id v38 = *(id *)v23;
    if (*(void *)v23)
    {
      if (![*(id *)v23 getParameter:1400 to:&v80])
      {
        v84[0] = 0;
        if (![v38 getParameter:1401 to:v84]) {
          GPUTools::FB::EncodePerfEvents(v23 + 120, 1LL, v84, 4LL);
        }
      }
    }
  }

  uint64_t v39 = GPUTools::FB::EncodeCurrentGCDQueueInfo((GPUTools::FB *)(v23 + 120), v37);
  if ((v76 & 0x200000000LL) != 0) {
    breakpoint_break(v23 + 120, (volatile int *)v76, 2LL, 0LL, 0LL);
  }
  uint64_t v40 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v39) defaultFbufStream];
  unsigned int v41 = (unsigned int *)((char *)v40 + 56);
  do
    unsigned int v42 = __ldaxr(v41);
  while (__stlxr(1u, v41));
  if (v42 == 1)
  {
    do
    {
      while (*v41 == 1)
        ;
      do
        unsigned int v43 = __ldaxr(v41);
      while (__stlxr(1u, v41));
    }

    while (v43 == 1);
  }

  GPUTools::FB::Stream::Write_nolock(v40, (GPUTools::FB::Fbuf *)(v23 + 120), **(unsigned int **)(v23 + 120), 1);
  atomic_store(0, v41);
  encode_iosurface_info(v23, a3);
  memset(v84, 0, 15);
  GPUTools::GL::DYGetTextureTargetInfo(a4, v84);
  __int128 v80 = 0uLL;
  *(_DWORD *)unsigned int v82 = 0;
  uint64_t v81 = 0LL;
  *(void *)&v82[4] = 0x100000001LL;
  v83[0] = 0LL;
  *(void *)((char *)v83 + 5) = 0LL;
  uint64_t v44 = *(void *)(v23 + 32);
  v79[0] = v23;
  v79[1] = v44;
  GPUTools::GL::GetImageInfo(v79, *(unsigned int *)(v23 + 3456), a4, 0LL, &v80);
  GPUTools::FB::Encode(v23 + 144, 4294955024LL, 0x2000LL, (uint64_t)"Cietee", v45, v46, v47, v48, *(void *)v23);
  uint64_t v50 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v49) defaultFbufStream];
  GPUTools::FB::Stream::Writev_nopartial(v50, (GPUTools::FB::Fbuf *)(v23 + 120), 2uLL, 1);
LABEL_35:
  if (a4 == 3553)
  {
    memset(v84, 0, 15);
    GPUTools::GL::DYGetTextureTargetInfo(3553LL, v84);
    (*(void (**)(void, void, void *))(*(void *)(v23 + 32) + 832LL))( *(void *)(v23 + 16),  v84[1],  v79);
    if (*(_BYTE *)(v23 + 4837)) {
      copyout_iosurface_texture_encode_teximage((uint64_t *)v23, 3553LL, v52, a3, a10, 0, 1LL);
    }
    uint64_t v53 = (GPUTools::DYLockUtils *)(*(void *)(v23 + 40) + 368LL);
    GPUTools::DYLockUtils::Lock(v53, v51);
    uint64_t v54 = *(void *)(v23 + 40);
    v55 = (void *)(v54 + 304);
    unint64_t v56 = *(void *)(v54 + 312);
    if (v56)
    {
      uint8x8_t v57 = (uint8x8_t)vcnt_s8((int8x8_t)v56);
      v57.i16[0] = vaddlv_u8(v57);
      if (v57.u32[0] > 1uLL)
      {
        unint64_t v58 = LODWORD(v79[0]);
        if (v56 <= LODWORD(v79[0])) {
          unint64_t v58 = LODWORD(v79[0]) % v56;
        }
      }

      else
      {
        unint64_t v58 = (v56 - 1) & v79[0];
      }

      v59 = *(uint64_t ***)(*v55 + 8 * v58);
      if (v59)
      {
        v60 = *v59;
        if (*v59)
        {
          if (v57.u32[0] < 2uLL)
          {
            unint64_t v61 = v56 - 1;
            while (1)
            {
              uint64_t v63 = v60[1];
              if (v63 == LODWORD(v79[0]))
              {
                if (*((_DWORD *)v60 + 4) == LODWORD(v79[0])) {
                  goto LABEL_59;
                }
              }

              else if ((v63 & v61) != v58)
              {
                goto LABEL_58;
              }

              v60 = (uint64_t *)*v60;
              if (!v60) {
                goto LABEL_58;
              }
            }
          }

          do
          {
            unint64_t v62 = v60[1];
            if (v62 == LODWORD(v79[0]))
            {
              if (*((_DWORD *)v60 + 4) == LODWORD(v79[0])) {
                goto LABEL_59;
              }
            }

            else
            {
              if (v62 >= v56) {
                v62 %= v56;
              }
              if (v62 != v58) {
                break;
              }
            }

            v60 = (uint64_t *)*v60;
          }

          while (v60);
        }
      }
    }

void sub_19DB78(_Unwind_Exception *a1)
{
}

void sub_19DB84(_Unwind_Exception *a1, volatile int *a2)
{
}

id EAGLContext_swapNotificationForTransactionOnLayer( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = GLIContextFromEAGLContext(a1);
  unint64_t v11 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v11) {
    goto LABEL_12;
  }
  uint64_t v12 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v13 = v11[4];
    BOOL v14 = v13 >= v10;
    if (v13 >= v10) {
      int v15 = v11;
    }
    else {
      int v15 = v11 + 1;
    }
    if (v14) {
      uint64_t v12 = (uint64_t)v11;
    }
    unint64_t v11 = (void *)*v15;
  }

  while (*v15);
  if (v12 == ContextInfo::activeCtxInfoMap + 8 || v10 < *(void *)(v12 + 32)) {
LABEL_12:
  }
    uint64_t v12 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v16 = *(void *)(v12 + 40);
  int v17 = [(id)DYGetGLGuestAppClient(v10) traceMode];
  uint64_t v18 = mach_absolute_time();
  off_2073A8(a1, a2, a3, a4, a5);
  uint64_t v23 = mach_absolute_time() - v18;
  if (g_DYTimebaseInfo == *((_DWORD *)&g_DYTimebaseInfo + 1))
  {
    if (v17 < 4) {
      return handle_frame_boundary(v16);
    }
  }

  else
  {
    uint64_t v23 = __udivti3(v23 * g_DYTimebaseInfo, ((unint64_t)v23 * (unsigned __int128)g_DYTimebaseInfo) >> 64);
    if (v17 < 4) {
      return handle_frame_boundary(v16);
    }
  }

  uint64_t v24 = (unsigned int **)(v16 + 120);
  GPUTools::FB::Encode(v16 + 120, 4294959110LL, 0x40000LL, (uint64_t)"Cpuiui", v19, v20, v21, v22, a1);
  if (g_DYTimebaseInfo != *((_DWORD *)&g_DYTimebaseInfo + 1))
  {
    uint64_t v25 = __udivti3(g_DYTimebaseInfo * v18, (g_DYTimebaseInfo * (unsigned __int128)v18) >> 64);
    uint64_t v18 = v25;
  }

  *((void *)*v24 + 2) = v18;
  *((void *)*v24 + 3) = v23;
  uint64_t v26 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v25) defaultFbufStream];
  uint64_t v27 = (unsigned int *)((char *)v26 + 56);
  do
    unsigned int v28 = __ldaxr(v27);
  while (__stlxr(1u, v27));
  if (v28 == 1)
  {
    do
    {
      while (*v27 == 1)
        ;
      do
        unsigned int v29 = __ldaxr(v27);
      while (__stlxr(1u, v27));
    }

    while (v29 == 1);
  }

  GPUTools::FB::Stream::Write_nolock(v26, (GPUTools::FB::Fbuf *)(v16 + 120), **v24, 1);
  atomic_store(0, v27);
  return handle_frame_boundary(v16);
}

void sub_19DD7C(_Unwind_Exception *a1)
{
}

uint64_t CAEAGLLayer_init(CAEAGLLayer *a1, objc_selector *a2)
{
  uint64_t v2 = off_2073B0(a1, a2);
  uint64_t v3 = v2;
  if (v2)
  {
    uint64_t v4 = (dispatch_semaphore_s *)[(id)DYGetGLGuestAppClient(v2) graphicsSemaphore];
    dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);
    uint64_t v6 = v3;
    std::__hash_table<void *,std::hash<void *>,std::equal_to<void *>,std::allocator<void *>>::__emplace_unique_key_args<void *,void *>( gLayersSetPtr,  &v6,  &v6);
    dispatch_semaphore_signal(v4);
  }

  return v3;
}

void sub_19DDF4(_Unwind_Exception *a1)
{
}

uint64_t CAEAGLLayer_dealloc(CAEAGLLayer *a1, objc_selector *a2)
{
  uint64_t v4 = (dispatch_semaphore_s *)[(id)DYGetGLGuestAppClient(a1) graphicsSemaphore];
  dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);
  __p[0] = a1;
  uint64_t v5 = std::__hash_table<std::__hash_value_type<void const*,std::string>,std::__unordered_map_hasher<void const*,std::__hash_value_type<void const*,std::string>,std::hash<void const*>,std::equal_to<void const*>,true>,std::__unordered_map_equal<void const*,std::__hash_value_type<void const*,std::string>,std::equal_to<void const*>,std::hash<void const*>,true>,std::allocator<std::__hash_value_type<void const*,std::string>>>::find<void const*>( gLayersSetPtr,  (uint64_t *)__p);
  if (v5)
  {
    std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>>>::remove( gLayersSetPtr,  v5,  (uint64_t)__p);
    uint64_t v6 = __p[0];
    __p[0] = 0LL;
    if (v6) {
      operator delete(v6);
    }
  }

  off_2073B8(a1, a2);
  return dispatch_semaphore_signal(v4);
}

void sub_19DEA4(_Unwind_Exception *a1)
{
}

uint64_t EAGLContext_setCurrentContext(objc_class *a1, objc_selector *a2, EAGLContext *a3)
{
  int v6 = [(id)DYGetGLGuestAppClient(a1) traceMode];
  uint64_t v7 = mach_absolute_time();
  uint64_t v8 = off_2073C0(a1, a2, a3);
  uint64_t v13 = mach_absolute_time() - v7;
  if (g_DYTimebaseInfo == *((_DWORD *)&g_DYTimebaseInfo + 1))
  {
    if (v6 < 4) {
      return v8;
    }
  }

  else
  {
    uint64_t v13 = __udivti3(v13 * g_DYTimebaseInfo, ((unint64_t)v13 * (unsigned __int128)g_DYTimebaseInfo) >> 64);
    if (v6 < 4) {
      return v8;
    }
  }

  v24[0] = 0LL;
  v24[1] = 0LL;
  int v25 = 0;
  GPUTools::FB::Encode((uint64_t)v24, 4294959112LL, 131074LL, (uint64_t)"C", v9, v10, v11, v12, (char)a3);
  if (g_DYTimebaseInfo != *((_DWORD *)&g_DYTimebaseInfo + 1)) {
    uint64_t v7 = __udivti3(g_DYTimebaseInfo * v7, (g_DYTimebaseInfo * (unsigned __int128)v7) >> 64);
  }
  BOOL v14 = v24[0];
  *((void *)v24[0] + 2) = v7;
  v14[3] = v13;
  unified_index = (volatile int *)dy_fenum_get_unified_index(4294959112LL);
  char v16 = breakpoint_flags[unified_index];
  if (objc_msgSend( objc_msgSend((id)DYGetGLGuestAppClient(unified_index), "activeCaptureDescriptor"),  "includeBacktraceInFbufs")) {
    GPUTools::FB::EncodeCurrentBacktrace((GPUTools::FB *)v24, v17);
  }
  uint64_t v18 = GPUTools::FB::EncodeCurrentGCDQueueInfo((GPUTools::FB *)v24, v17);
  if ((v16 & 3) != 0) {
    breakpoint_break((uint64_t)v24, unified_index, 1LL, 0LL, 0LL);
  }
  uint64_t v19 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v18) defaultFbufStream];
  uint64_t v20 = (unsigned int *)((char *)v19 + 56);
  do
    unsigned int v21 = __ldaxr(v20);
  while (__stlxr(1u, v20));
  if (v21 == 1)
  {
    do
    {
      while (*v20 == 1)
        ;
      do
        unsigned int v22 = __ldaxr(v20);
      while (__stlxr(1u, v20));
    }

    while (v22 == 1);
  }

  GPUTools::FB::Stream::Write_nolock(v19, (GPUTools::FB::Fbuf *)v24, *(unsigned int *)v24[0], 1);
  atomic_store(0, v20);
  if (v24[0]) {
    free(v24[0]);
  }
  return v8;
}

void sub_19E084( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10)
{
  if (a10) {
    free(a10);
  }
  _Unwind_Resume(exception_object);
}

EAGLContext *EAGLContext_initCommon( EAGLContext *a1, EAGLRenderingAPI a2, NSDictionary *a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    initialize_capture_context(a1, 0LL);
    unint64_t v9 = GLIContextFromEAGLContext(a1);
    uint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
    if (!v10) {
      goto LABEL_13;
    }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
    do
    {
      unint64_t v12 = v10[4];
      BOOL v13 = v12 >= v9;
      if (v12 >= v9) {
        BOOL v14 = v10;
      }
      else {
        BOOL v14 = v10 + 1;
      }
      if (v13) {
        uint64_t v11 = (uint64_t)v10;
      }
      uint64_t v10 = (void *)*v14;
    }

    while (*v14);
    if (v11 == ContextInfo::activeCtxInfoMap + 8 || v9 < *(void *)(v11 + 32)) {
LABEL_13:
    }
      uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
    uint64_t v15 = *(void *)(v11 + 40);
    char v16 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v17 = kEAGLContextPropertySharegroup;
    id v18 = -[NSDictionary objectForKey:](a3, "objectForKey:", kEAGLContextPropertySharegroup);
    if (v18) {
      -[NSMutableDictionary setObject:forKey:]( v16,  "setObject:forKey:",  +[NSNumber numberWithUnsignedLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLong:", v18),  v17);
    }
    uint64_t v19 = kEAGLContextPropertyAccelerated;
    id v20 = -[NSDictionary objectForKey:](a3, "objectForKey:", kEAGLContextPropertyAccelerated);
    if (v20) {
      -[NSMutableDictionary setObject:forKey:](v16, "setObject:forKey:", v20, v19);
    }
    uint64_t v21 = kEAGLContextPropertyClientRetainRelease;
    id v22 = -[NSDictionary objectForKey:](a3, "objectForKey:", kEAGLContextPropertyClientRetainRelease);
    if (v22) {
      -[NSMutableDictionary setObject:forKey:](v16, "setObject:forKey:", v22, v21);
    }
    uint64_t v23 = kEAGLContextPropertySharedWithCompute;
    id v24 = -[NSDictionary objectForKey:](a3, "objectForKey:", kEAGLContextPropertySharedWithCompute);
    if (v24) {
      -[NSMutableDictionary setObject:forKey:](v16, "setObject:forKey:", v24, v23);
    }
    uint64_t v25 = kEAGLContextPropertyVisibleInDebugTools;
    id v26 = -[NSDictionary objectForKey:](a3, "objectForKey:", kEAGLContextPropertyVisibleInDebugTools);
    if (v26) {
      -[NSMutableDictionary setObject:forKey:](v16, "setObject:forKey:", v26, v25);
    }
    uint64_t v27 = +[NSJSONSerialization dataWithJSONObject:options:error:]( &OBJC_CLASS___NSJSONSerialization,  "dataWithJSONObject:options:error:",  v16,  0LL,  0LL);

    unsigned int v28 = malloc(-[NSData length](v27, "length") + 1);
    memcpy(v28, -[NSData bytes](v27, "bytes"), -[NSData length](v27, "length"));
    *((_BYTE *)-[NSData length](v27, "length") + (void)v2_Block_object_dispose((const void *)(v28 - 80), 8) = 0;
    unsigned int v29 = (unsigned int **)(v15 + 120);
    -[EAGLContext sharegroup](a1, "sharegroup");
    GPUTools::FB::Encode(v15 + 120, 4294959108LL, 0LL, (uint64_t)"CulSp", v30, v31, v32, v33, (char)a1);
    if (g_DYTimebaseInfo != *((_DWORD *)&g_DYTimebaseInfo + 1)) {
      a4 = __udivti3(g_DYTimebaseInfo * a4, (g_DYTimebaseInfo * (unsigned __int128)(unint64_t)a4) >> 64);
    }
    *(void *)(*(void *)(v15 + 120) + 16LL) = a4;
    *(void *)(*(void *)(v15 + 120) + 24LL) = a5;
    *(void *)(v15 + 3712) += a5;
    free(v28);
    id v35 = [(id)DYGetGLGuestAppClient(v34) traceMode];
    if ((int)v35 >= 4)
    {
      id v36 = objc_msgSend( objc_msgSend((id)DYGetGLGuestAppClient(v35), "activeCaptureDescriptor"),  "includeBacktraceInFbufs");
      if ((_DWORD)v36) {
        id v36 = (id)GPUTools::FB::EncodeCurrentBacktrace((GPUTools::FB *)(v15 + 120), v37);
      }
      if (objc_msgSend( objc_msgSend((id)DYGetGLGuestAppClient(v36), "activeCaptureDescriptor"),  "queryDriverEventsOnGraphicsCommands"))
      {
        id v39 = *(id *)v15;
        if (*(void *)v15)
        {
          if (![*(id *)v15 getParameter:1400 to:v52])
          {
            int v51 = 0;
            if (![v39 getParameter:1401 to:&v51]) {
              GPUTools::FB::EncodePerfEvents(v15 + 120, 1LL, &v51, 4LL);
            }
          }
        }
      }

      GPUTools::FB::EncodeCurrentGCDQueueInfo((GPUTools::FB *)(v15 + 120), v38);
      unified_index = (volatile int *)dy_fenum_get_unified_index(4294959108LL);
      unsigned int v41 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(unified_index) defaultFbufStream];
      unsigned int v42 = (unsigned int *)((char *)v41 + 56);
      do
        unsigned int v43 = __ldaxr(v42);
      while (__stlxr(1u, v42));
      if (v43 == 1)
      {
        do
        {
          while (*v42 == 1)
            ;
          do
            unsigned int v44 = __ldaxr(v42);
          while (__stlxr(1u, v42));
        }

        while (v44 == 1);
      }

      id v35 = (id)GPUTools::FB::Stream::Write_nolock(v41, (GPUTools::FB::Fbuf *)(v15 + 120), **v29, 0);
      atomic_store(0, v42);
    }

    uint64_t v45 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v35) startup0Stream];
    uint64_t v46 = (unsigned int *)((char *)v45 + 56);
    do
      unsigned int v47 = __ldaxr(v46);
    while (__stlxr(1u, v46));
    if (v47 == 1)
    {
      do
      {
        while (*v46 == 1)
          ;
        do
          unsigned int v48 = __ldaxr(v46);
        while (__stlxr(1u, v46));
      }

      while (v48 == 1);
    }

    GPUTools::FB::Stream::Write_nolock(v45, (GPUTools::FB::Fbuf *)(v15 + 120), **v29, 1);
    atomic_store(0, v46);
    ContextInfo::PostEncodeInit((ContextInfo *)v15);
    [(id)DYGetGLGuestAppClient(v49) sendContextInfoUpdate];
  }

  return a1;
}

void sub_19E4D4(_Unwind_Exception *a1)
{
}

void sub_19E4DC(_Unwind_Exception *a1)
{
}

BOOL ___ZL25EAGLContext_setDebugLabelP11EAGLContextP13objc_selectorP8NSString_block_invoke( uint64_t a1, uint64_t a2)
{
  return **(void **)(a2 + 8) == *(void *)(a1 + 32);
}

uint64_t _EAGLContext_PresentInterposeCommon(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = GLIContextFromEAGLContext(a1);
  uint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= v7;
    if (v10 >= v7) {
      unint64_t v12 = v8;
    }
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    uint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || v7 < *(void *)(v9 + 32)) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  BOOL v13 = *(void **)(v9 + 40);
  id v14 = [(id)DYGetGLGuestAppClient(v7) traceMode];
  if ((_DWORD)v14 == 6)
  {
    handle_frame_boundary((uint64_t)v13);
LABEL_15:
    if (gCheckGLErrors) {
      check_errors((uint64_t)v13);
    }
    return 1LL;
  }

  int v20 = [(id)DYGetGLGuestAppClient(v14) traceMode];
  if (v20 < 4)
  {
    unified_index = 0LL;
    char v22 = 0;
    uint64_t v23 = mach_absolute_time();
    uint64_t v24 = v23;
    if (gDisableBufferSwaps)
    {
LABEL_27:
      uint64_t v25 = choose_dispatch_table(v23)[90];
      uint64_t v26 = GLIContextFromEAGLContext(a1);
      v25((__GLIContextRec **)v26);
      int v27 = 1;
      goto LABEL_30;
    }
  }

  else
  {
    if ((a2 + 8179) >= 2)
    {
      if ((_DWORD)a2 == -8190) {
        GPUTools::FB::Encode((uint64_t)(v13 + 15), 4294959106LL, 0x40000LL, (uint64_t)"Ce", v16, v17, v18, v19, a1);
      }
    }

    else
    {
      GPUTools::FB::Encode((uint64_t)(v13 + 15), a2, 0x40000LL, (uint64_t)"Ced", v16, v17, v18, v19, a1);
    }

    unified_index = (volatile int *)dy_fenum_get_unified_index(a2);
    char v22 = breakpoint_flags[unified_index];
    if ((v22 & 1) != 0)
    {
      breakpoint_break((uint64_t)(v13 + 15), unified_index, 1LL, 0LL, 0LL);
      uint64_t v23 = mach_absolute_time();
      uint64_t v24 = v23;
      if (gDisableBufferSwaps) {
        goto LABEL_27;
      }
    }

    else
    {
      uint64_t v23 = mach_absolute_time();
      uint64_t v24 = v23;
      if (gDisableBufferSwaps) {
        goto LABEL_27;
      }
    }
  }

  int v27 = (*(uint64_t (**)(uint64_t))(a4 + 16))(a4);
LABEL_30:
  uint64_t v29 = mach_absolute_time() - v24;
  if (g_DYTimebaseInfo != *((_DWORD *)&g_DYTimebaseInfo + 1)) {
    uint64_t v29 = __udivti3(v29 * g_DYTimebaseInfo, ((unint64_t)v29 * (unsigned __int128)g_DYTimebaseInfo) >> 64);
  }
  v13[464] += v29;
  GPUTools::DYLockUtils::Lock((GPUTools::DYLockUtils *)&sDisplayLinkIdleTimeLock, v28);
  uint64_t v31 = spDisplayLinkIdleTime;
  if (spDisplayLinkIdleTime)
  {
    pthread_t v45 = pthread_self();
    uint64_t v46 = &v45;
    uint64_t v32 = std::__hash_table<std::__hash_value_type<_opaque_pthread_t *,unsigned long long>,std::__unordered_map_hasher<_opaque_pthread_t *,std::__hash_value_type<_opaque_pthread_t *,unsigned long long>,std::hash<_opaque_pthread_t *>,std::equal_to<_opaque_pthread_t *>,true>,std::__unordered_map_equal<_opaque_pthread_t *,std::__hash_value_type<_opaque_pthread_t *,unsigned long long>,std::equal_to<_opaque_pthread_t *>,std::hash<_opaque_pthread_t *>,true>,std::allocator<std::__hash_value_type<_opaque_pthread_t *,unsigned long long>>>::__emplace_unique_key_args<_opaque_pthread_t *,std::piecewise_construct_t const&,std::tuple<_opaque_pthread_t *&&>,std::tuple<>>( v31,  (uint64_t *)&v45,  (uint64_t)&std::piecewise_construct,  &v46)[3];
  }

  else
  {
    uint64_t v32 = 0LL;
  }

  v13[579] += v32;
  GPUTools::DYLockUtils::Unlock((GPUTools::DYLockUtils *)&sDisplayLinkIdleTimeLock, v30);
  uint64_t v34 = ContextInfo::ExecuteAfterPresent((ContextInfo *)v13, v33);
  if (v20 >= 4)
  {
    if (g_DYTimebaseInfo != *((_DWORD *)&g_DYTimebaseInfo + 1))
    {
      uint64_t v34 = __udivti3(g_DYTimebaseInfo * v24, (g_DYTimebaseInfo * (unsigned __int128)v24) >> 64);
      uint64_t v24 = v34;
    }

    *(void *)(v13[15] + 16LL) = v24;
    *(void *)(v13[15] + 24LL) = v29;
    id v35 = objc_msgSend( objc_msgSend((id)DYGetGLGuestAppClient(v34), "activeCaptureDescriptor"),  "includeBacktraceInFbufs");
    if ((_DWORD)v35)
    {
      id v35 = (id)GPUTools::FB::EncodeCurrentBacktrace((GPUTools::FB *)(v13 + 15), v36);
      if (!gCheckGLErrors)
      {
LABEL_40:
        if (!objc_msgSend( objc_msgSend((id)DYGetGLGuestAppClient(v35), "activeCaptureDescriptor"),  "queryDriverEventsOnGraphicsCommands")) {
          goto LABEL_45;
        }
LABEL_41:
        id v38 = (void *)*v13;
        if (*v13)
        {
          if (![(id)*v13 getParameter:1400 to:&v46])
          {
            LODWORD(v45) = 0;
            if (![v38 getParameter:1401 to:&v45]) {
              GPUTools::FB::EncodePerfEvents(v13 + 15, 1LL, &v45, 4LL);
            }
          }
        }

LABEL_45:
        uint64_t v39 = GPUTools::FB::EncodeCurrentGCDQueueInfo((GPUTools::FB *)(v13 + 15), v37);
        if ((v22 & 2) != 0) {
          breakpoint_break((uint64_t)(v13 + 15), unified_index, 2LL, 0LL, 0LL);
        }
        uint64_t v40 = (GPUTools::FB::Stream *)[(id)DYGetGLGuestAppClient(v39) defaultFbufStream];
        unsigned int v41 = (unsigned int *)((char *)v40 + 56);
        do
          unsigned int v42 = __ldaxr(v41);
        while (__stlxr(1u, v41));
        if (v42 == 1)
        {
          do
          {
            while (*v41 == 1)
              ;
            do
              unsigned int v43 = __ldaxr(v41);
            while (__stlxr(1u, v41));
          }

          while (v43 == 1);
        }

        GPUTools::FB::Stream::Write_nolock(v40, (GPUTools::FB::Fbuf *)(v13 + 15), *(unsigned int *)v13[15], 1);
        atomic_store(0, v41);
        handle_frame_boundary((uint64_t)v13);
        if ((v27 & 1) != 0) {
          goto LABEL_15;
        }
        goto LABEL_56;
      }
    }

    else if (!gCheckGLErrors)
    {
      goto LABEL_40;
    }

    BOOL v44 = check_errors((uint64_t)v13);
    if (!objc_msgSend( objc_msgSend((id)DYGetGLGuestAppClient(v44), "activeCaptureDescriptor"),  "queryDriverEventsOnGraphicsCommands")) {
      goto LABEL_45;
    }
    goto LABEL_41;
  }

  handle_frame_boundary((uint64_t)v13);
  if (v27) {
    goto LABEL_15;
  }
LABEL_56:
  if (gCheckGLErrors) {
    handle_opengl_error(-6, &unk_1F0B16);
  }
  return 0LL;
}

void sub_19E988(_Unwind_Exception *a1)
{
}

void sub_19E994(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t ___ZL31EAGLContext_presentRenderbufferP11EAGLContextP13objc_selectorm_block_invoke(void *a1)
{
  return off_207378(a1[4], a1[5], a1[6]);
}

uint64_t ContextInfo::ExecuteAfterPresent(ContextInfo *this, volatile int *a2)
{
  uint64_t v3 = (ContextInfo *)((char *)this + 3664);
  GPUTools::DYLockUtils::Lock((ContextInfo *)((char *)this + 3664), a2);
  uint64_t v5 = *((void *)this + 459);
  uint64_t v6 = *((void *)this + 460);
  if (v5 != v6)
  {
    do
    {
      BOOL v13 = this;
      uint64_t v7 = *(void *)(v5 + 24);
      if (!v7) {
        std::__throw_bad_function_call[abi:ne180100]();
      }
      (*(void (**)(uint64_t, ContextInfo **))(*(void *)v7 + 48LL))(v7, &v13);
      v5 += 32LL;
    }

    while (v5 != v6);
    uint64_t v8 = *((void *)this + 460);
    uint64_t v5 = *((void *)this + 459);
    if (v8 != v5)
    {
      do
      {
        uint64_t v12 = v8 - 32;
        unint64_t v10 = *(void **)(v8 - 8);
        if ((void *)(v8 - 32) == v10)
        {
          unint64_t v10 = (void *)(v8 - 32);
          uint64_t v11 = 4LL;
        }

        else
        {
          if (!v10) {
            goto LABEL_8;
          }
          uint64_t v11 = 5LL;
        }

        (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_8:
        uint64_t v8 = v12;
      }

      while (v12 != v5);
    }
  }

  *((void *)this + 460) = v5;
  return GPUTools::DYLockUtils::Unlock(v3, v4);
}

void sub_19EA9C(_Unwind_Exception *a1, volatile int *a2)
{
}

void *std::__hash_table<std::__hash_value_type<_opaque_pthread_t *,unsigned long long>,std::__unordered_map_hasher<_opaque_pthread_t *,std::__hash_value_type<_opaque_pthread_t *,unsigned long long>,std::hash<_opaque_pthread_t *>,std::equal_to<_opaque_pthread_t *>,true>,std::__unordered_map_equal<_opaque_pthread_t *,std::__hash_value_type<_opaque_pthread_t *,unsigned long long>,std::equal_to<_opaque_pthread_t *>,std::hash<_opaque_pthread_t *>,true>,std::allocator<std::__hash_value_type<_opaque_pthread_t *,unsigned long long>>>::__emplace_unique_key_args<_opaque_pthread_t *,std::piecewise_construct_t const&,std::tuple<_opaque_pthread_t *&&>,std::tuple<>>( uint64_t a1, uint64_t *a2, uint64_t a3, void **a4)
{
  uint64_t v7 = *a2;
  unint64_t v8 = HIDWORD(*a2);
  unint64_t v9 = 0x9DDFEA08EB382D69LL * ((8 * *a2 + 8LL) ^ v8);
  unint64_t v10 = 0x9DDFEA08EB382D69LL
      * ((0x9DDFEA08EB382D69LL * (v8 ^ (v9 >> 47) ^ v9)) ^ ((0x9DDFEA08EB382D69LL * (v8 ^ (v9 >> 47) ^ v9)) >> 47));
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = 0x9DDFEA08EB382D69LL
         * ((0x9DDFEA08EB382D69LL * (v8 ^ (v9 >> 47) ^ v9)) ^ ((0x9DDFEA08EB382D69LL * (v8 ^ (v9 >> 47) ^ v9)) >> 47));
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
    }

    else
    {
      unint64_t v4 = v10 & (v11 - 1);
    }

    BOOL v13 = *(void **)(*(void *)a1 + 8 * v4);
    if (v13)
    {
      id v14 = (void *)*v13;
      if (*v13)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v16 = v14[1];
            if (v16 == v10)
            {
              if (v14[2] == v7) {
                return v14;
              }
            }

            else if ((v16 & (v11 - 1)) != v4)
            {
              goto LABEL_23;
            }

            id v14 = (void *)*v14;
            if (!v14) {
              goto LABEL_23;
            }
          }
        }

        do
        {
          unint64_t v15 = v14[1];
          if (v15 == v10)
          {
            if (v14[2] == v7) {
              return v14;
            }
          }

          else
          {
            if (v15 >= v11) {
              v15 %= v11;
            }
            if (v15 != v4) {
              break;
            }
          }

          id v14 = (void *)*v14;
        }

        while (v14);
      }
    }
  }

void sub_19EE00(_Unwind_Exception *a1)
{
}

void std::__throw_bad_function_call[abi:ne180100]()
{
  exception = __cxa_allocate_exception(8uLL);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
}

uint64_t ___ZL37EAGLContext_presentRenderbufferAtTimeP11EAGLContextP13objc_selectormd_block_invoke( uint64_t a1)
{
  return off_207380(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(double *)(a1 + 56));
}

uint64_t ___ZL51EAGLContext_presentRenderbufferAfterMinimumDurationP11EAGLContextP13objc_selectormd_block_invoke( uint64_t a1)
{
  return off_207388(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(double *)(a1 + 56));
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>( uint64_t *result, uint64_t *a2)
{
  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 == result) {
    return result;
  }
  while (1)
  {
    uint64_t v2 = a2[2];
    if (*(_BYTE *)(v2 + 24)) {
      return result;
    }
    uint64_t v3 = *(uint64_t **)(v2 + 16);
    uint64_t v4 = *v3;
    if (*v3 != v2) {
      break;
    }
    uint64_t v7 = v3[1];
    if (!v7 || (int v8 = *(unsigned __int8 *)(v7 + 24), v5 = (_BYTE *)(v7 + 24), v8))
    {
      if (*(uint64_t **)v2 == a2)
      {
        *(_BYTE *)(v2 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        uint64_t v11 = *(void *)(v2 + 8);
        *uint64_t v3 = v11;
        if (v11) {
          goto LABEL_15;
        }
      }

      else
      {
        unint64_t v9 = *(uint64_t **)(v2 + 8);
        uint64_t v10 = *v9;
        *(void *)(v2 + _Block_object_dispose((const void *)(v28 - 80), 8) = *v9;
        if (v10)
        {
          *(void *)(v10 + 16) = v2;
          uint64_t v3 = *(uint64_t **)(v2 + 16);
        }

        v9[2] = (uint64_t)v3;
        *(void *)(*(void *)(v2 + 16) + 8LL * (**(void **)(v2 + 16) != v2)) = v9;
        *unint64_t v9 = v2;
        *(void *)(v2 + 16) = v9;
        uint64_t v3 = (uint64_t *)v9[2];
        uint64_t v2 = *v3;
        *((_BYTE *)v9 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        uint64_t v11 = *(void *)(v2 + 8);
        *uint64_t v3 = v11;
        if (v11) {
LABEL_15:
        }
          *(void *)(v11 + 16) = v3;
      }

      *(void *)(v2 + 16) = v3[2];
      *(void *)(v3[2] + 8LL * (*(void *)v3[2] != (void)v3)) = v2;
      *(void *)(v2 + _Block_object_dispose((const void *)(v28 - 80), 8) = v3;
      v3[2] = v2;
      return result;
    }

uint64_t *std::__hash_table<std::__hash_value_type<unsigned int,IOSurfaceInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,IOSurfaceInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,IOSurfaceInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,IOSurfaceInfo>>>::__emplace_unique_key_args<unsigned int,std::pair<unsigned int const,IOSurfaceInfo>>( uint64_t a1, unsigned int *a2, _OWORD *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }

    else
    {
      unint64_t v3 = ((_DWORD)v7 - 1) & v6;
    }

    unint64_t v9 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      uint64_t v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v12 = v10[1];
            if (v12 == v6)
            {
              if (*((_DWORD *)v10 + 4) == (_DWORD)v6) {
                return v10;
              }
            }

            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_23;
            }

            uint64_t v10 = (uint64_t *)*v10;
            if (!v10) {
              goto LABEL_23;
            }
          }
        }

        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (*((_DWORD *)v10 + 4) == (_DWORD)v6) {
              return v10;
            }
          }

          else
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
            if (v11 != v3) {
              break;
            }
          }

          uint64_t v10 = (uint64_t *)*v10;
        }

        while (v10);
      }
    }
  }

void sub_19F338(_Unwind_Exception *a1)
{
}

void *std::__hash_table<void *,std::hash<void *>,std::equal_to<void *>,std::allocator<void *>>::__emplace_unique_key_args<void *,void *>( uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = HIDWORD(*a2);
  unint64_t v8 = 0x9DDFEA08EB382D69LL * ((8 * *a2 + 8LL) ^ v7);
  unint64_t v9 = 0x9DDFEA08EB382D69LL
     * ((0x9DDFEA08EB382D69LL * (v7 ^ (v8 >> 47) ^ v8)) ^ ((0x9DDFEA08EB382D69LL * (v7 ^ (v8 >> 47) ^ v8)) >> 47));
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = 0x9DDFEA08EB382D69LL
         * ((0x9DDFEA08EB382D69LL * (v7 ^ (v8 >> 47) ^ v8)) ^ ((0x9DDFEA08EB382D69LL * (v7 ^ (v8 >> 47) ^ v8)) >> 47));
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
    }

    else
    {
      unint64_t v3 = v9 & (v10 - 1);
    }

    uint64_t v12 = *(void **)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      BOOL v13 = (void *)*v12;
      if (*v12)
      {
        if (v11.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v15 = v13[1];
            if (v15 == v9)
            {
              if (v13[2] == v6) {
                return v13;
              }
            }

            else if ((v15 & (v10 - 1)) != v3)
            {
              goto LABEL_23;
            }

            BOOL v13 = (void *)*v13;
            if (!v13) {
              goto LABEL_23;
            }
          }
        }

        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v9)
          {
            if (v13[2] == v6) {
              return v13;
            }
          }

          else
          {
            if (v14 >= v10) {
              v14 %= v10;
            }
            if (v14 != v3) {
              break;
            }
          }

          BOOL v13 = (void *)*v13;
        }

        while (v13);
      }
    }
  }

void sub_19F690(_Unwind_Exception *a1)
{
}

uint64_t std::vector<std::function<void ()(ContextInfo *)>>::__emplace_back_slow_path<std::function<void ()(ContextInfo *)>&>( uint64_t *a1, void *a2)
{
  uint64_t v3 = (a1[1] - *a1) >> 5;
  unint64_t v4 = v3 + 1;
  uint64_t v6 = a1[2] - *a1;
  if (v6 >> 4 > v4) {
    unint64_t v4 = v6 >> 4;
  }
  else {
    unint64_t v7 = v4;
  }
  if (v7)
  {
    if (v7 >> 59) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    unint64_t v8 = (char *)operator new(32 * v7);
    uint64_t v9 = (uint64_t)&v8[32 * v3];
    uint64_t v24 = v9;
    uint64_t v25 = v9;
    uint8x8_t v27 = &v8[32 * v7];
    unint64_t v10 = (void *)a2[3];
    if (v10) {
      goto LABEL_10;
    }
LABEL_13:
    *(void *)(v9 + 24) = 0LL;
    goto LABEL_14;
  }

  uint64_t v9 = 32 * v3;
  uint64_t v24 = v9;
  uint64_t v25 = v9;
  uint8x8_t v27 = 0LL;
  unint64_t v10 = (void *)a2[3];
  if (!v10) {
    goto LABEL_13;
  }
LABEL_10:
  if (v10 == a2)
  {
    *(void *)(v9 + 24) = v9;
    (*(void (**)(void *, uint64_t))(*a2 + 24LL))(a2, v9);
    uint64_t v9 = v24;
    uint64_t v11 = v25 + 32;
    uint64_t v26 = v25 + 32;
    BOOL v13 = (char *)*a1;
    uint64_t v12 = (char *)a1[1];
LABEL_25:
    *a1 = v9;
    a1[1] = v11;
    a1[2] = (uint64_t)v27;
    goto LABEL_33;
  }

  *(void *)(v9 + 24) = (*(uint64_t (**)(void *))(*v10 + 16LL))(v10);
LABEL_14:
  uint64_t v11 = v9 + 32;
  uint64_t v26 = v9 + 32;
  BOOL v13 = (char *)*a1;
  uint64_t v12 = (char *)a1[1];
LABEL_15:
  unint64_t v14 = (char **)(v9 - 8);
  do
  {
    float v16 = (char *)*((void *)v12 - 1);
    float v17 = v12 - 32;
    uint64_t v15 = v14;
    if (!v16) {
      goto LABEL_17;
    }
    if (v17 != v16)
    {
      void *v14 = v16;
      uint64_t v15 = (char **)(v12 - 8);
LABEL_17:
      *uint64_t v15 = 0LL;
      goto LABEL_18;
    }

    void *v14 = (char *)(v14 - 3);
    (*(void (**)(void))(**((void **)v12 - 1) + 24LL))(*((void *)v12 - 1));
LABEL_18:
    v14 -= 4;
    uint64_t v12 = v17;
  }

  while (v17 != v13);
  float v18 = (char *)*a1;
  uint64_t v12 = (char *)a1[1];
  float v19 = v14 + 1;
  uint64_t v11 = v26;
  *a1 = (uint64_t)v19;
  a1[1] = v26;
  a1[2] = (uint64_t)v27;
  if (v12 != v18)
  {
    while (1)
    {
      BOOL v22 = v12 - 32;
      uint64_t v20 = (char *)*((void *)v12 - 1);
      if (v22 == v20)
      {
        uint64_t v20 = v22;
        uint64_t v21 = 4LL;
      }

      else
      {
        if (!v20) {
          goto LABEL_28;
        }
        uint64_t v21 = 5LL;
      }

      (*(void (**)(void))(*(void *)v20 + 8 * v21))();
LABEL_28:
      uint64_t v12 = v22;
      if (v22 == v18)
      {
        uint64_t v12 = v18;
        break;
      }
    }
  }

void sub_19F8B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t std::__split_buffer<std::function<void ()(ContextInfo *)>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      uint64_t v6 = v2 - 4;
      *(void *)(a1 + 16) = v2 - 4;
      unint64_t v7 = (void *)*(v2 - 1);
      if (v7 == v6)
      {
        uint64_t v5 = 4LL;
      }

      else
      {
        if (!v7) {
          goto LABEL_7;
        }
        uint64_t v6 = v7;
        uint64_t v5 = 5LL;
      }

      (*(void (**)(void))(*v6 + 8 * v5))();
      uint64_t v6 = *(void **)(a1 + 16);
LABEL_7:
      uint64_t v2 = v6;
    }

    while (v6 != v3);
  }

  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t (***___ZL28set_pipeline_stage_skip_modei_block_invoke(uint64_t a1, uint64_t *a2))()
{
  int v2 = *(_DWORD *)(a1 + 32);
  uint64_t v5 = off_1F93C8;
  int v6 = v2;
  unint64_t v7 = &v5;
  ContextInfo::AddExecution(a2, (uint64_t)&v5);
  uint64_t result = v7;
  if (v7 == &v5)
  {
    uint64_t v4 = 4LL;
    uint64_t result = &v5;
  }

  else
  {
    if (!v7) {
      return result;
    }
    uint64_t v4 = 5LL;
  }

  return (uint64_t (***)())(*result)[v4]();
}

void sub_19F9F0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  unint64_t v14 = a13;
  if (a13 == &a10)
  {
    uint64_t v15 = 4LL;
    unint64_t v14 = &a10;
  }

  else
  {
    if (!a13) {
      goto LABEL_6;
    }
    uint64_t v15 = 5LL;
  }

  (*(void (**)(void))(*(void *)v14 + 8 * v15))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

_DWORD *_ZNKSt3__110__function6__funcIZZL28set_pipeline_stage_skip_modeiEUb0_E3__2NS_9allocatorIS2_EEFvP11ContextInfoEE7__cloneEv( uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  int v3 = *(_DWORD *)(a1 + 8);
  *(void *)uint64_t result = off_1F93C8;
  result[2] = v3;
  return result;
}

uint64_t _ZNKSt3__110__function6__funcIZZL28set_pipeline_stage_skip_modeiEUb0_E3__2NS_9allocatorIS2_EEFvP11ContextInfoEE7__cloneEPNS0_6__baseIS7_EE( uint64_t result, uint64_t a2)
{
  int v2 = *(_DWORD *)(result + 8);
  *(void *)a2 = off_1F93C8;
  *(_DWORD *)(a2 + _Block_object_dispose((const void *)(v28 - 80), 8) = v2;
  return result;
}

id _ZNSt3__110__function6__funcIZZL28set_pipeline_stage_skip_modeiEUb0_E3__2NS_9allocatorIS2_EEFvP11ContextInfoEEclEOS6_( uint64_t a1, void ***a2)
{
  int v2 = *(_DWORD *)(a1 + 8);
  int v3 = **a2;
  v5[0] = v2;
  v5[1] = 0;
  return [v3 setParameter:602 to:v5];
}

_BYTE *_ZNKSt3__110__function6__funcIZZ16update_overridesEUb_E3__0NS_9allocatorIS2_EEFvP11ContextInfoEE7__cloneEv( uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  char v3 = *(_BYTE *)(a1 + 8);
  *(void *)uint64_t result = off_1F9420;
  result[8] = v3;
  return result;
}

uint64_t _ZNKSt3__110__function6__funcIZZ16update_overridesEUb_E3__0NS_9allocatorIS2_EEFvP11ContextInfoEE7__cloneEPNS0_6__baseIS7_EE( uint64_t result, uint64_t a2)
{
  char v2 = *(_BYTE *)(result + 8);
  *(void *)a2 = off_1F9420;
  *(_BYTE *)(a2 + _Block_object_dispose((const void *)(v28 - 80), 8) = v2;
  return result;
}

id _ZNSt3__110__function6__funcIZZ16update_overridesEUb_E3__0NS_9allocatorIS2_EEFvP11ContextInfoEEclEOS6_( uint64_t a1, void ***a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  char v3 = **a2;
  v5[0] = v2;
  v5[1] = 0;
  return [v3 setParameter:601 to:v5];
}

_BYTE *_ZNKSt3__110__function6__funcIZZ16update_overridesEUb_E3__1NS_9allocatorIS2_EEFvP11ContextInfoEE7__cloneEv( uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  char v3 = *(_BYTE *)(a1 + 8);
  *(void *)uint64_t result = off_1F9468;
  result[8] = v3;
  return result;
}

uint64_t _ZNKSt3__110__function6__funcIZZ16update_overridesEUb_E3__1NS_9allocatorIS2_EEFvP11ContextInfoEE7__cloneEPNS0_6__baseIS7_EE( uint64_t result, uint64_t a2)
{
  char v2 = *(_BYTE *)(result + 8);
  *(void *)a2 = off_1F9468;
  *(_BYTE *)(a2 + _Block_object_dispose((const void *)(v28 - 80), 8) = v2;
  return result;
}

id _ZNSt3__110__function6__funcIZZ16update_overridesEUb_E3__1NS_9allocatorIS2_EEFvP11ContextInfoEEclEOS6_( uint64_t a1, void ***a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  char v3 = **a2;
  v5[0] = v2;
  v5[1] = 0;
  return [v3 setParameter:1420 to:v5];
}

uint64_t alpha_func(__GLIContextRec *a1, uint64_t a2, float a3)
{
  uint64_t v5 = a1;
  int v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    int v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float))(*(void *)(v11 + 24) + 8LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float))(*(void *)(v11 + 24) + 8LL))(v5, a2, a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t bind_texture(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  int v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    int v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 40LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 40LL))(v5, a2, a3);
    }
  }

  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v11);
  }
  if (!*(_DWORD *)(v11 + 3404)) {
    uint64_t result = wrapper_cache_texture_binding(v11, a2, a3);
  }
  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

{
  int v3;
  int v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  void *v9;
  uint64_t v10;
  uint64_t result;
  char v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v5) {
    goto LABEL_12;
  }
  int v6 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    uint64_t v7 = v5[4];
    unint64_t v8 = v7 >= (unint64_t)a1;
    else {
      BOOL v9 = v5 + 1;
    }
    if (v8) {
      int v6 = (uint64_t)v5;
    }
    uint64_t v5 = (void *)*v9;
  }

  while (*v9);
  if (v6 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v6 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    int v6 = ContextInfo::activeCtxInfoMap + 8;
  unint64_t v10 = *(void *)(v6 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v10 + 32) + 40LL))(a1, a2, a3);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v10);
  }
  if (!*(_DWORD *)(v10 + 3404)) {
    return wrapper_cache_texture_binding(v10, v4, v3);
  }
  return result;
}

uint64_t blend_func(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  int v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    int v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 56LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 56LL))(v5, a2, a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t clear(__GLIContextRec *a1, uint64_t a2)
{
  char v3 = a1;
  uint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    uint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    BOOL v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 80LL))(v3, a2);
  }

  *(_WORD *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 257;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 80LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t clear_color(__GLIContextRec *a1, float a2, float a3, float a4, float a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unsigned int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    uint64_t v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float))(*(void *)(v15 + 24) + 96LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float))(*(void *)(v15 + 24) + 96LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t clear_stencil(__GLIContextRec *a1, uint64_t a2)
{
  char v3 = a1;
  uint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    uint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    id v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 120LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 120LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t color4f(__GLIContextRec *a1, float a2, float a3, float a4, float a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unsigned int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    uint64_t v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float))(*(void *)(v15 + 24) + 296LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float))(*(void *)(v15 + 24) + 296LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t color4ub(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unsigned int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    uint64_t v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 344LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 344LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t color_mask(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unsigned int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    uint64_t v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 392LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 392LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t color_pointer(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unsigned int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    uint64_t v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24)
                                                                                                 + 408LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24) + 408LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t copy_tex_image2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, unsigned int a8, int a9)
{
  id v14 = a1;
  uint64_t v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      BOOL v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    uint64_t v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  unsigned int v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v20);
  }
  id v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v25 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v21);
    while (__stlxr(v30 - 1, v21));
    unint64_t v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void))(*(void *)(v20 + 24) + 432LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
  }

  *(_BYTE *)(v20 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v25) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void))(*(void *)(v20 + 24) + 432LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v21);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v21));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v20);
  }
  return result;
}

uint64_t copy_tex_sub_image2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, unsigned int a8, int a9)
{
  id v14 = a1;
  uint64_t v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      BOOL v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    uint64_t v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  unsigned int v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v20);
  }
  id v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v25 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v21);
    while (__stlxr(v30 - 1, v21));
    unint64_t v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void))(*(void *)(v20 + 24) + 448LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
  }

  *(_BYTE *)(v20 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v25) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void))(*(void *)(v20 + 24) + 448LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v21);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v21));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v20);
  }
  return result;
}

uint64_t cull_face(__GLIContextRec *a1, uint64_t a2)
{
  char v3 = a1;
  uint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    uint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    uint64_t v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 456LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 456LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t depth_func(__GLIContextRec *a1, uint64_t a2)
{
  char v3 = a1;
  uint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    uint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    uint64_t v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 480LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 480LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t depth_mask(__GLIContextRec *a1, uint64_t a2)
{
  char v3 = a1;
  uint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    uint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    uint64_t v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 488LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 488LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t disable(__GLIContextRec *a1, uint64_t a2)
{
  char v3 = a1;
  uint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    uint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    uint64_t v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 504LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 504LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t disable_client_state(__GLIContextRec *a1, uint64_t a2)
{
  char v3 = a1;
  uint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    uint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    uint64_t v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 512LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 512LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

char *draw_arrays(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24)
                                                                                           + 520LL))( v7,  a2,  a3,  a4);
  }

  *(_WORD *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 257;
  uint64_t result = (char *)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == (_BYTE *)&dword_0 + 1)
  {
    uint64_t result = (char *)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24)
                                                                                             + 520LL))( v7,  a2,  a3,  a4);
    }
  }

  if (!*(_DWORD *)(v13 + 3404)) {
    uint64_t result = (char *)GLDrawCommandStatistics::update(v13 + 32LL * a2 + 3960, a2, a4, 1);
  }
  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return (char *)handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

char *draw_elements(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    uint64_t v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24) + 536LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_WORD *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 257;
  uint64_t result = (char *)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == (_BYTE *)&dword_0 + 1)
  {
    uint64_t result = (char *)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24) + 536LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  if (!*(_DWORD *)(v15 + 3404)) {
    uint64_t result = (char *)GLDrawCommandStatistics::update(v15 + 32LL * a2 + 3736, a2, a3, 1);
  }
  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return (char *)handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t enable(__GLIContextRec *a1, uint64_t a2)
{
  char v3 = a1;
  uint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    uint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    id v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 576LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 576LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t enable_client_state(__GLIContextRec *a1, uint64_t a2)
{
  char v3 = a1;
  uint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    uint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    id v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 584LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 584LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t finish(__GLIContextRec *a1)
{
  unsigned int v1 = a1;
  int v2 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v4 = v2[4];
    BOOL v5 = v4 >= (unint64_t)a1;
    else {
      unint64_t v6 = v2 + 1;
    }
    if (v5) {
      uint64_t v3 = (uint64_t)v2;
    }
    int v2 = (void *)*v6;
  }

  while (*v6);
  if (v3 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v3 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = (unsigned int *)(v7 + 4640);
  do
  {
    unsigned int v9 = __ldaxr(v8);
    signed int v10 = v9 + 1;
  }

  while (__stlxr(v10, v8));
  if (gCheckGLErrors) {
    BOOL v11 = v10 <= 1;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v7);
  }
  id v12 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v12 >= 1)
  {
    do
      unsigned int v17 = __ldaxr(v8);
    while (__stlxr(v17 - 1, v8));
    BOOL v18 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v12) graphicsLockWaitQueue];
    dispatch_sync_f(v18, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 712LL))(v1);
  }

  *(_BYTE *)(v7 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v12) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v19 = __ldaxr(v8);
      while (__stlxr(v19 - 1, v8));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 712LL))(v1);
    }
  }

  do
  {
    unsigned int v14 = __ldaxr(v8);
    signed int v15 = v14 - 1;
  }

  while (__stlxr(v15, v8));
  if (gCheckGLErrors) {
    BOOL v16 = v15 < 1;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16) {
    return handle_opengl_thread_conflict((const void **)v7);
  }
  return result;
}

uint64_t flush(__GLIContextRec *a1)
{
  unsigned int v1 = a1;
  int v2 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v4 = v2[4];
    BOOL v5 = v4 >= (unint64_t)a1;
    else {
      unint64_t v6 = v2 + 1;
    }
    if (v5) {
      uint64_t v3 = (uint64_t)v2;
    }
    int v2 = (void *)*v6;
  }

  while (*v6);
  if (v3 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v3 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = (unsigned int *)(v7 + 4640);
  do
  {
    unsigned int v9 = __ldaxr(v8);
    signed int v10 = v9 + 1;
  }

  while (__stlxr(v10, v8));
  if (gCheckGLErrors) {
    BOOL v11 = v10 <= 1;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v7);
  }
  id v12 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v12 >= 1)
  {
    do
      unsigned int v17 = __ldaxr(v8);
    while (__stlxr(v17 - 1, v8));
    BOOL v18 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v12) graphicsLockWaitQueue];
    dispatch_sync_f(v18, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 720LL))(v1);
  }

  *(_BYTE *)(v7 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v12) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v19 = __ldaxr(v8);
      while (__stlxr(v19 - 1, v8));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 720LL))(v1);
    }
  }

  do
  {
    unsigned int v14 = __ldaxr(v8);
    signed int v15 = v14 - 1;
  }

  while (__stlxr(v15, v8));
  if (gCheckGLErrors) {
    BOOL v16 = v15 < 1;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16) {
    return handle_opengl_thread_conflict((const void **)v7);
  }
  return result;
}

uint64_t fogf(__GLIContextRec *a1, uint64_t a2, float a3)
{
  BOOL v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  id v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float))(*(void *)(v11 + 24) + 728LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float))(*(void *)(v11 + 24) + 728LL))(v5, a2, a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t fogfv(__GLIContextRec *a1, uint64_t a2, const float *a3)
{
  BOOL v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  id v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const float *))(*(void *)(v11 + 24) + 736LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const float *))(*(void *)(v11 + 24) + 736LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t front_face(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  signed int v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    BOOL v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 760LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 760LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t gen_textures(__GLIContextRec *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 784LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 784LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t get_BOOLeanv(__GLIContextRec *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned __int8 *))(*(void *)(v11 + 24) + 792LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned __int8 *))(*(void *)(v11 + 24) + 792LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t get_floatv(__GLIContextRec *a1, uint64_t a2, float *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float *))(*(void *)(v11 + 24) + 824LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float *))(*(void *)(v11 + 24) + 824LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t get_integerv(__GLIContextRec *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, int *))(*(void *)(v11 + 24) + 832LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, int *))(*(void *)(v11 + 24) + 832LL))(v5, a2, a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t get_lightfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 840LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 840LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_materialfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 880LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 880LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_pointerv(__GLIContextRec *a1, uint64_t a2, void **a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, void **))(*(void *)(v11 + 24) + 920LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, void **))(*(void *)(v11 + 24) + 920LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t get_tex_envfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 944LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 944LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_tex_enviv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 952LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 952LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_tex_image(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  BOOL v11 = a1;
  signed int v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    signed int v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  id v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    signed int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void *))(*(void *)(v17 + 24) + 984LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void *))(*(void *)(v17 + 24) + 984LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t get_tex_level_parameteriv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, int *))(*(void *)(v15 + 24)
                                                                                          + 1000LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, int *))(*(void *)(v15 + 24)
                                                                                            + 1000LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t get_tex_parameterfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 1008LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 1008LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_tex_parameteriv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 1016LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 1016LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t hint(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 1024LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 1024LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t light_modelf(__GLIContextRec *a1, uint64_t a2, float a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float))(*(void *)(v11 + 24) + 1168LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float))(*(void *)(v11 + 24) + 1168LL))(v5, a2, a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t light_modelfv(__GLIContextRec *a1, uint64_t a2, const float *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const float *))(*(void *)(v11 + 24) + 1176LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const float *))(*(void *)(v11 + 24) + 1176LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t lightf(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float))(*(void *)(v13 + 24) + 1200LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float))(*(void *)(v13 + 24) + 1200LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t lightfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24) + 1208LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24)
                                                                                           + 1208LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t line_width(__GLIContextRec *a1, float a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float))(*(void *)(v9 + 24) + 1240LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float))(*(void *)(v9 + 24) + 1240LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t load_identity(__GLIContextRec *a1)
{
  unsigned int v1 = a1;
  int v2 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v4 = v2[4];
    BOOL v5 = v4 >= (unint64_t)a1;
    else {
      unint64_t v6 = v2 + 1;
    }
    if (v5) {
      uint64_t v3 = (uint64_t)v2;
    }
    int v2 = (void *)*v6;
  }

  while (*v6);
  if (v3 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v3 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = (unsigned int *)(v7 + 4640);
  do
  {
    unsigned int v9 = __ldaxr(v8);
    signed int v10 = v9 + 1;
  }

  while (__stlxr(v10, v8));
  if (gCheckGLErrors) {
    BOOL v11 = v10 <= 1;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v7);
  }
  id v12 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v12 >= 1)
  {
    do
      unsigned int v17 = __ldaxr(v8);
    while (__stlxr(v17 - 1, v8));
    BOOL v18 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v12) graphicsLockWaitQueue];
    dispatch_sync_f(v18, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 1256LL))(v1);
  }

  *(_BYTE *)(v7 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v12) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v19 = __ldaxr(v8);
      while (__stlxr(v19 - 1, v8));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 1256LL))(v1);
    }
  }

  do
  {
    unsigned int v14 = __ldaxr(v8);
    signed int v15 = v14 - 1;
  }

  while (__stlxr(v15, v8));
  if (gCheckGLErrors) {
    BOOL v16 = v15 < 1;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16) {
    return handle_opengl_thread_conflict((const void **)v7);
  }
  return result;
}

uint64_t load_matrixf(__GLIContextRec *a1, const float *a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  signed int v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, const float *))(*(void *)(v9 + 24) + 1272LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, const float *))(*(void *)(v9 + 24) + 1272LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t logic_op(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  signed int v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 1288LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 1288LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t materialf(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float))(*(void *)(v13 + 24) + 1360LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float))(*(void *)(v13 + 24) + 1360LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t materialfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const float *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24) + 1368LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24)
                                                                                           + 1368LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t matrix_mode(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 1392LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 1392LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t mult_matrixf(__GLIContextRec *a1, const float *a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, const float *))(*(void *)(v9 + 24) + 1408LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, const float *))(*(void *)(v9 + 24) + 1408LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t normal3f(__GLIContextRec *a1, float a2, float a3, float a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float, float, float))(*(void *)(v13 + 24) + 1456LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float, float, float))(*(void *)(v13 + 24) + 1456LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t normal_pointer(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const void *))(*(void *)(v13 + 24) + 1504LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const void *))(*(void *)(v13 + 24)
                                                                                          + 1504LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t pixel_storei(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 1560LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 1560LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t point_size(__GLIContextRec *a1, float a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    BOOL v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float))(*(void *)(v9 + 24) + 1592LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float))(*(void *)(v9 + 24) + 1592LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t polygon_offset(__GLIContextRec *a1, float a2, float a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float, float))(*(void *)(v11 + 24) + 1608LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float, float))(*(void *)(v11 + 24) + 1608LL))(v5, a2, a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t pop_matrix(__GLIContextRec *a1)
{
  unsigned int v1 = a1;
  int v2 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v4 = v2[4];
    BOOL v5 = v4 >= (unint64_t)a1;
    else {
      unint64_t v6 = v2 + 1;
    }
    if (v5) {
      uint64_t v3 = (uint64_t)v2;
    }
    int v2 = (void *)*v6;
  }

  while (*v6);
  if (v3 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v3 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = (unsigned int *)(v7 + 4640);
  do
  {
    unsigned int v9 = __ldaxr(v8);
    signed int v10 = v9 + 1;
  }

  while (__stlxr(v10, v8));
  if (gCheckGLErrors) {
    BOOL v11 = v10 <= 1;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v7);
  }
  id v12 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v12 >= 1)
  {
    do
      unsigned int v17 = __ldaxr(v8);
    while (__stlxr(v17 - 1, v8));
    unsigned int v18 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v12) graphicsLockWaitQueue];
    dispatch_sync_f(v18, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 1640LL))(v1);
  }

  *(_BYTE *)(v7 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v12) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v19 = __ldaxr(v8);
      while (__stlxr(v19 - 1, v8));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 1640LL))(v1);
    }
  }

  do
  {
    unsigned int v14 = __ldaxr(v8);
    signed int v15 = v14 - 1;
  }

  while (__stlxr(v15, v8));
  if (gCheckGLErrors) {
    BOOL v16 = v15 < 1;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16) {
    return handle_opengl_thread_conflict((const void **)v7);
  }
  return result;
}

uint64_t push_matrix(__GLIContextRec *a1)
{
  unsigned int v1 = a1;
  int v2 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v4 = v2[4];
    BOOL v5 = v4 >= (unint64_t)a1;
    else {
      unint64_t v6 = v2 + 1;
    }
    if (v5) {
      uint64_t v3 = (uint64_t)v2;
    }
    int v2 = (void *)*v6;
  }

  while (*v6);
  if (v3 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v3 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = (unsigned int *)(v7 + 4640);
  do
  {
    unsigned int v9 = __ldaxr(v8);
    signed int v10 = v9 + 1;
  }

  while (__stlxr(v10, v8));
  if (gCheckGLErrors) {
    BOOL v11 = v10 <= 1;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v7);
  }
  id v12 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v12 >= 1)
  {
    do
      unsigned int v17 = __ldaxr(v8);
    while (__stlxr(v17 - 1, v8));
    unsigned int v18 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v12) graphicsLockWaitQueue];
    dispatch_sync_f(v18, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 1680LL))(v1);
  }

  *(_BYTE *)(v7 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v12) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v19 = __ldaxr(v8);
      while (__stlxr(v19 - 1, v8));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 1680LL))(v1);
    }
  }

  do
  {
    unsigned int v14 = __ldaxr(v8);
    signed int v15 = v14 - 1;
  }

  while (__stlxr(v15, v8));
  if (gCheckGLErrors) {
    BOOL v16 = v15 < 1;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16) {
    return handle_opengl_thread_conflict((const void **)v7);
  }
  return result;
}

uint64_t read_buffer(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  signed int v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    BOOL v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 1888LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 1888LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t read_pixels( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v14 = a1;
  signed int v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      unsigned int v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    signed int v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  unsigned int v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v20);
  }
  id v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v25 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v21);
    while (__stlxr(v30 - 1, v21));
    unint64_t v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))(*(void *)(v20 + 24) + 1896LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
  }

  *(_BYTE *)(v20 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v25) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))(*(void *)(v20 + 24) + 1896LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v21);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v21));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v20);
  }
  return result;
}

uint64_t rotatef(__GLIContextRec *a1, float a2, float a3, float a4, float a5)
{
  uint64_t v9 = a1;
  signed int v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    signed int v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  uint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float))(*(void *)(v15 + 24) + 1984LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float))(*(void *)(v15 + 24) + 1984LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t scalef(__GLIContextRec *a1, float a2, float a3, float a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float, float, float))(*(void *)(v13 + 24) + 2000LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float, float, float))(*(void *)(v13 + 24) + 2000LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t scissor(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 2008LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 2008LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t shade_model(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    id v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 2024LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 2024LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t stencil_func(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 2032LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 2032LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t stencil_mask(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 2040LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 2040LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t stencil_op(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 2048LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 2048LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_coord_pointer(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24)
                                                                                                 + 2312LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24) + 2312LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t tex_envf(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float))(*(void *)(v13 + 24) + 2320LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float))(*(void *)(v13 + 24) + 2320LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_envfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const float *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24) + 2328LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24)
                                                                                           + 2328LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_envi(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 2336LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 2336LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_enviv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 2344LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 2344LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_image2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9, const void *a10)
{
  id v14 = a1;
  unsigned int v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      BOOL v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    unsigned int v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  signed int v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v20);
  }
  id v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v25 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v21);
    while (__stlxr(v30 - 1, v21));
    unint64_t v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, const void *))(*(void *)(v20 + 24) + 2408LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
  }

  *(_BYTE *)(v20 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v25) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, const void *))(*(void *)(v20 + 24) + 2408LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v21);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v21));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v20);
  }
  return result;
}

uint64_t tex_parameterf(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float))(*(void *)(v13 + 24) + 2416LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float))(*(void *)(v13 + 24) + 2416LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_parameterfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const float *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24) + 2424LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24)
                                                                                           + 2424LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_parameteri(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 2432LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 2432LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_parameteriv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 2440LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 2440LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_sub_image2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9, const void *a10)
{
  id v14 = a1;
  unsigned int v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      BOOL v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    unsigned int v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  signed int v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v20);
  }
  id v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v25 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v21);
    while (__stlxr(v30 - 1, v21));
    unint64_t v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, const void *))(*(void *)(v20 + 24) + 2456LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
  }

  *(_BYTE *)(v20 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v25) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, const void *))(*(void *)(v20 + 24) + 2456LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v21);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v21));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v20);
  }
  return result;
}

uint64_t translatef(__GLIContextRec *a1, float a2, float a3, float a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float, float, float))(*(void *)(v13 + 24) + 2472LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float, float, float))(*(void *)(v13 + 24) + 2472LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t vertex_pointer(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24)
                                                                                                 + 2672LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24) + 2672LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

char *viewport(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24) + 2680LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (char *)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == (_BYTE *)&dword_0 + 1)
  {
    uint64_t result = (char *)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24) + 2680LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  *(_DWORD *)(v15 + 3360) = a2;
  *(_DWORD *)(v15 + 3364) = a3;
  *(_DWORD *)(v15 + 336_Block_object_dispose((const void *)(v28 - 80), 8) = a4;
  *(_DWORD *)(v15 + 3372) = a5;
  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return (char *)handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t blend_func_separate(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 2688LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 2688LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t blend_color(__GLIContextRec *a1, float a2, float a3, float a4, float a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float))(*(void *)(v15 + 24) + 2696LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float))(*(void *)(v15 + 24) + 2696LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t blend_equation(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    id v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 2704LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 2704LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

char *client_active_texture(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    id v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 2728LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (char *)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == (_BYTE *)&dword_0 + 1)
  {
    uint64_t result = (char *)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 2728LL))(v3, a2);
    }
  }

  *(_DWORD *)(v9 + 2076) = a2;
  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return (char *)handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

char *active_texture(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    id v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 2736LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (char *)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == (_BYTE *)&dword_0 + 1)
  {
    uint64_t result = (char *)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 2736LL))(v3, a2);
    }
  }

  *(_DWORD *)(v9 + 2072) = a2;
  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return (char *)handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t multi_tex_coord4f(__GLIContextRec *a1, uint64_t a2, float a3, float a4, float a5, float a6)
{
  unsigned int v11 = a1;
  signed int v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unsigned int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    signed int v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  BOOL v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    signed int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float, float, float, float))(*(void *)(v17 + 24)
                                                                                             + 2952LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float, float, float, float))(*(void *)(v17 + 24)
                                                                                               + 2952LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t compressed_tex_image3D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9, const void *a10)
{
  unint64_t v14 = a1;
  BOOL v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      unsigned int v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    BOOL v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  BOOL v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v20);
  }
  id v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v25 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v21);
    while (__stlxr(v30 - 1, v21));
    unint64_t v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, const void *))(*(void *)(v20 + 24) + 3032LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
  }

  *(_BYTE *)(v20 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v25) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, const void *))(*(void *)(v20 + 24) + 3032LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v21);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v21));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v20);
  }
  return result;
}

uint64_t compressed_tex_image2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, unsigned int a8, const void *a9)
{
  unint64_t v14 = a1;
  BOOL v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      unsigned int v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    BOOL v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  BOOL v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v20);
  }
  id v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v25 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v21);
    while (__stlxr(v30 - 1, v21));
    unint64_t v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, const void *))(*(void *)(v20 + 24) + 3040LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
  }

  *(_BYTE *)(v20 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v25) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, const void *))(*(void *)(v20 + 24) + 3040LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v21);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v21));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v20);
  }
  return result;
}

uint64_t compressed_tex_sub_image3D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9, uint64_t a10, const void *a11)
{
  uint64_t v13 = a1;
  unint64_t v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      BOOL v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    unint64_t v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  uint64_t v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v20);
    while (__stlxr(v29 - 1, v20));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, void, void, void, void, void, uint64_t, uint64_t, const void *))(*(void *)(v19 + 24) + 3056LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v24) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v31 = __ldaxr(v20);
      while (__stlxr(v31 - 1, v20));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, void, void, void, void, void, uint64_t, uint64_t, const void *))(*(void *)(v19 + 24) + 3056LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11);
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v20);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v20));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

uint64_t compressed_tex_sub_image2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9, const void *a10)
{
  unint64_t v14 = a1;
  uint64_t v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      uint64_t v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    uint64_t v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  unsigned int v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v20);
  }
  id v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v25 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v21);
    while (__stlxr(v30 - 1, v21));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, const void *))(*(void *)(v20 + 24) + 3064LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
  }

  *(_BYTE *)(v20 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v25) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, const void *))(*(void *)(v20 + 24) + 3064LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v21);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v21));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v20);
  }
  return result;
}

uint64_t get_compressed_tex_image(__GLIContextRec *a1, uint64_t a2, uint64_t a3, void *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, void *))(*(void *)(v13 + 24) + 3080LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, void *))(*(void *)(v13 + 24) + 3080LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

char *draw_range_elements( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const void *a7)
{
  signed int v12 = a1;
  uint64_t v13 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v13) {
    goto LABEL_12;
  }
  uint64_t v14 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v15 = v13[4];
    BOOL v16 = v15 >= (unint64_t)a1;
    else {
      BOOL v17 = v13 + 1;
    }
    if (v16) {
      uint64_t v14 = (uint64_t)v13;
    }
    uint64_t v13 = (void *)*v17;
  }

  while (*v17);
  if (v14 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v14 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v14 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v18 = *(void *)(v14 + 40);
  uint64_t v19 = (unsigned int *)(v18 + 4640);
  do
  {
    unsigned int v20 = __ldaxr(v19);
    signed int v21 = v20 + 1;
  }

  while (__stlxr(v21, v19));
  if (gCheckGLErrors) {
    BOOL v22 = v21 <= 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v18);
  }
  id v23 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v23 >= 1)
  {
    do
      unsigned int v28 = __ldaxr(v19);
    while (__stlxr(v28 - 1, v19));
    BOOL v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v23) graphicsLockWaitQueue];
    dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
    return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v18 + 24) + 3240LL))( v12,  a2,  a3,  a4,  a5,  a6,  a7);
  }

  *(_WORD *)(v18 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 257;
  uint64_t result = (char *)[(id)DYGetGLGuestAppClient(v23) state];
  if (result == (_BYTE *)&dword_0 + 1)
  {
    uint64_t result = (char *)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v30 = __ldaxr(v19);
      while (__stlxr(v30 - 1, v19));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v18 + 24) + 3240LL))( v12,  a2,  a3,  a4,  a5,  a6,  a7);
    }
  }

  if (!*(_DWORD *)(v18 + 3404)) {
    uint64_t result = (char *)GLDrawCommandStatistics::update(v18 + 32LL * a2 + 3960, a2, a5, 1);
  }
  do
  {
    unsigned int v25 = __ldaxr(v19);
    signed int v26 = v25 - 1;
  }

  while (__stlxr(v26, v19));
  if (gCheckGLErrors) {
    BOOL v27 = v26 < 1;
  }
  else {
    BOOL v27 = 1;
  }
  if (!v27) {
    return (char *)handle_opengl_thread_conflict((const void **)v18);
  }
  return result;
}

uint64_t tex_image3D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9, const void *a10)
{
  uint64_t v13 = a1;
  uint64_t v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      uint64_t v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    uint64_t v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  unsigned int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v20);
    while (__stlxr(v29 - 1, v20));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, const void *))(*(void *)(v19 + 24) + 3504LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v24) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v31 = __ldaxr(v20);
      while (__stlxr(v31 - 1, v20));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, const void *))(*(void *)(v19 + 24) + 3504LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v20);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v20));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

uint64_t tex_sub_image3D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9, uint64_t a10, const void *a11)
{
  uint64_t v13 = a1;
  uint64_t v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      uint64_t v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    uint64_t v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  unsigned int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v20);
    while (__stlxr(v29 - 1, v20));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, void, void, void, void, void, uint64_t, uint64_t, const void *))(*(void *)(v19 + 24) + 3512LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v24) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v31 = __ldaxr(v20);
      while (__stlxr(v31 - 1, v20));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, void, void, void, void, void, uint64_t, uint64_t, const void *))(*(void *)(v19 + 24) + 3512LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11);
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v20);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v20));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

uint64_t copy_tex_sub_image3D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9)
{
  uint64_t v13 = a1;
  uint64_t v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      uint64_t v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    uint64_t v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  unsigned int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v20);
    while (__stlxr(v29 - 1, v20));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t))(*(void *)(v19 + 24) + 3520LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v24) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v31 = __ldaxr(v20);
      while (__stlxr(v31 - 1, v20));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t))(*(void *)(v19 + 24) + 3520LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v20);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v20));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

uint64_t get_uniform_indices( __GLIContextRec *a1, uint64_t a2, uint64_t a3, const char *const *a4, unsigned int *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      uint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    unsigned int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const char *const *, unsigned int *))(*(void *)(v15 + 24) + 3528LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const char *const *, unsigned int *))(*(void *)(v15 + 24) + 3528LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t get_active_uniformsiv( __GLIContextRec *a1, uint64_t a2, uint64_t a3, const unsigned int *a4, uint64_t a5, int *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    BOOL v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *, uint64_t, int *))(*(void *)(v17 + 24) + 3536LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *, uint64_t, int *))(*(void *)(v17 + 24) + 3536LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t get_active_uniform_blockiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, int *))(*(void *)(v15 + 24)
                                                                                          + 3560LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, int *))(*(void *)(v15 + 24)
                                                                                            + 3560LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t get_active_uniform_block_name( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, char *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    BOOL v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, int *, char *))(*(void *)(v17 + 24)
                                                                                                  + 3568LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, int *, char *))(*(void *)(v17 + 24) + 3568LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t uniform_block_binding(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 3576LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 3576LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t blend_equation_separate(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 3664LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 3664LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t sample_coverage(__GLIContextRec *a1, float a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float))(*(void *)(v11 + 24) + 3672LL))(v5, a3, a2);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float))(*(void *)(v11 + 24) + 3672LL))(v5, a3, a2);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t gen_fences_APPLE(__GLIContextRec *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 3704LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 3704LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t delete_fences_APPLE(__GLIContextRec *a1, uint64_t a2, const unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 3712LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 3712LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t set_fence_APPLE(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    BOOL v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 3720LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 3720LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t finish_fence_APPLE(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    BOOL v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 3744LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 3744LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t finish_object_APPLE(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 3760LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 3760LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t vertex_attrib_pointer( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const void *a7)
{
  unsigned int v13 = a1;
  signed int v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      unsigned int v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    signed int v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  BOOL v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v20);
    while (__stlxr(v29 - 1, v20));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v19 + 24) + 4088LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v24) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v31 = __ldaxr(v20);
      while (__stlxr(v31 - 1, v20));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v19 + 24) + 4088LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v20);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v20));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

uint64_t enable_vertex_attrib_array(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    BOOL v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 4096LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 4096LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t disable_vertex_attrib_array(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    BOOL v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 4104LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 4104LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t get_vertex_attribfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 4120LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 4120LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_vertex_attribiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 4128LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 4128LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_vertex_attrib_pointerv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, void **a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, void **))(*(void *)(v13 + 24) + 4136LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, void **))(*(void *)(v13 + 24) + 4136LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t point_parameterf(__GLIContextRec *a1, uint64_t a2, float a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float))(*(void *)(v11 + 24) + 4320LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float))(*(void *)(v11 + 24) + 4320LL))(v5, a2, a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t point_parameterfv(__GLIContextRec *a1, uint64_t a2, const float *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const float *))(*(void *)(v11 + 24) + 4328LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const float *))(*(void *)(v11 + 24) + 4328LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t stencil_op_separate(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  id v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    unsigned int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 4688LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 4688LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t delete_object_ARB(__GLIContextRec *a1, volatile int *a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v20 = __ldaxr(v10);
    while (__stlxr(v20 - 1, v10));
    unsigned int v21 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v21, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, volatile int *))(*(void *)(v9 + 24) + 4728LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v14) state] == (char *)&dword_0 + 1)
  {
    id v15 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v15)
    {
      do
        unsigned int v22 = __ldaxr(v10);
      while (__stlxr(v22 - 1, v10));
      [(id)DYGetGLGuestAppClient(v15) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, volatile int *))(*(void *)(v9 + 24) + 4728LL))(v3, a2);
    }
  }

  wrapper_cache_shader_delete((ContextInfo *)v9, a2);
  uint64_t result = wrapper_cache_program_delete((ContextInfo *)v9, a2);
  do
  {
    unsigned int v17 = __ldaxr(v10);
    signed int v18 = v17 - 1;
  }

  while (__stlxr(v18, v10));
  if (gCheckGLErrors) {
    BOOL v19 = v18 < 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

{
  void *v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  void *v8;
  ContextInfo *v9;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(ContextInfo **)(v5 + 40);
  wrapper_cache_shader_delete(v9, a2);
  wrapper_cache_program_delete(v9, a2);
  return (*(uint64_t (**)(__GLIContextRec *, volatile int *))(*((void *)v9 + 4) + 4728LL))(a1, a2);
}

uint64_t detach_object_ARB(__GLIContextRec *a1, volatile int *a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v22 = __ldaxr(v12);
    while (__stlxr(v22 - 1, v12));
    signed int v23 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v23, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, volatile int *, uint64_t))(*(void *)(v11 + 24) + 4744LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v16) state] == (char *)&dword_0 + 1)
  {
    id v17 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v17)
    {
      do
        unsigned int v24 = __ldaxr(v12);
      while (__stlxr(v24 - 1, v12));
      [(id)DYGetGLGuestAppClient(v17) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, volatile int *, uint64_t))(*(void *)(v11 + 24) + 4744LL))( v5,  a2,  a3);
    }
  }

  uint64_t result = wrapper_cache_shader_pre_detach((ContextInfo *)v11, a2, a3);
  do
  {
    unsigned int v19 = __ldaxr(v12);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v12));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

{
  void *v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  void *v10;
  ContextInfo *v11;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(ContextInfo **)(v7 + 40);
  wrapper_cache_shader_pre_detach(v11, a2, a3);
  return (*(uint64_t (**)(__GLIContextRec *, volatile int *, uint64_t))(*((void *)v11 + 4) + 4744LL))( a1,  a2,  a3);
}

uint64_t shader_source_ARB(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const char *const *a4, const int *a5)
{
  BOOL v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  id v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v26 = __ldaxr(v16);
    while (__stlxr(v26 - 1, v16));
    unsigned int v27 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v27, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const char *const *, const int *))(*(void *)(v15 + 24) + 4760LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v21 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v21)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v21) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const char *const *, const int *))(*(void *)(v15 + 24) + 4760LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  uint64_t result = wrapper_cache_shader_source((ContextInfo *)v15, a2);
  do
  {
    unsigned int v23 = __ldaxr(v16);
    signed int v24 = v23 - 1;
  }

  while (__stlxr(v24, v16));
  if (gCheckGLErrors) {
    BOOL v25 = v24 < 1;
  }
  else {
    BOOL v25 = 1;
  }
  if (!v25) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t attach_object_ARB(__GLIContextRec *a1, void *a2, void *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v22 = __ldaxr(v12);
    while (__stlxr(v22 - 1, v12));
    unsigned int v23 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v23, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, void *, void *))(*(void *)(v11 + 24) + 4784LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v16) state] == (char *)&dword_0 + 1)
  {
    id v17 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v17)
    {
      do
        unsigned int v24 = __ldaxr(v12);
      while (__stlxr(v24 - 1, v12));
      [(id)DYGetGLGuestAppClient(v17) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, void *, void *))(*(void *)(v11 + 24) + 4784LL))(v5, a2, a3);
    }
  }

  uint64_t result = check_errors(v11);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v11);
  }
  if (!*(_DWORD *)(v11 + 3404)) {
    uint64_t result = (uint64_t)wrapper_cache_shader_post_attach((ContextInfo *)v11, a2, a3);
  }
  do
  {
    unsigned int v19 = __ldaxr(v12);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v12));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

{
  void *v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  void *v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  check_errors(v11);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, void *, void *))(*(void *)(v11 + 32) + 4784LL))(a1, a2, a3);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v11);
  }
  if (!*(_DWORD *)(v11 + 3404)) {
    return (uint64_t)wrapper_cache_shader_post_attach((ContextInfo *)v11, a2, a3);
  }
  return result;
}

uint64_t link_program_ARB(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v20 = __ldaxr(v10);
    while (__stlxr(v20 - 1, v10));
    BOOL v21 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v21, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 4792LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v14) state] == (char *)&dword_0 + 1)
  {
    id v15 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v15)
    {
      do
        unsigned int v22 = __ldaxr(v10);
      while (__stlxr(v22 - 1, v10));
      [(id)DYGetGLGuestAppClient(v15) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 4792LL))(v3, a2);
    }
  }

  wrapper_cache_program_pre_link((ContextInfo *)v9, a2);
  uint64_t result = check_errors(v9);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v9);
  }
  if (!*(_DWORD *)(v9 + 3404))
  {
    (*(void (**)(void, uint64_t, uint64_t, int *))(*(void *)(v9 + 32) + 5264LL))( *(void *)(v9 + 16),  a2,  35714LL,  &v23);
    uint64_t result = (uint64_t)wrapper_cache_program_link((int8x8_t **)v9, a2, v23 == 1);
  }

  do
  {
    unsigned int v17 = __ldaxr(v10);
    signed int v18 = v17 - 1;
  }

  while (__stlxr(v18, v10));
  if (gCheckGLErrors) {
    BOOL v19 = v18 < 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

{
  void *v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  uint64_t result;
  int v11;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  wrapper_cache_program_pre_link((ContextInfo *)v9, a2);
  check_errors(v9);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 32) + 4792LL))(a1, a2);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v9);
  }
  if (!*(_DWORD *)(v9 + 3404))
  {
    (*(void (**)(void, uint64_t, uint64_t, int *))(*(void *)(v9 + 32) + 5264LL))( *(void *)(v9 + 16),  a2,  35714LL,  &v11);
    return (uint64_t)wrapper_cache_program_link((int8x8_t **)v9, a2, v11 == 1);
  }

  return result;
}

uint64_t use_program_object_ARB(__GLIContextRec *a1, void *a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v20 = __ldaxr(v10);
    while (__stlxr(v20 - 1, v10));
    BOOL v21 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v21, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, void *))(*(void *)(v9 + 24) + 4800LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v14) state] == (char *)&dword_0 + 1)
  {
    id v15 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v15)
    {
      do
        unsigned int v22 = __ldaxr(v10);
      while (__stlxr(v22 - 1, v10));
      [(id)DYGetGLGuestAppClient(v15) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, void *))(*(void *)(v9 + 24) + 4800LL))(v3, a2);
    }
  }

  uint64_t result = check_errors(v9);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v9);
  }
  if (!*(_DWORD *)(v9 + 3404)) {
    uint64_t result = (uint64_t)wrapper_cache_program_use((ContextInfo *)v9, a2);
  }
  do
  {
    unsigned int v17 = __ldaxr(v10);
    signed int v18 = v17 - 1;
  }

  while (__stlxr(v18, v10));
  if (gCheckGLErrors) {
    BOOL v19 = v18 < 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

{
  void *v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  check_errors(v9);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, void *))(*(void *)(v9 + 32) + 4800LL))(a1, a2);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v9);
  }
  if (!*(_DWORD *)(v9 + 3404)) {
    return (uint64_t)wrapper_cache_program_use((ContextInfo *)v9, a2);
  }
  return result;
}

uint64_t validate_program_ARB(__GLIContextRec *a1, void *a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, void *))(*(void *)(v9 + 24) + 4808LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, void *))(*(void *)(v9 + 24) + 4808LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t uniform1f(__GLIContextRec *a1, uint64_t a2, float a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v28 = __ldaxr(v12);
    while (__stlxr(v28 - 1, v12));
    unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float))(*(void *)(v11 + 24) + 4816LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v16) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v30 = __ldaxr(v12);
      while (__stlxr(v30 - 1, v12));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float))(*(void *)(v11 + 24) + 4816LL))(v5, a2, a3);
    }
  }

  unsigned int v19 = *(_DWORD *)(v11 + 2068);
  int v31 = a2;
  unsigned int v32 = v19;
  unsigned int v20 = (GPUTools::DYLockUtils *)(*(void *)(v11 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v20, v17);
  unsigned int v21 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v11 + 40) + 104LL),  &v32);
  if (v21)
  {
    uint64_t v23 = v21[3];
    if (*(_BYTE *)(v23 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v23 + 328),  &v31);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v20, v22);
  do
  {
    unsigned int v25 = __ldaxr(v12);
    signed int v26 = v25 - 1;
  }

  while (__stlxr(v26, v12));
  if (gCheckGLErrors) {
    BOOL v27 = v26 < 1;
  }
  else {
    BOOL v27 = 1;
  }
  if (!v27) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

void sub_1AF6CC(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform2f(__GLIContextRec *a1, uint64_t a2, float a3, float a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float, float))(*(void *)(v13 + 24) + 4824LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float, float))(*(void *)(v13 + 24) + 4824LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  unsigned int v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  uint64_t v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1AF8E8(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform3f(__GLIContextRec *a1, uint64_t a2, float a3, float a4, float a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v32 = __ldaxr(v16);
    while (__stlxr(v32 - 1, v16));
    int v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float, float, float))(*(void *)(v15 + 24) + 4832LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v34 = __ldaxr(v16);
      while (__stlxr(v34 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float, float, float))(*(void *)(v15 + 24) + 4832LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  unsigned int v23 = *(_DWORD *)(v15 + 2068);
  int v35 = a2;
  unsigned int v36 = v23;
  unsigned int v24 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v24, v21);
  uint64_t v25 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v36);
  if (v25)
  {
    uint64_t v27 = v25[3];
    if (*(_BYTE *)(v27 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v27 + 328),  &v35);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v24, v26);
  do
  {
    unsigned int v29 = __ldaxr(v16);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v16));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1AFB18(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform4f(__GLIContextRec *a1, uint64_t a2, float a3, float a4, float a5, float a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v34 = __ldaxr(v18);
    while (__stlxr(v34 - 1, v18));
    int v35 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v35, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float, float, float, float))(*(void *)(v17 + 24)
                                                                                             + 4840LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v36 = __ldaxr(v18);
      while (__stlxr(v36 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float, float, float, float))(*(void *)(v17 + 24)
                                                                                               + 4840LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  unsigned int v25 = *(_DWORD *)(v17 + 2068);
  int v37 = a2;
  unsigned int v38 = v25;
  signed int v26 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v26, v23);
  uint64_t v27 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v38);
  if (v27)
  {
    uint64_t v29 = v27[3];
    if (*(_BYTE *)(v29 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v29 + 328),  &v37);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v26, v28);
  do
  {
    unsigned int v31 = __ldaxr(v18);
    signed int v32 = v31 - 1;
  }

  while (__stlxr(v32, v18));
  if (gCheckGLErrors) {
    BOOL v33 = v32 < 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (!v33) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1AFD50(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform1i(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v28 = __ldaxr(v12);
    while (__stlxr(v28 - 1, v12));
    uint64_t v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 4848LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v16) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v30 = __ldaxr(v12);
      while (__stlxr(v30 - 1, v12));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 4848LL))( v5,  a2,  a3);
    }
  }

  unsigned int v19 = *(_DWORD *)(v11 + 2068);
  int v31 = a2;
  unsigned int v32 = v19;
  signed int v20 = (GPUTools::DYLockUtils *)(*(void *)(v11 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v20, v17);
  BOOL v21 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v11 + 40) + 104LL),  &v32);
  if (v21)
  {
    uint64_t v23 = v21[3];
    if (*(_BYTE *)(v23 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v23 + 328),  &v31);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v20, v22);
  do
  {
    unsigned int v25 = __ldaxr(v12);
    signed int v26 = v25 - 1;
  }

  while (__stlxr(v26, v12));
  if (gCheckGLErrors) {
    BOOL v27 = v26 < 1;
  }
  else {
    BOOL v27 = 1;
  }
  if (!v27) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

void sub_1AFF58(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform2i(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 4856LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 4856LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  uint64_t v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B0174(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform3i(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v32 = __ldaxr(v16);
    while (__stlxr(v32 - 1, v16));
    int v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 4864LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v34 = __ldaxr(v16);
      while (__stlxr(v34 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 4864LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  unsigned int v23 = *(_DWORD *)(v15 + 2068);
  int v35 = a2;
  unsigned int v36 = v23;
  id v24 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v24, v21);
  uint64_t v25 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v36);
  if (v25)
  {
    uint64_t v27 = v25[3];
    if (*(_BYTE *)(v27 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v27 + 328),  &v35);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v24, v26);
  do
  {
    unsigned int v29 = __ldaxr(v16);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v16));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1B0398(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform4i(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v34 = __ldaxr(v18);
    while (__stlxr(v34 - 1, v18));
    int v35 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v35, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 4872LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v36 = __ldaxr(v18);
      while (__stlxr(v36 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 4872LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  unsigned int v25 = *(_DWORD *)(v17 + 2068);
  int v37 = a2;
  unsigned int v38 = v25;
  signed int v26 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v26, v23);
  uint64_t v27 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v38);
  if (v27)
  {
    uint64_t v29 = v27[3];
    if (*(_BYTE *)(v29 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v29 + 328),  &v37);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v26, v28);
  do
  {
    unsigned int v31 = __ldaxr(v18);
    signed int v32 = v31 - 1;
  }

  while (__stlxr(v32, v18));
  if (gCheckGLErrors) {
    BOOL v33 = v32 < 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (!v33) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1B05D0(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform1fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24) + 4880LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24)
                                                                                           + 4880LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  unsigned int v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B07EC(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform2fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24) + 4888LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24)
                                                                                           + 4888LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  unsigned int v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B0A08(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform3fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24) + 4896LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24)
                                                                                           + 4896LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  unsigned int v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B0C24(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform4fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24) + 4904LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24)
                                                                                           + 4904LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  unsigned int v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B0E40(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform1iv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 4912LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 4912LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  unsigned int v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B105C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform2iv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 4920LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 4920LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  unsigned int v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B1278(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform3iv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 4928LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 4928LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  unsigned int v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B1494(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform4iv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 4936LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 4936LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  unsigned int v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B16B0(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform_matrix2fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v32 = __ldaxr(v16);
    while (__stlxr(v32 - 1, v16));
    int v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 4944LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v34 = __ldaxr(v16);
      while (__stlxr(v34 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 4944LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  unsigned int v23 = *(_DWORD *)(v15 + 2068);
  int v35 = a2;
  unsigned int v36 = v23;
  id v24 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v24, v21);
  uint64_t v25 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v36);
  if (v25)
  {
    uint64_t v27 = v25[3];
    if (*(_BYTE *)(v27 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v27 + 328),  &v35);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v24, v26);
  do
  {
    unsigned int v29 = __ldaxr(v16);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v16));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1B18D4(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform_matrix3fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v32 = __ldaxr(v16);
    while (__stlxr(v32 - 1, v16));
    int v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 4952LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v34 = __ldaxr(v16);
      while (__stlxr(v34 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 4952LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  unsigned int v23 = *(_DWORD *)(v15 + 2068);
  int v35 = a2;
  unsigned int v36 = v23;
  id v24 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v24, v21);
  uint64_t v25 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v36);
  if (v25)
  {
    uint64_t v27 = v25[3];
    if (*(_BYTE *)(v27 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v27 + 328),  &v35);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v24, v26);
  do
  {
    unsigned int v29 = __ldaxr(v16);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v16));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1B1AF8(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform_matrix4fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v32 = __ldaxr(v16);
    while (__stlxr(v32 - 1, v16));
    int v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 4960LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v34 = __ldaxr(v16);
      while (__stlxr(v34 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 4960LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  unsigned int v23 = *(_DWORD *)(v15 + 2068);
  int v35 = a2;
  unsigned int v36 = v23;
  id v24 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v24, v21);
  uint64_t v25 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v36);
  if (v25)
  {
    uint64_t v27 = v25[3];
    if (*(_BYTE *)(v27 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v27 + 328),  &v35);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v24, v26);
  do
  {
    unsigned int v29 = __ldaxr(v16);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v16));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1B1D1C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t get_active_uniform_ARB( __GLIContextRec *a1, void *a2, uint64_t a3, uint64_t a4, int *a5, int *a6, unsigned int *a7, char *a8)
{
  unint64_t v14 = a1;
  uint64_t v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      BOOL v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    uint64_t v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  unsigned int v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v20);
  }
  id v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v25 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v21);
    while (__stlxr(v30 - 1, v21));
    BOOL v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, void *, uint64_t, uint64_t, int *, int *, unsigned int *, char *))(*(void *)(v20 + 24) + 5008LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
  }

  *(_BYTE *)(v20 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v25) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, void *, uint64_t, uint64_t, int *, int *, unsigned int *, char *))(*(void *)(v20 + 24) + 5008LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v21);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v21));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v20);
  }
  return result;
}

uint64_t get_uniformfv_ARB(__GLIContextRec *a1, void *a2, uint64_t a3, float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v14);
    while (__stlxr(v29 - 1, v14));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, void *, uint64_t, float *))(*(void *)(v13 + 24) + 5016LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v31 = __ldaxr(v14);
      while (__stlxr(v31 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, void *, uint64_t, float *))(*(void *)(v13 + 24) + 5016LL))( v7,  a2,  a3,  a4);
    }
  }

  int v32 = a3;
  unsigned int v33 = a2;
  unsigned int v21 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v21, v19);
  unsigned int v22 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v33);
  if (v22)
  {
    uint64_t v24 = v22[3];
    if (*(_BYTE *)(v24 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v24 + 328),  &v32);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v21, v23);
  do
  {
    unsigned int v26 = __ldaxr(v14);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v14));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B22BC(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t get_uniformiv_ARB(__GLIContextRec *a1, void *a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v14);
    while (__stlxr(v29 - 1, v14));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, void *, uint64_t, int *))(*(void *)(v13 + 24) + 5024LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v31 = __ldaxr(v14);
      while (__stlxr(v31 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, void *, uint64_t, int *))(*(void *)(v13 + 24) + 5024LL))( v7,  a2,  a3,  a4);
    }
  }

  int v32 = a3;
  unsigned int v33 = a2;
  unsigned int v21 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v21, v19);
  unsigned int v22 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v33);
  if (v22)
  {
    uint64_t v24 = v22[3];
    if (*(_BYTE *)(v24 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v24 + 328),  &v32);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v21, v23);
  do
  {
    unsigned int v26 = __ldaxr(v14);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v14));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B24D4(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t get_shader_source_ARB(__GLIContextRec *a1, void *a2, uint64_t a3, int *a4, char *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    unsigned int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, void *, uint64_t, int *, char *))(*(void *)(v15 + 24) + 5032LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, void *, uint64_t, int *, char *))(*(void *)(v15 + 24)
                                                                                          + 5032LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t bind_attrib_location_ARB(__GLIContextRec *a1, void *a2, uint64_t a3, const char *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, void *, uint64_t, const char *))(*(void *)(v13 + 24) + 5040LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, void *, uint64_t, const char *))(*(void *)(v13 + 24) + 5040LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_active_attrib_ARB( __GLIContextRec *a1, void *a2, uint64_t a3, uint64_t a4, int *a5, int *a6, unsigned int *a7, char *a8)
{
  unint64_t v14 = a1;
  unsigned int v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      BOOL v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    unsigned int v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  signed int v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v20);
  }
  id v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v25 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v21);
    while (__stlxr(v30 - 1, v21));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, void *, uint64_t, uint64_t, int *, int *, unsigned int *, char *))(*(void *)(v20 + 24) + 5048LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
  }

  *(_BYTE *)(v20 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v25) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, void *, uint64_t, uint64_t, int *, int *, unsigned int *, char *))(*(void *)(v20 + 24) + 5048LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v21);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v21));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v20);
  }
  return result;
}

uint64_t gen_queries(__GLIContextRec *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 5072LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 5072LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t delete_queries(__GLIContextRec *a1, uint64_t a2, const unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 5080LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 5080LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t begin_query(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 5096LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 5096LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t end_query(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    BOOL v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 5104LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 5104LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t get_queryiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5112LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5112LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_query_objectiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5120LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5120LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_query_objectuiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, unsigned int *))(*(void *)(v13 + 24)
                                                                                          + 5128LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, unsigned int *))(*(void *)(v13 + 24)
                                                                                            + 5128LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t bind_buffer(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 5136LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 5136LL))( v5,  a2,  a3);
    }
  }

  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v11);
  }
  if (!*(_DWORD *)(v11 + 3404)) {
    uint64_t result = (uint64_t)wrapper_cache_buffer_binding((_DWORD *)v11, a2, a3);
  }
  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

{
  int v3;
  int v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  void *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v3 = a3;
  unint64_t v4 = a2;
  uint64_t v5 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v5) {
    goto LABEL_12;
  }
  unint64_t v6 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    uint64_t v7 = v5[4];
    unint64_t v8 = v7 >= (unint64_t)a1;
    else {
      BOOL v9 = v5 + 1;
    }
    if (v8) {
      unint64_t v6 = (uint64_t)v5;
    }
    uint64_t v5 = (void *)*v9;
  }

  while (*v9);
  if (v6 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v6 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    unint64_t v6 = ContextInfo::activeCtxInfoMap + 8;
  unint64_t v10 = *(void *)(v6 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v10 + 32) + 5136LL))(a1, a2, a3);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v10);
  }
  if (!*(_DWORD *)(v10 + 3404)) {
    return (uint64_t)wrapper_cache_buffer_binding((_DWORD *)v10, v4, v3);
  }
  return result;
}

uint64_t gen_buffers(__GLIContextRec *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 5152LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 5152LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t buffer_data(__GLIContextRec *a1, volatile int *a2, uint64_t a3, const void *a4, uint64_t a5)
{
  BOOL v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  id v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    unsigned int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, volatile int *, uint64_t, const void *, uint64_t))(*(void *)(v15 + 24) + 5168LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, volatile int *, uint64_t, const void *, uint64_t))(*(void *)(v15 + 24) + 5168LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v15);
  }
  if (!*(_DWORD *)(v15 + 3404)) {
    uint64_t result = wrapper_cache_buffer_target(v15, a2);
  }
  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t buffer_sub_data(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  BOOL v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  id v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    unsigned int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24)
                                                                                                 + 5176LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24) + 5176LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t get_buffer_parameteriv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5208LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5208LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_buffer_pointerv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, void **a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, void **))(*(void *)(v13 + 24) + 5216LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, void **))(*(void *)(v13 + 24) + 5216LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t draw_buffers(__GLIContextRec *a1, uint64_t a2, const unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 5232LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 5232LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t get_shaderiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5256LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5256LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_programiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5264LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5264LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_shader_info_log(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4, char *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    unsigned int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *, char *))(*(void *)(v15 + 24) + 5272LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *, char *))(*(void *)(v15 + 24)
                                                                                           + 5272LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t get_program_info_log(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4, char *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    unsigned int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *, char *))(*(void *)(v15 + 24) + 5280LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *, char *))(*(void *)(v15 + 24)
                                                                                           + 5280LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t stencil_func_separate(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    unsigned int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 5288LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 5288LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t stencil_mask_separate(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 5296LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 5296LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t bind_renderbuffer(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 5328LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 5328LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t delete_renderbuffers(__GLIContextRec *a1, uint64_t a2, const unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 5336LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 5336LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t gen_renderbuffers(__GLIContextRec *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 5344LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 5344LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t renderbuffer_storage(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  id v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    unsigned int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 5352LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 5352LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t get_renderbuffer_parameteriv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5360LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5360LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t bind_framebuffer(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 5376LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 5376LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t delete_framebuffers(__GLIContextRec *a1, uint64_t a2, const unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 5384LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 5384LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t gen_framebuffers(__GLIContextRec *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 5392LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 5392LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t framebuffer_texture2D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      id v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  unsigned int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    signed int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 5416LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 5416LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t framebuffer_renderbuffer(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  id v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 5432LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 5432LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t get_framebuffer_attachment_parameteriv( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  BOOL v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  id v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, int *))(*(void *)(v15 + 24)
                                                                                          + 5440LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, int *))(*(void *)(v15 + 24)
                                                                                            + 5440LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t generate_mipmap(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    id v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 5448LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 5448LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t program_parameteri(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v24 = __ldaxr(v14);
    while (__stlxr(v24 - 1, v14));
    unsigned int v25 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v25, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 5512LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v19 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v19)
    {
      do
        unsigned int v26 = __ldaxr(v14);
      while (__stlxr(v26 - 1, v14));
      [(id)DYGetGLGuestAppClient(v19) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 5512LL))( v7,  a2,  a3,  a4);
    }
  }

  uint64_t result = check_errors(v13);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v13);
  }
  if (!*(_DWORD *)(v13 + 3404)) {
    uint64_t result = wrapper_cache_program_parameter((ContextInfo *)v13, a2, a3, a4);
  }
  do
  {
    unsigned int v21 = __ldaxr(v14);
    signed int v22 = v21 - 1;
  }

  while (__stlxr(v22, v14));
  if (gCheckGLErrors) {
    BOOL v23 = v22 < 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  check_errors(v13);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 32) + 5512LL))( a1,  a2,  a3,  a4);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v13);
  }
  if (!*(_DWORD *)(v13 + 3404)) {
    return wrapper_cache_program_parameter((ContextInfo *)v13, a2, a3, a4);
  }
  return result;
}

uint64_t framebuffer_texture_layer( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v11 = a1;
  signed int v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    signed int v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  id v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    signed int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 5528LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 5528LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t bind_buffer_range(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v11 = a1;
  signed int v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    signed int v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  id v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    signed int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 5544LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 5544LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v17);
  }
  if (!*(_DWORD *)(v17 + 3404)) {
    uint64_t result = (uint64_t)wrapper_cache_buffer_binding((_DWORD *)v17, a2, a4);
  }
  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t bind_buffer_base(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 5560LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 5560LL))( v7,  a2,  a3,  a4);
    }
  }

  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v13);
  }
  if (!*(_DWORD *)(v13 + 3404)) {
    uint64_t result = (uint64_t)wrapper_cache_buffer_binding((_DWORD *)v13, a2, a4);
  }
  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

{
  int v4;
  int v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  void *v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v4 = a4;
  uint64_t v5 = a2;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  BOOL v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    uint64_t v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      BOOL v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    BOOL v7 = ContextInfo::activeCtxInfoMap + 8;
  BOOL v11 = *(void *)(v7 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 32) + 5560LL))( a1,  a2,  a3,  a4);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v11);
  }
  if (!*(_DWORD *)(v11 + 3404)) {
    return (uint64_t)wrapper_cache_buffer_binding((_DWORD *)v11, v5, v4);
  }
  return result;
}

uint64_t begin_transform_feedback(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 5568LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 5568LL))(v3, a2);
    }
  }

  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v9);
  }
  if (!*(_DWORD *)(v9 + 3404)) {
    uint64_t result = (uint64_t)wrapper_cache_active_transform_feedback((ContextInfo *)v9);
  }
  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t end_transform_feedback(__GLIContextRec *a1)
{
  unsigned int v1 = a1;
  int v2 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v4 = v2[4];
    BOOL v5 = v4 >= (unint64_t)a1;
    else {
      unint64_t v6 = v2 + 1;
    }
    if (v5) {
      uint64_t v3 = (uint64_t)v2;
    }
    int v2 = (void *)*v6;
  }

  while (*v6);
  if (v3 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v3 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = (unsigned int *)(v7 + 4640);
  do
  {
    unsigned int v9 = __ldaxr(v8);
    signed int v10 = v9 + 1;
  }

  while (__stlxr(v10, v8));
  if (gCheckGLErrors) {
    BOOL v11 = v10 <= 1;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v7);
  }
  id v12 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v12 >= 1)
  {
    do
      unsigned int v17 = __ldaxr(v8);
    while (__stlxr(v17 - 1, v8));
    BOOL v18 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v12) graphicsLockWaitQueue];
    dispatch_sync_f(v18, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 5576LL))(v1);
  }

  *(_BYTE *)(v7 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v12) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v19 = __ldaxr(v8);
      while (__stlxr(v19 - 1, v8));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 5576LL))(v1);
    }
  }

  do
  {
    unsigned int v14 = __ldaxr(v8);
    signed int v15 = v14 - 1;
  }

  while (__stlxr(v15, v8));
  if (gCheckGLErrors) {
    BOOL v16 = v15 < 1;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16) {
    return handle_opengl_thread_conflict((const void **)v7);
  }
  return result;
}

uint64_t transform_feedback_varyings( __GLIContextRec *a1, uint64_t a2, uint64_t a3, const char *const *a4, uint64_t a5)
{
  unsigned int v9 = a1;
  signed int v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unsigned int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    signed int v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  BOOL v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v26 = __ldaxr(v16);
    while (__stlxr(v26 - 1, v16));
    unsigned int v27 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v27, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const char *const *, uint64_t))(*(void *)(v15 + 24) + 5584LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v21 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v21)
    {
      do
        unsigned int v28 = __ldaxr(v16);
      while (__stlxr(v28 - 1, v16));
      [(id)DYGetGLGuestAppClient(v21) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const char *const *, uint64_t))(*(void *)(v15 + 24) + 5584LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  uint64_t result = wrapper_cache_program_xfb_varyings((ContextInfo *)v15, a2);
  do
  {
    unsigned int v23 = __ldaxr(v16);
    signed int v24 = v23 - 1;
  }

  while (__stlxr(v24, v16));
  if (gCheckGLErrors) {
    BOOL v25 = v24 < 1;
  }
  else {
    BOOL v25 = 1;
  }
  if (!v25) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t get_transform_feedback_varying( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, int *a6, unsigned int *a7, char *a8)
{
  unsigned int v14 = a1;
  uint64_t v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      BOOL v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    uint64_t v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  id v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v20);
  }
  id v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v25 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v21);
    while (__stlxr(v30 - 1, v21));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, int *, int *, unsigned int *, char *))(*(void *)(v20 + 24) + 5592LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
  }

  *(_BYTE *)(v20 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v25) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, int *, int *, unsigned int *, char *))(*(void *)(v20 + 24) + 5592LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v21);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v21));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v20);
  }
  return result;
}

uint64_t get_integer_indexedv_EXT(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unsigned int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5600LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5600LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t vertex_attribI_pointer( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const void *a6)
{
  BOOL v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  id v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    signed int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v17 + 24) + 5848LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v17 + 24) + 5848LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t get_vertex_attribIiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5856LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 5856LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_vertex_attribIuiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, unsigned int *))(*(void *)(v13 + 24)
                                                                                          + 5864LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, unsigned int *))(*(void *)(v13 + 24)
                                                                                            + 5864LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t uniform1ui(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  BOOL v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v28 = __ldaxr(v12);
    while (__stlxr(v28 - 1, v12));
    unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 5872LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v16) state] == (char *)&dword_0 + 1)
  {
    id v18 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v18)
    {
      do
        unsigned int v30 = __ldaxr(v12);
      while (__stlxr(v30 - 1, v12));
      [(id)DYGetGLGuestAppClient(v18) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 5872LL))( v5,  a2,  a3);
    }
  }

  unsigned int v19 = *(_DWORD *)(v11 + 2068);
  int v31 = a2;
  unsigned int v32 = v19;
  unsigned int v20 = (GPUTools::DYLockUtils *)(*(void *)(v11 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v20, v17);
  signed int v21 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v11 + 40) + 104LL),  &v32);
  if (v21)
  {
    uint64_t v23 = v21[3];
    if (*(_BYTE *)(v23 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v23 + 328),  &v31);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v20, v22);
  do
  {
    unsigned int v25 = __ldaxr(v12);
    signed int v26 = v25 - 1;
  }

  while (__stlxr(v26, v12));
  if (gCheckGLErrors) {
    BOOL v27 = v26 < 1;
  }
  else {
    BOOL v27 = 1;
  }
  if (!v27) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

void sub_1B905C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform2ui(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 5880LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 5880LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  BOOL v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  uint64_t v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B9278(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform3ui(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v32 = __ldaxr(v16);
    while (__stlxr(v32 - 1, v16));
    int v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 5888LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v34 = __ldaxr(v16);
      while (__stlxr(v34 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 5888LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  unsigned int v23 = *(_DWORD *)(v15 + 2068);
  int v35 = a2;
  unsigned int v36 = v23;
  unsigned int v24 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v24, v21);
  uint64_t v25 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v36);
  if (v25)
  {
    uint64_t v27 = v25[3];
    if (*(_BYTE *)(v27 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v27 + 328),  &v35);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v24, v26);
  do
  {
    unsigned int v29 = __ldaxr(v16);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v16));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1B949C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform4ui(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v34 = __ldaxr(v18);
    while (__stlxr(v34 - 1, v18));
    int v35 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v35, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 5896LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v36 = __ldaxr(v18);
      while (__stlxr(v36 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 5896LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  unsigned int v25 = *(_DWORD *)(v17 + 2068);
  int v37 = a2;
  unsigned int v38 = v25;
  signed int v26 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v26, v23);
  uint64_t v27 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v38);
  if (v27)
  {
    uint64_t v29 = v27[3];
    if (*(_BYTE *)(v29 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v29 + 328),  &v37);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v26, v28);
  do
  {
    unsigned int v31 = __ldaxr(v18);
    signed int v32 = v31 - 1;
  }

  while (__stlxr(v32, v18));
  if (gCheckGLErrors) {
    BOOL v33 = v32 < 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (!v33) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1B96D4(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform1uiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const unsigned int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v13 + 24)
                                                                                                + 5904LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v13 + 24)
                                                                                                  + 5904LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  unsigned int v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B98F0(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform2uiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const unsigned int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v13 + 24)
                                                                                                + 5912LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v13 + 24)
                                                                                                  + 5912LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  unsigned int v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B9B0C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform3uiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const unsigned int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v13 + 24)
                                                                                                + 5920LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v13 + 24)
                                                                                                  + 5920LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  unsigned int v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B9D28(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform4uiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const unsigned int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v14);
    while (__stlxr(v30 - 1, v14));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v13 + 24)
                                                                                                + 5928LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v32 = __ldaxr(v14);
      while (__stlxr(v32 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v13 + 24)
                                                                                                  + 5928LL))( v7,  a2,  a3,  a4);
    }
  }

  unsigned int v21 = *(_DWORD *)(v13 + 2068);
  int v33 = a2;
  unsigned int v34 = v21;
  id v22 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v22, v19);
  unsigned int v23 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v34);
  if (v23)
  {
    uint64_t v25 = v23[3];
    if (*(_BYTE *)(v25 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v25 + 328),  &v33);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v22, v24);
  do
  {
    unsigned int v27 = __ldaxr(v14);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v14));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1B9F44(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t get_uniformuiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v14);
    while (__stlxr(v29 - 1, v14));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, unsigned int *))(*(void *)(v13 + 24)
                                                                                          + 5936LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v31 = __ldaxr(v14);
      while (__stlxr(v31 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, unsigned int *))(*(void *)(v13 + 24)
                                                                                            + 5936LL))( v7,  a2,  a3,  a4);
    }
  }

  int v32 = a3;
  unsigned int v33 = a2;
  unsigned int v21 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v21, v19);
  id v22 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v33);
  if (v22)
  {
    uint64_t v24 = v22[3];
    if (*(_BYTE *)(v24 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v24 + 328),  &v32);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v21, v23);
  do
  {
    unsigned int v26 = __ldaxr(v14);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v14));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1BA15C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform_matrix2x3fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v32 = __ldaxr(v16);
    while (__stlxr(v32 - 1, v16));
    unsigned int v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 5992LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v34 = __ldaxr(v16);
      while (__stlxr(v34 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 5992LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  unsigned int v23 = *(_DWORD *)(v15 + 2068);
  int v35 = a2;
  unsigned int v36 = v23;
  uint64_t v24 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v24, v21);
  uint64_t v25 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v36);
  if (v25)
  {
    uint64_t v27 = v25[3];
    if (*(_BYTE *)(v27 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v27 + 328),  &v35);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v24, v26);
  do
  {
    unsigned int v29 = __ldaxr(v16);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v16));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1BA514(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform_matrix3x2fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v32 = __ldaxr(v16);
    while (__stlxr(v32 - 1, v16));
    unsigned int v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 6000LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v34 = __ldaxr(v16);
      while (__stlxr(v34 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 6000LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  unsigned int v23 = *(_DWORD *)(v15 + 2068);
  int v35 = a2;
  unsigned int v36 = v23;
  uint64_t v24 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v24, v21);
  uint64_t v25 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v36);
  if (v25)
  {
    uint64_t v27 = v25[3];
    if (*(_BYTE *)(v27 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v27 + 328),  &v35);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v24, v26);
  do
  {
    unsigned int v29 = __ldaxr(v16);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v16));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1BA738(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform_matrix2x4fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v32 = __ldaxr(v16);
    while (__stlxr(v32 - 1, v16));
    unsigned int v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 6008LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v34 = __ldaxr(v16);
      while (__stlxr(v34 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 6008LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  unsigned int v23 = *(_DWORD *)(v15 + 2068);
  int v35 = a2;
  unsigned int v36 = v23;
  uint64_t v24 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v24, v21);
  uint64_t v25 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v36);
  if (v25)
  {
    uint64_t v27 = v25[3];
    if (*(_BYTE *)(v27 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v27 + 328),  &v35);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v24, v26);
  do
  {
    unsigned int v29 = __ldaxr(v16);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v16));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1BA95C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform_matrix4x2fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v32 = __ldaxr(v16);
    while (__stlxr(v32 - 1, v16));
    unsigned int v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 6016LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v34 = __ldaxr(v16);
      while (__stlxr(v34 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 6016LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  unsigned int v23 = *(_DWORD *)(v15 + 2068);
  int v35 = a2;
  unsigned int v36 = v23;
  uint64_t v24 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v24, v21);
  uint64_t v25 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v36);
  if (v25)
  {
    uint64_t v27 = v25[3];
    if (*(_BYTE *)(v27 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v27 + 328),  &v35);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v24, v26);
  do
  {
    unsigned int v29 = __ldaxr(v16);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v16));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1BAB80(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform_matrix3x4fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v32 = __ldaxr(v16);
    while (__stlxr(v32 - 1, v16));
    unsigned int v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 6024LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v34 = __ldaxr(v16);
      while (__stlxr(v34 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 6024LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  unsigned int v23 = *(_DWORD *)(v15 + 2068);
  int v35 = a2;
  unsigned int v36 = v23;
  uint64_t v24 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v24, v21);
  uint64_t v25 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v36);
  if (v25)
  {
    uint64_t v27 = v25[3];
    if (*(_BYTE *)(v27 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v27 + 328),  &v35);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v24, v26);
  do
  {
    unsigned int v29 = __ldaxr(v16);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v16));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1BADA4(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t uniform_matrix4x3fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v32 = __ldaxr(v16);
    while (__stlxr(v32 - 1, v16));
    unsigned int v33 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v33, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 6032LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v34 = __ldaxr(v16);
      while (__stlxr(v34 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 6032LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  unsigned int v23 = *(_DWORD *)(v15 + 2068);
  int v35 = a2;
  unsigned int v36 = v23;
  uint64_t v24 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v24, v21);
  uint64_t v25 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v36);
  if (v25)
  {
    uint64_t v27 = v25[3];
    if (*(_BYTE *)(v27 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v27 + 328),  &v35);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v24, v26);
  do
  {
    unsigned int v29 = __ldaxr(v16);
    signed int v30 = v29 - 1;
  }

  while (__stlxr(v30, v16));
  if (gCheckGLErrors) {
    BOOL v31 = v30 < 1;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1BAFC8(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t blit_framebuffer( __GLIContextRec *a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9, unsigned int a10)
{
  unint64_t v12 = a1;
  BOOL v13 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v13) {
    goto LABEL_12;
  }
  uint64_t v14 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v15 = v13[4];
    BOOL v16 = v15 >= (unint64_t)a1;
    else {
      unsigned int v17 = v13 + 1;
    }
    if (v16) {
      uint64_t v14 = (uint64_t)v13;
    }
    BOOL v13 = (void *)*v17;
  }

  while (*v17);
  if (v14 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v14 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v14 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v18 = *(void *)(v14 + 40);
  BOOL v19 = (unsigned int *)(v18 + 4640);
  do
  {
    unsigned int v20 = __ldaxr(v19);
    signed int v21 = v20 + 1;
  }

  while (__stlxr(v21, v19));
  if (gCheckGLErrors) {
    BOOL v22 = v21 <= 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v18);
  }
  id v23 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v23 >= 1)
  {
    do
      unsigned int v28 = __ldaxr(v19);
    while (__stlxr(v28 - 1, v19));
    unsigned int v29 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v23) graphicsLockWaitQueue];
    dispatch_sync_f(v29, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, void, void, void, void, void, uint64_t))(*(void *)(v18 + 24) + 6040LL))( v12,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
  }

  *(_WORD *)(v18 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 257;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v23) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v30 = __ldaxr(v19);
      while (__stlxr(v30 - 1, v19));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, void, void, void, void, void, uint64_t))(*(void *)(v18 + 24) + 6040LL))( v12,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
    }
  }

  do
  {
    unsigned int v25 = __ldaxr(v19);
    signed int v26 = v25 - 1;
  }

  while (__stlxr(v26, v19));
  if (gCheckGLErrors) {
    BOOL v27 = v26 < 1;
  }
  else {
    BOOL v27 = 1;
  }
  if (!v27) {
    return handle_opengl_thread_conflict((const void **)v18);
  }
  return result;
}

uint64_t renderbuffer_storage_multisample( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      BOOL v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  uint64_t v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    unsigned int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 6048LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 6048LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t get_attached_shaders(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4, unsigned int *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  BOOL v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *, unsigned int *))(*(void *)(v15 + 24)
                                                                                                 + 6072LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *, unsigned int *))(*(void *)(v15 + 24) + 6072LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t vertex_attrib_divisor(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  BOOL v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 6088LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 6088LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

char *draw_arrays_instanced(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  id v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24) + 6096LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_WORD *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 257;
  uint64_t result = (char *)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == (_BYTE *)&dword_0 + 1)
  {
    uint64_t result = (char *)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24) + 6096LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  if (!*(_DWORD *)(v15 + 3404)) {
    uint64_t result = (char *)GLDrawCommandStatistics::update(v15 + 32LL * a2 + 4408, a2, a4, a5);
  }
  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return (char *)handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

char *draw_elements_instanced( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5, uint64_t a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      id v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    unsigned int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *, uint64_t))(*(void *)(v17 + 24) + 6104LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_WORD *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 257;
  uint64_t result = (char *)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == (_BYTE *)&dword_0 + 1)
  {
    uint64_t result = (char *)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *, uint64_t))(*(void *)(v17 + 24) + 6104LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  if (!*(_DWORD *)(v17 + 3404)) {
    uint64_t result = (char *)GLDrawCommandStatistics::update(v17 + 32LL * a2 + 4184, a2, a3, a6);
  }
  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return (char *)handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t gen_vertex_arrays(__GLIContextRec *a1, uint64_t a2, unsigned int *a3)
{
  BOOL v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    id v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 6160LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 6160LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t point_size_pointer(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const void *))(*(void *)(v13 + 24) + 6176LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const void *))(*(void *)(v13 + 24)
                                                                                          + 6176LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t clear_bufferiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 6192LL))( v7,  a2,  a3,  a4);
  }

  *(_WORD *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 257;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 6192LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t clear_bufferuiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const unsigned int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v13 + 24)
                                                                                                + 6200LL))( v7,  a2,  a3,  a4);
  }

  *(_WORD *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 257;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v13 + 24)
                                                                                                  + 6200LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t clear_bufferfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24) + 6208LL))( v7,  a2,  a3,  a4);
  }

  *(_WORD *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 257;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24)
                                                                                           + 6208LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t clear_bufferfi(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float a4, uint64_t a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, float))(*(void *)(v15 + 24)
                                                                                          + 6216LL))( v9,  a2,  a3,  a5,  a4);
  }

  *(_WORD *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 257;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, float))(*(void *)(v15 + 24)
                                                                                            + 6216LL))( v9,  a2,  a3,  a5,  a4);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t delete_sync(__GLIContextRec *a1, __GLsync *a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    id v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, __GLsync *))(*(void *)(v9 + 24) + 6248LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, __GLsync *))(*(void *)(v9 + 24) + 6248LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t wait_sync(__GLIContextRec *a1, __GLsync *a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, __GLsync *, uint64_t, uint64_t))(*(void *)(v13 + 24) + 6264LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, __GLsync *, uint64_t, uint64_t))(*(void *)(v13 + 24) + 6264LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_integer64v(__GLIContextRec *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t *))(*(void *)(v11 + 24) + 6272LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t *))(*(void *)(v11 + 24) + 6272LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t get_synciv(__GLIContextRec *a1, __GLsync *a2, uint64_t a3, uint64_t a4, int *a5, int *a6)
{
  uint64_t v11 = a1;
  signed int v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      id v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    signed int v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  unsigned int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    unsigned int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, __GLsync *, uint64_t, uint64_t, int *, int *))(*(void *)(v17 + 24) + 6280LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, __GLsync *, uint64_t, uint64_t, int *, int *))(*(void *)(v17 + 24) + 6280LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t copy_buffer_sub_data( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1;
  signed int v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      id v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    signed int v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  unsigned int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    unsigned int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 6328LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 6328LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t flush_mapped_buffer_range(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 6368LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 6368LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_integer64i_v(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t *))(*(void *)(v13 + 24) + 6384LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t *))(*(void *)(v13 + 24) + 6384LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_buffer_parameteri64v(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t *))(*(void *)(v13 + 24) + 6392LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t *))(*(void *)(v13 + 24) + 6392LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t gen_samplers(__GLIContextRec *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 6400LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 6400LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t delete_samplers(__GLIContextRec *a1, uint64_t a2, const unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 6408LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 6408LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t bind_sampler(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 6424LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 6424LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t sampler_parameteri(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 6432LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 6432LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t sampler_parameteriv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 6440LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 6440LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t sampler_parameterf(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float))(*(void *)(v13 + 24) + 6448LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float))(*(void *)(v13 + 24) + 6448LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t sampler_parameterfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24) + 6456LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const float *))(*(void *)(v13 + 24)
                                                                                           + 6456LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_sampler_parameteriv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 6480LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 6480LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_sampler_parameterfv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 6488LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float *))(*(void *)(v13 + 24) + 6488LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

char *label_object_EXT(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const char *))(*(void *)(v15 + 24) + 6512LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (char *)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == (_BYTE *)&dword_0 + 1)
  {
    uint64_t result = (char *)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)result)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (char *)(*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const char *))(*(void *)(v15 + 24) + 6512LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  if ((_DWORD)a2 == 35656) {
    uint64_t result = (char *)wrapper_cache_shader_label((ContextInfo *)v15, a3);
  }
  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return (char *)handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t get_object_label_EXT(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, char *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    unsigned int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, int *, char *))(*(void *)(v17 + 24)
                                                                                                  + 6520LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, int *, char *))(*(void *)(v17 + 24) + 6520LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

char *insert_event_marker_EXT(__GLIContextRec *a1, unsigned int *a2, char *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    id v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (char *)(*(uint64_t (**)(__GLIContextRec *, unsigned int *, char *))(*(void *)(v11 + 24) + 6528LL))( v5,  a2,  a3);
  }

  else
  {
    uint64_t result = wrapper_handle_marker_event((ContextInfo *)v11, a2, a3);
    do
    {
      unsigned int v18 = __ldaxr(v12);
      signed int v19 = v18 - 1;
    }

    while (__stlxr(v19, v12));
    if (gCheckGLErrors) {
      BOOL v20 = v19 < 1;
    }
    else {
      BOOL v20 = 1;
    }
    if (!v20) {
      return (char *)handle_opengl_thread_conflict((const void **)v11);
    }
  }

  return result;
}

uint64_t use_program_stages(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v24 = __ldaxr(v14);
    while (__stlxr(v24 - 1, v14));
    signed int v25 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v25, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 6552LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v19 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v19)
    {
      do
        unsigned int v26 = __ldaxr(v14);
      while (__stlxr(v26 - 1, v14));
      [(id)DYGetGLGuestAppClient(v19) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 6552LL))( v7,  a2,  a3,  a4);
    }
  }

  query_pipeline_programs(v13, a2, v27);
  uint64_t result = check_errors(v13);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v13);
  }
  if ((_DWORD)a3 && !*(_DWORD *)(v13 + 3404)) {
    uint64_t result = (uint64_t)wrapper_cache_pipeline_use_stages((void *)v13, a2, a3, a4, v27, 0);
  }
  do
  {
    unsigned int v21 = __ldaxr(v14);
    signed int v22 = v21 - 1;
  }

  while (__stlxr(v22, v14));
  if (gCheckGLErrors) {
    BOOL v23 = v22 < 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

{
  void *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  uint64_t result;
  unsigned int v15[6];
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  query_pipeline_programs(v13, a2, v15);
  check_errors(v13);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 32) + 6552LL))( a1,  a2,  a3,  a4);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v13);
  }
  if ((_DWORD)a3)
  {
    if (!*(_DWORD *)(v13 + 3404)) {
      return (uint64_t)wrapper_cache_pipeline_use_stages((void *)v13, a2, a3, a4, v15, 0);
    }
  }

  return result;
}

uint64_t active_shader_program(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v22 = __ldaxr(v12);
    while (__stlxr(v22 - 1, v12));
    BOOL v23 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v23, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 6560LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v16) state] == (char *)&dword_0 + 1)
  {
    id v17 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v17)
    {
      do
        unsigned int v24 = __ldaxr(v12);
      while (__stlxr(v24 - 1, v12));
      [(id)DYGetGLGuestAppClient(v17) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 6560LL))( v5,  a2,  a3);
    }
  }

  query_pipeline_programs(v11, a2, v25);
  uint64_t result = check_errors(v11);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v11);
  }
  if (!*(_DWORD *)(v11 + 3404)) {
    uint64_t result = (uint64_t)wrapper_cache_pipeline_active_shader_program((ContextInfo *)v11, a2, a3, v25);
  }
  do
  {
    unsigned int v19 = __ldaxr(v12);
    signed int v20 = v19 - 1;
  }

  while (__stlxr(v20, v12));
  if (gCheckGLErrors) {
    BOOL v21 = v20 < 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

{
  void *v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  void *v10;
  uint64_t v11;
  uint64_t result;
  void v13[3];
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  query_pipeline_programs(v11, a2, v13);
  check_errors(v11);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 32) + 6560LL))(a1, a2, a3);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v11);
  }
  if (!*(_DWORD *)(v11 + 3404)) {
    return (uint64_t)wrapper_cache_pipeline_active_shader_program((ContextInfo *)v11, a2, a3, v13);
  }
  return result;
}

uint64_t create_shader_programv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const char *const *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v24 = __ldaxr(v14);
    while (__stlxr(v24 - 1, v14));
    signed int v25 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v25, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const char *const *))(*(void *)(v13 + 24)
                                                                                               + 6568LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v19 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v19)
    {
      do
        unsigned int v26 = __ldaxr(v14);
      while (__stlxr(v26 - 1, v14));
      [(id)DYGetGLGuestAppClient(v19) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const char *const *))(*(void *)(v13 + 24)
                                                                                                 + 6568LL))( v7,  a2,  a3,  a4);
    }
  }

  check_errors(v13);
  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    handle_opengl_thread_conflict((const void **)v13);
  }
  return 0LL;
}

uint64_t bind_program_pipeline(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 6576LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 6576LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t gen_program_pipelines(__GLIContextRec *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 6592LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 6592LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t get_program_pipelineiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 6608LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 6608LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t validate_program_pipeline(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 6616LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 6616LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t get_program_pipeline_info_log(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4, char *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unsigned int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    unsigned int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *, char *))(*(void *)(v15 + 24) + 6624LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *, char *))(*(void *)(v15 + 24)
                                                                                           + 6624LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t program_uniform1i(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v14);
    while (__stlxr(v29 - 1, v14));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 6632LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v31 = __ldaxr(v14);
      while (__stlxr(v31 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 6632LL))( v7,  a2,  a3,  a4);
    }
  }

  int v32 = a3;
  unsigned int v33 = a2;
  unsigned int v21 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v21, v19);
  unsigned int v22 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v33);
  if (v22)
  {
    uint64_t v24 = v22[3];
    if (*(_BYTE *)(v24 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v24 + 328),  &v32);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v21, v23);
  do
  {
    unsigned int v26 = __ldaxr(v14);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v14));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1C0BA4(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform2i(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      id v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 6640LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 6640LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  signed int v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  uint64_t v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C0DC4(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform3i(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v33 = __ldaxr(v18);
    while (__stlxr(v33 - 1, v18));
    int v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 6648LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v35 = __ldaxr(v18);
      while (__stlxr(v35 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 6648LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  int v36 = a3;
  unsigned int v37 = a2;
  unsigned int v25 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v25, v23);
  uint64_t v26 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v37);
  if (v26)
  {
    uint64_t v28 = v26[3];
    if (*(_BYTE *)(v28 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v28 + 328),  &v36);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v25, v27);
  do
  {
    unsigned int v30 = __ldaxr(v18);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v18));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1C0FF8(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform4i( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = a1;
  unint64_t v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      signed int v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    unint64_t v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  signed int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v35 = __ldaxr(v20);
    while (__stlxr(v35 - 1, v20));
    int v36 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v36, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 6656LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v26 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v26)
    {
      do
        unsigned int v37 = __ldaxr(v20);
      while (__stlxr(v37 - 1, v20));
      [(id)DYGetGLGuestAppClient(v26) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 6656LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
    }
  }

  int v38 = a3;
  unsigned int v39 = a2;
  signed int v27 = (GPUTools::DYLockUtils *)(*(void *)(v19 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v27, v25);
  uint64_t v28 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v19 + 40) + 104LL),  &v39);
  if (v28)
  {
    uint64_t v30 = v28[3];
    if (*(_BYTE *)(v30 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v30 + 328),  &v38);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v27, v29);
  do
  {
    unsigned int v32 = __ldaxr(v20);
    signed int v33 = v32 - 1;
  }

  while (__stlxr(v33, v20));
  if (gCheckGLErrors) {
    BOOL v34 = v33 < 1;
  }
  else {
    BOOL v34 = 1;
  }
  if (!v34) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

void sub_1C1234(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform1f(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v14);
    while (__stlxr(v29 - 1, v14));
    uint64_t v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float))(*(void *)(v13 + 24) + 6664LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v31 = __ldaxr(v14);
      while (__stlxr(v31 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float))(*(void *)(v13 + 24) + 6664LL))( v7,  a2,  a3,  a4);
    }
  }

  int v32 = a3;
  unsigned int v33 = a2;
  unsigned int v21 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v21, v19);
  signed int v22 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v33);
  if (v22)
  {
    uint64_t v24 = v22[3];
    if (*(_BYTE *)(v24 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v24 + 328),  &v32);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v21, v23);
  do
  {
    unsigned int v26 = __ldaxr(v14);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v14));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1C144C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform2f(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float a4, float a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float, float))(*(void *)(v15 + 24) + 6672LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float, float))(*(void *)(v15 + 24)
                                                                                          + 6672LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  uint64_t v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C166C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform3f(__GLIContextRec *a1, uint64_t a2, uint64_t a3, float a4, float a5, float a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v33 = __ldaxr(v18);
    while (__stlxr(v33 - 1, v18));
    int v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float, float, float))(*(void *)(v17 + 24)
                                                                                               + 6680LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v35 = __ldaxr(v18);
      while (__stlxr(v35 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float, float, float))(*(void *)(v17 + 24)
                                                                                                 + 6680LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  int v36 = a3;
  unsigned int v37 = a2;
  unsigned int v25 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v25, v23);
  uint64_t v26 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v37);
  if (v26)
  {
    uint64_t v28 = v26[3];
    if (*(_BYTE *)(v28 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v28 + 328),  &v36);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v25, v27);
  do
  {
    unsigned int v30 = __ldaxr(v18);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v18));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1C18A0(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform4f( __GLIContextRec *a1, uint64_t a2, uint64_t a3, float a4, float a5, float a6, float a7)
{
  uint64_t v13 = a1;
  unint64_t v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      signed int v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    unint64_t v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  signed int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v35 = __ldaxr(v20);
    while (__stlxr(v35 - 1, v20));
    int v36 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v36, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float, float, float, float))(*(void *)(v19 + 24) + 6688LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v26 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v26)
    {
      do
        unsigned int v37 = __ldaxr(v20);
      while (__stlxr(v37 - 1, v20));
      [(id)DYGetGLGuestAppClient(v26) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, float, float, float, float))(*(void *)(v19 + 24) + 6688LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
    }
  }

  int v38 = a3;
  unsigned int v39 = a2;
  signed int v27 = (GPUTools::DYLockUtils *)(*(void *)(v19 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v27, v25);
  uint64_t v28 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v19 + 40) + 104LL),  &v39);
  if (v28)
  {
    uint64_t v30 = v28[3];
    if (*(_BYTE *)(v30 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v30 + 328),  &v38);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v27, v29);
  do
  {
    unsigned int v32 = __ldaxr(v20);
    signed int v33 = v32 - 1;
  }

  while (__stlxr(v33, v20));
  if (gCheckGLErrors) {
    BOOL v34 = v33 < 1;
  }
  else {
    BOOL v34 = 1;
  }
  if (!v34) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

void sub_1C1ADC(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform1iv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const int *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                                + 6696LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                                  + 6696LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  id v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C1CFC(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform2iv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const int *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                                + 6704LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                                  + 6704LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  id v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C1F1C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform3iv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const int *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                                + 6712LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                                  + 6712LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  id v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C213C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform4iv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const int *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                                + 6720LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const int *))(*(void *)(v15 + 24)
                                                                                                  + 6720LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  id v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C235C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform1fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 6728LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 6728LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  id v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C257C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform2fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 6736LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 6736LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  id v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C279C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform3fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 6744LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 6744LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  id v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C29BC(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform4fv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const float *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24)
                                                                                                  + 6752LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v15 + 24) + 6752LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  id v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C2BDC(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform_matrix2fv( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v33 = __ldaxr(v18);
    while (__stlxr(v33 - 1, v18));
    int v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6760LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v35 = __ldaxr(v18);
      while (__stlxr(v35 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6760LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  int v36 = a3;
  unsigned int v37 = a2;
  unsigned int v25 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v25, v23);
  uint64_t v26 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v37);
  if (v26)
  {
    uint64_t v28 = v26[3];
    if (*(_BYTE *)(v28 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v28 + 328),  &v36);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v25, v27);
  do
  {
    unsigned int v30 = __ldaxr(v18);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v18));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1C2E10(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform_matrix3fv( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v33 = __ldaxr(v18);
    while (__stlxr(v33 - 1, v18));
    int v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6768LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v35 = __ldaxr(v18);
      while (__stlxr(v35 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6768LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  int v36 = a3;
  unsigned int v37 = a2;
  unsigned int v25 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v25, v23);
  uint64_t v26 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v37);
  if (v26)
  {
    uint64_t v28 = v26[3];
    if (*(_BYTE *)(v28 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v28 + 328),  &v36);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v25, v27);
  do
  {
    unsigned int v30 = __ldaxr(v18);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v18));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1C3044(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform_matrix4fv( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v33 = __ldaxr(v18);
    while (__stlxr(v33 - 1, v18));
    int v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6776LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v35 = __ldaxr(v18);
      while (__stlxr(v35 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6776LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  int v36 = a3;
  unsigned int v37 = a2;
  unsigned int v25 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v25, v23);
  uint64_t v26 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v37);
  if (v26)
  {
    uint64_t v28 = v26[3];
    if (*(_BYTE *)(v28 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v28 + 328),  &v36);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v25, v27);
  do
  {
    unsigned int v30 = __ldaxr(v18);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v18));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1C3278(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform1ui(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v14);
    while (__stlxr(v29 - 1, v14));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 6784LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v18) state] == (char *)&dword_0 + 1)
  {
    id v20 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v20)
    {
      do
        unsigned int v31 = __ldaxr(v14);
      while (__stlxr(v31 - 1, v14));
      [(id)DYGetGLGuestAppClient(v20) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 6784LL))( v7,  a2,  a3,  a4);
    }
  }

  int v32 = a3;
  unsigned int v33 = a2;
  BOOL v21 = (GPUTools::DYLockUtils *)(*(void *)(v13 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v21, v19);
  id v22 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v13 + 40) + 104LL),  &v33);
  if (v22)
  {
    uint64_t v24 = v22[3];
    if (*(_BYTE *)(v24 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v24 + 328),  &v32);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v21, v23);
  do
  {
    unsigned int v26 = __ldaxr(v14);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v14));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

void sub_1C3490(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform2ui(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  signed int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 6792LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 6792LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  uint64_t v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C36B0(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform3ui(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v33 = __ldaxr(v18);
    while (__stlxr(v33 - 1, v18));
    int v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 6800LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v35 = __ldaxr(v18);
      while (__stlxr(v35 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 6800LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  int v36 = a3;
  unsigned int v37 = a2;
  unsigned int v25 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v25, v23);
  uint64_t v26 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v37);
  if (v26)
  {
    uint64_t v28 = v26[3];
    if (*(_BYTE *)(v28 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v28 + 328),  &v36);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v25, v27);
  do
  {
    unsigned int v30 = __ldaxr(v18);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v18));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1C38E4(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform4ui( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = a1;
  unint64_t v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      signed int v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    unint64_t v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  signed int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v35 = __ldaxr(v20);
    while (__stlxr(v35 - 1, v20));
    int v36 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v36, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 6808LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v24) state] == (char *)&dword_0 + 1)
  {
    id v26 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v26)
    {
      do
        unsigned int v37 = __ldaxr(v20);
      while (__stlxr(v37 - 1, v20));
      [(id)DYGetGLGuestAppClient(v26) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 6808LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
    }
  }

  int v38 = a3;
  unsigned int v39 = a2;
  signed int v27 = (GPUTools::DYLockUtils *)(*(void *)(v19 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v27, v25);
  uint64_t v28 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v19 + 40) + 104LL),  &v39);
  if (v28)
  {
    uint64_t v30 = v28[3];
    if (*(_BYTE *)(v30 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v30 + 328),  &v38);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v27, v29);
  do
  {
    unsigned int v32 = __ldaxr(v20);
    signed int v33 = v32 - 1;
  }

  while (__stlxr(v33, v20));
  if (gCheckGLErrors) {
    BOOL v34 = v33 < 1;
  }
  else {
    BOOL v34 = 1;
  }
  if (!v34) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

void sub_1C3B20(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform1uiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const unsigned int *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6816LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6816LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  id v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C3D40(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform2uiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const unsigned int *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6824LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6824LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  id v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C3F60(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform3uiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const unsigned int *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6832LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6832LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  id v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C4180(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform4uiv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const unsigned int *a5)
{
  uint64_t v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unint64_t v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v31 = __ldaxr(v16);
    while (__stlxr(v31 - 1, v16));
    unsigned int v32 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v32, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6840LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v20) state] == (char *)&dword_0 + 1)
  {
    id v22 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v22)
    {
      do
        unsigned int v33 = __ldaxr(v16);
      while (__stlxr(v33 - 1, v16));
      [(id)DYGetGLGuestAppClient(v22) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const unsigned int *))(*(void *)(v15 + 24) + 6840LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  int v34 = a3;
  unsigned int v35 = a2;
  BOOL v23 = (GPUTools::DYLockUtils *)(*(void *)(v15 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v23, v21);
  id v24 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v15 + 40) + 104LL),  &v35);
  if (v24)
  {
    uint64_t v26 = v24[3];
    if (*(_BYTE *)(v26 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v26 + 328),  &v34);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v23, v25);
  do
  {
    unsigned int v28 = __ldaxr(v16);
    signed int v29 = v28 - 1;
  }

  while (__stlxr(v29, v16));
  if (gCheckGLErrors) {
    BOOL v30 = v29 < 1;
  }
  else {
    BOOL v30 = 1;
  }
  if (!v30) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

void sub_1C43A0(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform_matrix2x3fv( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v33 = __ldaxr(v18);
    while (__stlxr(v33 - 1, v18));
    int v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6848LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v35 = __ldaxr(v18);
      while (__stlxr(v35 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6848LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  int v36 = a3;
  unsigned int v37 = a2;
  unsigned int v25 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v25, v23);
  uint64_t v26 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v37);
  if (v26)
  {
    uint64_t v28 = v26[3];
    if (*(_BYTE *)(v28 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v28 + 328),  &v36);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v25, v27);
  do
  {
    unsigned int v30 = __ldaxr(v18);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v18));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1C45D4(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform_matrix3x2fv( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v33 = __ldaxr(v18);
    while (__stlxr(v33 - 1, v18));
    int v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6856LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v35 = __ldaxr(v18);
      while (__stlxr(v35 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6856LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  int v36 = a3;
  unsigned int v37 = a2;
  unsigned int v25 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v25, v23);
  uint64_t v26 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v37);
  if (v26)
  {
    uint64_t v28 = v26[3];
    if (*(_BYTE *)(v28 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v28 + 328),  &v36);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v25, v27);
  do
  {
    unsigned int v30 = __ldaxr(v18);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v18));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1C4808(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform_matrix2x4fv( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v33 = __ldaxr(v18);
    while (__stlxr(v33 - 1, v18));
    int v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6864LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v35 = __ldaxr(v18);
      while (__stlxr(v35 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6864LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  int v36 = a3;
  unsigned int v37 = a2;
  unsigned int v25 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v25, v23);
  uint64_t v26 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v37);
  if (v26)
  {
    uint64_t v28 = v26[3];
    if (*(_BYTE *)(v28 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v28 + 328),  &v36);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v25, v27);
  do
  {
    unsigned int v30 = __ldaxr(v18);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v18));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1C4A3C(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform_matrix4x2fv( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v33 = __ldaxr(v18);
    while (__stlxr(v33 - 1, v18));
    int v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6872LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v35 = __ldaxr(v18);
      while (__stlxr(v35 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6872LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  int v36 = a3;
  unsigned int v37 = a2;
  unsigned int v25 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v25, v23);
  uint64_t v26 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v37);
  if (v26)
  {
    uint64_t v28 = v26[3];
    if (*(_BYTE *)(v28 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v28 + 328),  &v36);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v25, v27);
  do
  {
    unsigned int v30 = __ldaxr(v18);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v18));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1C4C70(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform_matrix3x4fv( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v33 = __ldaxr(v18);
    while (__stlxr(v33 - 1, v18));
    int v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6880LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v35 = __ldaxr(v18);
      while (__stlxr(v35 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6880LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  int v36 = a3;
  unsigned int v37 = a2;
  unsigned int v25 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v25, v23);
  uint64_t v26 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v37);
  if (v26)
  {
    uint64_t v28 = v26[3];
    if (*(_BYTE *)(v28 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v28 + 328),  &v36);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v25, v27);
  do
  {
    unsigned int v30 = __ldaxr(v18);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v18));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1C4EA4(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t program_uniform_matrix4x3fv( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const float *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v33 = __ldaxr(v18);
    while (__stlxr(v33 - 1, v18));
    int v34 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v34, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6888LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  if ([(id)DYGetGLGuestAppClient(v22) state] == (char *)&dword_0 + 1)
  {
    id v24 = [(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((_DWORD)v24)
    {
      do
        unsigned int v35 = __ldaxr(v18);
      while (__stlxr(v35 - 1, v18));
      [(id)DYGetGLGuestAppClient(v24) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, const float *))(*(void *)(v17 + 24) + 6888LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  int v36 = a3;
  unsigned int v37 = a2;
  unsigned int v25 = (GPUTools::DYLockUtils *)(*(void *)(v17 + 40) + 144LL);
  GPUTools::DYLockUtils::Lock(v25, v23);
  uint64_t v26 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)(v17 + 40) + 104LL),  &v37);
  if (v26)
  {
    uint64_t v28 = v26[3];
    if (*(_BYTE *)(v28 + 376)) {
      std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( (void *)(v28 + 328),  &v36);
    }
  }

  uint64_t result = GPUTools::DYLockUtils::Unlock(v25, v27);
  do
  {
    unsigned int v30 = __ldaxr(v18);
    signed int v31 = v30 - 1;
  }

  while (__stlxr(v31, v18));
  if (gCheckGLErrors) {
    BOOL v32 = v31 < 1;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

void sub_1C50D8(_Unwind_Exception *a1, volatile int *a2)
{
}

uint64_t release_shader_compiler(__GLIContextRec *a1)
{
  unsigned int v1 = a1;
  int v2 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v4 = v2[4];
    BOOL v5 = v4 >= (unint64_t)a1;
    else {
      unint64_t v6 = v2 + 1;
    }
    if (v5) {
      uint64_t v3 = (uint64_t)v2;
    }
    int v2 = (void *)*v6;
  }

  while (*v6);
  if (v3 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v3 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = (unsigned int *)(v7 + 4640);
  do
  {
    unsigned int v9 = __ldaxr(v8);
    signed int v10 = v9 + 1;
  }

  while (__stlxr(v10, v8));
  if (gCheckGLErrors) {
    BOOL v11 = v10 <= 1;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v7);
  }
  id v12 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v12 >= 1)
  {
    do
      unsigned int v17 = __ldaxr(v8);
    while (__stlxr(v17 - 1, v8));
    signed int v18 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v12) graphicsLockWaitQueue];
    dispatch_sync_f(v18, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 6992LL))(v1);
  }

  *(_BYTE *)(v7 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v12) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v19 = __ldaxr(v8);
      while (__stlxr(v19 - 1, v8));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 6992LL))(v1);
    }
  }

  do
  {
    unsigned int v14 = __ldaxr(v8);
    signed int v15 = v14 - 1;
  }

  while (__stlxr(v15, v8));
  if (gCheckGLErrors) {
    BOOL v16 = v15 < 1;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16) {
    return handle_opengl_thread_conflict((const void **)v7);
  }
  return result;
}

uint64_t shader_binary( __GLIContextRec *a1, uint64_t a2, unsigned int *a3, uint64_t a4, const void *a5, uint64_t a6)
{
  BOOL v11 = a1;
  id v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      BOOL v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    id v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    uint64_t v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *, uint64_t, const void *, uint64_t))(*(void *)(v17 + 24) + 7000LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *, uint64_t, const void *, uint64_t))(*(void *)(v17 + 24) + 7000LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t get_shader_precision_format(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4, int *a5)
{
  unsigned int v9 = a1;
  signed int v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    signed int v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  BOOL v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *, int *))(*(void *)(v15 + 24) + 7008LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *, int *))(*(void *)(v15 + 24)
                                                                                          + 7008LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t depth_rangef(__GLIContextRec *a1, float a2, float a3)
{
  BOOL v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float, float))(*(void *)(v11 + 24) + 7016LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float, float))(*(void *)(v11 + 24) + 7016LL))(v5, a2, a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t clear_depthf(__GLIContextRec *a1, float a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  signed int v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    BOOL v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float))(*(void *)(v9 + 24) + 7024LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float))(*(void *)(v9 + 24) + 7024LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t get_program_binary(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4, unsigned int *a5, void *a6)
{
  unsigned int v11 = a1;
  signed int v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unsigned int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    signed int v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  BOOL v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    uint64_t v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *, unsigned int *, void *))(*(void *)(v17 + 24) + 7096LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *, unsigned int *, void *))(*(void *)(v17 + 24) + 7096LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t program_binary(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const void *a4, uint64_t a5)
{
  uint64_t v9 = a1;
  signed int v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    signed int v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  unsigned int v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const void *, uint64_t))(*(void *)(v15 + 24)
                                                                                                 + 7104LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const void *, uint64_t))(*(void *)(v15 + 24) + 7104LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t bind_transform_feedback(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 7232LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 7232LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t gen_transform_feedbacks(__GLIContextRec *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 7240LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, unsigned int *))(*(void *)(v11 + 24) + 7240LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t delete_transform_feedbacks(__GLIContextRec *a1, uint64_t a2, const unsigned int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 7248LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const unsigned int *))(*(void *)(v11 + 24) + 7248LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t pause_transform_feedback(__GLIContextRec *a1)
{
  unsigned int v1 = a1;
  int v2 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v4 = v2[4];
    BOOL v5 = v4 >= (unint64_t)a1;
    else {
      unint64_t v6 = v2 + 1;
    }
    if (v5) {
      uint64_t v3 = (uint64_t)v2;
    }
    int v2 = (void *)*v6;
  }

  while (*v6);
  if (v3 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v3 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = (unsigned int *)(v7 + 4640);
  do
  {
    unsigned int v9 = __ldaxr(v8);
    signed int v10 = v9 + 1;
  }

  while (__stlxr(v10, v8));
  if (gCheckGLErrors) {
    BOOL v11 = v10 <= 1;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v7);
  }
  id v12 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v12 >= 1)
  {
    do
      unsigned int v17 = __ldaxr(v8);
    while (__stlxr(v17 - 1, v8));
    unsigned int v18 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v12) graphicsLockWaitQueue];
    dispatch_sync_f(v18, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 7256LL))(v1);
  }

  *(_BYTE *)(v7 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v12) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v19 = __ldaxr(v8);
      while (__stlxr(v19 - 1, v8));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 7256LL))(v1);
    }
  }

  do
  {
    unsigned int v14 = __ldaxr(v8);
    signed int v15 = v14 - 1;
  }

  while (__stlxr(v15, v8));
  if (gCheckGLErrors) {
    BOOL v16 = v15 < 1;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16) {
    return handle_opengl_thread_conflict((const void **)v7);
  }
  return result;
}

uint64_t resume_transform_feedback(__GLIContextRec *a1)
{
  unsigned int v1 = a1;
  int v2 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v4 = v2[4];
    BOOL v5 = v4 >= (unint64_t)a1;
    else {
      unint64_t v6 = v2 + 1;
    }
    if (v5) {
      uint64_t v3 = (uint64_t)v2;
    }
    int v2 = (void *)*v6;
  }

  while (*v6);
  if (v3 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v3 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = (unsigned int *)(v7 + 4640);
  do
  {
    unsigned int v9 = __ldaxr(v8);
    signed int v10 = v9 + 1;
  }

  while (__stlxr(v10, v8));
  if (gCheckGLErrors) {
    BOOL v11 = v10 <= 1;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v7);
  }
  id v12 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v12 >= 1)
  {
    do
      unsigned int v17 = __ldaxr(v8);
    while (__stlxr(v17 - 1, v8));
    unsigned int v18 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v12) graphicsLockWaitQueue];
    dispatch_sync_f(v18, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 7264LL))(v1);
  }

  *(_BYTE *)(v7 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v12) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v19 = __ldaxr(v8);
      while (__stlxr(v19 - 1, v8));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 7264LL))(v1);
    }
  }

  do
  {
    unsigned int v14 = __ldaxr(v8);
    signed int v15 = v14 - 1;
  }

  while (__stlxr(v15, v8));
  if (gCheckGLErrors) {
    BOOL v16 = v15 < 1;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16) {
    return handle_opengl_thread_conflict((const void **)v7);
  }
  return result;
}

uint64_t alpha_funcx(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  BOOL v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  id v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 7744LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 7744LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t clear_colorx(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v9 = a1;
  signed int v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    signed int v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  id v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 7752LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 7752LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t clear_depthx(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  signed int v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    id v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 7760LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 7760LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t clip_planef(__GLIContextRec *a1, uint64_t a2, const float *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const float *))(*(void *)(v11 + 24) + 7768LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const float *))(*(void *)(v11 + 24) + 7768LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t clip_planex(__GLIContextRec *a1, uint64_t a2, const int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 24) + 7776LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 24) + 7776LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t color4x(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v9 = a1;
  signed int v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    signed int v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  id v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 7784LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 7784LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t depth_rangex(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 7792LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 7792LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t fogx(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 7800LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 7800LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t fogxv(__GLIContextRec *a1, uint64_t a2, const int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    unsigned int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 24) + 7808LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 24) + 7808LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t frustumf(__GLIContextRec *a1, float a2, float a3, float a4, float a5, float a6, float a7)
{
  unsigned int v13 = a1;
  signed int v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      unsigned int v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    signed int v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  BOOL v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v20);
    while (__stlxr(v29 - 1, v20));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float, float, float))(*(void *)(v19 + 24)
                                                                                                  + 7816LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v24) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v31 = __ldaxr(v20);
      while (__stlxr(v31 - 1, v20));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float, float, float))(*(void *)(v19 + 24) + 7816LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v20);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v20));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

uint64_t frustumx( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v13 = a1;
  signed int v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      unsigned int v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    signed int v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  BOOL v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v20);
    while (__stlxr(v29 - 1, v20));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 7824LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v24) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v31 = __ldaxr(v20);
      while (__stlxr(v31 - 1, v20));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 7824LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v20);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v20));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

uint64_t get_clip_planef(__GLIContextRec *a1, uint64_t a2, float *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    signed int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float *))(*(void *)(v11 + 24) + 7832LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, float *))(*(void *)(v11 + 24) + 7832LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t get_clip_planex(__GLIContextRec *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    signed int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, int *))(*(void *)(v11 + 24) + 7840LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, int *))(*(void *)(v11 + 24) + 7840LL))(v5, a2, a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t get_fixedv(__GLIContextRec *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      signed int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    signed int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, int *))(*(void *)(v11 + 24) + 7848LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, int *))(*(void *)(v11 + 24) + 7848LL))(v5, a2, a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t get_lightxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7856LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7856LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_materialxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7864LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7864LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_tex_envxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7872LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7872LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_tex_parameterxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7880LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 7880LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t light_modelx(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 7888LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 7888LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t light_modelxv(__GLIContextRec *a1, uint64_t a2, const int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    BOOL v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 24) + 7896LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 24) + 7896LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t lightx(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 7904LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 7904LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t lightxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 7912LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 7912LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t line_widthx(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 7920LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 7920LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t load_matrixx(__GLIContextRec *a1, const int *a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, const int *))(*(void *)(v9 + 24) + 7928LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, const int *))(*(void *)(v9 + 24) + 7928LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t materialx(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 7936LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 7936LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t materialxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 7944LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 7944LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t mult_matrixx(__GLIContextRec *a1, const int *a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, const int *))(*(void *)(v9 + 24) + 7952LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, const int *))(*(void *)(v9 + 24) + 7952LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t normal3x(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 7960LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 7960LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t orthof(__GLIContextRec *a1, float a2, float a3, float a4, float a5, float a6, float a7)
{
  uint64_t v13 = a1;
  id v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      id v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    id v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  unsigned int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v20);
    while (__stlxr(v29 - 1, v20));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float, float, float))(*(void *)(v19 + 24)
                                                                                                  + 7968LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v24) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v31 = __ldaxr(v20);
      while (__stlxr(v31 - 1, v20));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float, float, float))(*(void *)(v19 + 24) + 7968LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v20);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v20));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

uint64_t orthox(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = a1;
  id v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      id v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    id v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  unsigned int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v20);
    while (__stlxr(v29 - 1, v20));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 7976LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v24) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v31 = __ldaxr(v20);
      while (__stlxr(v31 - 1, v20));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 7976LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v20);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v20));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

uint64_t point_sizex(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    unsigned int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 7984LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 7984LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t polygon_offsetx(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  signed int v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    signed int v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 7992LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 7992LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t rotatex(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v9 = a1;
  unint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      signed int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  id v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    unsigned int v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 8000LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 8000LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t scalex(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 8008LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 8008LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_envx(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 8016LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 8016LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_envxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 8024LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 8024LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_parameterx(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 8032LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 8032LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t tex_parameterxv(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 8040LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 8040LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t translatex(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  signed int v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    BOOL v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 8048LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 8048LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t multi_tex_coord4x(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      signed int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  id v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    BOOL v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 8056LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 8056LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t sample_coveragex(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    id v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 8064LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 8064LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t point_parameterx(__GLIContextRec *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    id v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 8072LL))(v5, a2, a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t))(*(void *)(v11 + 24) + 8072LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t point_parameterxv(__GLIContextRec *a1, uint64_t a2, const int *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      unint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    unint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  unint64_t v12 = (unsigned int *)(v11 + 4640);
  do
  {
    unsigned int v13 = __ldaxr(v12);
    signed int v14 = v13 + 1;
  }

  while (__stlxr(v14, v12));
  if (gCheckGLErrors) {
    BOOL v15 = v14 <= 1;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v11);
  }
  id v16 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v16 >= 1)
  {
    do
      unsigned int v21 = __ldaxr(v12);
    while (__stlxr(v21 - 1, v12));
    id v22 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v16) graphicsLockWaitQueue];
    dispatch_sync_f(v22, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 24) + 8080LL))( v5,  a2,  a3);
  }

  *(_BYTE *)(v11 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v16) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v23 = __ldaxr(v12);
      while (__stlxr(v23 - 1, v12));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, const int *))(*(void *)(v11 + 24) + 8080LL))( v5,  a2,  a3);
    }
  }

  do
  {
    unsigned int v18 = __ldaxr(v12);
    signed int v19 = v18 - 1;
  }

  while (__stlxr(v19, v12));
  if (gCheckGLErrors) {
    BOOL v20 = v19 < 1;
  }
  else {
    BOOL v20 = 1;
  }
  if (!v20) {
    return handle_opengl_thread_conflict((const void **)v11);
  }
  return result;
}

uint64_t current_palette_matrix_OES(__GLIContextRec *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    BOOL v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 8088LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v9 + 24) + 8088LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t load_palette_from_modelview_matrix_OES(__GLIContextRec *a1)
{
  unsigned int v1 = a1;
  int v2 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v4 = v2[4];
    BOOL v5 = v4 >= (unint64_t)a1;
    else {
      unint64_t v6 = v2 + 1;
    }
    if (v5) {
      uint64_t v3 = (uint64_t)v2;
    }
    int v2 = (void *)*v6;
  }

  while (*v6);
  if (v3 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v3 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = (unsigned int *)(v7 + 4640);
  do
  {
    unsigned int v9 = __ldaxr(v8);
    signed int v10 = v9 + 1;
  }

  while (__stlxr(v10, v8));
  if (gCheckGLErrors) {
    BOOL v11 = v10 <= 1;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v7);
  }
  id v12 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v12 >= 1)
  {
    do
      unsigned int v17 = __ldaxr(v8);
    while (__stlxr(v17 - 1, v8));
    BOOL v18 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v12) graphicsLockWaitQueue];
    dispatch_sync_f(v18, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 8096LL))(v1);
  }

  *(_BYTE *)(v7 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v12) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v19 = __ldaxr(v8);
      while (__stlxr(v19 - 1, v8));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 8096LL))(v1);
    }
  }

  do
  {
    unsigned int v14 = __ldaxr(v8);
    signed int v15 = v14 - 1;
  }

  while (__stlxr(v15, v8));
  if (gCheckGLErrors) {
    BOOL v16 = v15 < 1;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16) {
    return handle_opengl_thread_conflict((const void **)v7);
  }
  return result;
}

uint64_t matrix_index_pointer_OES(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  unsigned int v9 = a1;
  signed int v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unsigned int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    signed int v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  BOOL v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24)
                                                                                                 + 8104LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24) + 8104LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t weight_pointer_OES(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  unsigned int v9 = a1;
  signed int v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unsigned int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    signed int v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  BOOL v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24)
                                                                                                 + 8112LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v15 + 24) + 8112LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t drawtexs_OES(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      BOOL v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    BOOL v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 8120LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 8120LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t drawtexi_OES(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      BOOL v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    BOOL v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 8128LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 8128LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t drawtexx_OES(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      BOOL v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  signed int v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    BOOL v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 8136LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 8136LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t drawtexsv_OES(__GLIContextRec *a1, const __int16 *a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  signed int v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    signed int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, const __int16 *))(*(void *)(v9 + 24) + 8144LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, const __int16 *))(*(void *)(v9 + 24) + 8144LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t drawtexiv_OES(__GLIContextRec *a1, const int *a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  signed int v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    signed int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, const int *))(*(void *)(v9 + 24) + 8152LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, const int *))(*(void *)(v9 + 24) + 8152LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t drawtexxv_OES(__GLIContextRec *a1, const int *a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  signed int v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    signed int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, const int *))(*(void *)(v9 + 24) + 8160LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, const int *))(*(void *)(v9 + 24) + 8160LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t drawtexf_OES(__GLIContextRec *a1, float a2, float a3, float a4, float a5, float a6)
{
  unsigned int v11 = a1;
  signed int v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      unsigned int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    signed int v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  BOOL v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    BOOL v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float, float))(*(void *)(v17 + 24)
                                                                                           + 8168LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, float, float, float, float, float))(*(void *)(v17 + 24)
                                                                                             + 8168LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t drawtexfv_OES(__GLIContextRec *a1, const float *a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v4[4];
    BOOL v7 = v6 >= (unint64_t)a1;
    else {
      unint64_t v8 = v4 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v4;
    }
    unint64_t v4 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v5 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v9 = *(void *)(v5 + 40);
  signed int v10 = (unsigned int *)(v9 + 4640);
  do
  {
    unsigned int v11 = __ldaxr(v10);
    signed int v12 = v11 + 1;
  }

  while (__stlxr(v12, v10));
  if (gCheckGLErrors) {
    BOOL v13 = v12 <= 1;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v9);
  }
  id v14 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v14 >= 1)
  {
    do
      unsigned int v19 = __ldaxr(v10);
    while (__stlxr(v19 - 1, v10));
    signed int v20 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v14) graphicsLockWaitQueue];
    dispatch_sync_f(v20, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, const float *))(*(void *)(v9 + 24) + 8176LL))(v3, a2);
  }

  *(_BYTE *)(v9 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v14) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v21 = __ldaxr(v10);
      while (__stlxr(v21 - 1, v10));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, const float *))(*(void *)(v9 + 24) + 8176LL))(v3, a2);
    }
  }

  do
  {
    unsigned int v16 = __ldaxr(v10);
    signed int v17 = v16 - 1;
  }

  while (__stlxr(v17, v10));
  if (gCheckGLErrors) {
    BOOL v18 = v17 < 1;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18) {
    return handle_opengl_thread_conflict((const void **)v9);
  }
  return result;
}

uint64_t discard_framebuffer_EXT(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const unsigned int *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v13 + 24)
                                                                                                + 8184LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *))(*(void *)(v13 + 24)
                                                                                                  + 8184LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t framebuffer_parameteri_APPLE(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const int *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24) + 0x2000LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const int *))(*(void *)(v13 + 24)
                                                                                         + 0x2000LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t get_framebuffer_parameteri_APPLE(__GLIContextRec *a1, uint64_t a2, uint64_t a3, int *a4)
{
  BOOL v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      signed int v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  id v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    unsigned int v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 8200LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, int *))(*(void *)(v13 + 24) + 8200LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t resolve_multisample_framebuffer_APPLE(__GLIContextRec *a1)
{
  unsigned int v1 = a1;
  int v2 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v4 = v2[4];
    BOOL v5 = v4 >= (unint64_t)a1;
    else {
      unint64_t v6 = v2 + 1;
    }
    if (v5) {
      uint64_t v3 = (uint64_t)v2;
    }
    int v2 = (void *)*v6;
  }

  while (*v6);
  if (v3 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v3 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v3 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = (unsigned int *)(v7 + 4640);
  do
  {
    unsigned int v9 = __ldaxr(v8);
    signed int v10 = v9 + 1;
  }

  while (__stlxr(v10, v8));
  if (gCheckGLErrors) {
    BOOL v11 = v10 <= 1;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v7);
  }
  id v12 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v12 >= 1)
  {
    do
      unsigned int v17 = __ldaxr(v8);
    while (__stlxr(v17 - 1, v8));
    id v18 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v12) graphicsLockWaitQueue];
    dispatch_sync_f(v18, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 8208LL))(v1);
  }

  *(_WORD *)(v7 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 257;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v12) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v19 = __ldaxr(v8);
      while (__stlxr(v19 - 1, v8));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v7 + 24) + 8208LL))(v1);
    }
  }

  do
  {
    unsigned int v14 = __ldaxr(v8);
    signed int v15 = v14 - 1;
  }

  while (__stlxr(v15, v8));
  if (gCheckGLErrors) {
    BOOL v16 = v15 < 1;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16) {
    return handle_opengl_thread_conflict((const void **)v7);
  }
  return result;
}

uint64_t copy_texture_levels(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v9 = a1;
  signed int v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      unsigned int v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    signed int v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  BOOL v16 = (unsigned int *)(v15 + 4640);
  do
  {
    unsigned int v17 = __ldaxr(v16);
    signed int v18 = v17 + 1;
  }

  while (__stlxr(v18, v16));
  if (gCheckGLErrors) {
    BOOL v19 = v18 <= 1;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v15);
  }
  id v20 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v20 >= 1)
  {
    do
      unsigned int v25 = __ldaxr(v16);
    while (__stlxr(v25 - 1, v16));
    BOOL v26 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v20) graphicsLockWaitQueue];
    dispatch_sync_f(v26, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                            + 8216LL))( v9,  a2,  a3,  a4,  a5);
  }

  *(_BYTE *)(v15 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v20) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v27 = __ldaxr(v16);
      while (__stlxr(v27 - 1, v16));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24)
                                                                                              + 8216LL))( v9,  a2,  a3,  a4,  a5);
    }
  }

  do
  {
    unsigned int v22 = __ldaxr(v16);
    signed int v23 = v22 - 1;
  }

  while (__stlxr(v23, v16));
  if (gCheckGLErrors) {
    BOOL v24 = v23 < 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    return handle_opengl_thread_conflict((const void **)v15);
  }
  return result;
}

uint64_t invalidate_sub_framebuffer( __GLIContextRec *a1, uint64_t a2, uint64_t a3, const unsigned int *a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v14 = a1;
  uint64_t v15 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v17 = v15[4];
    BOOL v18 = v17 >= (unint64_t)a1;
    else {
      BOOL v19 = v15 + 1;
    }
    if (v18) {
      uint64_t v16 = (uint64_t)v15;
    }
    uint64_t v15 = (void *)*v19;
  }

  while (*v19);
  if (v16 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v16 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v16 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v20 = *(void *)(v16 + 40);
  signed int v21 = (unsigned int *)(v20 + 4640);
  do
  {
    unsigned int v22 = __ldaxr(v21);
    signed int v23 = v22 + 1;
  }

  while (__stlxr(v23, v21));
  if (gCheckGLErrors) {
    BOOL v24 = v23 <= 1;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v20);
  }
  id v25 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v25 >= 1)
  {
    do
      unsigned int v30 = __ldaxr(v21);
    while (__stlxr(v30 - 1, v21));
    unsigned int v31 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v25) graphicsLockWaitQueue];
    dispatch_sync_f(v31, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *, uint64_t, uint64_t, uint64_t, void))(*(void *)(v20 + 24) + 8224LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
  }

  *(_BYTE *)(v20 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v25) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v32 = __ldaxr(v21);
      while (__stlxr(v32 - 1, v21));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const unsigned int *, uint64_t, uint64_t, uint64_t, void))(*(void *)(v20 + 24) + 8224LL))( v14,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
    }
  }

  do
  {
    unsigned int v27 = __ldaxr(v21);
    signed int v28 = v27 - 1;
  }

  while (__stlxr(v28, v21));
  if (gCheckGLErrors) {
    BOOL v29 = v28 < 1;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29) {
    return handle_opengl_thread_conflict((const void **)v20);
  }
  return result;
}

uint64_t get_internal_formativ(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      uint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  BOOL v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    signed int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, int *))(*(void *)(v17 + 24) + 8232LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, int *))(*(void *)(v17 + 24) + 8232LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t tex_storage2D(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1;
  unint64_t v12 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a1;
    else {
      uint64_t v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    unint64_t v12 = (void *)*v16;
  }

  while (*v16);
  if (v13 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v13 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v13 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v17 = *(void *)(v13 + 40);
  BOOL v18 = (unsigned int *)(v17 + 4640);
  do
  {
    unsigned int v19 = __ldaxr(v18);
    signed int v20 = v19 + 1;
  }

  while (__stlxr(v20, v18));
  if (gCheckGLErrors) {
    BOOL v21 = v20 <= 1;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v17);
  }
  id v22 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v22 >= 1)
  {
    do
      unsigned int v27 = __ldaxr(v18);
    while (__stlxr(v27 - 1, v18));
    signed int v28 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v22) graphicsLockWaitQueue];
    dispatch_sync_f(v28, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 8248LL))( v11,  a2,  a3,  a4,  a5,  a6);
  }

  *(_BYTE *)(v17 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v22) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v29 = __ldaxr(v18);
      while (__stlxr(v29 - 1, v18));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + 8248LL))( v11,  a2,  a3,  a4,  a5,  a6);
    }
  }

  do
  {
    unsigned int v24 = __ldaxr(v18);
    signed int v25 = v24 - 1;
  }

  while (__stlxr(v25, v18));
  if (gCheckGLErrors) {
    BOOL v26 = v25 < 1;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26) {
    return handle_opengl_thread_conflict((const void **)v17);
  }
  return result;
}

uint64_t tex_storage3D( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = a1;
  unint64_t v14 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v14) {
    goto LABEL_12;
  }
  uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v16 = v14[4];
    BOOL v17 = v16 >= (unint64_t)a1;
    else {
      BOOL v18 = v14 + 1;
    }
    if (v17) {
      uint64_t v15 = (uint64_t)v14;
    }
    unint64_t v14 = (void *)*v18;
  }

  while (*v18);
  if (v15 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v15 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v15 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v19 = *(void *)(v15 + 40);
  signed int v20 = (unsigned int *)(v19 + 4640);
  do
  {
    unsigned int v21 = __ldaxr(v20);
    signed int v22 = v21 + 1;
  }

  while (__stlxr(v22, v20));
  if (gCheckGLErrors) {
    BOOL v23 = v22 <= 1;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v19);
  }
  id v24 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v24 >= 1)
  {
    do
      unsigned int v29 = __ldaxr(v20);
    while (__stlxr(v29 - 1, v20));
    unsigned int v30 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v24) graphicsLockWaitQueue];
    dispatch_sync_f(v30, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 8256LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
  }

  *(_BYTE *)(v19 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v24) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v31 = __ldaxr(v20);
      while (__stlxr(v31 - 1, v20));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 8256LL))( v13,  a2,  a3,  a4,  a5,  a6,  a7);
    }
  }

  do
  {
    unsigned int v26 = __ldaxr(v20);
    signed int v27 = v26 - 1;
  }

  while (__stlxr(v27, v20));
  if (gCheckGLErrors) {
    BOOL v28 = v27 < 1;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    return handle_opengl_thread_conflict((const void **)v19);
  }
  return result;
}

uint64_t label_object_with_responsible_process_APPLE(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  unint64_t v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    unint64_t v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned int *)(v13 + 4640);
  do
  {
    unsigned int v15 = __ldaxr(v14);
    signed int v16 = v15 + 1;
  }

  while (__stlxr(v16, v14));
  if (gCheckGLErrors) {
    BOOL v17 = v16 <= 1;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17) {
    a1 = (__GLIContextRec *)handle_opengl_thread_conflict((const void **)v13);
  }
  id v18 = [(id)DYGetGLGuestAppClient(a1) waitOnGraphicsSemaphoreAssertions];
  if ((int)v18 >= 1)
  {
    do
      unsigned int v23 = __ldaxr(v14);
    while (__stlxr(v23 - 1, v14));
    id v24 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) graphicsLockWaitQueue];
    dispatch_sync_f(v24, 0LL, (dispatch_function_t)do_nothing);
    return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 8264LL))( v7,  a2,  a3,  a4);
  }

  *(_BYTE *)(v13 + 483_Block_object_dispose((const void *)(v28 - 80), 8) = 1;
  uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(v18) state];
  if (result == 1)
  {
    uint64_t result = (uint64_t)[(id)DYGetGLGuestAppClient(1) triggerCaptureOnNextGLCommand];
    if ((result & 1) != 0)
    {
      do
        unsigned int v25 = __ldaxr(v14);
      while (__stlxr(v25 - 1, v14));
      [(id)DYGetGLGuestAppClient(result) triggerArmedCapture];
      return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 24) + 8264LL))( v7,  a2,  a3,  a4);
    }
  }

  do
  {
    unsigned int v20 = __ldaxr(v14);
    signed int v21 = v20 - 1;
  }

  while (__stlxr(v21, v14));
  if (gCheckGLErrors) {
    BOOL v22 = v21 < 1;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22) {
    return handle_opengl_thread_conflict((const void **)v13);
  }
  return result;
}

uint64_t GLDrawCommandStatistics::update(uint64_t this, int a2, int a3, signed int a4)
{
  unsigned int v4 = a3;
  switch(a2)
  {
    case 0:
    case 2:
      goto LABEL_11;
    case 1:
      unsigned int v4 = a3 >> 1;
      goto LABEL_11;
    case 3:
      unsigned int v4 = a3 - 1;
      BOOL v5 = a3 <= 1;
      goto LABEL_8;
    case 4:
      unsigned int v4 = a3 / 3;
      goto LABEL_11;
    case 5:
    case 6:
      unsigned int v4 = a3 - 2;
      BOOL v5 = a3 <= 2;
      goto LABEL_8;
    case 7:
      unsigned int v4 = a3 / 4;
      goto LABEL_11;
    case 8:
      unsigned int v4 = (a3 - 2) >> 1;
      BOOL v5 = a3 <= 3;
LABEL_8:
      if (v5) {
        unsigned int v4 = 0;
      }
LABEL_11:
      *(int64x2_t *)(this + _Block_object_dispose((const void *)(v28 - 80), 8) = vaddw_s32( *(int64x2_t *)(this + 8),  vmul_s32(vdup_n_s32(a4), (int32x2_t)__PAIR64__(v4, a3)));
      ++*(void *)this;
      *(void *)(this + 24) += a4;
      break;
    default:
      uint64_t v6 = dy_abort("unsupported mode: 0x%0.4x\n", a2);
      this = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>(v6);
      break;
  }

  return this;
}

uint64_t *std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( void *a1, unsigned int *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0LL;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (*(void *)&v2 <= v3) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }

  else
  {
    unint64_t v5 = (v2.i32[0] - 1) & v3;
  }

  uint64_t v6 = *(uint64_t ***)(*a1 + 8 * v5);
  if (!v6) {
    return 0LL;
  }
  for (uint64_t result = *v6; result; uint64_t result = (uint64_t *)*result)
  {
    unint64_t v8 = result[1];
    if (v8 == v3)
    {
      if (*((_DWORD *)result + 4) == (_DWORD)v3) {
        return result;
      }
    }

    else
    {
      if (v4.u32[0] > 1uLL)
      {
        if (v8 >= *(void *)&v2) {
          v8 %= *(void *)&v2;
        }
      }

      else
      {
        v8 &= *(void *)&v2 - 1LL;
      }

      if (v8 != v5) {
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t *std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::find<int>( void *a1, int *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0LL;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (*(void *)&v2 <= v3) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }

  else
  {
    unint64_t v5 = (*(void *)&v2 - 1LL) & v3;
  }

  uint64_t v6 = *(uint64_t ***)(*a1 + 8 * v5);
  if (!v6) {
    return 0LL;
  }
  for (uint64_t result = *v6; result; uint64_t result = (uint64_t *)*result)
  {
    unint64_t v8 = result[1];
    if (v8 == v3)
    {
      if (*((_DWORD *)result + 4) == (_DWORD)v3) {
        return result;
      }
    }

    else
    {
      if (v4.u32[0] > 1uLL)
      {
        if (v8 >= *(void *)&v2) {
          v8 %= *(void *)&v2;
        }
      }

      else
      {
        v8 &= *(void *)&v2 - 1LL;
      }

      if (v8 != v5) {
        return 0LL;
      }
    }
  }

  return result;
}

void SharegroupInfo::SharegroupInfo(SharegroupInfo *this, EAGLSharegroup *a2)
{
  *(void *)this = a2;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 2) = 1;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 12) = 1065353216;
  *((_DWORD *)this + 14) = 0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((_DWORD *)this + 24) = 1065353216;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_DWORD *)this + 34) = 1065353216;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 36) = 0;
  *(_OWORD *)((char *)this + 16_Block_object_dispose((const void *)(v28 - 80), 8) = 0u;
  *((_DWORD *)this + 46) = 1065353216;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  int8x8_t v2 = (char *)this + 232;
  *((_DWORD *)this + 56) = 1065353216;
  *(_OWORD *)((char *)this + 24_Block_object_dispose((const void *)(v28 - 80), 8) = 0u;
  *((void *)this + 34) = 0LL;
  *((_OWORD *)this + 19) = 0u;
  *((_DWORD *)this + 66) = 1065353216;
  *((_OWORD *)this + 20) = 0u;
  *((_DWORD *)this + 74) = 0;
  *((void *)this + 35) = 0LL;
  *((void *)this + 36) = 0LL;
  *((_DWORD *)this + 84) = 1065353216;
  *((void *)this + 44) = 0LL;
  *((void *)this + 43) = (char *)this + 352;
  *((void *)this + 45) = 0LL;
  *((_DWORD *)this + 92) = 0;
  unsigned int v3 = 35648;
  uint8x8_t v4 = &v3;
  *((_DWORD *)std::__hash_table<std::__hash_value_type<unsigned int,unsigned int volatile>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int volatile>>>::__emplace_unique_key_args<unsigned int,std::piecewise_construct_t const&,std::tuple<unsigned int &&>,std::tuple<>>( (uint64_t)this + 232,  &v3,  (uint64_t)&std::piecewise_construct,  &v4)
  + 5) = kDYReservedGLNameGLSLObjectStart;
  unsigned int v3 = 35407;
  uint8x8_t v4 = &v3;
  *((_DWORD *)std::__hash_table<std::__hash_value_type<unsigned int,unsigned int volatile>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int volatile>>>::__emplace_unique_key_args<unsigned int,std::piecewise_construct_t const&,std::tuple<unsigned int &&>,std::tuple<>>( (uint64_t)v2,  &v3,  (uint64_t)&std::piecewise_construct,  &v4)
  + 5) = kDYReservedGLNameGLSLProgramPipelineStart;
  unsigned int v3 = 5890;
  uint8x8_t v4 = &v3;
  *((_DWORD *)std::__hash_table<std::__hash_value_type<unsigned int,unsigned int volatile>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int volatile>>>::__emplace_unique_key_args<unsigned int,std::piecewise_construct_t const&,std::tuple<unsigned int &&>,std::tuple<>>( (uint64_t)v2,  &v3,  (uint64_t)&std::piecewise_construct,  &v4)
  + 5) = kDYReservedGLNameTextureStart;
}

void sub_1CD7E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unsigned int v20 = *v18;
  if (*v18)
  {
    *(void *)(v11 + 280) = v20;
    operator delete(v20);
  }

  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100](v15);
  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100](v14);
  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100](v13);
  std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>>>::~__hash_table(v12);
  std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>>>::~__hash_table(a9);
  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100](a10);
  _Unwind_Resume(a1);
}

void SharegroupInfo::~SharegroupInfo(SharegroupInfo *this)
{
  int8x8_t v2 = (void *)*((void *)this + 34);
  if (v2)
  {
    *((void *)this + 35) = v2;
    operator delete(v2);
  }

  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100]((uint64_t)this + 232);
  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100]((uint64_t)this + 192);
  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100]((uint64_t)this + 152);
  std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>>>::~__hash_table((uint64_t)this + 104);
  std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>>>::~__hash_table((uint64_t)this + 64);
  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100]((uint64_t)this + 16);
}

void *ContextInfo::initialize(ContextInfo *this)
{
  uint64_t result = operator new(0x18uLL);
  result[2] = 0LL;
  result[1] = 0LL;
  *uint64_t result = result + 1;
  ContextInfo::activeCtxInfoMap = (uint64_t)result;
  return result;
}

uint64_t ContextInfo::ContextInfo(uint64_t a1, EAGLContext *a2, int a3, char a4)
{
  unint64_t v8 = GPUTools::GL::Context::Context((GPUTools::GL::Context *)a1, a2);
  *(_OWORD *)((char *)v8 + 72) = 0u;
  *((_DWORD *)v8 + 14) = 0;
  uint64_t v9 = (char *)v8 + 4837;
  unint64_t v10 = (_OWORD *)((char *)v8 + 120);
  *(_OWORD *)((char *)v8 + 8_Block_object_dispose((const void *)(v28 - 80), 8) = 0u;
  *(_OWORD *)((char *)v8 + 104) = 0u;
  for (uint64_t i = 120LL; i != 168; i += 24LL)
  {
    uint64_t v12 = a1 + i;
    *(void *)uint64_t v12 = 0LL;
    *(void *)(v12 + _Block_object_dispose((const void *)(v28 - 80), 8) = 0LL;
    *(_DWORD *)(v12 + 16) = 0;
  }

  *(_DWORD *)(a1 + 16_Block_object_dispose((const void *)(v28 - 80), 8) = 0;
  *(_DWORD *)(a1 + 3452) = 0;
  bzero((void *)(a1 + 176), 0xCB8uLL);
  *(_DWORD *)(a1 + 3456) = a3;
  *(_OWORD *)(a1 + 3472) = 0u;
  *(_OWORD *)(a1 + 348_Block_object_dispose((const void *)(v28 - 80), 8) = 0u;
  *(void *)(a1 + 3504) = 0LL;
  *(_DWORD *)(a1 + 3512) = 1065353216;
  *(_OWORD *)(a1 + 3520) = 0u;
  *(_OWORD *)(a1 + 3536) = 0u;
  *(_DWORD *)(a1 + 3552) = 1065353216;
  *(_OWORD *)(a1 + 3560) = 0u;
  *(_OWORD *)(a1 + 3576) = 0u;
  *(_DWORD *)(a1 + 3592) = 1065353216;
  *(_OWORD *)(a1 + 3600) = 0u;
  *(_OWORD *)(a1 + 3616) = 0u;
  *(_DWORD *)(a1 + 3632) = 1065353216;
  *(void *)(a1 + 3640) = 0LL;
  *(void *)(a1 + 3656) = 0LL;
  *(void *)(a1 + 364_Block_object_dispose((const void *)(v28 - 80), 8) = 0LL;
  *(_DWORD *)(a1 + 3664) = 0;
  *(_OWORD *)(a1 + 368_Block_object_dispose((const void *)(v28 - 80), 8) = 0u;
  *(_OWORD *)(a1 + 3704) = 0u;
  *(_OWORD *)(a1 + 3672) = 0u;
  bzero((void *)(a1 + 3736), 0x380uLL);
  *(_DWORD *)(a1 + 4640) = 0;
  *(_WORD *)uint64_t v9 = 0;
  v9[2] = 0;
  v9[3] = a4;
  *((_WORD *)v9 + 2) = 0;
  v9[6] = 0;
  uint64_t v14 = (dispatch_semaphore_s *)[(id)DYGetGLGuestAppClient(v13) graphicsSemaphore];
  dispatch_semaphore_wait(v14, 0xFFFFFFFFFFFFFFFFLL);
  uint64_t v15 = (_OWORD *)sharegroup_info_map;
  if (!sharegroup_info_map)
  {
    uint64_t v15 = operator new(0x28uLL);
    *uint64_t v15 = 0u;
    v15[1] = 0u;
    *((_DWORD *)v15 + _Block_object_dispose((const void *)(v28 - 80), 8) = 1065353216;
    sharegroup_info_map = (uint64_t)v15;
  }

  uint64_t v16 = std::__hash_table<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::__unordered_map_hasher<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::hash<EAGLSharegroup *>,std::equal_to<EAGLSharegroup *>,true>,std::__unordered_map_equal<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::equal_to<EAGLSharegroup *>,std::hash<EAGLSharegroup *>,true>,std::allocator<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>>>::find<EAGLSharegroup *>( v15,  (void *)(a1 + 8));
  if (v16)
  {
    uint64_t v17 = v16[3];
    *(void *)(a1 + 40) = v17;
    ++*(_DWORD *)(v17 + 8);
  }

  else
  {
    id v18 = (SharegroupInfo *)operator new(0x178uLL);
    SharegroupInfo::SharegroupInfo(v18, *(EAGLSharegroup **)(a1 + 8));
    *(void *)(a1 + 40) = v18;
    *(void *)&__int128 v27 = *(void *)(a1 + 8);
    *((void *)&v27 + 1) = v18;
    uint64_t v16 = std::__hash_table<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::__unordered_map_hasher<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::hash<EAGLSharegroup *>,std::equal_to<EAGLSharegroup *>,true>,std::__unordered_map_equal<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::equal_to<EAGLSharegroup *>,std::hash<EAGLSharegroup *>,true>,std::allocator<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>>>::__emplace_unique_key_args<EAGLSharegroup *,std::pair<EAGLSharegroup * const,SharegroupInfo *>>( sharegroup_info_map,  &v27,  &v27);
  }

  v10[1] = 0u;
  v10[2] = 0u;
  *unint64_t v10 = 0u;
  else {
    update_dispatch_table(*(void *)a1);
  }
  uint64_t v19 = copy_renderers_info(a1);
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v28 - 80), 8) = v19;
  ValueAtIndex = (void *)CFArrayGetValueAtIndex((CFArrayRef)v19, *(unsigned int *)(a1 + 56));
  if (![ValueAtIndex extensions])
  {
    unsigned int v25 = "renderer_info.extensions";
    goto LABEL_28;
  }

  *(void *)(a1 + 64) = CFRetain([ValueAtIndex extensions]);
  *(void *)(v9 + 10) = 0LL;
  v9[8] = 0;
  *(void *)(v9 + 1_Block_object_dispose((const void *)(v28 - 80), 8) = 0LL;
  *(void *)(v9 + 26) = 0LL;
  *(_DWORD *)(v9 + 33) = 0;
  switch(*(_DWORD *)(a1 + 3456))
  {
    case 0:
      v9[7] = 1;
      *(_DWORD *)(a1 + 3460) = 2;
      v9[14] = 1;
      v9[16] = 1;
      *(_WORD *)(v9 + 19) = 257;
      v9[21] = 1;
      v9[23] = 1;
      *((_WORD *)v9 + 13) = 257;
      v9[31] = 1;
      v9[33] = 1;
      break;
    case 1:
      v9[7] = 0;
      *(_DWORD *)(a1 + 3460) = 0;
      v9[14] = 1;
      v9[16] = 1;
      v9[21] = 1;
      goto LABEL_18;
    case 2:
      v9[7] = 0;
      *(_DWORD *)(a1 + 3460) = 1;
      v9[16] = 1;
LABEL_18:
      v9[26] = 1;
      break;
    case 3:
      *(_WORD *)(v9 + 7) = 257;
      *(_DWORD *)(a1 + 3460) = 3;
      *((_WORD *)v9 + 5) = 257;
      v9[13] = 1;
      v9[15] = 1;
      *(_WORD *)(v9 + 19) = 257;
      *((_WORD *)v9 + 11) = 257;
      *(_DWORD *)(v9 + 31) = 16843009;
      v9[35] = 1;
      break;
    case 4:
      v9[7] = 0;
      *(_DWORD *)(a1 + 3460) = 3;
      *((_WORD *)v9 + 5) = 257;
      v9[13] = 1;
      *(_WORD *)(v9 + 15) = 257;
      v9[17] = 1;
      *(_WORD *)(v9 + 19) = 257;
      *((_WORD *)v9 + 11) = 257;
      *(_WORD *)(v9 + 25) = 257;
      v9[33] = 1;
      *((_DWORD *)v9 + 7) = 16843009;
      break;
    default:
      break;
  }

  ContextInfo::set_capability( a1,  (BOOL *)(a1 + 4846),  "GL_ARB_separate_shader_objects",  "GL_EXT_separate_shader_objects",  0LL);
  ContextInfo::set_capability( a1,  (BOOL *)v9 + 10,  "GL_ARB_framebuffer_object",  "GL_EXT_framebuffer_blit",  "GL_APPLE_framebuffer_multisample",  0LL);
  ContextInfo::set_capability( a1,  (BOOL *)v9 + 11,  "GL_ARB_framebuffer_object",  "GL_EXT_framebuffer_multisample",  "GL_APPLE_framebuffer_multisample",  0LL);
  ContextInfo::set_capability(a1, (BOOL *)(a1 + 4849), "GL_APPLE_flush_buffer_range", 0LL);
  ContextInfo::set_capability( a1,  (BOOL *)v9 + 13,  "GL_ARB_map_buffer_range",  "GL_EXT_map_buffer_range",  "GL_OES_map_buffer_range",  0LL);
  ContextInfo::set_capability( a1,  (BOOL *)v9 + 15,  "GL_APPLE_vertex_array_object",  "GL_ARB_vertex_array_object",  "GL_OES_vertex_array_object",  0LL);
  ContextInfo::set_capability(a1, (BOOL *)v9 + 17, "GL_ARB_instanced_arrays", "GL_EXT_instanced_arrays", 0LL);
  ContextInfo::set_capability(a1, (BOOL *)(a1 + 4855), "GL_EXT_debug_label", 0LL);
  ContextInfo::set_capability(a1, (BOOL *)v9 + 19, "GL_APPLE_texture_max_level", 0LL);
  ContextInfo::set_capability(a1, (BOOL *)v9 + 22, "GL_ARB_sync", "GL_APPLE_sync", 0LL);
  ContextInfo::set_capability(a1, (BOOL *)v9 + 23, "GL_EXT_shadow_samplers", 0LL);
  ContextInfo::set_capability(a1, (BOOL *)(a1 + 4861), "GL_APPLE_row_bytes", 0LL);
  ContextInfo::set_capability(a1, (BOOL *)v9 + 25, "GL_ARB_transform_feedback2", 0LL);
  ContextInfo::set_capability(a1, (BOOL *)v9 + 28, "GL_ARB_sampler_objects", 0LL);
  ContextInfo::set_capability(a1, (BOOL *)(a1 + 4866), "GL_ARB_texture_swizzle", 0LL);
  ContextInfo::set_capability(a1, (BOOL *)(a1 + 4867), "GL_EXT_texture_storage", 0LL);
  ContextInfo::set_capability(a1, (BOOL *)v9 + 31, "GL_EXT_occlusion_query_BOOLean", 0LL);
  ContextInfo::set_capability(a1, (BOOL *)(a1 + 4869), "GL_EXT_framebuffer_sRGB", 0LL);
  ContextInfo::set_capability(a1, (BOOL *)(a1 + 4873), "GL_APPLE_clip_distance", 0LL);
  if (is_extension_available(a1, "GL_APPLE_container_object_shareable")) {
    *((_WORD *)v9 + 13) = 257;
  }
  if (is_extension_available(a1, "GL_EXT_draw_buffers2")) {
    *((_WORD *)v9 + 17) = 257;
  }
  uint64_t v21 = *(void *)(a1 + 32);
  *(void *)&__int128 v27 = a1;
  *((void *)&v27 + 1) = v21;
  uint64_t v22 = *(unsigned int *)(a1 + 3456);
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472LL;
  v26[2] = ___ZN11ContextInfoC2EP11EAGLContext11DYOpenGLAPIb_block_invoke;
  v26[3] = &__block_descriptor_40_e8_v12__0I8l;
  v26[4] = a1;
  GPUTools::GL::EnumerateTextureTargets(&v27, v22, v26);
  query_texture_unit_limits(a1, (_DWORD *)(a1 + 3432));
  if (*(_DWORD *)(a1 + 3456) != 1)
  {
    (*(void (**)(void, uint64_t, uint64_t))(*(void *)(a1 + 32) + 832LL))( *(void *)(a1 + 16),  34921LL,  a1 + 3452);
    if (*(_DWORD *)(a1 + 3452) >= 0x21u)
    {
      unsigned int v25 = "max_vertex_attribs <= DY_VA_CACHE_MAX_GENERIC";
LABEL_28:
      __assert_rtn("ContextInfo::ContextInfo(glctx_t, DYOpenGLAPI, BOOL)", (const char *)&unk_1F0B16, 0, v25);
    }
  }

  update_context_state_cache(a1);
  *(void *)(a1 + 3720) = 0LL;
  *(void *)(a1 + 372_Block_object_dispose((const void *)(v28 - 80), 8) = mach_absolute_time();
  *(_OWORD *)(a1 + 4644) = 0u;
  *(_OWORD *)(a1 + 4660) = 0u;
  *(_OWORD *)(a1 + 4676) = 0u;
  *(_OWORD *)(a1 + 4692) = 0u;
  *(_OWORD *)(a1 + 470_Block_object_dispose((const void *)(v28 - 80), 8) = 0u;
  *(_OWORD *)(a1 + 4724) = 0u;
  *(_OWORD *)(a1 + 4740) = 0u;
  *(_OWORD *)(a1 + 4756) = 0u;
  *(_OWORD *)(a1 + 4772) = 0u;
  *(_OWORD *)(a1 + 478_Block_object_dispose((const void *)(v28 - 80), 8) = 0u;
  *(_OWORD *)(a1 + 4804) = 0u;
  *(_OWORD *)(a1 + 4820) = 0u;
  *(_BYTE *)(a1 + 4836) = 0;
  *(void *)(a1 + 3464) = [[DYContextInfo alloc] initWithIdentifier:a2 sharegroupIdentifier:*(void *)(a1 + 8) renderers:*(void *)(a1 + 48) currentRendererIndex:*(unsigned int *)(a1 + 56) api:*(unsigned int *)(a1 + 3456)];
  unsigned int v23 = (uint64_t *)operator new(0x18uLL);
  std::map<__GLIContextRec *,ContextInfo *>::map[abi:ne180100](v23, ContextInfo::activeCtxInfoMap);
  std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__erase_unique<__GLIContextRec *>( (uint64_t)v23,  (unint64_t *)(a1 + 16));
  *(void *)&__int128 v27 = *(void *)(a1 + 16);
  *((void *)&v27 + 1) = a1;
  std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__emplace_unique_key_args<__GLIContextRec *,std::pair<__GLIContextRec * const,ContextInfo *>>( (uint64_t **)v23,  (unint64_t *)&v27,  &v27);
  swap_ctx_info_map((unint64_t)v23);
  dispatch_semaphore_signal(v14);
  return a1;
}

void sub_1CE01C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  unsigned int v25 = (void **)(v21 + 434);
  std::vector<std::function<void ()(ContextInfo *)>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a21);
  unsigned int v26 = (void *)v21[455];
  if (v26)
  {
    v21[456] = v26;
    operator delete(v26);
  }

  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100]((uint64_t)(v21 + 450));
  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100](a14);
  std::__hash_table<std::__hash_value_type<void const*,std::string>,std::__unordered_map_hasher<void const*,std::__hash_value_type<void const*,std::string>,std::hash<void const*>,std::equal_to<void const*>,true>,std::__unordered_map_equal<void const*,std::__hash_value_type<void const*,std::string>,std::equal_to<void const*>,std::hash<void const*>,true>,std::allocator<std::__hash_value_type<void const*,std::string>>>::~__hash_table((uint64_t)(v21 + 440));
  std::__hash_table<std::__hash_value_type<void const*,std::string>,std::__unordered_map_hasher<void const*,std::__hash_value_type<void const*,std::string>,std::hash<void const*>,std::equal_to<void const*>,true>,std::__unordered_map_equal<void const*,std::__hash_value_type<void const*,std::string>,std::equal_to<void const*>,std::hash<void const*>,true>,std::allocator<std::__hash_value_type<void const*,std::string>>>::~__hash_table((uint64_t)(v21 + 435));
  __int128 v27 = *v25;
  *unsigned int v25 = 0LL;
  if (v27) {
    std::default_delete<GPUTools::ResourceUpdater>::operator()[abi:ne180100]((uint64_t)(v21 + 434), v27);
  }
  BOOL v28 = (void *)v21[426];
  if (v28)
  {
    v21[427] = v28;
    operator delete(v28);
  }

  uint64_t v29 = 0LL;
  unsigned int v30 = v21 + 18;
  while (1)
  {
    unsigned int v31 = &v30[v29];
    unsigned int v32 = (void *)v30[v29];
    if (v32) {
      free(v32);
    }
    void *v31 = 0LL;
    v31[1] = 0LL;
    *((_DWORD *)v31 + 4) = 0;
    v29 -= 3LL;
    if (v29 == -6)
    {
      a21 = a15;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a21);
      unsigned int v33 = *v23;
      if (*v23)
      {
        v21[10] = v33;
        operator delete(v33);
      }

      _Unwind_Resume(a1);
    }
  }

GPUTools::GL::Context *GPUTools::GL::Context::Context(GPUTools::GL::Context *this, EAGLContext *a2)
{
  *(void *)this = a2;
  *((void *)this + 1) = -[EAGLContext sharegroup](a2, "sharegroup");
  *((void *)this + 2) = GLIContextFromEAGLContext(*(void *)this);
  *((void *)this + 3) = GLCFrontDispatch(*(void *)this);
  *((void *)this + 4) = GLCBackDispatch(*(void *)this);
  return this;
}

BOOL ContextInfo::set_capability(BOOL this, BOOL *a2, ...)
{
  if (!*a2)
  {
    uint64_t v3 = this;
    va_copy(v5, va);
    while (1)
    {
      uint8x8_t v4 = va_arg(v5, const char *);
      if (!v4) {
        break;
      }
      this = is_extension_available(v3, v4);
      if (this)
      {
        *a2 = 1;
        return this;
      }
    }
  }

  return this;
}

void ___ZN11ContextInfoC2EP11EAGLContext11DYOpenGLAPIb_block_invoke(uint64_t a1, int a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  uint8x8_t v4 = (char *)v3[427];
  unint64_t v5 = v3[428];
  if ((unint64_t)v4 >= v5)
  {
    uint64_t v7 = (char *)v3[426];
    uint64_t v8 = (v4 - v7) >> 2;
    unint64_t v9 = v5 - (void)v7;
    unint64_t v10 = (uint64_t)(v5 - (void)v7) >> 1;
    if (v10 <= v8 + 1) {
      unint64_t v10 = v8 + 1;
    }
    if (v9 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11)
    {
      uint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(v3 + 428), v11);
      uint8x8_t v4 = (char *)v3[427];
      uint64_t v7 = (char *)v3[426];
    }

    else
    {
      uint64_t v12 = 0LL;
    }

    uint64_t v13 = &v12[4 * v8];
    uint64_t v14 = &v12[4 * v11];
    *(_DWORD *)uint64_t v13 = a2;
    uint64_t v6 = v13 + 4;
    while (v4 != v7)
    {
      int v15 = *((_DWORD *)v4 - 1);
      v4 -= 4;
      *((_DWORD *)v13 - 1) = v15;
      v13 -= 4;
    }

    v3[426] = v13;
    v3[427] = v6;
    v3[428] = v14;
    if (v7) {
      operator delete(v7);
    }
  }

  else
  {
    *(_DWORD *)uint8x8_t v4 = a2;
    uint64_t v6 = v4 + 4;
  }

  v3[427] = v6;
}

void swap_ctx_info_map(unint64_t a1)
{
  do
    unint64_t v1 = __ldaxr((unint64_t *)&ContextInfo::activeCtxInfoMap);
  while (__stlxr(a1, (unint64_t *)&ContextInfo::activeCtxInfoMap));
  dispatch_time_t v2 = dispatch_time(0LL, 10000000000LL);
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(-2LL, 0LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = ___ZL17swap_ctx_info_mapPNSt3__13mapIP15__GLIContextRecP11ContextInfoNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEE_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = v1;
  dispatch_after(v2, global_queue, block);
}

void ContextInfo::PostEncodeInit(ContextInfo *this)
{
  dispatch_time_t v2 = (GPUTools::ResourceUpdater *)operator new(0xA0uLL);
  GPUTools::ResourceUpdater::ResourceUpdater(v2, this);
  uint64_t v3 = (void *)*((void *)this + 434);
  *((void *)this + 434) = v2;
  if (v3) {
    std::default_delete<GPUTools::ResourceUpdater>::operator()[abi:ne180100]((uint64_t)this + 3472, v3);
  }
}

void sub_1CE3B0(_Unwind_Exception *a1)
{
}

void ContextInfo::~ContextInfo(ContextInfo *this)
{
  dispatch_time_t v2 = (dispatch_semaphore_s *)[(id)DYGetGLGuestAppClient(this) graphicsSemaphore];
  dispatch_semaphore_wait(v2, 0xFFFFFFFFFFFFFFFFLL);
  uint64_t v3 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v3) {
    goto LABEL_12;
  }
  unint64_t v4 = *((void *)this + 2);
  uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v6 = v3[4];
    BOOL v7 = v6 >= v4;
    if (v6 >= v4) {
      uint64_t v8 = v3;
    }
    else {
      uint64_t v8 = v3 + 1;
    }
    if (v7) {
      uint64_t v5 = (uint64_t)v3;
    }
    uint64_t v3 = (void *)*v8;
  }

  while (*v8);
  if (v5 == ContextInfo::activeCtxInfoMap + 8 || v4 < *(void *)(v5 + 32)) {
LABEL_12:
  }
    uint64_t v5 = ContextInfo::activeCtxInfoMap + 8;
  if (*(ContextInfo **)(v5 + 40) == this)
  {
    unint64_t v9 = (uint64_t *)operator new(0x18uLL);
    std::map<__GLIContextRec *,ContextInfo *>::map[abi:ne180100](v9, ContextInfo::activeCtxInfoMap);
    std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__erase_unique<__GLIContextRec *>( (uint64_t)v9,  (unint64_t *)this + 2);
    swap_ctx_info_map((unint64_t)v9);
  }

  uint64_t v10 = *((void *)this + 5);
  int v11 = *(_DWORD *)(v10 + 8) - 1;
  *(_DWORD *)(v10 + _Block_object_dispose((const void *)(v28 - 80), 8) = v11;
  if (!v11)
  {
    uint64_t v12 = (void *)sharegroup_info_map;
    uint64_t v13 = std::__hash_table<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::__unordered_map_hasher<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::hash<EAGLSharegroup *>,std::equal_to<EAGLSharegroup *>,true>,std::__unordered_map_equal<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::equal_to<EAGLSharegroup *>,std::hash<EAGLSharegroup *>,true>,std::allocator<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>>>::find<EAGLSharegroup *>( (void *)sharegroup_info_map,  (void *)v10);
    std::__hash_table<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::__unordered_map_hasher<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::hash<EAGLSharegroup *>,std::equal_to<EAGLSharegroup *>,true>,std::__unordered_map_equal<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::equal_to<EAGLSharegroup *>,std::hash<EAGLSharegroup *>,true>,std::allocator<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>>>::erase( v12,  v13);
    uint64_t v14 = (SharegroupInfo *)*((void *)this + 5);
    if (v14)
    {
      SharegroupInfo::~SharegroupInfo(v14);
      operator delete(v15);
    }
  }

  uint64_t v16 = (const void *)*((void *)this + 6);
  if (v16) {
    CFRelease(v16);
  }
  uint64_t v17 = (const void *)*((void *)this + 8);
  if (v17) {
    CFRelease(v17);
  }

  if (!*((_BYTE *)this + 4840))
  {
    uint64_t v19 = (dispatch_queue_s *)[(id)DYGetGLGuestAppClient(v18) globalSyncQueue];
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472LL;
    v27[2] = ___ZN11ContextInfoD2Ev_block_invoke;
    v27[3] = &__block_descriptor_40_e5_v8__0l;
    v27[4] = this;
    dispatch_sync(v19, v27);
  }

  dispatch_semaphore_signal(v2);
  BOOL v28 = (void **)((char *)this + 3672);
  std::vector<std::function<void ()(ContextInfo *)>>::__destroy_vector::operator()[abi:ne180100](&v28);
  unsigned int v20 = (void *)*((void *)this + 455);
  if (v20)
  {
    *((void *)this + 456) = v20;
    operator delete(v20);
  }

  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100]((uint64_t)this + 3600);
  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100]((uint64_t)this + 3560);
  std::__hash_table<std::__hash_value_type<void const*,std::string>,std::__unordered_map_hasher<void const*,std::__hash_value_type<void const*,std::string>,std::hash<void const*>,std::equal_to<void const*>,true>,std::__unordered_map_equal<void const*,std::__hash_value_type<void const*,std::string>,std::equal_to<void const*>,std::hash<void const*>,true>,std::allocator<std::__hash_value_type<void const*,std::string>>>::~__hash_table((uint64_t)this + 3520);
  std::__hash_table<std::__hash_value_type<void const*,std::string>,std::__unordered_map_hasher<void const*,std::__hash_value_type<void const*,std::string>,std::hash<void const*>,std::equal_to<void const*>,true>,std::__unordered_map_equal<void const*,std::__hash_value_type<void const*,std::string>,std::equal_to<void const*>,std::hash<void const*>,true>,std::allocator<std::__hash_value_type<void const*,std::string>>>::~__hash_table((uint64_t)this + 3480);
  uint64_t v21 = (void *)*((void *)this + 434);
  *((void *)this + 434) = 0LL;
  if (v21) {
    std::default_delete<GPUTools::ResourceUpdater>::operator()[abi:ne180100]((uint64_t)this + 3472, v21);
  }
  uint64_t v22 = (void *)*((void *)this + 426);
  if (v22)
  {
    *((void *)this + 427) = v22;
    operator delete(v22);
  }

  for (uint64_t i = 144LL; i != 96; i -= 24LL)
  {
    id v24 = (char *)this + i;
    unsigned int v25 = *(void **)((char *)this + i);
    if (v25) {
      free(v25);
    }
    *(void *)id v24 = 0LL;
    *((void *)v24 + 1) = 0LL;
    *((_DWORD *)v24 + 4) = 0;
  }

  BOOL v28 = (void **)((char *)this + 96);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v28);
  unsigned int v26 = (void *)*((void *)this + 9);
  if (v26)
  {
    *((void *)this + 10) = v26;
    operator delete(v26);
  }

void *___ZN11ContextInfoD2Ev_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t result = [(id)DYGetGLGuestAppClient(a1) state];
  if (result == (void *)((char *)&dword_0 + 3))
  {
    uint64_t result = [(id)DYGetGLGuestAppClient(3) activeCaptureState];
    uint64_t v3 = result;
    unint64_t v4 = *(void **)(v1 + 3496);
    if (v4)
    {
      uint64_t v5 = (uint64_t)result + OBJC_IVAR___DYCaptureState__dispatchQueueLabelMap;
      do
      {
        uint64_t result = std::__hash_table<std::__hash_value_type<void const*,std::string>,std::__unordered_map_hasher<void const*,std::__hash_value_type<void const*,std::string>,std::hash<void const*>,std::equal_to<void const*>,true>,std::__unordered_map_equal<void const*,std::__hash_value_type<void const*,std::string>,std::equal_to<void const*>,std::hash<void const*>,true>,std::allocator<std::__hash_value_type<void const*,std::string>>>::__emplace_unique_key_args<void const*,std::pair<void const* const,std::string> const&>( v5,  v4 + 2,  (uint64_t)(v4 + 2));
        unint64_t v4 = (void *)*v4;
      }

      while (v4);
    }

    unint64_t v6 = *(void **)(v1 + 3536);
    if (v6)
    {
      uint64_t v7 = (uint64_t)v3 + OBJC_IVAR___DYCaptureState__threadLabelMap;
      do
      {
        uint64_t result = std::__hash_table<std::__hash_value_type<unsigned long long,std::string>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,std::string>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,std::string>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,std::string>>>::__emplace_unique_key_args<unsigned long long,std::pair<unsigned long long const,std::string> const&>( v7,  v6 + 2,  (uint64_t)(v6 + 2));
        unint64_t v6 = (void *)*v6;
      }

      while (v6);
    }
  }

  return result;
}

void StringBuffer::StringBuffer(StringBuffer *this)
{
  *(void *)this = 0LL;
  *((void *)this + 1) = 0LL;
}

void StringBuffer::reserve(void **this, size_t __size)
{
  if (__size)
  {
    if ((unint64_t)this[1] < __size)
    {
      unint64_t v4 = reallocf(*this, __size);
      *unint64_t v4 = 0;
      *this = v4;
      this[1] = (void *)__size;
    }
  }

  else
  {
    uint64_t v5 = *this;
    if (*this) {
      free(v5);
    }
    *this = 0LL;
    this[1] = 0LL;
  }

void StringBuffer::~StringBuffer(void **this)
{
  uint64_t v1 = *this;
  if (v1) {
    free(v1);
  }
}

void ObjectNameArray::ObjectNameArray(ObjectNameArray *this, unint64_t a2)
{
  dispatch_time_t v2 = this;
  *((void *)this + 5) = a2;
  if (a2 >= 9)
  {
    if (a2 >> 62) {
      size_t v3 = -1LL;
    }
    else {
      size_t v3 = 4 * a2;
    }
    this = (ObjectNameArray *)operator new[](v3);
  }

  *((void *)v2 + 4) = this;
}

void ObjectNameArray::~ObjectNameArray(ObjectNameArray *this)
{
  dispatch_time_t v2 = (ObjectNameArray *)*((void *)this + 4);
  if (v2 != this && v2 != 0LL) {
    operator delete[](v2);
  }
}

void ShaderInfo::ShaderInfo(ShaderInfo *this, ContextInfo *a2)
{
  size_t v3 = operator new(0x28uLL);
  v3[1] = 0LL;
  v3[2] = 0LL;
  *size_t v3 = off_1F8C98;
  _BYTE v3[4] = 0LL;
  *((void *)this + 1) = v3;
  v3[3] = 0LL;
  *(void *)this = v3 + 3;
  unint64_t v4 = operator new(0x28uLL);
  v4[1] = 0LL;
  v4[2] = 0LL;
  *unint64_t v4 = off_1F8C98;
  v4[4] = 0LL;
  v4[3] = 0LL;
  *((void *)this + 2) = v4 + 3;
  *((void *)this + 3) = v4;
  uint64_t v5 = operator new(0x28uLL);
  v5[1] = 0LL;
  _DWORD v5[2] = 0LL;
  *uint64_t v5 = off_1F8C98;
  v5[3] = 0LL;
  _BYTE v5[4] = 0LL;
  *((void *)this + 4) = v5 + 3;
  *((void *)this + 5) = v5;
  *((_DWORD *)this + 12) = 0;
  *((_BYTE *)this + 52) = 0;
}

void sub_1CE83C(_Unwind_Exception *a1)
{
}

void ProgramShaderInfo::ProgramShaderInfo(ProgramShaderInfo *this, int a2, const ShaderInfo *a3)
{
  *(_DWORD *)this = a2;
  uint64_t v3 = *((void *)a3 + 1);
  *((void *)this + 1) = *(void *)a3;
  *((void *)this + 2) = v3;
  if (v3)
  {
    unint64_t v4 = (unint64_t *)(v3 + 8);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }

  uint64_t v6 = *((void *)a3 + 3);
  *((void *)this + 3) = *((void *)a3 + 2);
  *((void *)this + 4) = v6;
  if (v6)
  {
    uint64_t v7 = (unint64_t *)(v6 + 8);
    do
      unint64_t v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }

  uint64_t v9 = *((void *)a3 + 5);
  *((void *)this + 5) = *((void *)a3 + 4);
  *((void *)this + 6) = v9;
  if (v9)
  {
    uint64_t v10 = (unint64_t *)(v9 + 8);
    do
      unint64_t v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }

void ProgramXfb::ProgramXfb(ProgramXfb *this)
{
  *((void *)this + 1) = 0LL;
  *((void *)this + 2) = 0LL;
  *((_BYTE *)this + 32) = 0;
  *((void *)this + 3) = 0LL;
}

void ProgramXfb::clear(ProgramXfb *this)
{
  *((_BYTE *)this + 32) = 0;
}

uint64_t ProgramXfb::update(ProgramXfb *this, ContextInfo *a2, uint64_t a3)
{
  *((_BYTE *)this + 32) = 0;
  uint64_t v6 = *((void *)a2 + 4);
  uint64_t v9 = a2;
  uint64_t v10 = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = ___ZN10ProgramXfb6updateER11ContextInfoj_block_invoke;
  v8[3] = &__block_descriptor_40_e52_v24__0r__ProgramTransformFeedbackVarying__iIiI_8_B16l;
  v8[4] = this;
  GPUTools::GL::EnumerateProgramTransformFeedbackVaryings(&v9, a3, v8);
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, ProgramXfb *))(v10 + 5264))( *((void *)v9 + 2),  a3,  35967LL,  this);
  *((_BYTE *)this + 32) = 1;
  return result;
}

uint64_t ___ZN10ProgramXfb6updateER11ContextInfoj_block_invoke(uint64_t a1, char **a2)
{
  uint64_t v2 = *(uint64_t **)(a1 + 32);
  unint64_t v3 = v2[2];
  if (v3 >= v2[3])
  {
    uint64_t result = std::vector<std::string>::__emplace_back_slow_path<char * const&>(v2 + 1, a2);
  }

  else
  {
    std::string::basic_string[abi:ne180100]<0>((void *)v2[2], *a2);
    uint64_t result = v3 + 24;
    v2[2] = v3 + 24;
  }

  v2[2] = result;
  return result;
}

void sub_1CEA00(_Unwind_Exception *a1)
{
  *(void *)(v2 + 16) = v1;
  _Unwind_Resume(a1);
}

void ProgramPipelineInfo::ProgramPipelineInfo(ProgramPipelineInfo *this)
{
  *((void *)this + 14) = 0LL;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  uint64_t v2 = operator new(0x28uLL);
  v2[1] = 0LL;
  v2[2] = 0LL;
  *uint64_t v2 = off_1F8C98;
  v2[4] = 0LL;
  v2[3] = 0LL;
  *((void *)this + 15) = v2 + 3;
  *((void *)this + 16) = v2;
  *((void *)this + 17) = 0LL;
}

void sub_1CEA84( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  a10 = v10 + 12;
  std::vector<ProgramShaderInfo>::__destroy_vector::operator()[abi:ne180100](&a10);
  a10 = v10 + 9;
  std::vector<ProgramShaderInfo>::__destroy_vector::operator()[abi:ne180100](&a10);
  a10 = v10 + 6;
  std::vector<ProgramShaderInfo>::__destroy_vector::operator()[abi:ne180100](&a10);
  a10 = v10 + 3;
  std::vector<ProgramShaderInfo>::__destroy_vector::operator()[abi:ne180100](&a10);
  a10 = v10;
  std::vector<ProgramShaderInfo>::__destroy_vector::operator()[abi:ne180100](&a10);
  _Unwind_Resume(a1);
}

void ProgramInfo::ProgramInfo(ProgramInfo *this, ContextInfo *a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t *)(v6 + 144);
  ProgramPipelineInfo::ProgramPipelineInfo((ProgramPipelineInfo *)(v6 + 144));
  *((void *)this + 37) = 0LL;
  *((void *)this + 3_Block_object_dispose((const void *)(v28 - 80), 8) = 0LL;
  *((_BYTE *)this + 320) = 0;
  *((void *)this + 39) = 0LL;
  *(_OWORD *)((char *)this + 32_Block_object_dispose((const void *)(v28 - 80), 8) = 0u;
  *(_OWORD *)((char *)this + 344) = 0u;
  *((_DWORD *)this + 90) = 1065353216;
  *((void *)this + 46) = 0LL;
  *((_WORD *)this + 18_Block_object_dispose((const void *)(v28 - 80), 8) = 0;
  if (*((_BYTE *)a2 + 4846))
  {
    (*(void (**)(void, uint64_t, uint64_t, int *))(*((void *)a2 + 4) + 5264LL))( *((void *)a2 + 2),  a3,  33368LL,  &v9);
    *((void *)this + 17) = *((void *)this + 17) & 0xFFFFFFFFFFFFFFFELL | (v9 != 0);
  }

  if (*((_DWORD *)a2 + 864) == 4)
  {
    (*(void (**)(void, uint64_t, uint64_t, int *))(*((void *)a2 + 4) + 5264LL))( *((void *)a2 + 2),  a3,  33367LL,  &v9);
    *((void *)this + 17) = *((void *)this + 17) & 0xFFFFFFFFFFFFFFFDLL | (2LL * (v9 != 0));
  }

  (*(void (**)(void, uint64_t, uint64_t, int *))(*((void *)a2 + 4) + 5264LL))( *((void *)a2 + 2),  a3,  35714LL,  &v8);
  if (v8)
  {
    std::vector<ProgramShaderInfo>::__assign_with_size[abi:ne180100]<ProgramShaderInfo*,ProgramShaderInfo*>( v7,  *(void *)this,  *((void *)this + 1),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*((void *)this + 1) - *(void *)this) >> 3));
    std::vector<ProgramShaderInfo>::__assign_with_size[abi:ne180100]<ProgramShaderInfo*,ProgramShaderInfo*>( (uint64_t *)this + 21,  *((void *)this + 3),  *((void *)this + 4),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*((void *)this + 4) - *((void *)this + 3)) >> 3));
    std::vector<ProgramShaderInfo>::__assign_with_size[abi:ne180100]<ProgramShaderInfo*,ProgramShaderInfo*>( (uint64_t *)this + 24,  *((void *)this + 6),  *((void *)this + 7),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*((void *)this + 7) - *((void *)this + 6)) >> 3));
    std::vector<ProgramShaderInfo>::__assign_with_size[abi:ne180100]<ProgramShaderInfo*,ProgramShaderInfo*>( (uint64_t *)this + 27,  *((void *)this + 9),  *((void *)this + 10),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*((void *)this + 10) - *((void *)this + 9)) >> 3));
    std::vector<ProgramShaderInfo>::__assign_with_size[abi:ne180100]<ProgramShaderInfo*,ProgramShaderInfo*>( (uint64_t *)this + 30,  *((void *)this + 12),  *((void *)this + 13),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*((void *)this + 13) - *((void *)this + 12)) >> 3));
    std::shared_ptr<StringBuffer>::operator=[abi:ne180100]((void *)this + 33, (uint64_t *)this + 15);
    *((void *)this + 35) = *((void *)this + 17);
  }

void sub_1CECAC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  a10 = v10 + 37;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a10);
  ProgramPipelineInfo::~ProgramPipelineInfo(v11);
  ProgramPipelineInfo::~ProgramPipelineInfo(v10);
  _Unwind_Resume(a1);
}

void ProgramPipelineInfo::~ProgramPipelineInfo(void **this)
{
  uint64_t v2 = this + 12;
  std::vector<ProgramShaderInfo>::__destroy_vector::operator()[abi:ne180100](&v2);
  uint64_t v2 = this + 9;
  std::vector<ProgramShaderInfo>::__destroy_vector::operator()[abi:ne180100](&v2);
  uint64_t v2 = this + 6;
  std::vector<ProgramShaderInfo>::__destroy_vector::operator()[abi:ne180100](&v2);
  uint64_t v2 = this + 3;
  std::vector<ProgramShaderInfo>::__destroy_vector::operator()[abi:ne180100](&v2);
  uint64_t v2 = this;
  std::vector<ProgramShaderInfo>::__destroy_vector::operator()[abi:ne180100](&v2);
}

void ___ZL17swap_ctx_info_mapPNSt3__13mapIP15__GLIContextRecP11ContextInfoNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEE_block_invoke( uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 32);
  if (v1)
  {
    std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::destroy( *(void *)(a1 + 32),  v1[1]);
    operator delete(v1);
  }

void std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::destroy( uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::destroy( a1,  *a2);
    std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::destroy( a1,  a2[1]);
    operator delete(a2);
  }

void std::vector<ProgramShaderInfo>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<ProgramShaderInfo>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, (uint64_t)*v2);
    operator delete(**a1);
  }

uint64_t std::vector<ProgramShaderInfo>::__base_destruct_at_end[abi:ne180100](uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (uint64_t i = *(void *)(result + 8); i != a2; i -= 56LL)
  {
    std::shared_ptr<ShaderInfo>::~shared_ptr[abi:ne180100](i - 16);
    std::shared_ptr<ShaderInfo>::~shared_ptr[abi:ne180100](i - 32);
    uint64_t result = std::shared_ptr<ShaderInfo>::~shared_ptr[abi:ne180100](i - 48);
  }

  *(void *)(v3 + _Block_object_dispose((const void *)(v28 - 80), 8) = a2;
  return result;
}

void *std::shared_ptr<StringBuffer>::operator=[abi:ne180100](void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  if (v3)
  {
    unint64_t v5 = (unint64_t *)(v3 + 8);
    do
      unint64_t v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }

  uint64_t v7 = (std::__shared_weak_count *)a1[1];
  *a1 = v4;
  a1[1] = v3;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }

  return a1;
}

uint64_t std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>>>::~__hash_table( uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0LL;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>>>::__deallocate_node( uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      std::shared_ptr<ShaderInfo>::~shared_ptr[abi:ne180100]((uint64_t)(v2 + 3));
      operator delete(v2);
      uint64_t v2 = v3;
    }

    while (v3);
  }

uint64_t std::shared_ptr<ShaderInfo>::~shared_ptr[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      unint64_t v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  return a1;
}

void *std::__hash_table<std::__hash_value_type<unsigned int,unsigned int volatile>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int volatile>>>::__emplace_unique_key_args<unsigned int,std::piecewise_construct_t const&,std::tuple<unsigned int &&>,std::tuple<>>( uint64_t a1, unsigned int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }

    else
    {
      unint64_t v4 = ((_DWORD)v8 - 1) & v7;
    }

    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      unint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == (_DWORD)v7) {
              return v11;
            }
          }

          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }

            else
            {
              v12 &= v8 - 1;
            }

            if (v12 != v4) {
              break;
            }
          }

          unint64_t v11 = (void *)*v11;
        }

        while (v11);
      }
    }
  }

  unint64_t v11 = operator new(0x18uLL);
  *unint64_t v11 = 0LL;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  *((_DWORD *)v11 + 5) = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1LL;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    std::__hash_table<std::__hash_value_type<unsigned int,unsigned int volatile>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int volatile>>>::__rehash<true>( a1,  v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }

    else
    {
      unint64_t v4 = ((_DWORD)v8 - 1) & v7;
    }
  }

  uint64_t v19 = *(void *)a1;
  unsigned int v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *unint64_t v11 = *v20;
LABEL_38:
    *unsigned int v20 = v11;
    goto LABEL_39;
  }

  *unint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8LL);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }

    else
    {
      v21 &= v8 - 1;
    }

    unsigned int v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }

void sub_1CF1DC(_Unwind_Exception *a1)
{
}

void std::__hash_table<std::__hash_value_type<unsigned int,unsigned int volatile>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int volatile>>>::__rehash<true>( uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2LL;
  }

  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }

  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }

    else
    {
      uint64_t v7 = 1LL << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }

    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4) {
LABEL_16:
    }
      std::__hash_table<std::__hash_value_type<unsigned int,unsigned int>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int>>>::__do_rehash<true>( a1,  prime);
  }

void std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)v2);
    operator delete(**a1);
  }

void std::vector<std::string>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24LL)
  {
  }

  a1[1] = v2;
}

uint64_t std::__hash_table<std::__hash_value_type<void const*,std::string>,std::__unordered_map_hasher<void const*,std::__hash_value_type<void const*,std::string>,std::hash<void const*>,std::equal_to<void const*>,true>,std::__unordered_map_equal<void const*,std::__hash_value_type<void const*,std::string>,std::equal_to<void const*>,std::hash<void const*>,true>,std::allocator<std::__hash_value_type<void const*,std::string>>>::~__hash_table( uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0LL;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::vector<std::function<void ()(ContextInfo *)>>::__destroy_vector::operator()[abi:ne180100]( void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (!v2) {
    return;
  }
  int8x8_t v4 = (char *)v1[1];
  unint64_t v5 = **a1;
  if (v4 == v2) {
    goto LABEL_10;
  }
  do
  {
    uint8x8_t v6 = v4 - 32;
    uint64_t v7 = (char *)*((void *)v4 - 1);
    if (v4 - 32 == v7)
    {
      uint64_t v7 = v4 - 32;
      uint64_t v8 = 4LL;
    }

    else
    {
      if (!v7) {
        goto LABEL_8;
      }
      uint64_t v8 = 5LL;
    }

    (*(void (**)(void))(*(void *)v7 + 8 * v8))();
LABEL_8:
    int8x8_t v4 = v6;
  }

  while (v6 != v2);
  unint64_t v5 = **a1;
LABEL_10:
  v1[1] = v2;
  operator delete(v5);
}

void *std::__hash_table<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::__unordered_map_hasher<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::hash<EAGLSharegroup *>,std::equal_to<EAGLSharegroup *>,true>,std::__unordered_map_equal<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::equal_to<EAGLSharegroup *>,std::hash<EAGLSharegroup *>,true>,std::allocator<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>>>::find<EAGLSharegroup *>( void *a1, void *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0LL;
  }
  unint64_t v3 = 0x9DDFEA08EB382D69LL * ((8 * *a2 + 8LL) ^ HIDWORD(*a2));
  unint64_t v4 = 0x9DDFEA08EB382D69LL * (HIDWORD(*a2) ^ (v3 >> 47) ^ v3);
  unint64_t v5 = 0x9DDFEA08EB382D69LL * (v4 ^ (v4 >> 47));
  uint8x8_t v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    unint64_t v7 = v5;
    if (v5 >= *(void *)&v2) {
      unint64_t v7 = v5 % *(void *)&v2;
    }
  }

  else
  {
    unint64_t v7 = v5 & (*(void *)&v2 - 1LL);
  }

  uint64_t v8 = *(void **)(*a1 + 8 * v7);
  if (!v8) {
    return 0LL;
  }
  uint64_t result = (void *)*v8;
  if (*v8)
  {
    do
    {
      unint64_t v10 = result[1];
      if (v10 == v5)
      {
        if (result[2] == *a2) {
          return result;
        }
      }

      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(void *)&v2) {
            v10 %= *(void *)&v2;
          }
        }

        else
        {
          v10 &= *(void *)&v2 - 1LL;
        }

        if (v10 != v7) {
          return 0LL;
        }
      }

      uint64_t result = (void *)*result;
    }

    while (result);
  }

  return result;
}

void *std::__hash_table<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::__unordered_map_hasher<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::hash<EAGLSharegroup *>,std::equal_to<EAGLSharegroup *>,true>,std::__unordered_map_equal<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::equal_to<EAGLSharegroup *>,std::hash<EAGLSharegroup *>,true>,std::allocator<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>>>::__emplace_unique_key_args<EAGLSharegroup *,std::pair<EAGLSharegroup * const,SharegroupInfo *>>( uint64_t a1, void *a2, _OWORD *a3)
{
  unint64_t v6 = 0x9DDFEA08EB382D69LL * ((8 * *a2 + 8LL) ^ HIDWORD(*a2));
  unint64_t v7 = 0x9DDFEA08EB382D69LL * (HIDWORD(*a2) ^ (v6 >> 47) ^ v6);
  unint64_t v8 = 0x9DDFEA08EB382D69LL * (v7 ^ (v7 >> 47));
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = 0x9DDFEA08EB382D69LL * (v7 ^ (v7 >> 47));
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
    }

    else
    {
      unint64_t v3 = v8 & (v9 - 1);
    }

    unint64_t v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == *a2) {
            return i;
          }
        }

        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }

          else
          {
            v13 &= v9 - 1;
          }

          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }

  uint64_t i = operator new(0x20uLL);
  *uint64_t i = 0LL;
  i[1] = v8;
  *((_OWORD *)i + std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this + 1) = *a3;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v15 = *(float *)(a1 + 32);
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    BOOL v16 = 1LL;
    if (v9 >= 3) {
      BOOL v16 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v9);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    std::__hash_table<std::__hash_value_type<void const*,std::string>,std::__unordered_map_hasher<void const*,std::__hash_value_type<void const*,std::string>,std::hash<void const*>,std::equal_to<void const*>,true>,std::__unordered_map_equal<void const*,std::__hash_value_type<void const*,std::string>,std::equal_to<void const*>,std::hash<void const*>,true>,std::allocator<std::__hash_value_type<void const*,std::string>>>::__rehash<true>( a1,  v19);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }

    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }

  uint64_t v20 = *(void *)a1;
  unint64_t v21 = *(void **)(*(void *)a1 + 8 * v3);
  if (v21)
  {
    *uint64_t i = *v21;
LABEL_38:
    *unint64_t v21 = i;
    goto LABEL_39;
  }

  *uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v20 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v22 = *(void *)(*i + 8LL);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v22 >= v9) {
        v22 %= v9;
      }
    }

    else
    {
      v22 &= v9 - 1;
    }

    unint64_t v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }

void sub_1CF750(_Unwind_Exception *a1)
{
}

uint64_t *std::map<__GLIContextRec *,ContextInfo *>::map[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  std::map<__GLIContextRec *,ContextInfo *>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__tree_node<std::__value_type<__GLIContextRec *,ContextInfo *>,void *> *,long>>>( a1,  *(void **)a2,  (void *)(a2 + 8));
  return a1;
}

void sub_1CF7A0(_Unwind_Exception *a1)
{
}

uint64_t *std::map<__GLIContextRec *,ContextInfo *>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__tree_node<std::__value_type<__GLIContextRec *,ContextInfo *>,void *> *,long>>>( uint64_t *result, void *a2, void *a3)
{
  if (a2 != a3)
  {
    unint64_t v4 = a2;
    unint64_t v5 = (uint64_t **)result;
    unint64_t v6 = result + 1;
    do
    {
      uint64_t result = std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__emplace_hint_unique_key_args<__GLIContextRec *,std::pair<__GLIContextRec * const,ContextInfo *> const&>( v5,  v6,  v4 + 4,  (_OWORD *)v4 + 2);
      unint64_t v7 = (void *)v4[1];
      if (v7)
      {
        do
        {
          unint64_t v8 = v7;
          unint64_t v7 = (void *)*v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          unint64_t v8 = (void *)v4[2];
          BOOL v9 = *v8 == (void)v4;
          unint64_t v4 = v8;
        }

        while (!v9);
      }

      unint64_t v4 = v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t *std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__emplace_hint_unique_key_args<__GLIContextRec *,std::pair<__GLIContextRec * const,ContextInfo *> const&>( uint64_t **a1, void *a2, unint64_t *a3, _OWORD *a4)
{
  unint64_t v6 = (void **)std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__find_equal<__GLIContextRec *>( a1,  a2,  &v11,  &v10,  a3);
  unint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    unint64_t v8 = (uint64_t **)v6;
    unint64_t v7 = (uint64_t *)operator new(0x30uLL);
    *((_OWORD *)v7 + 2) = *a4;
    std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__insert_node_at( a1,  v11,  v8,  v7);
  }

  return v7;
}

void *std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__find_equal<__GLIContextRec *>( void *a1, void *a2, void *a3, void *a4, unint64_t *a5)
{
  unint64_t v5 = a1 + 1;
  if (a1 + 1 == a2 || (v6 = *a5, unint64_t v7 = a2[4], *a5 < v7))
  {
    uint64_t v8 = *a2;
    if ((void *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }

      else
      {
        *a3 = a2;
        return a2;
      }
    }

    if (v8)
    {
      BOOL v9 = (void *)*a2;
      do
      {
        uint64_t v10 = v9;
        BOOL v9 = (void *)v9[1];
      }

      while (v9);
    }

    else
    {
      unint64_t v13 = a2;
      do
      {
        uint64_t v10 = (void *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        unint64_t v13 = v10;
      }

      while (v14);
    }

    unint64_t v15 = *a5;
    if (v10[4] < *a5) {
      goto LABEL_17;
    }
    BOOL v16 = (void *)*v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          unint64_t v17 = v16;
          unint64_t v18 = v16[4];
          if (v15 >= v18) {
            break;
          }
          BOOL v16 = (void *)*v17;
          unint64_t v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }

        if (v18 >= v15) {
          break;
        }
        unint64_t v5 = v17 + 1;
        BOOL v16 = (void *)v17[1];
      }

      while (v16);
    }

    else
    {
      unint64_t v17 = a1 + 1;
    }

uint64_t *std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__insert_node_at( uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0LL;
  a4[1] = 0LL;
  a4[2] = a2;
  *a3 = a4;
  unint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }

  uint64_t result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__erase_unique<__GLIContextRec *>( uint64_t a1, unint64_t *a2)
{
  int8x8_t v2 = *(void **)(a1 + 8);
  if (!v2) {
    return 0LL;
  }
  unint64_t v3 = *a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  do
  {
    unint64_t v5 = v2[4];
    BOOL v6 = v5 >= v3;
    if (v5 >= v3) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v2 + 1;
    }
    if (v6) {
      unint64_t v4 = v2;
    }
    int8x8_t v2 = (void *)*v7;
  }

  while (*v7);
  std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__remove_node_pointer( (uint64_t **)a1,  v4);
  operator delete(v4);
  return 1LL;
}

uint64_t *std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__remove_node_pointer( uint64_t **a1, uint64_t *a2)
{
  int8x8_t v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      unint64_t v3 = v2;
      int8x8_t v2 = (uint64_t *)*v2;
    }

    while (v2);
  }

  else
  {
    unint64_t v4 = a2;
    do
    {
      unint64_t v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      unint64_t v4 = v3;
    }

    while (!v5);
  }

  if (*a1 == a2) {
    *a1 = v3;
  }
  BOOL v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v6, a2);
  return v3;
}

uint64_t *std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2;
  if (*a2)
  {
    unint64_t v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      unint64_t v3 = a2;
      goto LABEL_7;
    }

    do
    {
      unint64_t v3 = v4;
      unint64_t v4 = (uint64_t *)*v4;
    }

    while (v4);
  }

  uint64_t v2 = v3[1];
  if (v2)
  {
LABEL_7:
    int v5 = 0;
    *(void *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }

  int v5 = 1;
LABEL_8:
  BOOL v6 = (uint64_t **)v3[2];
  unint64_t v7 = *v6;
  if (*v6 == v3)
  {
    uint64_t *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      unint64_t v7 = 0LL;
      uint64_t result = (uint64_t *)v2;
    }

    else
    {
      unint64_t v7 = v6[1];
    }
  }

  else
  {
    v6[1] = (uint64_t *)v2;
  }

  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    uint64_t v9 = a2[2];
    v3[2] = v9;
    *(void *)(v9 + 8LL * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    *unint64_t v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((_BYTE *)v3 + 24) = *((_BYTE *)a2 + 24);
    if (result == a2) {
      uint64_t result = v3;
    }
  }

  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(_BYTE *)(v2 + 24) = 1;
    return result;
  }

  while (1)
  {
    uint64_t v12 = v7[2];
    if (!*((_BYTE *)v7 + 24))
    {
      *((_BYTE *)v7 + 24) = 1;
      *(_BYTE *)(v12 + 24) = 0;
      unint64_t v13 = *(uint64_t **)(v12 + 8);
      uint64_t v14 = *v13;
      *(void *)(v12 + _Block_object_dispose((const void *)(v28 - 80), 8) = *v13;
      if (v14) {
        *(void *)(v14 + 16) = v12;
      }
      v13[2] = *(void *)(v12 + 16);
      *(void *)(*(void *)(v12 + 16) + 8LL * (**(void **)(v12 + 16) != v12)) = v13;
      *unint64_t v13 = v12;
      *(void *)(v12 + 16) = v13;
      unint64_t v7 = *(uint64_t **)(*v7 + 8);
    }

    unint64_t v15 = (void *)*v7;
    if (*v7 && !*((_BYTE *)v15 + 24))
    {
      BOOL v16 = (uint64_t *)v7[1];
      if (!v16) {
        goto LABEL_56;
      }
LABEL_55:
      if (*((_BYTE *)v16 + 24))
      {
LABEL_56:
        *((_BYTE *)v15 + 24) = 1;
        *((_BYTE *)v7 + 24) = 0;
        uint64_t v22 = v15[1];
        *unint64_t v7 = v22;
        if (v22) {
          *(void *)(v22 + 16) = v7;
        }
        v15[2] = v7[2];
        *(void *)(v7[2] + 8LL * (*(void *)v7[2] != (void)v7)) = v15;
        v15[1] = v7;
        v7[2] = (uint64_t)v15;
        BOOL v16 = v7;
      }

      else
      {
        unint64_t v15 = v7;
      }

      uint64_t v23 = v15[2];
      *((_BYTE *)v15 + 24) = *(_BYTE *)(v23 + 24);
      *(_BYTE *)(v23 + 24) = 1;
      *((_BYTE *)v16 + 24) = 1;
      id v24 = *(uint64_t **)(v23 + 8);
      uint64_t v25 = *v24;
      *(void *)(v23 + _Block_object_dispose((const void *)(v28 - 80), 8) = *v24;
      if (v25) {
        *(void *)(v25 + 16) = v23;
      }
      v24[2] = *(void *)(v23 + 16);
      *(void *)(*(void *)(v23 + 16) + 8LL * (**(void **)(v23 + 16) != v23)) = v24;
      *id v24 = v23;
      goto LABEL_72;
    }

    BOOL v16 = (uint64_t *)v7[1];
    if (v16 && !*((_BYTE *)v16 + 24)) {
      goto LABEL_55;
    }
    *((_BYTE *)v7 + 24) = 0;
    unint64_t v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      unint64_t v17 = result;
LABEL_53:
      *((_BYTE *)v17 + 24) = 1;
      return result;
    }

    if (!*((_BYTE *)v17 + 24)) {
      goto LABEL_53;
    }
LABEL_49:
    unint64_t v7 = *(uint64_t **)(v17[2] + 8LL * (*(void *)v17[2] == (void)v17));
  }

  if (!*((_BYTE *)v7 + 24))
  {
    *((_BYTE *)v7 + 24) = 1;
    *(_BYTE *)(v12 + 24) = 0;
    uint64_t v18 = v7[1];
    *(void *)uint64_t v12 = v18;
    if (v18) {
      *(void *)(v18 + 16) = v12;
    }
    v7[2] = *(void *)(v12 + 16);
    *(void *)(*(void *)(v12 + 16) + 8LL * (**(void **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(void *)(v12 + 16) = v7;
    unint64_t v7 = *(uint64_t **)v12;
  }

  size_t v19 = (void *)*v7;
  if (*v7 && !*((_BYTE *)v19 + 24)) {
    goto LABEL_68;
  }
  uint64_t v20 = (uint64_t *)v7[1];
  if (!v20 || *((_BYTE *)v20 + 24))
  {
    *((_BYTE *)v7 + 24) = 0;
    unint64_t v17 = (uint64_t *)v7[2];
    if (*((_BYTE *)v17 + 24)) {
      BOOL v21 = v17 == result;
    }
    else {
      BOOL v21 = 1;
    }
    if (v21) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }

  if (v19 && !*((_BYTE *)v19 + 24))
  {
LABEL_68:
    uint64_t v20 = v7;
  }

  else
  {
    *((_BYTE *)v20 + 24) = 1;
    *((_BYTE *)v7 + 24) = 0;
    uint64_t v26 = *v20;
    v7[1] = *v20;
    if (v26) {
      *(void *)(v26 + 16) = v7;
    }
    v20[2] = v7[2];
    *(void *)(v7[2] + 8LL * (*(void *)v7[2] != (void)v7)) = v20;
    *uint64_t v20 = (uint64_t)v7;
    v7[2] = (uint64_t)v20;
    size_t v19 = v7;
  }

  uint64_t v23 = v20[2];
  *((_BYTE *)v20 + 24) = *(_BYTE *)(v23 + 24);
  *(_BYTE *)(v23 + 24) = 1;
  *((_BYTE *)v19 + 24) = 1;
  id v24 = *(uint64_t **)v23;
  uint64_t v27 = *(void *)(*(void *)v23 + 8LL);
  *(void *)uint64_t v23 = v27;
  if (v27) {
    *(void *)(v27 + 16) = v23;
  }
  v24[2] = *(void *)(v23 + 16);
  *(void *)(*(void *)(v23 + 16) + 8LL * (**(void **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(void *)(v23 + 16) = v24;
  return result;
}

uint64_t **std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__emplace_unique_key_args<__GLIContextRec *,std::pair<__GLIContextRec * const,ContextInfo *>>( uint64_t **a1, unint64_t *a2, _OWORD *a3)
{
  BOOL v6 = a1 + 1;
  int v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        int v5 = *v8;
        BOOL v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      int v5 = v8[1];
      if (!v5)
      {
        BOOL v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    int v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = (uint64_t *)operator new(0x30uLL);
    *((_OWORD *)v10 + 2) = *a3;
    std::__tree<std::__value_type<__GLIContextRec *,ContextInfo *>,std::__map_value_compare<__GLIContextRec *,std::__value_type<__GLIContextRec *,ContextInfo *>,std::less<__GLIContextRec *>,true>,std::allocator<std::__value_type<__GLIContextRec *,ContextInfo *>>>::__insert_node_at( a1,  (uint64_t)v8,  v6,  v10);
    return (uint64_t **)v10;
  }

  return v8;
}

void std::default_delete<GPUTools::ResourceUpdater>::operator()[abi:ne180100](uint64_t a1, void *a2)
{
  if (a2)
  {
    unint64_t v3 = (void *)a2[16];
    if (v3)
    {
      a2[17] = v3;
      operator delete(v3);
    }

    std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100]((uint64_t)(a2 + 8));
    std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100]((uint64_t)(a2 + 3));
    operator delete(a2);
  }

uint64_t std::__hash_table<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::__unordered_map_hasher<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::hash<EAGLSharegroup *>,std::equal_to<EAGLSharegroup *>,true>,std::__unordered_map_equal<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::equal_to<EAGLSharegroup *>,std::hash<EAGLSharegroup *>,true>,std::allocator<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>>>::erase( void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ShaderInfo>>>>::remove( a1,  a2,  (uint64_t)&__p);
  unint64_t v3 = __p;
  __p = 0LL;
  if (v3) {
    operator delete(v3);
  }
  return v2;
}

uint64_t std::vector<std::string>::__emplace_back_slow_path<char * const&>(uint64_t *a1, char **a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<ProgramShaderInfo>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555LL) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  __v.__end_cap_.__value_ = (std::allocator<std::string> *)(a1 + 2);
  if (v9) {
    uint64_t v10 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v7, v9);
  }
  else {
    uint64_t v10 = 0LL;
  }
  __v.__first_ = v10;
  __v.__begin_ = v10 + v4;
  __v.__end_ = __v.__begin_;
  __v.__end_cap_.__value_ = &v10[v9];
  std::string::basic_string[abi:ne180100]<0>(__v.__begin_->__r_.__value_.__r.__words, *a2);
  __v.__end_ = __v.__begin_ + 1;
  std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a1, &__v);
  uint64_t v11 = a1[1];
  std::__split_buffer<std::string>::~__split_buffer(&__v);
  return v11;
}

void sub_1D0158( _Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8LL) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8LL) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    BOOL v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000LL;
    *a1 = v6;
  }

  else
  {
    *((_BYTE *)a1 + 23) = v4;
    BOOL v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }

  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void std::vector<std::string>::__swap_out_circular_buffer( std::vector<std::string> *this, std::__split_buffer<std::string> *__v)
{
  __v->__begin_ = v4;
  begin = this->__begin_;
  this->__begin_ = v4;
  __v->__begin_ = begin;
  end = this->__end_;
  this->__end_ = __v->__end_;
  __v->__end_ = end;
  value = this->__end_cap_.__value_;
  this->__end_cap_.__value_ = __v->__end_cap_.__value_;
  __v->__end_cap_.__value_ = value;
  __v->__first_ = __v->__begin_;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v15 = a6;
  *((void *)&v15 + std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this + 1) = a7;
  __int128 v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      __int128 v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - _Block_object_dispose((const void *)(v28 - 80), 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24LL;
      *(void *)(a3 - 16) = 0LL;
      *(void *)(a3 - _Block_object_dispose((const void *)(v28 - 80), 8) = 0LL;
      *(void *)(a3 - 24) = 0LL;
      v7 -= 24LL;
      a3 -= 24LL;
    }

    while (a3 != a5);
    *((void *)&v15 + std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this + 1) = v9;
  }

  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return a6;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100]( uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100]( uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8LL);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8LL);
  while (v1 != v2)
  {
    v1 += 24LL;
  }

void std::__split_buffer<std::string>::~__split_buffer(std::__split_buffer<std::string> *this)
{
  if (this->__first_) {
    operator delete(this->__first_);
  }
}

void std::__split_buffer<std::string>::__destruct_at_end[abi:ne180100](uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      size_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        size_t v5 = *(void ***)(a1 + 16);
      }

      uint64_t v2 = v5;
    }

    while (v5 != a2);
  }

GPUTools::ResourceUpdater *GPUTools::ResourceUpdater::ResourceUpdater( GPUTools::ResourceUpdater *this, ContextInfo *a2)
{
  *(void *)this = a2;
  uint64_t v3 = *((void *)a2 + 3);
  *((void *)this + 16) = 0LL;
  *((void *)this + std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this + 1) = a2;
  *((void *)this + 2) = v3;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 1065353216;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_DWORD *)this + 24) = 1065353216;
  *((void *)this + 17) = 0LL;
  *((void *)this + 1_Block_object_dispose((const void *)(v28 - 80), 8) = 0LL;
  if (*(_DWORD *)(*((void *)a2 + 5) + 8LL) == 1 && *((_DWORD *)a2 + 864) != 1)
  {
    ReserveGLShader(*(void **)a2, kDYReservedGLNameResourceUpdaterVertexShader, 35633);
    ReserveGLShader(**(void ***)this, kDYReservedGLNameResourceUpdaterFragmentShader, 35632);
  }

  return this;
}

void sub_1D0524(_Unwind_Exception *a1)
{
  size_t v5 = v4;
  uint64_t v7 = *v5;
  if (*v5)
  {
    *(void *)(v2 + 136) = v7;
    operator delete(v7);
  }

  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100](v3);
  std::unordered_map<unsigned int,BOOL>::~unordered_map[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

BOOL GPUTools::ResourceUpdater::_UpdateShader( GPUTools::ResourceUpdater *this, uint64_t a2, const char *a3, NSMutableDictionary *a4, NSString *a5)
{
  uint64_t v18 = a3;
  int v17 = 0;
  uint64_t v9 = (void *)((char *)this + 8);
  uint64_t v10 = a2;
  (*(void (**)(void, void, uint64_t, const char **, void))(*((void *)this + 2) + 4760LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  1LL,  &v18,  0LL);
  (*(void (**)(void, uint64_t))(v9[1] + 4768LL))(*(void *)(*v9 + 16LL), v10);
  if (a4)
  {
    uint64_t v16 = 0LL;
    memset(__n, 0, sizeof(__n));
    (*(void (**)(void, uint64_t, uint64_t, _DWORD *))(*((void *)this + 2) + 5256LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  35716LL,  __n);
    std::string::resize((std::string *)&__n[1], __n[0], 0);
    uint64_t v11 = v16 >= 0 ? &__n[1] : *(_DWORD **)&__n[1];
    (*(void (**)(void, uint64_t, void, void, _DWORD *))(*((void *)this + 2) + 5272LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  __n[0],  0LL,  v11);
    uint64_t v12 = v16 >= 0 ? &__n[1] : *(_DWORD **)&__n[1];
    -[NSMutableDictionary setObject:forKey:]( a4,  "setObject:forKey:",  +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 1LL),  a5);
    if (SHIBYTE(v16) < 0) {
      operator delete(*(void **)&__n[1]);
    }
  }

  (*(void (**)(void, uint64_t, uint64_t, int *))(*((void *)this + 2) + 5256LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  35713LL,  &v17);
  int v13 = v17;
  if (v17 == 1)
  {
    if (gDYResourceUpdateCallbackBlock)
    {
      (*(void (**)(void))(gDYResourceUpdateCallbackBlock + 16))();
      int v13 = v17;
    }

    else
    {
      int v13 = 1;
    }
  }

  return v13 == 1;
}

void sub_1D06EC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void GPUTools::ResourceUpdater::_GetCombinedLinkedShaderSource( uint64_t a1@<X0>, unsigned int **a2@<X1>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0LL;
  a3->__r_.__value_.__l.__size_ = 0LL;
  a3->__r_.__value_.__l.__cap_ = 0LL;
  uint64_t v3 = *a2;
  size_t v4 = a2[1];
  if (*a2 != v4)
  {
    do
    {
      uint64_t v7 = (const std::string::value_type *)**((void **)v3 + 1);
      if (v7)
      {
        std::string::append(a3, v7);
      }

      else
      {
        (*(void (**)(void, void, uint64_t, size_t *))(*(void *)(a1 + 16) + 5256LL))( *(void *)(*(void *)(a1 + 8) + 16LL),  *v3,  35720LL,  &__sz);
        uint64_t v8 = __sz;
        uint64_t v9 = (std::string::value_type *)operator new[](__sz);
        (*(void (**)(void, void, uint64_t, void, std::string::value_type *))(*(void *)(a1 + 16)
                                                                                           + 5032LL))( *(void *)(*(void *)(a1 + 8) + 16LL),  *v3,  v8,  0LL,  v9);
        std::string::append(a3, v9);
        operator delete[](v9);
      }

      v3 += 14;
    }

    while (v3 != v4);
  }

void sub_1D07D8(_Unwind_Exception *a1)
{
}

uint64_t GPUTools::ResourceUpdater::_CopyProgram( GPUTools::ResourceUpdater *this, uint64_t a2, unsigned int **a3, uint64_t a4)
{
  uint64_t v8 = (char *)this + 8;
  uint64_t v9 = (*(uint64_t (**)(void, uint64_t))(*((void *)this + 2) + 4752LL))( *(void *)(*((void *)this + 1) + 16LL),  35633LL);
  uint64_t v10 = (*(uint64_t (**)(void, uint64_t))(*((void *)this + 2) + 4752LL))( *(void *)(*(void *)v8 + 16LL),  35632LL);
  GPUTools::ResourceUpdater::_GetCombinedLinkedShaderSource((uint64_t)this, a3 + 18, &__p);
  if ((char)__p.__r_.__value_.__s.__size_ < 0)
  {
    if (!__p.__r_.__value_.__l.__size_)
    {
LABEL_8:
      int v12 = 1;
      goto LABEL_10;
    }

    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }

  else
  {
    if (!__p.__r_.__value_.__s.__size_) {
      goto LABEL_14;
    }
    p_p = &__p;
  }

  if (GPUTools::ResourceUpdater::_UpdateShader(this, v9, (const char *)p_p, 0LL, 0LL))
  {
    (*(void (**)(void, void, void))(*((void *)this + 2) + 4784LL))( *(void *)(*((void *)this + 1) + 16LL),  a4,  v9);
    GPUTools::GL::CopyProgramActiveAttributes(v8, a2, a4);
    goto LABEL_8;
  }

  int v12 = 0;
LABEL_10:
  if ((char)__p.__r_.__value_.__s.__size_ < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (!v12) {
      goto LABEL_33;
    }
  }

  else if (!v12)
  {
    goto LABEL_33;
  }

void sub_1D0B00( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL GPUTools::ResourceUpdater::UpdateProgram( uint64_t **this, unsigned int a2, NSDictionary *a3, NSMutableDictionary *a4)
{
  unsigned int v91 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 3221225472LL;
  aBlock[2] = ___ZN8GPUTools15ResourceUpdater13UpdateProgramEjP12NSDictionaryP19NSMutableDictionary_block_invoke;
  aBlock[3] = &__block_descriptor_40_e5_v8__0l;
  aBlock[4] = this;
  v95[0] = off_1F9610;
  uint64_t v7 = _Block_copy(aBlock);
  v95[1] = v7;
  v96 = v95;
  v99 = &v97;
  v97 = off_1F9610;
  if (v7)
  {
    uint64_t v8 = _Block_copy(v7);
    uint64_t v9 = v96;
    v98 = v8;
    if (v96 == v95)
    {
      uint64_t v10 = 4LL;
      uint64_t v9 = v95;
    }

    else
    {
      if (!v96) {
        goto LABEL_8;
      }
      uint64_t v10 = 5LL;
    }
  }

  else
  {
    v98 = 0LL;
    uint64_t v9 = v95;
    uint64_t v10 = 4LL;
  }

  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_8:
  install_caching_dispatch(**this);
  uint64_t v11 = ((uint64_t (*)(uint64_t))this[2][597])(this[1][2]);
  v88[0] = _NSConcreteStackBlock;
  v88[1] = 3221225472LL;
  v88[2] = ___ZN8GPUTools15ResourceUpdater13UpdateProgramEjP12NSDictionaryP19NSMutableDictionary_block_invoke_2;
  v88[3] = &__block_descriptor_44_e5_v8__0l;
  v88[4] = this;
  int v89 = v11;
  v93 = 0LL;
  v92[0] = off_1F9610;
  v92[1] = _Block_copy(v88);
  v93 = v92;
  v94[3] = v94;
  (*(void (**)(uint64_t, void *))(v92[0] + 24LL))((uint64_t)v92, v94);
  int v12 = v93;
  if (v93 == v92)
  {
    uint64_t v13 = 4LL;
    int v12 = v92;
  }

  else
  {
    if (!v93) {
      goto LABEL_13;
    }
    uint64_t v13 = 5LL;
  }

  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_13:
  GPUTools::ResourceUpdater::_DisableTransformFeedbacks((GPUTools::ResourceUpdater *)this, v91);
  uint64_t v14 = (*this)[5] + 104;
  v82[0] = &v91;
  uint64_t v15 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::__emplace_unique_key_args<unsigned int,std::piecewise_construct_t const&,std::tuple<unsigned int const&>,std::tuple<>>( v14,  &v91,  (uint64_t)&std::piecewise_construct,  v82);
  uint64_t v17 = v15[3];
  uint64_t v16 = (std::__shared_weak_count *)v15[4];
  uint64_t v86 = v17;
  uint64_t v87 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      unint64_t v19 = __ldxr(p_shared_owners);
    while (__stxr(v19 + 1, p_shared_owners));
  }

  id v20 = -[NSDictionary objectForKey:](a3, "objectForKey:", kDYResourceProgramVtxSourceKey);
  id v69 = v20;
  if (!v20) {
    goto LABEL_22;
  }
  BOOL v21 = (const char *)[v20 UTF8String];
  uint64_t v22 = kDYReservedGLNameResourceUpdaterVertexShader;
  if (GPUTools::ResourceUpdater::_UpdateShader( (GPUTools::ResourceUpdater *)this,  kDYReservedGLNameResourceUpdaterVertexShader,  v21,  a4,  kDYResourceProgramVtxInfoLogKey))
  {
    ((void (*)(uint64_t, void, uint64_t))this[2][598])(this[1][2], v11, v22);
    unsigned int v23 = *(_DWORD *)(v17 + 368);
    if (v23) {
      uint64_t v24 = v23;
    }
    else {
      uint64_t v24 = v91;
    }
    GPUTools::GL::CopyProgramActiveAttributes(this + 1, v24, v11);
LABEL_22:
    uint64_t v25 = 2LL;
    char v26 = 1;
    goto LABEL_24;
  }

  char v26 = 0;
  uint64_t v25 = 3LL;
LABEL_24:
  id v27 = -[NSDictionary objectForKey:](a3, "objectForKey:", kDYResourceProgramFragSourceKey);
  id v28 = v27;
  if (v27)
  {
    uint64_t v29 = (const char *)[v27 UTF8String];
    uint64_t v30 = kDYReservedGLNameResourceUpdaterFragmentShader;
    if (!GPUTools::ResourceUpdater::_UpdateShader( (GPUTools::ResourceUpdater *)this,  kDYReservedGLNameResourceUpdaterFragmentShader,  v29,  a4,  kDYResourceProgramFragInfoLogKey)) {
      goto LABEL_48;
    }
    ((void (*)(uint64_t, void, uint64_t))this[2][598])(this[1][2], v11, v30);
  }

  if ((v26 & 1) == 0)
  {
    uint64_t v25 = 1LL;
LABEL_48:
    uint64_t v46 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v25);
    -[NSMutableDictionary setObject:forKey:](a4, "setObject:forKey:", v46, kDYResourceProgramCompilationFailedKey);
    BOOL v47 = 0LL;
    if (!v16) {
      goto LABEL_93;
    }
    goto LABEL_89;
  }

  unsigned int v31 = *this;
  if (*((_BYTE *)*this + 4846))
  {
    ((void (*)(uint64_t, void, uint64_t, _DWORD **))this[2][658])(this[1][2], v91, 33368LL, v82);
    ((void (*)(uint64_t, uint64_t, uint64_t, void))this[2][689])(this[1][2], v11, 33368LL, LODWORD(v82[0]));
    unsigned int v31 = *this;
  }

  if (*((int *)v31 + 865) >= 3)
  {
    unsigned int v32 = *(_DWORD *)(v17 + 368);
    if (v32) {
      uint64_t v33 = v32;
    }
    else {
      uint64_t v33 = v91;
    }
    GPUTools::GL::CopyProgramTransformFeedbackVaryings(this + 1, v33, v11);
    ((void (*)(uint64_t, uint64_t, uint64_t, _DWORD **))this[2][658])(this[1][2], v33, 33367LL, v82);
    ((void (*)(uint64_t, uint64_t, uint64_t, void))this[2][689])(this[1][2], v11, 33367LL, LODWORD(v82[0]));
  }

  ((void (*)(uint64_t, void))this[2][599])(this[1][2], v11);
  uint64_t v34 = kDYReservedGLNameResourceUpdaterVertexShader;
  ((void (*)(uint64_t, void, void))this[2][593])( this[1][2],  v11,  kDYReservedGLNameResourceUpdaterVertexShader);
  uint64_t v67 = kDYReservedGLNameResourceUpdaterFragmentShader;
  ((void (*)(uint64_t, void))this[2][593])(this[1][2], v11);
  memset(&__n[1], 0, 24);
  ((void (*)(uint64_t, uint64_t, uint64_t, _DWORD *))this[2][658])(this[1][2], v11, 35716LL, __n);
  std::string::resize((std::string *)&__n[1], __n[0], 0);
  if (__n[6] >= 0) {
    unsigned int v35 = &__n[1];
  }
  else {
    unsigned int v35 = *(_DWORD **)&__n[1];
  }
  ((void (*)(uint64_t, uint64_t, void, void, _DWORD *))this[2][660])(this[1][2], v11, __n[0], 0LL, v35);
  if (__n[6] >= 0) {
    int v36 = &__n[1];
  }
  else {
    int v36 = *(_DWORD **)&__n[1];
  }
  unsigned int v37 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v36, 1LL);
  -[NSMutableDictionary setObject:forKey:](a4, "setObject:forKey:", v37, kDYResourceProgramInfoLogKey);
  ((void (*)(uint64_t, uint64_t, uint64_t, int *))this[2][658])(this[1][2], v11, 35714LL, &v84);
  BOOL v68 = v84 != 0;
  if (v84)
  {
    if (!*(_DWORD *)(v17 + 368))
    {
      uint64_t PrivateGLProgram = CreatePrivateGLProgram((void *)**this);
      *(_DWORD *)(v17 + 36_Block_object_dispose((const void *)(v28 - 80), 8) = PrivateGLProgram;
      GPUTools::ResourceUpdater::_CopyProgram( (GPUTools::ResourceUpdater *)this,  v91,  (unsigned int **)v17,  PrivateGLProgram);
    }

    v82[0] = 0LL;
    v82[1] = v82;
    v82[2] = (_DWORD *)0x5812000000LL;
    v82[3] = __Block_byref_object_copy__2;
    v82[4] = __Block_byref_object_dispose__2;
    memset(&v82[5], 0, 40);
    int v83 = 1065353216;
    uint64_t v39 = *((unsigned int *)*this + 864);
    __sz_4[0] = _NSConcreteStackBlock;
    __sz_4[1] = 3221225472LL;
    __sz_4[2] = ___ZN8GPUTools15ResourceUpdater13UpdateProgramEjP12NSDictionaryP19NSMutableDictionary_block_invoke_2;
    __sz_4[3] = &unk_1F9570;
    unsigned int v80 = v91;
    int v81 = v11;
    __sz_4[4] = v82;
    __sz_4[5] = this;
    GPUTools::GL::EnumerateProgramActiveUniforms(this + 1, v39, v91, 1LL, __sz_4);
    memset(&v77, 0, sizeof(v77));
    ((void (*)(uint64_t, void, uint64_t, unsigned int *))this[2][658])(this[1][2], v91, 35717LL, &__sz);
    std::vector<unsigned int>::resize(&v77, (int)__sz);
    ((void (*)(uint64_t, void, void, void, std::vector<unsigned int>::pointer))this[2][759])( this[1][2],  v91,  __sz,  0LL,  v77.__begin_);
    id v40 = v28;
    uint64_t v41 = v17;
    uint64_t v42 = v34;
    std::vector<unsigned int>::pointer begin = v77.__begin_;
    std::vector<unsigned int>::pointer end = v77.__end_;
    while (begin != end)
    {
      uint64_t v45 = *begin;
      ((void (*)(uint64_t, void, uint64_t))this[2][598])(this[1][2], v11, v45);
      ((void (*)(uint64_t, void, uint64_t))this[2][593])(this[1][2], v91, v45);
      ++begin;
    }

    if (v69)
    {
      ((void (*)(uint64_t, void, uint64_t))this[2][598])(this[1][2], v91, v42);
      GPUTools::GL::CopyProgramActiveAttributes(this + 1, v11, v91);
    }

    if (v40) {
      ((void (*)(uint64_t, void, uint64_t))this[2][598])(this[1][2], v91, v67);
    }
    ((void (*)(uint64_t, void))this[2][599])(this[1][2], v91);
    if (gDYResourceUpdateCallbackBlock) {
      (*(void (**)(void))(gDYResourceUpdateCallbackBlock + 16))();
    }
    if (v40) {
      ((void (*)(uint64_t, void, uint64_t))this[2][593])(this[1][2], v91, v67);
    }
    if (v69) {
      ((void (*)(uint64_t, void, uint64_t))this[2][593])(this[1][2], v91, v42);
    }
    std::vector<unsigned int>::pointer v48 = v77.__begin_;
    std::vector<unsigned int>::pointer v49 = v77.__end_;
    while (v48 != v49)
    {
      uint64_t v50 = *v48;
      ((void (*)(uint64_t, void, uint64_t))this[2][598])(this[1][2], v91, v50);
      ((void (*)(uint64_t, void, uint64_t))this[2][593])(this[1][2], v11, v50);
      ++v48;
    }

    uint64_t v51 = *((unsigned int *)*this + 864);
    uint64_t v52 = *(unsigned int *)(v41 + 368);
    v74[0] = _NSConcreteStackBlock;
    v74[1] = 3321888768LL;
    v74[2] = ___ZN8GPUTools15ResourceUpdater13UpdateProgramEjP12NSDictionaryP19NSMutableDictionary_block_invoke_2_4;
    v74[3] = &unk_1F9598;
    v74[4] = v82;
    v74[5] = this;
    v74[6] = v41;
    BOOL v75 = v16;
    if (v16)
    {
      uint64_t v53 = (unint64_t *)&v16->__shared_owners_;
      do
        unint64_t v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }

    unsigned int v76 = v91;
    GPUTools::GL::EnumerateProgramActiveUniforms(this + 1, v51, v52, 1LL, v74);
    uint64_t v55 = *((unsigned int *)*this + 864);
    v70[0] = _NSConcreteStackBlock;
    v70[1] = 3321888768LL;
    v70[2] = ___ZN8GPUTools15ResourceUpdater13UpdateProgramEjP12NSDictionaryP19NSMutableDictionary_block_invoke_5;
    v70[3] = &unk_1F95D0;
    v70[4] = v82;
    v70[5] = this;
    int v72 = v11;
    unsigned int v73 = v91;
    v70[6] = v41;
    uint64_t v71 = v16;
    if (v16)
    {
      unint64_t v56 = (unint64_t *)&v16->__shared_owners_;
      do
        unint64_t v57 = __ldxr(v56);
      while (__stxr(v57 + 1, v56));
    }

    GPUTools::GL::EnumerateProgramActiveUniforms(this + 1, v55, v11, 1LL, v70);
    *(_BYTE *)(v41 + 376) = 1;
    unint64_t v58 = v71;
    if (v71)
    {
      v59 = (unint64_t *)&v71->__shared_owners_;
      do
        unint64_t v60 = __ldaxr(v59);
      while (__stlxr(v60 - 1, v59));
      if (!v60)
      {
        ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
        std::__shared_weak_count::__release_weak(v58);
      }
    }

    unint64_t v61 = v75;
    if (v75)
    {
      unint64_t v62 = (unint64_t *)&v75->__shared_owners_;
      do
        unint64_t v63 = __ldaxr(v62);
      while (__stlxr(v63 - 1, v62));
      if (!v63)
      {
        ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
        std::__shared_weak_count::__release_weak(v61);
      }
    }

    if (v77.__begin_)
    {
      v77.__end_ = v77.__begin_;
      operator delete(v77.__begin_);
    }

    _Block_object_dispose(v82, 8);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v82[6]);
  }

  if (SHIBYTE(__n[6]) < 0) {
    operator delete(*(void **)&__n[1]);
  }
  uint64_t v16 = v87;
  BOOL v47 = v68;
  if (v87)
  {
LABEL_89:
    v64 = (unint64_t *)&v16->__shared_owners_;
    do
      unint64_t v65 = __ldaxr(v64);
    while (__stlxr(v65 - 1, v64));
    if (!v65)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }

void sub_1D1534( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, void *__p, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, char a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62)
{
  if (__p)
  {
    a34 = (uint64_t)__p;
    operator delete(__p);
  }

  _Block_object_dispose(&a44, 8);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(a11);
  if (a61 < 0) {
    operator delete(a56);
  }
  std::shared_ptr<ShaderInfo>::~shared_ptr[abi:ne180100]((uint64_t)&a62);
  GPUTools::ScopeFunction::~ScopeFunction((GPUTools::ScopeFunction *)(v63 - 208));
  GPUTools::ScopeFunction::~ScopeFunction((GPUTools::ScopeFunction *)(v63 - 144));
  _Unwind_Resume(a1);
}

uint64_t ___ZN8GPUTools15ResourceUpdater13UpdateProgramEjP12NSDictionaryP19NSMutableDictionary_block_invoke( uint64_t a1)
{
  uint64_t v1 = *(uint64_t ***)(a1 + 32);
  uint64_t v2 = GPUTools::ResourceUpdater::_EnableTransformFeedbacks(v1);
  uint64_t v3 = **v1;
  size_t v4 = choose_dispatch_table((uint64_t)v2);
  return install_dispatch_table(v3, (uint64_t)v4);
}

void *GPUTools::ResourceUpdater::_EnableTransformFeedbacks(void *this)
{
  if (*(int *)(*this + 3460LL) >= 3)
  {
    uint64_t v1 = (uint64_t)this;
    uint64_t v2 = (unsigned int *)this[16];
    uint64_t v3 = (unsigned int *)this[17];
    if (v2 != v3)
    {
      do
      {
        GPUTools::ResourceUpdater::_RestoreTransformFeedback((void *)v1, v2);
        v2 += 6;
      }

      while (v2 != v3);
      uint64_t v2 = *(unsigned int **)(v1 + 128);
    }

    *(void *)(v1 + 136) = v2;
    GPUTools::ResourceUpdater::_RestoreTransformFeedback((void *)v1, (unsigned int *)(v1 + 104));
    this = (void *)(*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 4800LL))( *(void *)(*(void *)(v1 + 8) + 16LL),  *(unsigned int *)(v1 + 152));
    if (*(_BYTE *)(*(void *)v1 + 4846LL)) {
      return (void *)(*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 6576LL))( *(void *)(*(void *)(v1 + 8) + 16LL),  *(unsigned int *)(v1 + 156));
    }
  }

  return this;
}

uint64_t ___ZN8GPUTools15ResourceUpdater13UpdateProgramEjP12NSDictionaryP19NSMutableDictionary_block_invoke_2( uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(*(void *)(a1 + 32) + 16LL) + 4728LL))( *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 16LL),  *(unsigned int *)(a1 + 40));
}

void GPUTools::ResourceUpdater::_DisableTransformFeedbacks(GPUTools::ResourceUpdater *this, int a2)
{
  if (*(int *)(*(void *)this + 3460LL) >= 3)
  {
    (*(void (**)(void, uint64_t, char *))(*((void *)this + 2) + 832LL))( *(void *)(*((void *)this + 1) + 16LL),  35725LL,  (char *)this + 152);
    (*(void (**)(void, uint64_t, char *))(*((void *)this + 2) + 832LL))( *(void *)(*((void *)this + 1) + 16LL),  33370LL,  (char *)this + 156);
    if (*(_BYTE *)(*(void *)this + 4862LL)) {
      (*(void (**)(void, uint64_t, char *))(*((void *)this + 2) + 832LL))( *(void *)(*((void *)this + 1) + 16LL),  36389LL,  (char *)this + 104);
    }
    else {
      *((_DWORD *)this + 26) = 0;
    }
    (*(void (**)(void, uint64_t, char *))(*((void *)this + 2) + 792LL))( *(void *)(*((void *)this + 1) + 16LL),  36388LL,  (char *)this + 124);
    if (*((_BYTE *)this + 124) == 1)
    {
      (*(void (**)(void, uint64_t, char *))(*((void *)this + 2) + 792LL))( *(void *)(*((void *)this + 1) + 16LL),  36387LL,  (char *)this + 125);
      *(void *)((char *)this + 10_Block_object_dispose((const void *)(v28 - 80), 8) = *(uint64_t *)((char *)std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)this + 3560LL),  (unsigned int *)this + 26)
                                                   + 20);
      [**(id **)this getParameter:1503 to:&v33];
      *(void *)((char *)this + 116) = v33;
      (*(void (**)(void))(*((void *)this + 2) + 5576LL))(*(void *)(*((void *)this + 1) + 16LL));
    }

    uint64_t v33 = 0LL;
    uint64_t v34 = 0LL;
    GPUTools::NameTargetTupleArray::querySpecificObjectList( *(id **)this,  (void **)&v33,  (GPUTools::NameTargetTupleArray *)((char *)&stru_650.cmd + 1));
    uint64_t v4 = *v33;
    if ((_DWORD)v4)
    {
      size_t v5 = (char **)((char *)this + 128);
      BOOL v6 = v34;
      uint64_t v7 = v34;
      do
      {
        if (*v7 != *((_DWORD *)this + 26))
        {
          (*(void (**)(void, uint64_t))(*((void *)this + 2) + 7232LL))( *(void *)(*((void *)this + 1) + 16LL),  36386LL);
          (*(void (**)(void, uint64_t, char *))(*((void *)this + 2) + 792LL))( *(void *)(*((void *)this + 1) + 16LL),  36388LL,  &v32);
          if (v32)
          {
            uint64_t v8 = std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::find<unsigned int>( (void *)(*(void *)this + 3560LL),  v7);
            if (*((_DWORD *)v8 + 5) == a2)
            {
              (*(void (**)(void, uint64_t, char *))(*((void *)this + 2) + 792LL))( *(void *)(*((void *)this + 1) + 16LL),  36388LL,  &v31);
              [**(id **)this getParameter:1503 to:&v30];
              unsigned int v9 = *v7;
              *(void *)&__int128 v10 = *(uint64_t *)((char *)v8 + 20);
              uint64_t v11 = v30;
              char v12 = v32;
              char v13 = v31;
              unint64_t v14 = *((void *)this + 17);
              unint64_t v15 = *((void *)this + 18);
              if (v14 >= v15)
              {
                uint64_t v28 = v30;
                uint64_t v29 = v10;
                unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v14 - (void)*v5) >> 3);
                unint64_t v18 = v17 + 1;
                if (v17 + 1 > 0xAAAAAAAAAAAAAAALL) {
                  std::vector<ProgramShaderInfo>::__throw_length_error[abi:ne180100]();
                }
                unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v15 - (void)*v5) >> 3);
                if (2 * v19 > v18) {
                  unint64_t v18 = 2 * v19;
                }
                if (v19 >= 0x555555555555555LL) {
                  unint64_t v20 = 0xAAAAAAAAAAAAAAALL;
                }
                else {
                  unint64_t v20 = v18;
                }
                if (v20) {
                  BOOL v21 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>( (uint64_t)this + 144,  v20);
                }
                else {
                  BOOL v21 = 0LL;
                }
                uint64_t v22 = &v21[24 * v17];
                *(_DWORD *)uint64_t v22 = v9;
                *(void *)&__int128 v23 = v29;
                *((void *)&v23 + std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this + 1) = v28;
                *(_OWORD *)(v22 + 4) = v23;
                v22[20] = v12;
                v22[21] = v13;
                uint64_t v25 = (char *)*((void *)this + 16);
                uint64_t v24 = (char *)*((void *)this + 17);
                char v26 = v22;
                if (v24 != v25)
                {
                  do
                  {
                    __int128 v27 = *(_OWORD *)(v24 - 24);
                    *((void *)v26 - std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this + 1) = *((void *)v24 - 1);
                    *(_OWORD *)(v26 - 24) = v27;
                    v26 -= 24;
                    v24 -= 24;
                  }

                  while (v24 != v25);
                  uint64_t v24 = *v5;
                }

                uint64_t v16 = v22 + 24;
                *((void *)this + 16) = v26;
                *((void *)this + 17) = v22 + 24;
                *((void *)this + 1_Block_object_dispose((const void *)(v28 - 80), 8) = &v21[24 * v20];
                if (v24) {
                  operator delete(v24);
                }
              }

              else
              {
                *(_DWORD *)unint64_t v14 = v9;
                *((void *)&v10 + std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this + 1) = v11;
                *(_OWORD *)(v14 + 4) = v10;
                *(_BYTE *)(v14 + 20) = v12;
                *(_BYTE *)(v14 + 2std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this + 1) = v13;
                uint64_t v16 = (char *)(v14 + 24);
              }

              *((void *)this + 17) = v16;
              (*(void (**)(void))(*((void *)this + 2) + 5576LL))(*(void *)(*((void *)this + 1) + 16LL));
            }
          }

          BOOL v6 = v34;
          uint64_t v4 = *v33;
        }

        v7 += 2;
      }

      while (v7 != &v6[2 * v4]);
    }

    (*(void (**)(void, uint64_t, void))(*((void *)this + 2) + 7232LL))( *(void *)(*((void *)this + 1) + 16LL),  36386LL,  0LL);
    GPUTools::NameTargetTupleArray::reset((GPUTools::NameTargetTupleArray *)&v33);
  }

void sub_1D1B34( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t __Block_byref_object_copy__2(uint64_t a1, uint64_t a2)
{
  return std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__hash_table( a1 + 48,  (uint64_t *)(a2 + 48));
}

uint64_t __Block_byref_object_dispose__2(uint64_t a1)
{
  return std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(a1 + 48);
}

unsigned __int8 *___ZN8GPUTools15ResourceUpdater13UpdateProgramEjP12NSDictionaryP19NSMutableDictionary_block_invoke_2( uint64_t a1, char **a2)
{
  uint64_t result = (unsigned __int8 *)GPUTools::GL::CopyProgramUniform( *(void *)(a1 + 40) + 8LL,  *(unsigned int *)(**(void **)(a1 + 40) + 3456LL),  *(unsigned int *)(a1 + 48),  *(unsigned int *)(a1 + 52),  a2,  1LL);
  if ((_DWORD)result != -1) {
    return std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_impl<char * const&>( (void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 48LL),  a2);
  }
  return result;
}

void ___ZN8GPUTools15ResourceUpdater13UpdateProgramEjP12NSDictionaryP19NSMutableDictionary_block_invoke_2_4( uint64_t a1, char **a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  size_t v5 = (void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 48LL);
  std::string::basic_string[abi:ne180100]<0>(__p, *a2);
  BOOL v6 = std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>( v5,  (unsigned __int8 *)__p);
  uint64_t v7 = v6;
  if ((v11 & 0x80000000) == 0)
  {
    if (v6) {
      return;
    }
LABEL_5:
    int v8 = GPUTools::GL::CopyProgramUniform( v4 + 8,  *(unsigned int *)(*(void *)v4 + 3456LL),  *(unsigned int *)(*(void *)(a1 + 48) + 368LL),  *(unsigned int *)(a1 + 64),  a2,  1LL);
    uint64_t v9 = *(void *)(a1 + 48) + 328LL;
    __p[0] = (char *)a2 + 28;
    *((_DWORD *)std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int const&>,std::tuple<>>( v9,  (int *)a2 + 7,  (uint64_t)&std::piecewise_construct,  (_DWORD **)__p)
    + 5) = v8;
    return;
  }

  operator delete(__p[0]);
  if (!v7) {
    goto LABEL_5;
  }
}

uint64_t __copy_helper_block_e8_48c39_ZTSNSt3__110shared_ptrI11ProgramInfoEE(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 56);
  *(void *)(result + 4_Block_object_dispose((const void *)(v28 - 80), 8) = *(void *)(a2 + 48);
  *(void *)(result + 56) = v2;
  if (v2)
  {
    uint64_t v3 = (unint64_t *)(v2 + 8);
    do
      unint64_t v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

uint64_t __destroy_helper_block_e8_48c39_ZTSNSt3__110shared_ptrI11ProgramInfoEE(uint64_t a1)
{
  return std::shared_ptr<ShaderInfo>::~shared_ptr[abi:ne180100](a1 + 48);
}

void ___ZN8GPUTools15ResourceUpdater13UpdateProgramEjP12NSDictionaryP19NSMutableDictionary_block_invoke_5( uint64_t a1, char **a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  size_t v5 = (void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 48LL);
  std::string::basic_string[abi:ne180100]<0>(__p, *a2);
  BOOL v6 = std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>( v5,  (unsigned __int8 *)__p);
  uint64_t v7 = v6;
  if (v11 < 0)
  {
    operator delete(__p[0]);
    if (!v7) {
      return;
    }
  }

  else if (!v6)
  {
    return;
  }

  int v8 = GPUTools::GL::CopyProgramUniform( v4 + 8,  *(unsigned int *)(*(void *)v4 + 3456LL),  *(unsigned int *)(a1 + 64),  *(unsigned int *)(a1 + 68),  a2,  0LL);
  uint64_t v9 = *(void *)(a1 + 48) + 328LL;
  __p[0] = (char *)a2 + 28;
  *((_DWORD *)std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int const&>,std::tuple<>>( v9,  (int *)a2 + 7,  (uint64_t)&std::piecewise_construct,  (_DWORD **)__p)
  + 5) = v8;
}

uint64_t GPUTools::ResourceUpdater::_RestoreTransformFeedback(void *a1, unsigned int *a2)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t, void))(a1[2] + 7232LL))( *(void *)(a1[1] + 16LL),  36386LL,  *a2);
  if (*((_BYTE *)a2 + 20) == 1)
  {
    (*(void (**)(void, void))(a1[2] + 4800LL))(*(void *)(a1[1] + 16LL), a2[1]);
    if (*(_BYTE *)(*a1 + 4846LL)) {
      (*(void (**)(void, void))(a1[2] + 6576LL))(*(void *)(a1[1] + 16LL), a2[2]);
    }
    uint64_t result = (*(uint64_t (**)(void, void))(a1[2] + 5568LL))(*(void *)(a1[1] + 16LL), a2[3]);
    if (*((_BYTE *)a2 + 21) == 1) {
      return (*(uint64_t (**)(void))(a1[2] + 7256LL))(*(void *)(a1[1] + 16LL));
    }
  }

  return result;
}

uint64_t GPUTools::ResourceUpdater::_CreateMipmapTexture(uint64_t **this, uint64_t a2, uint64_t a3, uint64_t a4)
{
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 3221225472LL;
  aBlock[2] = ___ZN8GPUTools15ResourceUpdater20_CreateMipmapTextureEjii_block_invoke;
  aBlock[3] = &__block_descriptor_40_e5_v8__0l;
  aBlock[4] = this;
  v23[0] = off_1F9610;
  int v8 = _Block_copy(aBlock);
  v23[1] = v8;
  uint64_t v24 = v23;
  __int128 v27 = &v25;
  uint64_t v25 = off_1F9610;
  if (v8)
  {
    uint64_t v9 = _Block_copy(v8);
    __int128 v10 = v24;
    char v26 = v9;
    if (v24 == v23)
    {
      uint64_t v11 = 4LL;
      __int128 v10 = v23;
    }

    else
    {
      if (!v24) {
        goto LABEL_8;
      }
      uint64_t v11 = 5LL;
    }
  }

  else
  {
    char v26 = 0LL;
    __int128 v10 = v23;
    uint64_t v11 = 4LL;
  }

  (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_8:
  install_caching_dispatch(**this);
  else {
    size_t v12 = 2LL * (int)a4 * (int)a3;
  }
  char v13 = operator new[](v12);
  uint64_t v14 = NewInterposeGLObject((uint64_t)*this, 5890);
  ((void (*)(uint64_t, uint64_t, uint64_t))this[2][5])(this[1][2], a2, v14);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))this[2][304])(this[1][2], a2, 10240LL, 9729LL);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))this[2][304])(this[1][2], a2, 10241LL, 9985LL);
  if ((int)a3 >= 1 && (int)a4 >= 1)
  {
    uint64_t v15 = 0LL;
    do
    {
      uint64_t v16 = (a4 * a3);
      if ((int)v16 >= 1)
      {
        __int16 v17 = sMipmapColors[v15];
        unint64_t v18 = v13;
        do
        {
          *v18++ = v17;
          --v16;
        }

        while (v16);
      }

      if ((_DWORD)a2 == 34067)
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, int, _WORD *))this[2][301])( this[1][2],  34069LL,  v15,  6407LL,  a3,  a4,  0LL,  6407LL,  33635,  v13);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, int, _WORD *))this[2][301])( this[1][2],  34070LL,  v15,  6407LL,  a3,  a4,  0LL,  6407LL,  33635,  v13);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, int, _WORD *))this[2][301])( this[1][2],  34071LL,  v15,  6407LL,  a3,  a4,  0LL,  6407LL,  33635,  v13);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, int, _WORD *))this[2][301])( this[1][2],  34072LL,  v15,  6407LL,  a3,  a4,  0LL,  6407LL,  33635,  v13);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, int, _WORD *))this[2][301])( this[1][2],  34073LL,  v15,  6407LL,  a3,  a4,  0LL,  6407LL,  33635,  v13);
        uint64_t v19 = 34074LL;
      }

      else
      {
        if ((_DWORD)a2 != 3553)
        {
          dy_abort("unsupported texture target: 0x%x", a2);
          __break(1u);
        }

        uint64_t v19 = 3553LL;
      }

      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, int, _WORD *))this[2][301])( this[1][2],  v19,  v15,  6407LL,  a3,  a4,  0LL,  6407LL,  33635,  v13);
      a3 = a3 >> 1;
      ++v15;
      BOOL v20 = (int)a4 <= 1;
      a4 = a4 >> 1;
    }

    while (!v20);
  }

  operator delete[](v13);
  GPUTools::ScopeFunction::~ScopeFunction((GPUTools::ScopeFunction *)&v25);
  return v14;
}

void sub_1D21C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, char *a19, char a20)
{
  BOOL v21 = a19;
  if (a19 == &a16)
  {
    uint64_t v22 = 4LL;
    BOOL v21 = &a16;
  }

  else
  {
    if (!a19) {
      goto LABEL_6;
    }
    uint64_t v22 = 5LL;
  }

  (*(void (**)(void))(*(void *)v21 + 8 * v22))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t ___ZN8GPUTools15ResourceUpdater20_CreateMipmapTextureEjii_block_invoke(uint64_t a1)
{
  uint64_t v1 = ***(void ***)(a1 + 32);
  uint64_t v2 = choose_dispatch_table(a1);
  return install_dispatch_table(v1, (uint64_t)v2);
}

uint64_t GPUTools::ResourceUpdater::_OverrideTextureWithMapmapTexture(uint64_t **this, uint64_t a2, uint64_t a3)
{
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 3221225472LL;
  aBlock[2] = ___ZN8GPUTools15ResourceUpdater33_OverrideTextureWithMapmapTextureEjj_block_invoke;
  aBlock[3] = &__block_descriptor_40_e5_v8__0l;
  aBlock[4] = this;
  v27[0] = off_1F9610;
  BOOL v6 = _Block_copy(aBlock);
  v27[1] = v6;
  uint64_t v28 = v27;
  char v31 = &v29;
  uint64_t v29 = off_1F9610;
  if (v6)
  {
    uint64_t v7 = _Block_copy(v6);
    int v8 = v28;
    uint64_t v30 = v7;
    if (v28 == v27)
    {
      uint64_t v9 = 4LL;
      int v8 = v27;
    }

    else
    {
      if (!v28) {
        goto LABEL_8;
      }
      uint64_t v9 = 5LL;
    }
  }

  else
  {
    uint64_t v30 = 0LL;
    int v8 = v27;
    uint64_t v9 = 4LL;
  }

  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_8:
  install_caching_dispatch(**this);
  uint64_t v10 = (*this)[5];
  *(void *)((char *)v24 + 7) = 0LL;
  v24[0] = 0LL;
  GPUTools::GL::DYGetTextureTargetInfo(a3, v24);
  ((void (*)(uint64_t, void, unsigned int *))this[2][104])(this[1][2], HIDWORD(v24[0]), &v23);
  ((void (*)(uint64_t, uint64_t, uint64_t))this[2][5])(this[1][2], a3, a2);
  if ((_DWORD)a3 == 34067) {
    uint64_t v11 = 34069LL;
  }
  else {
    uint64_t v11 = a3;
  }
  ((void (*)(uint64_t, uint64_t, void, uint64_t, unsigned int *))this[2][125])( this[1][2],  v11,  0LL,  4096LL,  &v22);
  ((void (*)(uint64_t, uint64_t, void, uint64_t, int *))this[2][125])(this[1][2], v11, 0LL, 4097LL, &v21);
  uint64_t v12 = v22;
  if ((int)v22 < 1
    || (uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v22), v13.i16[0] = vaddlv_u8(v13), v13.i32[0] > 1u)
    || (unsigned int v14 = v21, v21 < 1)
    || (uint8x8_t v15 = (uint8x8_t)vcnt_s8((int8x8_t)v21), v15.i16[0] = vaddlv_u8(v15), v15.i32[0] >= 2u))
  {
    unsigned int v14 = 1;
    int v21 = 1;
    unsigned int v22 = 1;
    uint64_t v12 = 1LL;
  }

  unint64_t v20 = v14 | (unint64_t)(v12 << 32);
  uint64_t v16 = (void *)(v10 + 152);
  __int16 v17 = std::__hash_table<std::__hash_value_type<unsigned long long,unsigned int>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned int>>>::find<unsigned long long>( v16,  &v20);
  if (v17)
  {
    uint64_t MipmapTexture = *((unsigned int *)v17 + 6);
  }

  else
  {
    uint64_t MipmapTexture = GPUTools::ResourceUpdater::_CreateMipmapTexture(this, a3, v22, v21);
    if ((_DWORD)MipmapTexture)
    {
      char v26 = &v20;
      *((_DWORD *)std::__hash_table<std::__hash_value_type<unsigned long long,unsigned int>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned int>>>::__emplace_unique_key_args<unsigned long long,std::piecewise_construct_t const&,std::tuple<unsigned long long const&>,std::tuple<>>( (uint64_t)v16,  &v20,  (uint64_t)&std::piecewise_construct,  &v26)
      + 6) = MipmapTexture;
    }
  }

  ((void (*)(uint64_t, uint64_t, void))this[2][5])(this[1][2], a3, v23);
  GPUTools::ScopeFunction::~ScopeFunction((GPUTools::ScopeFunction *)&v29);
  return MipmapTexture;
}

void sub_1D24F8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, char *a25)
{
  char v26 = a25;
  if (a25 == &a22)
  {
    uint64_t v27 = 4LL;
    char v26 = &a22;
  }

  else
  {
    if (!a25) {
      goto LABEL_6;
    }
    uint64_t v27 = 5LL;
  }

  (*(void (**)(void))(*(void *)v26 + 8 * v27))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t ___ZN8GPUTools15ResourceUpdater33_OverrideTextureWithMapmapTextureEjj_block_invoke(uint64_t a1)
{
  uint64_t v1 = ***(void ***)(a1 + 32);
  uint64_t v2 = choose_dispatch_table(a1);
  return install_dispatch_table(v1, (uint64_t)v2);
}

uint64_t GPUTools::ResourceUpdater::UpdateTexture( uint64_t **this, unsigned int a2, NSDictionary *a3, NSMutableDictionary *a4)
{
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 3221225472LL;
  aBlock[2] = ___ZN8GPUTools15ResourceUpdater13UpdateTextureEjP12NSDictionaryP19NSMutableDictionary_block_invoke;
  aBlock[3] = &__block_descriptor_40_e5_v8__0l;
  aBlock[4] = this;
  v18[0] = off_1F9610;
  uint64_t v7 = _Block_copy(aBlock);
  v18[1] = v7;
  uint64_t v19 = v18;
  unsigned int v22 = &v20;
  unint64_t v20 = off_1F9610;
  if (v7)
  {
    int v8 = _Block_copy(v7);
    uint64_t v9 = v19;
    int v21 = v8;
    if (v19 == v18)
    {
      uint64_t v10 = 4LL;
      uint64_t v9 = v18;
    }

    else
    {
      if (!v19) {
        goto LABEL_8;
      }
      uint64_t v10 = 5LL;
    }
  }

  else
  {
    int v21 = 0LL;
    uint64_t v9 = v18;
    uint64_t v10 = 4LL;
  }

  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_8:
  install_caching_dispatch(**this);
  unsigned int v11 = objc_msgSend( -[NSDictionary objectForKey:](a3, "objectForKey:", kDYResourceOverrideKey),  "unsignedIntValue");
  if (v11 - 3 <= 0xFFFFFFFD) {
    __assert_rtn( "BOOL GPUTools::ResourceUpdater::UpdateTexture(GLuint, NSDictionary *, NSMutableDictionary *)",  (const char *)&unk_1F0B16,  0,  "unsafeOverride > 0 && unsafeOverride < kMaxResourceOverrides");
  }
  if (v11 == 1)
  {
    uint8x8_t v13 = (void *)((*this)[5] + 192);
    unint64_t v17 = a2;
    std::__hash_table<std::__hash_value_type<unsigned long long,unsigned int>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned int>>>::__erase_unique<unsigned long long>( v13,  &v17);
  }

  else if (v11 == 2)
  {
    uint64_t v12 = (*this)[5] + 192;
    unint64_t v15 = a2;
    unint64_t v17 = (unint64_t)&v15;
    *((_DWORD *)std::__hash_table<std::__hash_value_type<unsigned long long,unsigned int>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned int>>>::__emplace_unique_key_args<unsigned long long,std::piecewise_construct_t const&,std::tuple<unsigned long long &&>,std::tuple<>>( v12,  &v15,  (uint64_t)&std::piecewise_construct,  (void **)&v17)
    + 6) = 2;
  }

  GPUTools::ScopeFunction::~ScopeFunction((GPUTools::ScopeFunction *)&v20);
  return 1LL;
}

void sub_1D276C(_Unwind_Exception *a1)
{
}

uint64_t ___ZN8GPUTools15ResourceUpdater13UpdateTextureEjP12NSDictionaryP19NSMutableDictionary_block_invoke( uint64_t a1)
{
  uint64_t v1 = ***(void ***)(a1 + 32);
  uint64_t v2 = choose_dispatch_table(a1);
  return install_dispatch_table(v1, (uint64_t)v2);
}

uint64_t **GPUTools::ResourceUpdater::_GetOverrideTexture(uint64_t **result, uint64_t a2, uint64_t a3, int a4)
{
  if (a4 == 2) {
    return (uint64_t **)GPUTools::ResourceUpdater::_OverrideTextureWithMapmapTexture(result, a2, a3);
  }
  if (a4 == 1 || a4 == 3)
  {
    uint64_t v4 = (GPUTools::ResourceUpdater *)dy_abort("_GetOverrideTexture: invalid override: %u", a4);
    return (uint64_t **)GPUTools::ResourceUpdater::_CopyMipmapTexParams(v4, v5, v6, v7);
  }

  return result;
}

uint64_t GPUTools::ResourceUpdater::_CopyMipmapTexParams( GPUTools::ResourceUpdater *this, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unsigned int v10 = 1000;
  unsigned int v11 = 0;
  float v8 = 1000.0;
  float v9 = 0.0;
  (*(void (**)(void))(*((void *)this + 2) + 40LL))(*(void *)(*((void *)this + 1) + 16LL));
  (*(void (**)(void, uint64_t, uint64_t, unsigned int *))(*((void *)this + 2) + 1016LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  10240LL,  &v14);
  (*(void (**)(void, uint64_t, uint64_t, unsigned int *))(*((void *)this + 2) + 1016LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  10241LL,  &v13);
  (*(void (**)(void, uint64_t, uint64_t, float *))(*((void *)this + 2) + 1008LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  34046LL,  &v12);
  if (*(int *)(*(void *)this + 3460LL) < 2)
  {
    if (is_extension_available(*(void *)this, "GL_APPLE_texture_max_level")) {
      (*(void (**)(void, uint64_t, uint64_t, unsigned int *))(*((void *)this + 2) + 1016LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  33085LL,  &v10);
    }
  }

  else
  {
    (*(void (**)(void, uint64_t, uint64_t, unsigned int *))(*((void *)this + 2) + 1016LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  33084LL,  &v11);
    (*(void (**)(void, uint64_t, uint64_t, unsigned int *))(*((void *)this + 2) + 1016LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  33085LL,  &v10);
    (*(void (**)(void, uint64_t, uint64_t, float *))(*((void *)this + 2) + 1008LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  33082LL,  &v9);
    (*(void (**)(void, uint64_t, uint64_t, float *))(*((void *)this + 2) + 1008LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  33083LL,  &v8);
  }

  (*(void (**)(void, uint64_t, uint64_t))(*((void *)this + 2) + 40LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  a4);
  (*(void (**)(void, uint64_t, uint64_t, void))(*((void *)this + 2) + 2432LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  10240LL,  v14);
  (*(void (**)(void, uint64_t, uint64_t, void))(*((void *)this + 2) + 2432LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  10241LL,  v13);
  (*(void (**)(void, uint64_t, uint64_t, float))(*((void *)this + 2) + 2416LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  34046LL,  v12);
  if (*(int *)(*(void *)this + 3460LL) < 2)
  {
    uint64_t result = is_extension_available(*(void *)this, "GL_APPLE_texture_max_level");
    if ((_DWORD)result) {
      return (*(uint64_t (**)(void, uint64_t, uint64_t, void))(*((void *)this + 2) + 2432LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  33085LL,  v10);
    }
  }

  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*((void *)this + 2) + 2432LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  33084LL,  v11);
    (*(void (**)(void, uint64_t, uint64_t, void))(*((void *)this + 2) + 2432LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  33085LL,  v10);
    (*(void (**)(void, uint64_t, uint64_t, float))(*((void *)this + 2) + 2416LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  33082LL,  v9);
    return (*(uint64_t (**)(void, uint64_t, uint64_t, float))(*((void *)this + 2) + 2416LL))( *(void *)(*((void *)this + 1) + 16LL),  a2,  33083LL,  v8);
  }

  return result;
}

void GPUTools::ResourceUpdater::ApplyDrawOverrides(uint64_t **this)
{
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 3221225472LL;
  aBlock[2] = ___ZN8GPUTools15ResourceUpdater18ApplyDrawOverridesEv_block_invoke;
  aBlock[3] = &__block_descriptor_40_e5_v8__0l;
  aBlock[4] = this;
  v21[0] = off_1F9610;
  uint64_t v2 = _Block_copy(aBlock);
  v21[1] = v2;
  unsigned int v22 = v21;
  uint64_t v25 = &v23;
  unsigned int v23 = off_1F9610;
  if (v2)
  {
    uint64_t v3 = _Block_copy(v2);
    uint64_t v4 = v22;
    uint64_t v24 = v3;
    if (v22 == v21)
    {
      uint64_t v5 = 4LL;
      uint64_t v4 = v21;
    }

    else
    {
      if (!v22) {
        goto LABEL_8;
      }
      uint64_t v5 = 5LL;
    }
  }

  else
  {
    uint64_t v24 = 0LL;
    uint64_t v4 = v21;
    uint64_t v5 = 4LL;
  }

  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_8:
  install_caching_dispatch(**this);
  unsigned int v6 = *this;
  uint64_t v7 = (*this)[5];
  if (*(void *)(v7 + 216))
  {
    unsigned int v18 = 0;
    if (*((_DWORD *)v6 + 861))
    {
      unsigned int v8 = 0;
      float v9 = (void *)(v7 + 192);
      do
      {
        ((void (*)(uint64_t, void))this[2][342])(this[1][2], v8 + 33984);
        unsigned int v6 = *this;
        unsigned int v10 = (unsigned int *)(*this)[426];
        unsigned int v11 = (unsigned int *)(*this)[427];
        if (v10 != v11)
        {
          do
          {
            uint64_t v12 = *v10;
            if ((_DWORD)v12 == 34067)
            {
              unsigned int v13 = &(*this)[5 * v18 + 262];
              unsigned int v14 = (char *)(this + 8);
            }

            else
            {
              if ((_DWORD)v12 != 3553)
              {
                dy_abort("unsupported or unknown texture target: 0x%04X", *v10);
                __break(1u);
              }

              unsigned int v13 = (uint64_t *)((char *)&(*this)[5 * v18 + 260] + 4);
              unsigned int v14 = (char *)(this + 3);
            }

            uint64_t v15 = *(unsigned int *)v13;
            unint64_t v20 = (unsigned int *)v15;
            uint64_t v16 = std::__hash_table<std::__hash_value_type<unsigned long long,unsigned int>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned int>>>::find<unsigned long long>( v9,  (unint64_t *)&v20);
            if (v16)
            {
              OverrideTexture = GPUTools::ResourceUpdater::_GetOverrideTexture(this, v15, v12, *((_DWORD *)v16 + 6));
              GPUTools::ResourceUpdater::_CopyMipmapTexParams( (GPUTools::ResourceUpdater *)this,  v12,  v15,  (uint64_t)OverrideTexture);
              ((void (*)(uint64_t, uint64_t, uint64_t **))this[2][5])(this[1][2], v12, OverrideTexture);
              unint64_t v20 = &v18;
              *((_DWORD *)std::__hash_table<std::__hash_value_type<unsigned int,unsigned int>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int>>>::__emplace_unique_key_args<unsigned int,std::piecewise_construct_t const&,std::tuple<unsigned int const&>,std::tuple<>>( (uint64_t)v14,  &v18,  (uint64_t)&std::piecewise_construct,  &v20)
              + 5) = v15;
            }

            ++v10;
          }

          while (v10 != v11);
          unsigned int v6 = *this;
        }

        unsigned int v8 = v18 + 1;
        unsigned int v18 = v8;
      }

      while (v8 < *((_DWORD *)v6 + 861));
    }

    ((void (*)(uint64_t, void))this[2][342])(this[1][2], *((unsigned int *)v6 + 518));
  }

  GPUTools::ScopeFunction::~ScopeFunction((GPUTools::ScopeFunction *)&v23);
}

void sub_1D2D58( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
}

uint64_t ___ZN8GPUTools15ResourceUpdater18ApplyDrawOverridesEv_block_invoke(uint64_t a1)
{
  uint64_t v1 = ***(void ***)(a1 + 32);
  uint64_t v2 = choose_dispatch_table(a1);
  return install_dispatch_table(v1, (uint64_t)v2);
}

void GPUTools::ResourceUpdater::RemoveDrawOverrides(uint64_t **this)
{
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = ___ZN8GPUTools15ResourceUpdater19RemoveDrawOverridesEv_block_invoke;
  v8[3] = &__block_descriptor_40_e5_v8__0l;
  v8[4] = this;
  v9[0] = off_1F9610;
  uint64_t v2 = _Block_copy(v8);
  v9[1] = v2;
  unsigned int v10 = v9;
  unsigned int v13 = &v11;
  unsigned int v11 = off_1F9610;
  if (!v2)
  {
    uint64_t v12 = 0LL;
    uint64_t v4 = v9;
    uint64_t v5 = 4LL;
    goto LABEL_7;
  }

  uint64_t v3 = _Block_copy(v2);
  uint64_t v4 = v10;
  uint64_t v12 = v3;
  if (v10 == v9)
  {
    uint64_t v5 = 4LL;
    uint64_t v4 = v9;
    goto LABEL_7;
  }

  if (v10)
  {
    uint64_t v5 = 5LL;
LABEL_7:
    (*(void (**)(void))(*v4 + 8 * v5))();
  }

  install_caching_dispatch(**this);
  for (uint64_t i = (char *)(this + 5);
        ;
        ((void (*)(uint64_t, uint64_t, void))this[2][5])(this[1][2], 3553LL, *((unsigned int *)i + 5)))
  {
    uint64_t i = *(char **)i;
    if (!i) {
      break;
    }
    ((void (*)(uint64_t, void))this[2][342])(this[1][2], (*((_DWORD *)i + 4) + 33984));
  }

  std::__hash_table<std::__hash_value_type<unsigned int,unsigned int>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int>>>::clear(this + 3);
  for (j = (char *)(this + 10);
        ;
        ((void (*)(uint64_t, uint64_t, void))this[2][5])(this[1][2], 34067LL, *((unsigned int *)j + 5)))
  {
    j = *(char **)j;
    if (!j) {
      break;
    }
    ((void (*)(uint64_t, void))this[2][342])(this[1][2], (*((_DWORD *)j + 4) + 33984));
  }

  std::__hash_table<std::__hash_value_type<unsigned int,unsigned int>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int>>>::clear(this + 8);
  ((void (*)(uint64_t, void))this[2][342])(this[1][2], *((unsigned int *)*this + 518));
  GPUTools::ScopeFunction::~ScopeFunction((GPUTools::ScopeFunction *)&v11);
}

void sub_1D2FC8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char *a17, char a18)
{
  uint64_t v19 = a17;
  if (a17 == &a14)
  {
    uint64_t v20 = 4LL;
    uint64_t v19 = &a14;
  }

  else
  {
    if (!a17) {
      goto LABEL_6;
    }
    uint64_t v20 = 5LL;
  }

  (*(void (**)(void))(*(void *)v19 + 8 * v20))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t ___ZN8GPUTools15ResourceUpdater19RemoveDrawOverridesEv_block_invoke(uint64_t a1)
{
  uint64_t v1 = ***(void ***)(a1 + 32);
  uint64_t v2 = choose_dispatch_table(a1);
  return install_dispatch_table(v1, (uint64_t)v2);
}

BOOL GPUTools::ResourceUpdater::HasDrawOverride(GPUTools::ResourceUpdater *this)
{
  return *(void *)(*(void *)(*(void *)this + 40LL) + 216LL) != 0LL;
}

void GPUTools::ResourceUpdater::ClearOverrides(uint64_t **this)
{
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = ___ZN8GPUTools15ResourceUpdater14ClearOverridesEv_block_invoke;
  v8[3] = &__block_descriptor_40_e5_v8__0l;
  v8[4] = this;
  v9[0] = off_1F9610;
  uint64_t v2 = _Block_copy(v8);
  v9[1] = v2;
  unsigned int v10 = v9;
  unsigned int v13 = &v11;
  unsigned int v11 = off_1F9610;
  if (!v2)
  {
    uint64_t v12 = 0LL;
    uint64_t v4 = v9;
    uint64_t v5 = 4LL;
    goto LABEL_7;
  }

  uint64_t v3 = _Block_copy(v2);
  uint64_t v4 = v10;
  uint64_t v12 = v3;
  if (v10 == v9)
  {
    uint64_t v5 = 4LL;
    uint64_t v4 = v9;
    goto LABEL_7;
  }

  if (v10)
  {
    uint64_t v5 = 5LL;
LABEL_7:
    (*(void (**)(void))(*v4 + 8 * v5))();
  }

  install_caching_dispatch(**this);
  unsigned int v6 = (void *)(*this)[5];
  std::__hash_table<std::__hash_value_type<unsigned int,unsigned int>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int>>>::clear(v6 + 24);
  for (uint64_t i = v6 + 21; ; ((void (*)(uint64_t, uint64_t, void *))this[2][59])(this[1][2], 1LL, i + 3))
  {
    uint64_t i = (void *)*i;
    if (!i) {
      break;
    }
  }

  std::__hash_table<std::__hash_value_type<unsigned int,unsigned int>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int>>>::clear(v6 + 19);
  GPUTools::ScopeFunction::~ScopeFunction((GPUTools::ScopeFunction *)&v11);
}

void sub_1D31CC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char *a17, char a18)
{
  uint64_t v19 = a17;
  if (a17 == &a14)
  {
    uint64_t v20 = 4LL;
    uint64_t v19 = &a14;
  }

  else
  {
    if (!a17) {
      goto LABEL_6;
    }
    uint64_t v20 = 5LL;
  }

  (*(void (**)(void))(*(void *)v19 + 8 * v20))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t ___ZN8GPUTools15ResourceUpdater14ClearOverridesEv_block_invoke(uint64_t a1)
{
  uint64_t v1 = ***(void ***)(a1 + 32);
  uint64_t v2 = choose_dispatch_table(a1);
  return install_dispatch_table(v1, (uint64_t)v2);
}

uint64_t std::__function::__func<void({block_pointer})(void),std::allocator<void({block_pointer})(void)>,void ()(void)>::__clone()
{
  return 0LL;
}

void *std::__function::__func<void({block_pointer})(void),std::allocator<void({block_pointer})(void)>,void ()(void)>::__clone( uint64_t a1, void *a2)
{
  *a2 = off_1F9610;
  uint64_t result = *(void **)(a1 + 8);
  if (result) {
    uint64_t result = _Block_copy(result);
  }
  a2[1] = result;
  return result;
}

void std::__function::__func<void({block_pointer})(void),std::allocator<void({block_pointer})(void)>,void ()(void)>::destroy( uint64_t a1)
{
  uint64_t v2 = *(const void **)(a1 + 8);
  if (v2) {
    _Block_release(v2);
  }
  *(void *)(a1 + _Block_object_dispose((const void *)(v28 - 80), 8) = 0LL;
}

uint64_t std::__function::__func<void({block_pointer})(void),std::allocator<void({block_pointer})(void)>,void ()(void)>::operator()( uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16LL))();
}

uint64_t *std::__hash_table<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>>>::__emplace_unique_key_args<unsigned int,std::piecewise_construct_t const&,std::tuple<unsigned int const&>,std::tuple<>>( uint64_t a1, unsigned int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }

    else
    {
      unint64_t v4 = ((_DWORD)v8 - 1) & v7;
    }

    unsigned int v10 = *(uint64_t ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      for (uint64_t i = *v10; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v12 = i[1];
        if (v12 == v7)
        {
          if (*((_DWORD *)i + 4) == (_DWORD)v7) {
            return i;
          }
        }

        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
          }

          else
          {
            v12 &= v8 - 1;
          }

          if (v12 != v4) {
            break;
          }
        }
      }
    }
  }

  uint64_t v13 = a1 + 16;
  unsigned int v14 = operator new(0x28uLL);
  v24[0] = v14;
  v24[1] = a1 + 16;
  void *v14 = 0LL;
  v14[1] = v7;
  *((_DWORD *)v14 + 4) = **a4;
  v14[3] = 0LL;
  v14[4] = 0LL;
  char v25 = 1;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v16 = *(float *)(a1 + 32);
  if (!v8 || (float)(v16 * (float)v8) < v15)
  {
    BOOL v17 = 1LL;
    if (v8 >= 3) {
      BOOL v17 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v8);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    std::__hash_table<std::__hash_value_type<unsigned int,unsigned int volatile>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int volatile>>>::__rehash<true>( a1,  v20);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }

    else
    {
      unint64_t v4 = ((_DWORD)v8 - 1) & v7;
    }
  }

  int v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    *(void *)v24[0] = *v21;
    *int v21 = v24[0];
  }

  else
  {
    *(void *)v24[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v24[0];
    *(void *)(*(void *)a1 + 8 * v4) = v13;
    if (*(void *)v24[0])
    {
      unint64_t v22 = *(void *)(*(void *)v24[0] + 8LL);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v22 >= v8) {
          v22 %= v8;
        }
      }

      else
      {
        v22 &= v8 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v22) = v24[0];
    }
  }

  uint64_t i = (uint64_t *)v24[0];
  v24[0] = 0LL;
  ++*(void *)(a1 + 24);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,void *>>>>::reset[abi:ne180100]( (uint64_t)v24,  0LL);
  return i;
}

void sub_1D358C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<unsigned int,std::shared_ptr<ProgramInfo>>,void *>>>>::reset[abi:ne180100]( uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      std::shared_ptr<ShaderInfo>::~shared_ptr[abi:ne180100]((uint64_t)v2 + 24);
    }
    operator delete(v2);
  }

uint64_t std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table( uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0LL;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node( int a1, void **__p)
{
  if (__p)
  {
    uint64_t v2 = __p;
    do
    {
      uint64_t v3 = (void **)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }

    while (v3);
  }

unsigned __int8 *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_impl<char * const&>( void *a1, char **a2)
{
  inserted = std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__node_insert_unique( a1,  (uint64_t)__p);
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = (void **)__p;
    std::string __p = 0LL;
    if (v5) {
      std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100]( (uint64_t)&v8,  v5);
    }
  }

  return inserted;
}

void sub_1D36C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p) {
    std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100]( (uint64_t)&a11,  __p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__construct_node<char * const&>@<X0>( uint64_t a1@<X0>, char **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a1 + 16;
  unint64_t v7 = operator new(0x28uLL);
  *(void *)(a3 + _Block_object_dispose((const void *)(v28 - 80), 8) = v6;
  *(void *)a3 = v7;
  *(_BYTE *)(a3 + 16) = 0;
  *unint64_t v7 = 0LL;
  v7[1] = 0LL;
  std::string::basic_string[abi:ne180100]<0>(v7 + 2, *a2);
  *(_BYTE *)(a3 + 16) = 1;
  unint64_t result = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)(v7 + 2));
  v7[1] = result;
  return result;
}

void sub_1D376C(_Unwind_Exception *a1)
{
  *uint64_t v2 = 0LL;
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](v3, v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__node_insert_unique( void *a1, uint64_t a2)
{
  uint64_t v2 = (void *)a2;
  char v4 = (unsigned __int8 *)(a2 + 16);
  unint64_t v5 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)(a1 + 3), a2 + 16);
  v2[1] = v5;
  uint64_t v6 = std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__node_insert_unique_prepare[abi:ne180100]( (uint64_t)a1,  v5,  v4);
  if (v6) {
    return v6;
  }
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__node_insert_unique_perform[abi:ne180100]( a1,  v2);
  return (unsigned __int8 *)v2;
}

unint64_t std::__string_hash<char>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  }

  else
  {
    a2 = *(void *)a2;
    unint64_t v3 = v2;
  }

  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]( uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      uint64_t v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      uint64_t v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      uint64_t v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      uint64_t v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      uint64_t v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      unint64_t v11 = v7 + v9;
      unint64_t v12 = 0x9DDFEA08EB382D69LL
          * (v6 ^ ((0x9DDFEA08EB382D69LL * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69LL * (v6 ^ (v4 + a3))));
      unint64_t v13 = 0x9DDFEA08EB382D69LL * (v12 ^ (v12 >> 47));
      unint64_t v14 = v8 + a3 + v7 + v4;
      uint64_t v15 = v14 + v5;
      unint64_t v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297LL * (v12 ^ (v12 >> 47)), 21);
      uint64_t v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v18 = v17 + v6 + v9;
      uint64_t v19 = __ROR8__(v18, 44);
      uint64_t v20 = v18 + v10;
      uint64_t v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      uint64_t v23 = *a2;
      unint64_t v22 = a2 + 4;
      unint64_t v24 = v23 - 0x4B6D499041670D8DLL * v5;
      uint64_t v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0LL);
      do
      {
        uint64_t v26 = *(v22 - 3);
        uint64_t v27 = v24 + v15 + v11 + v26;
        uint64_t v28 = v22[2];
        uint64_t v29 = v22[3];
        uint64_t v30 = v22[1];
        unint64_t v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        uint64_t v31 = v13 + v20;
        uint64_t v32 = *(v22 - 2);
        uint64_t v33 = *(v22 - 1);
        uint64_t v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        uint64_t v35 = v34 + v20 + v33;
        uint64_t v36 = v34 + v26 + v32;
        uint64_t v15 = v36 + v33;
        uint64_t v37 = __ROR8__(v36, 44) + v34;
        unint64_t v38 = (0xB492B66FBE98F273LL * __ROR8__(v27, 37)) ^ v21;
        unint64_t v24 = 0xB492B66FBE98F273LL * __ROR8__(v31, 33);
        unint64_t v16 = v37 + __ROR8__(v35 + v38, 21);
        unint64_t v39 = v24 + v21 + *v22;
        uint64_t v20 = v39 + v30 + v28 + v29;
        uint64_t v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        unint64_t v13 = v38;
        v25 += 64LL;
      }

      while (v25);
      unint64_t v40 = v24
          - 0x622015F714C7D297LL
          * ((0x9DDFEA08EB382D69LL
            * (v21 ^ ((0x9DDFEA08EB382D69LL * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69LL * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69LL * (v21 ^ ((0x9DDFEA08EB382D69LL * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69LL * (v21 ^ v16)))) >> 47));
      unint64_t v41 = 0x9DDFEA08EB382D69LL
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297LL
                  * ((0x9DDFEA08EB382D69LL
                    * (v20 ^ ((0x9DDFEA08EB382D69LL * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69LL * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69LL * (v20 ^ ((0x9DDFEA08EB382D69LL * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69LL * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69LL
           * ((0x9DDFEA08EB382D69LL * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69LL * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }

    else
    {
      return std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_33_to_64[abi:ne180100](a2, a3);
    }
  }

  else if (a3 > 0x10)
  {
    return std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_17_to_32[abi:ne180100](a2, a3);
  }

  else
  {
    return std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_0_to_16[abi:ne180100](a2, a3);
  }

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_0_to_16[abi:ne180100]( _DWORD *a1, unint64_t a2)
{
  if (a2 < 9)
  {
    if (a2 < 4)
    {
      unint64_t result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        unint64_t v8 = (0xC949D7C7509E6557LL * (a2 + 4LL * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }

    else
    {
      uint64_t v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      unint64_t v7 = 0x9DDFEA08EB382D69LL * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69LL
           * ((0x9DDFEA08EB382D69LL * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69LL * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }

  else
  {
    uint64_t v3 = *(void *)((char *)a1 + a2 - 8);
    uint64_t v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69LL
          * ((0x9DDFEA08EB382D69LL
            * (v4 ^ ((0x9DDFEA08EB382D69LL * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69LL * (v4 ^ *(void *)a1)))) ^ ((0x9DDFEA08EB382D69LL * (v4 ^ ((0x9DDFEA08EB382D69LL * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69LL * (v4 ^ *(void *)a1)))) >> 47))) ^ v3;
  }

  return result;
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_17_to_32[abi:ne180100]( void *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = 0xB492B66FBE98F273LL * *a1;
  uint64_t v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  unint64_t v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557LL, 20) - 0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8);
  unint64_t v6 = 0x9DDFEA08EB382D69LL * (v5 ^ (v4 - 0x3C5A37A36834CED9LL * *(void *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69LL
       * ((0x9DDFEA08EB382D69LL * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69LL * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_33_to_64[abi:ne180100]( void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((char *)a1 + a2 - 16);
  uint64_t v3 = *a1 - 0x3C5A37A36834CED9LL * (v2 + a2);
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = __ROR8__(v3 + v4, 52);
  uint64_t v7 = v3 + a1[1];
  uint64_t v8 = __ROR8__(v7, 7);
  uint64_t v9 = v7 + v5;
  uint64_t v10 = *(void *)((char *)a1 + a2 - 32) + v5;
  uint64_t v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9LL * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  uint64_t v12 = *(void *)((char *)a1 + a2 - 24) + v10 + v2;
  unint64_t v13 = 0xC3A5C85C97CB3127LL * (v12 + *(void *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1LL
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(void *)((char *)a1 + a2 - 24) + v10, 7)
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9LL * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9LL * (v13 ^ (v13 >> 47))) >> 47));
}

unsigned __int8 *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__node_insert_unique_prepare[abi:ne180100]( uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint8x8_t v7 = (uint8x8_t)vcnt_s8((int8x8_t)v4);
    v7.i16[0] = vaddlv_u8(v7);
    unint64_t v8 = v7.u32[0];
    if (v7.u32[0] > 1uLL) {
      uint64_t v9 = v4 <= a2 ? a2 % v4 : a2;
    }
    else {
      uint64_t v9 = (v4 - 1) & a2;
    }
    uint64_t v10 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v9);
    if (v10)
    {
      for (uint64_t i = *v10; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v12 = *((void *)i + 1);
        if (v12 == a2)
        {
          if ((std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a3) & 1) != 0) {
            return i;
          }
        }

        else
        {
          if (v8 > 1)
          {
            if (v12 >= v4) {
              v12 %= v4;
            }
          }

          else
          {
            v12 &= v4 - 1;
          }

          if (v12 != v9) {
            break;
          }
        }
      }
    }
  }

  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v14 = *(float *)(a1 + 32);
  if (!v4 || (float)(v14 * (float)v4) < v13)
  {
    BOOL v15 = 1LL;
    if (v4 >= 3) {
      BOOL v15 = (v4 & (v4 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v4);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    std::__hash_table<std::__hash_value_type<void const*,std::string>,std::__unordered_map_hasher<void const*,std::__hash_value_type<void const*,std::string>,std::hash<void const*>,std::equal_to<void const*>,true>,std::__unordered_map_equal<void const*,std::__hash_value_type<void const*,std::string>,std::equal_to<void const*>,std::hash<void const*>,true>,std::allocator<std::__hash_value_type<void const*,std::string>>>::__rehash<true>( a1,  v18);
  }

  return 0LL;
}

void *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__node_insert_unique_perform[abi:ne180100]( void *result, void *a2)
{
  int8x8_t v2 = (int8x8_t)result[1];
  unint64_t v3 = a2[1];
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    if (v3 >= *(void *)&v2) {
      v3 %= *(void *)&v2;
    }
  }

  else
  {
    v3 &= *(void *)&v2 - 1LL;
  }

  uint64_t v5 = *(void **)(*result + 8 * v3);
  if (v5)
  {
    *a2 = *v5;
LABEL_13:
    *uint64_t v5 = a2;
    goto LABEL_14;
  }

  *a2 = result[2];
  result[2] = a2;
  *(void *)(*result + 8 * v3) = result + 2;
  if (*a2)
  {
    unint64_t v6 = *(void *)(*a2 + 8LL);
    if (v4.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v2) {
        v6 %= *(void *)&v2;
      }
    }

    else
    {
      v6 &= *(void *)&v2 - 1LL;
    }

    uint64_t v5 = (void *)(*result + 8 * v6);
    goto LABEL_13;
  }

uint64_t std::equal_to<std::string>::operator()[abi:ne180100]( uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unint64_t v3 = a3;
  uint64_t v4 = a2[23];
  if ((v4 & 0x80u) == 0LL) {
    uint64_t v5 = a2[23];
  }
  else {
    uint64_t v5 = *((void *)a2 + 1);
  }
  uint64_t v6 = a3[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0LL) {
    uint64_t v6 = *((void *)a3 + 1);
  }
  if (v5 != v6) {
    return 0LL;
  }
  if (v7 < 0) {
    unint64_t v3 = *(unsigned __int8 **)a3;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v3, *((void *)a2 + 1)) == 0;
  }
  if (!a2[23]) {
    return 1LL;
  }
  uint64_t v8 = v4 - 1;
  do
  {
    int v10 = *a2++;
    int v9 = v10;
    int v12 = *v3++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    uint64_t result = v9 == v11;
  }

  while (v9 == v11 && v14);
  return result;
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100]( uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
  }

  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

unsigned __int8 *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>( void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0LL;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }

  else
  {
    unint64_t v9 = (*(void *)&v5 - 1LL) & v4;
  }

  int v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0LL;
  }
  int v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = *((void *)v11 + 1);
      if (v13 == v6)
      {
        if ((std::equal_to<std::string>::operator()[abi:ne180100](v12, v11 + 16, a2) & 1) != 0) {
          return v11;
        }
      }

      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }

        else
        {
          v13 &= *(void *)&v5 - 1LL;
        }

        if (v13 != v9) {
          return 0LL;
        }
      }

      int v11 = *(unsigned __int8 **)v11;
    }

    while (v11);
  }

  return v11;
}

void *std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int const&>,std::tuple<>>( uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }

    int v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      int v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == (_DWORD)v7) {
              return v11;
            }
          }

          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }

            else
            {
              v12 &= v8 - 1;
            }

            if (v12 != v4) {
              break;
            }
          }

          int v11 = (void *)*v11;
        }

        while (v11);
      }
    }
  }

  int v11 = operator new(0x18uLL);
  *int v11 = 0LL;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  *((_DWORD *)v11 + 5) = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1LL;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    std::__hash_table<std::__hash_value_type<void const*,std::string>,std::__unordered_map_hasher<void const*,std::__hash_value_type<void const*,std::string>,std::hash<void const*>,std::equal_to<void const*>,true>,std::__unordered_map_equal<void const*,std::__hash_value_type<void const*,std::string>,std::equal_to<void const*>,std::hash<void const*>,true>,std::allocator<std::__hash_value_type<void const*,std::string>>>::__rehash<true>( a1,  v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }

  uint64_t v19 = *(void *)a1;
  uint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *int v11 = *v20;
LABEL_38:
    *uint64_t v20 = v11;
    goto LABEL_39;
  }

  *int v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8LL);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }

    else
    {
      v21 &= v8 - 1;
    }

    uint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }

void sub_1D42A4(_Unwind_Exception *a1)
{
}

uint64_t std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__hash_table( uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = 0LL;
  *(void *)uint64_t result = v2;
  *(void *)(result + _Block_object_dispose((const void *)(v28 - 80), 8) = a2[1];
  a2[1] = 0LL;
  uint64_t v5 = a2[2];
  unint64_t v3 = a2 + 2;
  uint64_t v4 = v5;
  *(void *)(result + 16) = v5;
  uint64_t v6 = v3[1];
  *(void *)(result + 24) = v6;
  *(_DWORD *)(result + 32) = *((_DWORD *)v3 + 4);
  if (v6)
  {
    unint64_t v7 = *(void *)(v4 + 8);
    unint64_t v8 = *(void *)(result + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        v7 %= v8;
      }
    }

    else
    {
      v7 &= v8 - 1;
    }

    *(void *)(v2 + 8 * v7) = result + 16;
    *unint64_t v3 = 0LL;
    v3[1] = 0LL;
  }

  return result;
}

void *std::__hash_table<std::__hash_value_type<unsigned long long,unsigned int>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned int>>>::find<unsigned long long>( void *a1, unint64_t *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0LL;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (v3 >= *(void *)&v2) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }

  else
  {
    unint64_t v5 = (*(void *)&v2 - 1LL) & v3;
  }

  uint64_t v6 = *(void **)(*a1 + 8 * v5);
  if (!v6) {
    return 0LL;
  }
  uint64_t result = (void *)*v6;
  if (*v6)
  {
    do
    {
      unint64_t v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == v3) {
          return result;
        }
      }

      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(void *)&v2) {
            v8 %= *(void *)&v2;
          }
        }

        else
        {
          v8 &= *(void *)&v2 - 1LL;
        }

        if (v8 != v5) {
          return 0LL;
        }
      }

      uint64_t result = (void *)*result;
    }

    while (result);
  }

  return result;
}

void *std::__hash_table<std::__hash_value_type<unsigned long long,unsigned int>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned int>>>::__emplace_unique_key_args<unsigned long long,std::piecewise_construct_t const&,std::tuple<unsigned long long const&>,std::tuple<>>( uint64_t a1, unint64_t *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }

    int v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      int v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (v11[2] == v7) {
              return v11;
            }
          }

          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }

            else
            {
              v12 &= v8 - 1;
            }

            if (v12 != v4) {
              break;
            }
          }

          int v11 = (void *)*v11;
        }

        while (v11);
      }
    }
  }

  int v11 = operator new(0x20uLL);
  *int v11 = 0LL;
  v11[1] = v7;
  v11[2] = **a4;
  *((_DWORD *)v11 + 6) = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1LL;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    std::__hash_table<std::__hash_value_type<void const*,std::string>,std::__unordered_map_hasher<void const*,std::__hash_value_type<void const*,std::string>,std::hash<void const*>,std::equal_to<void const*>,true>,std::__unordered_map_equal<void const*,std::__hash_value_type<void const*,std::string>,std::equal_to<void const*>,std::hash<void const*>,true>,std::allocator<std::__hash_value_type<void const*,std::string>>>::__rehash<true>( a1,  v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }

  uint64_t v19 = *(void *)a1;
  uint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *int v11 = *v20;
LABEL_38:
    *uint64_t v20 = v11;
    goto LABEL_39;
  }

  *int v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8LL);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }

    else
    {
      v21 &= v8 - 1;
    }

    uint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }

void sub_1D45E8(_Unwind_Exception *a1)
{
}

void *std::__hash_table<std::__hash_value_type<unsigned long long,unsigned int>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned int>>>::__emplace_unique_key_args<unsigned long long,std::piecewise_construct_t const&,std::tuple<unsigned long long &&>,std::tuple<>>( uint64_t a1, unint64_t *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }

    int v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      int v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (v11[2] == v7) {
              return v11;
            }
          }

          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }

            else
            {
              v12 &= v8 - 1;
            }

            if (v12 != v4) {
              break;
            }
          }

          int v11 = (void *)*v11;
        }

        while (v11);
      }
    }
  }

  int v11 = operator new(0x20uLL);
  *int v11 = 0LL;
  v11[1] = v7;
  v11[2] = **a4;
  *((_DWORD *)v11 + 6) = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1LL;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    std::__hash_table<std::__hash_value_type<void const*,std::string>,std::__unordered_map_hasher<void const*,std::__hash_value_type<void const*,std::string>,std::hash<void const*>,std::equal_to<void const*>,true>,std::__unordered_map_equal<void const*,std::__hash_value_type<void const*,std::string>,std::equal_to<void const*>,std::hash<void const*>,true>,std::allocator<std::__hash_value_type<void const*,std::string>>>::__rehash<true>( a1,  v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }

  uint64_t v19 = *(void *)a1;
  uint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *int v11 = *v20;
LABEL_38:
    *uint64_t v20 = v11;
    goto LABEL_39;
  }

  *int v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8LL);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }

    else
    {
      v21 &= v8 - 1;
    }

    uint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }

void sub_1D4808(_Unwind_Exception *a1)
{
}

uint64_t *std::__hash_table<std::__hash_value_type<unsigned long long,unsigned int>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned int>>>::__erase_unique<unsigned long long>( void *a1, unint64_t *a2)
{
  uint64_t result = std::__hash_table<std::__hash_value_type<unsigned long long,unsigned int>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned int>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned int>>>::find<unsigned long long>( a1,  a2);
  if (result)
  {
    std::__hash_table<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::__unordered_map_hasher<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::hash<EAGLSharegroup *>,std::equal_to<EAGLSharegroup *>,true>,std::__unordered_map_equal<EAGLSharegroup *,std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>,std::equal_to<EAGLSharegroup *>,std::hash<EAGLSharegroup *>,true>,std::allocator<std::__hash_value_type<EAGLSharegroup *,SharegroupInfo *>>>::erase( a1,  result);
    return (void *)(&dword_0 + 1);
  }

  return result;
}

void *std::__hash_table<std::__hash_value_type<unsigned int,unsigned int>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int>>>::__emplace_unique_key_args<unsigned int,std::piecewise_construct_t const&,std::tuple<unsigned int const&>,std::tuple<>>( uint64_t a1, unsigned int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }

    else
    {
      unint64_t v4 = ((_DWORD)v8 - 1) & v7;
    }

    int v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      int v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == (_DWORD)v7) {
              return v11;
            }
          }

          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }

            else
            {
              v12 &= v8 - 1;
            }

            if (v12 != v4) {
              break;
            }
          }

          int v11 = (void *)*v11;
        }

        while (v11);
      }
    }
  }

  int v11 = operator new(0x18uLL);
  *int v11 = 0LL;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  *((_DWORD *)v11 + 5) = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1LL;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    std::__hash_table<std::__hash_value_type<unsigned int,unsigned int volatile>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int volatile>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int volatile>>>::__rehash<true>( a1,  v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }

    else
    {
      unint64_t v4 = ((_DWORD)v8 - 1) & v7;
    }
  }

  uint64_t v19 = *(void *)a1;
  uint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *int v11 = *v20;
LABEL_38:
    *uint64_t v20 = v11;
    goto LABEL_39;
  }

  *int v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8LL);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }

    else
    {
      v21 &= v8 - 1;
    }

    uint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }

void sub_1D4A5C(_Unwind_Exception *a1)
{
}

void *std::__hash_table<std::__hash_value_type<unsigned int,unsigned int>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,unsigned int>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,unsigned int>>>::clear( void *result)
{
  if (result[3])
  {
    uint64_t v1 = result;
    uint64_t result = (void *)result[2];
    if (result)
    {
      do
      {
        int8x8_t v2 = (void *)*result;
        operator delete(result);
        uint64_t result = v2;
      }

      while (v2);
    }

    v1[2] = 0LL;
    uint64_t v3 = v1[1];
    if (v3)
    {
      for (uint64_t i = 0LL; i != v3; ++i)
        *(void *)(*v1 + 8 * i) = 0LL;
    }

    v1[3] = 0LL;
  }

  return result;
}

uint64_t install_caching_dispatch(uint64_t a1)
{
  uint64_t v2 = GLCFrontDispatch();
  install_dispatch_table(a1, v2);
  install_dispatch_function(a1, bind_texture, 5LL);
  install_dispatch_function(a1, delete_textures, 59LL);
  install_dispatch_function(a1, draw_arrays, 65LL);
  install_dispatch_function(a1, draw_elements, 67LL);
  install_dispatch_function(a1, get_error, 102LL);
  install_dispatch_function(a1, viewport, 335LL);
  install_dispatch_function(a1, client_active_texture, 341LL);
  install_dispatch_function(a1, active_texture, 342LL);
  install_dispatch_function(a1, draw_range_elements, 405LL);
  install_dispatch_function(a1, vertex_attrib1f, 476LL);
  install_dispatch_function(a1, vertex_attrib2f, 479LL);
  install_dispatch_function(a1, vertex_attrib3f, 482LL);
  install_dispatch_function(a1, vertex_attrib4f, 485LL);
  install_dispatch_function(a1, vertex_attrib1fv, 489LL);
  install_dispatch_function(a1, vertex_attrib2fv, 492LL);
  install_dispatch_function(a1, vertex_attrib3fv, 495LL);
  install_dispatch_function(a1, vertex_attrib4fv, 503LL);
  install_dispatch_function(a1, delete_object_ARB, 591LL);
  install_dispatch_function(a1, detach_object_ARB, 593LL);
  install_dispatch_function(a1, shader_source_ARB, 595LL);
  install_dispatch_function(a1, compile_shader_ARB, 596LL);
  install_dispatch_function(a1, attach_object_ARB, 598LL);
  install_dispatch_function(a1, link_program_ARB, 599LL);
  install_dispatch_function(a1, use_program_object_ARB, 600LL);
  install_dispatch_function(a1, bind_buffer, 642LL);
  install_dispatch_function(a1, delete_buffers, 643LL);
  install_dispatch_function(a1, buffer_data, 646LL);
  install_dispatch_function(a1, program_parameteri, 689LL);
  install_dispatch_function(a1, bind_buffer_range, 693LL);
  install_dispatch_function(a1, bind_buffer_base, 695LL);
  install_dispatch_function(a1, begin_transform_feedback, 696LL);
  install_dispatch_function(a1, transform_feedback_varyings, 698LL);
  install_dispatch_function(a1, vertex_attribI4i, 714LL);
  install_dispatch_function(a1, vertex_attribI4ui, 718LL);
  install_dispatch_function(a1, vertex_attribI4iv, 722LL);
  install_dispatch_function(a1, vertex_attribI4uiv, 726LL);
  install_dispatch_function(a1, draw_arrays_instanced, 762LL);
  install_dispatch_function(a1, draw_elements_instanced, 763LL);
  install_dispatch_function(a1, bind_vertex_array, 768LL);
  install_dispatch_function(a1, delete_vertex_arrays, 769LL);
  install_dispatch_function(a1, label_object_EXT, 814LL);
  install_dispatch_function(a1, insert_event_marker_EXT, 816LL);
  install_dispatch_function(a1, push_group_marker_EXT, 817LL);
  install_dispatch_function(a1, pop_group_marker_EXT, 818LL);
  install_dispatch_function(a1, use_program_stages, 819LL);
  install_dispatch_function(a1, active_shader_program, 820LL);
  install_dispatch_function(a1, create_shader_programv, 821LL);
  return install_dispatch_function(a1, delete_program_pipelines, 823LL);
}

uint64_t draw_arrays(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  unsigned int v5 = a2;
  uint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      int v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    uint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 32) + 520LL))( a1,  a2,  a3,  a4);
  if (!*(_DWORD *)(v11 + 3404))
  {
    unsigned int v13 = v4;
    switch(v5)
    {
      case 0u:
      case 2u:
        goto LABEL_24;
      case 1u:
        unsigned int v13 = v4 >> 1;
        goto LABEL_24;
      case 3u:
        unsigned int v13 = v4 - 1;
        BOOL v14 = v4 <= 1;
        goto LABEL_21;
      case 4u:
        unsigned int v13 = v4 / 3;
        goto LABEL_24;
      case 5u:
      case 6u:
        unsigned int v13 = v4 - 2;
        BOOL v14 = v4 <= 2;
        goto LABEL_21;
      case 7u:
        unsigned int v13 = v4 / 4;
        goto LABEL_24;
      case 8u:
        unsigned int v13 = (v4 - 2) >> 1;
        BOOL v14 = v4 <= 3;
LABEL_21:
        if (v14) {
          unsigned int v13 = 0;
        }
LABEL_24:
        BOOL v15 = (int64x2_t *)(v11 + 32LL * v5);
        v15[248] = vaddw_s32(v15[248], (int32x2_t)__PAIR64__(v13, v4));
        ++v15[247].i64[1];
        ++v15[249].i64[0];
        break;
      default:
        unint64_t v16 = (__GLIContextRec *)dy_abort("unsupported mode: 0x%0.4x\n", v5);
        uint64_t result = draw_elements(v16, v17, v18, v19, v20);
        break;
    }
  }

  return result;
}

uint64_t draw_elements(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  int v5 = a3;
  unsigned int v6 = a2;
  uint64_t v7 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v7) {
    goto LABEL_12;
  }
  uint64_t v8 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v9 = v7[4];
    BOOL v10 = v9 >= (unint64_t)a1;
    else {
      uint64_t v11 = v7 + 1;
    }
    if (v10) {
      uint64_t v8 = (uint64_t)v7;
    }
    uint64_t v7 = (void *)*v11;
  }

  while (*v11);
  if (v8 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v8 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v8 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v12 = *(void *)(v8 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v12 + 32)
                                                                                                 + 536LL))( a1,  a2,  a3,  a4,  a5);
  if (!*(_DWORD *)(v12 + 3404))
  {
    unsigned int v14 = v5;
    switch(v6)
    {
      case 0u:
      case 2u:
        goto LABEL_24;
      case 1u:
        unsigned int v14 = v5 >> 1;
        goto LABEL_24;
      case 3u:
        unsigned int v14 = v5 - 1;
        BOOL v15 = v5 <= 1;
        goto LABEL_21;
      case 4u:
        unsigned int v14 = v5 / 3;
        goto LABEL_24;
      case 5u:
      case 6u:
        unsigned int v14 = v5 - 2;
        BOOL v15 = v5 <= 2;
        goto LABEL_21;
      case 7u:
        unsigned int v14 = v5 / 4;
        goto LABEL_24;
      case 8u:
        unsigned int v14 = (v5 - 2) >> 1;
        BOOL v15 = v5 <= 3;
LABEL_21:
        if (v15) {
          unsigned int v14 = 0;
        }
LABEL_24:
        unint64_t v16 = (int64x2_t *)(v12 + 32LL * v6);
        v16[234] = vaddw_s32(v16[234], (int32x2_t)__PAIR64__(v14, v5));
        ++v16[233].i64[1];
        ++v16[235].i64[0];
        break;
      default:
        unsigned int v17 = (__GLIContextRec *)dy_abort("unsupported mode: 0x%0.4x\n", v6);
        uint64_t result = get_error(v17);
        break;
    }
  }

  return result;
}

uint64_t viewport(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5 = a5;
  int v6 = a4;
  int v7 = a3;
  int v8 = a2;
  unint64_t v9 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v9) {
    goto LABEL_12;
  }
  uint64_t v10 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v11 = v9[4];
    BOOL v12 = v11 >= (unint64_t)a1;
    else {
      unsigned int v13 = v9 + 1;
    }
    if (v12) {
      uint64_t v10 = (uint64_t)v9;
    }
    unint64_t v9 = (void *)*v13;
  }

  while (*v13);
  if (v10 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v10 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v10 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v14 = *(void *)(v10 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 32)
                                                                                            + 2680LL))( a1,  a2,  a3,  a4,  a5);
  *(_DWORD *)(v14 + 3360) = v8;
  *(_DWORD *)(v14 + 3364) = v7;
  *(_DWORD *)(v14 + 336_Block_object_dispose((const void *)(v28 - 80), 8) = v6;
  *(_DWORD *)(v14 + 3372) = v5;
  return result;
}

uint64_t client_active_texture(__GLIContextRec *a1, uint64_t a2)
{
  int v2 = a2;
  uint64_t v3 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v3) {
    goto LABEL_12;
  }
  uint64_t v4 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v5 = v3[4];
    BOOL v6 = v5 >= (unint64_t)a1;
    else {
      int v7 = v3 + 1;
    }
    if (v6) {
      uint64_t v4 = (uint64_t)v3;
    }
    uint64_t v3 = (void *)*v7;
  }

  while (*v7);
  if (v4 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v4 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v4 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v8 = *(void *)(v4 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v8 + 32) + 2728LL))(a1, a2);
  *(_DWORD *)(v8 + 2076) = v2;
  return result;
}

uint64_t active_texture(__GLIContextRec *a1, uint64_t a2)
{
  int v2 = a2;
  uint64_t v3 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v3) {
    goto LABEL_12;
  }
  uint64_t v4 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v5 = v3[4];
    BOOL v6 = v5 >= (unint64_t)a1;
    else {
      int v7 = v3 + 1;
    }
    if (v6) {
      uint64_t v4 = (uint64_t)v3;
    }
    uint64_t v3 = (void *)*v7;
  }

  while (*v7);
  if (v4 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v4 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v4 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v8 = *(void *)(v4 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t))(*(void *)(v8 + 32) + 2736LL))(a1, a2);
  *(_DWORD *)(v8 + 2072) = v2;
  return result;
}

uint64_t draw_range_elements( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const void *a7)
{
  int v7 = a5;
  unsigned int v8 = a2;
  unint64_t v9 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v9) {
    goto LABEL_12;
  }
  uint64_t v10 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v11 = v9[4];
    BOOL v12 = v11 >= (unint64_t)a1;
    else {
      unsigned int v13 = v9 + 1;
    }
    if (v12) {
      uint64_t v10 = (uint64_t)v9;
    }
    unint64_t v9 = (void *)*v13;
  }

  while (*v13);
  if (v10 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v10 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v10 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v14 = *(void *)(v10 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, const void *))(*(void *)(v14 + 32) + 3240LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7);
  if (!*(_DWORD *)(v14 + 3404))
  {
    unsigned int v16 = v7;
    switch(v8)
    {
      case 0u:
      case 2u:
        goto LABEL_24;
      case 1u:
        unsigned int v16 = v7 >> 1;
        goto LABEL_24;
      case 3u:
        unsigned int v16 = v7 - 1;
        BOOL v17 = v7 <= 1;
        goto LABEL_21;
      case 4u:
        unsigned int v16 = v7 / 3;
        goto LABEL_24;
      case 5u:
      case 6u:
        unsigned int v16 = v7 - 2;
        BOOL v17 = v7 <= 2;
        goto LABEL_21;
      case 7u:
        unsigned int v16 = v7 / 4;
        goto LABEL_24;
      case 8u:
        unsigned int v16 = (v7 - 2) >> 1;
        BOOL v17 = v7 <= 3;
LABEL_21:
        if (v17) {
          unsigned int v16 = 0;
        }
LABEL_24:
        int v18 = (int64x2_t *)(v14 + 32LL * v8);
        v18[248] = vaddw_s32(v18[248], (int32x2_t)__PAIR64__(v16, v7));
        ++v18[247].i64[1];
        ++v18[249].i64[0];
        break;
      default:
        unsigned int v19 = (__GLIContextRec *)dy_abort("unsupported mode: 0x%0.4x\n", v8);
        uint64_t result = vertex_attrib1f(v19, v20, v21);
        break;
    }
  }

  return result;
}

char *vertex_attrib1f(__GLIContextRec *a1, uint64_t a2, __n128 a3)
{
  float v3 = a3.n128_f32[0];
  unsigned int v4 = a2;
  unint64_t v5 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v5) {
    goto LABEL_12;
  }
  uint64_t v6 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v7 = v5[4];
    BOOL v8 = v7 >= (unint64_t)a1;
    else {
      unint64_t v9 = v5 + 1;
    }
    if (v8) {
      uint64_t v6 = (uint64_t)v5;
    }
    unint64_t v5 = (void *)*v9;
  }

  while (*v9);
  if (v6 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v6 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v6 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v10 = *(void *)(v6 + 40);
  (*(void (**)(__GLIContextRec *, uint64_t, __n128))(*(void *)(v10 + 32) + 3808LL))(a1, a2, a3);
  return wrapper_cache_vertex_attrib((char *)v10, v4, 5126, v3, 0.0, 0.0, 1.0);
}

char *vertex_attrib2f(__GLIContextRec *a1, uint64_t a2, __n128 a3, __n128 a4)
{
  float v4 = a4.n128_f32[0];
  float v5 = a3.n128_f32[0];
  unsigned int v6 = a2;
  unint64_t v7 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v7) {
    goto LABEL_12;
  }
  uint64_t v8 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v9 = v7[4];
    BOOL v10 = v9 >= (unint64_t)a1;
    else {
      unint64_t v11 = v7 + 1;
    }
    if (v10) {
      uint64_t v8 = (uint64_t)v7;
    }
    unint64_t v7 = (void *)*v11;
  }

  while (*v11);
  if (v8 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v8 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v8 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v12 = *(void *)(v8 + 40);
  (*(void (**)(__GLIContextRec *, uint64_t, __n128, __n128))(*(void *)(v12 + 32) + 3832LL))(a1, a2, a3, a4);
  return wrapper_cache_vertex_attrib((char *)v12, v6, 5126, v5, v4, 0.0, 1.0);
}

char *vertex_attrib3f(__GLIContextRec *a1, uint64_t a2, __n128 a3, __n128 a4, __n128 a5)
{
  float v5 = a5.n128_f32[0];
  float v6 = a4.n128_f32[0];
  float v7 = a3.n128_f32[0];
  unsigned int v8 = a2;
  unint64_t v9 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v9) {
    goto LABEL_12;
  }
  uint64_t v10 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v11 = v9[4];
    BOOL v12 = v11 >= (unint64_t)a1;
    else {
      unsigned int v13 = v9 + 1;
    }
    if (v12) {
      uint64_t v10 = (uint64_t)v9;
    }
    unint64_t v9 = (void *)*v13;
  }

  while (*v13);
  if (v10 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v10 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v10 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v14 = *(void *)(v10 + 40);
  (*(void (**)(__GLIContextRec *, uint64_t, __n128, __n128, __n128))(*(void *)(v14 + 32) + 3856LL))( a1,  a2,  a3,  a4,  a5);
  return wrapper_cache_vertex_attrib((char *)v14, v8, 5126, v7, v6, v5, 1.0);
}

char *vertex_attrib4f(__GLIContextRec *a1, uint64_t a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  float v6 = a6.n128_f32[0];
  float v7 = a5.n128_f32[0];
  float v8 = a4.n128_f32[0];
  float v9 = a3.n128_f32[0];
  unsigned int v10 = a2;
  unint64_t v11 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v11) {
    goto LABEL_12;
  }
  uint64_t v12 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v13 = v11[4];
    BOOL v14 = v13 >= (unint64_t)a1;
    else {
      BOOL v15 = v11 + 1;
    }
    if (v14) {
      uint64_t v12 = (uint64_t)v11;
    }
    unint64_t v11 = (void *)*v15;
  }

  while (*v15);
  if (v12 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v12 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v12 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v16 = *(void *)(v12 + 40);
  (*(void (**)(__GLIContextRec *, uint64_t, __n128, __n128, __n128, __n128))(*(void *)(v16 + 32) + 3880LL))( a1,  a2,  a3,  a4,  a5,  a6);
  return wrapper_cache_vertex_attrib((char *)v16, v10, 5126, v9, v8, v7, v6);
}

uint64_t shader_source_ARB(__GLIContextRec *a1, uint64_t a2, uint64_t a3, const char **a4, const int *a5)
{
  unsigned int v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      BOOL v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    unsigned int v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  BOOL v15 = *(ContextInfo **)(v11 + 40);
  wrapper_cache_shader_source(v15, a2);
  return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const char **, const int *))(*((void *)v15 + 4) + 4760LL))( a1,  a2,  a3,  a4,  a5);
}

uint64_t buffer_data(__GLIContextRec *a1, volatile int *a2, uint64_t a3, const void *a4)
{
  float v5 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v5) {
    goto LABEL_12;
  }
  uint64_t v6 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v7 = v5[4];
    BOOL v8 = v7 >= (unint64_t)a1;
    else {
      float v9 = v5 + 1;
    }
    if (v8) {
      uint64_t v6 = (uint64_t)v5;
    }
    float v5 = (void *)*v9;
  }

  while (*v9);
  if (v6 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v6 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v6 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v10 = *(void *)(v6 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, volatile int *, uint64_t, const void *))(*(void *)(v10 + 32)
                                                                                               + 5168LL))( a1,  a2,  a3,  a4);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v10);
  }
  if (!*(_DWORD *)(v10 + 3404)) {
    return wrapper_cache_buffer_target(v10, a2);
  }
  return result;
}

uint64_t bind_buffer_range(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a4;
  int v5 = a2;
  uint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      uint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    uint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 32) + 5544LL))( a1,  a2,  a3,  a4);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v11);
  }
  if (!*(_DWORD *)(v11 + 3404)) {
    return (uint64_t)wrapper_cache_buffer_binding((_DWORD *)v11, v5, v4);
  }
  return result;
}

uint64_t begin_transform_feedback(__GLIContextRec *a1)
{
  uint64_t v1 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v1) {
    goto LABEL_12;
  }
  uint64_t v2 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v3 = v1[4];
    BOOL v4 = v3 >= (unint64_t)a1;
    else {
      int v5 = v1 + 1;
    }
    if (v4) {
      uint64_t v2 = (uint64_t)v1;
    }
    uint64_t v1 = (void *)*v5;
  }

  while (*v5);
  if (v2 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v2 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v2 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *))(*(void *)(v6 + 32) + 5568LL))(a1);
  if (!gCheckGLErrors) {
    uint64_t result = check_errors(v6);
  }
  if (!*(_DWORD *)(v6 + 3404)) {
    return (uint64_t)wrapper_cache_active_transform_feedback((ContextInfo *)v6);
  }
  return result;
}

uint64_t transform_feedback_varyings( __GLIContextRec *a1, uint64_t a2, uint64_t a3, const char **a4, uint64_t a5)
{
  uint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      BOOL v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    uint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  BOOL v15 = *(ContextInfo **)(v11 + 40);
  wrapper_cache_program_xfb_varyings(v15, a2);
  return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, const char **, uint64_t))(*((void *)v15 + 4)
                                                                                                + 5584LL))( a1,  a2,  a3,  a4,  a5);
}

char *vertex_attribI4uiv(__GLIContextRec *a1, uint64_t a2, unsigned __int32 *a3)
{
  unsigned int v4 = a2;
  int v5 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v5) {
    goto LABEL_12;
  }
  uint64_t v6 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v7 = v5[4];
    BOOL v8 = v7 >= (unint64_t)a1;
    else {
      BOOL v9 = v5 + 1;
    }
    if (v8) {
      uint64_t v6 = (uint64_t)v5;
    }
    int v5 = (void *)*v9;
  }

  while (*v9);
  if (v6 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v6 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v6 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v10 = *(void *)(v6 + 40);
  __n128 v11 = ((__n128 (*)(__GLIContextRec *, uint64_t, unsigned __int32 *))*(void *)(*(void *)(v10 + 32)
                                                                                          + 5808LL))( a1,  a2,  a3);
  v11.n128_u32[0] = *a3;
  LODWORD(atomic_store(0, v12) = a3[1];
  LODWORD(v13) = a3[2];
  LODWORD(v14) = a3[3];
  return wrapper_cache_vertex_attrib( (char *)v10,  v4,  5125,  (double)v11.n128_u64[0],  (double)v12,  (double)v13,  (double)v14);
}

uint64_t draw_arrays_instanced(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  signed int v5 = a5;
  int v6 = a4;
  unsigned int v7 = a2;
  BOOL v8 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v10 = v8[4];
    BOOL v11 = v10 >= (unint64_t)a1;
    else {
      unint64_t v12 = v8 + 1;
    }
    if (v11) {
      uint64_t v9 = (uint64_t)v8;
    }
    BOOL v8 = (void *)*v12;
  }

  while (*v12);
  if (v9 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v9 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v9 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v13 = *(void *)(v9 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 32)
                                                                                            + 6096LL))( a1,  a2,  a3,  a4,  a5);
  if (!*(_DWORD *)(v13 + 3404))
  {
    unsigned int v15 = v6;
    switch(v7)
    {
      case 0u:
      case 2u:
        goto LABEL_24;
      case 1u:
        unsigned int v15 = v6 >> 1;
        goto LABEL_24;
      case 3u:
        unsigned int v15 = v6 - 1;
        BOOL v16 = v6 <= 1;
        goto LABEL_21;
      case 4u:
        unsigned int v15 = v6 / 3;
        goto LABEL_24;
      case 5u:
      case 6u:
        unsigned int v15 = v6 - 2;
        BOOL v16 = v6 <= 2;
        goto LABEL_21;
      case 7u:
        unsigned int v15 = v6 / 4;
        goto LABEL_24;
      case 8u:
        unsigned int v15 = (v6 - 2) >> 1;
        BOOL v16 = v6 <= 3;
LABEL_21:
        if (v16) {
          unsigned int v15 = 0;
        }
LABEL_24:
        BOOL v17 = (int64x2_t *)(v13 + 32LL * v7);
        v17[276] = vaddw_s32(v17[276], vmul_s32(vdup_n_s32(v5), (int32x2_t)__PAIR64__(v15, v6)));
        ++v17[275].i64[1];
        v17[277].i64[0] += v5;
        break;
      default:
        int v18 = (__GLIContextRec *)dy_abort("unsupported mode: 0x%0.4x\n", v7);
        uint64_t result = draw_elements_instanced(v18, v19, v20, v21, v22, v23);
        break;
    }
  }

  return result;
}

uint64_t draw_elements_instanced( __GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5, uint64_t a6)
{
  signed int v6 = a6;
  int v7 = a3;
  unsigned int v8 = a2;
  uint64_t v9 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v9) {
    goto LABEL_12;
  }
  uint64_t v10 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v11 = v9[4];
    BOOL v12 = v11 >= (unint64_t)a1;
    else {
      uint64_t v13 = v9 + 1;
    }
    if (v12) {
      uint64_t v10 = (uint64_t)v9;
    }
    uint64_t v9 = (void *)*v13;
  }

  while (*v13);
  if (v10 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v10 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v10 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v14 = *(void *)(v10 + 40);
  uint64_t result = (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const void *, uint64_t))(*(void *)(v14 + 32) + 6104LL))( a1,  a2,  a3,  a4,  a5,  a6);
  if (!*(_DWORD *)(v14 + 3404))
  {
    unsigned int v16 = v7;
    switch(v8)
    {
      case 0u:
      case 2u:
        goto LABEL_24;
      case 1u:
        unsigned int v16 = v7 >> 1;
        goto LABEL_24;
      case 3u:
        unsigned int v16 = v7 - 1;
        BOOL v17 = v7 <= 1;
        goto LABEL_21;
      case 4u:
        unsigned int v16 = v7 / 3;
        goto LABEL_24;
      case 5u:
      case 6u:
        unsigned int v16 = v7 - 2;
        BOOL v17 = v7 <= 2;
        goto LABEL_21;
      case 7u:
        unsigned int v16 = v7 / 4;
        goto LABEL_24;
      case 8u:
        unsigned int v16 = (v7 - 2) >> 1;
        BOOL v17 = v7 <= 3;
LABEL_21:
        if (v17) {
          unsigned int v16 = 0;
        }
LABEL_24:
        int v18 = (int64x2_t *)(v14 + 32LL * v8);
        v18[262] = vaddw_s32(v18[262], vmul_s32(vdup_n_s32(v6), (int32x2_t)__PAIR64__(v16, v7)));
        ++v18[261].i64[1];
        v18[263].i64[0] += v6;
        break;
      default:
        unsigned int v19 = (__GLIContextRec *)dy_abort("unsupported mode: 0x%0.4x\n", v8);
        uint64_t result = bind_vertex_array(v19, v20);
        break;
    }
  }

  return result;
}

uint64_t bind_vertex_array(__GLIContextRec *a1)
{
  uint64_t v1 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v1) {
    goto LABEL_12;
  }
  uint64_t v2 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v3 = v1[4];
    BOOL v4 = v3 >= (unint64_t)a1;
    else {
      signed int v5 = v1 + 1;
    }
    if (v4) {
      uint64_t v2 = (uint64_t)v1;
    }
    uint64_t v1 = (void *)*v5;
  }

  while (*v5);
  if (v2 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v2 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v2 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v6 = *(void *)(v2 + 40);
  (*(void (**)(__GLIContextRec *))(*(void *)(v6 + 32) + 6144LL))(a1);
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v6 + 32) + 832LL))( *(void *)(v6 + 16),  34964LL,  v6 + 2032);
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(*(void *)(v6 + 32) + 832LL))( *(void *)(v6 + 16),  34965LL,  v6 + 2036);
}

uint64_t label_object_EXT(__GLIContextRec *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v10 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v12 = v10[4];
    BOOL v13 = v12 >= (unint64_t)a1;
    else {
      uint64_t v14 = v10 + 1;
    }
    if (v13) {
      uint64_t v11 = (uint64_t)v10;
    }
    uint64_t v10 = (void *)*v14;
  }

  while (*v14);
  if (v11 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v11 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v11 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v15 = *(void *)(v11 + 40);
  if ((_DWORD)a2 == 35656) {
    wrapper_cache_shader_label(*(ContextInfo **)(v11 + 40), a3);
  }
  return (*(uint64_t (**)(__GLIContextRec *, uint64_t, uint64_t, uint64_t, const char *))(*(void *)(v15 + 32)
                                                                                               + 6512LL))( a1,  a2,  a3,  a4,  a5);
}

uint64_t insert_event_marker_EXT(__GLIContextRec *a1, unsigned int *a2, char *__s1)
{
  uint64_t v6 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v8 = v6[4];
    BOOL v9 = v8 >= (unint64_t)a1;
    else {
      uint64_t v10 = v6 + 1;
    }
    if (v9) {
      uint64_t v7 = (uint64_t)v6;
    }
    uint64_t v6 = (void *)*v10;
  }

  while (*v10);
  if (v7 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v7 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v7 = ContextInfo::activeCtxInfoMap + 8;
  uint64_t v11 = *(ContextInfo **)(v7 + 40);
  uint64_t result = (uint64_t)wrapper_handle_marker_event(v11, a2, __s1);
  if ((result & 1) == 0) {
    return (*(uint64_t (**)(__GLIContextRec *, unsigned int *, char *))(*((void *)v11 + 4) + 6528LL))( a1,  a2,  __s1);
  }
  return result;
}

void delete_program_pipelines(__GLIContextRec *a1, unsigned int a2, const unsigned int *a3)
{
  unint64_t v3 = *(void **)(ContextInfo::activeCtxInfoMap + 8);
  if (!v3) {
    goto LABEL_12;
  }
  uint64_t v4 = ContextInfo::activeCtxInfoMap + 8;
  do
  {
    unint64_t v5 = v3[4];
    BOOL v6 = v5 >= (unint64_t)a1;
    else {
      uint64_t v7 = v3 + 1;
    }
    if (v6) {
      uint64_t v4 = (uint64_t)v3;
    }
    unint64_t v3 = (void *)*v7;
  }

  while (*v7);
  if (v4 == ContextInfo::activeCtxInfoMap + 8 || *(void *)(v4 + 32) > (unint64_t)a1) {
LABEL_12:
  }
    uint64_t v4 = ContextInfo::activeCtxInfoMap + 8;
  unint64_t v8 = *(ContextInfo **)(v4 + 40);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = ___ZL24delete_program_pipelinesP15__GLIContextReciPKj_block_invoke_4;
  void v9[3] = &__block_descriptor_60_e5_v8__0l;
  void v9[4] = v8;
  v9[5] = a1;
  unsigned int v10 = a2;
  v9[6] = a3;
  wrapper_cache_pipeline_delete(v8, a2, (uint64_t)a3, (uint64_t)v9);
}

uint64_t ___ZL24delete_program_pipelinesP15__GLIContextReciPKj_block_invoke_4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(*(void *)(a1 + 32) + 32LL) + 6584LL))( *(void *)(a1 + 40),  *(unsigned int *)(a1 + 56),  *(void *)(a1 + 48));
}

BOOL GPUTools::NameTargetTupleArray::querySpecificObjectList( id *this, void **a2, GPUTools::NameTargetTupleArray *a3)
{
  if (*a2) {
    free(*a2);
  }
  *a2 = 0LL;
  a2[1] = 0LL;
  BOOL v13 = 0LL;
  id v6 = [*this getParameter:a3 to:&v13];
  if (!v6)
  {
    GPUTools::NameTargetTupleArray::set((GPUTools::NameTargetTupleArray *)a2, (char *)v13);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = ___ZN8GPUTools20NameTargetTupleArray23querySpecificObjectListEP11ContextInfoPS0_j_block_invoke;
    void v12[3] = &__block_descriptor_40_e29_B16__0r__NameTargetTuple_II_8l;
    void v12[4] = this;
    GPUTools::NameTargetTupleArray::remove_if<BOOL({block_pointer})(GPUTools::NameTargetTuple const&)>( (unsigned int **)a2,  (uint64_t)v12);
    uint64_t v7 = (char *)a2[1];
    unint64_t v8 = *(unsigned int *)*a2;
    uint64_t v14 = &__block_literal_global_2;
    unint64_t v9 = 126 - 2 * __clz(v8);
    if ((_DWORD)v8) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0LL;
    }
    uint64_t v15 = &v7[8 * v8];
    unsigned int v16 = v7;
    std::__introsort<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>,false>( (uint64_t)&v16,  (uint64_t **)&v15,  (uint64_t *)&v14,  v10,  1);
  }

  return v6 == 0LL;
}

void GPUTools::NameTargetTupleArray::reset(GPUTools::NameTargetTupleArray *this)
{
  uint64_t v2 = *(void **)this;
  if (v2) {
    free(v2);
  }
  *(void *)this = 0LL;
  *((void *)this + std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this + 1) = 0LL;
}

void GPUTools::NameTargetTupleArray::set(GPUTools::NameTargetTupleArray *this, char *a2)
{
  if (a2)
  {
    uint64_t v4 = *(void **)this;
    if (*(void *)this) {
      free(v4);
    }
    *(void *)this = a2;
    *((void *)this + std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this + 1) = a2 + 4;
  }

  else
  {
    GPUTools::NameTargetTupleArray::allocate((void **)this, 0);
  }

uint64_t GPUTools::NameTargetTupleArray::remove_if<BOOL({block_pointer})(GPUTools::NameTargetTuple const&)>( unsigned int **a1, uint64_t a2)
{
  unint64_t v3 = *a1;
  id v6 = a1[1];
  unint64_t v5 = &v6[2 * *v3];
  uint64_t result = std::remove_if[abi:ne180100]<GPUTools::array_iterator<GPUTools::NameTargetTuple>,BOOL({block_pointer})(GPUTools::NameTargetTuple const&)>( (uint64_t)&v6,  &v5,  a2,  &v7);
  **a1 = (unint64_t)(v7 - (void)a1[1]) >> 3;
  return result;
}

BOOL ___ZN8GPUTools20NameTargetTupleArray23querySpecificObjectListEP11ContextInfoPS0_j_block_invoke( uint64_t a1, uint64_t a2)
{
  return IsInterposeGLObject(*(void *)(*(void *)(a1 + 32) + 40LL), *(_DWORD *)(a2 + 4), *(_DWORD *)a2);
}

BOOL ___ZN8GPUTools20NameTargetTupleArray23querySpecificObjectListEP11ContextInfoPS0_j_block_invoke_2( id a1, const NameTargetTuple *a2, const NameTargetTuple *a3)
{
  return a2->var0 < a3->var0;
}

void GPUTools::NameTargetTupleArray::allocate(void **this, unsigned int a2)
{
  uint64_t v4 = malloc((8LL * a2) | 4);
  if (!v4) {
    __assert_rtn("void GPUTools::NameTargetTupleArray::allocate(uint32_t)", (const char *)&unk_1F0B16, 0, "buffer");
  }
  unint64_t v5 = v4;
  *uint64_t v4 = a2;
  if (*this) {
    free(*this);
  }
  *this = v5;
  this[1] = v5 + 1;
}

NSData *GPUTools::NameTargetTupleArray::gut(GPUTools::NameTargetTupleArray *this)
{
  uint64_t v2 = -[NSData initWithBytesNoCopy:length:freeWhenDone:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithBytesNoCopy:length:freeWhenDone:",  *(void *)this,  (8LL * **(unsigned int **)this) | 4,  1LL);
  *(void *)this = 0LL;
  *((void *)this + std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this + 1) = 0LL;
  return v2;
}

void GPUTools::NameTargetTupleArray::split( GPUTools::NameTargetTupleArray *this, int a2, void **a3, void **a4)
{
  if (*(void *)this) {
    BOOL v4 = ((unint64_t)a3 | (unint64_t)a4) == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    uint64_t v7 = **(unsigned int **)this;
    if ((_DWORD)v7)
    {
      unsigned int v10 = 0;
      uint64_t v11 = (int *)(*((void *)this + 1) + 4LL);
      uint64_t v12 = 8 * v7;
      do
      {
        int v13 = *v11;
        v11 += 2;
        if (v13 == a2) {
          ++v10;
        }
        v12 -= 8LL;
      }

      while (v12);
      if (a3) {
        GPUTools::NameTargetTupleArray::allocate(a3, v10);
      }
      unsigned int v14 = **(_DWORD **)this;
      if (a4)
      {
        GPUTools::NameTargetTupleArray::allocate(a4, v14 - v10);
        unint64_t v15 = **(unsigned int **)this;
        if (a3)
        {
          if (**(_DWORD **)this)
          {
            unint64_t v16 = 0LL;
            unsigned int v17 = 0;
            unsigned int v18 = 0;
            uint64_t v19 = 4LL;
            do
            {
              uint64_t v20 = *((void *)this + 1);
              int v21 = *(_DWORD *)(v20 + v19);
              uint64_t v22 = *(void *)(v20 + 8 * v16);
              if (v21 == a2) {
                *((void *)a3[1] + v18++) = v22;
              }
              else {
                *((void *)a4[1] + v17++) = v22;
              }
              ++v16;
              v19 += 8LL;
            }

            while (v16 < **(unsigned int **)this);
          }
        }

        else if (**(_DWORD **)this)
        {
          unint64_t v27 = 0LL;
          unsigned int v28 = 0;
          uint64_t v29 = 4LL;
          do
          {
            uint64_t v30 = *((void *)this + 1);
            if (*(_DWORD *)(v30 + v29) != a2)
            {
              *((void *)a4[1] + v28++) = *(void *)(v30 + 8 * v27);
              unint64_t v15 = **(unsigned int **)this;
            }

            ++v27;
            v29 += 8LL;
          }

          while (v27 < v15);
        }
      }

      else if (v14)
      {
        unint64_t v23 = 0LL;
        unsigned int v24 = 0;
        uint64_t v25 = 4LL;
        do
        {
          uint64_t v26 = *((void *)this + 1);
          if (*(_DWORD *)(v26 + v25) == a2)
          {
            *((void *)a3[1] + v24++) = *(void *)(v26 + 8 * v23);
            unsigned int v14 = **(_DWORD **)this;
          }

          ++v23;
          v25 += 8LL;
        }

        while (v23 < v14);
      }
    }

    else
    {
      if (a3) {
        GPUTools::NameTargetTupleArray::allocate(a3, 0);
      }
      if (a4) {
        GPUTools::NameTargetTupleArray::allocate(a4, 0);
      }
    }
  }

unsigned int **GPUTools::NameTargetTupleArray::find@<X0>( unsigned int **this@<X0>, unsigned int a2@<W1>, unsigned int **a3@<X8>)
{
  unint64_t v3 = this[1];
  unint64_t v4 = **this;
  unint64_t v5 = &v3[2 * v4];
  if ((_DWORD)v4)
  {
    do
    {
      unint64_t v6 = v4 >> 1;
      uint64_t v7 = &v3[2 * (v4 >> 1)];
      unsigned int v9 = *v7;
      unint64_t v8 = v7 + 2;
      v4 += ~(v4 >> 1);
      if (v9 >= a2) {
        unint64_t v4 = v6;
      }
      else {
        unint64_t v3 = v8;
      }
    }

    while (v4);
  }

  if (v3 != v5 && *v3 == a2) {
    unint64_t v5 = v3;
  }
  *a3 = v5;
  return this;
}

uint64_t std::remove_if[abi:ne180100]<GPUTools::array_iterator<GPUTools::NameTargetTuple>,BOOL({block_pointer})(GPUTools::NameTargetTuple const&)>@<X0>( uint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  unint64_t v6 = (void *)result;
  unint64_t v8 = *(void **)result;
  unsigned int v9 = (void *)*a2;
  if (*(void *)result != *a2)
  {
    while (1)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, void *))(a3 + 16))(a3, v8);
      if ((result & 1) != 0) {
        break;
      }
      if (++v8 == v9)
      {
        unint64_t v8 = v9;
        break;
      }
    }
  }

  void *v6 = v8;
  unsigned int v10 = v8 + 1;
  if (v8 != (void *)*a2 && v10 != (void *)*a2)
  {
    do
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, void *))(a3 + 16))(a3, v10);
      if ((result & 1) == 0)
      {
        *(void *)void *v6 = *v10;
        *v6 += 8LL;
      }

      ++v10;
    }

    while (v10 != (void *)*a2);
    unint64_t v8 = (void *)*v6;
  }

  *a4 = v8;
  return result;
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>,false>( uint64_t result, uint64_t **a2, uint64_t *a3, uint64_t a4, char a5)
{
  unint64_t v8 = (uint64_t **)result;
  uint64_t v9 = a4 - 1;
  while (2)
  {
    unsigned int v10 = *a2;
    uint64_t v11 = *v8;
    uint64_t v12 = (char *)*a2 - (char *)*v8;
    unint64_t v13 = v12 >> 3;
    switch(v13)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        uint64_t v29 = *a3;
        *a2 = v10 - 1;
        uint64_t result = (*(uint64_t (**)(void))(v29 + 16))();
        if ((_DWORD)result)
        {
          uint64_t v30 = *a2;
          uint64_t v31 = **v8;
          *void *v8 = **a2;
          *uint64_t v30 = v31;
        }

        return result;
      case 3uLL:
        uint64_t v32 = v10 - 1;
        *a2 = v32;
        unsigned int v43 = v11;
        BOOL v68 = v32;
        id v69 = v11 + 1;
        return std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v43,  &v69,  &v68,  (uint64_t)a3);
      case 4uLL:
        uint64_t v33 = v10 - 1;
        *a2 = v33;
        unsigned int v43 = v11;
        BOOL v68 = v11 + 2;
        id v69 = v11 + 1;
        uint64_t v67 = v33;
        return std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v43,  &v69,  &v68,  &v67,  (uint64_t)a3);
      case 5uLL:
        uint64_t v34 = v10 - 1;
        *a2 = v34;
        unsigned int v43 = v11;
        BOOL v68 = v11 + 2;
        id v69 = v11 + 1;
        uint64_t v66 = v34;
        uint64_t v67 = v11 + 3;
        return std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v43,  &v69,  &v68,  &v67,  &v66,  (uint64_t)a3);
      default:
        if (v12 <= 191)
        {
          if ((a5 & 1) != 0)
          {
            v64 = *a2;
            unint64_t v65 = v11;
            return std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( (uint64_t)&v65,  &v64,  (uint64_t)a3);
          }

          else
          {
            uint64_t v62 = *a2;
            uint64_t v63 = v11;
            return std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( (uint64_t)&v63,  &v62,  (uint64_t)a3);
          }
        }

        if (v9 == -1)
        {
          if (v11 != v10)
          {
            unsigned int v43 = *v8;
            BOOL v68 = v10;
            id v69 = v10;
            return (uint64_t)std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>,GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v43,  &v69,  (char **)&v68,  a3,  (char **)&v67);
          }

          return result;
        }

        unint64_t v14 = v13 >> 1;
        unint64_t v15 = v10 - 1;
        if ((unint64_t)v12 < 0x401)
        {
          std::vector<unsigned int>::pointer v48 = *v8;
          std::vector<unsigned int>::pointer v49 = &v11[v14];
          BOOL v47 = v15;
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v49,  &v48,  &v47,  (uint64_t)a3);
          if ((a5 & 1) != 0) {
            goto LABEL_10;
          }
        }

        else
        {
          unint64_t v61 = *v8;
          v59 = v15;
          unint64_t v60 = &v11[v14];
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v61,  &v60,  &v59,  (uint64_t)a3);
          unint64_t v16 = *v8;
          unint64_t v58 = *v8 + 1;
          unint64_t v57 = &v16[v14 - 1];
          unint64_t v56 = *a2 - 2;
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v58,  &v57,  &v56,  (uint64_t)a3);
          unsigned int v17 = *v8 + 2;
          uint64_t v18 = 8 * v14 + 8;
          unint64_t v54 = (uint64_t *)((char *)*v8 + v18);
          uint64_t v55 = v17;
          uint64_t v53 = *a2 - 3;
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v55,  &v54,  &v53,  (uint64_t)a3);
          uint64_t v19 = *v8;
          uint64_t v52 = &(*v8)[v14 - 1];
          uint64_t v50 = (uint64_t *)((char *)v19 + v18);
          uint64_t v51 = &v19[v14];
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v52,  &v51,  &v50,  (uint64_t)a3);
          uint64_t v20 = *v8;
          uint64_t v21 = **v8;
          *uint64_t v20 = (*v8)[v14];
          v20[v14] = v21;
          if ((a5 & 1) != 0) {
            goto LABEL_10;
          }
        }

        if (((*(uint64_t (**)(void))(*a3 + 16))() & 1) == 0)
        {
          uint64_t v26 = *v8;
          uint64_t v45 = *a2;
          uint64_t v46 = v26;
          uint64_t result = std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,GPUTools::array_iterator<GPUTools::NameTargetTuple>,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&)>( (unint64_t *)&v46,  (unint64_t *)&v45,  (uint64_t)a3,  (unint64_t *)&v43);
          a5 = 0;
          unint64_t v27 = v43;
LABEL_18:
          void *v8 = v27;
          goto LABEL_19;
        }

uint64_t std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( uint64_t result, void *a2, uint64_t a3)
{
  unint64_t v3 = *(void **)result;
  uint64_t v4 = *(void *)result + 8LL;
  if (*(void *)result != *a2 && v4 != *a2)
  {
    unint64_t v8 = (void *)result;
    do
    {
      uint64_t v9 = (void *)v4;
      uint64_t result = (*(uint64_t (**)(void))(*(void *)a3 + 16LL))();
      if ((_DWORD)result)
      {
        uint64_t v11 = *v9;
        do
        {
          unsigned int v10 = v3;
          v3[1] = *v3;
          if (v3 == (void *)*v8) {
            break;
          }
          --v3;
          uint64_t result = (*(uint64_t (**)(void))(*(void *)a3 + 16LL))();
        }

        while ((result & 1) != 0);
        *unsigned int v10 = v11;
      }

      uint64_t v4 = (uint64_t)(v9 + 1);
      unint64_t v3 = v9;
    }

    while (v9 + 1 != (void *)*a2);
  }

  return result;
}

uint64_t std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( uint64_t result, uint64_t **a2, uint64_t a3)
{
  uint64_t v3 = *(void *)result + 8LL;
  if (*(uint64_t **)result != *a2 && v3 != (void)*a2)
  {
    uint64_t v7 = *(void *)result - 8LL;
    do
    {
      unint64_t v8 = (uint64_t *)v3;
      uint64_t result = (*(uint64_t (**)(void))(*(void *)a3 + 16LL))();
      if ((_DWORD)result)
      {
        uint64_t v10 = *v8;
        uint64_t v9 = v7;
        do
        {
          *(void *)(v9 + 16) = *(void *)(v9 + 8);
          uint64_t result = (*(uint64_t (**)(void))(*(void *)a3 + 16LL))();
          v9 -= 8LL;
        }

        while ((result & 1) != 0);
        *(void *)(v9 + 16) = v10;
      }

      uint64_t v3 = (uint64_t)(v8 + 1);
      v7 += 8LL;
    }

    while (v8 + 1 != *a2);
  }

  return result;
}

uint64_t std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t a4)
{
  char v8 = (*(uint64_t (**)(void))(*(void *)a4 + 16LL))();
  uint64_t result = (*(uint64_t (**)(void))(*(void *)a4 + 16LL))();
  if ((v8 & 1) == 0)
  {
    if (!(_DWORD)result) {
      return result;
    }
    unint64_t v13 = *a3;
    uint64_t v14 = **a2;
    **a2 = **a3;
    *unint64_t v13 = v14;
    unint64_t v15 = *a1;
    unint64_t v16 = *a2;
    goto LABEL_9;
  }

  uint64_t v10 = *a1;
  uint64_t v11 = **a1;
  if (!(_DWORD)result)
  {
    unsigned int v17 = *a2;
    *uint64_t v10 = **a2;
    *unsigned int v17 = v11;
    unint64_t v15 = *a2;
    unint64_t v16 = *a3;
LABEL_9:
    uint64_t v18 = *v15;
    *unint64_t v15 = *v16;
    *unint64_t v16 = v18;
    return 2LL;
  }

  uint64_t v12 = *a3;
  *uint64_t v10 = **a3;
  uint64_t *v12 = v11;
  return 1LL;
}

uint64_t std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,GPUTools::array_iterator<GPUTools::NameTargetTuple>,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&)>@<X0>( unint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  char v8 = (uint64_t *)*a1;
  uint64_t v15 = *(void *)*a1;
  uint64_t result = (*(uint64_t (**)(void))(*(void *)a3 + 16LL))();
  if ((result & 1) != 0)
  {
    do
    {
      *a1 += 8LL;
      uint64_t result = (*(uint64_t (**)(void))(*(void *)a3 + 16LL))();
    }

    while ((result & 1) == 0);
  }

  else
  {
    do
    {
      unint64_t v10 = *a1 + 8;
      *a1 = v10;
      if (v10 >= *a2) {
        break;
      }
      uint64_t result = (*(uint64_t (**)(void))(*(void *)a3 + 16LL))();
    }

    while (!(_DWORD)result);
  }

  uint64_t v11 = (uint64_t *)*a1;
  uint64_t v12 = (uint64_t *)*a2;
  if (*a1 >= *a2) {
    goto LABEL_9;
  }
  do
  {
    *a2 -= 8LL;
    uint64_t result = (*(uint64_t (**)(void))(*(void *)a3 + 16LL))();
  }

  while ((result & 1) != 0);
  while (1)
  {
    uint64_t v11 = (uint64_t *)*a1;
    uint64_t v12 = (uint64_t *)*a2;
LABEL_9:
    if (v11 >= v12) {
      break;
    }
    uint64_t v13 = *v11;
    *uint64_t v11 = *v12;
    uint64_t *v12 = v13;
    do
      *a1 += 8LL;
    while (!(*(unsigned int (**)(void))(*(void *)a3 + 16LL))());
    do
    {
      *a2 -= 8LL;
      uint64_t result = (*(uint64_t (**)(void))(*(void *)a3 + 16LL))();
    }

    while ((result & 1) != 0);
  }

  uint64_t v14 = v11 - 1;
  if (v8 != v14) {
    uint64_t *v8 = *v14;
  }
  uint64_t *v14 = v15;
  *a4 = *a1;
  return result;
}

uint64_t std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,GPUTools::array_iterator<GPUTools::NameTargetTuple>,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&)>@<X0>( uint64_t **a1@<X0>, uint64_t **a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  char v8 = *a1;
  uint64_t v17 = **a1;
  do
  {
    ++*a1;
    uint64_t result = (*(uint64_t (**)(void))(*a3 + 16))();
  }

  while ((result & 1) != 0);
  if (v8 == *a1 - 1)
  {
    do
    {
      if (*a1 >= *a2) {
        break;
      }
      uint64_t v10 = *a3;
      --*a2;
      uint64_t result = (*(uint64_t (**)(void))(v10 + 16))();
    }

    while ((result & 1) == 0);
  }

  else
  {
    do
    {
      --*a2;
      uint64_t result = (*(uint64_t (**)(void))(*a3 + 16))();
    }

    while (!(_DWORD)result);
  }

  uint64_t v11 = *a1;
  uint64_t v12 = *a2;
  if (*a1 >= *a2)
  {
    uint64_t v14 = *a1;
  }

  else
  {
    uint64_t v13 = *a2;
    uint64_t v14 = *a1;
    do
    {
      uint64_t v15 = *v14;
      uint64_t *v14 = *v13;
      *uint64_t v13 = v15;
      do
        ++*a1;
      while (((*(uint64_t (**)(void))(*a3 + 16))() & 1) != 0);
      do
      {
        --*a2;
        uint64_t result = (*(uint64_t (**)(void))(*a3 + 16))();
      }

      while (!(_DWORD)result);
      uint64_t v14 = *a1;
      uint64_t v13 = *a2;
    }

    while (*a1 < *a2);
  }

  unint64_t v16 = v14 - 1;
  if (v8 != v16) {
    uint64_t *v8 = *v16;
  }
  *unint64_t v16 = v17;
  *(void *)a4 = v16;
  *(_BYTE *)(a4 + _Block_object_dispose((const void *)(v28 - 80), 8) = v11 >= v12;
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( uint64_t **a1, uint64_t **a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  uint64_t v7 = *a1;
  uint64_t v8 = *a2 - *a1;
  BOOL result = 1LL;
  switch(v8)
  {
    case 0LL:
    case 1LL:
      return result;
    case 2LL:
      uint64_t v10 = *(void *)a3;
      *a2 = v6 - 1;
      if ((*(unsigned int (**)(void))(v10 + 16))())
      {
        uint64_t v11 = *a2;
        uint64_t v12 = **a1;
        **a1 = **a2;
        *uint64_t v11 = v12;
      }

      return 1LL;
    case 3LL:
      uint64_t v18 = v6 - 1;
      *a2 = v18;
      unsigned int v24 = v7 + 1;
      BOOL v25 = v7;
      unint64_t v23 = v18;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v25,  &v24,  &v23,  a3);
      return 1LL;
    case 4LL:
      uint64_t v20 = v6 - 1;
      *a2 = v20;
      unsigned int v24 = v7 + 1;
      BOOL v25 = v7;
      uint64_t v22 = v20;
      unint64_t v23 = v7 + 2;
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v25,  &v24,  &v23,  &v22,  a3);
      return 1LL;
    case 5LL:
      uint64_t v19 = v6 - 1;
      *a2 = v19;
      unsigned int v24 = v7 + 1;
      BOOL v25 = v7;
      uint64_t v22 = v7 + 3;
      unint64_t v23 = v7 + 2;
      uint64_t v21 = v19;
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v25,  &v24,  &v23,  &v22,  &v21,  a3);
      return 1LL;
    default:
      uint64_t v13 = (uint64_t **)(v7 + 2);
      unsigned int v24 = v7 + 1;
      BOOL v25 = v7;
      unint64_t v23 = v7 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v25,  &v24,  &v23,  a3);
      uint64_t v14 = (uint64_t **)(v7 + 3);
      if (v7 + 3 == *a2) {
        return 1LL;
      }
      int v15 = 0;
      break;
  }

  while (1)
  {
    unint64_t v16 = v14;
    if ((*(unsigned int (**)(void))(*(void *)a3 + 16LL))())
    {
      BOOL v25 = *v16;
      do
      {
        uint64_t v17 = v13;
        v13[1] = *v13;
        --v13;
      }

      while (((*(uint64_t (**)(void))(*(void *)a3 + 16LL))() & 1) != 0);
      *uint64_t v17 = v25;
      if (++v15 == 8) {
        break;
      }
    }

    uint64_t v14 = v16 + 1;
    uint64_t v13 = v16;
  }

  return v16 + 1 == (uint64_t **)*a2;
}

uint64_t std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, uint64_t a5)
{
  uint64_t v10 = *a1;
  uint64_t v19 = *a2;
  uint64_t v20 = v10;
  uint64_t v18 = *a3;
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v20,  &v19,  &v18,  a5);
  uint64_t result = (*(uint64_t (**)(void))(*(void *)a5 + 16LL))();
  if ((_DWORD)result)
  {
    uint64_t v12 = *a4;
    uint64_t v13 = **a3;
    **a3 = **a4;
    uint64_t *v12 = v13;
    uint64_t result = (*(uint64_t (**)(void))(*(void *)a5 + 16LL))();
    if ((_DWORD)result)
    {
      uint64_t v14 = *a3;
      uint64_t v15 = **a2;
      **a2 = **a3;
      uint64_t *v14 = v15;
      uint64_t result = (*(uint64_t (**)(void))(*(void *)a5 + 16LL))();
      if ((_DWORD)result)
      {
        unint64_t v16 = *a2;
        uint64_t v17 = **a1;
        **a1 = **a2;
        *unint64_t v16 = v17;
      }
    }
  }

  return result;
}

uint64_t std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, uint64_t **a5, uint64_t a6)
{
  uint64_t v12 = *a1;
  BOOL v25 = *a2;
  uint64_t v26 = v12;
  uint64_t v13 = *a3;
  unint64_t v23 = *a4;
  unsigned int v24 = v13;
  std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v26,  &v25,  &v24,  &v23,  a6);
  uint64_t result = (*(uint64_t (**)(void))(*(void *)a6 + 16LL))();
  if ((_DWORD)result)
  {
    uint64_t v15 = *a5;
    uint64_t v16 = **a4;
    **a4 = **a5;
    *uint64_t v15 = v16;
    uint64_t result = (*(uint64_t (**)(void))(*(void *)a6 + 16LL))();
    if ((_DWORD)result)
    {
      uint64_t v17 = *a4;
      uint64_t v18 = **a3;
      **a3 = **a4;
      *uint64_t v17 = v18;
      uint64_t result = (*(uint64_t (**)(void))(*(void *)a6 + 16LL))();
      if ((_DWORD)result)
      {
        uint64_t v19 = *a3;
        uint64_t v20 = **a2;
        **a2 = **a3;
        *uint64_t v19 = v20;
        uint64_t result = (*(uint64_t (**)(void))(*(void *)a6 + 16LL))();
        if ((_DWORD)result)
        {
          uint64_t v21 = *a2;
          uint64_t v22 = **a1;
          **a1 = **a2;
          *uint64_t v21 = v22;
        }
      }
    }
  }

  return result;
}

uint64_t **std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>,GPUTools::array_iterator<GPUTools::NameTargetTuple>>@<X0>( uint64_t **result@<X0>, uint64_t **a2@<X1>, char **a3@<X2>, uint64_t *a4@<X3>, char **a5@<X8>)
{
  uint64_t v7 = *result;
  uint64_t v8 = (char *)*a2;
  if (*result == *a2)
  {
    *a5 = *a3;
  }

  else
  {
    uint64_t v11 = result;
    uint64_t v12 = v8 - (char *)v7;
    uint64_t v13 = (v8 - (char *)v7) >> 3;
    if (v8 - (char *)v7 >= 9)
    {
      unint64_t v14 = (unint64_t)(v13 - 2) >> 1;
      unint64_t v15 = v14 + 1;
      uint64_t v16 = &v7[v14];
      do
      {
        unint64_t v27 = v16;
        unsigned int v28 = v7;
        uint64_t result = (uint64_t **)std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( (uint64_t)&v28,  (uint64_t)a4,  v13,  &v27);
        --v16;
        --v15;
      }

      while (v15);
      uint64_t v8 = (char *)*a2;
      uint64_t v7 = *v11;
      uint64_t v12 = (char *)*a2 - (char *)*v11;
      uint64_t v13 = v12 >> 3;
    }

    *a5 = v8;
    if (v8 != *a3)
    {
      do
      {
        uint64_t result = (uint64_t **)(*(uint64_t (**)(void))(*a4 + 16))();
        if ((_DWORD)result)
        {
          uint64_t v17 = *v11;
          uint64_t v18 = *(void *)v8;
          *(void *)uint64_t v8 = **v11;
          *uint64_t v17 = v18;
          unint64_t v23 = *v11;
          unsigned int v24 = v23;
          uint64_t result = (uint64_t **)std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( (uint64_t)&v24,  (uint64_t)a4,  v13,  &v23);
        }

        v8 += 8;
        *a5 = v8;
      }

      while (v8 != *a3);
      uint64_t v7 = *v11;
      uint64_t v8 = (char *)*a2;
      uint64_t v12 = (char *)*a2 - (char *)*v11;
    }

    if (v12 >= 9)
    {
      uint64_t v19 = (unint64_t)v12 >> 3;
      uint64_t v20 = (uint64_t *)(v8 - 8);
      do
      {
        uint64_t v21 = *v7;
        unint64_t v27 = v7;
        uint64_t result = std::__floyd_sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( &v27,  (uint64_t)a4,  v19,  &v28);
        if (v20 == v28)
        {
          *uint64_t v20 = v21;
        }

        else
        {
          *v28++ = *v20;
          *uint64_t v20 = v21;
          BOOL v25 = v28;
          uint64_t v26 = v7;
          uint64_t result = (uint64_t **)std::__sift_up[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( (uint64_t)&v26,  &v25,  a4,  v28 - v7);
        }

        --v20;
      }

      while (v19-- > 2);
    }
  }

  return result;
}

uint64_t std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( uint64_t result, uint64_t a2, uint64_t a3, uint64_t **a4)
{
  unint64_t v4 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v7 = (void *)result;
    uint64_t v8 = (uint64_t)*a4 - *(void *)result;
    uint64_t v9 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= v8 >> 3)
    {
      uint64_t v11 = (v8 >> 2) | 1;
      uint64_t v12 = (uint64_t *)(*(void *)result + 8 * v11);
      uint64_t v13 = (v8 >> 2) + 2;
      if (v13 < a3 && (*(unsigned int (**)(void))(*(void *)a2 + 16LL))())
      {
        ++v12;
        uint64_t v11 = v13;
      }

      uint64_t result = (*(uint64_t (**)(void))(*(void *)a2 + 16LL))();
      if ((result & 1) == 0)
      {
        uint64_t v16 = **a4;
        while (1)
        {
          **a4 = *v12;
          *a4 = v12;
          if (v9 < v11) {
            break;
          }
          uint64_t v14 = (2 * v11) | 1;
          uint64_t v12 = (uint64_t *)(*v7 + 8 * v14);
          uint64_t v15 = 2 * v11 + 2;
          if (v15 < a3)
          {
            if ((*(unsigned int (**)(void))(*(void *)a2 + 16LL))())
            {
              ++v12;
              uint64_t v14 = v15;
            }
          }

          uint64_t result = (*(uint64_t (**)(void))(*(void *)a2 + 16LL))();
          uint64_t v11 = v14;
          if ((_DWORD)result)
          {
            uint64_t v12 = *a4;
            break;
          }
        }

        uint64_t *v12 = v16;
      }
    }
  }

  return result;
}

void **std::__floyd_sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>@<X0>( void **result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = 0LL;
  uint64_t v8 = *result;
  *a4 = *result;
  uint64_t v9 = a3 - 2;
  if (a3 < 2) {
    uint64_t v9 = a3 - 1;
  }
  uint64_t v10 = v9 >> 1;
  do
  {
    uint64_t v11 = &v8[v7 + 1];
    uint64_t v12 = (2 * v7) | 1;
    uint64_t v13 = 2 * v7 + 2;
    if (v13 < a3)
    {
      uint64_t result = (void **)(*(uint64_t (**)(void))(*(void *)a2 + 16LL))();
      if ((_DWORD)result)
      {
        ++v11;
        uint64_t v12 = v13;
      }

      uint64_t v8 = (void *)*a4;
    }

    void *v8 = *v11;
    *a4 = v11;
    uint64_t v8 = v11;
    uint64_t v7 = v12;
  }

  while (v12 <= v10);
  return result;
}

uint64_t std::__sift_up[abi:ne180100]<std::_ClassicAlgPolicy,BOOL({block_pointer}&)(GPUTools::NameTargetTuple const&,GPUTools::NameTargetTuple const&),GPUTools::array_iterator<GPUTools::NameTargetTuple>>( uint64_t result, uint64_t **a2, uint64_t *a3, uint64_t a4)
{
  unint64_t v6 = a4 - 2;
  if (a4 >= 2)
  {
    uint64_t v14 = v4;
    uint64_t v15 = v5;
    uint64_t v9 = (void *)result;
    unint64_t v10 = v6 >> 1;
    uint64_t v11 = (uint64_t *)(*(void *)result + 8 * (v6 >> 1));
    uint64_t v12 = *a3;
    --*a2;
    uint64_t result = (*(uint64_t (**)(void))(v12 + 16))();
    if ((_DWORD)result)
    {
      uint64_t v13 = **a2;
      while (1)
      {
        **a2 = *v11;
        *a2 = v11;
        if (!v10) {
          break;
        }
        unint64_t v10 = (v10 - 1) >> 1;
        uint64_t v11 = (uint64_t *)(*v9 + 8 * v10);
        uint64_t result = (*(uint64_t (**)(void))(*a3 + 16))();
        if ((result & 1) == 0)
        {
          uint64_t v11 = *a2;
          break;
        }
      }

      *uint64_t v11 = v13;
    }
  }

  return result;
}

void operator delete[](void *__p)
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void *__cdecl operator new[](size_t __sz)
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

id objc_msgSend_initWithIdentifier_sharegroupIdentifier_renderers_currentRendererIndex_api_( void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithIdentifier:sharegroupIdentifier:renderers:currentRendererIndex:api:");
}

id objc_msgSend_waitOnGraphicsSemaphoreAssertions(void *a1, const char *a2, ...)
{
  return [a1 waitOnGraphicsSemaphoreAssertions];
}